property bDebug, bInitialized, bReadyForuse, foPossessionManager, fo_level0, ERROR_TYPE, bPendingPurchase
global oPossessionManager, oDenizenManager, ElementMgr, gbTestMode, gFeatureSet

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 544 .......................... me.bPendingPurchase = 0
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 85 ........................... me.bDebug = 0
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] setobjprop 86 ........................... me.bInitialized = 0
  [ 16] getparam 0 .............................. <me>
  [ 18] pushzero ................................ <0>
  [ 19] setobjprop 87 ........................... me.bReadyForuse = 0
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 0 .............................. <"FlashReturnStatusEnum">
  [ 25] setobjprop 88 ........................... me.ERROR_TYPE = "FlashReturnStatusEnum"
  [ 27] getparam 0 .............................. <me>
  [ 29] setglobal 227 ........................... oPossessionManager = me
  [ 31] pushcons 1 .............................. <"_TIMER_">
  [ 33] pusharglist 1 ........................... <"_TIMER_">
  [ 35] extcall 101 ............................. <script("_TIMER_")>
  [ 37] pushint16 700 ........................... <700>
  [ 40] pushsymb 1 .............................. <#init>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 4 ...................... <script("_TIMER_"), 700, #init, me>
  [ 46] objcall 99 .............................. script("_TIMER_").new(700, #init, me)
  [ 48] ret
end

on init me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 2 .............................. <"init()">
  [  4] pusharglistnoret 2 ...................... <me, "init()">
  [  6] objcall 4 ............................... me.debug("init()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 104 .......................... <me.spriteNum>
  [ 14] pusharglist 1 ........................... <me.spriteNum>
  [ 16] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 18] pushcons 3 .............................. <"_level0.oPosessionManager">
  [ 20] pushzero ................................ <0>
  [ 21] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oPosessionManager", 0>
  [ 23] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0.oPosessionManager", 0)>
  [ 25] setobjprop 545 .......................... me.foPossessionManager = sprite(me.spriteNum).getVariable("_level0.oPosessionManager", 0)
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglistnoret 1 ...................... <me>
  [ 32] objcall 2 ............................... me.setCallbacks()
  [ 34] getparam 0 .............................. <me>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 104 .......................... <me.spriteNum>
  [ 40] pusharglist 1 ........................... <me.spriteNum>
  [ 42] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 44] pushcons 4 .............................. <"_level0">
  [ 46] pushzero ................................ <0>
  [ 47] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0", 0>
  [ 49] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0", 0)>
  [ 51] setobjprop 109 .......................... me.fo_level0 = sprite(me.spriteNum).getVariable("_level0", 0)
  [ 53] getparam 0 .............................. <me>
  [ 55] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 58] pushzero ................................ <0>
  [ 59] setobjprop 85 ........................... me.foPossessionManager.bDebug = 0
  [ 61] getparam 0 .............................. <me>
  [ 63] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 66] pushzero ................................ <0>
  [ 67] setobjprop 110 .......................... me.foPossessionManager.bTestMode = 0
  [ 69] getmovieprop 111 ........................ <the runMode>
  [ 71] pushcons 5 .............................. <"Author">
  [ 73] eq ...................................... <the runMode = "Author">
  [ 74] jmpifz [ 86] ............................ if the runMode = "Author" then / else
  [ 77] getparam 0 .............................. <me>
  [ 79] pushint8 1 .............................. <1>
  [ 81] setobjprop 87 ........................... me.bReadyForuse = 1
  [ 83] jmp [103]
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 91] getparam 0 .............................. <me>
  [ 93] getchainedprop 109 ...................... <me.fo_level0>
  [ 95] pusharglist 1 ........................... <me.fo_level0>
  [ 97] objcall 112 ............................. <me.fo_level0.getGatewayConnection()>
  [ 99] pusharglistnoret 2 ...................... <me.foPossessionManager, me.fo_level0.getGatewayConnection()>
  [101] objcall 113 ............................. me.foPossessionManager.createGateway(me.fo_level0.getGatewayConnection())
  [103] getparam 0 .............................. <me>
  [105] pushint8 1 .............................. <1>
  [107] setobjprop 86 ........................... me.bInitialized = 1
  [109] ret
end

on beanCreated me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 6 .............................. <"beanCreated()">
  [  4] pusharglistnoret 2 ...................... <me, "beanCreated()">
  [  6] objcall 4 ............................... me.debug("beanCreated()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 87 ........................... me.bReadyForuse = 1
  [ 14] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 545 .......................... <me.foPossessionManager>
  [ 13] pushcons 7 .............................. <"beanCreated">
  [ 15] pushsymb 3 .............................. <#beanCreated>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "beanCreated", #beanCreated, me>
  [ 21] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "beanCreated", #beanCreated, me)
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 104 .......................... <me.spriteNum>
  [ 27] pusharglist 1 ........................... <me.spriteNum>
  [ 29] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 545 .......................... <me.foPossessionManager>
  [ 36] pushcons 8 .............................. <"getPossessionsInBackpack_Result">
  [ 38] pushsymb 533 ............................ <#getPossessionsInBackpack_Result>
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "getPossessionsInBackpack_Result", #getPossessionsInBackpack_Result, me>
  [ 45] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "getPossessionsInBackpack_Result", #getPossessionsInBackpack_Result, me)
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 104 .......................... <me.spriteNum>
  [ 51] pusharglist 1 ........................... <me.spriteNum>
  [ 53] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 545 .......................... <me.foPossessionManager>
  [ 60] pushcons 9 .............................. <"getPossessionsInStudio_Result">
  [ 62] pushsymb 534 ............................ <#getPossessionsInStudio_Result>
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "getPossessionsInStudio_Result", #getPossessionsInStudio_Result, me>
  [ 69] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "getPossessionsInStudio_Result", #getPossessionsInStudio_Result, me)
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 104 .......................... <me.spriteNum>
  [ 75] pusharglist 1 ........................... <me.spriteNum>
  [ 77] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 545 .......................... <me.foPossessionManager>
  [ 84] pushcons 10 ............................. <"purchaseItem_Result">
  [ 86] pushsymb 535 ............................ <#purchaseItem_Result>
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "purchaseItem_Result", #purchaseItem_Result, me>
  [ 93] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "purchaseItem_Result", #purchaseItem_Result, me)
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 104 .......................... <me.spriteNum>
  [ 99] pusharglist 1 ........................... <me.spriteNum>
  [101] extcall 103 ............................. <sprite(me.spriteNum)>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 545 .......................... <me.foPossessionManager>
  [108] pushcons 11 ............................. <"prePurchaseItem_Result">
  [110] pushsymb 536 ............................ <#prePurchaseItem_Result>
  [113] getparam 0 .............................. <me>
  [115] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "prePurchaseItem_Result", #prePurchaseItem_Result, me>
  [117] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "prePurchaseItem_Result", #prePurchaseItem_Result, me)
  [119] getparam 0 .............................. <me>
  [121] getobjprop 104 .......................... <me.spriteNum>
  [123] pusharglist 1 ........................... <me.spriteNum>
  [125] extcall 103 ............................. <sprite(me.spriteNum)>
  [127] getparam 0 .............................. <me>
  [129] getobjprop 545 .......................... <me.foPossessionManager>
  [132] pushcons 12 ............................. <"dispenseItem_Result">
  [134] pushsymb 537 ............................ <#dispenseItem_Result>
  [137] getparam 0 .............................. <me>
  [139] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "dispenseItem_Result", #dispenseItem_Result, me>
  [141] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "dispenseItem_Result", #dispenseItem_Result, me)
  [143] getparam 0 .............................. <me>
  [145] getobjprop 104 .......................... <me.spriteNum>
  [147] pusharglist 1 ........................... <me.spriteNum>
  [149] extcall 103 ............................. <sprite(me.spriteNum)>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 545 .......................... <me.foPossessionManager>
  [156] pushcons 13 ............................. <"getBurnedCdsInBackpack_Result">
  [158] pushsymb 538 ............................ <#getBurnedCdsInBackpack_Result>
  [161] getparam 0 .............................. <me>
  [163] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "getBurnedCdsInBackpack_Result", #getBurnedCdsInBackpack_Result, me>
  [165] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "getBurnedCdsInBackpack_Result", #getBurnedCdsInBackpack_Result, me)
  [167] getparam 0 .............................. <me>
  [169] getobjprop 104 .......................... <me.spriteNum>
  [171] pusharglist 1 ........................... <me.spriteNum>
  [173] extcall 103 ............................. <sprite(me.spriteNum)>
  [175] getparam 0 .............................. <me>
  [177] getobjprop 545 .......................... <me.foPossessionManager>
  [180] pushcons 14 ............................. <"getBackPack_Result">
  [182] pushsymb 523 ............................ <#getBackPack_Result>
  [185] getparam 0 .............................. <me>
  [187] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "getBackPack_Result", #getBackPack_Result, me>
  [189] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "getBackPack_Result", #getBackPack_Result, me)
  [191] getparam 0 .............................. <me>
  [193] getobjprop 104 .......................... <me.spriteNum>
  [195] pusharglist 1 ........................... <me.spriteNum>
  [197] extcall 103 ............................. <sprite(me.spriteNum)>
  [199] getparam 0 .............................. <me>
  [201] getobjprop 545 .......................... <me.foPossessionManager>
  [204] pushcons 15 ............................. <"getPossessionList_Result">
  [206] pushsymb 525 ............................ <#getPossessionList_Result>
  [209] getparam 0 .............................. <me>
  [211] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foPossessionManager, "getPossessionList_Result", #getPossessionList_Result, me>
  [213] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foPossessionManager, "getPossessionList_Result", #getPossessionList_Result, me)
  [215] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 85 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 16 ............................. <"PossessionManager: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"PossessionManager: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"PossessionManager: " & sMessage>
  [ 17] extcall 118 ............................. put "PossessionManager: " & sMessage
  [ 19] ret
end

on getBackpack me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 17 ............................. <"getBackPack()">
  [  4] pusharglistnoret 2 ...................... <me, "getBackPack()">
  [  6] objcall 4 ............................... me.debug("getBackPack()")
  [  8] getglobal 168 ........................... <gFeatureSet>
  [ 10] pushsymb 546 ............................ <#BACKPACK>
  [ 13] pusharglist 2 ........................... <gFeatureSet, #BACKPACK>
  [ 15] objcall 170 ............................. <gFeatureSet.isEnabled(#BACKPACK)>
  [ 17] not ..................................... <not gFeatureSet.isEnabled(#BACKPACK)>
  [ 18] jmpifz [ 25] ............................ if not gFeatureSet.isEnabled(#BACKPACK) then
  [ 21] pusharglistnoret 0 ...................... <>
  [ 23] extcall 121 ............................. return 
  [ 25] getparam 0 .............................. <me>
  [ 27] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 30] getglobal 97 ............................ <oDenizenManager>
  [ 32] pusharglist 1 ........................... <oDenizenManager>
  [ 34] objcall 52 .............................. <oDenizenManager.getScreenName()>
  [ 36] getglobal 97 ............................ <oDenizenManager>
  [ 38] pusharglist 1 ........................... <oDenizenManager>
  [ 40] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 42] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 44] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 46] pusharglistnoret 3 ...................... <me.foPossessionManager, oDenizenManager.getScreenName(), oDenizenManager.getDenizen().getSecret()>
  [ 48] objcall 65 .............................. me.foPossessionManager.getBackpack(oDenizenManager.getScreenName(), oDenizenManager.getDenizen().getSecret())
  [ 50] ret
end

on getBackPack_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 18 ............................. <"getPackPack_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getPackPack_Result()">
  [  6] objcall 4 ............................... me.debug("getPackPack_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] extcall 135 ............................. <voidp(oResult)>
  [ 14] jmpifz [ 29] ............................ if voidp(oResult) then
  [ 17] getparam 0 .............................. <me>
  [ 19] pushcons 19 ............................. <"ERROR ON RESULT FOR BACKPACK">
  [ 21] pusharglistnoret 2 ...................... <me, "ERROR ON RESULT FOR BACKPACK">
  [ 23] objcall 4 ............................... me.debug("ERROR ON RESULT FOR BACKPACK")
  [ 25] pusharglistnoret 0 ...................... <>
  [ 27] extcall 121 ............................. return 
  [ 29] getparam 2 .............................. <oResult>
  [ 31] pusharglist 1 ........................... <oResult>
  [ 33] objcall 223 ............................. <oResult.getTypeOf()>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 39] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 40] jmpifz [ 66] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 43] getparam 2 .............................. <oResult>
  [ 45] pusharglist 1 ........................... <oResult>
  [ 47] objcall 224 ............................. <oResult.getOrdinal()>
  [ 49] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 51] getparam 0 .............................. <me>
  [ 53] pushcons 20 ............................. <"getBackPack_Result() ERROR ">
  [ 55] getlocal 0 .............................. <iError>
  [ 57] joinstr ................................. <"getBackPack_Result() ERROR " & iError>
  [ 58] pusharglistnoret 2 ...................... <me, "getBackPack_Result() ERROR " & iError>
  [ 60] objcall 4 ............................... me.debug("getBackPack_Result() ERROR " & iError)
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 121 ............................. return 
  [ 66] getglobal 97 ............................ <oDenizenManager>
  [ 68] getparam 2 .............................. <oResult>
  [ 70] pusharglistnoret 2 ...................... <oDenizenManager, oResult>
  [ 72] objcall 66 .............................. oDenizenManager.setBackPack(oResult)
  [ 74] getparam 0 .............................. <me>
  [ 76] getglobal 97 ............................ <oDenizenManager>
  [ 78] pusharglist 1 ........................... <oDenizenManager>
  [ 80] objcall 52 .............................. <oDenizenManager.getScreenName()>
  [ 82] pushint8 1 .............................. <1>
  [ 84] pushint8 25 ............................. <25>
  [ 86] pusharglistnoret 4 ...................... <me, oDenizenManager.getScreenName(), 1, 25>
  [ 88] objcall 526 ............................. me.getPossessionsInBackpack(oDenizenManager.getScreenName(), 1, 25)
  [ 91] getparam 0 .............................. <me>
  [ 93] pushcons 21 ............................. <"** BACKPACK: ">
  [ 95] getparam 2 .............................. <oResult>
  [ 97] pusharglist 1 ........................... <oResult>
  [ 99] objcall 547 ............................. <oResult.getPossessionIDs()>
  [102] pusharglist 1 ........................... <oResult.getPossessionIDs()>
  [104] objcall 202 ............................. <oResult.getPossessionIDs().toString()>
  [106] joinstr ................................. <"** BACKPACK: " & oResult.getPossessionIDs().toString()>
  [107] pusharglistnoret 2 ...................... <me, "** BACKPACK: " & oResult.getPossessionIDs().toString()>
  [109] objcall 4 ............................... me.debug("** BACKPACK: " & oResult.getPossessionIDs().toString())
  [111] ret
end

on getPossessionList me, aIDs
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 22 ............................. <"getPossessionList() ">
  [  4] getparam 1 .............................. <aIDs>
  [  6] getobjprop 240 .......................... <aIDs.length>
  [  8] joinstr ................................. <"getPossessionList() " & aIDs.length>
  [  9] pushcons 23 ............................. <": ">
  [ 11] joinstr ................................. <"getPossessionList() " & aIDs.length & ": ">
  [ 12] getparam 1 .............................. <aIDs>
  [ 14] pusharglist 1 ........................... <aIDs>
  [ 16] objcall 202 ............................. <aIDs.toString()>
  [ 18] joinstr ................................. <"getPossessionList() " & aIDs.length & ": " & aIDs.toString()>
  [ 19] pusharglistnoret 2 ...................... <me, "getPossessionList() " & aIDs.length & ": " & aIDs.toString()>
  [ 21] objcall 4 ............................... me.debug("getPossessionList() " & aIDs.length & ": " & aIDs.toString())
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 28] getglobal 97 ............................ <oDenizenManager>
  [ 30] pusharglist 1 ........................... <oDenizenManager>
  [ 32] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 34] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 36] objcall 52 .............................. <oDenizenManager.getDenizen().getScreenName()>
  [ 38] getglobal 97 ............................ <oDenizenManager>
  [ 40] pusharglist 1 ........................... <oDenizenManager>
  [ 42] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 44] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 46] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 48] getparam 1 .............................. <aIDs>
  [ 50] pusharglistnoret 4 ...................... <me.foPossessionManager, oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), aIDs>
  [ 52] objcall 524 ............................. me.foPossessionManager.getPossessionList(oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), aIDs)
  [ 55] ret
end

on getPossessionList_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 24 ............................. <"getPossessionList_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getPossessionList_Result()">
  [  6] objcall 4 ............................... me.debug("getPossessionList_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] extcall 135 ............................. <voidp(oResult)>
  [ 14] jmpifz [ 29] ............................ if voidp(oResult) then
  [ 17] getparam 0 .............................. <me>
  [ 19] pushcons 25 ............................. <"ERROR ON RESULT FOR getPossessionList_Result">
  [ 21] pusharglistnoret 2 ...................... <me, "ERROR ON RESULT FOR getPossessionList_Result">
  [ 23] objcall 4 ............................... me.debug("ERROR ON RESULT FOR getPossessionList_Result")
  [ 25] pusharglistnoret 0 ...................... <>
  [ 27] extcall 121 ............................. return 
  [ 29] getglobal 97 ............................ <oDenizenManager>
  [ 31] pusharglist 1 ........................... <oDenizenManager>
  [ 33] objcall 65 .............................. <oDenizenManager.getBackpack()>
  [ 35] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 37] getlocal 0 .............................. <oBackPack>
  [ 39] pusharglist 1 ........................... <oBackPack>
  [ 41] extcall 135 ............................. <voidp(oBackPack)>
  [ 43] jmpifz [ 50] ............................ if voidp(oBackPack) then
  [ 46] pusharglistnoret 0 ...................... <>
  [ 48] extcall 121 ............................. return 
  [ 50] getparam 0 .............................. <me>
  [ 52] pushcons 26 ............................. <"getPossessionList_Result() COUNT: ">
  [ 54] getparam 2 .............................. <oResult>
  [ 56] getobjprop 240 .......................... <oResult.length>
  [ 58] joinstr ................................. <"getPossessionList_Result() COUNT: " & oResult.length>
  [ 59] pusharglistnoret 2 ...................... <me, "getPossessionList_Result() COUNT: " & oResult.length>
  [ 61] objcall 4 ............................... me.debug("getPossessionList_Result() COUNT: " & oResult.length)
  [ 63] getglobal 97 ............................ <oDenizenManager>
  [ 65] pusharglist 1 ........................... <oDenizenManager>
  [ 67] objcall 65 .............................. <oDenizenManager.getBackpack()>
  [ 69] getparam 2 .............................. <oResult>
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 3 ...................... <oDenizenManager.getBackpack(), oResult, 0>
  [ 74] objcall 549 ............................. oDenizenManager.getBackpack().addPossessions(oResult, 0)
  [ 77] getparam 0 .............................. <me>
  [ 79] pusharglist 0 ........................... <>
  [ 81] extcall 91 .............................. <VOID>
  [ 83] getlocal 0 .............................. <oBackPack>
  [ 85] pusharglistnoret 3 ...................... <me, VOID, oBackPack>
  [ 87] objcall 533 ............................. me.getPossessionsInBackpack_Result(VOID, oBackPack)
  [ 90] ret
end

on getPossessionsInBackpack me, sScreenName, iPage, iPageSize
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 27 ............................. <"getPossessionsInBackpack() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getPossessionsInBackpack() " & sScreenName>
  [  7] getparam 2 .............................. <iPage>
  [  9] joinpadstr .............................. <"getPossessionsInBackpack() " & sScreenName && iPage>
  [ 10] getparam 3 .............................. <iPageSize>
  [ 12] joinpadstr .............................. <"getPossessionsInBackpack() " & sScreenName && iPage && iPageSize>
  [ 13] pusharglistnoret 2 ...................... <me, "getPossessionsInBackpack() " & sScreenName && iPage && iPageSize>
  [ 15] objcall 4 ............................... me.debug("getPossessionsInBackpack() " & sScreenName && iPage && iPageSize)
  [ 17] getparam 2 .............................. <iPage>
  [ 19] pusharglist 1 ........................... <iPage>
  [ 21] extcall 135 ............................. <voidp(iPage)>
  [ 23] jmpifz [ 30] ............................ if voidp(iPage) then
  [ 26] pushint8 1 .............................. <1>
  [ 28] setparam 2 .............................. iPage = 1
  [ 30] getparam 3 .............................. <iPageSize>
  [ 32] pusharglist 1 ........................... <iPageSize>
  [ 34] extcall 135 ............................. <voidp(iPageSize)>
  [ 36] jmpifz [ 43] ............................ if voidp(iPageSize) then
  [ 39] pushint8 25 ............................. <25>
  [ 41] setparam 3 .............................. iPageSize = 25
  [ 43] getglobal 97 ............................ <oDenizenManager>
  [ 45] pusharglist 1 ........................... <oDenizenManager>
  [ 47] objcall 65 .............................. <oDenizenManager.getBackpack()>
  [ 49] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 51] getlocal 0 .............................. <oBackPack>
  [ 53] pusharglist 1 ........................... <oBackPack>
  [ 55] extcall 135 ............................. <voidp(oBackPack)>
  [ 57] jmpifz [ 64] ............................ if voidp(oBackPack) then
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] getlocal 0 .............................. <oBackPack>
  [ 66] getparam 2 .............................. <iPage>
  [ 68] pusharglistnoret 2 ...................... <oBackPack, iPage>
  [ 70] objcall 551 ............................. oBackPack.setCurrentPage(iPage)
  [ 73] getlocal 0 .............................. <oBackPack>
  [ 75] getparam 2 .............................. <iPage>
  [ 77] pusharglist 2 ........................... <oBackPack, iPage>
  [ 79] objcall 552 ............................. <oBackPack.getPossessionIDsByPage(iPage)>
  [ 82] setlocal 1 .............................. aIDs = oBackPack.getPossessionIDsByPage(iPage)
  [ 84] getlocal 0 .............................. <oBackPack>
  [ 86] getparam 2 .............................. <iPage>
  [ 88] pusharglist 2 ........................... <oBackPack, iPage>
  [ 90] objcall 553 ............................. <oBackPack.getPossessionsByPage(iPage)>
  [ 93] setlocal 2 .............................. aPos = oBackPack.getPossessionsByPage(iPage)
  [ 95] getlocal 1 .............................. <aIDs>
  [ 97] getobjprop 240 .......................... <aIDs.length>
  [ 99] getlocal 2 .............................. <aPos>
  [101] getobjprop 240 .......................... <aPos.length>
  [103] eq ...................................... <aIDs.length = aPos.length>
  [104] jmpifz [127] ............................ if aIDs.length = aPos.length then / else
  [107] getparam 0 .............................. <me>
  [109] pusharglist 0 ........................... <>
  [111] extcall 91 .............................. <VOID>
  [113] getlocal 0 .............................. <oBackPack>
  [115] pusharglistnoret 3 ...................... <me, VOID, oBackPack>
  [117] objcall 533 ............................. me.getPossessionsInBackpack_Result(VOID, oBackPack)
  [120] pusharglistnoret 0 ...................... <>
  [122] extcall 121 ............................. return 
  [124] jmp [136]
  [127] getparam 0 .............................. <me>
  [129] getlocal 1 .............................. <aIDs>
  [131] pusharglistnoret 2 ...................... <me, aIDs>
  [133] objcall 524 ............................. me.getPossessionList(aIDs)
  [136] ret
end

on getPossessionsInStudio me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 28 ............................. <"getPossessionsInStudio() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getPossessionsInStudio() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getPossessionsInStudio() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("getPossessionsInStudio() " & sStudioID)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 64] ............................ if gbTestMode then
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. iError = 0
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 541 ............................. <me.getTestStudioItems()>
  [ 26] setlocal 1 .............................. aProdList = me.getTestStudioItems()
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 29 ............................. <"getPossessionsInStudio() aProdList: ">
  [ 32] getlocal 1 .............................. <aProdList>
  [ 34] joinstr ................................. <"getPossessionsInStudio() aProdList: " & aProdList>
  [ 35] pusharglistnoret 2 ...................... <me, "getPossessionsInStudio() aProdList: " & aProdList>
  [ 37] objcall 4 ............................... me.debug("getPossessionsInStudio() aProdList: " & aProdList)
  [ 39] getglobal 146 ........................... <ElementMgr>
  [ 41] pusharglist 1 ........................... <ElementMgr>
  [ 43] extcall 135 ............................. <voidp(ElementMgr)>
  [ 45] not ..................................... <not voidp(ElementMgr)>
  [ 46] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 49] getglobal 146 ........................... <ElementMgr>
  [ 51] getlocal 0 .............................. <iError>
  [ 53] getlocal 1 .............................. <aProdList>
  [ 55] pusharglistnoret 3 ...................... <ElementMgr, iError, aProdList>
  [ 57] objcall 534 ............................. ElementMgr.getPossessionsInStudio_Result(iError, aProdList)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 69] getparam 1 .............................. <sStudioID>
  [ 71] pusharglistnoret 2 ...................... <me.foPossessionManager, sStudioID>
  [ 73] objcall 527 ............................. me.foPossessionManager.getPossessionsInStudio(sStudioID)
  [ 76] ret
end

on purchaseItem me, sScreenName, iCatId, aAttributes
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"purchaseItem() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"purchaseItem() " & sScreenName>
  [  7] getparam 2 .............................. <iCatId>
  [  9] joinpadstr .............................. <"purchaseItem() " & sScreenName && iCatId>
  [ 10] getparam 3 .............................. <aAttributes>
  [ 12] joinpadstr .............................. <"purchaseItem() " & sScreenName && iCatId && aAttributes>
  [ 13] pusharglistnoret 2 ...................... <me, "purchaseItem() " & sScreenName && iCatId && aAttributes>
  [ 15] objcall 4 ............................... me.debug("purchaseItem() " & sScreenName && iCatId && aAttributes)
  [ 17] getglobal 168 ........................... <gFeatureSet>
  [ 19] pushsymb 557 ............................ <#PURCHASING>
  [ 22] pusharglist 2 ........................... <gFeatureSet, #PURCHASING>
  [ 24] objcall 170 ............................. <gFeatureSet.isEnabled(#PURCHASING)>
  [ 26] not ..................................... <not gFeatureSet.isEnabled(#PURCHASING)>
  [ 27] jmpifz [ 34] ............................ if not gFeatureSet.isEnabled(#PURCHASING) then
  [ 30] pusharglistnoret 0 ...................... <>
  [ 32] extcall 121 ............................. return 
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 544 .......................... <me.bPendingPurchase>
  [ 39] jmpifz [ 54] ............................ if me.bPendingPurchase then
  [ 42] getglobal 146 ........................... <ElementMgr>
  [ 44] pushcons 31 ............................. <"ALERT_PENDING_PURCHASE">
  [ 46] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_PENDING_PURCHASE">
  [ 48] objcall 191 ............................. ElementMgr.alert("ALERT_PENDING_PURCHASE")
  [ 50] pusharglistnoret 0 ...................... <>
  [ 52] extcall 121 ............................. return 
  [ 54] getparam 3 .............................. <aAttributes>
  [ 56] pusharglist 1 ........................... <aAttributes>
  [ 58] extcall 135 ............................. <voidp(aAttributes)>
  [ 60] jmpifz [ 70] ............................ if voidp(aAttributes) then / else
  [ 63] pushcons 32 ............................. <"[:]">
  [ 65] setparam 3 .............................. aAttributes = "[:]"
  [ 67] jmp [ 79]
  [ 70] getparam 3 .............................. <aAttributes>
  [ 72] pusharglist 1 ........................... <aAttributes>
  [ 74] extcall 558 ............................. <string(aAttributes)>
  [ 77] setparam 3 .............................. aAttributes = string(aAttributes)
  [ 79] getglobal 127 ........................... <gbTestMode>
  [ 81] jmpifz [125] ............................ if gbTestMode then
  [ 84] pushint8 2 .............................. <2>
  [ 86] pusharglist 1 ........................... <2>
  [ 88] extcall 160 ............................. <random(2)>
  [ 90] pushint8 1 .............................. <1>
  [ 92] sub ..................................... <random(2) - 1>
  [ 93] setlocal 0 .............................. iError = random(2) - 1
  [ 95] getparam 0 .............................. <me>
  [ 97] pushcons 33 ............................. <"purchaseItem_Result() ">
  [ 99] getlocal 0 .............................. <iError>
  [101] joinstr ................................. <"purchaseItem_Result() " & iError>
  [102] pusharglistnoret 2 ...................... <me, "purchaseItem_Result() " & iError>
  [104] objcall 4 ............................... me.debug("purchaseItem_Result() " & iError)
  [106] getglobal 146 ........................... <ElementMgr>
  [108] pusharglist 1 ........................... <ElementMgr>
  [110] extcall 135 ............................. <voidp(ElementMgr)>
  [112] not ..................................... <not voidp(ElementMgr)>
  [113] jmpifz [125] ............................ if not voidp(ElementMgr) then
  [116] getglobal 146 ........................... <ElementMgr>
  [118] getlocal 0 .............................. <iError>
  [120] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [122] objcall 535 ............................. ElementMgr.purchaseItem_Result(iError)
  [125] getparam 0 .............................. <me>
  [127] pushint8 1 .............................. <1>
  [129] setobjprop 544 .......................... me.bPendingPurchase = 1
  [132] getparam 0 .............................. <me>
  [134] getchainedprop 545 ...................... <me.foPossessionManager>
  [137] getparam 1 .............................. <sScreenName>
  [139] getglobal 97 ............................ <oDenizenManager>
  [141] pusharglist 1 ........................... <oDenizenManager>
  [143] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [145] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [147] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [149] getparam 2 .............................. <iCatId>
  [151] getparam 3 .............................. <aAttributes>
  [153] pusharglist 1 ........................... <aAttributes>
  [155] extcall 558 ............................. <string(aAttributes)>
  [158] pusharglistnoret 5 ...................... <me.foPossessionManager, sScreenName, oDenizenManager.getDenizen().getSecret(), iCatId, string(aAttributes)>
  [160] objcall 528 ............................. me.foPossessionManager.purchaseItem(sScreenName, oDenizenManager.getDenizen().getSecret(), iCatId, string(aAttributes))
  [163] ret
end

on prePurchaseItem me, sScreenName, iCatId, aAttributes
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 34 ............................. <"prePurchaseItem() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"prePurchaseItem() " & sScreenName>
  [  7] getparam 2 .............................. <iCatId>
  [  9] joinpadstr .............................. <"prePurchaseItem() " & sScreenName && iCatId>
  [ 10] getparam 3 .............................. <aAttributes>
  [ 12] joinpadstr .............................. <"prePurchaseItem() " & sScreenName && iCatId && aAttributes>
  [ 13] pusharglistnoret 2 ...................... <me, "prePurchaseItem() " & sScreenName && iCatId && aAttributes>
  [ 15] objcall 4 ............................... me.debug("prePurchaseItem() " & sScreenName && iCatId && aAttributes)
  [ 17] getglobal 168 ........................... <gFeatureSet>
  [ 19] pushsymb 557 ............................ <#PURCHASING>
  [ 22] pusharglist 2 ........................... <gFeatureSet, #PURCHASING>
  [ 24] objcall 170 ............................. <gFeatureSet.isEnabled(#PURCHASING)>
  [ 26] not ..................................... <not gFeatureSet.isEnabled(#PURCHASING)>
  [ 27] jmpifz [ 34] ............................ if not gFeatureSet.isEnabled(#PURCHASING) then
  [ 30] pusharglistnoret 0 ...................... <>
  [ 32] extcall 121 ............................. return 
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 544 .......................... <me.bPendingPurchase>
  [ 39] jmpifz [ 54] ............................ if me.bPendingPurchase then
  [ 42] getglobal 146 ........................... <ElementMgr>
  [ 44] pushcons 31 ............................. <"ALERT_PENDING_PURCHASE">
  [ 46] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_PENDING_PURCHASE">
  [ 48] objcall 191 ............................. ElementMgr.alert("ALERT_PENDING_PURCHASE")
  [ 50] pusharglistnoret 0 ...................... <>
  [ 52] extcall 121 ............................. return 
  [ 54] getparam 2 .............................. <iCatId>
  [ 56] pusharglist 1 ........................... <iCatId>
  [ 58] extcall 238 ............................. <integer(iCatId)>
  [ 60] setparam 2 .............................. iCatId = integer(iCatId)
  [ 62] getparam 3 .............................. <aAttributes>
  [ 64] pusharglist 1 ........................... <aAttributes>
  [ 66] extcall 135 ............................. <voidp(aAttributes)>
  [ 68] jmpifz [ 78] ............................ if voidp(aAttributes) then / else
  [ 71] pushcons 32 ............................. <"[:]">
  [ 73] setparam 3 .............................. aAttributes = "[:]"
  [ 75] jmp [ 87]
  [ 78] getparam 3 .............................. <aAttributes>
  [ 80] pusharglist 1 ........................... <aAttributes>
  [ 82] extcall 558 ............................. <string(aAttributes)>
  [ 85] setparam 3 .............................. aAttributes = string(aAttributes)
  [ 87] getglobal 127 ........................... <gbTestMode>
  [ 89] jmpifz [149] ............................ if gbTestMode then
  [ 92] pushzero ................................ <0>
  [ 93] setlocal 0 .............................. iError = 0
  [ 95] pushint8 2 .............................. <2>
  [ 97] setlocal 1 .............................. iBalance = 2
  [ 99] pushint16 500 ........................... <500>
  [102] setlocal 2 .............................. iPrice = 500
  [104] pushint8 4 .............................. <4>
  [106] setlocal 3 .............................. iProdId = 4
  [108] getparam 0 .............................. <me>
  [110] pushcons 35 ............................. <"prePurchaseItem_Result() ">
  [112] getlocal 1 .............................. <iBalance>
  [114] joinstr ................................. <"prePurchaseItem_Result() " & iBalance>
  [115] getlocal 2 .............................. <iPrice>
  [117] joinpadstr .............................. <"prePurchaseItem_Result() " & iBalance && iPrice>
  [118] pusharglistnoret 2 ...................... <me, "prePurchaseItem_Result() " & iBalance && iPrice>
  [120] objcall 4 ............................... me.debug("prePurchaseItem_Result() " & iBalance && iPrice)
  [122] getglobal 146 ........................... <ElementMgr>
  [124] pusharglist 1 ........................... <ElementMgr>
  [126] extcall 135 ............................. <voidp(ElementMgr)>
  [128] not ..................................... <not voidp(ElementMgr)>
  [129] jmpifz [149] ............................ if not voidp(ElementMgr) then
  [132] getglobal 146 ........................... <ElementMgr>
  [134] getlocal 0 .............................. <iError>
  [136] getlocal 1 .............................. <iBalance>
  [138] getlocal 2 .............................. <iPrice>
  [140] getlocal 3 .............................. <iProdId>
  [142] getparam 3 .............................. <aAttributes>
  [144] pusharglistnoret 6 ...................... <ElementMgr, iError, iBalance, iPrice, iProdId, aAttributes>
  [146] objcall 536 ............................. ElementMgr.prePurchaseItem_Result(iError, iBalance, iPrice, iProdId, aAttributes)
  [149] getparam 0 .............................. <me>
  [151] getchainedprop 545 ...................... <me.foPossessionManager>
  [154] getparam 1 .............................. <sScreenName>
  [156] getglobal 97 ............................ <oDenizenManager>
  [158] pusharglist 1 ........................... <oDenizenManager>
  [160] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [162] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [164] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [166] getparam 2 .............................. <iCatId>
  [168] getparam 3 .............................. <aAttributes>
  [170] pusharglistnoret 5 ...................... <me.foPossessionManager, sScreenName, oDenizenManager.getDenizen().getSecret(), iCatId, aAttributes>
  [172] objcall 529 ............................. me.foPossessionManager.prePurchaseItem(sScreenName, oDenizenManager.getDenizen().getSecret(), iCatId, aAttributes)
  [175] ret
end

on dispenseItem me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 36 ............................. <"dispenseItem() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"dispenseItem() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "dispenseItem() " & sScreenName>
  [  9] objcall 4 ............................... me.debug("dispenseItem() " & sScreenName)
  [ 11] getglobal 168 ........................... <gFeatureSet>
  [ 13] pushsymb 563 ............................ <#ITEM_DISPENSER>
  [ 16] pusharglist 2 ........................... <gFeatureSet, #ITEM_DISPENSER>
  [ 18] objcall 170 ............................. <gFeatureSet.isEnabled(#ITEM_DISPENSER)>
  [ 20] not ..................................... <not gFeatureSet.isEnabled(#ITEM_DISPENSER)>
  [ 21] jmpifz [ 28] ............................ if not gFeatureSet.isEnabled(#ITEM_DISPENSER) then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 121 ............................. return 
  [ 28] getparam 0 .............................. <me>
  [ 30] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 33] getparam 1 .............................. <sScreenName>
  [ 35] getglobal 97 ............................ <oDenizenManager>
  [ 37] pusharglist 1 ........................... <oDenizenManager>
  [ 39] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 41] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 43] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 45] pusharglistnoret 3 ...................... <me.foPossessionManager, sScreenName, oDenizenManager.getDenizen().getSecret()>
  [ 47] objcall 530 ............................. me.foPossessionManager.dispenseItem(sScreenName, oDenizenManager.getDenizen().getSecret())
  [ 50] ret
end

on getBurnedCDsInBackPack me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 37 ............................. <"getBurnedCDsInBackPack() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getBurnedCDsInBackPack() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getBurnedCDsInBackPack() " & sScreenName>
  [  9] objcall 4 ............................... me.debug("getBurnedCDsInBackPack() " & sScreenName)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 64] ............................ if gbTestMode then
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. iError = 0
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 542 ............................. <me.createTestCds()>
  [ 26] setlocal 1 .............................. aCds = me.createTestCds()
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 38 ............................. <"getBurnedCDsInBackPack() aCDs: ">
  [ 32] getlocal 1 .............................. <aCds>
  [ 34] joinstr ................................. <"getBurnedCDsInBackPack() aCDs: " & aCds>
  [ 35] pusharglistnoret 2 ...................... <me, "getBurnedCDsInBackPack() aCDs: " & aCds>
  [ 37] objcall 4 ............................... me.debug("getBurnedCDsInBackPack() aCDs: " & aCds)
  [ 39] getglobal 146 ........................... <ElementMgr>
  [ 41] pusharglist 1 ........................... <ElementMgr>
  [ 43] extcall 135 ............................. <voidp(ElementMgr)>
  [ 45] not ..................................... <not voidp(ElementMgr)>
  [ 46] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 49] getglobal 146 ........................... <ElementMgr>
  [ 51] getlocal 0 .............................. <iError>
  [ 53] getlocal 1 .............................. <aCds>
  [ 55] pusharglistnoret 3 ...................... <ElementMgr, iError, aCds>
  [ 57] objcall 538 ............................. ElementMgr.getBurnedCdsInBackpack_Result(iError, aCds)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 545 ...................... <me.foPossessionManager>
  [ 69] getparam 1 .............................. <sScreenName>
  [ 71] getglobal 97 ............................ <oDenizenManager>
  [ 73] pusharglist 1 ........................... <oDenizenManager>
  [ 75] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 77] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 79] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 81] pusharglistnoret 3 ...................... <me.foPossessionManager, sScreenName, oDenizenManager.getDenizen().getSecret()>
  [ 83] objcall 531 ............................. me.foPossessionManager.getBurnedCDsInBackPack(sScreenName, oDenizenManager.getDenizen().getSecret())
  [ 86] ret
end

on destroy me, iPosId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 39 ............................. <"destroy() ">
  [  4] getparam 1 .............................. <iPosId>
  [  6] joinstr ................................. <"destroy() " & iPosId>
  [  7] pusharglistnoret 2 ...................... <me, "destroy() " & iPosId>
  [  9] objcall 4 ............................... me.debug("destroy() " & iPosId)
  [ 11] getparam 1 .............................. <iPosId>
  [ 13] pusharglist 1 ........................... <iPosId>
  [ 15] extcall 135 ............................. <voidp(iPosId)>
  [ 17] jmpifz [ 24] ............................ if voidp(iPosId) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 121 ............................. return 
  [ 24] getglobal 127 ........................... <gbTestMode>
  [ 26] jmpifz [ 43] ............................ if gbTestMode then
  [ 29] pushzero ................................ <0>
  [ 30] setlocal 0 .............................. iError = 0
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 39 ............................. <"destroy() ">
  [ 36] getlocal 0 .............................. <iError>
  [ 38] joinstr ................................. <"destroy() " & iError>
  [ 39] pusharglistnoret 2 ...................... <me, "destroy() " & iError>
  [ 41] objcall 4 ............................... me.debug("destroy() " & iError)
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 565 ...................... <me.foPossessionMananger>
  [ 48] getparam 1 .............................. <iPosId>
  [ 50] pusharglistnoret 2 ...................... <me.foPossessionMananger, iPosId>
  [ 52] objcall 532 ............................. me.foPossessionMananger.destroy(iPosId)
  [ 55] ret
end

on getPossessionsInBackpack_Result me, oCaller, oBackPack
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 40 ............................. <"getPossessionsInBackpack_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getPossessionsInBackpack_Result()">
  [  6] objcall 4 ............................... me.debug("getPossessionsInBackpack_Result()")
  [  8] pushzero ................................ <0>
  [  9] setlocal 0 .............................. iError = 0
  [ 11] getparam 2 .............................. <oBackPack>
  [ 13] pusharglist 1 ........................... <oBackPack>
  [ 15] objcall 567 ............................. <oBackPack.getCurrentPage()>
  [ 18] pusharglist 1 ........................... <oBackPack.getCurrentPage()>
  [ 20] extcall 238 ............................. <integer(oBackPack.getCurrentPage())>
  [ 22] setlocal 1 .............................. iCurrentPage = integer(oBackPack.getCurrentPage())
  [ 24] getparam 2 .............................. <oBackPack>
  [ 26] pusharglist 1 ........................... <oBackPack>
  [ 28] objcall 568 ............................. <oBackPack.getTotalPages()>
  [ 31] pusharglist 1 ........................... <oBackPack.getTotalPages()>
  [ 33] extcall 238 ............................. <integer(oBackPack.getTotalPages())>
  [ 35] setlocal 2 .............................. iTotalPages = integer(oBackPack.getTotalPages())
  [ 37] getparam 2 .............................. <oBackPack>
  [ 39] pusharglist 1 ........................... <oBackPack>
  [ 41] objcall 569 ............................. <oBackPack.getTotalItems()>
  [ 44] pusharglist 1 ........................... <oBackPack.getTotalItems()>
  [ 46] extcall 238 ............................. <integer(oBackPack.getTotalItems())>
  [ 48] setlocal 3 .............................. iTotalItems = integer(oBackPack.getTotalItems())
  [ 50] getparam 2 .............................. <oBackPack>
  [ 52] pusharglist 1 ........................... <oBackPack>
  [ 54] objcall 570 ............................. <oBackPack.getNumberOfBlankCds()>
  [ 57] pusharglist 1 ........................... <oBackPack.getNumberOfBlankCds()>
  [ 59] extcall 238 ............................. <integer(oBackPack.getNumberOfBlankCds())>
  [ 61] setlocal 4 .............................. iCds = integer(oBackPack.getNumberOfBlankCds())
  [ 63] getlocal 3 .............................. <iTotalItems>
  [ 65] getparam 2 .............................. <oBackPack>
  [ 67] pusharglist 1 ........................... <oBackPack>
  [ 69] objcall 571 ............................. <oBackPack.getPageSize()>
  [ 72] lteq .................................... <iTotalItems <= oBackPack.getPageSize()>
  [ 73] jmpifz [ 80] ............................ if iTotalItems <= oBackPack.getPageSize() then
  [ 76] pushint8 1 .............................. <1>
  [ 78] setlocal 1 .............................. iCurrentPage = 1
  [ 80] getlocal 1 .............................. <iCurrentPage>
  [ 82] getlocal 2 .............................. <iTotalPages>
  [ 84] gt ...................................... <iCurrentPage > iTotalPages>
  [ 85] jmpifz [ 92] ............................ if iCurrentPage > iTotalPages then
  [ 88] getlocal 2 .............................. <iTotalPages>
  [ 90] setlocal 1 .............................. iCurrentPage = iTotalPages
  [ 92] getparam 2 .............................. <oBackPack>
  [ 94] getlocal 1 .............................. <iCurrentPage>
  [ 96] pusharglist 2 ........................... <oBackPack, iCurrentPage>
  [ 98] objcall 553 ............................. <oBackPack.getPossessionsByPage(iCurrentPage)>
  [101] setlocal 5 .............................. aPossessions = oBackPack.getPossessionsByPage(iCurrentPage)
  [103] pusharglist 0 ........................... <[]>
  [105] pushlist ................................ <[]>
  [106] setlocal 6 .............................. aProdList = []
  [108] getlocal 5 .............................. <aPossessions>
  [110] pusharglist 1 ........................... <aPossessions>
  [112] extcall 135 ............................. <voidp(aPossessions)>
  [114] jmpifz [121] ............................ if voidp(aPossessions) then
  [117] pusharglistnoret 0 ...................... <>
  [119] extcall 121 ............................. return 
  [121] getlocal 5 .............................. <aPossessions>
  [123] getobjprop 240 .......................... <aPossessions.length>
  [125] setlocal 7 .............................. iLength = aPossessions.length
  [127] pushzero ................................ <0>
  [128] setlocal 8
  [130] getlocal 8
  [132] getlocal 7 .............................. <iLength>
  [134] pushint8 1 .............................. <1>
  [136] sub ..................................... <iLength - 1>
  [137] lteq
  [138] jmpifz [334] ............................ repeat with i = 0 to iLength - 1
  [141] getlocal 5 .............................. <aPossessions>
  [143] getlocal 8 .............................. <i>
  [145] pusharglist 2 ........................... <aPossessions, i>
  [147] objcall 163 ............................. <aPossessions[i]>
  [149] setlocal 9 .............................. oItem = aPossessions[i]
  [151] getparam 0 .............................. <me>
  [153] pushcons 41 ............................. <"oItem: ">
  [155] getlocal 9 .............................. <oItem>
  [157] pusharglist 1 ........................... <oItem>
  [159] objcall 202 ............................. <oItem.toString()>
  [161] joinstr ................................. <"oItem: " & oItem.toString()>
  [162] pusharglistnoret 2 ...................... <me, "oItem: " & oItem.toString()>
  [164] objcall 4 ............................... me.debug("oItem: " & oItem.toString())
  [166] pusharglist 0 ........................... <[:]>
  [168] pushproplist ............................ <[:]>
  [169] setlocal 10 ............................. aItem = [:]
  [171] getlocal 10 ............................. <aItem>
  [173] pushsymb 517 ............................ <#prodID>
  [176] getlocal 9 .............................. <oItem>
  [178] pusharglist 1 ........................... <oItem>
  [180] objcall 572 ............................. <oItem.getCatalogItem()>
  [183] pusharglist 1 ........................... <oItem.getCatalogItem()>
  [185] extcall 238 ............................. <integer(oItem.getCatalogItem())>
  [187] pusharglistnoret 3 ...................... <aItem, #prodID, integer(oItem.getCatalogItem())>
  [189] objcall 249 ............................. aItem[#prodID] = integer(oItem.getCatalogItem())
  [191] getparam 0 .............................. <me>
  [193] pushcons 42 ............................. <"aItem: prodId: ">
  [195] getlocal 10 ............................. <aItem>
  [197] joinstr ................................. <"aItem: prodId: " & aItem>
  [198] pusharglistnoret 2 ...................... <me, "aItem: prodId: " & aItem>
  [200] objcall 4 ............................... me.debug("aItem: prodId: " & aItem)
  [202] getlocal 10 ............................. <aItem>
  [204] pushsymb 573 ............................ <#posId>
  [207] getlocal 9 .............................. <oItem>
  [209] pusharglist 1 ........................... <oItem>
  [211] objcall 518 ............................. <oItem.getId()>
  [214] pusharglist 1 ........................... <oItem.getId()>
  [216] extcall 238 ............................. <integer(oItem.getId())>
  [218] pusharglistnoret 3 ...................... <aItem, #posId, integer(oItem.getId())>
  [220] objcall 249 ............................. aItem[#posId] = integer(oItem.getId())
  [222] getparam 0 .............................. <me>
  [224] pushcons 43 ............................. <"aItem: posId: ">
  [226] getlocal 10 ............................. <aItem>
  [228] joinstr ................................. <"aItem: posId: " & aItem>
  [229] pusharglistnoret 2 ...................... <me, "aItem: posId: " & aItem>
  [231] objcall 4 ............................... me.debug("aItem: posId: " & aItem)
  [233] getlocal 9 .............................. <oItem>
  [235] pusharglist 1 ........................... <oItem>
  [237] objcall 574 ............................. <oItem.getProperties()>
  [240] pusharglist 1 ........................... <oItem.getProperties()>
  [242] objcall 574 ............................. <oItem.getProperties().getProperties()>
  [245] setlocal 11 ............................. sProperties = oItem.getProperties().getProperties()
  [247] getparam 0 .............................. <me>
  [249] pushcons 44 ............................. <"sProperties: ">
  [251] getlocal 11 ............................. <sProperties>
  [253] joinstr ................................. <"sProperties: " & sProperties>
  [254] pusharglistnoret 2 ...................... <me, "sProperties: " & sProperties>
  [256] objcall 4 ............................... me.debug("sProperties: " & sProperties)
  [258] getlocal 11 ............................. <sProperties>
  [260] pusharglist 1 ........................... <sProperties>
  [262] extcall 135 ............................. <voidp(sProperties)>
  [264] getlocal 11 ............................. <sProperties>
  [266] pusharglist 0 ........................... <>
  [268] extcall 91 .............................. <VOID>
  [270] eq ...................................... <sProperties = VOID>
  [271] or ...................................... <voidp(sProperties) or (sProperties = VOID)>
  [272] jmpifz [290] ............................ if voidp(sProperties) or (sProperties = VOID) then / else
  [275] getlocal 10 ............................. <aItem>
  [277] pushsymb 353 ............................ <#attributes>
  [280] pusharglist 0 ........................... <[:]>
  [282] pushproplist ............................ <[:]>
  [283] pusharglistnoret 3 ...................... <aItem, #attributes, [:]>
  [285] objcall 249 ............................. aItem[#attributes] = [:]
  [287] jmp [306]
  [290] getlocal 10 ............................. <aItem>
  [292] pushsymb 353 ............................ <#attributes>
  [295] getlocal 11 ............................. <sProperties>
  [297] pusharglist 1 ........................... <sProperties>
  [299] extcall 575 ............................. <value(sProperties)>
  [302] pusharglistnoret 3 ...................... <aItem, #attributes, value(sProperties)>
  [304] objcall 249 ............................. aItem[#attributes] = value(sProperties)
  [306] getparam 0 .............................. <me>
  [308] pushcons 45 ............................. <"aItem: attributes: ">
  [310] getlocal 10 ............................. <aItem>
  [312] joinstr ................................. <"aItem: attributes: " & aItem>
  [313] pusharglistnoret 2 ...................... <me, "aItem: attributes: " & aItem>
  [315] objcall 4 ............................... me.debug("aItem: attributes: " & aItem)
  [317] getlocal 6 .............................. <aProdList>
  [319] getlocal 10 ............................. <aItem>
  [321] pusharglistnoret 2 ...................... <aProdList, aItem>
  [323] objcall 241 ............................. aProdList.add(aItem)
  [325] pushint8 1
  [327] getlocal 8
  [329] add
  [330] setlocal 8
  [332] endrepeat [130]
  [334] getparam 0 .............................. <me>
  [336] pushcons 46 ............................. <"getPossessionsInBackpack_Result() aProdList: ">
  [338] getlocal 6 .............................. <aProdList>
  [340] joinstr ................................. <"getPossessionsInBackpack_Result() aProdList: " & aProdList>
  [341] pusharglistnoret 2 ...................... <me, "getPossessionsInBackpack_Result() aProdList: " & aProdList>
  [343] objcall 4 ............................... me.debug("getPossessionsInBackpack_Result() aProdList: " & aProdList)
  [345] getglobal 146 ........................... <ElementMgr>
  [347] pusharglist 1 ........................... <ElementMgr>
  [349] extcall 135 ............................. <voidp(ElementMgr)>
  [351] not ..................................... <not voidp(ElementMgr)>
  [352] jmpifz [374] ............................ if not voidp(ElementMgr) then
  [355] getglobal 146 ........................... <ElementMgr>
  [357] getlocal 0 .............................. <iError>
  [359] getlocal 6 .............................. <aProdList>
  [361] getlocal 1 .............................. <iCurrentPage>
  [363] getlocal 2 .............................. <iTotalPages>
  [365] getlocal 3 .............................. <iTotalItems>
  [367] getlocal 4 .............................. <iCds>
  [369] pusharglistnoret 7 ...................... <ElementMgr, iError, aProdList, iCurrentPage, iTotalPages, iTotalItems, iCds>
  [371] objcall 533 ............................. ElementMgr.getPossessionsInBackpack_Result(iError, aProdList, iCurrentPage, iTotalPages, iTotalItems, iCds)
  [374] ret
end

on getPossessionsInStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 47 ............................. <"getPossessionsInStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getPossessionsInStudio_Result()">
  [  6] objcall 4 ............................... me.debug("getPossessionsInStudio_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 48 ............................. <"getPossessionsInStudio_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getPossessionsInStudio_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getPossessionsInStudio_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("getPossessionsInStudio_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 534 ............................. ElementMgr.getPossessionsInStudio_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] pusharglist 0 ........................... <[]>
  [ 69] pushlist ................................ <[]>
  [ 70] setlocal 1 .............................. aProdList = []
  [ 72] getparam 2 .............................. <oResult>
  [ 74] getobjprop 240 .......................... <oResult.length>
  [ 76] setlocal 2 .............................. iLength = oResult.length
  [ 78] pushzero ................................ <0>
  [ 79] setlocal 3
  [ 81] getlocal 3
  [ 83] getlocal 2 .............................. <iLength>
  [ 85] pushint8 1 .............................. <1>
  [ 87] sub ..................................... <iLength - 1>
  [ 88] lteq
  [ 89] jmpifz [306] ............................ repeat with i = 0 to iLength - 1
  [ 92] getparam 2 .............................. <oResult>
  [ 94] getlocal 3 .............................. <i>
  [ 96] pusharglist 2 ........................... <oResult, i>
  [ 98] objcall 163 ............................. <oResult[i]>
  [100] setlocal 4 .............................. oItem = oResult[i]
  [102] pusharglist 0 ........................... <[:]>
  [104] pushproplist ............................ <[:]>
  [105] setlocal 5 .............................. aItem = [:]
  [107] getlocal 5 .............................. <aItem>
  [109] pushsymb 517 ............................ <#prodID>
  [112] getlocal 4 .............................. <oItem>
  [114] pusharglist 1 ........................... <oItem>
  [116] objcall 572 ............................. <oItem.getCatalogItem()>
  [119] pusharglist 1 ........................... <oItem.getCatalogItem()>
  [121] extcall 238 ............................. <integer(oItem.getCatalogItem())>
  [123] pusharglistnoret 3 ...................... <aItem, #prodID, integer(oItem.getCatalogItem())>
  [125] objcall 249 ............................. aItem[#prodID] = integer(oItem.getCatalogItem())
  [127] getlocal 5 .............................. <aItem>
  [129] pushsymb 573 ............................ <#posId>
  [132] getlocal 4 .............................. <oItem>
  [134] pusharglist 1 ........................... <oItem>
  [136] objcall 518 ............................. <oItem.getId()>
  [139] pusharglist 1 ........................... <oItem.getId()>
  [141] extcall 238 ............................. <integer(oItem.getId())>
  [143] pusharglistnoret 3 ...................... <aItem, #posId, integer(oItem.getId())>
  [145] objcall 249 ............................. aItem[#posId] = integer(oItem.getId())
  [147] getlocal 5 .............................. <aItem>
  [149] pushsymb 582 ............................ <#dir>
  [152] getlocal 4 .............................. <oItem>
  [154] pusharglist 1 ........................... <oItem>
  [156] objcall 583 ............................. <oItem.getFacingDirection()>
  [159] pusharglist 1 ........................... <oItem.getFacingDirection()>
  [161] extcall 238 ............................. <integer(oItem.getFacingDirection())>
  [163] pusharglistnoret 3 ...................... <aItem, #dir, integer(oItem.getFacingDirection())>
  [165] objcall 249 ............................. aItem[#dir] = integer(oItem.getFacingDirection())
  [167] getlocal 5 .............................. <aItem>
  [169] pushsymb 353 ............................ <#attributes>
  [172] getlocal 4 .............................. <oItem>
  [174] pusharglist 1 ........................... <oItem>
  [176] objcall 574 ............................. <oItem.getProperties()>
  [179] pusharglist 1 ........................... <oItem.getProperties()>
  [181] objcall 574 ............................. <oItem.getProperties().getProperties()>
  [184] pusharglist 1 ........................... <oItem.getProperties().getProperties()>
  [186] extcall 575 ............................. <value(oItem.getProperties().getProperties())>
  [189] pusharglistnoret 3 ...................... <aItem, #attributes, value(oItem.getProperties().getProperties())>
  [191] objcall 249 ............................. aItem[#attributes] = value(oItem.getProperties().getProperties())
  [193] getlocal 5 .............................. <aItem>
  [195] pushsymb 584 ............................ <#state>
  [198] getlocal 4 .............................. <oItem>
  [200] pusharglist 1 ........................... <oItem>
  [202] objcall 585 ............................. <oItem.getState()>
  [205] pusharglist 1 ........................... <oItem.getState()>
  [207] extcall 238 ............................. <integer(oItem.getState())>
  [209] pusharglistnoret 3 ...................... <aItem, #state, integer(oItem.getState())>
  [211] objcall 249 ............................. aItem[#state] = integer(oItem.getState())
  [213] getlocal 5 .............................. <aItem>
  [215] pushsymb 586 ............................ <#gridX>
  [218] getlocal 4 .............................. <oItem>
  [220] pusharglist 1 ........................... <oItem>
  [222] objcall 587 ............................. <oItem.getXPos()>
  [225] pusharglist 1 ........................... <oItem.getXPos()>
  [227] extcall 238 ............................. <integer(oItem.getXPos())>
  [229] pusharglistnoret 3 ...................... <aItem, #gridX, integer(oItem.getXPos())>
  [231] objcall 249 ............................. aItem[#gridX] = integer(oItem.getXPos())
  [233] getlocal 5 .............................. <aItem>
  [235] pushsymb 588 ............................ <#gridY>
  [238] getlocal 4 .............................. <oItem>
  [240] pusharglist 1 ........................... <oItem>
  [242] objcall 589 ............................. <oItem.getYPos()>
  [245] pusharglist 1 ........................... <oItem.getYPos()>
  [247] extcall 238 ............................. <integer(oItem.getYPos())>
  [249] pusharglistnoret 3 ...................... <aItem, #gridY, integer(oItem.getYPos())>
  [251] objcall 249 ............................. aItem[#gridY] = integer(oItem.getYPos())
  [253] getlocal 5 .............................. <aItem>
  [255] pushsymb 590 ............................ <#gridZ>
  [258] getlocal 4 .............................. <oItem>
  [260] pusharglist 1 ........................... <oItem>
  [262] objcall 591 ............................. <oItem.getZPos()>
  [265] pusharglist 1 ........................... <oItem.getZPos()>
  [267] extcall 238 ............................. <integer(oItem.getZPos())>
  [269] pusharglistnoret 3 ...................... <aItem, #gridZ, integer(oItem.getZPos())>
  [271] objcall 249 ............................. aItem[#gridZ] = integer(oItem.getZPos())
  [273] getlocal 5 .............................. <aItem>
  [275] pushsymb 361 ............................ <#owner>
  [278] getlocal 4 .............................. <oItem>
  [280] pusharglist 1 ........................... <oItem>
  [282] objcall 491 ............................. <oItem.getOwnerScreenName()>
  [285] pusharglistnoret 3 ...................... <aItem, #owner, oItem.getOwnerScreenName()>
  [287] objcall 249 ............................. aItem[#owner] = oItem.getOwnerScreenName()
  [289] getlocal 1 .............................. <aProdList>
  [291] getlocal 5 .............................. <aItem>
  [293] pusharglistnoret 2 ...................... <aProdList, aItem>
  [295] objcall 241 ............................. aProdList.add(aItem)
  [297] pushint8 1
  [299] getlocal 3
  [301] add
  [302] setlocal 3
  [304] endrepeat [ 81]
  [306] getparam 0 .............................. <me>
  [308] pushcons 46 ............................. <"getPossessionsInBackpack_Result() aProdList: ">
  [310] getlocal 1 .............................. <aProdList>
  [312] joinstr ................................. <"getPossessionsInBackpack_Result() aProdList: " & aProdList>
  [313] pusharglistnoret 2 ...................... <me, "getPossessionsInBackpack_Result() aProdList: " & aProdList>
  [315] objcall 4 ............................... me.debug("getPossessionsInBackpack_Result() aProdList: " & aProdList)
  [317] getglobal 146 ........................... <ElementMgr>
  [319] pusharglist 1 ........................... <ElementMgr>
  [321] extcall 135 ............................. <voidp(ElementMgr)>
  [323] not ..................................... <not voidp(ElementMgr)>
  [324] jmpifz [338] ............................ if not voidp(ElementMgr) then
  [327] getglobal 146 ........................... <ElementMgr>
  [329] getlocal 0 .............................. <iError>
  [331] getlocal 1 .............................. <aProdList>
  [333] pusharglistnoret 3 ...................... <ElementMgr, iError, aProdList>
  [335] objcall 534 ............................. ElementMgr.getPossessionsInStudio_Result(iError, aProdList)
  [338] ret
end

on purchaseItem_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 49 ............................. <"purchaseItem_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "purchaseItem_Result()">
  [  6] objcall 4 ............................... me.debug("purchaseItem_Result()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushzero ................................ <0>
  [ 11] setobjprop 544 .......................... me.bPendingPurchase = 0
  [ 14] pushzero ................................ <0>
  [ 15] setlocal 0 .............................. iError = 0
  [ 17] getparam 2 .............................. <oResult>
  [ 19] pusharglist 1 ........................... <oResult>
  [ 21] extcall 135 ............................. <voidp(oResult)>
  [ 23] getparam 2 .............................. <oResult>
  [ 25] pusharglist 0 ........................... <>
  [ 27] extcall 91 .............................. <VOID>
  [ 29] eq ...................................... <oResult = VOID>
  [ 30] or ...................................... <voidp(oResult) or (oResult = VOID)>
  [ 31] jmpifz [ 38] ............................ if voidp(oResult) or (oResult = VOID) then
  [ 34] pushint8 1 .............................. <1>
  [ 36] setlocal 0 .............................. iError = 1
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 50 ............................. <"purchaseItem_Result() ERROR ">
  [ 42] getlocal 0 .............................. <iError>
  [ 44] joinstr ................................. <"purchaseItem_Result() ERROR " & iError>
  [ 45] pusharglistnoret 2 ...................... <me, "purchaseItem_Result() ERROR " & iError>
  [ 47] objcall 4 ............................... me.debug("purchaseItem_Result() ERROR " & iError)
  [ 49] getglobal 146 ........................... <ElementMgr>
  [ 51] pusharglist 1 ........................... <ElementMgr>
  [ 53] extcall 135 ............................. <voidp(ElementMgr)>
  [ 55] not ..................................... <not voidp(ElementMgr)>
  [ 56] jmpifz [ 70] ............................ if not voidp(ElementMgr) then
  [ 59] getglobal 146 ........................... <ElementMgr>
  [ 61] getlocal 0 .............................. <iError>
  [ 63] getparam 2 .............................. <oResult>
  [ 65] pusharglistnoret 3 ...................... <ElementMgr, iError, oResult>
  [ 67] objcall 535 ............................. ElementMgr.purchaseItem_Result(iError, oResult)
  [ 70] ret
end

on prePurchaseItem_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 51 ............................. <"prePurchaseItem_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "prePurchaseItem_Result()">
  [  6] objcall 4 ............................... me.debug("prePurchaseItem_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 52 ............................. <"prePurchaseItem_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"prePurchaseItem_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "prePurchaseItem_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("prePurchaseItem_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 536 ............................. ElementMgr.prePurchaseItem_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getparam 2 .............................. <oResult>
  [ 69] pusharglist 1 ........................... <oResult>
  [ 71] objcall 592 ............................. <oResult.getBalance()>
  [ 74] pusharglist 1 ........................... <oResult.getBalance()>
  [ 76] extcall 238 ............................. <integer(oResult.getBalance())>
  [ 78] setlocal 1 .............................. iBalance = integer(oResult.getBalance())
  [ 80] getparam 2 .............................. <oResult>
  [ 82] pusharglist 1 ........................... <oResult>
  [ 84] objcall 520 ............................. <oResult.getPrice()>
  [ 87] pusharglist 1 ........................... <oResult.getPrice()>
  [ 89] extcall 238 ............................. <integer(oResult.getPrice())>
  [ 91] setlocal 2 .............................. iPrice = integer(oResult.getPrice())
  [ 93] getparam 2 .............................. <oResult>
  [ 95] pusharglist 1 ........................... <oResult>
  [ 97] objcall 593 ............................. <oResult.getCatalogItemId()>
  [100] pusharglist 1 ........................... <oResult.getCatalogItemId()>
  [102] extcall 238 ............................. <integer(oResult.getCatalogItemId())>
  [104] setlocal 3 .............................. iProdId = integer(oResult.getCatalogItemId())
  [106] getparam 2 .............................. <oResult>
  [108] pusharglist 1 ........................... <oResult>
  [110] objcall 574 ............................. <oResult.getProperties()>
  [113] pusharglist 1 ........................... <oResult.getProperties()>
  [115] extcall 575 ............................. <value(oResult.getProperties())>
  [118] setlocal 4 .............................. aAttributes = value(oResult.getProperties())
  [120] getparam 0 .............................. <me>
  [122] pushcons 35 ............................. <"prePurchaseItem_Result() ">
  [124] getlocal 1 .............................. <iBalance>
  [126] joinstr ................................. <"prePurchaseItem_Result() " & iBalance>
  [127] getlocal 2 .............................. <iPrice>
  [129] joinpadstr .............................. <"prePurchaseItem_Result() " & iBalance && iPrice>
  [130] pusharglistnoret 2 ...................... <me, "prePurchaseItem_Result() " & iBalance && iPrice>
  [132] objcall 4 ............................... me.debug("prePurchaseItem_Result() " & iBalance && iPrice)
  [134] getglobal 146 ........................... <ElementMgr>
  [136] pusharglist 1 ........................... <ElementMgr>
  [138] extcall 135 ............................. <voidp(ElementMgr)>
  [140] not ..................................... <not voidp(ElementMgr)>
  [141] jmpifz [161] ............................ if not voidp(ElementMgr) then
  [144] getglobal 146 ........................... <ElementMgr>
  [146] getlocal 0 .............................. <iError>
  [148] getlocal 1 .............................. <iBalance>
  [150] getlocal 2 .............................. <iPrice>
  [152] getlocal 3 .............................. <iProdId>
  [154] getlocal 4 .............................. <aAttributes>
  [156] pusharglistnoret 6 ...................... <ElementMgr, iError, iBalance, iPrice, iProdId, aAttributes>
  [158] objcall 536 ............................. ElementMgr.prePurchaseItem_Result(iError, iBalance, iPrice, iProdId, aAttributes)
  [161] ret
end

on dispenseItem_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 53 ............................. <"dispenseItem_Result() oCaller: ">
  [  4] getparam 1 .............................. <oCaller>
  [  6] joinstr ................................. <"dispenseItem_Result() oCaller: " & oCaller>
  [  7] pushcons 54 ............................. <" oResult.toString(): ">
  [  9] joinstr ................................. <"dispenseItem_Result() oCaller: " & oCaller & " oResult.toString(): ">
  [ 10] getparam 2 .............................. <oResult>
  [ 12] pusharglist 1 ........................... <oResult>
  [ 14] objcall 202 ............................. <oResult.toString()>
  [ 16] joinstr ................................. <"dispenseItem_Result() oCaller: " & oCaller & " oResult.toString(): " & oResult.toString()>
  [ 17] pusharglistnoret 2 ...................... <me, "dispenseItem_Result() oCaller: " & oCaller & " oResult.toString(): " & oResult.toString()>
  [ 19] objcall 4 ............................... me.debug("dispenseItem_Result() oCaller: " & oCaller & " oResult.toString(): " & oResult.toString())
  [ 21] getparam 2 .............................. <oResult>
  [ 23] getobjprop 240 .......................... <oResult.length>
  [ 25] pushzero ................................ <0>
  [ 26] gt ...................................... <oResult.length > 0>
  [ 27] jmpifz [ 37] ............................ if oResult.length > 0 then / else
  [ 30] pushint8 1 .............................. <1>
  [ 32] setlocal 0 .............................. iError = 1
  [ 34] jmp [ 40]
  [ 37] pushzero ................................ <0>
  [ 38] setlocal 0 .............................. iError = 0
  [ 40] getglobal 146 ........................... <ElementMgr>
  [ 42] pusharglist 1 ........................... <ElementMgr>
  [ 44] extcall 135 ............................. <voidp(ElementMgr)>
  [ 46] not ..................................... <not voidp(ElementMgr)>
  [ 47] jmpifz [ 61] ............................ if not voidp(ElementMgr) then
  [ 50] getglobal 146 ........................... <ElementMgr>
  [ 52] getlocal 0 .............................. <iError>
  [ 54] getparam 2 .............................. <oResult>
  [ 56] pusharglistnoret 3 ...................... <ElementMgr, iError, oResult>
  [ 58] objcall 537 ............................. ElementMgr.dispenseItem_Result(iError, oResult)
  [ 61] ret
end

on getBurnedCdsInBackpack_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 55 ............................. <"getBurnedCdsInBackpack_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getBurnedCdsInBackpack_Result()">
  [  6] objcall 4 ............................... me.debug("getBurnedCdsInBackpack_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 56 ............................. <"getBurnedCdsInBackpack_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getBurnedCdsInBackpack_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getBurnedCdsInBackpack_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("getBurnedCdsInBackpack_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 538 ............................. ElementMgr.getBurnedCdsInBackpack_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getparam 0 .............................. <me>
  [ 69] getparam 2 .............................. <oResult>
  [ 71] pusharglist 2 ........................... <me, oResult>
  [ 73] objcall 543 ............................. <me.createCds(oResult)>
  [ 76] setlocal 1 .............................. aCds = me.createCds(oResult)
  [ 78] getparam 0 .............................. <me>
  [ 80] pushcons 57 ............................. <"getBurnedCdsInBackpack_Result() aCDs: ">
  [ 82] getlocal 1 .............................. <aCds>
  [ 84] joinstr ................................. <"getBurnedCdsInBackpack_Result() aCDs: " & aCds>
  [ 85] pusharglistnoret 2 ...................... <me, "getBurnedCdsInBackpack_Result() aCDs: " & aCds>
  [ 87] objcall 4 ............................... me.debug("getBurnedCdsInBackpack_Result() aCDs: " & aCds)
  [ 89] getglobal 146 ........................... <ElementMgr>
  [ 91] pusharglist 1 ........................... <ElementMgr>
  [ 93] extcall 135 ............................. <voidp(ElementMgr)>
  [ 95] not ..................................... <not voidp(ElementMgr)>
  [ 96] jmpifz [110] ............................ if not voidp(ElementMgr) then
  [ 99] getglobal 146 ........................... <ElementMgr>
  [101] getlocal 0 .............................. <iError>
  [103] getlocal 1 .............................. <aCds>
  [105] pusharglistnoret 3 ...................... <ElementMgr, iError, aCds>
  [107] objcall 538 ............................. ElementMgr.getBurnedCdsInBackpack_Result(iError, aCds)
  [110] ret
end

on destroy_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 58 ............................. <"destroy_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "destroy_Result()">
  [  6] objcall 4 ............................... me.debug("destroy_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 45] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 59 ............................. <"destroy_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"destroy_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "destroy_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("destroy_Result() ERROR " & iError)
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 121 ............................. return 
  [ 45] ret
end

on onStatus me, oCaller, oXml
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 60 ............................. <"onStatus()">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "onStatus()", 1>
  [  8] objcall 4 ............................... me.debug("onStatus()", 1)
  [ 10] ret
end

on getTestBackpackItems me, iStart, iEnd
  [  0] pushint8 3 .............................. <3>
  [  2] setlocal 0 .............................. iProdIndex = 3
  [  4] pusharglist 0 ........................... <[]>
  [  6] pushlist ................................ <[]>
  [  7] setlocal 1 .............................. aProdList = []
  [  9] pushint16 305 ........................... <305>
  [ 12] setlocal 2
  [ 14] getlocal 2
  [ 16] pushint16 380 ........................... <380>
  [ 19] lteq
  [ 20] jmpifz [ 58] ............................ repeat with i = 305 to 380
  [ 23] getlocal 1 .............................. <aProdList>
  [ 25] pushsymb 517 ............................ <#prodID>
  [ 28] getlocal 0 .............................. <iProdIndex>
  [ 30] pushsymb 573 ............................ <#posId>
  [ 33] getlocal 2 .............................. <i>
  [ 35] pusharglist 4 ........................... <[#prodID: iProdIndex, #posId: i]>
  [ 37] pushproplist ............................ <[#prodID: iProdIndex, #posId: i]>
  [ 38] pusharglistnoret 2 ...................... <aProdList, [#prodID: iProdIndex, #posId: i]>
  [ 40] objcall 241 ............................. aProdList.add([#prodID: iProdIndex, #posId: i])
  [ 42] getlocal 0 .............................. <iProdIndex>
  [ 44] pushint8 1 .............................. <1>
  [ 46] add ..................................... <iProdIndex + 1>
  [ 47] setlocal 0 .............................. iProdIndex = iProdIndex + 1
  [ 49] pushint8 1
  [ 51] getlocal 2
  [ 53] add
  [ 54] setlocal 2
  [ 56] endrepeat [ 14]
  [ 58] getlocal 1 .............................. <aProdList>
  [ 60] pusharglistnoret 1 ...................... <aProdList>
  [ 62] extcall 121 ............................. return aProdList
  [ 64] ret
end

on getTestStudioItems me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aProdList = []
  [  5] getlocal 0 .............................. <aProdList>
  [  7] pushsymb 517 ............................ <#prodID>
  [ 10] pushint8 3 .............................. <3>
  [ 12] pushsymb 573 ............................ <#posId>
  [ 15] pushint8 1 .............................. <1>
  [ 17] pushsymb 582 ............................ <#dir>
  [ 20] pushint8 2 .............................. <2>
  [ 22] pushsymb 353 ............................ <#attributes>
  [ 25] pusharglist 0 ........................... <[:]>
  [ 27] pushproplist ............................ <[:]>
  [ 28] pushsymb 584 ............................ <#state>
  [ 31] pushzero ................................ <0>
  [ 32] pushsymb 586 ............................ <#gridX>
  [ 35] pushint8 10 ............................. <10>
  [ 37] pushsymb 588 ............................ <#gridY>
  [ 40] pushzero ................................ <0>
  [ 41] pushsymb 590 ............................ <#gridZ>
  [ 44] pushint8 10 ............................. <10>
  [ 46] pushsymb 361 ............................ <#owner>
  [ 49] pushcons 61 ............................. <"aslan">
  [ 51] pusharglist 18 .......................... <[#prodID: 3, #posId: 1, #dir: 2, #attributes: [:], #state: 0, #gridX: 10, #gridY: 0, #gridZ: 10, #owner: "aslan"]>
  [ 53] pushproplist ............................ <[#prodID: 3, #posId: 1, #dir: 2, #attributes: [:], #state: 0, #gridX: 10, #gridY: 0, #gridZ: 10, #owner: "aslan"]>
  [ 54] pusharglistnoret 2 ...................... <aProdList, [#prodID: 3, #posId: 1, #dir: 2, #attributes: [:], #state: 0, #gridX: 10, #gridY: 0, #gridZ: 10, #owner: "aslan"]>
  [ 56] objcall 241 ............................. aProdList.add([#prodID: 3, #posId: 1, #dir: 2, #attributes: [:], #state: 0, #gridX: 10, #gridY: 0, #gridZ: 10, #owner: "aslan"])
  [ 58] getlocal 0 .............................. <aProdList>
  [ 60] pushsymb 517 ............................ <#prodID>
  [ 63] pushint8 4 .............................. <4>
  [ 65] pushsymb 573 ............................ <#posId>
  [ 68] pushint8 2 .............................. <2>
  [ 70] pushsymb 582 ............................ <#dir>
  [ 73] pushint8 2 .............................. <2>
  [ 75] pushsymb 353 ............................ <#attributes>
  [ 78] pusharglist 0 ........................... <[:]>
  [ 80] pushproplist ............................ <[:]>
  [ 81] pushsymb 584 ............................ <#state>
  [ 84] pushzero ................................ <0>
  [ 85] pushsymb 586 ............................ <#gridX>
  [ 88] pushint8 12 ............................. <12>
  [ 90] pushsymb 588 ............................ <#gridY>
  [ 93] pushzero ................................ <0>
  [ 94] pushsymb 590 ............................ <#gridZ>
  [ 97] pushint8 12 ............................. <12>
  [ 99] pushsymb 361 ............................ <#owner>
  [102] pushcons 61 ............................. <"aslan">
  [104] pusharglist 18 .......................... <[#prodID: 4, #posId: 2, #dir: 2, #attributes: [:], #state: 0, #gridX: 12, #gridY: 0, #gridZ: 12, #owner: "aslan"]>
  [106] pushproplist ............................ <[#prodID: 4, #posId: 2, #dir: 2, #attributes: [:], #state: 0, #gridX: 12, #gridY: 0, #gridZ: 12, #owner: "aslan"]>
  [107] pusharglistnoret 2 ...................... <aProdList, [#prodID: 4, #posId: 2, #dir: 2, #attributes: [:], #state: 0, #gridX: 12, #gridY: 0, #gridZ: 12, #owner: "aslan"]>
  [109] objcall 241 ............................. aProdList.add([#prodID: 4, #posId: 2, #dir: 2, #attributes: [:], #state: 0, #gridX: 12, #gridY: 0, #gridZ: 12, #owner: "aslan"])
  [111] getlocal 0 .............................. <aProdList>
  [113] pusharglistnoret 1 ...................... <aProdList>
  [115] extcall 121 ............................. return aProdList
  [117] ret
end

on createTestCds me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aCds = []
  [  5] pushint16 436 ........................... <436>
  [  8] setlocal 1
  [ 10] getlocal 1
  [ 12] pushint16 437 ........................... <437>
  [ 15] lteq
  [ 16] jmpifz [ 73] ............................ repeat with i = 436 to 437
  [ 19] getlocal 1 .............................. <i>
  [ 21] setlocal 2 .............................. iPosId = i
  [ 23] pushcons 62 ............................. <"jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^">
  [ 25] setlocal 3 .............................. sSong = "jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^"
  [ 27] pushcons 63 ............................. <"Aslan">
  [ 29] setlocal 4 .............................. sAuthor = "Aslan"
  [ 31] pushcons 64 ............................. <"Test">
  [ 33] setlocal 5 .............................. sSongName = "Test"
  [ 35] getlocal 0 .............................. <aCds>
  [ 37] pushsymb 573 ............................ <#posId>
  [ 40] getlocal 2 .............................. <iPosId>
  [ 42] pushsymb 597 ............................ <#author>
  [ 45] getlocal 4 .............................. <sAuthor>
  [ 47] pushsymb 355 ............................ <#name>
  [ 50] getlocal 5 .............................. <sSongName>
  [ 52] pushsymb 494 ............................ <#song>
  [ 55] getlocal 3 .............................. <sSong>
  [ 57] pusharglist 8 ........................... <[#posId: iPosId, #author: sAuthor, #name: sSongName, #song: sSong]>
  [ 59] pushproplist ............................ <[#posId: iPosId, #author: sAuthor, #name: sSongName, #song: sSong]>
  [ 60] pusharglistnoret 2 ...................... <aCds, [#posId: iPosId, #author: sAuthor, #name: sSongName, #song: sSong]>
  [ 62] objcall 241 ............................. aCds.add([#posId: iPosId, #author: sAuthor, #name: sSongName, #song: sSong])
  [ 64] pushint8 1
  [ 66] getlocal 1
  [ 68] add
  [ 69] setlocal 1
  [ 71] endrepeat [ 10]
  [ 73] getlocal 0 .............................. <aCds>
  [ 75] pusharglistnoret 1 ...................... <aCds>
  [ 77] extcall 121 ............................. return aCds
  [ 79] ret
end

on createCds me, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 65 ............................. <"createCDs() ">
  [  4] getparam 1 .............................. <oResult>
  [  6] joinstr ................................. <"createCDs() " & oResult>
  [  7] pusharglistnoret 2 ...................... <me, "createCDs() " & oResult>
  [  9] objcall 4 ............................... me.debug("createCDs() " & oResult)
  [ 11] pusharglist 0 ........................... <[]>
  [ 13] pushlist ................................ <[]>
  [ 14] setlocal 0 .............................. aCds = []
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 1
  [ 19] getlocal 1
  [ 21] getparam 1 .............................. <oResult>
  [ 23] getobjprop 240 .......................... <oResult.length>
  [ 25] pushint8 1 .............................. <1>
  [ 27] sub ..................................... <oResult.length - 1>
  [ 28] lteq
  [ 29] jmpifz [231] ............................ repeat with i = 0 to oResult.length - 1
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 66 ............................. <"1">
  [ 36] pusharglistnoret 2 ...................... <me, "1">
  [ 38] objcall 4 ............................... me.debug("1")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 67 ............................. <"i:">
  [ 44] getlocal 1 .............................. <i>
  [ 46] joinpadstr .............................. <"i:" && i>
  [ 47] pusharglistnoret 2 ...................... <me, "i:" && i>
  [ 49] objcall 4 ............................... me.debug("i:" && i)
  [ 51] getparam 0 .............................. <me>
  [ 53] pushcons 68 ............................. <"oResult[i]:">
  [ 55] getparam 1 .............................. <oResult>
  [ 57] getlocal 1 .............................. <i>
  [ 59] pusharglist 2 ........................... <oResult, i>
  [ 61] objcall 163 ............................. <oResult[i]>
  [ 63] joinpadstr .............................. <"oResult[i]:" && oResult[i]>
  [ 64] pusharglistnoret 2 ...................... <me, "oResult[i]:" && oResult[i]>
  [ 66] objcall 4 ............................... me.debug("oResult[i]:" && oResult[i])
  [ 68] getparam 1 .............................. <oResult>
  [ 70] getlocal 1 .............................. <i>
  [ 72] pusharglist 2 ........................... <oResult, i>
  [ 74] objcall 163 ............................. <oResult[i]>
  [ 76] setlocal 2 .............................. oPossession = oResult[i]
  [ 78] getlocal 2 .............................. <oPossession>
  [ 80] pusharglist 1 ........................... <oPossession>
  [ 82] objcall 518 ............................. <oPossession.getId()>
  [ 85] setlocal 3 .............................. iPosId = oPossession.getId()
  [ 87] getparam 0 .............................. <me>
  [ 89] pushcons 69 ............................. <"iPosId:">
  [ 91] getlocal 3 .............................. <iPosId>
  [ 93] joinpadstr .............................. <"iPosId:" && iPosId>
  [ 94] pusharglistnoret 2 ...................... <me, "iPosId:" && iPosId>
  [ 96] objcall 4 ............................... me.debug("iPosId:" && iPosId)
  [ 98] getlocal 2 .............................. <oPossession>
  [100] pusharglist 1 ........................... <oPossession>
  [102] objcall 574 ............................. <oPossession.getProperties()>
  [105] pusharglist 1 ........................... <oPossession.getProperties()>
  [107] objcall 574 ............................. <oPossession.getProperties().getProperties()>
  [110] setlocal 4 .............................. sProperties = oPossession.getProperties().getProperties()
  [112] getlocal 4 .............................. <sProperties>
  [114] pusharglist 1 ........................... <sProperties>
  [116] extcall 575 ............................. <value(sProperties)>
  [119] setlocal 5 .............................. aProperties = value(sProperties)
  [121] getparam 0 .............................. <me>
  [123] pushcons 70 ............................. <"aProperties:">
  [125] getlocal 5 .............................. <aProperties>
  [127] joinpadstr .............................. <"aProperties:" && aProperties>
  [128] pusharglistnoret 2 ...................... <me, "aProperties:" && aProperties>
  [130] objcall 4 ............................... me.debug("aProperties:" && aProperties)
  [132] getlocal 5 .............................. <aProperties>
  [134] pushsymb 600 ............................ <#ownerName>
  [137] pusharglist 2 ........................... <aProperties, #ownerName>
  [139] objcall 163 ............................. <aProperties[#ownerName]>
  [141] setlocal 6 .............................. sOwnerName = aProperties[#ownerName]
  [143] getlocal 5 .............................. <aProperties>
  [145] pushsymb 494 ............................ <#song>
  [148] pusharglist 2 ........................... <aProperties, #song>
  [150] objcall 163 ............................. <aProperties[#song]>
  [152] setlocal 7 .............................. sSong = aProperties[#song]
  [154] getlocal 5 .............................. <aProperties>
  [156] pushsymb 601 ............................ <#songName>
  [159] pusharglist 2 ........................... <aProperties, #songName>
  [161] objcall 163 ............................. <aProperties[#songName]>
  [163] setlocal 8 .............................. sSongName = aProperties[#songName]
  [165] pusharglist 0 ........................... <[:]>
  [167] pushproplist ............................ <[:]>
  [168] setlocal 9 .............................. aCd = [:]
  [170] getlocal 9 .............................. <aCd>
  [172] pushsymb 573 ............................ <#posId>
  [175] getlocal 3 .............................. <iPosId>
  [177] pusharglistnoret 3 ...................... <aCd, #posId, iPosId>
  [179] objcall 249 ............................. aCd[#posId] = iPosId
  [181] getlocal 9 .............................. <aCd>
  [183] pushsymb 597 ............................ <#author>
  [186] getlocal 6 .............................. <sOwnerName>
  [188] pusharglistnoret 3 ...................... <aCd, #author, sOwnerName>
  [190] objcall 249 ............................. aCd[#author] = sOwnerName
  [192] getlocal 9 .............................. <aCd>
  [194] pushsymb 355 ............................ <#name>
  [197] getlocal 8 .............................. <sSongName>
  [199] pusharglistnoret 3 ...................... <aCd, #name, sSongName>
  [201] objcall 249 ............................. aCd[#name] = sSongName
  [203] getlocal 9 .............................. <aCd>
  [205] pushsymb 494 ............................ <#song>
  [208] getlocal 7 .............................. <sSong>
  [210] pusharglistnoret 3 ...................... <aCd, #song, sSong>
  [212] objcall 249 ............................. aCd[#song] = sSong
  [214] getlocal 0 .............................. <aCds>
  [216] getlocal 9 .............................. <aCd>
  [218] pusharglistnoret 2 ...................... <aCds, aCd>
  [220] objcall 241 ............................. aCds.add(aCd)
  [222] pushint8 1
  [224] getlocal 1
  [226] add
  [227] setlocal 1
  [229] endrepeat [ 19]
  [231] getlocal 0 .............................. <aCds>
  [233] pusharglistnoret 1 ...................... <aCds>
  [235] extcall 121 ............................. return aCds
  [237] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 121 ............................. return sprite(me.spriteNum)
  [ 12] ret
end
