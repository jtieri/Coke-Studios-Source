property pStatus, pWindowObject, pDecalList, pRectDecal, pIndex, pItems, pcurrentpage, pTotalPages, pTotalItems
global oStudio

on new me, windowobject
  [  0] pushsymb 875 ............................ <#popup>
  [  3] setprop 225 ............................. pStatus = #popup
  [  5] getparam 1 .............................. <windowobject>
  [  7] setprop 233 ............................. pWindowObject = windowobject
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 425 ............................. pIndex = 1
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] extcall 23 .............................. return me
  [ 20] ret
end

on getBackpackCurrentPage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 424 .......................... <me.pcurrentpage>
  [  5] pusharglistnoret 1 ...................... <me.pcurrentpage>
  [  7] extcall 23 .............................. return me.pcurrentpage
  [  9] ret
end

on mouseDown me
  [  0] getprop 225 ............................. <pStatus>
  [  2] pushsymb 573 ............................ <#idle>
  [  5] eq ...................................... <pStatus = #idle>
  [  6] jmpifz [198] ............................ if pStatus = #idle then
  [  9] getglobal 30 ............................ <ElementMgr>
  [ 11] getobjprop 31 ........................... <ElementMgr.pOpenWindows>
  [ 13] getprop 233 ............................. <pWindowObject>
  [ 15] pusharglist 2 ........................... <ElementMgr.pOpenWindows, pWindowObject>
  [ 17] extcall 146 ............................. <getPos(ElementMgr.pOpenWindows, pWindowObject)>
  [ 19] getglobal 30 ............................ <ElementMgr>
  [ 21] getobjprop 31 ........................... <ElementMgr.pOpenWindows>
  [ 23] pusharglist 1 ........................... <ElementMgr.pOpenWindows>
  [ 25] extcall 29 .............................. <count(ElementMgr.pOpenWindows)>
  [ 27] lt ...................................... <getPos(ElementMgr.pOpenWindows, pWindowObject) < count(ElementMgr.pOpenWindows)>
  [ 28] jmpifz [ 37] ............................ if getPos(ElementMgr.pOpenWindows, pWindowObject) < count(ElementMgr.pOpenWindows) then
  [ 31] getprop 233 ............................. <pWindowObject>
  [ 33] pusharglistnoret 1 ...................... <pWindowObject>
  [ 35] objcall 3 ............................... pWindowObject.bringtofront()
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] setprop 578 ............................. pDecalList = []
  [ 43] getprop 233 ............................. <pWindowObject>
  [ 45] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [ 47] peek 0
  [ 49] pusharglist 1
  [ 51] extcall 29
  [ 53] pushint8 1
  [ 55] peek 0
  [ 57] peek 2
  [ 59] lteq
  [ 60] jmpifz [ 99] ............................ repeat with n in pWindowObject.pSpritelist
  [ 63] peek 2
  [ 65] peek 1
  [ 67] pusharglist 2
  [ 69] extcall 44
  [ 71] setlocal 0
  [ 73] getprop 578 ............................. <pDecalList>
  [ 76] pusharglist 0 ........................... <>
  [ 78] thebuiltin 576 .......................... <the clickLoc>
  [ 81] getlocal 0 .............................. <n>
  [ 83] pusharglist 1 ........................... <n>
  [ 85] extcall 36 .............................. <sprite(n)>
  [ 87] getobjprop 53 ........................... <sprite(n).loc>
  [ 89] sub ..................................... <the clickLoc - sprite(n).loc>
  [ 90] pusharglistnoret 2 ...................... <pDecalList, the clickLoc - sprite(n).loc>
  [ 92] extcall 42 .............................. append(pDecalList, the clickLoc - sprite(n).loc)
  [ 94] pushint8 1
  [ 96] add
  [ 97] endrepeat [ 55]
  [ 99] pop 3
  [101] getprop 233 ............................. <pWindowObject>
  [103] getobjprop 14 ........................... <pWindowObject.prect>
  [105] setlocal 1 .............................. oldrect = pWindowObject.prect
  [107] getlocal 1 .............................. <oldrect>
  [109] pushint8 1 .............................. <1>
  [111] pusharglist 2 ........................... <oldrect, 1>
  [113] objcall 44 .............................. <oldrect[1]>
  [115] getlocal 1 .............................. <oldrect>
  [117] pushint8 2 .............................. <2>
  [119] pusharglist 2 ........................... <oldrect, 2>
  [121] objcall 44 .............................. <oldrect[2]>
  [123] getlocal 1 .............................. <oldrect>
  [125] pushint8 3 .............................. <3>
  [127] pusharglist 2 ........................... <oldrect, 3>
  [129] objcall 44 .............................. <oldrect[3]>
  [131] getlocal 1 .............................. <oldrect>
  [133] pushint8 4 .............................. <4>
  [135] pusharglist 2 ........................... <oldrect, 4>
  [137] objcall 44 .............................. <oldrect[4]>
  [139] pusharglist 4 ........................... <oldrect[1], oldrect[2], oldrect[3], oldrect[4]>
  [141] extcall 15 .............................. <rect(oldrect[1], oldrect[2], oldrect[3], oldrect[4])>
  [143] getparam 0 .............................. <me>
  [145] getobjprop 228 .......................... <me.spriteNum>
  [147] pusharglist 1 ........................... <me.spriteNum>
  [149] extcall 36 .............................. <sprite(me.spriteNum)>
  [151] getobjprop 160 .......................... <sprite(me.spriteNum).left>
  [153] getparam 0 .............................. <me>
  [155] getobjprop 228 .......................... <me.spriteNum>
  [157] pusharglist 1 ........................... <me.spriteNum>
  [159] extcall 36 .............................. <sprite(me.spriteNum)>
  [161] getobjprop 577 .......................... <sprite(me.spriteNum).top>
  [164] getparam 0 .............................. <me>
  [166] getobjprop 228 .......................... <me.spriteNum>
  [168] pusharglist 1 ........................... <me.spriteNum>
  [170] extcall 36 .............................. <sprite(me.spriteNum)>
  [172] getobjprop 160 .......................... <sprite(me.spriteNum).left>
  [174] getparam 0 .............................. <me>
  [176] getobjprop 228 .......................... <me.spriteNum>
  [178] pusharglist 1 ........................... <me.spriteNum>
  [180] extcall 36 .............................. <sprite(me.spriteNum)>
  [182] getobjprop 577 .......................... <sprite(me.spriteNum).top>
  [185] pusharglist 4 ........................... <sprite(me.spriteNum).left, sprite(me.spriteNum).top, sprite(me.spriteNum).left, sprite(me.spriteNum).top>
  [187] extcall 15 .............................. <rect(sprite(me.spriteNum).left, sprite(me.spriteNum).top, sprite(me.spriteNum).left, sprite(me.spriteNum).top)>
  [189] sub ..................................... <rect(oldrect[1], oldrect[2], oldrect[3], oldrect[4]) - rect(sprite(me.spriteNum).left, sprite(me.spriteNum).top, sprite(me.spriteNum).left, sprite(me.spriteNum).top)>
  [190] setprop 579 ............................. pRectDecal = rect(oldrect[1], oldrect[2], oldrect[3], oldrect[4]) - rect(sprite(me.spriteNum).left, sprite(me.spriteNum).top, sprite(me.spriteNum).left, sprite(me.spriteNum).top)
  [193] pushsymb 580 ............................ <#drag>
  [196] setprop 225 ............................. pStatus = #drag
  [198] pusharglistnoret 0 ...................... <>
  [200] extcall 229 ............................. stopEvent()
  [202] ret
end

on getBackpackBackgroundSprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 228 .......................... <me.spriteNum>
  [  4] pusharglistnoret 1 ...................... <me.spriteNum>
  [  6] extcall 23 .............................. return me.spriteNum
  [  8] ret
end

on mouseUp me
  [  0] getprop 225 ............................. <pStatus>
  [  2] pushsymb 580 ............................ <#drag>
  [  5] eq ...................................... <pStatus = #drag>
  [  6] jmpifz [135] ............................ if pStatus = #drag then
  [  9] getprop 233 ............................. <pWindowObject>
  [ 11] pushsymb 14 ............................. <#prect>
  [ 13] pushint8 1 .............................. <1>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 228 .......................... <me.spriteNum>
  [ 19] pusharglist 1 ........................... <me.spriteNum>
  [ 21] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 23] getobjprop 160 .......................... <sprite(me.spriteNum).left>
  [ 25] getprop 579 ............................. <pRectDecal>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 2 ........................... <pRectDecal, 1>
  [ 32] objcall 44 .............................. <pRectDecal[1]>
  [ 34] add ..................................... <sprite(me.spriteNum).left + pRectDecal[1]>
  [ 35] pusharglistnoret 4 ...................... <pWindowObject, #prect, 1, sprite(me.spriteNum).left + pRectDecal[1]>
  [ 37] objcall 582 ............................. pWindowObject.prect[1] = sprite(me.spriteNum).left + pRectDecal[1]
  [ 40] getprop 233 ............................. <pWindowObject>
  [ 42] pushsymb 14 ............................. <#prect>
  [ 44] pushint8 2 .............................. <2>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 228 .......................... <me.spriteNum>
  [ 50] pusharglist 1 ........................... <me.spriteNum>
  [ 52] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 54] getobjprop 577 .......................... <sprite(me.spriteNum).top>
  [ 57] getprop 579 ............................. <pRectDecal>
  [ 60] pushint8 2 .............................. <2>
  [ 62] pusharglist 2 ........................... <pRectDecal, 2>
  [ 64] objcall 44 .............................. <pRectDecal[2]>
  [ 66] add ..................................... <sprite(me.spriteNum).top + pRectDecal[2]>
  [ 67] pusharglistnoret 4 ...................... <pWindowObject, #prect, 2, sprite(me.spriteNum).top + pRectDecal[2]>
  [ 69] objcall 582 ............................. pWindowObject.prect[2] = sprite(me.spriteNum).top + pRectDecal[2]
  [ 72] getprop 233 ............................. <pWindowObject>
  [ 74] pushsymb 14 ............................. <#prect>
  [ 76] pushint8 3 .............................. <3>
  [ 78] getparam 0 .............................. <me>
  [ 80] getobjprop 228 .......................... <me.spriteNum>
  [ 82] pusharglist 1 ........................... <me.spriteNum>
  [ 84] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 86] getobjprop 160 .......................... <sprite(me.spriteNum).left>
  [ 88] getprop 579 ............................. <pRectDecal>
  [ 91] pushint8 3 .............................. <3>
  [ 93] pusharglist 2 ........................... <pRectDecal, 3>
  [ 95] objcall 44 .............................. <pRectDecal[3]>
  [ 97] add ..................................... <sprite(me.spriteNum).left + pRectDecal[3]>
  [ 98] pusharglistnoret 4 ...................... <pWindowObject, #prect, 3, sprite(me.spriteNum).left + pRectDecal[3]>
  [100] objcall 582 ............................. pWindowObject.prect[3] = sprite(me.spriteNum).left + pRectDecal[3]
  [103] getprop 233 ............................. <pWindowObject>
  [105] pushsymb 14 ............................. <#prect>
  [107] pushint8 4 .............................. <4>
  [109] getparam 0 .............................. <me>
  [111] getobjprop 228 .......................... <me.spriteNum>
  [113] pusharglist 1 ........................... <me.spriteNum>
  [115] extcall 36 .............................. <sprite(me.spriteNum)>
  [117] getobjprop 577 .......................... <sprite(me.spriteNum).top>
  [120] getprop 579 ............................. <pRectDecal>
  [123] pushint8 4 .............................. <4>
  [125] pusharglist 2 ........................... <pRectDecal, 4>
  [127] objcall 44 .............................. <pRectDecal[4]>
  [129] add ..................................... <sprite(me.spriteNum).top + pRectDecal[4]>
  [130] pusharglistnoret 4 ...................... <pWindowObject, #prect, 4, sprite(me.spriteNum).top + pRectDecal[4]>
  [132] objcall 582 ............................. pWindowObject.prect[4] = sprite(me.spriteNum).top + pRectDecal[4]
  [135] pushsymb 573 ............................ <#idle>
  [138] setprop 225 ............................. pStatus = #idle
  [140] pusharglistnoret 0 ...................... <>
  [142] extcall 229 ............................. stopEvent()
  [144] ret
end

on mouseUpOutSide me
  [  0] getprop 225 ............................. <pStatus>
  [  2] pushsymb 580 ............................ <#drag>
  [  5] eq ...................................... <pStatus = #drag>
  [  6] jmpifz [135] ............................ if pStatus = #drag then
  [  9] getprop 233 ............................. <pWindowObject>
  [ 11] pushsymb 14 ............................. <#prect>
  [ 13] pushint8 1 .............................. <1>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 228 .......................... <me.spriteNum>
  [ 19] pusharglist 1 ........................... <me.spriteNum>
  [ 21] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 23] getobjprop 160 .......................... <sprite(me.spriteNum).left>
  [ 25] getprop 579 ............................. <pRectDecal>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 2 ........................... <pRectDecal, 1>
  [ 32] objcall 44 .............................. <pRectDecal[1]>
  [ 34] add ..................................... <sprite(me.spriteNum).left + pRectDecal[1]>
  [ 35] pusharglistnoret 4 ...................... <pWindowObject, #prect, 1, sprite(me.spriteNum).left + pRectDecal[1]>
  [ 37] objcall 582 ............................. pWindowObject.prect[1] = sprite(me.spriteNum).left + pRectDecal[1]
  [ 40] getprop 233 ............................. <pWindowObject>
  [ 42] pushsymb 14 ............................. <#prect>
  [ 44] pushint8 2 .............................. <2>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 228 .......................... <me.spriteNum>
  [ 50] pusharglist 1 ........................... <me.spriteNum>
  [ 52] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 54] getobjprop 577 .......................... <sprite(me.spriteNum).top>
  [ 57] getprop 579 ............................. <pRectDecal>
  [ 60] pushint8 2 .............................. <2>
  [ 62] pusharglist 2 ........................... <pRectDecal, 2>
  [ 64] objcall 44 .............................. <pRectDecal[2]>
  [ 66] add ..................................... <sprite(me.spriteNum).top + pRectDecal[2]>
  [ 67] pusharglistnoret 4 ...................... <pWindowObject, #prect, 2, sprite(me.spriteNum).top + pRectDecal[2]>
  [ 69] objcall 582 ............................. pWindowObject.prect[2] = sprite(me.spriteNum).top + pRectDecal[2]
  [ 72] getprop 233 ............................. <pWindowObject>
  [ 74] pushsymb 14 ............................. <#prect>
  [ 76] pushint8 3 .............................. <3>
  [ 78] getparam 0 .............................. <me>
  [ 80] getobjprop 228 .......................... <me.spriteNum>
  [ 82] pusharglist 1 ........................... <me.spriteNum>
  [ 84] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 86] getobjprop 160 .......................... <sprite(me.spriteNum).left>
  [ 88] getprop 579 ............................. <pRectDecal>
  [ 91] pushint8 3 .............................. <3>
  [ 93] pusharglist 2 ........................... <pRectDecal, 3>
  [ 95] objcall 44 .............................. <pRectDecal[3]>
  [ 97] add ..................................... <sprite(me.spriteNum).left + pRectDecal[3]>
  [ 98] pusharglistnoret 4 ...................... <pWindowObject, #prect, 3, sprite(me.spriteNum).left + pRectDecal[3]>
  [100] objcall 582 ............................. pWindowObject.prect[3] = sprite(me.spriteNum).left + pRectDecal[3]
  [103] getprop 233 ............................. <pWindowObject>
  [105] pushsymb 14 ............................. <#prect>
  [107] pushint8 4 .............................. <4>
  [109] getparam 0 .............................. <me>
  [111] getobjprop 228 .......................... <me.spriteNum>
  [113] pusharglist 1 ........................... <me.spriteNum>
  [115] extcall 36 .............................. <sprite(me.spriteNum)>
  [117] getobjprop 577 .......................... <sprite(me.spriteNum).top>
  [120] getprop 579 ............................. <pRectDecal>
  [123] pushint8 4 .............................. <4>
  [125] pusharglist 2 ........................... <pRectDecal, 4>
  [127] objcall 44 .............................. <pRectDecal[4]>
  [129] add ..................................... <sprite(me.spriteNum).top + pRectDecal[4]>
  [130] pusharglistnoret 4 ...................... <pWindowObject, #prect, 4, sprite(me.spriteNum).top + pRectDecal[4]>
  [132] objcall 582 ............................. pWindowObject.prect[4] = sprite(me.spriteNum).top + pRectDecal[4]
  [135] pushsymb 573 ............................ <#idle>
  [138] setprop 225 ............................. pStatus = #idle
  [140] ret
end

on exitFrame me
  [  0] getprop 225 ............................. <pStatus>
  [  2] pushsymb 580 ............................ <#drag>
  [  5] eq ...................................... <pStatus = #drag>
  [  6] jmpifz [286] ............................ if pStatus = #drag then / else
  [  9] getmovieprop 583 ........................ <the mouseLoc>
  [ 12] setlocal 0 .............................. pointloc = the mouseLoc
  [ 14] getlocal 0 .............................. <pointloc>
  [ 16] getprop 578 ............................. <pDecalList>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglist 2 ........................... <pDecalList, 1>
  [ 23] objcall 44 .............................. <pDecalList[1]>
  [ 25] sub ..................................... <pointloc - pDecalList[1]>
  [ 26] getobjprop 55 ........................... <(pointloc - pDecalList[1]).locH>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 228 .......................... <me.spriteNum>
  [ 32] pusharglist 1 ........................... <me.spriteNum>
  [ 34] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 36] getobjprop 50 ........................... <sprite(me.spriteNum).width>
  [ 38] add ..................................... <(pointloc - pDecalList[1]).locH + sprite(me.spriteNum).width>
  [ 39] getmovieprop 37 ......................... <the stage>
  [ 41] getchainedprop 15 ....................... <(the stage).rect>
  [ 43] getobjprop 50 ........................... <(the stage).rect.width>
  [ 45] gt ...................................... <((pointloc - pDecalList[1]).locH + sprite(me.spriteNum).width) > (the stage).rect.width>
  [ 46] jmpifz [ 85] ............................ if ((pointloc - pDecalList[1]).locH + sprite(me.spriteNum).width) > (the stage).rect.width then / else
  [ 49] getlocal 0 .............................. <pointloc>
  [ 51] getmovieprop 37 ......................... <the stage>
  [ 53] getchainedprop 15 ....................... <(the stage).rect>
  [ 55] getobjprop 50 ........................... <(the stage).rect.width>
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 228 .......................... <me.spriteNum>
  [ 61] pusharglist 1 ........................... <me.spriteNum>
  [ 63] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 65] getobjprop 50 ........................... <sprite(me.spriteNum).width>
  [ 67] sub ..................................... <(the stage).rect.width - sprite(me.spriteNum).width>
  [ 68] getprop 578 ............................. <pDecalList>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 2 ........................... <pDecalList, 1>
  [ 75] objcall 44 .............................. <pDecalList[1]>
  [ 77] getobjprop 55 ........................... <pDecalList[1].locH>
  [ 79] add ..................................... <(the stage).rect.width - sprite(me.spriteNum).width + pDecalList[1].locH>
  [ 80] setobjprop 55 ........................... pointloc.locH = (the stage).rect.width - sprite(me.spriteNum).width + pDecalList[1].locH
  [ 82] jmp [119]
  [ 85] getlocal 0 .............................. <pointloc>
  [ 87] getprop 578 ............................. <pDecalList>
  [ 90] pushint8 1 .............................. <1>
  [ 92] pusharglist 2 ........................... <pDecalList, 1>
  [ 94] objcall 44 .............................. <pDecalList[1]>
  [ 96] sub ..................................... <pointloc - pDecalList[1]>
  [ 97] getobjprop 55 ........................... <(pointloc - pDecalList[1]).locH>
  [ 99] pushzero ................................ <0>
  [100] lt ...................................... <(pointloc - pDecalList[1]).locH < 0>
  [101] jmpifz [119] ............................ if (pointloc - pDecalList[1]).locH < 0 then
  [104] getlocal 0 .............................. <pointloc>
  [106] getprop 578 ............................. <pDecalList>
  [109] pushint8 1 .............................. <1>
  [111] pusharglist 2 ........................... <pDecalList, 1>
  [113] objcall 44 .............................. <pDecalList[1]>
  [115] getobjprop 55 ........................... <pDecalList[1].locH>
  [117] setobjprop 55 ........................... pointloc.locH = pDecalList[1].locH
  [119] getlocal 0 .............................. <pointloc>
  [121] getprop 578 ............................. <pDecalList>
  [124] pushint8 1 .............................. <1>
  [126] pusharglist 2 ........................... <pDecalList, 1>
  [128] objcall 44 .............................. <pDecalList[1]>
  [130] sub ..................................... <pointloc - pDecalList[1]>
  [131] getobjprop 56 ........................... <(pointloc - pDecalList[1]).locV>
  [133] getparam 0 .............................. <me>
  [135] getobjprop 228 .......................... <me.spriteNum>
  [137] pusharglist 1 ........................... <me.spriteNum>
  [139] extcall 36 .............................. <sprite(me.spriteNum)>
  [141] getobjprop 51 ........................... <sprite(me.spriteNum).height>
  [143] add ..................................... <(pointloc - pDecalList[1]).locV + sprite(me.spriteNum).height>
  [144] getmovieprop 37 ......................... <the stage>
  [146] getchainedprop 15 ....................... <(the stage).rect>
  [148] getobjprop 51 ........................... <(the stage).rect.height>
  [150] gt ...................................... <((pointloc - pDecalList[1]).locV + sprite(me.spriteNum).height) > (the stage).rect.height>
  [151] jmpifz [190] ............................ if ((pointloc - pDecalList[1]).locV + sprite(me.spriteNum).height) > (the stage).rect.height then / else
  [154] getlocal 0 .............................. <pointloc>
  [156] getmovieprop 37 ......................... <the stage>
  [158] getchainedprop 15 ....................... <(the stage).rect>
  [160] getobjprop 51 ........................... <(the stage).rect.height>
  [162] getparam 0 .............................. <me>
  [164] getobjprop 228 .......................... <me.spriteNum>
  [166] pusharglist 1 ........................... <me.spriteNum>
  [168] extcall 36 .............................. <sprite(me.spriteNum)>
  [170] getobjprop 51 ........................... <sprite(me.spriteNum).height>
  [172] sub ..................................... <(the stage).rect.height - sprite(me.spriteNum).height>
  [173] getprop 578 ............................. <pDecalList>
  [176] pushint8 1 .............................. <1>
  [178] pusharglist 2 ........................... <pDecalList, 1>
  [180] objcall 44 .............................. <pDecalList[1]>
  [182] getobjprop 56 ........................... <pDecalList[1].locV>
  [184] add ..................................... <(the stage).rect.height - sprite(me.spriteNum).height + pDecalList[1].locV>
  [185] setobjprop 56 ........................... pointloc.locV = (the stage).rect.height - sprite(me.spriteNum).height + pDecalList[1].locV
  [187] jmp [224]
  [190] getlocal 0 .............................. <pointloc>
  [192] getprop 578 ............................. <pDecalList>
  [195] pushint8 1 .............................. <1>
  [197] pusharglist 2 ........................... <pDecalList, 1>
  [199] objcall 44 .............................. <pDecalList[1]>
  [201] sub ..................................... <pointloc - pDecalList[1]>
  [202] getobjprop 56 ........................... <(pointloc - pDecalList[1]).locV>
  [204] pushzero ................................ <0>
  [205] lt ...................................... <(pointloc - pDecalList[1]).locV < 0>
  [206] jmpifz [224] ............................ if (pointloc - pDecalList[1]).locV < 0 then
  [209] getlocal 0 .............................. <pointloc>
  [211] getprop 578 ............................. <pDecalList>
  [214] pushint8 1 .............................. <1>
  [216] pusharglist 2 ........................... <pDecalList, 1>
  [218] objcall 44 .............................. <pDecalList[1]>
  [220] getobjprop 56 ........................... <pDecalList[1].locV>
  [222] setobjprop 56 ........................... pointloc.locV = pDecalList[1].locV
  [224] pushint8 1 .............................. <1>
  [226] setlocal 1
  [228] getlocal 1
  [230] getprop 233 ............................. <pWindowObject>
  [232] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [234] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [236] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [238] lteq
  [239] jmpifz [283] ............................ repeat with n = 1 to count(pWindowObject.pSpritelist)
  [242] getprop 578 ............................. <pDecalList>
  [245] getlocal 1 .............................. <n>
  [247] pusharglist 2 ........................... <pDecalList, n>
  [249] objcall 44 .............................. <pDecalList[n]>
  [251] setlocal 2 .............................. delta = pDecalList[n]
  [253] getprop 233 ............................. <pWindowObject>
  [255] pushsymb 11 ............................. <#pSpritelist>
  [257] getlocal 1 .............................. <n>
  [259] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n>
  [261] objcall 149 ............................. <pWindowObject.pSpritelist[n]>
  [263] pusharglist 1 ........................... <pWindowObject.pSpritelist[n]>
  [265] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n])>
  [267] getlocal 0 .............................. <pointloc>
  [269] getlocal 2 .............................. <delta>
  [271] sub ..................................... <pointloc - delta>
  [272] setobjprop 53 ........................... sprite(pWindowObject.pSpritelist[n]).loc = pointloc - delta
  [274] pushint8 1
  [276] getlocal 1
  [278] add
  [279] setlocal 1
  [281] endrepeat [228]
  [283] jmp [810]
  [286] getprop 225 ............................. <pStatus>
  [288] pushsymb 875 ............................ <#popup>
  [291] eq ...................................... <pStatus = #popup>
  [292] jmpifz [558] ............................ if pStatus = #popup then / else
  [295] getprop 233 ............................. <pWindowObject>
  [297] pushsymb 14 ............................. <#prect>
  [299] pushint8 2 .............................. <2>
  [301] pusharglist 3 ........................... <pWindowObject, #prect, 2>
  [303] objcall 149 ............................. <pWindowObject.prect[2]>
  [305] pushint8 21 ............................. <21>
  [307] sub ..................................... <pWindowObject.prect[2] - 21>
  [308] pushfloat32 5.0 ......................... <5.0>
  [313] div ..................................... <(pWindowObject.prect[2] - 21) / 5.0>
  [314] setlocal 3 .............................. diff = (pWindowObject.prect[2] - 21) / 5.0
  [316] getlocal 3 .............................. <diff>
  [318] pushint8 1 .............................. <1>
  [320] lt ...................................... <diff < 1>
  [321] jmpifz [451] ............................ if diff < 1 then / else
  [324] pushsymb 573 ............................ <#idle>
  [327] setprop 225 ............................. pStatus = #idle
  [329] getglobal 79 ............................ <oDenizenManager>
  [331] pusharglist 1 ........................... <oDenizenManager>
  [333] objcall 80 .............................. <oDenizenManager.getScreenName()>
  [335] setlocal 4 .............................. myscreenname = oDenizenManager.getScreenName()
  [337] getglobal 457 ........................... <oPossessionManager>
  [340] getlocal 4 .............................. <myscreenname>
  [342] pushint8 1 .............................. <1>
  [344] pushint8 25 ............................. <25>
  [346] pusharglistnoret 4 ...................... <oPossessionManager, myscreenname, 1, 25>
  [348] objcall 458 ............................. oPossessionManager.getPossessionsInBackpack(myscreenname, 1, 25)
  [351] getprop 233 ............................. <pWindowObject>
  [353] pushsymb 11 ............................. <#pSpritelist>
  [355] getprop 233 ............................. <pWindowObject>
  [357] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [359] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [361] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [363] pushint8 1 .............................. <1>
  [365] sub ..................................... <count(pWindowObject.pSpritelist) - 1>
  [366] pusharglist 3 ........................... <pWindowObject, #pSpritelist, count(pWindowObject.pSpritelist) - 1>
  [368] objcall 149 ............................. <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [370] pusharglist 1 ........................... <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [372] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1])>
  [374] pushcons 0 .............................. <"cc.backpack.front.down">
  [376] pusharglist 1 ........................... <"cc.backpack.front.down">
  [378] extcall 34 .............................. <member("cc.backpack.front.down")>
  [380] setobjprop 34 ........................... sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]).member = member("cc.backpack.front.down")
  [382] getprop 233 ............................. <pWindowObject>
  [384] pushsymb 11 ............................. <#pSpritelist>
  [386] getprop 233 ............................. <pWindowObject>
  [388] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [390] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [392] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [394] pushint8 1 .............................. <1>
  [396] sub ..................................... <count(pWindowObject.pSpritelist) - 1>
  [397] pusharglist 3 ........................... <pWindowObject, #pSpritelist, count(pWindowObject.pSpritelist) - 1>
  [399] objcall 149 ............................. <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [401] pusharglist 1 ........................... <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [403] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1])>
  [405] pushcons 0 .............................. <"cc.backpack.front.down">
  [407] pusharglist 1 ........................... <"cc.backpack.front.down">
  [409] extcall 34 .............................. <member("cc.backpack.front.down")>
  [411] getobjprop 50 ........................... <member("cc.backpack.front.down").width>
  [413] setobjprop 50 ........................... sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]).width = member("cc.backpack.front.down").width
  [415] getprop 233 ............................. <pWindowObject>
  [417] pushsymb 11 ............................. <#pSpritelist>
  [419] getprop 233 ............................. <pWindowObject>
  [421] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [423] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [425] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [427] pushint8 1 .............................. <1>
  [429] sub ..................................... <count(pWindowObject.pSpritelist) - 1>
  [430] pusharglist 3 ........................... <pWindowObject, #pSpritelist, count(pWindowObject.pSpritelist) - 1>
  [432] objcall 149 ............................. <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [434] pusharglist 1 ........................... <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [436] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1])>
  [438] pushcons 0 .............................. <"cc.backpack.front.down">
  [440] pusharglist 1 ........................... <"cc.backpack.front.down">
  [442] extcall 34 .............................. <member("cc.backpack.front.down")>
  [444] getobjprop 51 ........................... <member("cc.backpack.front.down").height>
  [446] setobjprop 51 ........................... sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]).height = member("cc.backpack.front.down").height
  [448] jmp [555]
  [451] getprop 233 ............................. <pWindowObject>
  [453] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [455] peek 0
  [457] pusharglist 1
  [459] extcall 29
  [461] pushint8 1
  [463] peek 0
  [465] peek 2
  [467] lteq
  [468] jmpifz [505] ............................ repeat with n in pWindowObject.pSpritelist
  [471] peek 2
  [473] peek 1
  [475] pusharglist 2
  [477] extcall 44
  [479] setlocal 1
  [481] getlocal 1 .............................. <n>
  [483] pusharglist 1 ........................... <n>
  [485] extcall 36 .............................. <sprite(n)>
  [487] getlocal 1 .............................. <n>
  [489] pusharglist 1 ........................... <n>
  [491] extcall 36 .............................. <sprite(n)>
  [493] getobjprop 56 ........................... <sprite(n).locV>
  [495] getlocal 3 .............................. <diff>
  [497] sub ..................................... <sprite(n).locV - diff>
  [498] setobjprop 56 ........................... sprite(n).locV = sprite(n).locV - diff
  [500] pushint8 1
  [502] add
  [503] endrepeat [463]
  [505] pop 3
  [507] getprop 233 ............................. <pWindowObject>
  [509] pushsymb 14 ............................. <#prect>
  [511] pushint8 2 .............................. <2>
  [513] getprop 233 ............................. <pWindowObject>
  [515] pushsymb 14 ............................. <#prect>
  [517] pushint8 2 .............................. <2>
  [519] pusharglist 3 ........................... <pWindowObject, #prect, 2>
  [521] objcall 149 ............................. <pWindowObject.prect[2]>
  [523] getlocal 3 .............................. <diff>
  [525] sub ..................................... <pWindowObject.prect[2] - diff>
  [526] pusharglistnoret 4 ...................... <pWindowObject, #prect, 2, pWindowObject.prect[2] - diff>
  [528] objcall 582 ............................. pWindowObject.prect[2] = pWindowObject.prect[2] - diff
  [531] getprop 233 ............................. <pWindowObject>
  [533] pushsymb 14 ............................. <#prect>
  [535] pushint8 4 .............................. <4>
  [537] getprop 233 ............................. <pWindowObject>
  [539] pushsymb 14 ............................. <#prect>
  [541] pushint8 4 .............................. <4>
  [543] pusharglist 3 ........................... <pWindowObject, #prect, 4>
  [545] objcall 149 ............................. <pWindowObject.prect[4]>
  [547] getlocal 3 .............................. <diff>
  [549] sub ..................................... <pWindowObject.prect[4] - diff>
  [550] pusharglistnoret 4 ...................... <pWindowObject, #prect, 4, pWindowObject.prect[4] - diff>
  [552] objcall 582 ............................. pWindowObject.prect[4] = pWindowObject.prect[4] - diff
  [555] jmp [810]
  [558] getprop 225 ............................. <pStatus>
  [560] pushsymb 876 ............................ <#popdown>
  [563] eq ...................................... <pStatus = #popdown>
  [564] jmpifz [810] ............................ if pStatus = #popdown then
  [567] getmovieprop 37 ......................... <the stage>
  [569] getchainedprop 15 ....................... <(the stage).rect>
  [571] getobjprop 51 ........................... <(the stage).rect.height>
  [573] getprop 233 ............................. <pWindowObject>
  [575] pushsymb 14 ............................. <#prect>
  [577] pushint8 2 .............................. <2>
  [579] pusharglist 3 ........................... <pWindowObject, #prect, 2>
  [581] objcall 149 ............................. <pWindowObject.prect[2]>
  [583] sub ..................................... <(the stage).rect.height - pWindowObject.prect[2]>
  [584] pushfloat32 5.0 ......................... <5.0>
  [589] div ..................................... <((the stage).rect.height - pWindowObject.prect[2]) / 5.0>
  [590] setlocal 3 .............................. diff = ((the stage).rect.height - pWindowObject.prect[2]) / 5.0
  [592] getprop 233 ............................. <pWindowObject>
  [594] pushsymb 11 ............................. <#pSpritelist>
  [596] getprop 233 ............................. <pWindowObject>
  [598] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [600] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [602] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [604] pushint8 1 .............................. <1>
  [606] sub ..................................... <count(pWindowObject.pSpritelist) - 1>
  [607] pusharglist 3 ........................... <pWindowObject, #pSpritelist, count(pWindowObject.pSpritelist) - 1>
  [609] objcall 149 ............................. <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [611] pusharglist 1 ........................... <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [613] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1])>
  [615] pushcons 1 .............................. <"cc.backpack.front">
  [617] pusharglist 1 ........................... <"cc.backpack.front">
  [619] extcall 34 .............................. <member("cc.backpack.front")>
  [621] setobjprop 34 ........................... sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]).member = member("cc.backpack.front")
  [623] getprop 233 ............................. <pWindowObject>
  [625] pushsymb 11 ............................. <#pSpritelist>
  [627] getprop 233 ............................. <pWindowObject>
  [629] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [631] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [633] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [635] pushint8 1 .............................. <1>
  [637] sub ..................................... <count(pWindowObject.pSpritelist) - 1>
  [638] pusharglist 3 ........................... <pWindowObject, #pSpritelist, count(pWindowObject.pSpritelist) - 1>
  [640] objcall 149 ............................. <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [642] pusharglist 1 ........................... <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [644] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1])>
  [646] pushcons 1 .............................. <"cc.backpack.front">
  [648] pusharglist 1 ........................... <"cc.backpack.front">
  [650] extcall 34 .............................. <member("cc.backpack.front")>
  [652] getobjprop 50 ........................... <member("cc.backpack.front").width>
  [654] setobjprop 50 ........................... sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]).width = member("cc.backpack.front").width
  [656] getprop 233 ............................. <pWindowObject>
  [658] pushsymb 11 ............................. <#pSpritelist>
  [660] getprop 233 ............................. <pWindowObject>
  [662] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [664] pusharglist 1 ........................... <pWindowObject.pSpritelist>
  [666] extcall 29 .............................. <count(pWindowObject.pSpritelist)>
  [668] pushint8 1 .............................. <1>
  [670] sub ..................................... <count(pWindowObject.pSpritelist) - 1>
  [671] pusharglist 3 ........................... <pWindowObject, #pSpritelist, count(pWindowObject.pSpritelist) - 1>
  [673] objcall 149 ............................. <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [675] pusharglist 1 ........................... <pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]>
  [677] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1])>
  [679] pushcons 1 .............................. <"cc.backpack.front">
  [681] pusharglist 1 ........................... <"cc.backpack.front">
  [683] extcall 34 .............................. <member("cc.backpack.front")>
  [685] getobjprop 51 ........................... <member("cc.backpack.front").height>
  [687] setobjprop 51 ........................... sprite(pWindowObject.pSpritelist[count(pWindowObject.pSpritelist) - 1]).height = member("cc.backpack.front").height
  [689] getlocal 3 .............................. <diff>
  [691] pushint8 1 .............................. <1>
  [693] lt ...................................... <diff < 1>
  [694] jmpifz [706] ............................ if diff < 1 then / else
  [697] getprop 233 ............................. <pWindowObject>
  [699] pusharglistnoret 1 ...................... <pWindowObject>
  [701] objcall 5 ............................... pWindowObject.closeWindow()
  [703] jmp [810]
  [706] getprop 233 ............................. <pWindowObject>
  [708] getobjprop 11 ........................... <pWindowObject.pSpritelist>
  [710] peek 0
  [712] pusharglist 1
  [714] extcall 29
  [716] pushint8 1
  [718] peek 0
  [720] peek 2
  [722] lteq
  [723] jmpifz [760] ............................ repeat with n in pWindowObject.pSpritelist
  [726] peek 2
  [728] peek 1
  [730] pusharglist 2
  [732] extcall 44
  [734] setlocal 1
  [736] getlocal 1 .............................. <n>
  [738] pusharglist 1 ........................... <n>
  [740] extcall 36 .............................. <sprite(n)>
  [742] getlocal 1 .............................. <n>
  [744] pusharglist 1 ........................... <n>
  [746] extcall 36 .............................. <sprite(n)>
  [748] getobjprop 56 ........................... <sprite(n).locV>
  [750] getlocal 3 .............................. <diff>
  [752] add ..................................... <sprite(n).locV + diff>
  [753] setobjprop 56 ........................... sprite(n).locV = sprite(n).locV + diff
  [755] pushint8 1
  [757] add
  [758] endrepeat [718]
  [760] pop 3
  [762] getprop 233 ............................. <pWindowObject>
  [764] pushsymb 14 ............................. <#prect>
  [766] pushint8 2 .............................. <2>
  [768] getprop 233 ............................. <pWindowObject>
  [770] pushsymb 14 ............................. <#prect>
  [772] pushint8 2 .............................. <2>
  [774] pusharglist 3 ........................... <pWindowObject, #prect, 2>
  [776] objcall 149 ............................. <pWindowObject.prect[2]>
  [778] getlocal 3 .............................. <diff>
  [780] add ..................................... <pWindowObject.prect[2] + diff>
  [781] pusharglistnoret 4 ...................... <pWindowObject, #prect, 2, pWindowObject.prect[2] + diff>
  [783] objcall 582 ............................. pWindowObject.prect[2] = pWindowObject.prect[2] + diff
  [786] getprop 233 ............................. <pWindowObject>
  [788] pushsymb 14 ............................. <#prect>
  [790] pushint8 4 .............................. <4>
  [792] getprop 233 ............................. <pWindowObject>
  [794] pushsymb 14 ............................. <#prect>
  [796] pushint8 4 .............................. <4>
  [798] pusharglist 3 ........................... <pWindowObject, #prect, 4>
  [800] objcall 149 ............................. <pWindowObject.prect[4]>
  [802] getlocal 3 .............................. <diff>
  [804] add ..................................... <pWindowObject.prect[4] + diff>
  [805] pusharglistnoret 4 ...................... <pWindowObject, #prect, 4, pWindowObject.prect[4] + diff>
  [807] objcall 582 ............................. pWindowObject.prect[4] = pWindowObject.prect[4] + diff
  [810] ret
end

on updatedisplay me
  [  0] getprop 426 ............................. <pTotalPages>
  [  3] pushint8 2 .............................. <2>
  [  5] lt ...................................... <pTotalPages < 2>
  [  6] jmpifz [ 43] ............................ if pTotalPages < 2 then / else
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 425 ............................. pIndex = 1
  [ 14] pushsymb 878 ............................ <#hideleftarrow>
  [ 17] pusharglistnoret 1 ...................... <#hideleftarrow>
  [ 19] extcall 375 ............................. sendAllSprites(#hideleftarrow)
  [ 22] pushsymb 879 ............................ <#hiderightarrow>
  [ 25] pusharglistnoret 1 ...................... <#hiderightarrow>
  [ 27] extcall 375 ............................. sendAllSprites(#hiderightarrow)
  [ 30] pushcons 2 .............................. <"cc.pack.pagecount">
  [ 32] pusharglist 1 ........................... <"cc.pack.pagecount">
  [ 34] extcall 34 .............................. <member("cc.pack.pagecount")>
  [ 36] pushcons 3 .............................. <EMPTY>
  [ 38] setobjprop 78 ........................... member("cc.pack.pagecount").text = EMPTY
  [ 40] jmp [166]
  [ 43] pushsymb 880 ............................ <#showleftarrow>
  [ 46] pusharglistnoret 1 ...................... <#showleftarrow>
  [ 48] extcall 375 ............................. sendAllSprites(#showleftarrow)
  [ 51] pushsymb 881 ............................ <#showrightarrow>
  [ 54] pusharglistnoret 1 ...................... <#showrightarrow>
  [ 56] extcall 375 ............................. sendAllSprites(#showrightarrow)
  [ 59] getglobal 91 ............................ <TextMgr>
  [ 61] pushcons 4 .............................. <"USER_ITEMS_PAGE">
  [ 63] pusharglist 2 ........................... <TextMgr, "USER_ITEMS_PAGE">
  [ 65] objcall 93 .............................. <TextMgr.GetRefText("USER_ITEMS_PAGE")>
  [ 67] setlocal 0 .............................. mytemplate = TextMgr.GetRefText("USER_ITEMS_PAGE")
  [ 69] pushcons 5 .............................. <"{num1}">
  [ 71] getlocal 0 .............................. <mytemplate>
  [ 73] pusharglist 2 ........................... <"{num1}", mytemplate>
  [ 75] extcall 164 ............................. <offset("{num1}", mytemplate)>
  [ 77] setlocal 1 .............................. mychar = offset("{num1}", mytemplate)
  [ 79] getlocal 1 .............................. <mychar>
  [ 81] getlocal 1 .............................. <mychar>
  [ 83] pushint8 5 .............................. <5>
  [ 85] add ..................................... <mychar + 5>
  [ 86] pushzero ................................ <0>
  [ 87] pushzero ................................ <0>
  [ 88] pushzero ................................ <0>
  [ 89] pushzero ................................ <0>
  [ 90] pushzero ................................ <0>
  [ 91] pushzero ................................ <0>
  [ 92] pushzero ................................ <0>
  [ 93] deletechunk 5 ........................... delete char mychar to mychar + 5 of mytemplate
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 424 .......................... <me.pcurrentpage>
  [100] pushcons 6 .............................. <" ">
  [102] joinstr ................................. <me.pcurrentpage & " ">
  [103] getlocal 1 .............................. <mychar>
  [105] pushzero ................................ <0>
  [106] pushzero ................................ <0>
  [107] pushzero ................................ <0>
  [108] pushzero ................................ <0>
  [109] pushzero ................................ <0>
  [110] pushzero ................................ <0>
  [111] pushzero ................................ <0>
  [112] pushzero ................................ <0>
  [113] putchunk 21 ............................. put me.pcurrentpage & " " into char mychar of mytemplate
  [115] pushcons 7 .............................. <"{num2}">
  [117] getlocal 0 .............................. <mytemplate>
  [119] pusharglist 2 ........................... <"{num2}", mytemplate>
  [121] extcall 164 ............................. <offset("{num2}", mytemplate)>
  [123] setlocal 1 .............................. mychar = offset("{num2}", mytemplate)
  [125] getlocal 1 .............................. <mychar>
  [127] getlocal 1 .............................. <mychar>
  [129] pushint8 5 .............................. <5>
  [131] add ..................................... <mychar + 5>
  [132] pushzero ................................ <0>
  [133] pushzero ................................ <0>
  [134] pushzero ................................ <0>
  [135] pushzero ................................ <0>
  [136] pushzero ................................ <0>
  [137] pushzero ................................ <0>
  [138] pushzero ................................ <0>
  [139] deletechunk 5 ........................... delete char mychar to mychar + 5 of mytemplate
  [141] getprop 426 ............................. <pTotalPages>
  [144] getlocal 1 .............................. <mychar>
  [146] pushzero ................................ <0>
  [147] pushzero ................................ <0>
  [148] pushzero ................................ <0>
  [149] pushzero ................................ <0>
  [150] pushzero ................................ <0>
  [151] pushzero ................................ <0>
  [152] pushzero ................................ <0>
  [153] pushzero ................................ <0>
  [154] putchunk 21 ............................. put pTotalPages into char mychar of mytemplate
  [156] pushcons 2 .............................. <"cc.pack.pagecount">
  [158] pusharglist 1 ........................... <"cc.pack.pagecount">
  [160] extcall 34 .............................. <member("cc.pack.pagecount")>
  [162] getlocal 0 .............................. <mytemplate>
  [164] setobjprop 78 ........................... member("cc.pack.pagecount").text = mytemplate
  [166] pushint8 1 .............................. <1>
  [168] setlocal 2
  [170] getlocal 2
  [172] pushint8 25 ............................. <25>
  [174] lteq
  [175] jmpifz [254] ............................ repeat with n = 1 to 25
  [178] getprop 233 ............................. <pWindowObject>
  [180] pushsymb 11 ............................. <#pSpritelist>
  [182] getlocal 2 .............................. <n>
  [184] pushint8 3 .............................. <3>
  [186] add ..................................... <n + 3>
  [187] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [189] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [191] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [193] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [195] pushcons 8 .............................. <"room_object_placeholder_sd">
  [197] pusharglist 1 ........................... <"room_object_placeholder_sd">
  [199] extcall 34 .............................. <member("room_object_placeholder_sd")>
  [201] setobjprop 34 ........................... sprite(pWindowObject.pSpritelist[n + 3]).member = member("room_object_placeholder_sd")
  [203] getprop 233 ............................. <pWindowObject>
  [205] pushsymb 11 ............................. <#pSpritelist>
  [207] getlocal 2 .............................. <n>
  [209] pushint8 3 .............................. <3>
  [211] add ..................................... <n + 3>
  [212] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [214] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [216] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [218] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [220] pushint8 1 .............................. <1>
  [222] setobjprop 50 ........................... sprite(pWindowObject.pSpritelist[n + 3]).width = 1
  [224] getprop 233 ............................. <pWindowObject>
  [226] pushsymb 11 ............................. <#pSpritelist>
  [228] getlocal 2 .............................. <n>
  [230] pushint8 3 .............................. <3>
  [232] add ..................................... <n + 3>
  [233] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [235] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [237] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [239] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [241] pushint8 1 .............................. <1>
  [243] setobjprop 51 ........................... sprite(pWindowObject.pSpritelist[n + 3]).height = 1
  [245] pushint8 1
  [247] getlocal 2
  [249] add
  [250] setlocal 2
  [252] endrepeat [170]
  [254] getglobal 30 ............................ <ElementMgr>
  [256] pusharglist 1 ........................... <ElementMgr>
  [258] objcall 264 ............................. <ElementMgr.getcatalogueitems()>
  [261] setlocal 3 .............................. catalogueitems = ElementMgr.getcatalogueitems()
  [263] pushint8 1 .............................. <1>
  [265] setlocal 2
  [267] getlocal 2
  [269] getprop 423 ............................. <pItems>
  [272] pusharglist 1 ........................... <pItems>
  [274] extcall 29 .............................. <count(pItems)>
  [276] pushint8 25 ............................. <25>
  [278] pusharglist 2 ........................... <count(pItems), 25>
  [280] extcall 673 ............................. <min(count(pItems), 25)>
  [283] lteq
  [284] jmpifz [726] ............................ repeat with n = 1 to min(count(pItems), 25)
  [287] getprop 423 ............................. <pItems>
  [290] getlocal 2 .............................. <n>
  [292] pusharglist 2 ........................... <pItems, n>
  [294] objcall 44 .............................. <pItems[n]>
  [296] setlocal 4 .............................. myitem = pItems[n]
  [298] getlocal 4 .............................. <myitem>
  [300] getobjprop 447 .......................... <myitem.prodID>
  [303] setlocal 5 .............................. myProdID = myitem.prodID
  [305] getlocal 3 .............................. <catalogueitems>
  [307] getlocal 5 .............................. <myProdID>
  [309] pusharglist 2 ........................... <catalogueitems, myProdID>
  [311] objcall 44 .............................. <catalogueitems[myProdID]>
  [313] getobjprop 447 .......................... <catalogueitems[myProdID].prodID>
  [316] getlocal 5 .............................. <myProdID>
  [318] nteq .................................... <catalogueitems[myProdID].prodID <> myProdID>
  [319] jmpifz [374] ............................ if catalogueitems[myProdID].prodID <> myProdID then / else
  [322] pushint8 1 .............................. <1>
  [324] setlocal 6
  [326] getlocal 6
  [328] getlocal 3 .............................. <catalogueitems>
  [330] pusharglist 1 ........................... <catalogueitems>
  [332] extcall 29 .............................. <count(catalogueitems)>
  [334] lteq
  [335] jmpifz [371] ............................ repeat with m = 1 to count(catalogueitems)
  [338] getlocal 3 .............................. <catalogueitems>
  [340] getlocal 6 .............................. <m>
  [342] pusharglist 2 ........................... <catalogueitems, m>
  [344] objcall 44 .............................. <catalogueitems[m]>
  [346] setlocal 7 .............................. myList = catalogueitems[m]
  [348] getlocal 7 .............................. <myList>
  [350] getobjprop 447 .......................... <myList.prodID>
  [353] getlocal 5 .............................. <myProdID>
  [355] eq ...................................... <myList.prodID = myProdID>
  [356] jmpifz [362] ............................ if myList.prodID = myProdID then
  [359] jmp [371] ............................... exit repeat
  [362] pushint8 1
  [364] getlocal 6
  [366] add
  [367] setlocal 6
  [369] endrepeat [326]
  [371] jmp [384]
  [374] getlocal 3 .............................. <catalogueitems>
  [376] getlocal 5 .............................. <myProdID>
  [378] pusharglist 2 ........................... <catalogueitems, myProdID>
  [380] objcall 44 .............................. <catalogueitems[myProdID]>
  [382] setlocal 7 .............................. myList = catalogueitems[myProdID]
  [384] getlocal 7 .............................. <myList>
  [386] getobjprop 882 .......................... <myList.imageBase>
  [389] setlocal 8 .............................. myImgBase = myList.imageBase
  [391] getlocal 7 .............................. <myList>
  [393] pushsymb 883 ............................ <#attributes>
  [396] pushsymb 884 ............................ <#color_small>
  [399] pusharglist 3 ........................... <myList, #attributes, #color_small>
  [401] objcall 149 ............................. <myList.attributes[#color_small]>
  [403] pusharglist 1 ........................... <myList.attributes[#color_small]>
  [405] extcall 12 .............................. <voidp(myList.attributes[#color_small])>
  [407] pushzero ................................ <0>
  [408] eq ...................................... <voidp(myList.attributes[#color_small]) = 0>
  [409] jmpifz [433] ............................ if voidp(myList.attributes[#color_small]) = 0 then / else
  [412] getlocal 7 .............................. <myList>
  [414] pushsymb 883 ............................ <#attributes>
  [417] pushsymb 884 ............................ <#color_small>
  [420] pusharglist 3 ........................... <myList, #attributes, #color_small>
  [422] objcall 149 ............................. <myList.attributes[#color_small]>
  [424] pusharglist 1 ........................... <myList.attributes[#color_small]>
  [426] extcall 83 .............................. <rgb(myList.attributes[#color_small])>
  [428] setlocal 9 .............................. myColor = rgb(myList.attributes[#color_small])
  [430] jmp [448]
  [433] pushint16 255 ........................... <255>
  [436] pushint16 255 ........................... <255>
  [439] pushint16 255 ........................... <255>
  [442] pusharglist 3 ........................... <255, 255, 255>
  [444] extcall 83 .............................. <rgb(255, 255, 255)>
  [446] setlocal 9 .............................. myColor = rgb(255, 255, 255)
  [448] getlocal 4 .............................. <myitem>
  [450] getobjprop 885 .......................... <myitem.posId>
  [453] setlocal 10 ............................. myPosId = myitem.posId
  [455] getprop 233 ............................. <pWindowObject>
  [457] pushsymb 11 ............................. <#pSpritelist>
  [459] getlocal 2 .............................. <n>
  [461] pushint8 3 .............................. <3>
  [463] add ..................................... <n + 3>
  [464] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [466] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [468] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [470] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [472] getlocal 9 .............................. <myColor>
  [474] setobjprop 49 ........................... sprite(pWindowObject.pSpritelist[n + 3]).bgColor = myColor
  [476] getprop 233 ............................. <pWindowObject>
  [478] pushsymb 11 ............................. <#pSpritelist>
  [480] getlocal 2 .............................. <n>
  [482] pushint8 3 .............................. <3>
  [484] add ..................................... <n + 3>
  [485] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [487] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [489] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [491] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [493] pushint8 36 ............................. <36>
  [495] setobjprop 54 ........................... sprite(pWindowObject.pSpritelist[n + 3]).ink = 36
  [497] getlocal 7 .............................. <myList>
  [499] pushsymb 70 ............................. <#type>
  [501] pusharglist 2 ........................... <myList, #type>
  [503] objcall 44 .............................. <myList[#type]>
  [505] pushcons 9 .............................. <"Separator">
  [507] eq ...................................... <myList[#type] = "Separator">
  [508] jmpifz [532] ............................ if myList[#type] = "Separator" then
  [511] getprop 233 ............................. <pWindowObject>
  [513] pushsymb 11 ............................. <#pSpritelist>
  [515] getlocal 2 .............................. <n>
  [517] pushint8 3 .............................. <3>
  [519] add ..................................... <n + 3>
  [520] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [522] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [524] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [526] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [528] pushint8 41 ............................. <41>
  [530] setobjprop 54 ........................... sprite(pWindowObject.pSpritelist[n + 3]).ink = 41
  [532] getprop 233 ............................. <pWindowObject>
  [534] pushsymb 11 ............................. <#pSpritelist>
  [536] getlocal 2 .............................. <n>
  [538] pushint8 3 .............................. <3>
  [540] add ..................................... <n + 3>
  [541] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [543] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [545] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [547] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [549] getlocal 8 .............................. <myImgBase>
  [551] pushcons 10 ............................. <"_small">
  [553] joinstr ................................. <myImgBase & "_small">
  [554] pusharglist 1 ........................... <myImgBase & "_small">
  [556] extcall 34 .............................. <member(myImgBase & "_small")>
  [558] setobjprop 34 ........................... sprite(pWindowObject.pSpritelist[n + 3]).member = member(myImgBase & "_small")
  [560] getprop 233 ............................. <pWindowObject>
  [562] pushsymb 11 ............................. <#pSpritelist>
  [564] getlocal 2 .............................. <n>
  [566] pushint8 3 .............................. <3>
  [568] add ..................................... <n + 3>
  [569] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [571] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [573] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [575] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [577] getlocal 7 .............................. <myList>
  [579] getobjprop 21 ........................... <myList.name>
  [581] setobjprop 13 ........................... sprite(pWindowObject.pSpritelist[n + 3]).pname = myList.name
  [583] getprop 233 ............................. <pWindowObject>
  [585] pushsymb 11 ............................. <#pSpritelist>
  [587] getlocal 2 .............................. <n>
  [589] pushint8 3 .............................. <3>
  [591] add ..................................... <n + 3>
  [592] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [594] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [596] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [598] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [600] getlocal 5 .............................. <myProdID>
  [602] setobjprop 886 .......................... sprite(pWindowObject.pSpritelist[n + 3]).pProdID = myProdID
  [605] getprop 233 ............................. <pWindowObject>
  [607] pushsymb 11 ............................. <#pSpritelist>
  [609] getlocal 2 .............................. <n>
  [611] pushint8 3 .............................. <3>
  [613] add ..................................... <n + 3>
  [614] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [616] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [618] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [620] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [622] getlocal 10 ............................. <myPosId>
  [624] setobjprop 887 .......................... sprite(pWindowObject.pSpritelist[n + 3]).pPosId = myPosId
  [627] getprop 233 ............................. <pWindowObject>
  [629] pushsymb 11 ............................. <#pSpritelist>
  [631] getlocal 2 .............................. <n>
  [633] pushint8 3 .............................. <3>
  [635] add ..................................... <n + 3>
  [636] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [638] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [640] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [642] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [644] getlocal 4 .............................. <myitem>
  [646] pushsymb 883 ............................ <#attributes>
  [649] pusharglist 2 ........................... <myitem, #attributes>
  [651] objcall 44 .............................. <myitem[#attributes]>
  [653] setobjprop 451 .......................... sprite(pWindowObject.pSpritelist[n + 3]).aAttributes = myitem[#attributes]
  [656] getprop 233 ............................. <pWindowObject>
  [658] pushsymb 11 ............................. <#pSpritelist>
  [660] getlocal 2 .............................. <n>
  [662] pushint8 3 .............................. <3>
  [664] add ..................................... <n + 3>
  [665] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [667] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [669] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [671] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [673] getlocal 8 .............................. <myImgBase>
  [675] pushcons 10 ............................. <"_small">
  [677] joinstr ................................. <myImgBase & "_small">
  [678] pusharglist 1 ........................... <myImgBase & "_small">
  [680] extcall 34 .............................. <member(myImgBase & "_small")>
  [682] getobjprop 50 ........................... <member(myImgBase & "_small").width>
  [684] setobjprop 50 ........................... sprite(pWindowObject.pSpritelist[n + 3]).width = member(myImgBase & "_small").width
  [686] getprop 233 ............................. <pWindowObject>
  [688] pushsymb 11 ............................. <#pSpritelist>
  [690] getlocal 2 .............................. <n>
  [692] pushint8 3 .............................. <3>
  [694] add ..................................... <n + 3>
  [695] pusharglist 3 ........................... <pWindowObject, #pSpritelist, n + 3>
  [697] objcall 149 ............................. <pWindowObject.pSpritelist[n + 3]>
  [699] pusharglist 1 ........................... <pWindowObject.pSpritelist[n + 3]>
  [701] extcall 36 .............................. <sprite(pWindowObject.pSpritelist[n + 3])>
  [703] getlocal 8 .............................. <myImgBase>
  [705] pushcons 10 ............................. <"_small">
  [707] joinstr ................................. <myImgBase & "_small">
  [708] pusharglist 1 ........................... <myImgBase & "_small">
  [710] extcall 34 .............................. <member(myImgBase & "_small")>
  [712] getobjprop 51 ........................... <member(myImgBase & "_small").height>
  [714] setobjprop 51 ........................... sprite(pWindowObject.pSpritelist[n + 3]).height = member(myImgBase & "_small").height
  [716] pushint8 1
  [718] getlocal 2
  [720] add
  [721] setlocal 2
  [723] endrepeat [267]
  [726] ret
end
