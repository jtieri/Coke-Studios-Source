property bDebug, foRoom, bInARoom, oSession, oController

on new me, _oSession, _oController
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 85 ........................... me.bDebug = 1
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 738 .......................... me.bInARoom = 0
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 1 .............................. <_oSession>
  [ 16] setobjprop 451 .......................... me.oSession = _oSession
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 2 .............................. <_oController>
  [ 23] setobjprop 1126 ......................... me.oController = _oController
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] extcall 121 ............................. return me
  [ 32] ret
end

on setRoomObject me, _foRoom
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"setRoomObject() ">
  [  4] getparam 1 .............................. <_foRoom>
  [  6] joinstr ................................. <"setRoomObject() " & _foRoom>
  [  7] pusharglistnoret 2 ...................... <me, "setRoomObject() " & _foRoom>
  [  9] objcall 4 ............................... me.debug("setRoomObject() " & _foRoom)
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 1 .............................. <_foRoom>
  [ 15] setobjprop 721 .......................... me.foRoom = _foRoom
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 2 ............................... me.setCallbacks()
  [ 24] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 451 ...................... <me.oSession>
  [  5] pusharglist 1 ........................... <me.oSession>
  [  7] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [ 10] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 12] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 721 .......................... <me.foRoom>
  [ 19] pushcons 1 .............................. <"roomEntered">
  [ 21] pushsymb 729 ............................ <#roomEntered>
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "roomEntered", #roomEntered, me>
  [ 28] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "roomEntered", #roomEntered, me)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 451 ...................... <me.oSession>
  [ 35] pusharglist 1 ........................... <me.oSession>
  [ 37] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [ 40] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 42] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 721 .......................... <me.foRoom>
  [ 49] pushcons 2 .............................. <"roomEnterFailed">
  [ 51] pushsymb 730 ............................ <#roomEnterFailed>
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "roomEnterFailed", #roomEnterFailed, me>
  [ 58] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "roomEnterFailed", #roomEnterFailed, me)
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 451 ...................... <me.oSession>
  [ 65] pusharglist 1 ........................... <me.oSession>
  [ 67] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [ 70] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 72] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 721 .......................... <me.foRoom>
  [ 79] pushcons 3 .............................. <"roomExited">
  [ 81] pushsymb 731 ............................ <#roomExited>
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "roomExited", #roomExited, me>
  [ 88] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "roomExited", #roomExited, me)
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 451 ...................... <me.oSession>
  [ 95] pusharglist 1 ........................... <me.oSession>
  [ 97] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [100] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [102] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [104] getparam 0 .............................. <me>
  [106] getobjprop 721 .......................... <me.foRoom>
  [109] pushcons 4 .............................. <"exception">
  [111] pushsymb 676 ............................ <#exception>
  [114] getparam 0 .............................. <me>
  [116] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "exception", #exception, me>
  [118] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "exception", #exception, me)
  [120] getparam 0 .............................. <me>
  [122] getchainedprop 451 ...................... <me.oSession>
  [125] pusharglist 1 ........................... <me.oSession>
  [127] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [130] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [132] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [134] getparam 0 .............................. <me>
  [136] getobjprop 721 .......................... <me.foRoom>
  [139] pushcons 5 .............................. <"participantEntered">
  [141] pushsymb 732 ............................ <#participantEntered>
  [144] getparam 0 .............................. <me>
  [146] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "participantEntered", #participantEntered, me>
  [148] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "participantEntered", #participantEntered, me)
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 451 ...................... <me.oSession>
  [155] pusharglist 1 ........................... <me.oSession>
  [157] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [160] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [162] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [164] getparam 0 .............................. <me>
  [166] getobjprop 721 .......................... <me.foRoom>
  [169] pushcons 6 .............................. <"participantExited">
  [171] pushsymb 733 ............................ <#participantExited>
  [174] getparam 0 .............................. <me>
  [176] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "participantExited", #participantExited, me>
  [178] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "participantExited", #participantExited, me)
  [180] getparam 0 .............................. <me>
  [182] getchainedprop 451 ...................... <me.oSession>
  [185] pusharglist 1 ........................... <me.oSession>
  [187] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [190] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [192] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [194] getparam 0 .............................. <me>
  [196] getobjprop 721 .......................... <me.foRoom>
  [199] pushcons 7 .............................. <"participantEjected">
  [201] pushsymb 734 ............................ <#participantEjected>
  [204] getparam 0 .............................. <me>
  [206] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "participantEjected", #participantEjected, me>
  [208] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "participantEjected", #participantEjected, me)
  [210] getparam 0 .............................. <me>
  [212] getchainedprop 451 ...................... <me.oSession>
  [215] pusharglist 1 ........................... <me.oSession>
  [217] objcall 1114 ............................ <me.oSession.getFlashSprite()>
  [220] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [222] extcall 103 ............................. <sprite(me.oSession.getFlashSprite())>
  [224] getparam 0 .............................. <me>
  [226] getobjprop 721 .......................... <me.foRoom>
  [229] pushcons 8 .............................. <"receiveCallForHelp">
  [231] pushsymb 1141 ........................... <#receiveCallForHelp>
  [234] getparam 0 .............................. <me>
  [236] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "receiveCallForHelp", #receiveCallForHelp, me>
  [238] objcall 114 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "receiveCallForHelp", #receiveCallForHelp, me)
  [240] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 85 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 9 .............................. <"ModRoom: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"ModRoom: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"ModRoom: " & sMessage>
  [ 17] extcall 118 ............................. put "ModRoom: " & sMessage
  [ 19] ret
end

on setInARoom me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 738 .......................... me.bInARoom = bState
  [  7] ret
end

on getInARoom me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 738 .......................... <me.bInARoom>
  [  5] pusharglistnoret 1 ...................... <me.bInARoom>
  [  7] extcall 121 ............................. return me.bInARoom
  [  9] ret
end

on getRoomID me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 721 .......................... <me.foRoom>
  [  5] pusharglist 1 ........................... <me.foRoom>
  [  7] extcall 135 ............................. <voidp(me.foRoom)>
  [  9] not ..................................... <not voidp(me.foRoom)>
  [ 10] jmpifz [ 27] ............................ if not voidp(me.foRoom) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 721 ...................... <me.foRoom>
  [ 18] pusharglist 1 ........................... <me.foRoom>
  [ 20] objcall 726 ............................. <me.foRoom.getRoomID()>
  [ 23] pusharglistnoret 1 ...................... <me.foRoom.getRoomID()>
  [ 25] extcall 121 ............................. return me.foRoom.getRoomID()
  [ 27] ret
end

on sendEnterRoom me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 10 ............................. <"sendEnterRoom()">
  [  4] pusharglistnoret 2 ...................... <me, "sendEnterRoom()">
  [  6] objcall 4 ............................... me.debug("sendEnterRoom()")
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 451 ...................... <me.oSession>
  [ 13] getobjprop 110 .......................... <me.oSession.bTestMode>
  [ 15] jmpifz [ 22] ............................ if me.oSession.bTestMode then
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 121 ............................. return 
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 721 ...................... <me.foRoom>
  [ 27] getobjprop 1142 ......................... <me.foRoom.MODERATORS_GROUP>
  [ 30] setlocal 0 .............................. sGroupId = me.foRoom.MODERATORS_GROUP
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 721 ...................... <me.foRoom>
  [ 37] getlocal 0 .............................. <sGroupId>
  [ 39] pusharglistnoret 2 ...................... <me.foRoom, sGroupId>
  [ 41] objcall 727 ............................. me.foRoom.sendEnterRoom(sGroupId)
  [ 44] pushint8 1 .............................. <1>
  [ 46] pusharglistnoret 1 ...................... <1>
  [ 48] extcall 121 ............................. return 1
  [ 50] ret
end

on sendExitRoom me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 11 ............................. <"sendExitRoom() ">
  [  4] pusharglistnoret 2 ...................... <me, "sendExitRoom() ">
  [  6] objcall 4 ............................... me.debug("sendExitRoom() ")
  [  8] getprop 451 ............................. <oSession>
  [ 11] getobjprop 110 .......................... <oSession.bTestMode>
  [ 13] jmpifz [ 20] ............................ if oSession.bTestMode then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 121 ............................. return 
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 721 ...................... <me.foRoom>
  [ 25] pusharglistnoret 1 ...................... <me.foRoom>
  [ 27] objcall 728 ............................. me.foRoom.sendExitRoom()
  [ 30] ret
end

on sendPickUpCallForHelp me, iID, bIsAlert
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"sendPickUpCallForHelp() ">
  [  4] getparam 1 .............................. <iID>
  [  6] joinstr ................................. <"sendPickUpCallForHelp() " & iID>
  [  7] getparam 2 .............................. <bIsAlert>
  [  9] joinpadstr .............................. <"sendPickUpCallForHelp() " & iID && bIsAlert>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "sendPickUpCallForHelp() " & iID && bIsAlert, 1>
  [ 14] objcall 4 ............................... me.debug("sendPickUpCallForHelp() " & iID && bIsAlert, 1)
  [ 16] getprop 451 ............................. <oSession>
  [ 19] getobjprop 110 .......................... <oSession.bTestMode>
  [ 21] jmpifz [ 28] ............................ if oSession.bTestMode then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 121 ............................. return 
  [ 28] getparam 0 .............................. <me>
  [ 30] getchainedprop 721 ...................... <me.foRoom>
  [ 33] getparam 1 .............................. <iID>
  [ 35] getparam 2 .............................. <bIsAlert>
  [ 37] pusharglistnoret 3 ...................... <me.foRoom, iID, bIsAlert>
  [ 39] objcall 1136 ............................ me.foRoom.sendPickUpCallForHelp(iID, bIsAlert)
  [ 42] ret
end

on sendRespondToCallForHelp me, iID, bIsAlert, sResponse
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"sendPickUpCallForHelp() ">
  [  4] getparam 1 .............................. <iID>
  [  6] joinstr ................................. <"sendPickUpCallForHelp() " & iID>
  [  7] getparam 2 .............................. <bIsAlert>
  [  9] joinpadstr .............................. <"sendPickUpCallForHelp() " & iID && bIsAlert>
  [ 10] getparam 3 .............................. <sResponse>
  [ 12] joinpadstr .............................. <"sendPickUpCallForHelp() " & iID && bIsAlert && sResponse>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 3 ...................... <me, "sendPickUpCallForHelp() " & iID && bIsAlert && sResponse, 1>
  [ 17] objcall 4 ............................... me.debug("sendPickUpCallForHelp() " & iID && bIsAlert && sResponse, 1)
  [ 19] getprop 451 ............................. <oSession>
  [ 22] getobjprop 110 .......................... <oSession.bTestMode>
  [ 24] jmpifz [ 31] ............................ if oSession.bTestMode then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 121 ............................. return 
  [ 31] getparam 3 .............................. <sResponse>
  [ 33] pusharglist 1 ........................... <sResponse>
  [ 35] extcall 135 ............................. <voidp(sResponse)>
  [ 37] getparam 3 .............................. <sResponse>
  [ 39] pushcons 13 ............................. <EMPTY>
  [ 41] eq ...................................... <sResponse = EMPTY>
  [ 42] or ...................................... <voidp(sResponse) or (sResponse = EMPTY)>
  [ 43] jmpifz [ 56] ............................ if voidp(sResponse) or (sResponse = EMPTY) then
  [ 46] pushcons 14 ............................. <"Must supply a response">
  [ 48] pusharglistnoret 1 ...................... <"Must supply a response">
  [ 50] extcall 191 ............................. alert("Must supply a response")
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 121 ............................. return 
  [ 56] getparam 0 .............................. <me>
  [ 58] getchainedprop 721 ...................... <me.foRoom>
  [ 61] getparam 1 .............................. <iID>
  [ 63] getparam 2 .............................. <bIsAlert>
  [ 65] getparam 3 .............................. <sResponse>
  [ 67] pusharglistnoret 4 ...................... <me.foRoom, iID, bIsAlert, sResponse>
  [ 69] objcall 1137 ............................ me.foRoom.sendRespondToCallForHelp(iID, bIsAlert, sResponse)
  [ 72] ret
end

on sendModMessage me, sScreenName, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 15 ............................. <"sendModMessage() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendModMessage() " & sScreenName>
  [  7] getparam 2 .............................. <sMessage>
  [  9] joinpadstr .............................. <"sendModMessage() " & sScreenName && sMessage>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "sendModMessage() " & sScreenName && sMessage, 1>
  [ 14] objcall 4 ............................... me.debug("sendModMessage() " & sScreenName && sMessage, 1)
  [ 16] getprop 451 ............................. <oSession>
  [ 19] getobjprop 110 .......................... <oSession.bTestMode>
  [ 21] jmpifz [ 28] ............................ if oSession.bTestMode then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 121 ............................. return 
  [ 28] getparam 1 .............................. <sScreenName>
  [ 30] pusharglist 1 ........................... <sScreenName>
  [ 32] extcall 135 ............................. <voidp(sScreenName)>
  [ 34] jmpifz [ 56] ............................ if voidp(sScreenName) then
  [ 37] getparam 2 .............................. <sMessage>
  [ 39] pusharglist 1 ........................... <sMessage>
  [ 41] extcall 135 ............................. <voidp(sMessage)>
  [ 43] jmpifz [ 52] ............................ if voidp(sMessage) then
  [ 46] pushcons 16 ............................. <"Must supply a screen name">
  [ 48] pusharglistnoret 1 ...................... <"Must supply a screen name">
  [ 50] extcall 191 ............................. alert("Must supply a screen name")
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 121 ............................. return 
  [ 56] getparam 2 .............................. <sMessage>
  [ 58] pusharglist 1 ........................... <sMessage>
  [ 60] extcall 135 ............................. <voidp(sMessage)>
  [ 62] getparam 2 .............................. <sMessage>
  [ 64] pushcons 13 ............................. <EMPTY>
  [ 66] eq ...................................... <sMessage = EMPTY>
  [ 67] or ...................................... <voidp(sMessage) or (sMessage = EMPTY)>
  [ 68] jmpifz [ 81] ............................ if voidp(sMessage) or (sMessage = EMPTY) then
  [ 71] pushcons 17 ............................. <"Must supply a message">
  [ 73] pusharglistnoret 1 ...................... <"Must supply a message">
  [ 75] extcall 191 ............................. alert("Must supply a message")
  [ 77] pusharglistnoret 0 ...................... <>
  [ 79] extcall 121 ............................. return 
  [ 81] getparam 0 .............................. <me>
  [ 83] getchainedprop 721 ...................... <me.foRoom>
  [ 86] getparam 1 .............................. <sScreenName>
  [ 88] getparam 2 .............................. <sMessage>
  [ 90] pusharglistnoret 3 ...................... <me.foRoom, sScreenName, sMessage>
  [ 92] objcall 1138 ............................ me.foRoom.sendModMessage(sScreenName, sMessage)
  [ 95] ret
end

on sendBanUser me, sScreenName, iInterval, sMessage, sComment
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 18 ............................. <"sendBanUser() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendBanUser() " & sScreenName>
  [  7] getparam 2 .............................. <iInterval>
  [  9] joinpadstr .............................. <"sendBanUser() " & sScreenName && iInterval>
  [ 10] getparam 3 .............................. <sMessage>
  [ 12] joinpadstr .............................. <"sendBanUser() " & sScreenName && iInterval && sMessage>
  [ 13] getparam 4 .............................. <sComment>
  [ 15] joinpadstr .............................. <"sendBanUser() " & sScreenName && iInterval && sMessage && sComment>
  [ 16] pusharglistnoret 2 ...................... <me, "sendBanUser() " & sScreenName && iInterval && sMessage && sComment>
  [ 18] objcall 4 ............................... me.debug("sendBanUser() " & sScreenName && iInterval && sMessage && sComment)
  [ 20] getprop 451 ............................. <oSession>
  [ 23] getobjprop 110 .......................... <oSession.bTestMode>
  [ 25] jmpifz [ 32] ............................ if oSession.bTestMode then
  [ 28] pusharglistnoret 0 ...................... <>
  [ 30] extcall 121 ............................. return 
  [ 32] getparam 1 .............................. <sScreenName>
  [ 34] pusharglist 1 ........................... <sScreenName>
  [ 36] extcall 135 ............................. <voidp(sScreenName)>
  [ 38] jmpifz [ 60] ............................ if voidp(sScreenName) then
  [ 41] getparam 3 .............................. <sMessage>
  [ 43] pusharglist 1 ........................... <sMessage>
  [ 45] extcall 135 ............................. <voidp(sMessage)>
  [ 47] jmpifz [ 56] ............................ if voidp(sMessage) then
  [ 50] pushcons 16 ............................. <"Must supply a screen name">
  [ 52] pusharglistnoret 1 ...................... <"Must supply a screen name">
  [ 54] extcall 191 ............................. alert("Must supply a screen name")
  [ 56] pusharglistnoret 0 ...................... <>
  [ 58] extcall 121 ............................. return 
  [ 60] getparam 3 .............................. <sMessage>
  [ 62] pusharglist 1 ........................... <sMessage>
  [ 64] extcall 135 ............................. <voidp(sMessage)>
  [ 66] getparam 3 .............................. <sMessage>
  [ 68] pushcons 13 ............................. <EMPTY>
  [ 70] eq ...................................... <sMessage = EMPTY>
  [ 71] or ...................................... <voidp(sMessage) or (sMessage = EMPTY)>
  [ 72] jmpifz [ 85] ............................ if voidp(sMessage) or (sMessage = EMPTY) then
  [ 75] pushcons 17 ............................. <"Must supply a message">
  [ 77] pusharglistnoret 1 ...................... <"Must supply a message">
  [ 79] extcall 191 ............................. alert("Must supply a message")
  [ 81] pusharglistnoret 0 ...................... <>
  [ 83] extcall 121 ............................. return 
  [ 85] getparam 4 .............................. <sComment>
  [ 87] pusharglist 1 ........................... <sComment>
  [ 89] extcall 135 ............................. <voidp(sComment)>
  [ 91] jmpifz [ 98] ............................ if voidp(sComment) then
  [ 94] pushcons 13 ............................. <EMPTY>
  [ 96] setparam 4 .............................. sComment = EMPTY
  [ 98] getparam 0 .............................. <me>
  [100] getchainedprop 721 ...................... <me.foRoom>
  [103] getparam 1 .............................. <sScreenName>
  [105] getparam 2 .............................. <iInterval>
  [107] getparam 3 .............................. <sMessage>
  [109] getparam 4 .............................. <sComment>
  [111] pusharglistnoret 5 ...................... <me.foRoom, sScreenName, iInterval, sMessage, sComment>
  [113] objcall 1139 ............................ me.foRoom.sendBanUser(sScreenName, iInterval, sMessage, sComment)
  [116] ret
end

on sendWarnUser me, sScreenName, sMessage, sComment
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 19 ............................. <"sendWarnUser() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendWarnUser() " & sScreenName>
  [  7] getparam 2 .............................. <sMessage>
  [  9] joinpadstr .............................. <"sendWarnUser() " & sScreenName && sMessage>
  [ 10] getparam 3 .............................. <sComment>
  [ 12] joinpadstr .............................. <"sendWarnUser() " & sScreenName && sMessage && sComment>
  [ 13] pusharglistnoret 2 ...................... <me, "sendWarnUser() " & sScreenName && sMessage && sComment>
  [ 15] objcall 4 ............................... me.debug("sendWarnUser() " & sScreenName && sMessage && sComment)
  [ 17] getparam 1 .............................. <sScreenName>
  [ 19] pusharglist 1 ........................... <sScreenName>
  [ 21] extcall 135 ............................. <voidp(sScreenName)>
  [ 23] jmpifz [ 45] ............................ if voidp(sScreenName) then
  [ 26] getparam 2 .............................. <sMessage>
  [ 28] pusharglist 1 ........................... <sMessage>
  [ 30] extcall 135 ............................. <voidp(sMessage)>
  [ 32] jmpifz [ 41] ............................ if voidp(sMessage) then
  [ 35] pushcons 16 ............................. <"Must supply a screen name">
  [ 37] pusharglistnoret 1 ...................... <"Must supply a screen name">
  [ 39] extcall 191 ............................. alert("Must supply a screen name")
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 121 ............................. return 
  [ 45] getparam 2 .............................. <sMessage>
  [ 47] pusharglist 1 ........................... <sMessage>
  [ 49] extcall 135 ............................. <voidp(sMessage)>
  [ 51] getparam 2 .............................. <sMessage>
  [ 53] pushcons 13 ............................. <EMPTY>
  [ 55] eq ...................................... <sMessage = EMPTY>
  [ 56] or ...................................... <voidp(sMessage) or (sMessage = EMPTY)>
  [ 57] jmpifz [ 70] ............................ if voidp(sMessage) or (sMessage = EMPTY) then
  [ 60] pushcons 17 ............................. <"Must supply a message">
  [ 62] pusharglistnoret 1 ...................... <"Must supply a message">
  [ 64] extcall 191 ............................. alert("Must supply a message")
  [ 66] pusharglistnoret 0 ...................... <>
  [ 68] extcall 121 ............................. return 
  [ 70] getprop 451 ............................. <oSession>
  [ 73] getobjprop 110 .......................... <oSession.bTestMode>
  [ 75] jmpifz [ 82] ............................ if oSession.bTestMode then
  [ 78] pusharglistnoret 0 ...................... <>
  [ 80] extcall 121 ............................. return 
  [ 82] getparam 0 .............................. <me>
  [ 84] getchainedprop 721 ...................... <me.foRoom>
  [ 87] getparam 1 .............................. <sScreenName>
  [ 89] getparam 2 .............................. <sMessage>
  [ 91] getparam 3 .............................. <sComment>
  [ 93] pusharglistnoret 4 ...................... <me.foRoom, sScreenName, sMessage, sComment>
  [ 95] objcall 1140 ............................ me.foRoom.sendWarnUser(sScreenName, sMessage, sComment)
  [ 98] ret
end

on receiveCallForHelp me, oCaller, iCallID, bIsAlert, sScreenName, sStudioName, sStudioOwner, sMessage, bIsPickedUp, sPickedUpBy
  [  0] pushcons 20 ............................. <"receiveCallForHelp()">
  [  2] pusharglistnoret 1 ...................... <"receiveCallForHelp()">
  [  4] extcall 118 ............................. put "receiveCallForHelp()"
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 20 ............................. <"receiveCallForHelp()">
  [ 10] pusharglistnoret 2 ...................... <me, "receiveCallForHelp()">
  [ 12] objcall 4 ............................... me.debug("receiveCallForHelp()")
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 21 ............................. <"iCallID: ">
  [ 18] getparam 2 .............................. <iCallID>
  [ 20] joinstr ................................. <"iCallID: " & iCallID>
  [ 21] pusharglistnoret 2 ...................... <me, "iCallID: " & iCallID>
  [ 23] objcall 4 ............................... me.debug("iCallID: " & iCallID)
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 22 ............................. <"bIsAlert: ">
  [ 29] getparam 3 .............................. <bIsAlert>
  [ 31] joinstr ................................. <"bIsAlert: " & bIsAlert>
  [ 32] pusharglistnoret 2 ...................... <me, "bIsAlert: " & bIsAlert>
  [ 34] objcall 4 ............................... me.debug("bIsAlert: " & bIsAlert)
  [ 36] getparam 0 .............................. <me>
  [ 38] pushcons 23 ............................. <"sScreenName: ">
  [ 40] getparam 4 .............................. <sScreenName>
  [ 42] joinstr ................................. <"sScreenName: " & sScreenName>
  [ 43] pusharglistnoret 2 ...................... <me, "sScreenName: " & sScreenName>
  [ 45] objcall 4 ............................... me.debug("sScreenName: " & sScreenName)
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 24 ............................. <"sStudioName: ">
  [ 51] getparam 5 .............................. <sStudioName>
  [ 53] joinstr ................................. <"sStudioName: " & sStudioName>
  [ 54] pusharglistnoret 2 ...................... <me, "sStudioName: " & sStudioName>
  [ 56] objcall 4 ............................... me.debug("sStudioName: " & sStudioName)
  [ 58] getparam 0 .............................. <me>
  [ 60] pushcons 25 ............................. <"sStudioOwner: ">
  [ 62] getparam 6 .............................. <sStudioOwner>
  [ 64] joinstr ................................. <"sStudioOwner: " & sStudioOwner>
  [ 65] pusharglistnoret 2 ...................... <me, "sStudioOwner: " & sStudioOwner>
  [ 67] objcall 4 ............................... me.debug("sStudioOwner: " & sStudioOwner)
  [ 69] getparam 0 .............................. <me>
  [ 71] pushcons 26 ............................. <"sMessage: ">
  [ 73] getparam 7 .............................. <sMessage>
  [ 75] joinstr ................................. <"sMessage: " & sMessage>
  [ 76] pusharglistnoret 2 ...................... <me, "sMessage: " & sMessage>
  [ 78] objcall 4 ............................... me.debug("sMessage: " & sMessage)
  [ 80] getparam 0 .............................. <me>
  [ 82] pushcons 27 ............................. <"bIsPickedUp: ">
  [ 84] getparam 8 .............................. <bIsPickedUp>
  [ 86] joinstr ................................. <"bIsPickedUp: " & bIsPickedUp>
  [ 87] pusharglistnoret 2 ...................... <me, "bIsPickedUp: " & bIsPickedUp>
  [ 89] objcall 4 ............................... me.debug("bIsPickedUp: " & bIsPickedUp)
  [ 91] getparam 0 .............................. <me>
  [ 93] pushcons 28 ............................. <"sPickedUpBy: ">
  [ 95] getparam 9 .............................. <sPickedUpBy>
  [ 97] joinstr ................................. <"sPickedUpBy: " & sPickedUpBy>
  [ 98] pusharglistnoret 2 ...................... <me, "sPickedUpBy: " & sPickedUpBy>
  [100] objcall 4 ............................... me.debug("sPickedUpBy: " & sPickedUpBy)
  [102] pusharglist 0 ........................... <[:]>
  [104] pushproplist ............................ <[:]>
  [105] setlocal 0 .............................. aCallForHelp = [:]
  [107] getlocal 0 .............................. <aCallForHelp>
  [109] pushsymb 1148 ........................... <#callID>
  [112] getparam 2 .............................. <iCallID>
  [114] pusharglistnoret 3 ...................... <aCallForHelp, #callID, iCallID>
  [116] objcall 249 ............................. aCallForHelp[#callID] = iCallID
  [118] getlocal 0 .............................. <aCallForHelp>
  [120] pushsymb 1149 ........................... <#isAlert>
  [123] getparam 3 .............................. <bIsAlert>
  [125] pusharglistnoret 3 ...................... <aCallForHelp, #isAlert, bIsAlert>
  [127] objcall 249 ............................. aCallForHelp[#isAlert] = bIsAlert
  [129] getlocal 0 .............................. <aCallForHelp>
  [131] pushsymb 246 ............................ <#screenName>
  [133] getparam 4 .............................. <sScreenName>
  [135] pusharglistnoret 3 ...................... <aCallForHelp, #screenName, sScreenName>
  [137] objcall 249 ............................. aCallForHelp[#screenName] = sScreenName
  [139] getlocal 0 .............................. <aCallForHelp>
  [141] pushsymb 1150 ........................... <#studioName>
  [144] getparam 5 .............................. <sStudioName>
  [146] pusharglistnoret 3 ...................... <aCallForHelp, #studioName, sStudioName>
  [148] objcall 249 ............................. aCallForHelp[#studioName] = sStudioName
  [150] getlocal 0 .............................. <aCallForHelp>
  [152] pushsymb 1151 ........................... <#studioOwner>
  [155] getparam 6 .............................. <sStudioOwner>
  [157] pusharglistnoret 3 ...................... <aCallForHelp, #studioOwner, sStudioOwner>
  [159] objcall 249 ............................. aCallForHelp[#studioOwner] = sStudioOwner
  [161] getlocal 0 .............................. <aCallForHelp>
  [163] pushsymb 293 ............................ <#message>
  [166] getparam 7 .............................. <sMessage>
  [168] pusharglistnoret 3 ...................... <aCallForHelp, #message, sMessage>
  [170] objcall 249 ............................. aCallForHelp[#message] = sMessage
  [172] getlocal 0 .............................. <aCallForHelp>
  [174] pushsymb 1152 ........................... <#isPickedUp>
  [177] getparam 8 .............................. <bIsPickedUp>
  [179] pusharglistnoret 3 ...................... <aCallForHelp, #isPickedUp, bIsPickedUp>
  [181] objcall 249 ............................. aCallForHelp[#isPickedUp] = bIsPickedUp
  [183] getlocal 0 .............................. <aCallForHelp>
  [185] pushsymb 1153 ........................... <#pickedUpBy>
  [188] getparam 9 .............................. <sPickedUpBy>
  [190] pusharglistnoret 3 ...................... <aCallForHelp, #pickedUpBy, sPickedUpBy>
  [192] objcall 249 ............................. aCallForHelp[#pickedUpBy] = sPickedUpBy
  [194] getglobal 1154 .......................... <oCallAlertDisplayManager>
  [197] getlocal 0 .............................. <aCallForHelp>
  [199] pusharglistnoret 2 ...................... <oCallAlertDisplayManager, aCallForHelp>
  [201] objcall 1155 ............................ oCallAlertDisplayManager.receiveStudioCallAlert(aCallForHelp)
  [204] ret
end

on roomEntered me, oCaller, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 29 ............................. <"roomEntered() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomEntered() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "roomEntered() " && sRoomId>
  [  9] objcall 4 ............................... me.debug("roomEntered() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 2 ...................... <me, 1>
  [ 17] objcall 724 ............................. me.setInARoom(1)
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 1126 ..................... <me.oController>
  [ 25] getparam 2 .............................. <sRoomId>
  [ 27] pusharglistnoret 2 ...................... <me.oController, sRoomId>
  [ 29] objcall 729 ............................. me.oController.roomEntered(sRoomId)
  [ 32] ret
end

on roomEnterFailed me, oCaller, sRoomId, iReasonId, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"roomEnterFailed() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomEnterFailed() " && sRoomId>
  [  7] getparam 3 .............................. <iReasonId>
  [  9] pusharglist 1 ........................... <iReasonId>
  [ 11] extcall 558 ............................. <string(iReasonId)>
  [ 14] joinpadstr .............................. <"roomEnterFailed() " && sRoomId && string(iReasonId)>
  [ 15] getparam 4 .............................. <sReason>
  [ 17] joinpadstr .............................. <"roomEnterFailed() " && sRoomId && string(iReasonId) && sReason>
  [ 18] pusharglistnoret 2 ...................... <me, "roomEnterFailed() " && sRoomId && string(iReasonId) && sReason>
  [ 20] objcall 4 ............................... me.debug("roomEnterFailed() " && sRoomId && string(iReasonId) && sReason)
  [ 22] getparam 3 .............................. <iReasonId>
  [ 24] pusharglist 1 ........................... <iReasonId>
  [ 26] extcall 238 ............................. <integer(iReasonId)>
  [ 28] setparam 3 .............................. iReasonId = integer(iReasonId)
  [ 30] pushcons 13 ............................. <EMPTY>
  [ 32] setlocal 0 .............................. sMessage = EMPTY
  [ 34] getparam 3 .............................. <iReasonId>
  [ 36] peek 0 .................................. case iReasonId of
  [ 38] pushint16 9000 .......................... <9000>
  [ 41] eq
  [ 42] jmpifz [ 49] ............................ (case) 9000:
  [ 45] pushcons 31 ............................. <"Room does not exist">
  [ 47] setlocal 0 .............................. sMessage = "Room does not exist"
  [ 49] pop 1
  [ 51] getparam 0 .............................. <me>
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 2 ...................... <me, 0>
  [ 56] objcall 724 ............................. me.setInARoom(0)
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 1126 ..................... <me.oController>
  [ 64] getparam 2 .............................. <sRoomId>
  [ 66] getparam 3 .............................. <iReasonId>
  [ 68] getlocal 0 .............................. <sMessage>
  [ 70] pusharglistnoret 4 ...................... <me.oController, sRoomId, iReasonId, sMessage>
  [ 72] objcall 730 ............................. me.oController.roomEnterFailed(sRoomId, iReasonId, sMessage)
  [ 75] ret
end

on roomExited me, oCaller, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 32 ............................. <"roomExited() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomExited() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "roomExited() " && sRoomId>
  [  9] objcall 4 ............................... me.debug("roomExited() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 2 ...................... <me, 0>
  [ 16] objcall 724 ............................. me.setInARoom(0)
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 451 ...................... <me.oSession>
  [ 24] getparam 2 .............................. <sRoomId>
  [ 26] pusharglistnoret 2 ...................... <me.oSession, sRoomId>
  [ 28] objcall 1119 ............................ me.oSession.removeRoom(sRoomId)
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 1126 ..................... <me.oController>
  [ 36] getparam 2 .............................. <sRoomId>
  [ 38] pusharglistnoret 2 ...................... <me.oController, sRoomId>
  [ 40] objcall 731 ............................. me.oController.roomExited(sRoomId)
  [ 43] ret
end

on exception me, oCaller, iReasonId, sReason, sMsgId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"exception() ">
  [  4] getparam 3 .............................. <sReason>
  [  6] joinstr ................................. <"exception() " & sReason>
  [  7] pusharglistnoret 2 ...................... <me, "exception() " & sReason>
  [  9] objcall 4 ............................... me.debug("exception() " & sReason)
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 1126 ..................... <me.oController>
  [ 16] getparam 2 .............................. <iReasonId>
  [ 18] pusharglistnoret 2 ...................... <me.oController, iReasonId>
  [ 20] objcall 676 ............................. me.oController.exception(iReasonId)
  [ 23] ret
end

on participantEntered me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 34 ............................. <"participantEntered() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantEntered() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantEntered() " & sName>
  [  9] objcall 4 ............................... me.debug("participantEntered() " & sName)
  [ 11] ret
end

on participantExited me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 35 ............................. <"participantExited() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantExited() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantExited() " & sName>
  [  9] objcall 4 ............................... me.debug("participantExited() " & sName)
  [ 11] ret
end

on participantEjected me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 36 ............................. <"participantEjected() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantEjected() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantEjected() " & sName>
  [  9] objcall 4 ............................... me.debug("participantEjected() " & sName)
  [ 11] ret
end
