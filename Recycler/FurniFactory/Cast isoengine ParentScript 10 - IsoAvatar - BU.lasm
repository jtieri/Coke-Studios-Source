property ancestor, aCurrentDirection, oEngine, iSprite, iShadowSprite, oPreviewMember, sMission, sScreenName, bPerforming, bDrinking, sDrawOrder, sShadowDrawOrder, iHitTestColor1, iHitTestColor2, iGridY, sPosId, bTrading
global oIsoScene, oStudioMap, oPossessionStudio, oDenizenManager

on new me, sID, _iScale, _sAttributes, _sScreenName, _sMission
  [  0] getparam 0 .............................. <me>
  [  2] getparam 4 .............................. <_sScreenName>
  [  4] setobjprop 736 .......................... me.sScreenName = _sScreenName
  [  7] getparam 0 .............................. <me>
  [  9] getparam 5 .............................. <_sMission>
  [ 11] setobjprop 737 .......................... me.sMission = _sMission
  [ 14] getparam 0 .............................. <me>
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [ 22] objcall 452 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 25] setobjprop 603 .......................... me.iSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 603 .......................... <me.iSprite>
  [ 33] pusharglist 1 ........................... <me.iSprite>
  [ 35] extcall 451 ............................. <sprite(me.iSprite)>
  [ 38] pushint8 1 .............................. <1>
  [ 40] setobjprop 464 .......................... sprite(me.iSprite).visible = 1
  [ 43] getparam 0 .............................. <me>
  [ 45] getglobal 88 ............................ <oIsoScene>
  [ 47] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [ 49] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [ 51] objcall 452 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 54] setobjprop 738 .......................... me.iShadowSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 738 .......................... <me.iShadowSprite>
  [ 62] pusharglist 1 ........................... <me.iShadowSprite>
  [ 64] extcall 451 ............................. <sprite(me.iShadowSprite)>
  [ 67] pushint8 1 .............................. <1>
  [ 69] setobjprop 464 .......................... sprite(me.iShadowSprite).visible = 1
  [ 72] getparam 0 .............................. <me>
  [ 74] pushcons 0 .............................. <"AvatarEngine">
  [ 76] pusharglist 1 ........................... <"AvatarEngine">
  [ 78] extcall 57 .............................. <script("AvatarEngine")>
  [ 80] getparam 3 .............................. <_sAttributes>
  [ 82] getparam 2 .............................. <_iScale>
  [ 84] pusharglist 3 ........................... <script("AvatarEngine"), _sAttributes, _iScale>
  [ 86] extcall 0 ............................... <new(script("AvatarEngine"), _sAttributes, _iScale)>
  [ 88] setobjprop 739 .......................... me.oEngine = new(script("AvatarEngine"), _sAttributes, _iScale)
  [ 91] getparam 0 .............................. <me>
  [ 93] getchainedprop 739 ...................... <me.oEngine>
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 603 .......................... <me.iSprite>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 738 .......................... <me.iShadowSprite>
  [106] pusharglistnoret 3 ...................... <me.oEngine, me.iSprite, me.iShadowSprite>
  [108] objcall 740 ............................. me.oEngine.initSprites(me.iSprite, me.iShadowSprite)
  [111] getparam 0 .............................. <me>
  [113] getobjprop 603 .......................... <me.iSprite>
  [116] pusharglist 1 ........................... <me.iSprite>
  [118] extcall 451 ............................. <sprite(me.iSprite)>
  [121] getchainedprop 602 ...................... <sprite(me.iSprite).scriptInstanceList>
  [124] pushcons 1 .............................. <"SceneItemScript">
  [126] pusharglist 1 ........................... <"SceneItemScript">
  [128] extcall 57 .............................. <script("SceneItemScript")>
  [130] getparam 0 .............................. <me>
  [132] pusharglist 2 ........................... <script("SceneItemScript"), me>
  [134] objcall 0 ............................... <script("SceneItemScript").new(me)>
  [136] pusharglistnoret 2 ...................... <sprite(me.iSprite).scriptInstanceList, script("SceneItemScript").new(me)>
  [138] objcall 133 ............................. sprite(me.iSprite).scriptInstanceList.add(script("SceneItemScript").new(me))
  [140] getparam 0 .............................. <me>
  [142] pushcons 2 .............................. <"IsoSprite">
  [144] pusharglist 1 ........................... <"IsoSprite">
  [146] extcall 57 .............................. <script("IsoSprite")>
  [148] pusharglist 1 ........................... <script("IsoSprite")>
  [150] objcall 741 ............................. <script("IsoSprite").rawNew()>
  [153] setobjprop 742 .......................... me.ancestor = script("IsoSprite").rawNew()
  [156] pushsymb 0 .............................. <#new>
  [158] getparam 0 .............................. <me>
  [160] getparam 1 .............................. <sID>
  [162] pusharglistnoret 3 ...................... <#new, me, sID>
  [164] extcall 743 ............................. callAncestor(#new, me, sID)
  [167] getparam 0 .............................. <me>
  [169] getparam 0 .............................. <me>
  [171] getchainedprop 739 ...................... <me.oEngine>
  [174] pusharglist 1 ........................... <me.oEngine>
  [176] objcall 638 ............................. <me.oEngine.getFPS()>
  [179] pusharglistnoret 2 ...................... <me, me.oEngine.getFPS()>
  [181] objcall 639 ............................. me.setFPS(me.oEngine.getFPS())
  [184] getparam 0 .............................. <me>
  [186] pushint8 100 ............................ <100>
  [188] setobjprop 652 .......................... me.iScale = 100
  [191] getparam 0 .............................. <me>
  [193] pushint8 2 .............................. <2>
  [195] setobjprop 655 .......................... me.iSpeed = 2
  [198] getparam 0 .............................. <me>
  [200] getparam 0 .............................. <me>
  [202] getobjprop 666 .......................... <me.down>
  [205] setobjprop 744 .......................... me.aCurrentDirection = me.down
  [208] getparam 0 .............................. <me>
  [210] pushint8 6 .............................. <6>
  [212] setobjprop 655 .......................... me.iSpeed = 6
  [215] getparam 0 .............................. <me>
  [217] pushzero ................................ <0>
  [218] setobjprop 745 .......................... me.bPerforming = 0
  [221] getparam 0 .............................. <me>
  [223] pushzero ................................ <0>
  [224] setobjprop 746 .......................... me.bDrinking = 0
  [227] getparam 0 .............................. <me>
  [229] pushcons 3 .............................. <"av">
  [231] setobjprop 747 .......................... me.sDrawOrder = "av"
  [234] getparam 0 .............................. <me>
  [236] pushcons 4 .............................. <"avsd">
  [238] setobjprop 748 .......................... me.sShadowDrawOrder = "avsd"
  [241] getparam 0 .............................. <me>
  [243] pushzero ................................ <0>
  [244] setobjprop 257 .......................... me.iGridY = 0
  [247] getparam 0 .............................. <me>
  [249] pushzero ................................ <0>
  [250] setobjprop 274 .......................... me.bTrading = 0
  [253] getparam 0 .............................. <me>
  [255] pushint32 65535 ......................... <65535>
  [260] setobjprop 749 .......................... me.iHitTestColor1 = 65535
  [263] getparam 0 .............................. <me>
  [265] pushint16 32767 ......................... <32767>
  [268] setobjprop 750 .......................... me.iHitTestColor2 = 32767
  [271] getglobal 88 ............................ <oIsoScene>
  [273] getchainedprop 126 ...................... <oIsoScene.oAvatars>
  [275] getparam 0 .............................. <me>
  [277] pusharglistnoret 2 ...................... <oIsoScene.oAvatars, me>
  [279] objcall 751 ............................. oIsoScene.oAvatars.addItem(me)
  [282] getparam 0 .............................. <me>
  [284] pushint8 100 ............................ <100>
  [286] inv ..................................... <-100>
  [287] setobjprop 258 .......................... me.sPosId = -100
  [290] getmovieprop 132 ........................ <the actorList>
  [292] getparam 0 .............................. <me>
  [294] pusharglistnoret 2 ...................... <the actorList, me>
  [296] objcall 133 ............................. (the actorList).add(me)
  [298] getparam 0 .............................. <me>
  [300] pusharglistnoret 1 ...................... <me>
  [302] extcall 92 .............................. return me
  [304] ret
end

on getSprites me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 603 .......................... <me.iSprite>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 738 .......................... <me.iShadowSprite>
  [ 10] pusharglist 2 ........................... <[me.iSprite, me.iShadowSprite]>
  [ 12] pushlist ................................ <[me.iSprite, me.iShadowSprite]>
  [ 13] pusharglistnoret 1 ...................... <[me.iSprite, me.iShadowSprite]>
  [ 15] extcall 92 .............................. return [me.iSprite, me.iShadowSprite]
  [ 17] ret
end

on getSprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 603 .......................... <me.iSprite>
  [  5] pusharglistnoret 1 ...................... <me.iSprite>
  [  7] extcall 92 .............................. return me.iSprite
  [  9] ret
end

on equals me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] extcall 105 ............................. <voidp(_oItem)>
  [  6] jmpifz [ 14] ............................ if voidp(_oItem) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 92 .............................. return 0
  [ 14] getparam 1 .............................. <_oItem>
  [ 16] pusharglist 1 ........................... <_oItem>
  [ 18] objcall 199 ............................. <_oItem.isAvatar()>
  [ 20] not ..................................... <not _oItem.isAvatar()>
  [ 21] jmpifz [ 29] ............................ if not _oItem.isAvatar() then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 92 .............................. return 0
  [ 29] getparam 0 .............................. <me>
  [ 31] pusharglist 1 ........................... <me>
  [ 33] objcall 181 ............................. <me.getScreenName()>
  [ 35] getparam 1 .............................. <_oItem>
  [ 37] pusharglist 1 ........................... <_oItem>
  [ 39] objcall 181 ............................. <_oItem.getScreenName()>
  [ 41] eq ...................................... <me.getScreenName() = _oItem.getScreenName()>
  [ 42] pusharglistnoret 1 ...................... <me.getScreenName() = _oItem.getScreenName()>
  [ 44] extcall 92 .............................. return me.getScreenName() = _oItem.getScreenName()
  [ 46] ret
end

on mouseDownEvent me, iSpriteNum, bDoubleClick
  [  0] getparam 2 .............................. <bDoubleClick>
  [  2] jmpifz [ 10] ............................ if bDoubleClick then
  [  5] pushzero ................................ <0>
  [  6] pusharglistnoret 1 ...................... <0>
  [  8] extcall 92 .............................. return 0
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 733 ............................. <me.hitTestAll()>
  [ 17] setparam 1 .............................. iSpriteNum = me.hitTestAll()
  [ 19] getparam 1 .............................. <iSpriteNum>
  [ 21] pusharglist 1 ........................... <iSpriteNum>
  [ 23] extcall 105 ............................. <voidp(iSpriteNum)>
  [ 25] not ..................................... <not voidp(iSpriteNum)>
  [ 26] setlocal 0 .............................. bHitTest = not voidp(iSpriteNum)
  [ 28] getlocal 0 .............................. <bHitTest>
  [ 30] jmpifz [ 41] ............................ if bHitTest then
  [ 33] getglobal 88 ............................ <oIsoScene>
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 2 ...................... <oIsoScene, me>
  [ 39] objcall 49 .............................. oIsoScene.createAvatarIndicator(me)
  [ 41] getlocal 0 .............................. <bHitTest>
  [ 43] pusharglistnoret 1 ...................... <bHitTest>
  [ 45] extcall 92 .............................. return bHitTest
  [ 47] ret
end

on mouseIsOverITem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 699 ............................. <me.hitTest()>
  [  7] jmpifz [ 19] ............................ if me.hitTest() then / else
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 92 .............................. return 1
  [ 16] jmp [ 24]
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 92 .............................. return 0
  [ 24] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 697 ............................. <me.getSprites()>
  [ 12] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 14] getlocal 1 .............................. <_aSprites>
  [ 16] peek 0
  [ 18] pusharglist 1
  [ 20] extcall 169
  [ 22] pushint8 1
  [ 24] peek 0
  [ 26] peek 2
  [ 28] lteq
  [ 29] jmpifz [ 88] ............................ repeat with _iSprite in _aSprites
  [ 32] peek 2
  [ 34] peek 1
  [ 36] pusharglist 2
  [ 38] extcall 196
  [ 40] setlocal 2
  [ 42] getlocal 2 .............................. <_iSprite>
  [ 44] pusharglist 1 ........................... <_iSprite>
  [ 46] extcall 757 ............................. <rollover(_iSprite)>
  [ 49] jmpifz [ 83] ............................ if rollover(_iSprite) then
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 2 .............................. <_iSprite>
  [ 56] pusharglist 2 ........................... <me, _iSprite>
  [ 58] objcall 699 ............................. <me.hitTest(_iSprite)>
  [ 61] jmpifz [ 83] ............................ if me.hitTest(_iSprite) then
  [ 64] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 66] getlocal 2 .............................. <_iSprite>
  [ 68] pusharglist 1 ........................... <_iSprite>
  [ 70] extcall 451 ............................. <sprite(_iSprite)>
  [ 73] getobjprop 482 .......................... <sprite(_iSprite).locZ>
  [ 76] getlocal 2 .............................. <_iSprite>
  [ 78] pusharglistnoret 3 ...................... <aSpritesUnderMouse, sprite(_iSprite).locZ, _iSprite>
  [ 80] objcall 357 ............................. aSpritesUnderMouse.addProp(sprite(_iSprite).locZ, _iSprite)
  [ 83] pushint8 1
  [ 85] add
  [ 86] endrepeat [ 24]
  [ 88] pop 3
  [ 90] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 92] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 94] extcall 92 .............................. return aSpritesUnderMouse
  [ 96] ret
end

on hitTest me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] getobjprop 759 .......................... <me.oEngine.iImageSprite>
  [  8] pusharglist 1 ........................... <me.oEngine.iImageSprite>
  [ 10] extcall 451 ............................. <sprite(me.oEngine.iImageSprite)>
  [ 13] setlocal 0 .............................. _oSprite = sprite(me.oEngine.iImageSprite)
  [ 15] getlocal 0 .............................. <_oSprite>
  [ 17] getobjprop 454 .......................... <_oSprite.member>
  [ 20] setlocal 1 .............................. _oMember = _oSprite.member
  [ 22] getlocal 1 .............................. <_oMember>
  [ 24] pusharglist 1 ........................... <_oMember>
  [ 26] extcall 105 ............................. <voidp(_oMember)>
  [ 28] jmpifz [ 35] ............................ if voidp(_oMember) then
  [ 31] pusharglistnoret 0 ...................... <>
  [ 33] extcall 92 .............................. return 
  [ 35] getlocal 1 .............................. <_oMember>
  [ 37] getobjprop 606 .......................... <_oMember.memberNum>
  [ 40] pushzero ................................ <0>
  [ 41] lteq .................................... <_oMember.memberNum <= 0>
  [ 42] jmpifz [ 50] ............................ if _oMember.memberNum <= 0 then
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 1 ...................... <0>
  [ 48] extcall 92 .............................. return 0
  [ 50] getlocal 0 .............................. <_oSprite>
  [ 52] getmovieprop 760 ........................ <the mouseLoc>
  [ 55] pusharglist 2 ........................... <_oSprite, the mouseLoc>
  [ 57] objcall 761 ............................. <_oSprite.mapStageToMember(the mouseLoc)>
  [ 60] setlocal 2 .............................. _oMemberLoc = _oSprite.mapStageToMember(the mouseLoc)
  [ 62] getlocal 2 .............................. <_oMemberLoc>
  [ 64] pusharglist 1 ........................... <_oMemberLoc>
  [ 66] extcall 105 ............................. <voidp(_oMemberLoc)>
  [ 68] jmpifz [ 76] ............................ if voidp(_oMemberLoc) then
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 1 ...................... <0>
  [ 74] extcall 92 .............................. return 0
  [ 76] getlocal 0 .............................. <_oSprite>
  [ 78] getobjprop 454 .......................... <_oSprite.member>
  [ 81] setlocal 1 .............................. _oMember = _oSprite.member
  [ 83] getlocal 1 .............................. <_oMember>
  [ 85] getobjprop 476 .......................... <_oMember.image>
  [ 88] setlocal 3 .............................. _oImage = _oMember.image
  [ 90] getlocal 3 .............................. <_oImage>
  [ 92] getlocal 2 .............................. <_oMemberLoc>
  [ 94] pushsymb 107 ............................ <#integer>
  [ 96] pusharglist 3 ........................... <_oImage, _oMemberLoc, #integer>
  [ 98] objcall 762 ............................. <_oImage.getPixel(_oMemberLoc, #integer)>
  [101] setlocal 4 .............................. _iPixelColor = _oImage.getPixel(_oMemberLoc, #integer)
  [103] getlocal 4 .............................. <_iPixelColor>
  [105] getparam 0 .............................. <me>
  [107] getobjprop 749 .......................... <me.iHitTestColor1>
  [110] eq ...................................... <_iPixelColor = me.iHitTestColor1>
  [111] jmpifz [119] ............................ if _iPixelColor = me.iHitTestColor1 then
  [114] pushzero ................................ <0>
  [115] pusharglistnoret 1 ...................... <0>
  [117] extcall 92 .............................. return 0
  [119] getlocal 4 .............................. <_iPixelColor>
  [121] getparam 0 .............................. <me>
  [123] getobjprop 750 .......................... <me.iHitTestColor2>
  [126] eq ...................................... <_iPixelColor = me.iHitTestColor2>
  [127] jmpifz [135] ............................ if _iPixelColor = me.iHitTestColor2 then
  [130] pushzero ................................ <0>
  [131] pusharglistnoret 1 ...................... <0>
  [133] extcall 92 .............................. return 0
  [135] pushint8 1 .............................. <1>
  [137] pusharglistnoret 1 ...................... <1>
  [139] extcall 92 .............................. return 1
  [141] ret
end

on rotate me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglistnoret 1 ...................... <me.oEngine>
  [  7] objcall 265 ............................. me.oEngine.rotate()
  [ 10] ret
end

on getScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 736 .......................... <me.sScreenName>
  [  5] pusharglistnoret 1 ...................... <me.sScreenName>
  [  7] extcall 92 .............................. return me.sScreenName
  [  9] ret
end

on getMission me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 737 .......................... <me.sMission>
  [  5] pusharglistnoret 1 ...................... <me.sMission>
  [  7] extcall 92 .............................. return me.sMission
  [  9] ret
end

on getDrag me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on deleteItem me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 126 ...................... <oIsoScene.oAvatars>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglistnoret 2 ...................... <oIsoScene.oAvatars, me>
  [  8] objcall 767 ............................. oIsoScene.oAvatars.removeItem(me)
  [ 11] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 701 ............................. <me.oEngine.getPreviewImage()>
  [ 10] pusharglistnoret 1 ...................... <me.oEngine.getPreviewImage()>
  [ 12] extcall 92 .............................. return me.oEngine.getPreviewImage()
  [ 14] ret
end

on getEngine me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 739 .......................... <me.oEngine>
  [  5] pusharglistnoret 1 ...................... <me.oEngine>
  [  7] extcall 92 .............................. return me.oEngine
  [  9] ret
end

on setItemsAllowedOnTop me, _bItemsAllowedOnTop
  [  0] ret
end

on getItemsAllowedOnTop me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on destroy me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 603 .......................... <me.iSprite>
  [  9] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.iSprite>
  [ 11] objcall 506 ............................. oIsoScene.oSpriteManager.returnPooledSprite(me.iSprite)
  [ 14] getglobal 88 ............................ <oIsoScene>
  [ 16] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 738 .......................... <me.iShadowSprite>
  [ 23] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.iShadowSprite>
  [ 25] objcall 506 ............................. oIsoScene.oSpriteManager.returnPooledSprite(me.iShadowSprite)
  [ 28] getmovieprop 132 ........................ <the actorList>
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 2 ...................... <the actorList, me>
  [ 34] objcall 330 ............................. (the actorList).deleteOne(me)
  [ 37] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 603 .......................... <me.iSprite>
  [  5] pusharglist 1 ........................... <me.iSprite>
  [  7] extcall 451 ............................. <sprite(me.iSprite)>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 603 .......................... <me.iSprite>
  [ 15] pusharglist 1 ........................... <me.iSprite>
  [ 17] extcall 451 ............................. <sprite(me.iSprite)>
  [ 20] getobjprop 464 .......................... <sprite(me.iSprite).visible>
  [ 23] not ..................................... <not sprite(me.iSprite).visible>
  [ 24] setobjprop 464 .......................... sprite(me.iSprite).visible = not sprite(me.iSprite).visible
  [ 27] ret
end

on createSprite me, _sMember
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] getobjprop 759 .......................... <me.oEngine.iImageSprite>
  [  8] pusharglist 1 ........................... <me.oEngine.iImageSprite>
  [ 10] extcall 451 ............................. <sprite(me.oEngine.iImageSprite)>
  [ 13] pusharglistnoret 1 ...................... <sprite(me.oEngine.iImageSprite)>
  [ 15] extcall 92 .............................. return sprite(me.oEngine.iImageSprite)
  [ 17] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 7 ............................... <me.oEngine.stepFrame()>
  [  9] setlocal 0 .............................. bDoFrameEvent = me.oEngine.stepFrame()
  [ 11] getlocal 0 .............................. <bDoFrameEvent>
  [ 13] jmpifz [ 23] ............................ if bDoFrameEvent then
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 641 ............................. me.doFrameEvent()
  [ 23] ret
end

on doFrameEvent me
  [  0] pushsymb 641 ............................ <#doFrameEvent>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 2 ...................... <#doFrameEvent, me>
  [  7] extcall 743 ............................. callAncestor(#doFrameEvent, me)
  [ 10] ret
end

on setAvatar me, oAvatar
  [  0] ret
end

on display me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 220 .......................... <me.oSquare>
  [  4] pusharglist 1 ........................... <me.oSquare>
  [  6] extcall 105 ............................. <voidp(me.oSquare)>
  [  8] jmpifz [ 15] ............................ if voidp(me.oSquare) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 92 .............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 739 ...................... <me.oEngine>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 302 .......................... <me.oViewPoint>
  [ 25] pusharglistnoret 2 ...................... <me.oEngine, me.oViewPoint>
  [ 27] objcall 770 ............................. me.oEngine.setLoc(me.oViewPoint)
  [ 30] getparam 0 .............................. <me>
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 747 .......................... <me.sDrawOrder>
  [ 39] pusharglist 2 ........................... <me, me.sDrawOrder>
  [ 41] objcall 731 ............................. <me.calculateZOrder(me.sDrawOrder)>
  [ 44] setobjprop 472 .......................... me.iDepth = me.calculateZOrder(me.sDrawOrder)
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 748 .......................... <me.sShadowDrawOrder>
  [ 54] pusharglist 2 ........................... <me, me.sShadowDrawOrder>
  [ 56] objcall 731 ............................. <me.calculateZOrder(me.sShadowDrawOrder)>
  [ 59] setlocal 0 .............................. iShadowDepth = me.calculateZOrder(me.sShadowDrawOrder)
  [ 61] getglobal 316 ........................... <oStudioMap>
  [ 64] pusharglist 1 ........................... <oStudioMap>
  [ 66] objcall 317 ............................. <oStudioMap.isPrivate()>
  [ 69] jmpifz [120] ............................ if oStudioMap.isPrivate() then
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 220 ...................... <me.oSquare>
  [ 76] getglobal 88 ............................ <oIsoScene>
  [ 78] getchainedprop 119 ...................... <oIsoScene.oDoor>
  [ 80] getobjprop 220 .......................... <oIsoScene.oDoor.oSquare>
  [ 82] pusharglist 2 ........................... <me.oSquare, oIsoScene.oDoor.oSquare>
  [ 84] objcall 221 ............................. <me.oSquare.equals(oIsoScene.oDoor.oSquare)>
  [ 86] jmpifz [120] ............................ if me.oSquare.equals(oIsoScene.oDoor.oSquare) then
  [ 89] getparam 0 .............................. <me>
  [ 91] getglobal 88 ............................ <oIsoScene>
  [ 93] getchainedprop 119 ...................... <oIsoScene.oDoor>
  [ 95] pusharglist 1 ........................... <oIsoScene.oDoor>
  [ 97] objcall 771 ............................. <oIsoScene.oDoor.getLowestZ()>
  [100] pushint8 2 .............................. <2>
  [102] sub ..................................... <oIsoScene.oDoor.getLowestZ() - 2>
  [103] setobjprop 472 .......................... me.iDepth = oIsoScene.oDoor.getLowestZ() - 2
  [106] getglobal 88 ............................ <oIsoScene>
  [108] getchainedprop 119 ...................... <oIsoScene.oDoor>
  [110] pusharglist 1 ........................... <oIsoScene.oDoor>
  [112] objcall 771 ............................. <oIsoScene.oDoor.getLowestZ()>
  [115] pushint8 3 .............................. <3>
  [117] sub ..................................... <oIsoScene.oDoor.getLowestZ() - 3>
  [118] setlocal 0 .............................. iShadowDepth = oIsoScene.oDoor.getLowestZ() - 3
  [120] getparam 0 .............................. <me>
  [122] getchainedprop 739 ...................... <me.oEngine>
  [125] getparam 0 .............................. <me>
  [127] getobjprop 472 .......................... <me.iDepth>
  [130] getlocal 0 .............................. <iShadowDepth>
  [132] pusharglistnoret 3 ...................... <me.oEngine, me.iDepth, iShadowDepth>
  [134] objcall 772 ............................. me.oEngine.setDepth(me.iDepth, iShadowDepth)
  [137] ret
end

on animateAlongPath me, _aPath, iTimeDelta
  [  0] pushsymb 674 ............................ <#animateAlongPath>
  [  3] getparam 0 .............................. <me>
  [  5] getparam 1 .............................. <_aPath>
  [  7] getparam 2 .............................. <iTimeDelta>
  [  9] pusharglistnoret 4 ...................... <#animateAlongPath, me, _aPath, iTimeDelta>
  [ 11] extcall 743 ............................. callAncestor(#animateAlongPath, me, _aPath, iTimeDelta)
  [ 14] ret
end

on nextPath me
  [  0] ret
end

on stopPathAnimation me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 656 .......................... <me.bMoving>
  [  5] not ..................................... <not me.bMoving>
  [  6] jmpifz [ 23] ............................ if not me.bMoving then
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglistnoret 1 ...................... <me>
  [ 13] objcall 711 ............................. me.updateStatus()
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 708 ............................. me.checkForTeleporter()
  [ 23] ret
end

on animateToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 223 ............................. me.walk()
  [  6] pushsymb 640 ............................ <#animateToSquare>
  [  9] getparam 0 .............................. <me>
  [ 11] getparam 1 .............................. <_oSquare>
  [ 13] pusharglistnoret 3 ...................... <#animateToSquare, me, _oSquare>
  [ 15] extcall 743 ............................. callAncestor(#animateToSquare, me, _oSquare)
  [ 18] ret
end

on applyDirection me, aDirection
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 5 .............................. <"applyDirection()">
  [  4] pusharglistnoret 2 ...................... <me, "applyDirection()">
  [  6] objcall 50 .............................. me.debug("applyDirection()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <aDirection>
  [ 12] pusharglist 2 ........................... <me, aDirection>
  [ 14] objcall 707 ............................. <me.roundPoint(aDirection)>
  [ 17] setparam 1 .............................. aDirection = me.roundPoint(aDirection)
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <aDirection>
  [ 23] setobjprop 744 .......................... me.aCurrentDirection = aDirection
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 671 ...................... <me.aDirections>
  [ 31] getparam 1 .............................. <aDirection>
  [ 33] pusharglist 2 ........................... <me.aDirections, aDirection>
  [ 35] objcall 774 ............................. <me.aDirections.getPos(aDirection)>
  [ 38] setlocal 0 .............................. iIndex = me.aDirections.getPos(aDirection)
  [ 40] getlocal 0 .............................. <iIndex>
  [ 42] pushzero ................................ <0>
  [ 43] gt ...................................... <iIndex > 0>
  [ 44] jmpifz [ 62] ............................ if iIndex > 0 then
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 739 ...................... <me.oEngine>
  [ 52] getlocal 0 .............................. <iIndex>
  [ 54] pushint8 1 .............................. <1>
  [ 56] sub ..................................... <iIndex - 1>
  [ 57] pusharglistnoret 2 ...................... <me.oEngine, iIndex - 1>
  [ 59] objcall 775 ............................. me.oEngine.changeDirection(iIndex - 1)
  [ 62] ret
end

on roundPoint me, oP
  [  0] getparam 1 .............................. <oP>
  [  2] getparam 1 .............................. <oP>
  [  4] getobjprop 299 .......................... <oP.locH>
  [  7] pusharglist 1 ........................... <oP.locH>
  [  9] extcall 107 ............................. <integer(oP.locH)>
  [ 11] setobjprop 299 .......................... oP.locH = integer(oP.locH)
  [ 14] getparam 1 .............................. <oP>
  [ 16] getparam 1 .............................. <oP>
  [ 18] getobjprop 300 .......................... <oP.locV>
  [ 21] pusharglist 1 ........................... <oP.locV>
  [ 23] extcall 107 ............................. <integer(oP.locV)>
  [ 25] setobjprop 300 .......................... oP.locV = integer(oP.locV)
  [ 28] getparam 1 .............................. <oP>
  [ 30] pusharglistnoret 1 ...................... <oP>
  [ 32] extcall 92 .............................. return oP
  [ 34] ret
end

on checkForTeleporter me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 220 .......................... <me.oSquare>
  [  8] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 10] objcall 184 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [ 12] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [ 14] getlocal 0 .............................. <oItem>
  [ 16] pusharglist 1 ........................... <oItem>
  [ 18] extcall 105 ............................. <voidp(oItem)>
  [ 20] not ..................................... <not voidp(oItem)>
  [ 21] jmpifz [ 73] ............................ if not voidp(oItem) then
  [ 24] getlocal 0 .............................. <oItem>
  [ 26] getchainedprop 777 ...................... <oItem.oAction>
  [ 29] pusharglistnoret 1 ...................... <oItem.oAction>
  [ 31] objcall 778 ............................. oItem.oAction.turnOn()
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglist 1 ........................... <me>
  [ 38] objcall 181 ............................. <me.getScreenName()>
  [ 40] getglobal 171 ........................... <oDenizenManager>
  [ 42] pusharglist 1 ........................... <oDenizenManager>
  [ 44] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 46] eq ...................................... <me.getScreenName() = oDenizenManager.getScreenName()>
  [ 47] jmpifz [ 73] ............................ if me.getScreenName() = oDenizenManager.getScreenName() then
  [ 50] pushcons 6 .............................. <"_TIMER_">
  [ 52] pusharglist 1 ........................... <"_TIMER_">
  [ 54] extcall 57 .............................. <script("_TIMER_")>
  [ 56] pushint16 2000 .......................... <2000>
  [ 59] pushsymb 709 ............................ <#goToStudioViaTeleporter>
  [ 62] getparam 0 .............................. <me>
  [ 64] getlocal 0 .............................. <oItem>
  [ 66] getobjprop 258 .......................... <oItem.sPosId>
  [ 69] pusharglistnoret 5 ...................... <script("_TIMER_"), 2000, #goToStudioViaTeleporter, me, oItem.sPosId>
  [ 71] objcall 0 ............................... script("_TIMER_").new(2000, #goToStudioViaTeleporter, me, oItem.sPosId)
  [ 73] ret
end

on moveToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 742 ...................... <me.ancestor>
  [  5] getparam 1 .............................. <_oSquare>
  [  7] pusharglistnoret 2 ...................... <me.ancestor, _oSquare>
  [  9] objcall 222 ............................. me.ancestor.moveToSquare(_oSquare)
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 711 ............................. me.updateStatus()
  [ 18] getglobal 171 ........................... <oDenizenManager>
  [ 20] pusharglist 1 ........................... <oDenizenManager>
  [ 22] extcall 105 ............................. <voidp(oDenizenManager)>
  [ 24] jmpifz [ 31] ............................ if voidp(oDenizenManager) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 92 .............................. return 
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 181 ............................. <me.getScreenName()>
  [ 37] getglobal 171 ........................... <oDenizenManager>
  [ 39] pusharglist 1 ........................... <oDenizenManager>
  [ 41] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 43] eq ...................................... <me.getScreenName() = oDenizenManager.getScreenName()>
  [ 44] jmpifz [ 94] ............................ if me.getScreenName() = oDenizenManager.getScreenName() then
  [ 47] getglobal 88 ............................ <oIsoScene>
  [ 49] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 220 .......................... <me.oSquare>
  [ 55] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 57] objcall 184 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [ 59] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [ 61] getlocal 0 .............................. <oItem>
  [ 63] pusharglist 1 ........................... <oItem>
  [ 65] extcall 105 ............................. <voidp(oItem)>
  [ 67] not ..................................... <not voidp(oItem)>
  [ 68] jmpifz [ 94] ............................ if not voidp(oItem) then
  [ 71] pushcons 6 .............................. <"_TIMER_">
  [ 73] pusharglist 1 ........................... <"_TIMER_">
  [ 75] extcall 57 .............................. <script("_TIMER_")>
  [ 77] pushint16 1200 .......................... <1200>
  [ 80] pushsymb 710 ............................ <#moveToFrontOfTeleporter>
  [ 83] getparam 0 .............................. <me>
  [ 85] getlocal 0 .............................. <oItem>
  [ 87] getobjprop 258 .......................... <oItem.sPosId>
  [ 90] pusharglistnoret 5 ...................... <script("_TIMER_"), 1200, #moveToFrontOfTeleporter, me, oItem.sPosId>
  [ 92] objcall 0 ............................... script("_TIMER_").new(1200, #moveToFrontOfTeleporter, me, oItem.sPosId)
  [ 94] ret
end

on goToStudioViaTeleporter me, iTeleporterId
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 220 .......................... <me.oSquare>
  [  8] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 10] objcall 184 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [ 12] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [ 14] getlocal 0 .............................. <oItem>
  [ 16] pusharglist 1 ........................... <oItem>
  [ 18] extcall 105 ............................. <voidp(oItem)>
  [ 20] jmpifz [ 27] ............................ if voidp(oItem) then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 92 .............................. return 
  [ 27] getglobal 268 ........................... <oPossessionStudio>
  [ 30] pusharglist 1 ........................... <oPossessionStudio>
  [ 32] extcall 105 ............................. <voidp(oPossessionStudio)>
  [ 34] not ..................................... <not voidp(oPossessionStudio)>
  [ 35] jmpifz [ 48] ............................ if not voidp(oPossessionStudio) then
  [ 38] getglobal 268 ........................... <oPossessionStudio>
  [ 41] getparam 1 .............................. <iTeleporterId>
  [ 43] pusharglistnoret 2 ...................... <oPossessionStudio, iTeleporterId>
  [ 45] objcall 779 ............................. oPossessionStudio.sendTeleport(iTeleporterId)
  [ 48] ret
end

on moveToFrontOfTeleporter me, iTeleporterId
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [  4] getparam 1 .............................. <iTeleporterId>
  [  6] pusharglist 2 ........................... <oIsoScene.oFurniture, iTeleporterId>
  [  8] objcall 34 .............................. <oIsoScene.oFurniture.getItemByPossessionId(iTeleporterId)>
  [ 10] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getItemByPossessionId(iTeleporterId)
  [ 12] getlocal 0 .............................. <oItem>
  [ 14] pusharglist 1 ........................... <oItem>
  [ 16] extcall 105 ............................. <voidp(oItem)>
  [ 18] not ..................................... <not voidp(oItem)>
  [ 19] jmpifz [ 44] ............................ if not voidp(oItem) then
  [ 22] getlocal 0 .............................. <oItem>
  [ 24] pusharglist 1 ........................... <oItem>
  [ 26] objcall 183 ............................. <oItem.getSquare()>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 220 .......................... <me.oSquare>
  [ 32] eq ...................................... <oItem.getSquare() = me.oSquare>
  [ 33] jmpifz [ 44] ............................ if oItem.getSquare() = me.oSquare then
  [ 36] getglobal 88 ............................ <oIsoScene>
  [ 38] getlocal 0 .............................. <oItem>
  [ 40] pusharglistnoret 2 ...................... <oIsoScene, oItem>
  [ 42] objcall 16 .............................. oIsoScene.moveAvatarToFrontOfItem(oItem)
  [ 44] ret
end

on updateStatus me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 220 .......................... <me.oSquare>
  [  8] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 10] objcall 781 ............................. <oIsoScene.oFurniture.getSeatableItemAtSquareWithGreatestHeightOffset(me.oSquare)>
  [ 13] setlocal 0 .............................. oSeatableItem = oIsoScene.oFurniture.getSeatableItemAtSquareWithGreatestHeightOffset(me.oSquare)
  [ 15] getlocal 0 .............................. <oSeatableItem>
  [ 17] pusharglist 1 ........................... <oSeatableItem>
  [ 19] extcall 105 ............................. <voidp(oSeatableItem)>
  [ 21] not ..................................... <not voidp(oSeatableItem)>
  [ 22] setlocal 1 .............................. bIsSeatable = not voidp(oSeatableItem)
  [ 24] getlocal 1 .............................. <bIsSeatable>
  [ 26] jmpifz [ 49] ............................ if bIsSeatable then / else
  [ 29] getlocal 0 .............................. <oSeatableItem>
  [ 31] pusharglist 1 ........................... <oSeatableItem>
  [ 33] objcall 232 ............................. <oSeatableItem.getDirection()>
  [ 35] setlocal 2 .............................. iDir = oSeatableItem.getDirection()
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 2 .............................. <iDir>
  [ 41] pusharglistnoret 2 ...................... <me, iDir>
  [ 43] objcall 714 ............................. me.sit(iDir)
  [ 46] jmp [ 56]
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglistnoret 1 ...................... <me>
  [ 53] objcall 713 ............................. me.stand()
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 715 ............................. <me.isSitting()>
  [ 63] setlocal 3 .............................. bSitting = me.isSitting()
  [ 65] pushzero ................................ <0>
  [ 66] setlocal 4 .............................. _iOffset = 0
  [ 68] pushzero ................................ <0>
  [ 69] setlocal 5 .............................. _iGridY = 0
  [ 71] getlocal 1 .............................. <bIsSeatable>
  [ 73] jmpifz [ 93] ............................ if bIsSeatable then
  [ 76] getlocal 0 .............................. <oSeatableItem>
  [ 78] pusharglist 1 ........................... <oSeatableItem>
  [ 80] objcall 179 ............................. <oSeatableItem.getHeightOffset()>
  [ 82] setlocal 4 .............................. _iOffset = oSeatableItem.getHeightOffset()
  [ 84] getlocal 0 .............................. <oSeatableItem>
  [ 86] pusharglist 1 ........................... <oSeatableItem>
  [ 88] objcall 729 ............................. <oSeatableItem.getGridY()>
  [ 91] setlocal 5 .............................. _iGridY = oSeatableItem.getGridY()
  [ 93] getlocal 1 .............................. <bIsSeatable>
  [ 95] not ..................................... <not bIsSeatable>
  [ 96] jmpifz [150] ............................ if not bIsSeatable then
  [ 99] getglobal 88 ............................ <oIsoScene>
  [101] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 220 .......................... <me.oSquare>
  [107] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [109] objcall 184 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [111] setlocal 6 .............................. oTeleporter = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [113] getlocal 6 .............................. <oTeleporter>
  [115] pusharglist 1 ........................... <oTeleporter>
  [117] extcall 105 ............................. <voidp(oTeleporter)>
  [119] not ..................................... <not voidp(oTeleporter)>
  [120] jmpifz [150] ............................ if not voidp(oTeleporter) then
  [123] getlocal 6 .............................. <oTeleporter>
  [125] getchainedprop 777 ...................... <oTeleporter.oAction>
  [128] pusharglistnoret 1 ...................... <oTeleporter.oAction>
  [130] objcall 778 ............................. oTeleporter.oAction.turnOn()
  [133] getlocal 6 .............................. <oTeleporter>
  [135] pusharglist 1 ........................... <oTeleporter>
  [137] objcall 232 ............................. <oTeleporter.getDirection()>
  [139] setlocal 2 .............................. iDir = oTeleporter.getDirection()
  [141] getparam 0 .............................. <me>
  [143] getlocal 2 .............................. <iDir>
  [145] pusharglistnoret 2 ...................... <me, iDir>
  [147] objcall 723 ............................. me.faceDirection(iDir)
  [150] getparam 0 .............................. <me>
  [152] getlocal 4 .............................. <_iOffset>
  [154] pusharglistnoret 2 ...................... <me, _iOffset>
  [156] objcall 650 ............................. me.setHeightOffset(_iOffset)
  [159] getparam 0 .............................. <me>
  [161] getlocal 5 .............................. <_iGridY>
  [163] pusharglistnoret 2 ...................... <me, _iGridY>
  [165] objcall 730 ............................. me.setGridY(_iGridY)
  [168] getparam 0 .............................. <me>
  [170] pusharglistnoret 1 ...................... <me>
  [172] objcall 238 ............................. me.display()
  [174] ret
end

on stopAnimation me
  [  0] pushsymb 712 ............................ <#stopAnimation>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 2 ...................... <#stopAnimation, me>
  [  7] extcall 743 ............................. callAncestor(#stopAnimation, me)
  [ 10] ret
end

on stand me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglistnoret 1 ...................... <me.oEngine>
  [  7] objcall 713 ............................. me.oEngine.stand()
  [ 10] ret
end

on walk me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 787 ............................. <me.oEngine.isWalking()>
  [ 10] not ..................................... <not me.oEngine.isWalking()>
  [ 11] jmpifz [ 39] ............................ if not me.oEngine.isWalking() then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 2 ...................... <me, 0>
  [ 19] objcall 730 ............................. me.setGridY(0)
  [ 22] getparam 0 .............................. <me>
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 2 ...................... <me, 0>
  [ 27] objcall 650 ............................. me.setHeightOffset(0)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 739 ...................... <me.oEngine>
  [ 35] pusharglistnoret 1 ...................... <me.oEngine>
  [ 37] objcall 223 ............................. me.oEngine.walk()
  [ 39] ret
end

on sit me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iDir>
  [  4] pusharglistnoret 2 ...................... <me, iDir>
  [  6] objcall 723 ............................. me.faceDirection(iDir)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 718 ............................. <me.isDancing()>
  [ 16] jmpifz [ 26] ............................ if me.isDancing() then
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 717 ............................. me.stopDancing()
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 739 ...................... <me.oEngine>
  [ 31] pusharglistnoret 1 ...................... <me.oEngine>
  [ 33] objcall 714 ............................. me.oEngine.sit()
  [ 36] ret
end

on isSitting me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 715 ............................. <me.oEngine.isSitting()>
  [ 10] pusharglistnoret 1 ...................... <me.oEngine.isSitting()>
  [ 12] extcall 92 .............................. return me.oEngine.isSitting()
  [ 14] ret
end

on dance me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglistnoret 2 ...................... <me.oEngine, 1>
  [  9] objcall 716 ............................. me.oEngine.dance(1)
  [ 12] ret
end

on stopDancing me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pushzero ................................ <0>
  [  6] pusharglistnoret 2 ...................... <me.oEngine, 0>
  [  8] objcall 716 ............................. me.oEngine.dance(0)
  [ 11] ret
end

on isDancing me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] getobjprop 788 .......................... <me.oEngine.bDance>
  [  8] pusharglistnoret 1 ...................... <me.oEngine.bDance>
  [ 10] extcall 92 .............................. return me.oEngine.bDance
  [ 12] ret
end

on setPerforming me, _bPerforming
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bPerforming>
  [  4] setobjprop 745 .......................... me.bPerforming = _bPerforming
  [  7] ret
end

on isPerforming me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 745 .......................... <me.bPerforming>
  [  5] pusharglistnoret 1 ...................... <me.bPerforming>
  [  7] extcall 92 .............................. return me.bPerforming
  [  9] ret
end

on isDrinking me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 790 ............................. <me.oEngine.isCarrying()>
  [ 10] pusharglistnoret 1 ...................... <me.oEngine.isCarrying()>
  [ 12] extcall 92 .............................. return me.oEngine.isCarrying()
  [ 14] ret
end

on chat me, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] getparam 1 .............................. <sMessage>
  [  7] pusharglistnoret 2 ...................... <me.oEngine, sMessage>
  [  9] objcall 722 ............................. me.oEngine.chat(sMessage)
  [ 12] ret
end

on faceDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 671 ............................ <#aDirections>
  [  5] getparam 1 .............................. <iDir>
  [  7] pushint8 1 .............................. <1>
  [  9] add ..................................... <iDir + 1>
  [ 10] pusharglist 3 ........................... <me, #aDirections, iDir + 1>
  [ 12] objcall 577 ............................. <me.aDirections[iDir + 1]>
  [ 15] setlocal 0 .............................. aDir = me.aDirections[iDir + 1]
  [ 17] getlocal 0 .............................. <aDir>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglist 2 ........................... <aDir, 1>
  [ 23] objcall 196 ............................. <aDir[1]>
  [ 25] getlocal 0 .............................. <aDir>
  [ 27] pushint8 2 .............................. <2>
  [ 29] pusharglist 2 ........................... <aDir, 2>
  [ 31] objcall 196 ............................. <aDir[2]>
  [ 33] pusharglist 2 ........................... <aDir[1], aDir[2]>
  [ 35] extcall 295 ............................. <point(aDir[1], aDir[2])>
  [ 38] setlocal 1 .............................. oDir = point(aDir[1], aDir[2])
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 1 .............................. <oDir>
  [ 44] pusharglistnoret 2 ...................... <me, oDir>
  [ 46] objcall 642 ............................. me.applyDirection(oDir)
  [ 49] ret
end

on existsAtSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 183 ............................. <me.getSquare()>
  [  6] getparam 1 .............................. <_oSquare>
  [  8] pusharglist 2 ........................... <me.getSquare(), _oSquare>
  [ 10] objcall 221 ............................. <me.getSquare().equals(_oSquare)>
  [ 12] jmpifz [ 24] ............................ if me.getSquare().equals(_oSquare) then / else
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 1 ...................... <1>
  [ 19] extcall 92 .............................. return 1
  [ 21] jmp [ 29]
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 92 .............................. return 0
  [ 29] ret
end

on isWallItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on isFurniItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on isAvatar me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 92 .............................. return 1
  [  6] ret
end

on isBurnedCd me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on displayThumbsUp me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 727 ............................. me.showVoteICon(1)
  [  9] ret
end

on displayThumbsDown me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 727 ............................. me.showVoteICon(0)
  [  8] ret
end

on showVoteICon me, bState
  [  0] pushcons 7 .............................. <"VoteIndicator">
  [  2] pusharglist 1 ........................... <"VoteIndicator">
  [  4] extcall 57 .............................. <script("VoteIndicator")>
  [  6] getparam 1 .............................. <bState>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 603 .......................... <me.iSprite>
  [ 13] pusharglistnoret 3 ...................... <script("VoteIndicator"), bState, me.iSprite>
  [ 15] objcall 0 ............................... script("VoteIndicator").new(bState, me.iSprite)
  [ 17] ret
end

on drinkCoke me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 746 .......................... me.bDrinking = 1
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 739 ...................... <me.oEngine>
  [ 12] pushcons 8 .............................. <"crr">
  [ 14] pusharglistnoret 2 ...................... <me.oEngine, "crr">
  [ 16] objcall 792 ............................. me.oEngine.setItemAction("crr")
  [ 19] ret
end

on getGridY me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 257 .......................... <me.iGridY>
  [  5] pusharglistnoret 1 ...................... <me.iGridY>
  [  7] extcall 92 .............................. return me.iGridY
  [  9] ret
end

on setGridY me, _iGridY
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iGridY>
  [  4] setobjprop 257 .......................... me.iGridY = _iGridY
  [  7] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] getparam 1 .............................. <_iHeightOffset>
  [  7] pusharglistnoret 2 ...................... <me.oEngine, _iHeightOffset>
  [  9] objcall 650 ............................. me.oEngine.setHeightOffset(_iHeightOffset)
  [ 12] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 739 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 179 ............................. <me.oEngine.getHeightOffset()>
  [  9] pusharglistnoret 1 ...................... <me.oEngine.getHeightOffset()>
  [ 11] extcall 92 .............................. return me.oEngine.getHeightOffset()
  [ 13] ret
end

on calculateZOrder me, sOrder
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 220 .......................... <me.oSquare>
  [  4] pusharglist 1 ........................... <me.oSquare>
  [  6] extcall 105 ............................. <voidp(me.oSquare)>
  [  8] jmpifz [ 15] ............................ if voidp(me.oSquare) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 92 .............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 220 ...................... <me.oSquare>
  [ 19] getparam 1 .............................. <sOrder>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 257 .......................... <me.iGridY>
  [ 26] pusharglist 3 ........................... <me.oSquare, sOrder, me.iGridY>
  [ 28] objcall 470 ............................. <me.oSquare.getDepthFromMap(sOrder, me.iGridY)>
  [ 31] setlocal 0 .............................. iZ = me.oSquare.getDepthFromMap(sOrder, me.iGridY)
  [ 33] getlocal 0 .............................. <iZ>
  [ 35] pusharglistnoret 1 ...................... <iZ>
  [ 37] extcall 92 .............................. return iZ
  [ 39] ret
end

on getSquare me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 220 .......................... <me.oSquare>
  [  4] pusharglistnoret 1 ...................... <me.oSquare>
  [  6] extcall 92 .............................. return me.oSquare
  [  8] ret
end

on toString me
  [  0] pushcons 9 .............................. <"[AVATAR] ">
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 181 ............................. <me.getScreenName()>
  [  8] joinstr ................................. <"[AVATAR] " & me.getScreenName()>
  [  9] pusharglistnoret 1 ...................... <"[AVATAR] " & me.getScreenName()>
  [ 11] extcall 92 .............................. return "[AVATAR] " & me.getScreenName()
  [ 13] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 742 ...................... <me.ancestor>
  [  5] getparam 1 .............................. <sMessage>
  [  7] getparam 2 .............................. <bForce>
  [  9] pusharglistnoret 3 ...................... <me.ancestor, sMessage, bForce>
  [ 11] objcall 50 .............................. me.ancestor.debug(sMessage, bForce)
  [ 13] ret
end

on rolloverObject me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 169
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 58] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 196
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <_iSprite>
  [ 39] pusharglist 1 ........................... <_iSprite>
  [ 41] extcall 757 ............................. <rollover(_iSprite)>
  [ 44] jmpifz [ 53] ............................ if rollover(_iSprite) then
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 92 .............................. return 1
  [ 53] pushint8 1
  [ 55] add
  [ 56] endrepeat [ 19]
  [ 58] pop 3
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 92 .............................. return 0
  [ 65] ret
end

on getHighestDepth me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iHighestDepth = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 697 ............................. <me.getSprites()>
  [ 10] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 12] getlocal 1 .............................. <_aSprites>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 169
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 73] ............................ repeat with _iSprite in _aSprites
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 196
  [ 38] setlocal 2
  [ 40] getlocal 2 .............................. <_iSprite>
  [ 42] pusharglist 1 ........................... <_iSprite>
  [ 44] extcall 451 ............................. <sprite(_iSprite)>
  [ 47] getobjprop 482 .......................... <sprite(_iSprite).locZ>
  [ 50] getlocal 0 .............................. <iHighestDepth>
  [ 52] gt ...................................... <sprite(_iSprite).locZ > iHighestDepth>
  [ 53] jmpifz [ 68] ............................ if sprite(_iSprite).locZ > iHighestDepth then
  [ 56] getlocal 2 .............................. <_iSprite>
  [ 58] pusharglist 1 ........................... <_iSprite>
  [ 60] extcall 451 ............................. <sprite(_iSprite)>
  [ 63] getobjprop 482 .......................... <sprite(_iSprite).locZ>
  [ 66] setlocal 0 .............................. iHighestDepth = sprite(_iSprite).locZ
  [ 68] pushint8 1
  [ 70] add
  [ 71] endrepeat [ 22]
  [ 73] pop 3
  [ 75] getlocal 0 .............................. <iHighestDepth>
  [ 77] pusharglistnoret 1 ...................... <iHighestDepth>
  [ 79] extcall 92 .............................. return iHighestDepth
  [ 81] ret
end

on hitTestAll me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 169
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 196
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <i>
  [ 41] pusharglist 2 ........................... <me, i>
  [ 43] objcall 699 ............................. <me.hitTest(i)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(i) then
  [ 49] getlocal 1 .............................. <i>
  [ 51] pusharglistnoret 1 ...................... <i>
  [ 53] extcall 92 .............................. return i
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] pusharglist 0 ........................... <>
  [ 64] extcall 130 ............................. <VOID>
  [ 66] pusharglistnoret 1 ...................... <VOID>
  [ 68] extcall 92 .............................. return VOID
  [ 70] ret
end

on setTrading me, bStatus
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bStatus>
  [  4] setobjprop 274 .......................... me.bTrading = bStatus
  [  7] ret
end

on isTrading me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 274 .......................... <me.bTrading>
  [  5] pusharglistnoret 1 ...................... <me.bTrading>
  [  7] extcall 92 .............................. return me.bTrading
  [  9] ret
end
