property iMaxLength
global oIsoScene, TextMgr

on new me
  [  0] getglobal 419 ........................... <ochat>
  [  3] pusharglist 1 ........................... <ochat>
  [  5] extcall 12 .............................. <voidp(ochat)>
  [  7] jmpifz [ 41] ............................ if voidp(ochat) then / else
  [ 10] getglobal 30 ............................ <ElementMgr>
  [ 12] pusharglist 1 ........................... <ElementMgr>
  [ 14] objcall 33 .............................. <ElementMgr.LastUsedSprite()>
  [ 16] setlocal 0 .............................. MyNum = ElementMgr.LastUsedSprite()
  [ 18] pushcons 0 .............................. <"chatrenderer">
  [ 20] pusharglist 1 ........................... <"chatrenderer">
  [ 22] extcall 39 .............................. <script("chatrenderer")>
  [ 24] getlocal 0 .............................. <MyNum>
  [ 26] pushint32 1000000 ....................... <1000000>
  [ 31] pusharglist 3 ........................... <script("chatrenderer"), MyNum, 1000000>
  [ 33] extcall 0 ............................... <new(script("chatrenderer"), MyNum, 1000000)>
  [ 35] setglobal 419 ........................... ochat = new(script("chatrenderer"), MyNum, 1000000)
  [ 38] jmp [ 49]
  [ 41] getglobal 419 ........................... <ochat>
  [ 44] pusharglistnoret 1 ...................... <ochat>
  [ 46] objcall 853 ............................. ochat.showChat()
  [ 49] getparam 0 .............................. <me>
  [ 51] pushint8 65 ............................. <65>
  [ 53] setobjprop 777 .......................... me.iMaxLength = 65
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglistnoret 1 ...................... <me>
  [ 60] extcall 23 .............................. return me
  [ 62] ret
end

on exitFrame me
  [  0] ret
end

on keyDown me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 727 ............................. me.Filter()
  [  7] ret
end

on Filter me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 228 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 36 .............................. <sprite(me.spriteNum)>
  [  8] getchainedprop 34 ....................... <sprite(me.spriteNum).member>
  [ 10] getchainedprop 78 ....................... <sprite(me.spriteNum).member.text>
  [ 12] getobjprop 96 ........................... <sprite(me.spriteNum).member.text.length>
  [ 14] setlocal 0 .............................. iLength = sprite(me.spriteNum).member.text.length
  [ 16] getglobal 91 ............................ <TextMgr>
  [ 18] pusharglist 0 ........................... <>
  [ 20] thebuiltin 744 .......................... <the keyCode>
  [ 23] pusharglist 2 ........................... <TextMgr, the keyCode>
  [ 25] objcall 782 ............................. <TextMgr.isValidKeyCode(the keyCode)>
  [ 28] setlocal 1 .............................. bIsValidKeyCode = TextMgr.isValidKeyCode(the keyCode)
  [ 30] getglobal 91 ............................ <TextMgr>
  [ 32] pusharglist 0 ........................... <>
  [ 34] thebuiltin 92 ........................... <the key>
  [ 36] pusharglist 2 ........................... <TextMgr, the key>
  [ 38] objcall 815 ............................. <TextMgr.isValidChatKey(the key)>
  [ 41] setlocal 2 .............................. bIsValidKey = TextMgr.isValidChatKey(the key)
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 228 .......................... <me.spriteNum>
  [ 47] pusharglist 1 ........................... <me.spriteNum>
  [ 49] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 51] getchainedprop 34 ....................... <sprite(me.spriteNum).member>
  [ 53] getlocal 0 .............................. <iLength>
  [ 55] pusharglist 2 ........................... <sprite(me.spriteNum).member, iLength>
  [ 57] objcall 95 .............................. <sprite(me.spriteNum).member.charPosToLoc(iLength)>
  [ 59] setlocal 3 .............................. oLoc = sprite(me.spriteNum).member.charPosToLoc(iLength)
  [ 61] getlocal 3 .............................. <oLoc>
  [ 63] getobjprop 55 ........................... <oLoc.locH>
  [ 65] pushint16 317 ........................... <317>
  [ 68] lteq .................................... <oLoc.locH <= 317>
  [ 69] setlocal 4 .............................. bIsValidPos = oLoc.locH <= 317
  [ 71] pusharglist 0 ........................... <>
  [ 73] thebuiltin 778 .......................... <the controlDown>
  [ 76] pusharglist 0 ........................... <>
  [ 78] thebuiltin 744 .......................... <the keyCode>
  [ 81] pushint8 9 .............................. <9>
  [ 83] eq ...................................... <the keyCode = 9>
  [ 84] and ..................................... <the controlDown and (the keyCode = 9)>
  [ 85] pusharglist 0 ........................... <>
  [ 87] thebuiltin 779 .......................... <the commandDown>
  [ 90] pusharglist 0 ........................... <>
  [ 92] thebuiltin 744 .......................... <the keyCode>
  [ 95] pushint8 9 .............................. <9>
  [ 97] eq ...................................... <the keyCode = 9>
  [ 98] and ..................................... <the commandDown and (the keyCode = 9)>
  [ 99] or ...................................... <(the controlDown and (the keyCode = 9)) or (the commandDown and (the keyCode = 9))>
  [100] jmpifz [111] ............................ if (the controlDown and (the keyCode = 9)) or (the commandDown and (the keyCode = 9)) then
  [103] pusharglistnoret 0 ...................... <>
  [105] extcall 229 ............................. stopEvent()
  [107] pusharglistnoret 0 ...................... <>
  [109] extcall 23 .............................. return 
  [111] pusharglist 0 ........................... <>
  [113] thebuiltin 92 ........................... <the key>
  [115] pushcons 1 .............................. <RETURN>
  [117] eq ...................................... <the key = RETURN>
  [118] pusharglist 0 ........................... <>
  [120] thebuiltin 92 ........................... <the key>
  [122] pushcons 2 .............................. <ENTER>
  [124] eq ...................................... <the key = ENTER>
  [125] or ...................................... <(the key = RETURN) or (the key = ENTER)>
  [126] jmpifz [156] ............................ if (the key = RETURN) or (the key = ENTER) then
  [129] getparam 0 .............................. <me>
  [131] getparam 0 .............................. <me>
  [133] getobjprop 228 .......................... <me.spriteNum>
  [135] pusharglist 1 ........................... <me.spriteNum>
  [137] extcall 36 .............................. <sprite(me.spriteNum)>
  [139] getchainedprop 34 ....................... <sprite(me.spriteNum).member>
  [141] getobjprop 78 ........................... <sprite(me.spriteNum).member.text>
  [143] pusharglistnoret 2 ...................... <me, sprite(me.spriteNum).member.text>
  [145] objcall 852 ............................. me.sendChat(sprite(me.spriteNum).member.text)
  [148] pusharglistnoret 0 ...................... <>
  [150] extcall 229 ............................. stopEvent()
  [152] pusharglistnoret 0 ...................... <>
  [154] extcall 23 .............................. return 
  [156] getlocal 0 .............................. <iLength>
  [158] getparam 0 .............................. <me>
  [160] getobjprop 777 .......................... <me.iMaxLength>
  [163] gteq .................................... <iLength >= me.iMaxLength>
  [164] getlocal 4 .............................. <bIsValidPos>
  [166] not ..................................... <not bIsValidPos>
  [167] or ...................................... <(iLength >= me.iMaxLength) or not bIsValidPos>
  [168] jmpifz [196] ............................ if (iLength >= me.iMaxLength) or not bIsValidPos then
  [171] getlocal 1 .............................. <bIsValidKeyCode>
  [173] jmpifz [188] ............................ if bIsValidKeyCode then / else
  [176] pusharglistnoret 0 ...................... <>
  [178] extcall 745 ............................. pass()
  [181] pusharglistnoret 0 ...................... <>
  [183] extcall 23 .............................. return 
  [185] jmp [196]
  [188] pusharglistnoret 0 ...................... <>
  [190] extcall 229 ............................. stopEvent()
  [192] pusharglistnoret 0 ...................... <>
  [194] extcall 23 .............................. return 
  [196] getlocal 2 .............................. <bIsValidKey>
  [198] getlocal 1 .............................. <bIsValidKeyCode>
  [200] or ...................................... <bIsValidKey or bIsValidKeyCode>
  [201] jmpifz [216] ............................ if bIsValidKey or bIsValidKeyCode then / else
  [204] pusharglistnoret 0 ...................... <>
  [206] extcall 745 ............................. pass()
  [209] pusharglistnoret 0 ...................... <>
  [211] extcall 23 .............................. return 
  [213] jmp [224]
  [216] pusharglistnoret 0 ...................... <>
  [218] extcall 229 ............................. stopEvent()
  [220] pusharglistnoret 0 ...................... <>
  [222] extcall 23 .............................. return 
  [224] ret
end

on sendChat me, sMessage
  [  0] getparam 1 .............................. <sMessage>
  [  2] pushcons 3 .............................. <EMPTY>
  [  4] eq ...................................... <sMessage = EMPTY>
  [  5] jmpifz [ 12] ............................ if sMessage = EMPTY then
  [  8] pusharglistnoret 0 ...................... <>
  [ 10] extcall 23 .............................. return 
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] pushcons 4 .............................. <" ">
  [ 16] eq ...................................... <sMessage = " ">
  [ 17] jmpifz [ 24] ............................ if sMessage = " " then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 23 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 228 .......................... <me.spriteNum>
  [ 28] pusharglist 1 ........................... <me.spriteNum>
  [ 30] extcall 36 .............................. <sprite(me.spriteNum)>
  [ 32] getchainedprop 34 ....................... <sprite(me.spriteNum).member>
  [ 34] pushcons 3 .............................. <EMPTY>
  [ 36] setobjprop 78 ........................... sprite(me.spriteNum).member.text = EMPTY
  [ 38] pushsymb 845 ............................ <#getSpeechMode>
  [ 41] pusharglist 1 ........................... <#getSpeechMode>
  [ 43] extcall 375 ............................. <sendAllSprites(#getSpeechMode)>
  [ 46] pusharglist 1 ........................... <sendAllSprites(#getSpeechMode)>
  [ 48] extcall 161 ............................. <string(sendAllSprites(#getSpeechMode))>
  [ 50] setlocal 0 .............................. myspeechmode = string(sendAllSprites(#getSpeechMode))
  [ 52] getglobal 482 ........................... <oStudio>
  [ 55] getparam 1 .............................. <sMessage>
  [ 57] getlocal 0 .............................. <myspeechmode>
  [ 59] pusharglistnoret 3 ...................... <oStudio, sMessage, myspeechmode>
  [ 61] objcall 856 ............................. oStudio.sendStudioChat(sMessage, myspeechmode)
  [ 64] getlocal 0 .............................. <myspeechmode>
  [ 66] pushcons 5 .............................. <"shout">
  [ 68] eq ...................................... <myspeechmode = "shout">
  [ 69] jmpifz [ 83] ............................ if myspeechmode = "shout" then
  [ 72] pushsymb 846 ............................ <#setSpeechMode>
  [ 75] pushsymb 848 ............................ <#speak>
  [ 78] pusharglistnoret 2 ...................... <#setSpeechMode, #speak>
  [ 80] extcall 375 ............................. sendAllSprites(#setSpeechMode, #speak)
  [ 83] ret
end
