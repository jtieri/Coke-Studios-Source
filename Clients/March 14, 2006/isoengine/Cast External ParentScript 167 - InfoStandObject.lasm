property aSprites, oItem, iPreviewRegPoint, aInfoStandProps, aDescriptionTextProps, oDescRect, oDescMember, sButtonBase, aDynamicMembers, sCastLib, sActive, sPressed, bOverwriteImages
global oIsoScene, gCatalog, oDenizenManager, oStudio, oPossessionStudio, ElementMgr, oStudioMap, gFeatureSet, oSession

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"InfoStandDescription">
  [  4] pusharglist 1 ........................... <"InfoStandDescription">
  [  6] extcall 30 .............................. <member("InfoStandDescription")>
  [  8] setobjprop 31 ........................... me.oDescMember = member("InfoStandDescription")
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 31 ....................... <me.oDescMember>
  [ 14] pushint16 255 ........................... <255>
  [ 17] setobjprop 32 ........................... me.oDescMember.backColor = 255
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 31 ....................... <me.oDescMember>
  [ 23] pushint8 10 ............................. <10>
  [ 25] setobjprop 33 ........................... me.oDescMember.fontSize = 10
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 31 ....................... <me.oDescMember>
  [ 31] pushcons 1 .............................. <"plain">
  [ 33] setobjprop 34 ........................... me.oDescMember.fontStyle = "plain"
  [ 35] getparam 0 .............................. <me>
  [ 37] pushsymb 30 ............................. <#member>
  [ 39] pushcons 2 .............................. <"cc.infostand">
  [ 41] pushsymb 35 ............................. <#x>
  [ 43] pushint16 695 ........................... <695>
  [ 46] pushsymb 36 ............................. <#y>
  [ 48] pushint16 345 ........................... <345>
  [ 51] pushsymb 37 ............................. <#ink>
  [ 53] pushint8 8 .............................. <8>
  [ 55] pusharglist 8 ........................... <[#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]>
  [ 57] pushproplist ............................ <[#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]>
  [ 58] setobjprop 38 ........................... me.aInfoStandProps = [#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]
  [ 60] getparam 0 .............................. <me>
  [ 62] pushint16 723 ........................... <723>
  [ 65] pushint16 364 ........................... <364>
  [ 68] pusharglist 2 ........................... <723, 364>
  [ 70] extcall 39 .............................. <point(723, 364)>
  [ 72] setobjprop 40 ........................... me.iPreviewRegPoint = point(723, 364)
  [ 74] pushint16 560 ........................... <560>
  [ 77] setlocal 0 .............................. iDescX = 560
  [ 79] pushint16 380 ........................... <380>
  [ 82] setlocal 1 .............................. iDescY = 380
  [ 84] pushint16 190 ........................... <190>
  [ 87] setlocal 2 .............................. iDescWidth = 190
  [ 89] pushint8 55 ............................. <55>
  [ 91] setlocal 3 .............................. iDescHeight = 55
  [ 93] getparam 0 .............................. <me>
  [ 95] getlocal 0 .............................. <iDescX>
  [ 97] getlocal 1 .............................. <iDescY>
  [ 99] getlocal 0 .............................. <iDescX>
  [101] getlocal 2 .............................. <iDescWidth>
  [103] add ..................................... <iDescX + iDescWidth>
  [104] getlocal 1 .............................. <iDescY>
  [106] getlocal 3 .............................. <iDescHeight>
  [108] add ..................................... <iDescY + iDescHeight>
  [109] pusharglist 4 ........................... <iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight>
  [111] extcall 41 .............................. <rect(iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight)>
  [113] setobjprop 42 ........................... me.oDescRect = rect(iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight)
  [115] getparam 0 .............................. <me>
  [117] pushsymb 30 ............................. <#member>
  [119] getparam 0 .............................. <me>
  [121] getobjprop 31 ........................... <me.oDescMember>
  [123] pushsymb 35 ............................. <#x>
  [125] getparam 0 .............................. <me>
  [127] getchainedprop 42 ....................... <me.oDescRect>
  [129] getobjprop 43 ........................... <me.oDescRect.left>
  [131] pushsymb 36 ............................. <#y>
  [133] getparam 0 .............................. <me>
  [135] getchainedprop 42 ....................... <me.oDescRect>
  [137] getobjprop 44 ........................... <me.oDescRect.top>
  [139] pushsymb 37 ............................. <#ink>
  [141] pushint8 8 .............................. <8>
  [143] pusharglist 8 ........................... <[#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]>
  [145] pushproplist ............................ <[#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]>
  [146] setobjprop 45 ........................... me.aDescriptionTextProps = [#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]
  [148] getparam 0 .............................. <me>
  [150] pushcons 3 .............................. <"d1">
  [152] setobjprop 46 ........................... me.sButtonBase = "d1"
  [154] getparam 0 .............................. <me>
  [156] pusharglist 0 ........................... <[]>
  [158] pushlist ................................ <[]>
  [159] setobjprop 47 ........................... me.aDynamicMembers = []
  [161] getparam 0 .............................. <me>
  [163] pushcons 4 .............................. <"IsoEngine">
  [165] setobjprop 48 ........................... me.sCastLib = "IsoEngine"
  [167] getparam 0 .............................. <me>
  [169] pushcons 5 .............................. <"active">
  [171] setobjprop 49 ........................... me.sActive = "active"
  [173] getparam 0 .............................. <me>
  [175] pushcons 6 .............................. <"pressed">
  [177] setobjprop 50 ........................... me.sPressed = "pressed"
  [179] getparam 0 .............................. <me>
  [181] pushint8 1 .............................. <1>
  [183] setobjprop 51 ........................... me.bOverwriteImages = 1
  [185] getparam 0 .............................. <me>
  [187] pusharglistnoret 1 ...................... <me>
  [189] extcall 52 .............................. return me
  [191] ret
end

on init me
  [  0] ret
end

on clearInfoStand me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 11 .............................. me.destroy()
  [  6] ret
end

on display me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 11 .............................. me.destroy()
  [  6] getparam 0 .............................. <me>
  [  8] getparam 1 .............................. <_oItem>
  [ 10] setobjprop 58 ........................... me.oItem = _oItem
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 58 ........................... <me.oItem>
  [ 16] pusharglist 1 ........................... <me.oItem>
  [ 18] extcall 59 .............................. <voidp(me.oItem)>
  [ 20] jmpifz [ 27] ............................ if voidp(me.oItem) then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 52 .............................. return 
  [ 27] getprop 58 .............................. <oItem>
  [ 29] pusharglist 1 ........................... <oItem>
  [ 31] objcall 27 .............................. <oItem.isWallItem()>
  [ 33] jmpifz [ 79] ............................ if oItem.isWallItem() then
  [ 36] getglobal 60 ............................ <oStudioMap>
  [ 38] pusharglist 1 ........................... <oStudioMap>
  [ 40] objcall 61 .............................. <oStudioMap.isPrivate()>
  [ 42] not ..................................... <not oStudioMap.isPrivate()>
  [ 43] jmpifz [ 51] ............................ if not oStudioMap.isPrivate() then
  [ 46] pushzero ................................ <0>
  [ 47] pusharglistnoret 1 ...................... <0>
  [ 49] extcall 52 .............................. return 0
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglistnoret 1 ...................... <me>
  [ 55] objcall 8 ............................... me.displayInfoStand()
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglistnoret 1 ...................... <me>
  [ 61] objcall 5 ............................... me.displayWallItem()
  [ 63] getparam 0 .............................. <me>
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglist 1 ........................... <me>
  [ 69] objcall 15 .............................. <me.getWallItemButtonList()>
  [ 71] pusharglistnoret 2 ...................... <me, me.getWallItemButtonList()>
  [ 73] objcall 16 .............................. me.displayButtons(me.getWallItemButtonList())
  [ 75] pusharglistnoret 0 ...................... <>
  [ 77] extcall 52 .............................. return 
  [ 79] getprop 58 .............................. <oItem>
  [ 81] pusharglist 1 ........................... <oItem>
  [ 83] objcall 26 .............................. <oItem.isFurniItem()>
  [ 85] jmpifz [143] ............................ if oItem.isFurniItem() then
  [ 88] getglobal 60 ............................ <oStudioMap>
  [ 90] pusharglist 1 ........................... <oStudioMap>
  [ 92] objcall 61 .............................. <oStudioMap.isPrivate()>
  [ 94] not ..................................... <not oStudioMap.isPrivate()>
  [ 95] jmpifz [103] ............................ if not oStudioMap.isPrivate() then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 52 .............................. return 0
  [103] getprop 58 .............................. <oItem>
  [105] getobjprop 62 ........................... <oItem.bHasPreview>
  [107] not ..................................... <not oItem.bHasPreview>
  [108] jmpifz [115] ............................ if not oItem.bHasPreview then
  [111] pusharglistnoret 0 ...................... <>
  [113] extcall 52 .............................. return 
  [115] getparam 0 .............................. <me>
  [117] pusharglistnoret 1 ...................... <me>
  [119] objcall 8 ............................... me.displayInfoStand()
  [121] getparam 0 .............................. <me>
  [123] pusharglistnoret 1 ...................... <me>
  [125] objcall 6 ............................... me.displayFurniItem()
  [127] getparam 0 .............................. <me>
  [129] getparam 0 .............................. <me>
  [131] pusharglist 1 ........................... <me>
  [133] objcall 13 .............................. <me.getFurniItemButtonList()>
  [135] pusharglistnoret 2 ...................... <me, me.getFurniItemButtonList()>
  [137] objcall 16 .............................. me.displayButtons(me.getFurniItemButtonList())
  [139] pusharglistnoret 0 ...................... <>
  [141] extcall 52 .............................. return 
  [143] getprop 58 .............................. <oItem>
  [145] pusharglist 1 ........................... <oItem>
  [147] objcall 25 .............................. <oItem.isAvatar()>
  [149] jmpifz [180] ............................ if oItem.isAvatar() then
  [152] getparam 0 .............................. <me>
  [154] pusharglistnoret 1 ...................... <me>
  [156] objcall 8 ............................... me.displayInfoStand()
  [158] getparam 0 .............................. <me>
  [160] pusharglistnoret 1 ...................... <me>
  [162] objcall 7 ............................... me.displayAvatar()
  [164] getparam 0 .............................. <me>
  [166] getparam 0 .............................. <me>
  [168] pusharglist 1 ........................... <me>
  [170] objcall 14 .............................. <me.getAvatarButtonList()>
  [172] pusharglistnoret 2 ...................... <me, me.getAvatarButtonList()>
  [174] objcall 16 .............................. me.displayButtons(me.getAvatarButtonList())
  [176] pusharglistnoret 0 ...................... <>
  [178] extcall 52 .............................. return 
  [180] ret
end

on displayCd me, foCd
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getparam 1 .............................. <foCd>
  [ 15] pusharglist 1 ........................... <foCd>
  [ 17] extcall 59 .............................. <voidp(foCd)>
  [ 19] jmpifz [ 26] ............................ if voidp(foCd) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 52 .............................. return 
  [ 26] getparam 1 .............................. <foCd>
  [ 28] pusharglist 1 ........................... <foCd>
  [ 30] objcall 65 .............................. <foCd.getCatId()>
  [ 32] setlocal 0 .............................. iCatId = foCd.getCatId()
  [ 34] getparam 1 .............................. <foCd>
  [ 36] pusharglist 1 ........................... <foCd>
  [ 38] objcall 66 .............................. <foCd.getAuthorName()>
  [ 40] setlocal 1 .............................. sAuthor = foCd.getAuthorName()
  [ 42] getparam 1 .............................. <foCd>
  [ 44] pusharglist 1 ........................... <foCd>
  [ 46] objcall 67 .............................. <foCd.getSongName()>
  [ 48] setlocal 2 .............................. sSongName = foCd.getSongName()
  [ 50] getglobal 68 ............................ <gCatalog>
  [ 52] getlocal 0 .............................. <iCatId>
  [ 54] pusharglist 1 ........................... <iCatId>
  [ 56] extcall 69 .............................. <integer(iCatId)>
  [ 58] pusharglist 2 ........................... <gCatalog, integer(iCatId)>
  [ 60] objcall 70 .............................. <gCatalog.getItemByProdId(integer(iCatId))>
  [ 62] setlocal 3 .............................. aCatItem = gCatalog.getItemByProdId(integer(iCatId))
  [ 64] getlocal 3 .............................. <aCatItem>
  [ 66] pusharglist 1 ........................... <aCatItem>
  [ 68] extcall 59 .............................. <voidp(aCatItem)>
  [ 70] jmpifz [ 77] ............................ if voidp(aCatItem) then
  [ 73] pusharglistnoret 0 ...................... <>
  [ 75] extcall 52 .............................. return 
  [ 77] getlocal 3 .............................. <aCatItem>
  [ 79] pushsymb 71 ............................. <#imageBase>
  [ 81] pusharglist 2 ........................... <aCatItem, #imageBase>
  [ 83] objcall 72 .............................. <aCatItem[#imageBase]>
  [ 85] setlocal 4 .............................. sImageBase = aCatItem[#imageBase]
  [ 87] getlocal 4 .............................. <sImageBase>
  [ 89] pushcons 7 .............................. <"_small">
  [ 91] joinstr ................................. <sImageBase & "_small">
  [ 92] pusharglist 1 ........................... <sImageBase & "_small">
  [ 94] extcall 30 .............................. <member(sImageBase & "_small")>
  [ 96] setlocal 5 .............................. oPreviewImage = member(sImageBase & "_small")
  [ 98] getlocal 5 .............................. <oPreviewImage>
  [100] getobjprop 73 ........................... <oPreviewImage.memberNum>
  [102] pushint8 1 .............................. <1>
  [104] inv ..................................... <-1>
  [105] eq ...................................... <oPreviewImage.memberNum = -1>
  [106] jmpifz [113] ............................ if oPreviewImage.memberNum = -1 then
  [109] pusharglistnoret 0 ...................... <>
  [111] extcall 52 .............................. return 
  [113] getparam 0 .............................. <me>
  [115] pusharglistnoret 1 ...................... <me>
  [117] objcall 11 .............................. me.destroy()
  [119] getparam 0 .............................. <me>
  [121] pusharglistnoret 1 ...................... <me>
  [123] objcall 8 ............................... me.displayInfoStand()
  [125] getparam 0 .............................. <me>
  [127] getlocal 5 .............................. <oPreviewImage>
  [129] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [131] objcall 9 ............................... me.displayPreviewImage(oPreviewImage)
  [133] pushcons 8 .............................. <"NOW PLAYING">
  [135] pushcons 9 .............................. <RETURN>
  [137] joinstr ................................. <"NOW PLAYING" & RETURN>
  [138] getlocal 2 .............................. <sSongName>
  [140] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName>
  [141] pushcons 9 .............................. <RETURN>
  [143] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN>
  [144] pushcons 10 ............................. <"by: ">
  [146] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: ">
  [147] getlocal 1 .............................. <sAuthor>
  [149] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor>
  [150] pushcons 9 .............................. <RETURN>
  [152] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN>
  [153] setlocal 6 .............................. sText = "NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN
  [155] getglobal 64 ............................ <oStudio>
  [157] pusharglist 1 ........................... <oStudio>
  [159] objcall 74 .............................. <oStudio.getcdplayer()>
  [161] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [163] objcall 75 .............................. <oStudio.getcdplayer().getThumbsUpVotes()>
  [165] pusharglist 1 ........................... <oStudio.getcdplayer().getThumbsUpVotes()>
  [167] extcall 69 .............................. <integer(oStudio.getcdplayer().getThumbsUpVotes())>
  [169] setlocal 7 .............................. iThumbsUp = integer(oStudio.getcdplayer().getThumbsUpVotes())
  [171] getglobal 64 ............................ <oStudio>
  [173] pusharglist 1 ........................... <oStudio>
  [175] objcall 74 .............................. <oStudio.getcdplayer()>
  [177] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [179] objcall 76 .............................. <oStudio.getcdplayer().getThumbsDownVotes()>
  [181] pusharglist 1 ........................... <oStudio.getcdplayer().getThumbsDownVotes()>
  [183] extcall 69 .............................. <integer(oStudio.getcdplayer().getThumbsDownVotes())>
  [185] setlocal 8 .............................. iThumbsDown = integer(oStudio.getcdplayer().getThumbsDownVotes())
  [187] getparam 1 .............................. <foCd>
  [189] pusharglist 1 ........................... <foCd>
  [191] objcall 21 .............................. <foCd.hasVoted()>
  [193] setlocal 9 .............................. bHasVoted = foCd.hasVoted()
  [195] getglobal 64 ............................ <oStudio>
  [197] pusharglist 1 ........................... <oStudio>
  [199] objcall 74 .............................. <oStudio.getcdplayer()>
  [201] getglobal 77 ............................ <oDenizenManager>
  [203] pusharglist 1 ........................... <oDenizenManager>
  [205] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [207] pusharglist 2 ........................... <oStudio.getcdplayer(), oDenizenManager.getScreenName()>
  [209] objcall 79 .............................. <oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())>
  [211] setlocal 10 ............................. bEligibleVoter = oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())
  [213] getglobal 64 ............................ <oStudio>
  [215] pusharglist 1 ........................... <oStudio>
  [217] objcall 74 .............................. <oStudio.getcdplayer()>
  [219] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [221] objcall 80 .............................. <oStudio.getcdplayer().getAvatar()>
  [223] getglobal 77 ............................ <oDenizenManager>
  [225] pusharglist 1 ........................... <oDenizenManager>
  [227] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [229] eq ...................................... <oStudio.getcdplayer().getAvatar() = oDenizenManager.getScreenName()>
  [230] setlocal 11 ............................. bIsPlayer = oStudio.getcdplayer().getAvatar() = oDenizenManager.getScreenName()
  [232] getparam 1 .............................. <foCd>
  [234] pusharglist 1 ........................... <foCd>
  [236] objcall 66 .............................. <foCd.getAuthorName()>
  [238] getglobal 77 ............................ <oDenizenManager>
  [240] pusharglist 1 ........................... <oDenizenManager>
  [242] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [244] eq ...................................... <foCd.getAuthorName() = oDenizenManager.getScreenName()>
  [245] setlocal 12 ............................. bIsAuthor = foCd.getAuthorName() = oDenizenManager.getScreenName()
  [247] getparam 1 .............................. <foCd>
  [249] pusharglist 1 ........................... <foCd>
  [251] objcall 81 .............................. <foCd.getVote()>
  [253] pusharglist 1 ........................... <foCd.getVote()>
  [255] extcall 69 .............................. <integer(foCd.getVote())>
  [257] setlocal 13 ............................. iVote = integer(foCd.getVote())
  [259] getlocal 9 .............................. <bHasVoted>
  [261] jmpifz [298] ............................ if bHasVoted then / else
  [264] getlocal 6 .............................. <sText>
  [266] pushcons 11 ............................. <"Your vote: ">
  [268] joinstr ................................. <sText & "Your vote: ">
  [269] setlocal 6 .............................. sText = sText & "Your vote: "
  [271] getlocal 13 ............................. <iVote>
  [273] pushzero ................................ <0>
  [274] gteq .................................... <iVote >= 0>
  [275] jmpifz [288] ............................ if iVote >= 0 then / else
  [278] getlocal 6 .............................. <sText>
  [280] pushcons 12 ............................. <"Thumbs Up">
  [282] joinstr ................................. <sText & "Thumbs Up">
  [283] setlocal 6 .............................. sText = sText & "Thumbs Up"
  [285] jmp [295]
  [288] getlocal 6 .............................. <sText>
  [290] pushcons 13 ............................. <"Thumbs Down">
  [292] joinstr ................................. <sText & "Thumbs Down">
  [293] setlocal 6 .............................. sText = sText & "Thumbs Down"
  [295] jmp [335]
  [298] getlocal 10 ............................. <bEligibleVoter>
  [300] not ..................................... <not bEligibleVoter>
  [301] getlocal 11 ............................. <bIsPlayer>
  [303] not ..................................... <not bIsPlayer>
  [304] and ..................................... <not bEligibleVoter and not bIsPlayer>
  [305] jmpifz [318] ............................ if not bEligibleVoter and not bIsPlayer then / else
  [308] getlocal 6 .............................. <sText>
  [310] pushcons 14 ............................. <"Your vote: Thumbs Up">
  [312] joinstr ................................. <sText & "Your vote: Thumbs Up">
  [313] setlocal 6 .............................. sText = sText & "Your vote: Thumbs Up"
  [315] jmp [335]
  [318] getlocal 7 .............................. <iThumbsUp>
  [320] pushzero ................................ <0>
  [321] gt ...................................... <iThumbsUp > 0>
  [322] jmpifz [335] ............................ if iThumbsUp > 0 then
  [325] getlocal 6 .............................. <sText>
  [327] pushcons 15 ............................. <"Positive Votes: ">
  [329] joinstr ................................. <sText & "Positive Votes: ">
  [330] getlocal 7 .............................. <iThumbsUp>
  [332] joinstr ................................. <sText & "Positive Votes: " & iThumbsUp>
  [333] setlocal 6 .............................. sText = sText & "Positive Votes: " & iThumbsUp
  [335] getparam 0 .............................. <me>
  [337] getlocal 6 .............................. <sText>
  [339] pusharglistnoret 2 ...................... <me, sText>
  [341] objcall 10 .............................. me.displayDescription(sText)
  [343] getparam 0 .............................. <me>
  [345] getparam 0 .............................. <me>
  [347] pusharglist 1 ........................... <me>
  [349] objcall 12 .............................. <me.getBurnedCdButtonList()>
  [351] pusharglistnoret 2 ...................... <me, me.getBurnedCdButtonList()>
  [353] objcall 16 .............................. me.displayButtons(me.getBurnedCdButtonList())
  [355] ret
end

on displayWallItem me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 58 ....................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 97 .............................. <me.oItem.getPreviewImage()>
  [  8] setlocal 0 .............................. oPreviewImage = me.oItem.getPreviewImage()
  [ 10] getparam 0 .............................. <me>
  [ 12] getlocal 0 .............................. <oPreviewImage>
  [ 14] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 16] objcall 9 ............................... me.displayPreviewImage(oPreviewImage)
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 58 ....................... <me.oItem>
  [ 22] pusharglist 1 ........................... <me.oItem>
  [ 24] objcall 98 .............................. <me.oItem.getProdId()>
  [ 26] setlocal 1 .............................. iProdId = me.oItem.getProdId()
  [ 28] getglobal 68 ............................ <gCatalog>
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 58 ....................... <me.oItem>
  [ 34] pusharglist 1 ........................... <me.oItem>
  [ 36] objcall 98 .............................. <me.oItem.getProdId()>
  [ 38] pusharglist 2 ........................... <gCatalog, me.oItem.getProdId()>
  [ 40] objcall 70 .............................. <gCatalog.getItemByProdId(me.oItem.getProdId())>
  [ 42] setlocal 2 .............................. aCatalogItem = gCatalog.getItemByProdId(me.oItem.getProdId())
  [ 44] getlocal 1 .............................. <iProdId>
  [ 46] pushint8 109 ............................ <109>
  [ 48] eq ...................................... <iProdId = 109>
  [ 49] jmpifz [ 75] ............................ if iProdId = 109 then / else
  [ 52] getlocal 2 .............................. <aCatalogItem>
  [ 54] pushsymb 99 ............................. <#name>
  [ 56] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 58] objcall 72 .............................. <aCatalogItem[#name]>
  [ 60] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 62] getlocal 2 .............................. <aCatalogItem>
  [ 64] pushsymb 100 ............................ <#roomDesc>
  [ 66] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 68] objcall 72 .............................. <aCatalogItem[#roomDesc]>
  [ 70] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 72] jmp [ 95]
  [ 75] getlocal 2 .............................. <aCatalogItem>
  [ 77] pushsymb 99 ............................. <#name>
  [ 79] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 81] objcall 72 .............................. <aCatalogItem[#name]>
  [ 83] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 85] getlocal 2 .............................. <aCatalogItem>
  [ 87] pushsymb 100 ............................ <#roomDesc>
  [ 89] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 91] objcall 72 .............................. <aCatalogItem[#roomDesc]>
  [ 93] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 95] getlocal 3 .............................. <sName>
  [ 97] pushcons 9 .............................. <RETURN>
  [ 99] joinstr ................................. <sName & RETURN>
  [100] getlocal 4 .............................. <sRoomDesc>
  [102] joinstr ................................. <sName & RETURN & sRoomDesc>
  [103] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [105] getparam 0 .............................. <me>
  [107] getchainedprop 58 ....................... <me.oItem>
  [109] getobjprop 101 .......................... <me.oItem.sAction>
  [111] pushcons 16 ............................. <"TOP_40_CHART">
  [113] eq ...................................... <me.oItem.sAction = "TOP_40_CHART">
  [114] jmpifz [247] ............................ if me.oItem.sAction = "TOP_40_CHART" then
  [117] getparam 0 .............................. <me>
  [119] getchainedprop 58 ....................... <me.oItem>
  [121] pushsymb 102 ............................ <#aAttributes>
  [123] pushsymb 103 ............................ <#author>
  [125] pusharglist 3 ........................... <me.oItem, #aAttributes, #author>
  [127] objcall 104 ............................. <me.oItem.aAttributes[#author]>
  [129] setlocal 6 .............................. sAuthor = me.oItem.aAttributes[#author]
  [131] getparam 0 .............................. <me>
  [133] getchainedprop 58 ....................... <me.oItem>
  [135] pushsymb 102 ............................ <#aAttributes>
  [137] pushsymb 105 ............................ <#title>
  [139] pusharglist 3 ........................... <me.oItem, #aAttributes, #title>
  [141] objcall 104 ............................. <me.oItem.aAttributes[#title]>
  [143] setlocal 7 .............................. sTitle = me.oItem.aAttributes[#title]
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 58 ....................... <me.oItem>
  [149] pushsymb 102 ............................ <#aAttributes>
  [151] pushsymb 106 ............................ <#desc>
  [153] pusharglist 3 ........................... <me.oItem, #aAttributes, #desc>
  [155] objcall 104 ............................. <me.oItem.aAttributes[#desc]>
  [157] setlocal 8 .............................. sDesc = me.oItem.aAttributes[#desc]
  [159] getlocal 8 .............................. <sDesc>
  [161] pusharglist 1 ........................... <sDesc>
  [163] extcall 59 .............................. <voidp(sDesc)>
  [165] getlocal 6 .............................. <sAuthor>
  [167] pusharglist 1 ........................... <sAuthor>
  [169] extcall 59 .............................. <voidp(sAuthor)>
  [171] or ...................................... <voidp(sDesc) or voidp(sAuthor)>
  [172] getlocal 7 .............................. <sTitle>
  [174] pusharglist 1 ........................... <sTitle>
  [176] extcall 59 .............................. <voidp(sTitle)>
  [178] or ...................................... <voidp(sDesc) or voidp(sAuthor) or voidp(sTitle)>
  [179] not ..................................... <not (voidp(sDesc) or voidp(sAuthor) or voidp(sTitle))>
  [180] jmpifz [247] ............................ if not (voidp(sDesc) or voidp(sAuthor) or voidp(sTitle)) then
  [183] getlocal 3 .............................. <sName>
  [185] pushcons 9 .............................. <RETURN>
  [187] joinstr ................................. <sName & RETURN>
  [188] setlocal 5 .............................. sText = sName & RETURN
  [190] getlocal 8 .............................. <sDesc>
  [192] pusharglist 1 ........................... <sDesc>
  [194] extcall 59 .............................. <voidp(sDesc)>
  [196] not ..................................... <not voidp(sDesc)>
  [197] jmpifz [210] ............................ if not voidp(sDesc) then
  [200] getlocal 5 .............................. <sText>
  [202] getlocal 8 .............................. <sDesc>
  [204] joinstr ................................. <sText & sDesc>
  [205] pushcons 9 .............................. <RETURN>
  [207] joinstr ................................. <sText & sDesc & RETURN>
  [208] setlocal 5 .............................. sText = sText & sDesc & RETURN
  [210] getlocal 6 .............................. <sAuthor>
  [212] pusharglist 1 ........................... <sAuthor>
  [214] extcall 59 .............................. <voidp(sAuthor)>
  [216] not ..................................... <not voidp(sAuthor)>
  [217] jmpifz [230] ............................ if not voidp(sAuthor) then
  [220] getlocal 5 .............................. <sText>
  [222] getlocal 6 .............................. <sAuthor>
  [224] joinstr ................................. <sText & sAuthor>
  [225] pushcons 9 .............................. <RETURN>
  [227] joinstr ................................. <sText & sAuthor & RETURN>
  [228] setlocal 5 .............................. sText = sText & sAuthor & RETURN
  [230] getlocal 7 .............................. <sTitle>
  [232] pusharglist 1 ........................... <sTitle>
  [234] extcall 59 .............................. <voidp(sTitle)>
  [236] not ..................................... <not voidp(sTitle)>
  [237] jmpifz [247] ............................ if not voidp(sTitle) then
  [240] getlocal 5 .............................. <sText>
  [242] getlocal 7 .............................. <sTitle>
  [244] joinstr ................................. <sText & sTitle>
  [245] setlocal 5 .............................. sText = sText & sTitle
  [247] getparam 0 .............................. <me>
  [249] getlocal 5 .............................. <sText>
  [251] pusharglistnoret 2 ...................... <me, sText>
  [253] objcall 10 .............................. me.displayDescription(sText)
  [255] ret
end

on displayFurniItem me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 58 ....................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 97 .............................. <me.oItem.getPreviewImage()>
  [  8] setlocal 0 .............................. oPreviewImage = me.oItem.getPreviewImage()
  [ 10] getparam 0 .............................. <me>
  [ 12] getlocal 0 .............................. <oPreviewImage>
  [ 14] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 16] objcall 9 ............................... me.displayPreviewImage(oPreviewImage)
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 58 ....................... <me.oItem>
  [ 22] pusharglist 1 ........................... <me.oItem>
  [ 24] objcall 98 .............................. <me.oItem.getProdId()>
  [ 26] setlocal 1 .............................. iProdId = me.oItem.getProdId()
  [ 28] getglobal 68 ............................ <gCatalog>
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 58 ....................... <me.oItem>
  [ 34] pusharglist 1 ........................... <me.oItem>
  [ 36] objcall 98 .............................. <me.oItem.getProdId()>
  [ 38] pusharglist 2 ........................... <gCatalog, me.oItem.getProdId()>
  [ 40] objcall 70 .............................. <gCatalog.getItemByProdId(me.oItem.getProdId())>
  [ 42] setlocal 2 .............................. aCatalogItem = gCatalog.getItemByProdId(me.oItem.getProdId())
  [ 44] getlocal 2 .............................. <aCatalogItem>
  [ 46] pushsymb 99 ............................. <#name>
  [ 48] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 50] objcall 72 .............................. <aCatalogItem[#name]>
  [ 52] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 54] getlocal 2 .............................. <aCatalogItem>
  [ 56] pushsymb 100 ............................ <#roomDesc>
  [ 58] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 60] objcall 72 .............................. <aCatalogItem[#roomDesc]>
  [ 62] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 64] getlocal 3 .............................. <sName>
  [ 66] pushcons 9 .............................. <RETURN>
  [ 68] joinstr ................................. <sName & RETURN>
  [ 69] getlocal 4 .............................. <sRoomDesc>
  [ 71] joinstr ................................. <sName & RETURN & sRoomDesc>
  [ 72] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [ 74] getparam 0 .............................. <me>
  [ 76] getchainedprop 58 ....................... <me.oItem>
  [ 78] pusharglist 1 ........................... <me.oItem>
  [ 80] objcall 113 ............................. <me.oItem.getAttributes()>
  [ 82] setlocal 6 .............................. aAttributes = me.oItem.getAttributes()
  [ 84] getparam 0 .............................. <me>
  [ 86] getchainedprop 58 ....................... <me.oItem>
  [ 88] pusharglist 1 ........................... <me.oItem>
  [ 90] objcall 114 ............................. <me.oItem.isBurnedCd()>
  [ 92] jmpifz [127] ............................ if me.oItem.isBurnedCd() then
  [ 95] getlocal 6 .............................. <aAttributes>
  [ 97] pushsymb 115 ............................ <#ownerName>
  [ 99] pusharglist 2 ........................... <aAttributes, #ownerName>
  [101] objcall 72 .............................. <aAttributes[#ownerName]>
  [103] pushcons 17 ............................. <": ">
  [105] joinstr ................................. <aAttributes[#ownerName] & ": ">
  [106] getlocal 6 .............................. <aAttributes>
  [108] pushsymb 116 ............................ <#songName>
  [110] pusharglist 2 ........................... <aAttributes, #songName>
  [112] objcall 72 .............................. <aAttributes[#songName]>
  [114] joinstr ................................. <aAttributes[#ownerName] & ": " & aAttributes[#songName]>
  [115] setlocal 4 .............................. sRoomDesc = aAttributes[#ownerName] & ": " & aAttributes[#songName]
  [117] getlocal 3 .............................. <sName>
  [119] pushcons 9 .............................. <RETURN>
  [121] joinstr ................................. <sName & RETURN>
  [122] getlocal 4 .............................. <sRoomDesc>
  [124] joinstr ................................. <sName & RETURN & sRoomDesc>
  [125] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [127] getparam 0 .............................. <me>
  [129] getlocal 5 .............................. <sText>
  [131] pusharglistnoret 2 ...................... <me, sText>
  [133] objcall 10 .............................. me.displayDescription(sText)
  [135] ret
end

on displayAvatar me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 58 ....................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 97 .............................. <me.oItem.getPreviewImage()>
  [  8] setlocal 0 .............................. oPreviewImageObject = me.oItem.getPreviewImage()
  [ 10] pushcons 18 ............................. <"_PREVIEW_">
  [ 12] pushcons 19 ............................. <"AvatarEngine">
  [ 14] pusharglist 2 ........................... <"_PREVIEW_", "AvatarEngine">
  [ 16] extcall 30 .............................. <member("_PREVIEW_", "AvatarEngine")>
  [ 18] setlocal 1 .............................. oPreviewMember = member("_PREVIEW_", "AvatarEngine")
  [ 20] getlocal 1 .............................. <oPreviewMember>
  [ 22] getchainedprop 117 ...................... <oPreviewMember.image>
  [ 24] getlocal 0 .............................. <oPreviewImageObject>
  [ 26] getlocal 0 .............................. <oPreviewImageObject>
  [ 28] getobjprop 41 ........................... <oPreviewImageObject.rect>
  [ 30] getlocal 0 .............................. <oPreviewImageObject>
  [ 32] getobjprop 41 ........................... <oPreviewImageObject.rect>
  [ 34] pusharglistnoret 4 ...................... <oPreviewMember.image, oPreviewImageObject, oPreviewImageObject.rect, oPreviewImageObject.rect>
  [ 36] objcall 118 ............................. oPreviewMember.image.copyPixels(oPreviewImageObject, oPreviewImageObject.rect, oPreviewImageObject.rect)
  [ 38] getparam 0 .............................. <me>
  [ 40] getlocal 1 .............................. <oPreviewMember>
  [ 42] pusharglist 2 ........................... <me, oPreviewMember>
  [ 44] objcall 9 ............................... <me.displayPreviewImage(oPreviewMember)>
  [ 46] setlocal 2 .............................. iSprite = me.displayPreviewImage(oPreviewMember)
  [ 48] getlocal 2 .............................. <iSprite>
  [ 50] pusharglist 1 ........................... <iSprite>
  [ 52] extcall 119 ............................. <sprite(iSprite)>
  [ 54] pushint8 36 ............................. <36>
  [ 56] setobjprop 37 ........................... sprite(iSprite).ink = 36
  [ 58] getglobal 60 ............................ <oStudioMap>
  [ 60] pusharglist 1 ........................... <oStudioMap>
  [ 62] objcall 61 .............................. <oStudioMap.isPrivate()>
  [ 64] jmpifz [ 91] ............................ if oStudioMap.isPrivate() then / else
  [ 67] getlocal 2 .............................. <iSprite>
  [ 69] pusharglist 1 ........................... <iSprite>
  [ 71] extcall 119 ............................. <sprite(iSprite)>
  [ 73] pushint16 255 ........................... <255>
  [ 76] pushint16 255 ........................... <255>
  [ 79] pushint16 255 ........................... <255>
  [ 82] pusharglist 3 ........................... <255, 255, 255>
  [ 84] extcall 120 ............................. <rgb(255, 255, 255)>
  [ 86] setobjprop 121 .......................... sprite(iSprite).bgColor = rgb(255, 255, 255)
  [ 88] jmp [109]
  [ 91] getlocal 2 .............................. <iSprite>
  [ 93] pusharglist 1 ........................... <iSprite>
  [ 95] extcall 119 ............................. <sprite(iSprite)>
  [ 97] pushint8 100 ............................ <100>
  [ 99] pushint8 100 ............................ <100>
  [101] pushint8 100 ............................ <100>
  [103] pusharglist 3 ........................... <100, 100, 100>
  [105] extcall 120 ............................. <rgb(100, 100, 100)>
  [107] setobjprop 121 .......................... sprite(iSprite).bgColor = rgb(100, 100, 100)
  [109] getlocal 2 .............................. <iSprite>
  [111] pusharglist 1 ........................... <iSprite>
  [113] extcall 119 ............................. <sprite(iSprite)>
  [115] getlocal 2 .............................. <iSprite>
  [117] pusharglist 1 ........................... <iSprite>
  [119] extcall 119 ............................. <sprite(iSprite)>
  [121] getobjprop 122 .......................... <sprite(iSprite).locV>
  [123] pushint8 10 ............................. <10>
  [125] add ..................................... <sprite(iSprite).locV + 10>
  [126] setobjprop 122 .......................... sprite(iSprite).locV = sprite(iSprite).locV + 10
  [128] getparam 0 .............................. <me>
  [130] getchainedprop 58 ....................... <me.oItem>
  [132] pusharglist 1 ........................... <me.oItem>
  [134] objcall 78 .............................. <me.oItem.getScreenName()>
  [136] pushcons 9 .............................. <RETURN>
  [138] joinstr ................................. <me.oItem.getScreenName() & RETURN>
  [139] getparam 0 .............................. <me>
  [141] getchainedprop 58 ....................... <me.oItem>
  [143] pusharglist 1 ........................... <me.oItem>
  [145] objcall 123 ............................. <me.oItem.getMission()>
  [147] joinstr ................................. <me.oItem.getScreenName() & RETURN & me.oItem.getMission()>
  [148] setlocal 3 .............................. sBaseText = me.oItem.getScreenName() & RETURN & me.oItem.getMission()
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 58 ....................... <me.oItem>
  [154] pusharglist 1 ........................... <me.oItem>
  [156] objcall 124 ............................. <me.oItem.isDrinking()>
  [158] setlocal 4 .............................. bDrinking = me.oItem.isDrinking()
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 58 ....................... <me.oItem>
  [164] pusharglist 1 ........................... <me.oItem>
  [166] objcall 125 ............................. <me.oItem.isTrading()>
  [168] setlocal 5 .............................. bTrading = me.oItem.isTrading()
  [170] getlocal 3 .............................. <sBaseText>
  [172] setlocal 6 .............................. sFinalText = sBaseText
  [174] getlocal 4 .............................. <bDrinking>
  [176] jmpifz [189] ............................ if bDrinking then
  [179] getlocal 3 .............................. <sBaseText>
  [181] pushcons 9 .............................. <RETURN>
  [183] joinstr ................................. <sBaseText & RETURN>
  [184] pushcons 20 ............................. <"Carrying: Coke Bottle">
  [186] joinstr ................................. <sBaseText & RETURN & "Carrying: Coke Bottle">
  [187] setlocal 6 .............................. sFinalText = sBaseText & RETURN & "Carrying: Coke Bottle"
  [189] getlocal 5 .............................. <bTrading>
  [191] jmpifz [204] ............................ if bTrading then
  [194] getlocal 3 .............................. <sBaseText>
  [196] pushcons 9 .............................. <RETURN>
  [198] joinstr ................................. <sBaseText & RETURN>
  [199] pushcons 21 ............................. <"Trading.">
  [201] joinstr ................................. <sBaseText & RETURN & "Trading.">
  [202] setlocal 6 .............................. sFinalText = sBaseText & RETURN & "Trading."
  [204] getparam 0 .............................. <me>
  [206] getlocal 6 .............................. <sFinalText>
  [208] pusharglistnoret 2 ...................... <me, sFinalText>
  [210] objcall 10 .............................. me.displayDescription(sFinalText)
  [212] ret
end

on displayInfoStand me
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 38 ........................... <me.aInfoStandProps>
  [  8] pusharglist 2 ........................... <oIsoScene.oSpriteManager, me.aInfoStandProps>
  [ 10] objcall 135 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aInfoStandProps)>
  [ 12] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aInfoStandProps)
  [ 14] getlocal 0 .............................. <iSprite>
  [ 16] pusharglist 1 ........................... <iSprite>
  [ 18] extcall 119 ............................. <sprite(iSprite)>
  [ 20] getglobal 133 ........................... <oIsoScene>
  [ 22] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 24] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 26] objcall 137 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 28] setobjprop 138 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 139 ...................... <me.aSprites>
  [ 34] getlocal 0 .............................. <iSprite>
  [ 36] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [ 38] objcall 140 ............................. me.aSprites.add(iSprite)
  [ 40] ret
end

on displayPreviewImage me, oPreviewImage
  [  0] getparam 1 .............................. <oPreviewImage>
  [  2] getobjprop 141 .......................... <oPreviewImage.width>
  [  4] setlocal 0 .............................. iWidth = oPreviewImage.width
  [  6] getparam 1 .............................. <oPreviewImage>
  [  8] getobjprop 142 .......................... <oPreviewImage.height>
  [ 10] setlocal 1 .............................. iHeight = oPreviewImage.height
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 40 ....................... <me.iPreviewRegPoint>
  [ 16] getobjprop 143 .......................... <me.iPreviewRegPoint.locH>
  [ 18] getlocal 0 .............................. <iWidth>
  [ 20] pushint8 2 .............................. <2>
  [ 22] div ..................................... <iWidth / 2>
  [ 23] sub ..................................... <me.iPreviewRegPoint.locH - (iWidth / 2)>
  [ 24] setlocal 2 .............................. iLeft = me.iPreviewRegPoint.locH - (iWidth / 2)
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 40 ....................... <me.iPreviewRegPoint>
  [ 30] getobjprop 122 .......................... <me.iPreviewRegPoint.locV>
  [ 32] getlocal 1 .............................. <iHeight>
  [ 34] sub ..................................... <me.iPreviewRegPoint.locV - iHeight>
  [ 35] setlocal 3 .............................. iTop = me.iPreviewRegPoint.locV - iHeight
  [ 37] getlocal 2 .............................. <iLeft>
  [ 39] getlocal 0 .............................. <iWidth>
  [ 41] add ..................................... <iLeft + iWidth>
  [ 42] setlocal 4 .............................. iRight = iLeft + iWidth
  [ 44] getlocal 3 .............................. <iTop>
  [ 46] getlocal 1 .............................. <iHeight>
  [ 48] add ..................................... <iTop + iHeight>
  [ 49] setlocal 5 .............................. iBottom = iTop + iHeight
  [ 51] getlocal 2 .............................. <iLeft>
  [ 53] getlocal 3 .............................. <iTop>
  [ 55] getlocal 4 .............................. <iRight>
  [ 57] getlocal 5 .............................. <iBottom>
  [ 59] pusharglist 4 ........................... <iLeft, iTop, iRight, iBottom>
  [ 61] extcall 41 .............................. <rect(iLeft, iTop, iRight, iBottom)>
  [ 63] setlocal 6 .............................. oRect = rect(iLeft, iTop, iRight, iBottom)
  [ 65] pushsymb 30 ............................. <#member>
  [ 67] getparam 1 .............................. <oPreviewImage>
  [ 69] getobjprop 99 ........................... <oPreviewImage.name>
  [ 71] pushsymb 35 ............................. <#x>
  [ 73] getlocal 2 .............................. <iLeft>
  [ 75] pushsymb 36 ............................. <#y>
  [ 77] getlocal 3 .............................. <iTop>
  [ 79] pushsymb 37 ............................. <#ink>
  [ 81] pushint8 36 ............................. <36>
  [ 83] pusharglist 8 ........................... <[#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]>
  [ 85] pushproplist ............................ <[#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]>
  [ 86] setlocal 7 .............................. aProps = [#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]
  [ 88] getglobal 133 ........................... <oIsoScene>
  [ 90] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 92] getlocal 7 .............................. <aProps>
  [ 94] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [ 96] objcall 135 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [ 98] setlocal 8 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [100] getlocal 8 .............................. <iSprite>
  [102] pusharglist 1 ........................... <iSprite>
  [104] extcall 119 ............................. <sprite(iSprite)>
  [106] pushint16 255 ........................... <255>
  [109] pushint16 255 ........................... <255>
  [112] pushint16 255 ........................... <255>
  [115] pusharglist 3 ........................... <255, 255, 255>
  [117] extcall 120 ............................. <rgb(255, 255, 255)>
  [119] setobjprop 121 .......................... sprite(iSprite).bgColor = rgb(255, 255, 255)
  [121] getlocal 8 .............................. <iSprite>
  [123] pusharglist 1 ........................... <iSprite>
  [125] extcall 119 ............................. <sprite(iSprite)>
  [127] getlocal 6 .............................. <oRect>
  [129] setobjprop 41 ........................... sprite(iSprite).rect = oRect
  [131] getlocal 8 .............................. <iSprite>
  [133] pusharglist 1 ........................... <iSprite>
  [135] extcall 119 ............................. <sprite(iSprite)>
  [137] getglobal 133 ........................... <oIsoScene>
  [139] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [141] pusharglist 1 ........................... <oIsoScene.oGrid>
  [143] objcall 137 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [145] setobjprop 138 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [147] getparam 0 .............................. <me>
  [149] getchainedprop 139 ...................... <me.aSprites>
  [151] getlocal 8 .............................. <iSprite>
  [153] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [155] objcall 140 ............................. me.aSprites.add(iSprite)
  [157] getlocal 8 .............................. <iSprite>
  [159] pusharglistnoret 1 ...................... <iSprite>
  [161] extcall 52 .............................. return iSprite
  [163] ret
end

on displayDescription me, sText
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 31 ....................... <me.oDescMember>
  [  4] getparam 1 .............................. <sText>
  [  6] setobjprop 152 .......................... me.oDescMember.text = sText
  [  8] getglobal 133 ........................... <oIsoScene>
  [ 10] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 45 ........................... <me.aDescriptionTextProps>
  [ 16] pusharglist 2 ........................... <oIsoScene.oSpriteManager, me.aDescriptionTextProps>
  [ 18] objcall 135 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aDescriptionTextProps)>
  [ 20] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aDescriptionTextProps)
  [ 22] getlocal 0 .............................. <iSprite>
  [ 24] pusharglist 1 ........................... <iSprite>
  [ 26] extcall 119 ............................. <sprite(iSprite)>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 42 ........................... <me.oDescRect>
  [ 32] setobjprop 41 ........................... sprite(iSprite).rect = me.oDescRect
  [ 34] getlocal 0 .............................. <iSprite>
  [ 36] pusharglist 1 ........................... <iSprite>
  [ 38] extcall 119 ............................. <sprite(iSprite)>
  [ 40] getchainedprop 30 ....................... <sprite(iSprite).member>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 42 ........................... <me.oDescRect>
  [ 46] setobjprop 41 ........................... sprite(iSprite).member.rect = me.oDescRect
  [ 48] getlocal 0 .............................. <iSprite>
  [ 50] pusharglist 1 ........................... <iSprite>
  [ 52] extcall 119 ............................. <sprite(iSprite)>
  [ 54] getglobal 133 ........................... <oIsoScene>
  [ 56] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 58] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 60] objcall 137 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 62] setobjprop 138 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 31 ....................... <me.oDescMember>
  [ 68] pushint8 1 .............................. <1>
  [ 70] setobjprop 153 .......................... me.oDescMember.hilite = 1
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 31 ....................... <me.oDescMember>
  [ 76] pushcons 1 .............................. <"plain">
  [ 78] setobjprop 34 ........................... me.oDescMember.fontStyle = "plain"
  [ 80] pushzero ................................ <0>
  [ 81] pushzero ................................ <0>
  [ 82] pushzero ................................ <0>
  [ 83] pushzero ................................ <0>
  [ 84] pushzero ................................ <0>
  [ 85] pushzero ................................ <0>
  [ 86] pushint8 1 .............................. <1>
  [ 88] pushzero ................................ <0>
  [ 89] pushcons 0 .............................. <"InfoStandDescription">
  [ 91] pushzero ................................ <0>
  [ 92] pushcons 22 ............................. <"bold">
  [ 94] pushint8 3 .............................. <3>
  [ 96] set 10 .................................. set the textStyle of line 1 of member "InfoStandDescription" to "bold"
  [ 98] getparam 0 .............................. <me>
  [100] getchainedprop 139 ...................... <me.aSprites>
  [102] getlocal 0 .............................. <iSprite>
  [104] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [106] objcall 140 ............................. me.aSprites.add(iSprite)
  [108] ret
end

on destroy me
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 139 .......................... <me.aSprites>
  [  8] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.aSprites>
  [ 10] objcall 154 ............................. oIsoScene.oSpriteManager.returnPooledSprites(me.aSprites)
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 47 ........................... <me.aDynamicMembers>
  [ 16] peek 0
  [ 18] pusharglist 1
  [ 20] extcall 155
  [ 22] pushint8 1
  [ 24] peek 0
  [ 26] peek 2
  [ 28] lteq
  [ 29] jmpifz [ 76] ............................ repeat with sMemberName in me.aDynamicMembers
  [ 32] peek 2
  [ 34] peek 1
  [ 36] pusharglist 2
  [ 38] extcall 72
  [ 40] setlocal 0
  [ 42] getlocal 0 .............................. <sMemberName>
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 48 ........................... <me.sCastLib>
  [ 48] pusharglist 2 ........................... <sMemberName, me.sCastLib>
  [ 50] extcall 30 .............................. <member(sMemberName, me.sCastLib)>
  [ 52] setlocal 1 .............................. oMember = member(sMemberName, me.sCastLib)
  [ 54] getlocal 1 .............................. <oMember>
  [ 56] getobjprop 73 ........................... <oMember.memberNum>
  [ 58] pushint8 1 .............................. <1>
  [ 60] inv ..................................... <-1>
  [ 61] nteq .................................... <oMember.memberNum <> -1>
  [ 62] jmpifz [ 71] ............................ if oMember.memberNum <> -1 then
  [ 65] getlocal 1 .............................. <oMember>
  [ 67] pusharglistnoret 1 ...................... <oMember>
  [ 69] objcall 156 ............................. oMember.erase()
  [ 71] pushint8 1
  [ 73] add
  [ 74] endrepeat [ 24]
  [ 76] pop 3
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 0 ........................... <[]>
  [ 82] pushlist ................................ <[]>
  [ 83] setobjprop 139 .......................... me.aSprites = []
  [ 85] ret
end

on getBurnedCdButtonList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aButtonList = []
  [  5] getglobal 64 ............................ <oStudio>
  [  7] pusharglist 1 ........................... <oStudio>
  [  9] objcall 74 .............................. <oStudio.getcdplayer()>
  [ 11] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 13] objcall 159 ............................. <oStudio.getcdplayer().getCd()>
  [ 15] setlocal 1 .............................. foCd = oStudio.getcdplayer().getCd()
  [ 17] getlocal 1 .............................. <foCd>
  [ 19] pusharglist 1 ........................... <foCd>
  [ 21] objcall 66 .............................. <foCd.getAuthorName()>
  [ 23] setlocal 2 .............................. sAuthor = foCd.getAuthorName()
  [ 25] getglobal 64 ............................ <oStudio>
  [ 27] pusharglist 1 ........................... <oStudio>
  [ 29] objcall 74 .............................. <oStudio.getcdplayer()>
  [ 31] getglobal 77 ............................ <oDenizenManager>
  [ 33] pusharglist 1 ........................... <oDenizenManager>
  [ 35] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [ 37] pusharglist 2 ........................... <oStudio.getcdplayer(), oDenizenManager.getScreenName()>
  [ 39] objcall 79 .............................. <oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())>
  [ 41] setlocal 3 .............................. bEligibleVoter = oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())
  [ 43] getlocal 3 .............................. <bEligibleVoter>
  [ 45] not ..................................... <not bEligibleVoter>
  [ 46] jmpifz [ 55] ............................ if not bEligibleVoter then
  [ 49] getlocal 0 .............................. <aButtonList>
  [ 51] pusharglistnoret 1 ...................... <aButtonList>
  [ 53] extcall 52 .............................. return aButtonList
  [ 55] getlocal 1 .............................. <foCd>
  [ 57] pusharglist 1 ........................... <foCd>
  [ 59] objcall 21 .............................. <foCd.hasVoted()>
  [ 61] setlocal 4 .............................. bHasVoted = foCd.hasVoted()
  [ 63] getlocal 4 .............................. <bHasVoted>
  [ 65] pushzero ................................ <0>
  [ 66] eq ...................................... <bHasVoted = 0>
  [ 67] getlocal 4 .............................. <bHasVoted>
  [ 69] not ..................................... <not bHasVoted>
  [ 70] or ...................................... <(bHasVoted = 0) or not bHasVoted>
  [ 71] jmpifz [ 90] ............................ if (bHasVoted = 0) or not bHasVoted then
  [ 74] getlocal 0 .............................. <aButtonList>
  [ 76] pushcons 12 ............................. <"Thumbs Up">
  [ 78] pusharglistnoret 2 ...................... <aButtonList, "Thumbs Up">
  [ 80] objcall 140 ............................. aButtonList.add("Thumbs Up")
  [ 82] getlocal 0 .............................. <aButtonList>
  [ 84] pushcons 13 ............................. <"Thumbs Down">
  [ 86] pusharglistnoret 2 ...................... <aButtonList, "Thumbs Down">
  [ 88] objcall 140 ............................. aButtonList.add("Thumbs Down")
  [ 90] getlocal 0 .............................. <aButtonList>
  [ 92] pusharglistnoret 1 ...................... <aButtonList>
  [ 94] extcall 52 .............................. return aButtonList
  [ 96] ret
end

on getFurniItemButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 22 .............................. <me.isOwner()>
  [  6] setlocal 0 .............................. bIsOwner = me.isOwner()
  [  8] pusharglist 0 ........................... <[]>
  [ 10] pushlist ................................ <[]>
  [ 11] setlocal 1 .............................. aButtonList = []
  [ 13] getglobal 68 ............................ <gCatalog>
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 58 ....................... <me.oItem>
  [ 19] getobjprop 161 .......................... <me.oItem.sProdID>
  [ 21] pusharglist 1 ........................... <me.oItem.sProdID>
  [ 23] extcall 69 .............................. <integer(me.oItem.sProdID)>
  [ 25] pusharglist 2 ........................... <gCatalog, integer(me.oItem.sProdID)>
  [ 27] objcall 70 .............................. <gCatalog.getItemByProdId(integer(me.oItem.sProdID))>
  [ 29] setlocal 2 .............................. aCatItem = gCatalog.getItemByProdId(integer(me.oItem.sProdID))
  [ 31] getlocal 2 .............................. <aCatItem>
  [ 33] pusharglist 1 ........................... <aCatItem>
  [ 35] extcall 59 .............................. <voidp(aCatItem)>
  [ 37] jmpifz [ 47] ............................ if voidp(aCatItem) then / else
  [ 40] pushint8 1 .............................. <1>
  [ 42] setlocal 3 .............................. bModifiable = 1
  [ 44] jmp [ 53]
  [ 47] getlocal 2 .............................. <aCatItem>
  [ 49] getobjprop 162 .......................... <aCatItem.modifiable>
  [ 51] setlocal 3 .............................. bModifiable = aCatItem.modifiable
  [ 53] getlocal 0 .............................. <bIsOwner>
  [ 55] jmpifz [137] ............................ if bIsOwner then
  [ 58] getlocal 1 .............................. <aButtonList>
  [ 60] pushcons 23 ............................. <"Move">
  [ 62] pusharglistnoret 2 ...................... <aButtonList, "Move">
  [ 64] objcall 140 ............................. aButtonList.add("Move")
  [ 66] getlocal 1 .............................. <aButtonList>
  [ 68] pushcons 24 ............................. <"Rotate">
  [ 70] pusharglistnoret 2 ...................... <aButtonList, "Rotate">
  [ 72] objcall 140 ............................. aButtonList.add("Rotate")
  [ 74] getparam 0 .............................. <me>
  [ 76] getchainedprop 58 ....................... <me.oItem>
  [ 78] pusharglist 1 ........................... <me.oItem>
  [ 80] objcall 163 ............................. <me.oItem.canPickup()>
  [ 82] getlocal 3 .............................. <bModifiable>
  [ 84] and ..................................... <me.oItem.canPickup() and bModifiable>
  [ 85] jmpifz [ 96] ............................ if me.oItem.canPickup() and bModifiable then
  [ 88] getlocal 1 .............................. <aButtonList>
  [ 90] pushcons 25 ............................. <"Pick up">
  [ 92] pusharglistnoret 2 ...................... <aButtonList, "Pick up">
  [ 94] objcall 140 ............................. aButtonList.add("Pick up")
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 58 ....................... <me.oItem>
  [100] pusharglist 1 ........................... <me.oItem>
  [102] objcall 164 ............................. <me.oItem.canDelete()>
  [104] getlocal 3 .............................. <bModifiable>
  [106] and ..................................... <me.oItem.canDelete() and bModifiable>
  [107] jmpifz [118] ............................ if me.oItem.canDelete() and bModifiable then
  [110] getlocal 1 .............................. <aButtonList>
  [112] pushcons 26 ............................. <"Delete">
  [114] pusharglistnoret 2 ...................... <aButtonList, "Delete">
  [116] objcall 140 ............................. aButtonList.add("Delete")
  [118] getparam 0 .............................. <me>
  [120] getchainedprop 58 ....................... <me.oItem>
  [122] pusharglist 1 ........................... <me.oItem>
  [124] objcall 165 ............................. <me.oItem.canUse()>
  [126] jmpifz [137] ............................ if me.oItem.canUse() then
  [129] getlocal 1 .............................. <aButtonList>
  [131] pushcons 27 ............................. <"Use">
  [133] pusharglistnoret 2 ...................... <aButtonList, "Use">
  [135] objcall 140 ............................. aButtonList.add("Use")
  [137] getlocal 1 .............................. <aButtonList>
  [139] pusharglistnoret 1 ...................... <aButtonList>
  [141] extcall 52 .............................. return aButtonList
  [143] ret
end

on getAvatarButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 23 .............................. <me.isMod()>
  [  6] setlocal 0 .............................. bIsMod = me.isMod()
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 28 .............................. <me.isMe()>
  [ 14] setlocal 1 .............................. bIsMe = me.isMe()
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 1 ........................... <me>
  [ 20] objcall 22 .............................. <me.isOwner()>
  [ 22] setlocal 2 .............................. bIsOwner = me.isOwner()
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 24 .............................. <me.isBot()>
  [ 30] setlocal 3 .............................. bIsBot = me.isBot()
  [ 32] pushcons 28 ............................. <"infostand:bIsBot: ">
  [ 34] getlocal 3 .............................. <bIsBot>
  [ 36] joinstr ................................. <"infostand:bIsBot: " & bIsBot>
  [ 37] pusharglistnoret 1 ...................... <"infostand:bIsBot: " & bIsBot>
  [ 39] extcall 168 ............................. put "infostand:bIsBot: " & bIsBot
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setlocal 4 .............................. aButtonList = []
  [ 46] getlocal 1 .............................. <bIsMe>
  [ 48] jmpifz [175] ............................ if bIsMe then / else
  [ 51] getparam 0 .............................. <me>
  [ 53] getchainedprop 58 ....................... <me.oItem>
  [ 55] pusharglist 1 ........................... <me.oItem>
  [ 57] objcall 169 ............................. <me.oItem.isSitting()>
  [ 59] setlocal 5 .............................. bIsSitting = me.oItem.isSitting()
  [ 61] getparam 0 .............................. <me>
  [ 63] getchainedprop 58 ....................... <me.oItem>
  [ 65] pusharglist 1 ........................... <me.oItem>
  [ 67] objcall 170 ............................. <me.oItem.isDancing()>
  [ 69] setlocal 6 .............................. bIsDancing = me.oItem.isDancing()
  [ 71] getlocal 6 .............................. <bIsDancing>
  [ 73] jmpifz [ 87] ............................ if bIsDancing then / else
  [ 76] getlocal 4 .............................. <aButtonList>
  [ 78] pushcons 29 ............................. <"Stop Dancing">
  [ 80] pusharglistnoret 2 ...................... <aButtonList, "Stop Dancing">
  [ 82] objcall 140 ............................. aButtonList.add("Stop Dancing")
  [ 84] jmp [101]
  [ 87] getlocal 5 .............................. <bIsSitting>
  [ 89] not ..................................... <not bIsSitting>
  [ 90] jmpifz [101] ............................ if not bIsSitting then
  [ 93] getlocal 4 .............................. <aButtonList>
  [ 95] pushcons 30 ............................. <"Dance">
  [ 97] pusharglistnoret 2 ...................... <aButtonList, "Dance">
  [ 99] objcall 140 ............................. aButtonList.add("Dance")
  [101] getglobal 64 ............................ <oStudio>
  [103] pusharglist 1 ........................... <oStudio>
  [105] extcall 59 .............................. <voidp(oStudio)>
  [107] jmpifz [116] ............................ if voidp(oStudio) then / else
  [110] pushzero ................................ <0>
  [111] setlocal 7 .............................. bIsPlaying = 0
  [113] jmp [131]
  [116] getglobal 64 ............................ <oStudio>
  [118] pusharglist 1 ........................... <oStudio>
  [120] objcall 74 .............................. <oStudio.getcdplayer()>
  [122] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [124] objcall 171 ............................. <oStudio.getcdplayer().isPlaying()>
  [126] pushint8 1 .............................. <1>
  [128] eq ...................................... <oStudio.getcdplayer().isPlaying() = 1>
  [129] setlocal 7 .............................. bIsPlaying = oStudio.getcdplayer().isPlaying() = 1
  [131] getlocal 7 .............................. <bIsPlaying>
  [133] jmpifz [172] ............................ if bIsPlaying then
  [136] getglobal 64 ............................ <oStudio>
  [138] pusharglist 1 ........................... <oStudio>
  [140] objcall 74 .............................. <oStudio.getcdplayer()>
  [142] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [144] objcall 80 .............................. <oStudio.getcdplayer().getAvatar()>
  [146] setlocal 8 .............................. sCdPlayerAvatar = oStudio.getcdplayer().getAvatar()
  [148] getlocal 8 .............................. <sCdPlayerAvatar>
  [150] getglobal 77 ............................ <oDenizenManager>
  [152] pusharglist 1 ........................... <oDenizenManager>
  [154] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [156] eq ...................................... <sCdPlayerAvatar = oDenizenManager.getScreenName()>
  [157] setlocal 9 .............................. bIsPerforming = sCdPlayerAvatar = oDenizenManager.getScreenName()
  [159] getlocal 9 .............................. <bIsPerforming>
  [161] jmpifz [172] ............................ if bIsPerforming then
  [164] getlocal 4 .............................. <aButtonList>
  [166] pushcons 31 ............................. <"Stop Performing">
  [168] pusharglistnoret 2 ...................... <aButtonList, "Stop Performing">
  [170] objcall 140 ............................. aButtonList.add("Stop Performing")
  [172] jmp [285]
  [175] getlocal 2 .............................. <bIsOwner>
  [177] getlocal 0 .............................. <bIsMod>
  [179] or ...................................... <bIsOwner or bIsMod>
  [180] getlocal 3 .............................. <bIsBot>
  [182] not ..................................... <not bIsBot>
  [183] and ..................................... <(bIsOwner or bIsMod) and not bIsBot>
  [184] jmpifz [195] ............................ if (bIsOwner or bIsMod) and not bIsBot then
  [187] getlocal 4 .............................. <aButtonList>
  [189] pushcons 32 ............................. <"Kick Out">
  [191] pusharglistnoret 2 ...................... <aButtonList, "Kick Out">
  [193] objcall 140 ............................. aButtonList.add("Kick Out")
  [195] getparam 0 .............................. <me>
  [197] getchainedprop 58 ....................... <me.oItem>
  [199] pusharglist 1 ........................... <me.oItem>
  [201] objcall 125 ............................. <me.oItem.isTrading()>
  [203] setlocal 10 ............................. bIsTrading = me.oItem.isTrading()
  [205] getlocal 10 ............................. <bIsTrading>
  [207] not ..................................... <not bIsTrading>
  [208] getlocal 3 .............................. <bIsBot>
  [210] not ..................................... <not bIsBot>
  [211] and ..................................... <not bIsTrading and not bIsBot>
  [212] jmpifz [223] ............................ if not bIsTrading and not bIsBot then
  [215] getlocal 4 .............................. <aButtonList>
  [217] pushcons 33 ............................. <"Trade">
  [219] pusharglistnoret 2 ...................... <aButtonList, "Trade">
  [221] objcall 140 ............................. aButtonList.add("Trade")
  [223] getglobal 172 ........................... <ElementMgr>
  [225] pusharglist 1 ........................... <ElementMgr>
  [227] objcall 173 ............................. <ElementMgr.getMessengerObject()>
  [229] setlocal 11 ............................. oMessenger = ElementMgr.getMessengerObject()
  [231] getlocal 11 ............................. <oMessenger>
  [233] getparam 0 .............................. <me>
  [235] getchainedprop 58 ....................... <me.oItem>
  [237] pusharglist 1 ........................... <me.oItem>
  [239] objcall 78 .............................. <me.oItem.getScreenName()>
  [241] pusharglist 2 ........................... <oMessenger, me.oItem.getScreenName()>
  [243] objcall 174 ............................. <oMessenger.isFriend(me.oItem.getScreenName())>
  [245] setlocal 12 ............................. bIsFriend = oMessenger.isFriend(me.oItem.getScreenName())
  [247] getlocal 11 ............................. <oMessenger>
  [249] getparam 0 .............................. <me>
  [251] getchainedprop 58 ....................... <me.oItem>
  [253] pusharglist 1 ........................... <me.oItem>
  [255] objcall 78 .............................. <me.oItem.getScreenName()>
  [257] pusharglist 2 ........................... <oMessenger, me.oItem.getScreenName()>
  [259] objcall 175 ............................. <oMessenger.haveInvited(me.oItem.getScreenName())>
  [261] setlocal 13 ............................. bHaveInvited = oMessenger.haveInvited(me.oItem.getScreenName())
  [263] getlocal 12 ............................. <bIsFriend>
  [265] not ..................................... <not bIsFriend>
  [266] getlocal 13 ............................. <bHaveInvited>
  [268] not ..................................... <not bHaveInvited>
  [269] and ..................................... <not bIsFriend and not bHaveInvited>
  [270] getlocal 3 .............................. <bIsBot>
  [272] not ..................................... <not bIsBot>
  [273] and ..................................... <not bIsFriend and not bHaveInvited and not bIsBot>
  [274] jmpifz [285] ............................ if not bIsFriend and not bHaveInvited and not bIsBot then
  [277] getlocal 4 .............................. <aButtonList>
  [279] pushcons 34 ............................. <"Ask to become a friend">
  [281] pusharglistnoret 2 ...................... <aButtonList, "Ask to become a friend">
  [283] objcall 140 ............................. aButtonList.add("Ask to become a friend")
  [285] getlocal 4 .............................. <aButtonList>
  [287] pusharglistnoret 1 ...................... <aButtonList>
  [289] extcall 52 .............................. return aButtonList
  [291] ret
end

on getWallItemButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 22 .............................. <me.isOwner()>
  [  6] setlocal 0 .............................. bIsOwner = me.isOwner()
  [  8] pusharglist 0 ........................... <[]>
  [ 10] pushlist ................................ <[]>
  [ 11] setlocal 1 .............................. aButtonList = []
  [ 13] getlocal 0 .............................. <bIsOwner>
  [ 15] jmpifz [ 53] ............................ if bIsOwner then
  [ 18] getlocal 1 .............................. <aButtonList>
  [ 20] pushcons 23 ............................. <"Move">
  [ 22] pusharglistnoret 2 ...................... <aButtonList, "Move">
  [ 24] objcall 140 ............................. aButtonList.add("Move")
  [ 26] getlocal 1 .............................. <aButtonList>
  [ 28] pushcons 25 ............................. <"Pick up">
  [ 30] pusharglistnoret 2 ...................... <aButtonList, "Pick up">
  [ 32] objcall 140 ............................. aButtonList.add("Pick up")
  [ 34] getparam 0 .............................. <me>
  [ 36] getchainedprop 58 ....................... <me.oItem>
  [ 38] pusharglist 1 ........................... <me.oItem>
  [ 40] objcall 164 ............................. <me.oItem.canDelete()>
  [ 42] jmpifz [ 53] ............................ if me.oItem.canDelete() then
  [ 45] getlocal 1 .............................. <aButtonList>
  [ 47] pushcons 26 ............................. <"Delete">
  [ 49] pusharglistnoret 2 ...................... <aButtonList, "Delete">
  [ 51] objcall 140 ............................. aButtonList.add("Delete")
  [ 53] getlocal 1 .............................. <aButtonList>
  [ 55] pusharglistnoret 1 ...................... <aButtonList>
  [ 57] extcall 52 .............................. return aButtonList
  [ 59] ret
end

on displayButtons me, aButtons
  [  0] pushcons 35 ............................. <"displaying buttons:">
  [  2] getparam 1 .............................. <aButtons>
  [  4] joinpadstr .............................. <"displaying buttons:" && aButtons>
  [  5] pusharglistnoret 1 ...................... <"displaying buttons:" && aButtons>
  [  7] extcall 168 ............................. put "displaying buttons:" && aButtons
  [  9] getparam 0 .............................. <me>
  [ 11] getchainedprop 42 ....................... <me.oDescRect>
  [ 13] getobjprop 188 .......................... <me.oDescRect.bottom>
  [ 15] setlocal 0 .............................. iTop = me.oDescRect.bottom
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 42 ....................... <me.oDescRect>
  [ 21] getobjprop 189 .......................... <me.oDescRect.right>
  [ 23] setlocal 1 .............................. iRight = me.oDescRect.right
  [ 25] pushint8 3 .............................. <3>
  [ 27] setlocal 2 .............................. iXOffset = 3
  [ 29] getparam 1 .............................. <aButtons>
  [ 31] peek 0
  [ 33] pusharglist 1
  [ 35] extcall 155
  [ 37] pushint8 1
  [ 39] peek 0
  [ 41] peek 2
  [ 43] lteq
  [ 44] jmpifz [123] ............................ repeat with sButton in aButtons
  [ 47] peek 2
  [ 49] peek 1
  [ 51] pusharglist 2
  [ 53] extcall 72
  [ 55] setlocal 3
  [ 57] getparam 0 .............................. <me>
  [ 59] getlocal 3 .............................. <sButton>
  [ 61] pusharglist 2 ........................... <me, sButton>
  [ 63] objcall 17 .............................. <me.createButtonSprite(sButton)>
  [ 65] setlocal 4 .............................. iSprite = me.createButtonSprite(sButton)
  [ 67] pushcons 36 ............................. <"button sprite : ">
  [ 69] getlocal 4 .............................. <iSprite>
  [ 71] joinstr ................................. <"button sprite : " & iSprite>
  [ 72] pusharglistnoret 1 ...................... <"button sprite : " & iSprite>
  [ 74] extcall 168 ............................. put "button sprite : " & iSprite
  [ 76] getlocal 4 .............................. <iSprite>
  [ 78] pusharglist 1 ........................... <iSprite>
  [ 80] extcall 119 ............................. <sprite(iSprite)>
  [ 82] getlocal 0 .............................. <iTop>
  [ 84] setobjprop 122 .......................... sprite(iSprite).locV = iTop
  [ 86] getlocal 4 .............................. <iSprite>
  [ 88] pusharglist 1 ........................... <iSprite>
  [ 90] extcall 119 ............................. <sprite(iSprite)>
  [ 92] getlocal 1 .............................. <iRight>
  [ 94] getlocal 4 .............................. <iSprite>
  [ 96] pusharglist 1 ........................... <iSprite>
  [ 98] extcall 119 ............................. <sprite(iSprite)>
  [100] getobjprop 141 .......................... <sprite(iSprite).width>
  [102] sub ..................................... <iRight - sprite(iSprite).width>
  [103] getlocal 2 .............................. <iXOffset>
  [105] sub ..................................... <iRight - sprite(iSprite).width - iXOffset>
  [106] setobjprop 143 .......................... sprite(iSprite).locH = iRight - sprite(iSprite).width - iXOffset
  [108] getlocal 4 .............................. <iSprite>
  [110] pusharglist 1 ........................... <iSprite>
  [112] extcall 119 ............................. <sprite(iSprite)>
  [114] getobjprop 143 .......................... <sprite(iSprite).locH>
  [116] setlocal 1 .............................. iRight = sprite(iSprite).locH
  [118] pushint8 1
  [120] add
  [121] endrepeat [ 39]
  [123] pop 3
  [125] ret
end

on createButtonSprite me, sID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sID>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 49 ........................... <me.sActive>
  [  8] pusharglist 3 ........................... <me, sID, me.sActive>
  [ 10] objcall 19 .............................. <me.createButtonMember(sID, me.sActive)>
  [ 12] setlocal 0 .............................. oActiveMember = me.createButtonMember(sID, me.sActive)
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 1 .............................. <sID>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 50 ........................... <me.sPressed>
  [ 22] pusharglist 3 ........................... <me, sID, me.sPressed>
  [ 24] objcall 19 .............................. <me.createButtonMember(sID, me.sPressed)>
  [ 26] setlocal 1 .............................. oPressedMember = me.createButtonMember(sID, me.sPressed)
  [ 28] pushsymb 30 ............................. <#member>
  [ 30] getlocal 0 .............................. <oActiveMember>
  [ 32] getobjprop 99 ........................... <oActiveMember.name>
  [ 34] pushsymb 35 ............................. <#x>
  [ 36] pushzero ................................ <0>
  [ 37] pushsymb 36 ............................. <#y>
  [ 39] pushzero ................................ <0>
  [ 40] pushsymb 37 ............................. <#ink>
  [ 42] pushint8 8 .............................. <8>
  [ 44] pusharglist 8 ........................... <[#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]>
  [ 46] pushproplist ............................ <[#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]>
  [ 47] setlocal 2 .............................. aSpriteProps = [#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]
  [ 49] getglobal 133 ........................... <oIsoScene>
  [ 51] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 53] getlocal 2 .............................. <aSpriteProps>
  [ 55] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aSpriteProps>
  [ 57] objcall 135 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aSpriteProps)>
  [ 59] setlocal 3 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aSpriteProps)
  [ 61] getlocal 3 .............................. <iSprite>
  [ 63] pusharglist 1 ........................... <iSprite>
  [ 65] extcall 119 ............................. <sprite(iSprite)>
  [ 67] getglobal 133 ........................... <oIsoScene>
  [ 69] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 71] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 73] objcall 137 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 75] setobjprop 138 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 77] getlocal 3 .............................. <iSprite>
  [ 79] pusharglist 1 ........................... <iSprite>
  [ 81] extcall 119 ............................. <sprite(iSprite)>
  [ 83] getchainedprop 193 ...................... <sprite(iSprite).scriptInstanceList>
  [ 85] pushcons 37 ............................. <"InfoStandSpriteScript">
  [ 87] pusharglist 1 ........................... <"InfoStandSpriteScript">
  [ 89] extcall 194 ............................. <script("InfoStandSpriteScript")>
  [ 91] getparam 1 .............................. <sID>
  [ 93] getparam 0 .............................. <me>
  [ 95] getlocal 0 .............................. <oActiveMember>
  [ 97] getlocal 1 .............................. <oPressedMember>
  [ 99] pusharglist 5 ........................... <script("InfoStandSpriteScript"), sID, me, oActiveMember, oPressedMember>
  [101] objcall 0 ............................... <script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [103] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [105] objcall 140 ............................. sprite(iSprite).scriptInstanceList.add(script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember))
  [107] getparam 0 .............................. <me>
  [109] getchainedprop 139 ...................... <me.aSprites>
  [111] getlocal 3 .............................. <iSprite>
  [113] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [115] objcall 140 ............................. me.aSprites.add(iSprite)
  [117] getlocal 3 .............................. <iSprite>
  [119] pusharglistnoret 1 ...................... <iSprite>
  [121] extcall 52 .............................. return iSprite
  [123] ret
end

on createTextMember me, sText
  [  0] pushcons 38 ............................. <"_DYNAMIC_">
  [  2] getparam 1 .............................. <sText>
  [  4] joinstr ................................. <"_DYNAMIC_" & sText>
  [  5] setlocal 0 .............................. sDynamicTextName = "_DYNAMIC_" & sText
  [  7] getlocal 0 .............................. <sDynamicTextName>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 48 ........................... <me.sCastLib>
  [ 13] pusharglist 2 ........................... <sDynamicTextName, me.sCastLib>
  [ 15] extcall 30 .............................. <member(sDynamicTextName, me.sCastLib)>
  [ 17] setlocal 1 .............................. oTextMember = member(sDynamicTextName, me.sCastLib)
  [ 19] getlocal 1 .............................. <oTextMember>
  [ 21] getobjprop 73 ........................... <oTextMember.memberNum>
  [ 23] pushint8 1 .............................. <1>
  [ 25] inv ..................................... <-1>
  [ 26] nteq .................................... <oTextMember.memberNum <> -1>
  [ 27] getparam 0 .............................. <me>
  [ 29] getobjprop 51 ........................... <me.bOverwriteImages>
  [ 31] and ..................................... <(oTextMember.memberNum <> -1) and me.bOverwriteImages>
  [ 32] jmpifz [ 41] ............................ if (oTextMember.memberNum <> -1) and me.bOverwriteImages then
  [ 35] getlocal 1 .............................. <oTextMember>
  [ 37] pusharglistnoret 1 ...................... <oTextMember>
  [ 39] objcall 156 ............................. oTextMember.erase()
  [ 41] getlocal 0 .............................. <sDynamicTextName>
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 48 ........................... <me.sCastLib>
  [ 47] pusharglist 2 ........................... <sDynamicTextName, me.sCastLib>
  [ 49] extcall 30 .............................. <member(sDynamicTextName, me.sCastLib)>
  [ 51] setlocal 1 .............................. oTextMember = member(sDynamicTextName, me.sCastLib)
  [ 53] getlocal 1 .............................. <oTextMember>
  [ 55] getobjprop 73 ........................... <oTextMember.memberNum>
  [ 57] pushint8 1 .............................. <1>
  [ 59] inv ..................................... <-1>
  [ 60] eq ...................................... <oTextMember.memberNum = -1>
  [ 61] jmpifz [139] ............................ if oTextMember.memberNum = -1 then
  [ 64] pushsymb 152 ............................ <#text>
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 48 ........................... <me.sCastLib>
  [ 70] pusharglist 1 ........................... <me.sCastLib>
  [ 72] extcall 199 ............................. <castLib(me.sCastLib)>
  [ 74] pusharglist 2 ........................... <#text, castLib(me.sCastLib)>
  [ 76] extcall 0 ............................... <new(#text, castLib(me.sCastLib))>
  [ 78] setlocal 1 .............................. oTextMember = new(#text, castLib(me.sCastLib))
  [ 80] getlocal 1 .............................. <oTextMember>
  [ 82] getlocal 0 .............................. <sDynamicTextName>
  [ 84] setobjprop 99 ........................... oTextMember.name = sDynamicTextName
  [ 86] getlocal 1 .............................. <oTextMember>
  [ 88] getparam 1 .............................. <sText>
  [ 90] setobjprop 152 .......................... oTextMember.text = sText
  [ 92] getlocal 1 .............................. <oTextMember>
  [ 94] pushsymb 200 ............................ <#fixed>
  [ 96] setobjprop 201 .......................... oTextMember.boxType = #fixed
  [ 98] getlocal 1 .............................. <oTextMember>
  [100] pushcons 39 ............................. <"#EEDBC6">
  [102] pusharglist 1 ........................... <"#EEDBC6">
  [104] extcall 120 ............................. <rgb("#EEDBC6")>
  [106] setobjprop 202 .......................... oTextMember.color = rgb("#EEDBC6")
  [108] getlocal 1 .............................. <oTextMember>
  [110] pushint8 10 ............................. <10>
  [112] setobjprop 33 ........................... oTextMember.fontSize = 10
  [114] getlocal 1 .............................. <oTextMember>
  [116] pushsymb 203 ............................ <#bold>
  [118] pusharglist 1 ........................... <[#bold]>
  [120] pushlist ................................ <[#bold]>
  [121] setobjprop 34 ........................... oTextMember.fontStyle = [#bold]
  [123] getlocal 1 .............................. <oTextMember>
  [125] pushcons 40 ............................. <"verdana">
  [127] setobjprop 204 .......................... oTextMember.font = "verdana"
  [129] getparam 0 .............................. <me>
  [131] getchainedprop 47 ....................... <me.aDynamicMembers>
  [133] getlocal 0 .............................. <sDynamicTextName>
  [135] pusharglistnoret 2 ...................... <me.aDynamicMembers, sDynamicTextName>
  [137] objcall 140 ............................. me.aDynamicMembers.add(sDynamicTextName)
  [139] getlocal 1 .............................. <oTextMember>
  [141] pusharglistnoret 1 ...................... <oTextMember>
  [143] extcall 52 .............................. return oTextMember
  [145] ret
end

on createButtonMember me, sText, sState
  [  0] pushcons 38 ............................. <"_DYNAMIC_">
  [  2] getparam 1 .............................. <sText>
  [  4] joinstr ................................. <"_DYNAMIC_" & sText>
  [  5] pushcons 41 ............................. <"_">
  [  7] joinstr ................................. <"_DYNAMIC_" & sText & "_">
  [  8] getparam 2 .............................. <sState>
  [ 10] joinstr ................................. <"_DYNAMIC_" & sText & "_" & sState>
  [ 11] setlocal 0 .............................. sDynamicButtonName = "_DYNAMIC_" & sText & "_" & sState
  [ 13] getlocal 0 .............................. <sDynamicButtonName>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 48 ........................... <me.sCastLib>
  [ 19] pusharglist 2 ........................... <sDynamicButtonName, me.sCastLib>
  [ 21] extcall 30 .............................. <member(sDynamicButtonName, me.sCastLib)>
  [ 23] setlocal 1 .............................. oButtonMember = member(sDynamicButtonName, me.sCastLib)
  [ 25] getlocal 1 .............................. <oButtonMember>
  [ 27] getobjprop 73 ........................... <oButtonMember.memberNum>
  [ 29] pushint8 1 .............................. <1>
  [ 31] inv ..................................... <-1>
  [ 32] nteq .................................... <oButtonMember.memberNum <> -1>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 51 ........................... <me.bOverwriteImages>
  [ 37] and ..................................... <(oButtonMember.memberNum <> -1) and me.bOverwriteImages>
  [ 38] jmpifz [ 47] ............................ if (oButtonMember.memberNum <> -1) and me.bOverwriteImages then
  [ 41] getlocal 1 .............................. <oButtonMember>
  [ 43] pusharglistnoret 1 ...................... <oButtonMember>
  [ 45] objcall 156 ............................. oButtonMember.erase()
  [ 47] getlocal 0 .............................. <sDynamicButtonName>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 48 ........................... <me.sCastLib>
  [ 53] pusharglist 2 ........................... <sDynamicButtonName, me.sCastLib>
  [ 55] extcall 30 .............................. <member(sDynamicButtonName, me.sCastLib)>
  [ 57] setlocal 1 .............................. oButtonMember = member(sDynamicButtonName, me.sCastLib)
  [ 59] getlocal 1 .............................. <oButtonMember>
  [ 61] getobjprop 73 ........................... <oButtonMember.memberNum>
  [ 63] pushint8 1 .............................. <1>
  [ 65] inv ..................................... <-1>
  [ 66] eq ...................................... <oButtonMember.memberNum = -1>
  [ 67] jmpifz [456] ............................ if oButtonMember.memberNum = -1 then
  [ 70] pushsymb 207 ............................ <#bitmap>
  [ 72] getparam 0 .............................. <me>
  [ 74] getobjprop 48 ........................... <me.sCastLib>
  [ 76] pusharglist 1 ........................... <me.sCastLib>
  [ 78] extcall 199 ............................. <castLib(me.sCastLib)>
  [ 80] pusharglist 2 ........................... <#bitmap, castLib(me.sCastLib)>
  [ 82] extcall 0 ............................... <new(#bitmap, castLib(me.sCastLib))>
  [ 84] setlocal 1 .............................. oButtonMember = new(#bitmap, castLib(me.sCastLib))
  [ 86] getlocal 1 .............................. <oButtonMember>
  [ 88] getlocal 0 .............................. <sDynamicButtonName>
  [ 90] setobjprop 99 ........................... oButtonMember.name = sDynamicButtonName
  [ 92] pushcons 42 ............................. <"button.">
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 46 ........................... <me.sButtonBase>
  [ 98] joinstr ................................. <"button." & me.sButtonBase>
  [ 99] pushcons 43 ............................. <".left.">
  [101] joinstr ................................. <"button." & me.sButtonBase & ".left.">
  [102] getparam 2 .............................. <sState>
  [104] joinstr ................................. <"button." & me.sButtonBase & ".left." & sState>
  [105] setlocal 2 .............................. sLeftMember = "button." & me.sButtonBase & ".left." & sState
  [107] pushcons 42 ............................. <"button.">
  [109] getparam 0 .............................. <me>
  [111] getobjprop 46 ........................... <me.sButtonBase>
  [113] joinstr ................................. <"button." & me.sButtonBase>
  [114] pushcons 44 ............................. <".middle.">
  [116] joinstr ................................. <"button." & me.sButtonBase & ".middle.">
  [117] getparam 2 .............................. <sState>
  [119] joinstr ................................. <"button." & me.sButtonBase & ".middle." & sState>
  [120] setlocal 3 .............................. sMiddleMember = "button." & me.sButtonBase & ".middle." & sState
  [122] pushcons 42 ............................. <"button.">
  [124] getparam 0 .............................. <me>
  [126] getobjprop 46 ........................... <me.sButtonBase>
  [128] joinstr ................................. <"button." & me.sButtonBase>
  [129] pushcons 45 ............................. <".right.">
  [131] joinstr ................................. <"button." & me.sButtonBase & ".right.">
  [132] getparam 2 .............................. <sState>
  [134] joinstr ................................. <"button." & me.sButtonBase & ".right." & sState>
  [135] setlocal 4 .............................. sRightMember = "button." & me.sButtonBase & ".right." & sState
  [137] getlocal 2 .............................. <sLeftMember>
  [139] pusharglist 1 ........................... <sLeftMember>
  [141] extcall 30 .............................. <member(sLeftMember)>
  [143] setlocal 5 .............................. oLeftMember = member(sLeftMember)
  [145] getlocal 3 .............................. <sMiddleMember>
  [147] pusharglist 1 ........................... <sMiddleMember>
  [149] extcall 30 .............................. <member(sMiddleMember)>
  [151] setlocal 6 .............................. oMiddleMember = member(sMiddleMember)
  [153] getlocal 4 .............................. <sRightMember>
  [155] pusharglist 1 ........................... <sRightMember>
  [157] extcall 30 .............................. <member(sRightMember)>
  [159] setlocal 7 .............................. oRightMember = member(sRightMember)
  [161] getlocal 5 .............................. <oLeftMember>
  [163] getobjprop 117 .......................... <oLeftMember.image>
  [165] setlocal 8 .............................. imLeft = oLeftMember.image
  [167] getlocal 6 .............................. <oMiddleMember>
  [169] getobjprop 117 .......................... <oMiddleMember.image>
  [171] setlocal 9 .............................. imMiddle = oMiddleMember.image
  [173] getlocal 7 .............................. <oRightMember>
  [175] getobjprop 117 .......................... <oRightMember.image>
  [177] setlocal 10 ............................. imRight = oRightMember.image
  [179] getparam 0 .............................. <me>
  [181] getparam 1 .............................. <sText>
  [183] pusharglist 2 ........................... <me, sText>
  [185] objcall 18 .............................. <me.createTextMember(sText)>
  [187] setlocal 11 ............................. oTextMember = me.createTextMember(sText)
  [189] getlocal 11 ............................. <oTextMember>
  [191] getobjprop 117 .......................... <oTextMember.image>
  [193] setlocal 12 ............................. imText = oTextMember.image
  [195] getlocal 11 ............................. <oTextMember>
  [197] getlocal 11 ............................. <oTextMember>
  [199] getchainedprop 152 ...................... <oTextMember.text>
  [201] getobjprop 208 .......................... <oTextMember.text.length>
  [203] pushint8 1 .............................. <1>
  [205] add ..................................... <oTextMember.text.length + 1>
  [206] pusharglist 2 ........................... <oTextMember, oTextMember.text.length + 1>
  [208] objcall 209 ............................. <oTextMember.charPosToLoc(oTextMember.text.length + 1)>
  [210] setlocal 13 ............................. oLoc = oTextMember.charPosToLoc(oTextMember.text.length + 1)
  [212] getlocal 13 ............................. <oLoc>
  [214] getobjprop 143 .......................... <oLoc.locH>
  [216] setlocal 14 ............................. iTextWidth = oLoc.locH
  [218] getlocal 13 ............................. <oLoc>
  [220] getobjprop 122 .......................... <oLoc.locV>
  [222] setlocal 15 ............................. iTextHeight = oLoc.locV
  [224] getlocal 8 .............................. <imLeft>
  [226] getobjprop 141 .......................... <imLeft.width>
  [228] getlocal 14 ............................. <iTextWidth>
  [230] add ..................................... <imLeft.width + iTextWidth>
  [231] getlocal 10 ............................. <imRight>
  [233] getobjprop 141 .......................... <imRight.width>
  [235] add ..................................... <imLeft.width + iTextWidth + imRight.width>
  [236] setlocal 16 ............................. iTotalWidth = imLeft.width + iTextWidth + imRight.width
  [238] getlocal 9 .............................. <imMiddle>
  [240] getobjprop 142 .......................... <imMiddle.height>
  [242] setlocal 17 ............................. iTotalHeight = imMiddle.height
  [244] getlocal 16 ............................. <iTotalWidth>
  [246] getlocal 17 ............................. <iTotalHeight>
  [248] pushint8 16 ............................. <16>
  [250] pusharglist 3 ........................... <iTotalWidth, iTotalHeight, 16>
  [252] extcall 117 ............................. <image(iTotalWidth, iTotalHeight, 16)>
  [254] setlocal 18 ............................. oButtonImage = image(iTotalWidth, iTotalHeight, 16)
  [256] getlocal 8 .............................. <imLeft>
  [258] getobjprop 41 ........................... <imLeft.rect>
  [260] setlocal 19 ............................. oSourceRect = imLeft.rect
  [262] pushzero ................................ <0>
  [263] pushzero ................................ <0>
  [264] getlocal 8 .............................. <imLeft>
  [266] getobjprop 141 .......................... <imLeft.width>
  [268] getlocal 8 .............................. <imLeft>
  [270] getobjprop 142 .......................... <imLeft.height>
  [272] pusharglist 4 ........................... <0, 0, imLeft.width, imLeft.height>
  [274] extcall 41 .............................. <rect(0, 0, imLeft.width, imLeft.height)>
  [276] setlocal 20 ............................. oDestRect = rect(0, 0, imLeft.width, imLeft.height)
  [278] getlocal 18 ............................. <oButtonImage>
  [280] getlocal 8 .............................. <imLeft>
  [282] getlocal 20 ............................. <oDestRect>
  [284] getlocal 19 ............................. <oSourceRect>
  [286] pusharglistnoret 4 ...................... <oButtonImage, imLeft, oDestRect, oSourceRect>
  [288] objcall 118 ............................. oButtonImage.copyPixels(imLeft, oDestRect, oSourceRect)
  [290] getlocal 9 .............................. <imMiddle>
  [292] getobjprop 41 ........................... <imMiddle.rect>
  [294] setlocal 19 ............................. oSourceRect = imMiddle.rect
  [296] getlocal 8 .............................. <imLeft>
  [298] getobjprop 141 .......................... <imLeft.width>
  [300] pushzero ................................ <0>
  [301] getlocal 8 .............................. <imLeft>
  [303] getobjprop 141 .......................... <imLeft.width>
  [305] getlocal 14 ............................. <iTextWidth>
  [307] add ..................................... <imLeft.width + iTextWidth>
  [308] getlocal 17 ............................. <iTotalHeight>
  [310] pusharglist 4 ........................... <imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight>
  [312] extcall 41 .............................. <rect(imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight)>
  [314] setlocal 20 ............................. oDestRect = rect(imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight)
  [316] getlocal 18 ............................. <oButtonImage>
  [318] getlocal 9 .............................. <imMiddle>
  [320] getlocal 20 ............................. <oDestRect>
  [322] getlocal 19 ............................. <oSourceRect>
  [324] pusharglistnoret 4 ...................... <oButtonImage, imMiddle, oDestRect, oSourceRect>
  [326] objcall 118 ............................. oButtonImage.copyPixels(imMiddle, oDestRect, oSourceRect)
  [328] pushint8 4 .............................. <4>
  [330] setlocal 21 ............................. iVOffset = 4
  [332] pushzero ................................ <0>
  [333] pushzero ................................ <0>
  [334] getlocal 14 ............................. <iTextWidth>
  [336] getlocal 11 ............................. <oTextMember>
  [338] getobjprop 142 .......................... <oTextMember.height>
  [340] pusharglist 4 ........................... <0, 0, iTextWidth, oTextMember.height>
  [342] extcall 41 .............................. <rect(0, 0, iTextWidth, oTextMember.height)>
  [344] setlocal 19 ............................. oSourceRect = rect(0, 0, iTextWidth, oTextMember.height)
  [346] getlocal 8 .............................. <imLeft>
  [348] getobjprop 141 .......................... <imLeft.width>
  [350] getlocal 21 ............................. <iVOffset>
  [352] getlocal 8 .............................. <imLeft>
  [354] getobjprop 141 .......................... <imLeft.width>
  [356] getlocal 14 ............................. <iTextWidth>
  [358] add ..................................... <imLeft.width + iTextWidth>
  [359] getlocal 21 ............................. <iVOffset>
  [361] getlocal 11 ............................. <oTextMember>
  [363] getobjprop 142 .......................... <oTextMember.height>
  [365] add ..................................... <iVOffset + oTextMember.height>
  [366] pusharglist 4 ........................... <imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height>
  [368] extcall 41 .............................. <rect(imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height)>
  [370] setlocal 20 ............................. oDestRect = rect(imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height)
  [372] getlocal 18 ............................. <oButtonImage>
  [374] getlocal 12 ............................. <imText>
  [376] getlocal 20 ............................. <oDestRect>
  [378] getlocal 19 ............................. <oSourceRect>
  [380] pusharglistnoret 4 ...................... <oButtonImage, imText, oDestRect, oSourceRect>
  [382] objcall 118 ............................. oButtonImage.copyPixels(imText, oDestRect, oSourceRect)
  [384] getlocal 10 ............................. <imRight>
  [386] getobjprop 41 ........................... <imRight.rect>
  [388] setlocal 19 ............................. oSourceRect = imRight.rect
  [390] getlocal 8 .............................. <imLeft>
  [392] getobjprop 141 .......................... <imLeft.width>
  [394] getlocal 14 ............................. <iTextWidth>
  [396] add ..................................... <imLeft.width + iTextWidth>
  [397] pushzero ................................ <0>
  [398] getlocal 8 .............................. <imLeft>
  [400] getobjprop 141 .......................... <imLeft.width>
  [402] getlocal 14 ............................. <iTextWidth>
  [404] add ..................................... <imLeft.width + iTextWidth>
  [405] getlocal 10 ............................. <imRight>
  [407] getobjprop 141 .......................... <imRight.width>
  [409] add ..................................... <imLeft.width + iTextWidth + imRight.width>
  [410] getlocal 17 ............................. <iTotalHeight>
  [412] pusharglist 4 ........................... <imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight>
  [414] extcall 41 .............................. <rect(imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight)>
  [416] setlocal 20 ............................. oDestRect = rect(imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight)
  [418] getlocal 18 ............................. <oButtonImage>
  [420] getlocal 10 ............................. <imRight>
  [422] getlocal 20 ............................. <oDestRect>
  [424] getlocal 19 ............................. <oSourceRect>
  [426] pusharglistnoret 4 ...................... <oButtonImage, imRight, oDestRect, oSourceRect>
  [428] objcall 118 ............................. oButtonImage.copyPixels(imRight, oDestRect, oSourceRect)
  [430] getlocal 1 .............................. <oButtonMember>
  [432] getlocal 18 ............................. <oButtonImage>
  [434] setobjprop 117 .......................... oButtonMember.image = oButtonImage
  [436] getlocal 1 .............................. <oButtonMember>
  [438] pushzero ................................ <0>
  [439] pushzero ................................ <0>
  [440] pusharglist 2 ........................... <0, 0>
  [442] extcall 39 .............................. <point(0, 0)>
  [444] setobjprop 210 .......................... oButtonMember.regPoint = point(0, 0)
  [446] getparam 0 .............................. <me>
  [448] getchainedprop 47 ....................... <me.aDynamicMembers>
  [450] getlocal 0 .............................. <sDynamicButtonName>
  [452] pusharglistnoret 2 ...................... <me.aDynamicMembers, sDynamicButtonName>
  [454] objcall 140 ............................. me.aDynamicMembers.add(sDynamicButtonName)
  [456] getlocal 1 .............................. <oButtonMember>
  [458] pusharglistnoret 1 ...................... <oButtonMember>
  [460] extcall 52 .............................. return oButtonMember
  [462] ret
end

on mouseUpEvent me, sID
  [  0] getparam 1 .............................. <sID>
  [  2] peek 0 .................................. case sID of
  [  4] pushcons 30 ............................. <"Dance">
  [  6] eq
  [  7] jmpifz [117] ............................ (case) "Dance":
  [ 10] getglobal 233 ........................... <gFeatureSet>
  [ 12] pushsymb 234 ............................ <#DANCING>
  [ 14] pusharglist 2 ........................... <gFeatureSet, #DANCING>
  [ 16] objcall 235 ............................. <gFeatureSet.isEnabled(#DANCING)>
  [ 18] not ..................................... <not gFeatureSet.isEnabled(#DANCING)>
  [ 19] jmpifz [ 36] ............................ if not gFeatureSet.isEnabled(#DANCING) then
  [ 22] getglobal 172 ........................... <ElementMgr>
  [ 24] pushcons 46 ............................. <"FEATURE_DISABLED">
  [ 26] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 28] objcall 236 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 30] pop 1
  [ 32] pusharglistnoret 0 ...................... <>
  [ 34] extcall 52 .............................. return 
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 1 ........................... <me>
  [ 40] objcall 25 .............................. <me.isAvatar()>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 28 .............................. <me.isMe()>
  [ 48] and ..................................... <me.isAvatar() and me.isMe()>
  [ 49] getparam 0 .............................. <me>
  [ 51] getchainedprop 58 ....................... <me.oItem>
  [ 53] pusharglist 1 ........................... <me.oItem>
  [ 55] objcall 170 ............................. <me.oItem.isDancing()>
  [ 57] not ..................................... <not me.oItem.isDancing()>
  [ 58] and ..................................... <me.isAvatar() and me.isMe() and not me.oItem.isDancing()>
  [ 59] jmpifz [114] ............................ if me.isAvatar() and me.isMe() and not me.oItem.isDancing() then
  [ 62] getparam 0 .............................. <me>
  [ 64] getchainedprop 58 ....................... <me.oItem>
  [ 66] pusharglistnoret 1 ...................... <me.oItem>
  [ 68] objcall 237 ............................. me.oItem.dance()
  [ 70] getglobal 64 ............................ <oStudio>
  [ 72] pusharglist 1 ........................... <oStudio>
  [ 74] extcall 59 .............................. <voidp(oStudio)>
  [ 76] not ..................................... <not voidp(oStudio)>
  [ 77] jmpifz [104] ............................ if not voidp(oStudio) then
  [ 80] getglobal 64 ............................ <oStudio>
  [ 82] pusharglist 0 ........................... <>
  [ 84] extcall 238 ............................. <VOID>
  [ 86] pusharglist 0 ........................... <>
  [ 88] extcall 238 ............................. <VOID>
  [ 90] pusharglist 0 ........................... <>
  [ 92] extcall 238 ............................. <VOID>
  [ 94] pusharglist 0 ........................... <>
  [ 96] extcall 238 ............................. <VOID>
  [ 98] pushcons 47 ............................. <"dnc">
  [100] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, VOID, "dnc">
  [102] objcall 239 ............................. oStudio.sendUpdateAvatar(VOID, VOID, VOID, VOID, "dnc")
  [104] getparam 0 .............................. <me>
  [106] getglobal 133 ........................... <oIsoScene>
  [108] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [110] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [112] objcall 3 ............................... me.display(oIsoScene.oSelectedItem)
  [114] jmp [1533]
  [117] peek 0
  [119] pushcons 29 ............................. <"Stop Dancing">
  [121] eq
  [122] jmpifz [205] ............................ (case) "Stop Dancing":
  [125] getparam 0 .............................. <me>
  [127] pusharglist 1 ........................... <me>
  [129] objcall 25 .............................. <me.isAvatar()>
  [131] getparam 0 .............................. <me>
  [133] pusharglist 1 ........................... <me>
  [135] objcall 28 .............................. <me.isMe()>
  [137] and ..................................... <me.isAvatar() and me.isMe()>
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 58 ....................... <me.oItem>
  [142] pusharglist 1 ........................... <me.oItem>
  [144] objcall 170 ............................. <me.oItem.isDancing()>
  [146] and ..................................... <me.isAvatar() and me.isMe() and me.oItem.isDancing()>
  [147] jmpifz [202] ............................ if me.isAvatar() and me.isMe() and me.oItem.isDancing() then
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 58 ....................... <me.oItem>
  [154] pusharglistnoret 1 ...................... <me.oItem>
  [156] objcall 241 ............................. me.oItem.stopDancing()
  [158] getglobal 64 ............................ <oStudio>
  [160] pusharglist 1 ........................... <oStudio>
  [162] extcall 59 .............................. <voidp(oStudio)>
  [164] not ..................................... <not voidp(oStudio)>
  [165] jmpifz [192] ............................ if not voidp(oStudio) then
  [168] getglobal 64 ............................ <oStudio>
  [170] pusharglist 0 ........................... <>
  [172] extcall 238 ............................. <VOID>
  [174] pusharglist 0 ........................... <>
  [176] extcall 238 ............................. <VOID>
  [178] pusharglist 0 ........................... <>
  [180] extcall 238 ............................. <VOID>
  [182] pusharglist 0 ........................... <>
  [184] extcall 238 ............................. <VOID>
  [186] pushcons 48 ............................. <"std">
  [188] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, VOID, "std">
  [190] objcall 239 ............................. oStudio.sendUpdateAvatar(VOID, VOID, VOID, VOID, "std")
  [192] getparam 0 .............................. <me>
  [194] getglobal 133 ........................... <oIsoScene>
  [196] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [198] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [200] objcall 3 ............................... me.display(oIsoScene.oSelectedItem)
  [202] jmp [1533]
  [205] peek 0
  [207] pushcons 32 ............................. <"Kick Out">
  [209] eq
  [210] jmpifz [259] ............................ (case) "Kick Out":
  [213] getparam 0 .............................. <me>
  [215] pusharglist 1 ........................... <me>
  [217] objcall 25 .............................. <me.isAvatar()>
  [219] jmpifz [256] ............................ if me.isAvatar() then
  [222] getparam 0 .............................. <me>
  [224] pusharglist 1 ........................... <me>
  [226] objcall 22 .............................. <me.isOwner()>
  [228] getparam 0 .............................. <me>
  [230] pusharglist 1 ........................... <me>
  [232] objcall 23 .............................. <me.isMod()>
  [234] or ...................................... <me.isOwner() or me.isMod()>
  [235] jmpifz [256] ............................ if me.isOwner() or me.isMod() then
  [238] getparam 0 .............................. <me>
  [240] getchainedprop 58 ....................... <me.oItem>
  [242] pusharglist 1 ........................... <me.oItem>
  [244] objcall 78 .............................. <me.oItem.getScreenName()>
  [246] setlocal 0 .............................. sScreenName = me.oItem.getScreenName()
  [248] getglobal 64 ............................ <oStudio>
  [250] getlocal 0 .............................. <sScreenName>
  [252] pusharglistnoret 2 ...................... <oStudio, sScreenName>
  [254] objcall 242 ............................. oStudio.sendKickAvatar(sScreenName)
  [256] jmp [1533]
  [259] peek 0
  [261] pushcons 33 ............................. <"Trade">
  [263] eq
  [264] jmpifz [333] ............................ (case) "Trade":
  [267] getglobal 233 ........................... <gFeatureSet>
  [269] pushsymb 243 ............................ <#TRADING>
  [271] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [273] objcall 235 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [275] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [276] jmpifz [293] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [279] getglobal 172 ........................... <ElementMgr>
  [281] pushcons 46 ............................. <"FEATURE_DISABLED">
  [283] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [285] objcall 236 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [287] pop 1
  [289] pusharglistnoret 0 ...................... <>
  [291] extcall 52 .............................. return 
  [293] getparam 0 .............................. <me>
  [295] pusharglist 1 ........................... <me>
  [297] objcall 25 .............................. <me.isAvatar()>
  [299] jmpifz [330] ............................ if me.isAvatar() then
  [302] getparam 0 .............................. <me>
  [304] getchainedprop 58 ....................... <me.oItem>
  [306] pusharglist 1 ........................... <me.oItem>
  [308] objcall 78 .............................. <me.oItem.getScreenName()>
  [310] setlocal 1 .............................. sTradee = me.oItem.getScreenName()
  [312] getglobal 64 ............................ <oStudio>
  [314] getlocal 1 .............................. <sTradee>
  [316] pusharglistnoret 2 ...................... <oStudio, sTradee>
  [318] objcall 244 ............................. oStudio.sendStartTrade(sTradee)
  [320] getparam 0 .............................. <me>
  [322] pusharglist 0 ........................... <>
  [324] extcall 238 ............................. <VOID>
  [326] pusharglistnoret 2 ...................... <me, VOID>
  [328] objcall 3 ............................... me.display(VOID)
  [330] jmp [1533]
  [333] peek 0
  [335] pushcons 34 ............................. <"Ask to become a friend">
  [337] eq
  [338] jmpifz [517] ............................ (case) "Ask to become a friend":
  [341] getglobal 233 ........................... <gFeatureSet>
  [343] pushsymb 245 ............................ <#MESSENGER>
  [345] pusharglist 2 ........................... <gFeatureSet, #MESSENGER>
  [347] objcall 235 ............................. <gFeatureSet.isEnabled(#MESSENGER)>
  [349] not ..................................... <not gFeatureSet.isEnabled(#MESSENGER)>
  [350] jmpifz [367] ............................ if not gFeatureSet.isEnabled(#MESSENGER) then
  [353] getglobal 172 ........................... <ElementMgr>
  [355] pushcons 46 ............................. <"FEATURE_DISABLED">
  [357] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [359] objcall 236 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [361] pop 1
  [363] pusharglistnoret 0 ...................... <>
  [365] extcall 52 .............................. return 
  [367] getparam 0 .............................. <me>
  [369] pusharglist 1 ........................... <me>
  [371] objcall 25 .............................. <me.isAvatar()>
  [373] getparam 0 .............................. <me>
  [375] pusharglist 1 ........................... <me>
  [377] objcall 28 .............................. <me.isMe()>
  [379] not ..................................... <not me.isMe()>
  [380] and ..................................... <me.isAvatar() and not me.isMe()>
  [381] jmpifz [514] ............................ if me.isAvatar() and not me.isMe() then
  [384] getglobal 172 ........................... <ElementMgr>
  [386] pusharglist 1 ........................... <ElementMgr>
  [388] extcall 59 .............................. <voidp(ElementMgr)>
  [390] not ..................................... <not voidp(ElementMgr)>
  [391] jmpifz [402] ............................ if not voidp(ElementMgr) then
  [394] getglobal 172 ........................... <ElementMgr>
  [396] pushcons 49 ............................. <"MESSENGER_REQUEST_SENT">
  [398] pusharglistnoret 2 ...................... <ElementMgr, "MESSENGER_REQUEST_SENT">
  [400] objcall 236 ............................. ElementMgr.alert("MESSENGER_REQUEST_SENT")
  [402] getglobal 172 ........................... <ElementMgr>
  [404] pusharglist 1 ........................... <ElementMgr>
  [406] objcall 173 ............................. <ElementMgr.getMessengerObject()>
  [408] getparam 0 .............................. <me>
  [410] getchainedprop 58 ....................... <me.oItem>
  [412] pusharglist 1 ........................... <me.oItem>
  [414] objcall 78 .............................. <me.oItem.getScreenName()>
  [416] pusharglist 2 ........................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [418] objcall 174 ............................. <ElementMgr.getMessengerObject().isFriend(me.oItem.getScreenName())>
  [420] setlocal 2 .............................. bIsFriend = ElementMgr.getMessengerObject().isFriend(me.oItem.getScreenName())
  [422] getglobal 172 ........................... <ElementMgr>
  [424] pusharglist 1 ........................... <ElementMgr>
  [426] objcall 173 ............................. <ElementMgr.getMessengerObject()>
  [428] getparam 0 .............................. <me>
  [430] getchainedprop 58 ....................... <me.oItem>
  [432] pusharglist 1 ........................... <me.oItem>
  [434] objcall 78 .............................. <me.oItem.getScreenName()>
  [436] pusharglist 2 ........................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [438] objcall 175 ............................. <ElementMgr.getMessengerObject().haveInvited(me.oItem.getScreenName())>
  [440] setlocal 3 .............................. bHaveInvited = ElementMgr.getMessengerObject().haveInvited(me.oItem.getScreenName())
  [442] getlocal 2 .............................. <bIsFriend>
  [444] getlocal 3 .............................. <bHaveInvited>
  [446] or ...................................... <bIsFriend or bHaveInvited>
  [447] jmpifz [466] ............................ if bIsFriend or bHaveInvited then
  [450] getparam 0 .............................. <me>
  [452] pusharglist 0 ........................... <>
  [454] extcall 238 ............................. <VOID>
  [456] pusharglistnoret 2 ...................... <me, VOID>
  [458] objcall 3 ............................... me.display(VOID)
  [460] pop 1
  [462] pusharglistnoret 0 ...................... <>
  [464] extcall 52 .............................. return 
  [466] getglobal 77 ............................ <oDenizenManager>
  [468] getglobal 77 ............................ <oDenizenManager>
  [470] pusharglist 1 ........................... <oDenizenManager>
  [472] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [474] getparam 0 .............................. <me>
  [476] getchainedprop 58 ....................... <me.oItem>
  [478] pusharglist 1 ........................... <me.oItem>
  [480] objcall 78 .............................. <me.oItem.getScreenName()>
  [482] pusharglistnoret 3 ...................... <oDenizenManager, oDenizenManager.getScreenName(), me.oItem.getScreenName()>
  [484] objcall 246 ............................. oDenizenManager.inviteFriend(oDenizenManager.getScreenName(), me.oItem.getScreenName())
  [486] getglobal 172 ........................... <ElementMgr>
  [488] pusharglist 1 ........................... <ElementMgr>
  [490] objcall 173 ............................. <ElementMgr.getMessengerObject()>
  [492] getparam 0 .............................. <me>
  [494] getchainedprop 58 ....................... <me.oItem>
  [496] pusharglist 1 ........................... <me.oItem>
  [498] objcall 78 .............................. <me.oItem.getScreenName()>
  [500] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [502] objcall 247 ............................. ElementMgr.getMessengerObject().addMyInvite(me.oItem.getScreenName())
  [504] getparam 0 .............................. <me>
  [506] pusharglist 0 ........................... <>
  [508] extcall 238 ............................. <VOID>
  [510] pusharglistnoret 2 ...................... <me, VOID>
  [512] objcall 3 ............................... me.display(VOID)
  [514] jmp [1533]
  [517] peek 0
  [519] pushcons 26 ............................. <"Delete">
  [521] eq
  [522] jmpifz [598] ............................ (case) "Delete":
  [525] getglobal 233 ........................... <gFeatureSet>
  [527] pushsymb 248 ............................ <#FURNITURE_DELETE>
  [529] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_DELETE>
  [531] objcall 235 ............................. <gFeatureSet.isEnabled(#FURNITURE_DELETE)>
  [533] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_DELETE)>
  [534] jmpifz [551] ............................ if not gFeatureSet.isEnabled(#FURNITURE_DELETE) then
  [537] getglobal 172 ........................... <ElementMgr>
  [539] pushcons 46 ............................. <"FEATURE_DISABLED">
  [541] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [543] objcall 236 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [545] pop 1
  [547] pusharglistnoret 0 ...................... <>
  [549] extcall 52 .............................. return 
  [551] getparam 0 .............................. <me>
  [553] pusharglist 1 ........................... <me>
  [555] objcall 26 .............................. <me.isFurniItem()>
  [557] getparam 0 .............................. <me>
  [559] pusharglist 1 ........................... <me>
  [561] objcall 27 .............................. <me.isWallItem()>
  [563] or ...................................... <me.isFurniItem() or me.isWallItem()>
  [564] jmpifz [595] ............................ if me.isFurniItem() or me.isWallItem() then
  [567] getparam 0 .............................. <me>
  [569] getchainedprop 58 ....................... <me.oItem>
  [571] pusharglist 1 ........................... <me.oItem>
  [573] objcall 249 ............................. <me.oItem.getPosId()>
  [575] setlocal 4 .............................. iPosId = me.oItem.getPosId()
  [577] getglobal 172 ........................... <ElementMgr>
  [579] pusharglist 1 ........................... <ElementMgr>
  [581] extcall 59 .............................. <voidp(ElementMgr)>
  [583] not ..................................... <not voidp(ElementMgr)>
  [584] jmpifz [595] ............................ if not voidp(ElementMgr) then
  [587] getglobal 172 ........................... <ElementMgr>
  [589] getlocal 4 .............................. <iPosId>
  [591] pusharglistnoret 2 ...................... <ElementMgr, iPosId>
  [593] objcall 250 ............................. ElementMgr.displayDeleteConfirm(iPosId)
  [595] jmp [1533]
  [598] peek 0
  [600] pushcons 25 ............................. <"Pick up">
  [602] eq
  [603] jmpifz [1071] ........................... (case) "Pick up":
  [606] getglobal 233 ........................... <gFeatureSet>
  [608] pushsymb 251 ............................ <#FURNITURE_PICKUP>
  [610] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_PICKUP>
  [612] objcall 235 ............................. <gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [614] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [615] jmpifz [632] ............................ if not gFeatureSet.isEnabled(#FURNITURE_PICKUP) then
  [618] getglobal 172 ........................... <ElementMgr>
  [620] pushcons 46 ............................. <"FEATURE_DISABLED">
  [622] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [624] objcall 236 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [626] pop 1
  [628] pusharglistnoret 0 ...................... <>
  [630] extcall 52 .............................. return 
  [632] getparam 0 .............................. <me>
  [634] pusharglist 1 ........................... <me>
  [636] objcall 26 .............................. <me.isFurniItem()>
  [638] jmpifz [1068] ........................... if me.isFurniItem() then
  [641] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [643] jmpifz [672] ............................ if the debugPlaybackEnabled then
  [646] pushcons 50 ............................. <"me.oItem:">
  [648] getparam 0 .............................. <me>
  [650] getobjprop 58 ........................... <me.oItem>
  [652] pusharglist 1 ........................... <me.oItem>
  [654] extcall 253 ............................. <ilk(me.oItem)>
  [656] joinpadstr .............................. <"me.oItem:" && ilk(me.oItem)>
  [657] getparam 0 .............................. <me>
  [659] getobjprop 58 ........................... <me.oItem>
  [661] joinpadstr .............................. <"me.oItem:" && ilk(me.oItem) && me.oItem>
  [662] pusharglistnoret 1 ...................... <"me.oItem:" && ilk(me.oItem) && me.oItem>
  [664] extcall 168 ............................. put "me.oItem:" && ilk(me.oItem) && me.oItem
  [666] pushcons 51 ............................. <"section 1">
  [668] pusharglistnoret 1 ...................... <"section 1">
  [670] extcall 168 ............................. put "section 1"
  [672] getglobal 233 ........................... <gFeatureSet>
  [674] pushsymb 251 ............................ <#FURNITURE_PICKUP>
  [676] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_PICKUP>
  [678] objcall 235 ............................. <gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [680] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [681] jmpifz [690] ............................ if not gFeatureSet.isEnabled(#FURNITURE_PICKUP) then
  [684] pop 1
  [686] pusharglistnoret 0 ...................... <>
  [688] extcall 52 .............................. return 
  [690] getglobal 64 ............................ <oStudio>
  [692] pusharglist 1 ........................... <oStudio>
  [694] extcall 59 .............................. <voidp(oStudio)>
  [696] jmpifz [710] ............................ if voidp(oStudio) then / else
  [699] pushint8 1 .............................. <1>
  [701] setlocal 5 .............................. bIsOwner = 1
  [703] pushint8 1 .............................. <1>
  [705] setlocal 6 .............................. bIsMod = 1
  [707] jmp [732]
  [710] getglobal 64 ............................ <oStudio>
  [712] getglobal 77 ............................ <oDenizenManager>
  [714] pusharglist 1 ........................... <oDenizenManager>
  [716] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [718] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [720] objcall 22 .............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [722] setlocal 5 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [724] getglobal 77 ............................ <oDenizenManager>
  [726] pusharglist 1 ........................... <oDenizenManager>
  [728] objcall 23 .............................. <oDenizenManager.isMod()>
  [730] setlocal 6 .............................. bIsMod = oDenizenManager.isMod()
  [732] getlocal 5 .............................. <bIsOwner>
  [734] getlocal 6 .............................. <bIsMod>
  [736] or ...................................... <bIsOwner or bIsMod>
  [737] jmpifz [898] ............................ if bIsOwner or bIsMod then / else
  [740] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [742] jmpifz [790] ............................ if the debugPlaybackEnabled then
  [745] pushcons 52 ............................. <"section 2">
  [747] pusharglistnoret 1 ...................... <"section 2">
  [749] extcall 168 ............................. put "section 2"
  [751] pushcons 53 ............................. <"oIsoScene.oSelectedItem:">
  [753] getglobal 133 ........................... <oIsoScene>
  [755] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [757] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [759] extcall 253 ............................. <ilk(oIsoScene.oSelectedItem)>
  [761] joinpadstr .............................. <"oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem)>
  [762] getglobal 133 ........................... <oIsoScene>
  [764] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [766] joinpadstr .............................. <"oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem) && oIsoScene.oSelectedItem>
  [767] pusharglistnoret 1 ...................... <"oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem) && oIsoScene.oSelectedItem>
  [769] extcall 168 ............................. put "oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem) && oIsoScene.oSelectedItem
  [771] pushcons 54 ............................. <"oIsoScene.oSelectedItem.ancestor.equals(me.oItem):">
  [773] getglobal 133 ........................... <oIsoScene>
  [775] getchainedprop 240 ...................... <oIsoScene.oSelectedItem>
  [777] getparam 0 .............................. <me>
  [779] getobjprop 58 ........................... <me.oItem>
  [781] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me.oItem>
  [783] objcall 254 ............................. <oIsoScene.oSelectedItem.equals(me.oItem)>
  [785] joinpadstr .............................. <"oIsoScene.oSelectedItem.ancestor.equals(me.oItem):" && oIsoScene.oSelectedItem.equals(me.oItem)>
  [786] pusharglistnoret 1 ...................... <"oIsoScene.oSelectedItem.ancestor.equals(me.oItem):" && oIsoScene.oSelectedItem.equals(me.oItem)>
  [788] extcall 168 ............................. put "oIsoScene.oSelectedItem.ancestor.equals(me.oItem):" && oIsoScene.oSelectedItem.equals(me.oItem)
  [790] getglobal 133 ........................... <oIsoScene>
  [792] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [794] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [796] extcall 59 .............................. <voidp(oIsoScene.oSelectedItem)>
  [798] not ..................................... <not voidp(oIsoScene.oSelectedItem)>
  [799] jmpifz [895] ............................ if not voidp(oIsoScene.oSelectedItem) then
  [802] getglobal 133 ........................... <oIsoScene>
  [804] getchainedprop 240 ...................... <oIsoScene.oSelectedItem>
  [806] getparam 0 .............................. <me>
  [808] getobjprop 58 ........................... <me.oItem>
  [810] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me.oItem>
  [812] objcall 254 ............................. <oIsoScene.oSelectedItem.equals(me.oItem)>
  [814] jmpifz [895] ............................ if oIsoScene.oSelectedItem.equals(me.oItem) then
  [817] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [819] jmpifz [828] ............................ if the debugPlaybackEnabled then
  [822] pushcons 55 ............................. <"section 3">
  [824] pusharglistnoret 1 ...................... <"section 3">
  [826] extcall 168 ............................. put "section 3"
  [828] getparam 0 .............................. <me>
  [830] getchainedprop 58 ....................... <me.oItem>
  [832] pusharglist 1 ........................... <me.oItem>
  [834] objcall 255 ............................. <me.oItem.getDrag()>
  [836] not ..................................... <not me.oItem.getDrag()>
  [837] jmpifz [895] ............................ if not me.oItem.getDrag() then
  [840] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [842] jmpifz [851] ............................ if the debugPlaybackEnabled then
  [845] pushcons 56 ............................. <"section 4...">
  [847] pusharglistnoret 1 ...................... <"section 4...">
  [849] extcall 168 ............................. put "section 4..."
  [851] getglobal 256 ........................... <oSession>
  [854] pusharglist 1 ........................... <oSession>
  [856] extcall 59 .............................. <voidp(oSession)>
  [858] jmpifz [877] ............................ if voidp(oSession) then / else
  [861] pushcons 57 ............................. <"section 4.1">
  [863] pusharglistnoret 1 ...................... <"section 4.1">
  [865] extcall 168 ............................. put "section 4.1"
  [867] getglobal 133 ........................... <oIsoScene>
  [869] pusharglistnoret 1 ...................... <oIsoScene>
  [871] objcall 257 ............................. oIsoScene.deleteSelectedItem()
  [874] jmp [895]
  [877] pushcons 58 ............................. <"section 4.2">
  [879] pusharglistnoret 1 ...................... <"section 4.2">
  [881] extcall 168 ............................. put "section 4.2"
  [883] getglobal 258 ........................... <oPossessionStudio>
  [886] getparam 0 .............................. <me>
  [888] getobjprop 58 ........................... <me.oItem>
  [890] pusharglistnoret 2 ...................... <oPossessionStudio, me.oItem>
  [892] objcall 259 ............................. oPossessionStudio.sendPutInBackpack(me.oItem)
  [895] jmp [1068]
  [898] getparam 0 .............................. <me>
  [900] pusharglist 1 ........................... <me>
  [902] objcall 27 .............................. <me.isWallItem()>
  [904] jmpifz [1068] ........................... if me.isWallItem() then
  [907] getglobal 256 ........................... <oSession>
  [910] pusharglist 1 ........................... <oSession>
  [912] extcall 59 .............................. <voidp(oSession)>
  [914] not ..................................... <not voidp(oSession)>
  [915] jmpifz [1068] ........................... if not voidp(oSession) then
  [918] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [920] jmpifz [929] ............................ if the debugPlaybackEnabled then
  [923] pushcons 59 ............................. <"section 5">
  [925] pusharglistnoret 1 ...................... <"section 5">
  [927] extcall 168 ............................. put "section 5"
  [929] getglobal 256 ........................... <oSession>
  [932] getobjprop 260 .......................... <oSession.bTestMode>
  [935] not ..................................... <not oSession.bTestMode>
  [936] getglobal 258 ........................... <oPossessionStudio>
  [939] pusharglist 1 ........................... <oPossessionStudio>
  [941] extcall 59 .............................. <voidp(oPossessionStudio)>
  [943] not ..................................... <not voidp(oPossessionStudio)>
  [944] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [945] jmpifz [1068] ........................... if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [948] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [950] jmpifz [959] ............................ if the debugPlaybackEnabled then
  [953] pushcons 60 ............................. <"section 6">
  [955] pusharglistnoret 1 ...................... <"section 6">
  [957] extcall 168 ............................. put "section 6"
  [959] getglobal 258 ........................... <oPossessionStudio>
  [962] getparam 0 .............................. <me>
  [964] getobjprop 58 ........................... <me.oItem>
  [966] pusharglistnoret 2 ...................... <oPossessionStudio, me.oItem>
  [968] objcall 259 ............................. oPossessionStudio.sendPutInBackpack(me.oItem)
  [971] getmovieprop 252 ........................ <the debugPlaybackEnabled>
  [973] jmpifz [982] ............................ if the debugPlaybackEnabled then
  [976] pushcons 61 ............................. <"section 7">
  [978] pusharglistnoret 1 ...................... <"section 7">
  [980] extcall 168 ............................. put "section 7"
  [982] getparam 0 .............................. <me>
  [984] getchainedprop 58 ....................... <me.oItem>
  [986] getobjprop 261 .......................... <me.oItem.aDirtyItems>
  [989] peek 0
  [991] pusharglist 1
  [993] extcall 155
  [995] pushint8 1
  [997] peek 0
  [999] peek 2
  [1001] lteq
  [1002] jmpifz [1066] .......................... repeat with oDirtyItem in me.oItem.aDirtyItems
  [1005] peek 2
  [1007] peek 1
  [1009] pusharglist 2
  [1011] extcall 72
  [1013] setlocal 7
  [1015] getlocal 7 ............................. <oDirtyItem>
  [1017] getparam 0 ............................. <me>
  [1019] getobjprop 58 .......................... <me.oItem>
  [1021] pusharglist 2 .......................... <oDirtyItem, me.oItem>
  [1023] objcall 254 ............................ <oDirtyItem.equals(me.oItem)>
  [1025] not .................................... <not oDirtyItem.equals(me.oItem)>
  [1026] jmpifz [1061] .......................... if not oDirtyItem.equals(me.oItem) then
  [1029] getmovieprop 252 ....................... <the debugPlaybackEnabled>
  [1031] jmpifz [1040] .......................... if the debugPlaybackEnabled then
  [1034] pushcons 62 ............................ <"section 8">
  [1036] pusharglistnoret 1 ..................... <"section 8">
  [1038] extcall 168 ............................ put "section 8"
  [1040] getglobal 258 .......................... <oPossessionStudio>
  [1043] getlocal 7 ............................. <oDirtyItem>
  [1045] pusharglistnoret 2 ..................... <oPossessionStudio, oDirtyItem>
  [1047] objcall 262 ............................ oPossessionStudio.sendPutInStudio(oDirtyItem)
  [1050] getmovieprop 252 ....................... <the debugPlaybackEnabled>
  [1052] jmpifz [1061] .......................... if the debugPlaybackEnabled then
  [1055] pushcons 63 ............................ <"section 9">
  [1057] pusharglistnoret 1 ..................... <"section 9">
  [1059] extcall 168 ............................ put "section 9"
  [1061] pushint8 1
  [1063] add
  [1064] endrepeat [997]
  [1066] pop 3
  [1068] jmp [1533]
  [1071] peek 0
  [1073] pushcons 24 ............................ <"Rotate">
  [1075] eq
  [1076] jmpifz [1137] .......................... (case) "Rotate":
  [1079] getglobal 233 .......................... <gFeatureSet>
  [1081] pushsymb 263 ........................... <#FURNITURE_ROTATE>
  [1084] pusharglist 2 .......................... <gFeatureSet, #FURNITURE_ROTATE>
  [1086] objcall 235 ............................ <gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [1088] not .................................... <not gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [1089] jmpifz [1106] .......................... if not gFeatureSet.isEnabled(#FURNITURE_ROTATE) then
  [1092] getglobal 172 .......................... <ElementMgr>
  [1094] pushcons 46 ............................ <"FEATURE_DISABLED">
  [1096] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1098] objcall 236 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1100] pop 1
  [1102] pusharglistnoret 0 ..................... <>
  [1104] extcall 52 ............................. return 
  [1106] getparam 0 ............................. <me>
  [1108] pusharglist 1 .......................... <me>
  [1110] objcall 26 ............................. <me.isFurniItem()>
  [1112] jmpifz [1134] .......................... if me.isFurniItem() then
  [1115] getparam 0 ............................. <me>
  [1117] getchainedprop 58 ...................... <me.oItem>
  [1119] pusharglistnoret 1 ..................... <me.oItem>
  [1121] objcall 264 ............................ me.oItem.rotateItem()
  [1124] getparam 0 ............................. <me>
  [1126] getglobal 133 .......................... <oIsoScene>
  [1128] getobjprop 240 ......................... <oIsoScene.oSelectedItem>
  [1130] pusharglistnoret 2 ..................... <me, oIsoScene.oSelectedItem>
  [1132] objcall 3 .............................. me.display(oIsoScene.oSelectedItem)
  [1134] jmp [1533]
  [1137] peek 0
  [1139] pushcons 23 ............................ <"Move">
  [1141] eq
  [1142] jmpifz [1198] .......................... (case) "Move":
  [1145] getglobal 233 .......................... <gFeatureSet>
  [1147] pushsymb 265 ........................... <#FURNITURE_MOVE>
  [1150] pusharglist 2 .......................... <gFeatureSet, #FURNITURE_MOVE>
  [1152] objcall 235 ............................ <gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [1154] not .................................... <not gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [1155] jmpifz [1172] .......................... if not gFeatureSet.isEnabled(#FURNITURE_MOVE) then
  [1158] getglobal 172 .......................... <ElementMgr>
  [1160] pushcons 46 ............................ <"FEATURE_DISABLED">
  [1162] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1164] objcall 236 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1166] pop 1
  [1168] pusharglistnoret 0 ..................... <>
  [1170] extcall 52 ............................. return 
  [1172] getparam 0 ............................. <me>
  [1174] pusharglist 1 .......................... <me>
  [1176] objcall 26 ............................. <me.isFurniItem()>
  [1178] getparam 0 ............................. <me>
  [1180] pusharglist 1 .......................... <me>
  [1182] objcall 27 ............................. <me.isWallItem()>
  [1184] or ..................................... <me.isFurniItem() or me.isWallItem()>
  [1185] jmpifz [1195] .......................... if me.isFurniItem() or me.isWallItem() then
  [1188] getglobal 133 .......................... <oIsoScene>
  [1190] pusharglistnoret 1 ..................... <oIsoScene>
  [1192] objcall 266 ............................ oIsoScene.moveSelectedItem()
  [1195] jmp [1533]
  [1198] peek 0
  [1200] pushcons 27 ............................ <"Use">
  [1202] eq
  [1203] jmpifz [1264] .......................... (case) "Use":
  [1206] getglobal 233 .......................... <gFeatureSet>
  [1208] pushsymb 267 ........................... <#FURNITURE_USE>
  [1211] pusharglist 2 .......................... <gFeatureSet, #FURNITURE_USE>
  [1213] objcall 235 ............................ <gFeatureSet.isEnabled(#FURNITURE_USE)>
  [1215] not .................................... <not gFeatureSet.isEnabled(#FURNITURE_USE)>
  [1216] jmpifz [1233] .......................... if not gFeatureSet.isEnabled(#FURNITURE_USE) then
  [1219] getglobal 172 .......................... <ElementMgr>
  [1221] pushcons 46 ............................ <"FEATURE_DISABLED">
  [1223] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1225] objcall 236 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1227] pop 1
  [1229] pusharglistnoret 0 ..................... <>
  [1231] extcall 52 ............................. return 
  [1233] getparam 0 ............................. <me>
  [1235] pusharglist 1 .......................... <me>
  [1237] objcall 26 ............................. <me.isFurniItem()>
  [1239] getparam 0 ............................. <me>
  [1241] pusharglist 1 .......................... <me>
  [1243] objcall 27 ............................. <me.isWallItem()>
  [1245] or ..................................... <me.isFurniItem() or me.isWallItem()>
  [1246] jmpifz [1261] .......................... if me.isFurniItem() or me.isWallItem() then
  [1249] getparam 0 ............................. <me>
  [1251] getchainedprop 58 ...................... <me.oItem>
  [1253] getchainedprop 268 ..................... <me.oItem.oAction>
  [1256] pusharglistnoret 1 ..................... <me.oItem.oAction>
  [1258] objcall 269 ............................ me.oItem.oAction.use()
  [1261] jmp [1533]
  [1264] peek 0
  [1266] pushcons 12 ............................ <"Thumbs Up">
  [1268] eq
  [1269] jmpifz [1369] .......................... (case) "Thumbs Up":
  [1272] getglobal 233 .......................... <gFeatureSet>
  [1274] pushsymb 270 ........................... <#VOTING>
  [1277] pusharglist 2 .......................... <gFeatureSet, #VOTING>
  [1279] objcall 235 ............................ <gFeatureSet.isEnabled(#VOTING)>
  [1281] not .................................... <not gFeatureSet.isEnabled(#VOTING)>
  [1282] jmpifz [1299] .......................... if not gFeatureSet.isEnabled(#VOTING) then
  [1285] getglobal 172 .......................... <ElementMgr>
  [1287] pushcons 46 ............................ <"FEATURE_DISABLED">
  [1289] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1291] objcall 236 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1293] pop 1
  [1295] pusharglistnoret 0 ..................... <>
  [1297] extcall 52 ............................. return 
  [1299] getparam 0 ............................. <me>
  [1301] pusharglist 1 .......................... <me>
  [1303] objcall 21 ............................. <me.hasVoted()>
  [1305] setlocal 8 ............................. bHasVoted = me.hasVoted()
  [1307] getlocal 8 ............................. <bHasVoted>
  [1309] pushzero ............................... <0>
  [1310] eq ..................................... <bHasVoted = 0>
  [1311] getlocal 8 ............................. <bHasVoted>
  [1313] not .................................... <not bHasVoted>
  [1314] or ..................................... <(bHasVoted = 0) or not bHasVoted>
  [1315] jmpifz [1340] .......................... if (bHasVoted = 0) or not bHasVoted then
  [1318] getglobal 64 ........................... <oStudio>
  [1320] pusharglist 1 .......................... <oStudio>
  [1322] objcall 74 ............................. <oStudio.getcdplayer()>
  [1324] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1326] objcall 159 ............................ <oStudio.getcdplayer().getCd()>
  [1328] pusharglistnoret 1 ..................... <oStudio.getcdplayer().getCd()>
  [1330] objcall 271 ............................ oStudio.getcdplayer().getCd().votePositive()
  [1333] getglobal 64 ........................... <oStudio>
  [1335] pusharglistnoret 1 ..................... <oStudio>
  [1337] objcall 272 ............................ oStudio.sendThumbsUp()
  [1340] getparam 0 ............................. <me>
  [1342] getglobal 64 ........................... <oStudio>
  [1344] pusharglist 1 .......................... <oStudio>
  [1346] objcall 74 ............................. <oStudio.getcdplayer()>
  [1348] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1350] objcall 159 ............................ <oStudio.getcdplayer().getCd()>
  [1352] pusharglistnoret 2 ..................... <me, oStudio.getcdplayer().getCd()>
  [1354] objcall 4 .............................. me.displayCd(oStudio.getcdplayer().getCd())
  [1356] getparam 0 ............................. <me>
  [1358] pusharglist 0 .......................... <>
  [1360] extcall 238 ............................ <VOID>
  [1362] pusharglistnoret 2 ..................... <me, VOID>
  [1364] objcall 3 .............................. me.display(VOID)
  [1366] jmp [1533]
  [1369] peek 0
  [1371] pushcons 13 ............................ <"Thumbs Down">
  [1373] eq
  [1374] jmpifz [1474] .......................... (case) "Thumbs Down":
  [1377] getglobal 233 .......................... <gFeatureSet>
  [1379] pushsymb 270 ........................... <#VOTING>
  [1382] pusharglist 2 .......................... <gFeatureSet, #VOTING>
  [1384] objcall 235 ............................ <gFeatureSet.isEnabled(#VOTING)>
  [1386] not .................................... <not gFeatureSet.isEnabled(#VOTING)>
  [1387] jmpifz [1404] .......................... if not gFeatureSet.isEnabled(#VOTING) then
  [1390] getglobal 172 .......................... <ElementMgr>
  [1392] pushcons 46 ............................ <"FEATURE_DISABLED">
  [1394] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1396] objcall 236 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1398] pop 1
  [1400] pusharglistnoret 0 ..................... <>
  [1402] extcall 52 ............................. return 
  [1404] getparam 0 ............................. <me>
  [1406] pusharglist 1 .......................... <me>
  [1408] objcall 21 ............................. <me.hasVoted()>
  [1410] setlocal 8 ............................. bHasVoted = me.hasVoted()
  [1412] getlocal 8 ............................. <bHasVoted>
  [1414] pushzero ............................... <0>
  [1415] eq ..................................... <bHasVoted = 0>
  [1416] getlocal 8 ............................. <bHasVoted>
  [1418] not .................................... <not bHasVoted>
  [1419] or ..................................... <(bHasVoted = 0) or not bHasVoted>
  [1420] jmpifz [1445] .......................... if (bHasVoted = 0) or not bHasVoted then
  [1423] getglobal 64 ........................... <oStudio>
  [1425] pusharglist 1 .......................... <oStudio>
  [1427] objcall 74 ............................. <oStudio.getcdplayer()>
  [1429] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1431] objcall 159 ............................ <oStudio.getcdplayer().getCd()>
  [1433] pusharglistnoret 1 ..................... <oStudio.getcdplayer().getCd()>
  [1435] objcall 273 ............................ oStudio.getcdplayer().getCd().voteNegative()
  [1438] getglobal 64 ........................... <oStudio>
  [1440] pusharglistnoret 1 ..................... <oStudio>
  [1442] objcall 274 ............................ oStudio.sendThumbsDown()
  [1445] getparam 0 ............................. <me>
  [1447] getglobal 64 ........................... <oStudio>
  [1449] pusharglist 1 .......................... <oStudio>
  [1451] objcall 74 ............................. <oStudio.getcdplayer()>
  [1453] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1455] objcall 159 ............................ <oStudio.getcdplayer().getCd()>
  [1457] pusharglistnoret 2 ..................... <me, oStudio.getcdplayer().getCd()>
  [1459] objcall 4 .............................. me.displayCd(oStudio.getcdplayer().getCd())
  [1461] getparam 0 ............................. <me>
  [1463] pusharglist 0 .......................... <>
  [1465] extcall 238 ............................ <VOID>
  [1467] pusharglistnoret 2 ..................... <me, VOID>
  [1469] objcall 3 .............................. me.display(VOID)
  [1471] jmp [1533]
  [1474] peek 0
  [1476] pushcons 31 ............................ <"Stop Performing">
  [1478] eq
  [1479] jmpifz [1502] .......................... (case) "Stop Performing":
  [1482] getglobal 64 ........................... <oStudio>
  [1484] pusharglistnoret 1 ..................... <oStudio>
  [1486] objcall 275 ............................ oStudio.sendCdEnd()
  [1489] getparam 0 ............................. <me>
  [1491] pusharglist 0 .......................... <>
  [1493] extcall 238 ............................ <VOID>
  [1495] pusharglistnoret 2 ..................... <me, VOID>
  [1497] objcall 3 .............................. me.display(VOID)
  [1499] jmp [1533]
  [1502] peek 0
  [1504] pushcons 64 ............................ <"Stop song">
  [1506] eq
  [1507] jmpifz [1533] .......................... (case) "Stop song":
  [1510] pushcons 65 ............................ <"sendjukeboxstop()">
  [1512] pusharglistnoret 1 ..................... <"sendjukeboxstop()">
  [1514] extcall 168 ............................ put "sendjukeboxstop()"
  [1516] getglobal 64 ........................... <oStudio>
  [1518] pusharglistnoret 1 ..................... <oStudio>
  [1520] objcall 276 ............................ oStudio.sendJukeboxStop()
  [1523] getparam 0 ............................. <me>
  [1525] pusharglist 0 .......................... <>
  [1527] extcall 238 ............................ <VOID>
  [1529] pusharglistnoret 2 ..................... <me, VOID>
  [1531] objcall 3 .............................. me.display(VOID)
  [1533] pop 1 .................................. end case
  [1535] ret
end

on hasVoted me
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 14] ............................ if voidp(oStudio) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 52 .............................. return 0
  [ 14] getglobal 64 ............................ <oStudio>
  [ 16] pusharglist 1 ........................... <oStudio>
  [ 18] objcall 74 .............................. <oStudio.getcdplayer()>
  [ 20] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 22] objcall 159 ............................. <oStudio.getcdplayer().getCd()>
  [ 24] pusharglist 1 ........................... <oStudio.getcdplayer().getCd()>
  [ 26] objcall 21 .............................. <oStudio.getcdplayer().getCd().hasVoted()>
  [ 28] pusharglistnoret 1 ...................... <oStudio.getcdplayer().getCd().hasVoted()>
  [ 30] extcall 52 .............................. return oStudio.getcdplayer().getCd().hasVoted()
  [ 32] ret
end

on isOwner me
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 15] ............................ if voidp(oStudio) then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 52 .............................. return 1
  [ 15] getglobal 64 ............................ <oStudio>
  [ 17] getglobal 77 ............................ <oDenizenManager>
  [ 19] pusharglist 1 ........................... <oDenizenManager>
  [ 21] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [ 23] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 25] objcall 22 .............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 27] pusharglistnoret 1 ...................... <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 29] extcall 52 .............................. return oStudio.isOwner(oDenizenManager.getScreenName())
  [ 31] ret
end

on isMod me
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 15] ............................ if voidp(oStudio) then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 52 .............................. return 1
  [ 15] getglobal 77 ............................ <oDenizenManager>
  [ 17] pusharglist 1 ........................... <oDenizenManager>
  [ 19] objcall 23 .............................. <oDenizenManager.isMod()>
  [ 21] pusharglistnoret 1 ...................... <oDenizenManager.isMod()>
  [ 23] extcall 52 .............................. return oDenizenManager.isMod()
  [ 25] ret
end

on isBot me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 25 .............................. <me.isAvatar()>
  [  6] not ..................................... <not me.isAvatar()>
  [  7] jmpifz [ 15] ............................ if not me.isAvatar() then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 52 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 58 ....................... <me.oItem>
  [ 19] pusharglist 1 ........................... <me.oItem>
  [ 21] objcall 24 .............................. <me.oItem.isBot()>
  [ 23] pusharglistnoret 1 ...................... <me.oItem.isBot()>
  [ 25] extcall 52 .............................. return me.oItem.isBot()
  [ 27] ret
end

on isAvatar me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 58 ........................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 59 .............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 52 .............................. return 0
  [ 16] getglobal 133 ........................... <oIsoScene>
  [ 18] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 59 .............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 52 .............................. return 
  [ 31] getglobal 133 ........................... <oIsoScene>
  [ 33] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 58 ........................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 52 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 58 ....................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 25 .............................. <me.oItem.isAvatar()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isAvatar()>
  [ 57] extcall 52 .............................. return me.oItem.isAvatar()
  [ 59] ret
end

on isFurniItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 58 ........................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 59 .............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 52 .............................. return 0
  [ 16] getglobal 133 ........................... <oIsoScene>
  [ 18] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 59 .............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 52 .............................. return 
  [ 31] getglobal 133 ........................... <oIsoScene>
  [ 33] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 58 ........................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 52 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 58 ....................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 26 .............................. <me.oItem.isFurniItem()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isFurniItem()>
  [ 57] extcall 52 .............................. return me.oItem.isFurniItem()
  [ 59] ret
end

on isWallItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 58 ........................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 59 .............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 52 .............................. return 0
  [ 16] getglobal 133 ........................... <oIsoScene>
  [ 18] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 59 .............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 52 .............................. return 
  [ 31] getglobal 133 ........................... <oIsoScene>
  [ 33] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 58 ........................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 52 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 58 ....................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 27 .............................. <me.oItem.isWallItem()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isWallItem()>
  [ 57] extcall 52 .............................. return me.oItem.isWallItem()
  [ 59] ret
end

on isMe me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 25 .............................. <me.isAvatar()>
  [  6] not ..................................... <not me.isAvatar()>
  [  7] jmpifz [ 15] ............................ if not me.isAvatar() then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 52 .............................. return 0
  [ 15] getglobal 64 ............................ <oStudio>
  [ 17] pusharglist 1 ........................... <oStudio>
  [ 19] extcall 59 .............................. <voidp(oStudio)>
  [ 21] jmpifz [ 30] ............................ if voidp(oStudio) then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 52 .............................. return 1
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 58 ....................... <me.oItem>
  [ 34] pusharglist 1 ........................... <me.oItem>
  [ 36] objcall 78 .............................. <me.oItem.getScreenName()>
  [ 38] getglobal 77 ............................ <oDenizenManager>
  [ 40] pusharglist 1 ........................... <oDenizenManager>
  [ 42] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [ 44] eq ...................................... <me.oItem.getScreenName() = oDenizenManager.getScreenName()>
  [ 45] pusharglistnoret 1 ...................... <me.oItem.getScreenName() = oDenizenManager.getScreenName()>
  [ 47] extcall 52 .............................. return me.oItem.getScreenName() = oDenizenManager.getScreenName()
  [ 49] ret
end

on displaySong me, foSong, sAvatar
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getparam 1 .............................. <foSong>
  [ 15] pusharglist 1 ........................... <foSong>
  [ 17] extcall 59 .............................. <voidp(foSong)>
  [ 19] jmpifz [ 26] ............................ if voidp(foSong) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 52 .............................. return 
  [ 26] getparam 1 .............................. <foSong>
  [ 28] pusharglist 1 ........................... <foSong>
  [ 30] objcall 281 ............................. <foSong.getartistName()>
  [ 33] setlocal 0 .............................. sAuthor = foSong.getartistName()
  [ 35] getparam 1 .............................. <foSong>
  [ 37] pusharglist 1 ........................... <foSong>
  [ 39] objcall 67 .............................. <foSong.getSongName()>
  [ 41] setlocal 1 .............................. sSongName = foSong.getSongName()
  [ 43] getparam 1 .............................. <foSong>
  [ 45] pusharglist 1 ........................... <foSong>
  [ 47] objcall 282 ............................. <foSong.getGenreName()>
  [ 50] setlocal 2 .............................. sGenre = foSong.getGenreName()
  [ 52] pushcons 66 ............................. <"IJplayer_small">
  [ 54] pusharglist 1 ........................... <"IJplayer_small">
  [ 56] extcall 30 .............................. <member("IJplayer_small")>
  [ 58] setlocal 3 .............................. oPreviewImage = member("IJplayer_small")
  [ 60] getlocal 3 .............................. <oPreviewImage>
  [ 62] getobjprop 73 ........................... <oPreviewImage.memberNum>
  [ 64] pushint8 1 .............................. <1>
  [ 66] inv ..................................... <-1>
  [ 67] eq ...................................... <oPreviewImage.memberNum = -1>
  [ 68] jmpifz [ 75] ............................ if oPreviewImage.memberNum = -1 then
  [ 71] pusharglistnoret 0 ...................... <>
  [ 73] extcall 52 .............................. return 
  [ 75] getparam 0 .............................. <me>
  [ 77] pusharglistnoret 1 ...................... <me>
  [ 79] objcall 11 .............................. me.destroy()
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglistnoret 1 ...................... <me>
  [ 85] objcall 8 ............................... me.displayInfoStand()
  [ 87] getparam 0 .............................. <me>
  [ 89] getlocal 3 .............................. <oPreviewImage>
  [ 91] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 93] objcall 9 ............................... me.displayPreviewImage(oPreviewImage)
  [ 95] pushcons 8 .............................. <"NOW PLAYING">
  [ 97] pushcons 9 .............................. <RETURN>
  [ 99] joinstr ................................. <"NOW PLAYING" & RETURN>
  [100] getlocal 1 .............................. <sSongName>
  [102] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName>
  [103] pushcons 9 .............................. <RETURN>
  [105] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN>
  [106] pushcons 10 ............................. <"by: ">
  [108] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: ">
  [109] getlocal 0 .............................. <sAuthor>
  [111] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor>
  [112] pushcons 9 .............................. <RETURN>
  [114] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN>
  [115] pushcons 67 ............................. <"genre: ">
  [117] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN & "genre: ">
  [118] getlocal 2 .............................. <sGenre>
  [120] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN & "genre: " & sGenre>
  [121] setlocal 4 .............................. sText = "NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN & "genre: " & sGenre
  [123] getparam 0 .............................. <me>
  [125] getlocal 4 .............................. <sText>
  [127] pusharglistnoret 2 ...................... <me, sText>
  [129] objcall 10 .............................. me.displayDescription(sText)
  [131] getparam 2 .............................. <sAvatar>
  [133] getglobal 77 ............................ <oDenizenManager>
  [135] pusharglist 1 ........................... <oDenizenManager>
  [137] objcall 283 ............................. <oDenizenManager.getDenizen()>
  [140] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [142] objcall 78 .............................. <oDenizenManager.getDenizen().getScreenName()>
  [144] eq ...................................... <sAvatar = oDenizenManager.getDenizen().getScreenName()>
  [145] jmpifz [165] ............................ if sAvatar = oDenizenManager.getDenizen().getScreenName() then
  [148] pushcons 68 ............................. <"infostand : you are the one who started the music">
  [150] pusharglistnoret 1 ...................... <"infostand : you are the one who started the music">
  [152] extcall 168 ............................. put "infostand : you are the one who started the music"
  [154] getparam 0 .............................. <me>
  [156] pushcons 64 ............................. <"Stop song">
  [158] pusharglist 1 ........................... <["Stop song"]>
  [160] pushlist ................................ <["Stop song"]>
  [161] pusharglistnoret 2 ...................... <me, ["Stop song"]>
  [163] objcall 16 .............................. me.displayButtons(["Stop song"])
  [165] ret
end
