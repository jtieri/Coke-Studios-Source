property bDebug, oMath2d, oIsoConstants, iYRot, iXRot, fSinY, fSinX, fCosY, fCosX, iXOff, iYOff, iFPS, iSequenceRate, iSqSize, iRows, iCols, oGrid, oMap, oHotSpots, oSpriteManager, oMouseSquare, oMouseGridPoint, oFMath, oBackground, oFloor, oWall, oDoor, oWindow, oRugs, oFurniture, oWallItems, oAvatars, oStaticItems, oHiliter, oStudioInfo, oInfoStand, oVoteItems, oAvatarIndicator, oTrivia, oSelectedItem, oSceneXml, oMapXml, oEntryXml, iLastClickTime, iAllowedClickTime, sLastRolloverItemName
global oIsoScene, oSession, oStudio, oPossessionStudio, oRoom, oStudioMap, oDenizenManager, gbTestMode, ElementMgr, gFeatureSet, gCatalog

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 56 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushcons 0 .............................. <"new() ">
  [  9] pusharglistnoret 2 ...................... <me, "new() ">
  [ 11] objcall 50 .............................. me.debug("new() ")
  [ 13] getparam 0 .............................. <me>
  [ 15] pushcons 1 .............................. <"IsoConstants">
  [ 17] pusharglist 1 ........................... <"IsoConstants">
  [ 19] extcall 57 .............................. <script("IsoConstants")>
  [ 21] pusharglist 1 ........................... <script("IsoConstants")>
  [ 23] extcall 0 ............................... <new(script("IsoConstants"))>
  [ 25] setobjprop 58 ........................... me.oIsoConstants = new(script("IsoConstants"))
  [ 27] getparam 0 .............................. <me>
  [ 29] pushcons 2 .............................. <"Math2d">
  [ 31] pusharglist 1 ........................... <"Math2d">
  [ 33] extcall 57 .............................. <script("Math2d")>
  [ 35] pusharglist 1 ........................... <script("Math2d")>
  [ 37] extcall 0 ............................... <new(script("Math2d"))>
  [ 39] setobjprop 59 ........................... me.oMath2d = new(script("Math2d"))
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 3 .............................. <"Math">
  [ 45] pusharglist 1 ........................... <"Math">
  [ 47] extcall 60 .............................. <newObject("Math")>
  [ 49] setobjprop 61 ........................... me.oFMath = newObject("Math")
  [ 51] getparam 0 .............................. <me>
  [ 53] getparam 0 .............................. <me>
  [ 55] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 57] getobjprop 62 ........................... <me.oIsoConstants.DEFAULT_YROT>
  [ 59] setobjprop 63 ........................... me.iYRot = me.oIsoConstants.DEFAULT_YROT
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 0 .............................. <me>
  [ 65] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 67] getobjprop 64 ........................... <me.oIsoConstants.DEFAULT_XROT>
  [ 69] setobjprop 65 ........................... me.iXRot = me.oIsoConstants.DEFAULT_XROT
  [ 71] getparam 0 .............................. <me>
  [ 73] getprop 59 .............................. <oMath2d>
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 63 ........................... <me.iYRot>
  [ 79] pusharglist 2 ........................... <oMath2d, me.iYRot>
  [ 81] objcall 67 .............................. <oMath2d.rad(me.iYRot)>
  [ 83] pusharglist 1 ........................... <oMath2d.rad(me.iYRot)>
  [ 85] extcall 66 .............................. <sin(oMath2d.rad(me.iYRot))>
  [ 87] setobjprop 68 ........................... me.fSinY = sin(oMath2d.rad(me.iYRot))
  [ 89] getparam 0 .............................. <me>
  [ 91] getprop 59 .............................. <oMath2d>
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 65 ........................... <me.iXRot>
  [ 97] pusharglist 2 ........................... <oMath2d, me.iXRot>
  [ 99] objcall 67 .............................. <oMath2d.rad(me.iXRot)>
  [101] pusharglist 1 ........................... <oMath2d.rad(me.iXRot)>
  [103] extcall 66 .............................. <sin(oMath2d.rad(me.iXRot))>
  [105] setobjprop 69 ........................... me.fSinX = sin(oMath2d.rad(me.iXRot))
  [107] getparam 0 .............................. <me>
  [109] getprop 59 .............................. <oMath2d>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 63 ........................... <me.iYRot>
  [115] pusharglist 2 ........................... <oMath2d, me.iYRot>
  [117] objcall 67 .............................. <oMath2d.rad(me.iYRot)>
  [119] pusharglist 1 ........................... <oMath2d.rad(me.iYRot)>
  [121] extcall 70 .............................. <cos(oMath2d.rad(me.iYRot))>
  [123] setobjprop 71 ........................... me.fCosY = cos(oMath2d.rad(me.iYRot))
  [125] getparam 0 .............................. <me>
  [127] getprop 59 .............................. <oMath2d>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 65 ........................... <me.iXRot>
  [133] pusharglist 2 ........................... <oMath2d, me.iXRot>
  [135] objcall 67 .............................. <oMath2d.rad(me.iXRot)>
  [137] pusharglist 1 ........................... <oMath2d.rad(me.iXRot)>
  [139] extcall 70 .............................. <cos(oMath2d.rad(me.iXRot))>
  [141] setobjprop 72 ........................... me.fCosX = cos(oMath2d.rad(me.iXRot))
  [143] getparam 0 .............................. <me>
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 58 ....................... <me.oIsoConstants>
  [149] getobjprop 73 ........................... <me.oIsoConstants.DEFAULT_XOFF>
  [151] setobjprop 74 ........................... me.iXOff = me.oIsoConstants.DEFAULT_XOFF
  [153] getparam 0 .............................. <me>
  [155] getparam 0 .............................. <me>
  [157] getchainedprop 58 ....................... <me.oIsoConstants>
  [159] getobjprop 75 ........................... <me.oIsoConstants.DEFAULT_YOFF>
  [161] setobjprop 76 ........................... me.iYOff = me.oIsoConstants.DEFAULT_YOFF
  [163] getparam 0 .............................. <me>
  [165] getparam 0 .............................. <me>
  [167] getchainedprop 58 ....................... <me.oIsoConstants>
  [169] getobjprop 77 ........................... <me.oIsoConstants.DEFAULT_SQSIZE>
  [171] setobjprop 78 ........................... me.iSqSize = me.oIsoConstants.DEFAULT_SQSIZE
  [173] getparam 0 .............................. <me>
  [175] getparam 0 .............................. <me>
  [177] getchainedprop 58 ....................... <me.oIsoConstants>
  [179] getobjprop 79 ........................... <me.oIsoConstants.DEFAULT_ROWS>
  [181] setobjprop 80 ........................... me.iRows = me.oIsoConstants.DEFAULT_ROWS
  [183] getparam 0 .............................. <me>
  [185] getparam 0 .............................. <me>
  [187] getchainedprop 58 ....................... <me.oIsoConstants>
  [189] getobjprop 81 ........................... <me.oIsoConstants.DEFAULT_COLS>
  [191] setobjprop 82 ........................... me.iCols = me.oIsoConstants.DEFAULT_COLS
  [193] getparam 0 .............................. <me>
  [195] getparam 0 .............................. <me>
  [197] getchainedprop 58 ....................... <me.oIsoConstants>
  [199] getobjprop 83 ........................... <me.oIsoConstants.DEFAULT_FPS>
  [201] setobjprop 84 ........................... me.iFPS = me.oIsoConstants.DEFAULT_FPS
  [203] getparam 0 .............................. <me>
  [205] getparam 0 .............................. <me>
  [207] getchainedprop 58 ....................... <me.oIsoConstants>
  [209] getobjprop 85 ........................... <me.oIsoConstants.DEFAULT_SEQUENCE_RATE>
  [211] setobjprop 86 ........................... me.iSequenceRate = me.oIsoConstants.DEFAULT_SEQUENCE_RATE
  [213] getparam 0 .............................. <me>
  [215] getchainedprop 58 ....................... <me.oIsoConstants>
  [217] getobjprop 83 ........................... <me.oIsoConstants.DEFAULT_FPS>
  [219] pusharglistnoret 1 ...................... <me.oIsoConstants.DEFAULT_FPS>
  [221] extcall 87 .............................. puppetTempo(me.oIsoConstants.DEFAULT_FPS)
  [223] getparam 0 .............................. <me>
  [225] setglobal 88 ............................ oIsoScene = me
  [227] getparam 0 .............................. <me>
  [229] getmovieprop 89 ......................... <the milliSeconds>
  [231] setobjprop 90 ........................... me.iLastClickTime = the milliSeconds
  [233] getparam 0 .............................. <me>
  [235] pushint16 650 ........................... <650>
  [238] setobjprop 91 ........................... me.iAllowedClickTime = 650
  [240] getparam 0 .............................. <me>
  [242] pushcons 4 .............................. <EMPTY>
  [244] setobjprop 92 ........................... me.sLastRolloverItemName = EMPTY
  [246] getparam 0 .............................. <me>
  [248] pusharglistnoret 1 ...................... <me>
  [250] extcall 93 .............................. return me
  [252] ret
end

on setLayout me, iLayout
  [  0] getparam 1 .............................. <iLayout>
  [  2] peek 0 .................................. case iLayout of
  [  4] getparam 0 .............................. <me>
  [  6] getchainedprop 58 ....................... <me.oIsoConstants>
  [  8] getobjprop 95 ........................... <me.oIsoConstants.DEFAULT_LAYOUT_TYPE>
  [ 10] eq
  [ 11] jmpifz [ 67] ............................ (case) me.oIsoConstants.DEFAULT_LAYOUT_TYPE:
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 20] getobjprop 73 ........................... <me.oIsoConstants.DEFAULT_XOFF>
  [ 22] setobjprop 74 ........................... me.iXOff = me.oIsoConstants.DEFAULT_XOFF
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 30] getobjprop 75 ........................... <me.oIsoConstants.DEFAULT_YOFF>
  [ 32] setobjprop 76 ........................... me.iYOff = me.oIsoConstants.DEFAULT_YOFF
  [ 34] getparam 0 .............................. <me>
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 40] getobjprop 77 ........................... <me.oIsoConstants.DEFAULT_SQSIZE>
  [ 42] setobjprop 78 ........................... me.iSqSize = me.oIsoConstants.DEFAULT_SQSIZE
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 50] getobjprop 79 ........................... <me.oIsoConstants.DEFAULT_ROWS>
  [ 52] setobjprop 80 ........................... me.iRows = me.oIsoConstants.DEFAULT_ROWS
  [ 54] getparam 0 .............................. <me>
  [ 56] getparam 0 .............................. <me>
  [ 58] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 60] getobjprop 81 ........................... <me.oIsoConstants.DEFAULT_COLS>
  [ 62] setobjprop 82 ........................... me.iCols = me.oIsoConstants.DEFAULT_COLS
  [ 64] jmp [129]
  [ 67] peek 0
  [ 69] getparam 0 .............................. <me>
  [ 71] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 73] getobjprop 96 ........................... <me.oIsoConstants.DEFAULT_LG_LAYOUT_TYPE>
  [ 75] eq
  [ 76] jmpifz [129] ............................ (case) me.oIsoConstants.DEFAULT_LG_LAYOUT_TYPE:
  [ 79] getparam 0 .............................. <me>
  [ 81] getparam 0 .............................. <me>
  [ 83] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 85] getobjprop 97 ........................... <me.oIsoConstants.DEFAULT_LG_XOFF>
  [ 87] setobjprop 74 ........................... me.iXOff = me.oIsoConstants.DEFAULT_LG_XOFF
  [ 89] getparam 0 .............................. <me>
  [ 91] getparam 0 .............................. <me>
  [ 93] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 95] getobjprop 98 ........................... <me.oIsoConstants.DEFAULT_LG_YOFF>
  [ 97] setobjprop 76 ........................... me.iYOff = me.oIsoConstants.DEFAULT_LG_YOFF
  [ 99] getparam 0 .............................. <me>
  [101] getparam 0 .............................. <me>
  [103] getchainedprop 58 ....................... <me.oIsoConstants>
  [105] getobjprop 99 ........................... <me.oIsoConstants.DEFAULT_LG_SQSIZE>
  [107] setobjprop 78 ........................... me.iSqSize = me.oIsoConstants.DEFAULT_LG_SQSIZE
  [109] getparam 0 .............................. <me>
  [111] getparam 0 .............................. <me>
  [113] getchainedprop 58 ....................... <me.oIsoConstants>
  [115] getobjprop 100 .......................... <me.oIsoConstants.DEFAULT_LG_ROWS>
  [117] setobjprop 80 ........................... me.iRows = me.oIsoConstants.DEFAULT_LG_ROWS
  [119] getparam 0 .............................. <me>
  [121] getparam 0 .............................. <me>
  [123] getchainedprop 58 ....................... <me.oIsoConstants>
  [125] getobjprop 101 .......................... <me.oIsoConstants.DEFAULT_LG_COLS>
  [127] setobjprop 82 ........................... me.iCols = me.oIsoConstants.DEFAULT_LG_COLS
  [129] pop 1 ................................... end case
  [131] ret
end

on Init me, _oSceneXml, _oMapXml, _oEntryXml
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 3 ............................... me.lockDisplay(1)
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <_oSceneXml>
  [ 12] setobjprop 103 .......................... me.oSceneXml = _oSceneXml
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 2 .............................. <_oMapXml>
  [ 18] setobjprop 104 .......................... me.oMapXml = _oMapXml
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 3 .............................. <_oEntryXml>
  [ 24] setobjprop 105 .......................... me.oEntryXml = _oEntryXml
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 103 .......................... <me.oSceneXml>
  [ 30] pusharglist 1 ........................... <me.oSceneXml>
  [ 32] extcall 106 ............................. <voidp(me.oSceneXml)>
  [ 34] not ..................................... <not voidp(me.oSceneXml)>
  [ 35] jmpifz [ 94] ............................ if not voidp(me.oSceneXml) then
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 103 ...................... <me.oSceneXml>
  [ 42] getobjprop 107 .......................... <me.oSceneXml.firstChild>
  [ 44] setlocal 0 .............................. oScene = me.oSceneXml.firstChild
  [ 46] getlocal 0 .............................. <oScene>
  [ 48] getchainedprop 109 ...................... <oScene.attributes>
  [ 50] getobjprop 110 .......................... <oScene.attributes.layoutType>
  [ 52] pusharglist 1 ........................... <oScene.attributes.layoutType>
  [ 54] extcall 108 ............................. <integer(oScene.attributes.layoutType)>
  [ 56] setlocal 1 .............................. iLayoutType = integer(oScene.attributes.layoutType)
  [ 58] getparam 0 .............................. <me>
  [ 60] getlocal 1 .............................. <iLayoutType>
  [ 62] pusharglistnoret 2 ...................... <me, iLayoutType>
  [ 64] objcall 1 ............................... me.setLayout(iLayoutType)
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 0 .............................. <oScene>
  [ 70] getchainedprop 109 ...................... <oScene.attributes>
  [ 72] getobjprop 112 .......................... <oScene.attributes.xoff>
  [ 74] pusharglist 1 ........................... <oScene.attributes.xoff>
  [ 76] extcall 111 ............................. <float(oScene.attributes.xoff)>
  [ 78] setobjprop 74 ........................... me.iXOff = float(oScene.attributes.xoff)
  [ 80] getparam 0 .............................. <me>
  [ 82] getlocal 0 .............................. <oScene>
  [ 84] getchainedprop 109 ...................... <oScene.attributes>
  [ 86] getobjprop 113 .......................... <oScene.attributes.yoff>
  [ 88] pusharglist 1 ........................... <oScene.attributes.yoff>
  [ 90] extcall 111 ............................. <float(oScene.attributes.yoff)>
  [ 92] setobjprop 76 ........................... me.iYOff = float(oScene.attributes.yoff)
  [ 94] getparam 0 .............................. <me>
  [ 96] pushcons 5 .............................. <"IsoSpriteManager">
  [ 98] pusharglist 1 ........................... <"IsoSpriteManager">
  [100] extcall 57 .............................. <script("IsoSpriteManager")>
  [102] getparam 0 .............................. <me>
  [104] pusharglist 2 ........................... <script("IsoSpriteManager"), me>
  [106] extcall 0 ............................... <new(script("IsoSpriteManager"), me)>
  [108] setobjprop 114 .......................... me.oSpriteManager = new(script("IsoSpriteManager"), me)
  [110] getparam 0 .............................. <me>
  [112] pushcons 6 .............................. <"IsoGrid">
  [114] pusharglist 1 ........................... <"IsoGrid">
  [116] extcall 57 .............................. <script("IsoGrid")>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 80 ........................... <me.iRows>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 82 ........................... <me.iCols>
  [126] getparam 0 .............................. <me>
  [128] getobjprop 78 ........................... <me.iSqSize>
  [130] pusharglist 4 ........................... <script("IsoGrid"), me.iRows, me.iCols, me.iSqSize>
  [132] extcall 0 ............................... <new(script("IsoGrid"), me.iRows, me.iCols, me.iSqSize)>
  [134] setobjprop 115 .......................... me.oGrid = new(script("IsoGrid"), me.iRows, me.iCols, me.iSqSize)
  [136] getparam 0 .............................. <me>
  [138] pushcons 7 .............................. <"Map">
  [140] pusharglist 1 ........................... <"Map">
  [142] extcall 57 .............................. <script("Map")>
  [144] getparam 0 .............................. <me>
  [146] getchainedprop 115 ...................... <me.oGrid>
  [148] getobjprop 80 ........................... <me.oGrid.iRows>
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 115 ...................... <me.oGrid>
  [154] getobjprop 82 ........................... <me.oGrid.iCols>
  [156] getprop 104 ............................. <oMapXml>
  [158] pusharglist 4 ........................... <script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml>
  [160] extcall 0 ............................... <new(script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml)>
  [162] setobjprop 116 .......................... me.oMap = new(script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml)
  [164] getparam 0 .............................. <me>
  [166] pushcons 8 .............................. <"Background">
  [168] pusharglist 1 ........................... <"Background">
  [170] extcall 57 .............................. <script("Background")>
  [172] pusharglist 1 ........................... <script("Background")>
  [174] objcall 0 ............................... <script("Background").new()>
  [176] setobjprop 117 .......................... me.oBackground = script("Background").new()
  [178] getparam 0 .............................. <me>
  [180] pushcons 9 .............................. <"Floor">
  [182] pusharglist 1 ........................... <"Floor">
  [184] extcall 57 .............................. <script("Floor")>
  [186] pusharglist 1 ........................... <script("Floor")>
  [188] objcall 0 ............................... <script("Floor").new()>
  [190] setobjprop 118 .......................... me.oFloor = script("Floor").new()
  [192] getparam 0 .............................. <me>
  [194] pushcons 10 ............................. <"Wall">
  [196] pusharglist 1 ........................... <"Wall">
  [198] extcall 57 .............................. <script("Wall")>
  [200] pusharglist 1 ........................... <script("Wall")>
  [202] objcall 0 ............................... <script("Wall").new()>
  [204] setobjprop 119 .......................... me.oWall = script("Wall").new()
  [206] getparam 0 .............................. <me>
  [208] pushcons 11 ............................. <"Door">
  [210] pusharglist 1 ........................... <"Door">
  [212] extcall 57 .............................. <script("Door")>
  [214] pusharglist 1 ........................... <script("Door")>
  [216] objcall 0 ............................... <script("Door").new()>
  [218] setobjprop 120 .......................... me.oDoor = script("Door").new()
  [220] getparam 0 .............................. <me>
  [222] pushcons 12 ............................. <"Window">
  [224] pusharglist 1 ........................... <"Window">
  [226] extcall 57 .............................. <script("Window")>
  [228] pusharglist 1 ........................... <script("Window")>
  [230] objcall 0 ............................... <script("Window").new()>
  [232] setobjprop 121 .......................... me.oWindow = script("Window").new()
  [234] getparam 0 .............................. <me>
  [236] pushcons 13 ............................. <"WallItems">
  [238] pusharglist 1 ........................... <"WallItems">
  [240] extcall 57 .............................. <script("WallItems")>
  [242] pusharglist 1 ........................... <script("WallItems")>
  [244] objcall 0 ............................... <script("WallItems").new()>
  [246] setobjprop 122 .......................... me.oWallItems = script("WallItems").new()
  [248] getparam 0 .............................. <me>
  [250] pushcons 14 ............................. <"Rugs">
  [252] pusharglist 1 ........................... <"Rugs">
  [254] extcall 57 .............................. <script("Rugs")>
  [256] pusharglist 1 ........................... <script("Rugs")>
  [258] objcall 0 ............................... <script("Rugs").new()>
  [260] setobjprop 123 .......................... me.oRugs = script("Rugs").new()
  [262] getparam 0 .............................. <me>
  [264] pushcons 15 ............................. <"Hiliter">
  [266] pusharglist 1 ........................... <"Hiliter">
  [268] extcall 57 .............................. <script("Hiliter")>
  [270] pusharglist 1 ........................... <script("Hiliter")>
  [272] objcall 0 ............................... <script("Hiliter").new()>
  [274] setobjprop 124 .......................... me.oHiliter = script("Hiliter").new()
  [276] getparam 0 .............................. <me>
  [278] pushcons 16 ............................. <"Furniture">
  [280] pusharglist 1 ........................... <"Furniture">
  [282] extcall 57 .............................. <script("Furniture")>
  [284] pusharglist 1 ........................... <script("Furniture")>
  [286] objcall 0 ............................... <script("Furniture").new()>
  [288] setobjprop 125 .......................... me.oFurniture = script("Furniture").new()
  [290] getparam 0 .............................. <me>
  [292] pushcons 17 ............................. <"StaticItems">
  [294] pusharglist 1 ........................... <"StaticItems">
  [296] extcall 57 .............................. <script("StaticItems")>
  [298] pusharglist 1 ........................... <script("StaticItems")>
  [300] objcall 0 ............................... <script("StaticItems").new()>
  [302] setobjprop 126 .......................... me.oStaticItems = script("StaticItems").new()
  [304] getparam 0 .............................. <me>
  [306] pushcons 18 ............................. <"Avatars">
  [308] pusharglist 1 ........................... <"Avatars">
  [310] extcall 57 .............................. <script("Avatars")>
  [312] pusharglist 1 ........................... <script("Avatars")>
  [314] objcall 0 ............................... <script("Avatars").new()>
  [316] setobjprop 127 .......................... me.oAvatars = script("Avatars").new()
  [318] getparam 0 .............................. <me>
  [320] pushcons 19 ............................. <"StudioInfo">
  [322] pusharglist 1 ........................... <"StudioInfo">
  [324] extcall 57 .............................. <script("StudioInfo")>
  [326] pusharglist 1 ........................... <script("StudioInfo")>
  [328] objcall 0 ............................... <script("StudioInfo").new()>
  [330] setobjprop 128 .......................... me.oStudioInfo = script("StudioInfo").new()
  [332] getparam 0 .............................. <me>
  [334] pushcons 20 ............................. <"InfoStandObject">
  [336] pusharglist 1 ........................... <"InfoStandObject">
  [338] extcall 57 .............................. <script("InfoStandObject")>
  [340] pusharglist 1 ........................... <script("InfoStandObject")>
  [342] objcall 0 ............................... <script("InfoStandObject").new()>
  [344] setobjprop 129 .......................... me.oInfoStand = script("InfoStandObject").new()
  [346] getparam 0 .............................. <me>
  [348] pushcons 21 ............................. <"VoteItems">
  [350] pusharglist 1 ........................... <"VoteItems">
  [352] extcall 57 .............................. <script("VoteItems")>
  [354] pusharglist 1 ........................... <script("VoteItems")>
  [356] objcall 0 ............................... <script("VoteItems").new()>
  [358] setobjprop 130 .......................... me.oVoteItems = script("VoteItems").new()
  [360] getparam 0 .............................. <me>
  [362] pushcons 22 ............................. <"TRIVIA">
  [364] pusharglist 1 ........................... <"TRIVIA">
  [366] extcall 57 .............................. <script("TRIVIA")>
  [368] pusharglist 1 ........................... <script("TRIVIA")>
  [370] objcall 0 ............................... <script("TRIVIA").new()>
  [372] setobjprop 131 .......................... me.oTrivia = script("TRIVIA").new()
  [374] getlocal 0 .............................. <oScene>
  [376] pusharglist 1 ........................... <oScene>
  [378] extcall 106 ............................. <voidp(oScene)>
  [380] not ..................................... <not voidp(oScene)>
  [381] jmpifz [392] ............................ if not voidp(oScene) then
  [384] getparam 0 .............................. <me>
  [386] getlocal 0 .............................. <oScene>
  [388] pusharglistnoret 2 ...................... <me, oScene>
  [390] objcall 45 .............................. me.initScene(oScene)
  [392] getparam 0 .............................. <me>
  [394] pusharglist 0 ........................... <>
  [396] extcall 132 ............................. <VOID>
  [398] setobjprop 133 .......................... me.oSelectedItem = VOID
  [400] getmovieprop 134 ........................ <the actorList>
  [402] getparam 0 .............................. <me>
  [404] pusharglistnoret 2 ...................... <the actorList, me>
  [406] objcall 135 ............................. (the actorList).add(me)
  [408] ret
end

on lockDisplay me, bState
  [  0] getparam 1 .............................. <bState>
  [  2] setmovieprop 141 ........................ the updateLock = bState
  [  4] getparam 1 .............................. <bState>
  [  6] not ..................................... <not bState>
  [  7] jmpifz [ 32] ............................ if not bState then
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 122 .......................... <me.oWallItems>
  [ 14] pusharglist 1 ........................... <me.oWallItems>
  [ 16] extcall 106 ............................. <voidp(me.oWallItems)>
  [ 18] not ..................................... <not voidp(me.oWallItems)>
  [ 19] jmpifz [ 32] ............................ if not voidp(me.oWallItems) then
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 122 ...................... <me.oWallItems>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 2 ...................... <me.oWallItems, 1>
  [ 30] objcall 142 ............................. me.oWallItems.drawAll(1)
  [ 32] ret
end

on setSequenceRate me, _iSequenceRate
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 23 ............................. <"setSequenceRate() ">
  [  4] getparam 1 .............................. <_iSequenceRate>
  [  6] joinstr ................................. <"setSequenceRate() " & _iSequenceRate>
  [  7] pusharglistnoret 2 ...................... <me, "setSequenceRate() " & _iSequenceRate>
  [  9] objcall 50 .............................. me.debug("setSequenceRate() " & _iSequenceRate)
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 1 .............................. <_iSequenceRate>
  [ 15] pushint8 100 ............................ <100>
  [ 17] pushcons 24 ............................. <0.01>
  [ 19] mul ..................................... <100 * 0.01>
  [ 20] mul ..................................... <_iSequenceRate * (100 * 0.01)>
  [ 21] setobjprop 86 ........................... me.iSequenceRate = _iSequenceRate * (100 * 0.01)
  [ 23] ret
end

on getSequenceRate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 86 ........................... <me.iSequenceRate>
  [  4] pusharglistnoret 1 ...................... <me.iSequenceRate>
  [  6] extcall 93 .............................. return me.iSequenceRate
  [  8] ret
end

on getEntryXml me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 105 .......................... <me.oEntryXml>
  [  4] pusharglistnoret 1 ...................... <me.oEntryXml>
  [  6] extcall 93 .............................. return me.oEntryXml
  [  8] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 39 .............................. <me.calcMouseToGridPoint()>
  [  8] setobjprop 145 .......................... me.oMouseGridPoint = me.calcMouseToGridPoint()
  [ 10] getparam 0 .............................. <me>
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 115 ...................... <me.oGrid>
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 145 ...................... <me.oMouseGridPoint>
  [ 20] getobjprop 146 .......................... <me.oMouseGridPoint.x>
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 145 ...................... <me.oMouseGridPoint>
  [ 26] getobjprop 147 .......................... <me.oMouseGridPoint.z>
  [ 28] pusharglist 3 ........................... <me.oGrid, me.oMouseGridPoint.x, me.oMouseGridPoint.z>
  [ 30] objcall 148 ............................. <me.oGrid.getSquareByXZ(me.oMouseGridPoint.x, me.oMouseGridPoint.z)>
  [ 32] setobjprop 149 .......................... me.oMouseSquare = me.oGrid.getSquareByXZ(me.oMouseGridPoint.x, me.oMouseGridPoint.z)
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglistnoret 1 ...................... <me>
  [ 38] objcall 8 ............................... me.processRoomRollover()
  [ 40] ret
end

on processRoomRollover me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 52 .............................. <me.getSpritesUnderMouse()>
  [  6] setlocal 0 .............................. aSpriteList = me.getSpritesUnderMouse()
  [  8] getlocal 0 .............................. <aSpriteList>
  [ 10] pusharglist 1 ........................... <aSpriteList>
  [ 12] extcall 106 ............................. <voidp(aSpriteList)>
  [ 14] not ..................................... <not voidp(aSpriteList)>
  [ 15] jmpifz [155] ............................ if not voidp(aSpriteList) then / else
  [ 18] getlocal 0 .............................. <aSpriteList>
  [ 20] getobjprop 150 .......................... <aSpriteList.count>
  [ 22] pushzero ................................ <0>
  [ 23] gt ...................................... <aSpriteList.count > 0>
  [ 24] jmpifz [148] ............................ if aSpriteList.count > 0 then / else
  [ 27] getlocal 0 .............................. <aSpriteList>
  [ 29] getlocal 0 .............................. <aSpriteList>
  [ 31] getobjprop 150 .......................... <aSpriteList.count>
  [ 33] pusharglist 2 ........................... <aSpriteList, aSpriteList.count>
  [ 35] objcall 151 ............................. <aSpriteList[aSpriteList.count]>
  [ 37] setlocal 1 .............................. iSpriteNum = aSpriteList[aSpriteList.count]
  [ 39] getlocal 1 .............................. <iSpriteNum>
  [ 41] pushsymb 153 ............................ <#getController>
  [ 43] pusharglist 2 ........................... <iSpriteNum, #getController>
  [ 45] extcall 152 ............................. <sendSprite(iSpriteNum, #getController)>
  [ 47] setlocal 2 .............................. oSpriteItem = sendSprite(iSpriteNum, #getController)
  [ 49] getlocal 2 .............................. <oSpriteItem>
  [ 51] pusharglist 1 ........................... <oSpriteItem>
  [ 53] extcall 106 ............................. <voidp(oSpriteItem)>
  [ 55] not ..................................... <not voidp(oSpriteItem)>
  [ 56] jmpifz [141] ............................ if not voidp(oSpriteItem) then / else
  [ 59] getlocal 2 .............................. <oSpriteItem>
  [ 61] pusharglist 1 ........................... <oSpriteItem>
  [ 63] objcall 154 ............................. <oSpriteItem.isAvatar()>
  [ 65] jmpifz [ 79] ............................ if oSpriteItem.isAvatar() then / else
  [ 68] getlocal 2 .............................. <oSpriteItem>
  [ 70] pusharglist 1 ........................... <oSpriteItem>
  [ 72] objcall 155 ............................. <oSpriteItem.getScreenName()>
  [ 74] setlocal 3 .............................. sName = oSpriteItem.getScreenName()
  [ 76] jmp [138]
  [ 79] getglobal 156 ........................... <oStudioMap>
  [ 81] pusharglist 1 ........................... <oStudioMap>
  [ 83] extcall 106 ............................. <voidp(oStudioMap)>
  [ 85] not ..................................... <not voidp(oStudioMap)>
  [ 86] jmpifz [138] ............................ if not voidp(oStudioMap) then
  [ 89] getglobal 156 ........................... <oStudioMap>
  [ 91] pusharglist 1 ........................... <oStudioMap>
  [ 93] objcall 157 ............................. <oStudioMap.isPrivate()>
  [ 95] jmpifz [138] ............................ if oStudioMap.isPrivate() then
  [ 98] getglobal 158 ........................... <gCatalog>
  [100] getlocal 2 .............................. <oSpriteItem>
  [102] pusharglist 1 ........................... <oSpriteItem>
  [104] objcall 159 ............................. <oSpriteItem.getProdId()>
  [106] pusharglist 2 ........................... <gCatalog, oSpriteItem.getProdId()>
  [108] objcall 160 ............................. <gCatalog.getItemByProdId(oSpriteItem.getProdId())>
  [110] setlocal 4 .............................. aCatalogItem = gCatalog.getItemByProdId(oSpriteItem.getProdId())
  [112] getlocal 4 .............................. <aCatalogItem>
  [114] pusharglist 1 ........................... <aCatalogItem>
  [116] extcall 106 ............................. <voidp(aCatalogItem)>
  [118] jmpifz [128] ............................ if voidp(aCatalogItem) then / else
  [121] pushcons 4 .............................. <EMPTY>
  [123] setlocal 3 .............................. sName = EMPTY
  [125] jmp [138]
  [128] getlocal 4 .............................. <aCatalogItem>
  [130] pushsymb 161 ............................ <#name>
  [132] pusharglist 2 ........................... <aCatalogItem, #name>
  [134] objcall 151 ............................. <aCatalogItem[#name]>
  [136] setlocal 3 .............................. sName = aCatalogItem[#name]
  [138] jmp [145]
  [141] pushcons 4 .............................. <EMPTY>
  [143] setlocal 3 .............................. sName = EMPTY
  [145] jmp [152]
  [148] pushcons 4 .............................. <EMPTY>
  [150] setlocal 3 .............................. sName = EMPTY
  [152] jmp [159]
  [155] pushcons 4 .............................. <EMPTY>
  [157] setlocal 3 .............................. sName = EMPTY
  [159] getlocal 3 .............................. <sName>
  [161] pusharglist 1 ........................... <sName>
  [163] extcall 162 ............................. <string(sName)>
  [165] setlocal 3 .............................. sName = string(sName)
  [167] getparam 0 .............................. <me>
  [169] getobjprop 92 ........................... <me.sLastRolloverItemName>
  [171] getlocal 3 .............................. <sName>
  [173] nteq .................................... <me.sLastRolloverItemName <> sName>
  [174] jmpifz [193] ............................ if me.sLastRolloverItemName <> sName then
  [177] pushcons 25 ............................. <"cb.rolldisplay">
  [179] pusharglist 1 ........................... <"cb.rolldisplay">
  [181] extcall 163 ............................. <member("cb.rolldisplay")>
  [183] getlocal 3 .............................. <sName>
  [185] setobjprop 164 .......................... member("cb.rolldisplay").text = sName
  [187] getparam 0 .............................. <me>
  [189] getlocal 3 .............................. <sName>
  [191] setobjprop 92 ........................... me.sLastRolloverItemName = sName
  [193] ret
end

on clickAllowed me
  [  0] getmovieprop 89 ......................... <the milliSeconds>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 90 ........................... <me.iLastClickTime>
  [  6] sub ..................................... <the milliSeconds - me.iLastClickTime>
  [  7] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iLastClickTime
  [  9] getlocal 0 .............................. <iElapsedTime>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 91 ........................... <me.iAllowedClickTime>
  [ 15] gt ...................................... <iElapsedTime > me.iAllowedClickTime>
  [ 16] jmpifz [ 31] ............................ if iElapsedTime > me.iAllowedClickTime then
  [ 19] getparam 0 .............................. <me>
  [ 21] getmovieprop 89 ......................... <the milliSeconds>
  [ 23] setobjprop 90 ........................... me.iLastClickTime = the milliSeconds
  [ 25] pushint8 1 .............................. <1>
  [ 27] pusharglistnoret 1 ...................... <1>
  [ 29] extcall 93 .............................. return 1
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 93 .............................. return 0
  [ 36] ret
end

on mouseDownEvent me, bDoubleClick
  [  0] pushcons 26 ............................. <"IsoScene.mouseDownEvent()">
  [  2] pusharglistnoret 1 ...................... <"IsoScene.mouseDownEvent()">
  [  4] extcall 274 ............................. put "IsoScene.mouseDownEvent()"
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 9 ............................... <me.clickAllowed()>
  [ 13] setlocal 0 .............................. bClickAllowed = me.clickAllowed()
  [ 15] getparam 1 .............................. <bDoubleClick>
  [ 17] not ..................................... <not bDoubleClick>
  [ 18] jmpifz [ 31] ............................ if not bDoubleClick then
  [ 21] getlocal 0 .............................. <bClickAllowed>
  [ 23] not ..................................... <not bClickAllowed>
  [ 24] jmpifz [ 31] ............................ if not bClickAllowed then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 93 .............................. return 
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 133 .......................... <me.oSelectedItem>
  [ 35] pusharglist 1 ........................... <me.oSelectedItem>
  [ 37] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [ 39] not ..................................... <not voidp(me.oSelectedItem)>
  [ 40] jmpifz [109] ............................ if not voidp(me.oSelectedItem) then
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 47] pusharglist 1 ........................... <me.oSelectedItem>
  [ 49] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [ 51] jmpifz [109] ............................ if me.oSelectedItem.getDrag() then
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 58] pusharglist 1 ........................... <me.oSelectedItem>
  [ 60] objcall 172 ............................. <me.oSelectedItem.isWallItem()>
  [ 62] jmpifz [ 84] ............................ if me.oSelectedItem.isWallItem() then
  [ 65] getparam 0 .............................. <me>
  [ 67] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 69] pusharglist 1 ........................... <me.oSelectedItem>
  [ 71] objcall 173 ............................. <me.oSelectedItem.testTradeDrop()>
  [ 73] setlocal 1 .............................. bDropped = me.oSelectedItem.testTradeDrop()
  [ 75] getlocal 1 .............................. <bDropped>
  [ 77] jmpifz [ 84] ............................ if bDropped then
  [ 80] pusharglistnoret 0 ...................... <>
  [ 82] extcall 93 .............................. return 
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglist 1 ........................... <me>
  [ 88] objcall 33 .............................. <me.dropSelectedItem()>
  [ 90] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [ 92] getlocal 1 .............................. <bDropped>
  [ 94] jmpifz [109] ............................ if bDropped then
  [ 97] getparam 0 .............................. <me>
  [ 99] pusharglist 0 ........................... <>
  [101] extcall 132 ............................. <VOID>
  [103] setobjprop 133 .......................... me.oSelectedItem = VOID
  [105] pusharglistnoret 0 ...................... <>
  [107] extcall 93 .............................. return 
  [109] getglobal 174 ........................... <ElementMgr>
  [111] pusharglist 1 ........................... <ElementMgr>
  [113] objcall 175 ............................. <ElementMgr.mouseIsOverWindow()>
  [115] jmpifz [122] ............................ if ElementMgr.mouseIsOverWindow() then
  [118] pusharglistnoret 0 ...................... <>
  [120] extcall 93 .............................. return 
  [122] getparam 0 .............................. <me>
  [124] getparam 1 .............................. <bDoubleClick>
  [126] pusharglist 2 ........................... <me, bDoubleClick>
  [128] objcall 13 .............................. <me.broadCastMouseEvent(bDoubleClick)>
  [130] setlocal 2 .............................. bItemSelected = me.broadCastMouseEvent(bDoubleClick)
  [132] getlocal 2 .............................. <bItemSelected>
  [134] jmpifz [143] ............................ if bItemSelected then
  [137] pushint8 1 .............................. <1>
  [139] pusharglistnoret 1 ...................... <1>
  [141] extcall 93 .............................. return 1
  [143] getparam 0 .............................. <me>
  [145] getchainedprop 120 ...................... <me.oDoor>
  [147] pusharglist 1 ........................... <me.oDoor>
  [149] objcall 176 ............................. <me.oDoor.mouseOverDoor()>
  [151] setlocal 3 .............................. bDoorSelected = me.oDoor.mouseOverDoor()
  [153] getlocal 3 .............................. <bDoorSelected>
  [155] jmpifz [172] ............................ if bDoorSelected then
  [158] getparam 0 .............................. <me>
  [160] getchainedprop 120 ...................... <me.oDoor>
  [162] pusharglistnoret 1 ...................... <me.oDoor>
  [164] objcall 177 ............................. me.oDoor.exitSelected()
  [166] pushint8 1 .............................. <1>
  [168] pusharglistnoret 1 ...................... <1>
  [170] extcall 93 .............................. return 1
  [172] getparam 0 .............................. <me>
  [174] pusharglistnoret 1 ...................... <me>
  [176] objcall 12 .............................. me.clearInfoStand()
  [178] getparam 0 .............................. <me>
  [180] getobjprop 149 .......................... <me.oMouseSquare>
  [182] pusharglist 0 ........................... <>
  [184] extcall 132 ............................. <VOID>
  [186] nteq .................................... <me.oMouseSquare <> VOID>
  [187] jmpifz [300] ............................ if me.oMouseSquare <> VOID then
  [190] getparam 0 .............................. <me>
  [192] getchainedprop 116 ...................... <me.oMap>
  [194] getparam 0 .............................. <me>
  [196] getchainedprop 149 ...................... <me.oMouseSquare>
  [198] getobjprop 178 .......................... <me.oMouseSquare.iRow>
  [200] getparam 0 .............................. <me>
  [202] getchainedprop 149 ...................... <me.oMouseSquare>
  [204] getobjprop 179 .......................... <me.oMouseSquare.iCol>
  [206] pusharglist 3 ........................... <me.oMap, me.oMouseSquare.iRow, me.oMouseSquare.iCol>
  [208] objcall 180 ............................. <me.oMap.getNode(me.oMouseSquare.iRow, me.oMouseSquare.iCol)>
  [210] setlocal 4 .............................. oMapNode = me.oMap.getNode(me.oMouseSquare.iRow, me.oMouseSquare.iCol)
  [212] getlocal 4 .............................. <oMapNode>
  [214] pusharglist 1 ........................... <oMapNode>
  [216] extcall 106 ............................. <voidp(oMapNode)>
  [218] jmpifz [227] ............................ if voidp(oMapNode) then
  [221] pushint8 1 .............................. <1>
  [223] pusharglistnoret 1 ...................... <1>
  [225] extcall 93 .............................. return 1
  [227] getlocal 4 .............................. <oMapNode>
  [229] getobjprop 181 .......................... <oMapNode.w>
  [231] setlocal 5 .............................. iWeight = oMapNode.w
  [233] getlocal 5 .............................. <iWeight>
  [235] getparam 0 .............................. <me>
  [237] getchainedprop 116 ...................... <me.oMap>
  [239] getchainedprop 182 ...................... <me.oMap.oPathfinder>
  [241] getobjprop 183 .......................... <me.oMap.oPathfinder.W_BLOCKED>
  [243] eq ...................................... <iWeight = me.oMap.oPathfinder.W_BLOCKED>
  [244] getlocal 5 .............................. <iWeight>
  [246] getparam 0 .............................. <me>
  [248] getchainedprop 116 ...................... <me.oMap>
  [250] getchainedprop 182 ...................... <me.oMap.oPathfinder>
  [252] getobjprop 184 .......................... <me.oMap.oPathfinder.W_ENTER>
  [254] eq ...................................... <iWeight = me.oMap.oPathfinder.W_ENTER>
  [255] or ...................................... <(iWeight = me.oMap.oPathfinder.W_BLOCKED) or (iWeight = me.oMap.oPathfinder.W_ENTER)>
  [256] jmpifz [264] ............................ if (iWeight = me.oMap.oPathfinder.W_BLOCKED) or (iWeight = me.oMap.oPathfinder.W_ENTER) then
  [259] pushzero ................................ <0>
  [260] pusharglistnoret 1 ...................... <0>
  [262] extcall 93 .............................. return 0
  [264] getparam 0 .............................. <me>
  [266] pusharglist 1 ........................... <me>
  [268] objcall 33 .............................. <me.dropSelectedItem()>
  [270] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [272] getlocal 1 .............................. <bDropped>
  [274] jmpifz [288] ............................ if bDropped then / else
  [277] getparam 0 .............................. <me>
  [279] pusharglist 0 ........................... <>
  [281] extcall 132 ............................. <VOID>
  [283] setobjprop 133 .......................... me.oSelectedItem = VOID
  [285] jmp [294]
  [288] getparam 0 .............................. <me>
  [290] pusharglistnoret 1 ...................... <me>
  [292] objcall 17 .............................. me.moveAvatar()
  [294] pushint8 1 .............................. <1>
  [296] pusharglistnoret 1 ...................... <1>
  [298] extcall 93 .............................. return 1
  [300] pushzero ................................ <0>
  [301] pusharglistnoret 1 ...................... <0>
  [303] extcall 93 .............................. return 0
  [305] ret
end

on canMoveToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 127 ...................... <me.oAvatars>
  [  4] getparam 1 .............................. <_oSquare>
  [  6] pusharglist 2 ........................... <me.oAvatars, _oSquare>
  [  8] objcall 192 ............................. <me.oAvatars.getItemsAtSquare(_oSquare)>
  [ 10] setlocal 0 .............................. _aAvatars = me.oAvatars.getItemsAtSquare(_oSquare)
  [ 12] getlocal 0 .............................. <_aAvatars>
  [ 14] getobjprop 150 .......................... <_aAvatars.count>
  [ 16] pushzero ................................ <0>
  [ 17] gt ...................................... <_aAvatars.count > 0>
  [ 18] jmpifz [ 26] ............................ if _aAvatars.count > 0 then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 93 .............................. return 0
  [ 26] getglobal 88 ............................ <oIsoScene>
  [ 28] getchainedprop 116 ...................... <oIsoScene.oMap>
  [ 30] getparam 1 .............................. <_oSquare>
  [ 32] getobjprop 178 .......................... <_oSquare.iRow>
  [ 34] getparam 1 .............................. <_oSquare>
  [ 36] getobjprop 179 .......................... <_oSquare.iCol>
  [ 38] pusharglist 3 ........................... <oIsoScene.oMap, _oSquare.iRow, _oSquare.iCol>
  [ 40] objcall 180 ............................. <oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)>
  [ 42] setlocal 1 .............................. oMapNode = oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)
  [ 44] getlocal 1 .............................. <oMapNode>
  [ 46] getobjprop 181 .......................... <oMapNode.w>
  [ 48] setlocal 2 .............................. iWeight = oMapNode.w
  [ 50] getlocal 2 .............................. <iWeight>
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 116 ...................... <me.oMap>
  [ 56] getchainedprop 182 ...................... <me.oMap.oPathfinder>
  [ 58] getobjprop 193 .......................... <me.oMap.oPathfinder.W_QUEUE>
  [ 60] eq ...................................... <iWeight = me.oMap.oPathfinder.W_QUEUE>
  [ 61] jmpifz [149] ............................ if iWeight = me.oMap.oPathfinder.W_QUEUE then
  [ 64] getglobal 194 ........................... <gFeatureSet>
  [ 66] pushsymb 195 ............................ <#PERFORMANCE>
  [ 68] pusharglist 2 ........................... <gFeatureSet, #PERFORMANCE>
  [ 70] objcall 196 ............................. <gFeatureSet.isEnabled(#PERFORMANCE)>
  [ 72] not ..................................... <not gFeatureSet.isEnabled(#PERFORMANCE)>
  [ 73] jmpifz [ 88] ............................ if not gFeatureSet.isEnabled(#PERFORMANCE) then
  [ 76] getglobal 174 ........................... <ElementMgr>
  [ 78] pushcons 27 ............................. <"FEATURE_DISABLED">
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 82] objcall 197 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 84] pusharglistnoret 0 ...................... <>
  [ 86] extcall 93 .............................. return 
  [ 88] getglobal 198 ........................... <oDenizenManager>
  [ 90] pusharglist 1 ........................... <oDenizenManager>
  [ 92] objcall 199 ............................. <oDenizenManager.getBackpack()>
  [ 94] setlocal 3 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 96] getlocal 3 .............................. <oBackPack>
  [ 98] pusharglist 1 ........................... <oBackPack>
  [100] extcall 106 ............................. <voidp(oBackPack)>
  [102] jmpifz [110] ............................ if voidp(oBackPack) then
  [105] pushzero ................................ <0>
  [106] pusharglistnoret 1 ...................... <0>
  [108] extcall 93 .............................. return 0
  [110] getlocal 3 .............................. <oBackPack>
  [112] pusharglist 1 ........................... <oBackPack>
  [114] objcall 200 ............................. <oBackPack.getNumberOfBurnedCds()>
  [116] setlocal 4 .............................. iBurnedCds = oBackPack.getNumberOfBurnedCds()
  [118] getlocal 4 .............................. <iBurnedCds>
  [120] pushzero ................................ <0>
  [121] gt ...................................... <iBurnedCds > 0>
  [122] jmpifz [134] ............................ if iBurnedCds > 0 then / else
  [125] pushint8 1 .............................. <1>
  [127] pusharglistnoret 1 ...................... <1>
  [129] extcall 93 .............................. return 1
  [131] jmp [149]
  [134] getglobal 174 ........................... <ElementMgr>
  [136] pushcons 28 ............................. <"NOCD_TITLE">
  [138] pushcons 29 ............................. <"NOCD_DESC">
  [140] pusharglistnoret 3 ...................... <ElementMgr, "NOCD_TITLE", "NOCD_DESC">
  [142] objcall 197 ............................. ElementMgr.alert("NOCD_TITLE", "NOCD_DESC")
  [144] pushzero ................................ <0>
  [145] pusharglistnoret 1 ...................... <0>
  [147] extcall 93 .............................. return 0
  [149] getparam 0 .............................. <me>
  [151] getchainedprop 125 ...................... <me.oFurniture>
  [153] getparam 1 .............................. <_oSquare>
  [155] pusharglist 2 ........................... <me.oFurniture, _oSquare>
  [157] objcall 201 ............................. <me.oFurniture.getItemAtSquareWithGreatestHeightOffset(_oSquare)>
  [159] setlocal 5 .............................. _oItem = me.oFurniture.getItemAtSquareWithGreatestHeightOffset(_oSquare)
  [161] getlocal 5 .............................. <_oItem>
  [163] pusharglist 1 ........................... <_oItem>
  [165] extcall 106 ............................. <voidp(_oItem)>
  [167] jmpifz [176] ............................ if voidp(_oItem) then
  [170] pushint8 1 .............................. <1>
  [172] pusharglistnoret 1 ...................... <1>
  [174] extcall 93 .............................. return 1
  [176] getparam 0 .............................. <me>
  [178] getchainedprop 125 ...................... <me.oFurniture>
  [180] getlocal 5 .............................. <_oItem>
  [182] pusharglist 2 ........................... <me.oFurniture, _oItem>
  [184] objcall 202 ............................. <me.oFurniture.isSeatableItem(_oItem)>
  [186] setlocal 6 .............................. bIsSeatable = me.oFurniture.isSeatableItem(_oItem)
  [188] getlocal 6 .............................. <bIsSeatable>
  [190] jmpifz [199] ............................ if bIsSeatable then
  [193] pushint8 1 .............................. <1>
  [195] pusharglistnoret 1 ...................... <1>
  [197] extcall 93 .............................. return 1
  [199] getlocal 5 .............................. <_oItem>
  [201] pusharglist 1 ........................... <_oItem>
  [203] objcall 159 ............................. <_oItem.getProdId()>
  [205] getparam 0 .............................. <me>
  [207] getchainedprop 58 ....................... <me.oIsoConstants>
  [209] getobjprop 203 .......................... <me.oIsoConstants.BURNED_CD>
  [211] eq ...................................... <_oItem.getProdId() = me.oIsoConstants.BURNED_CD>
  [212] jmpifz [232] ............................ if _oItem.getProdId() = me.oIsoConstants.BURNED_CD then
  [215] getlocal 5 .............................. <_oItem>
  [217] pusharglist 1 ........................... <_oItem>
  [219] objcall 204 ............................. <_oItem.getHeightOffset()>
  [221] pushzero ................................ <0>
  [222] eq ...................................... <_oItem.getHeightOffset() = 0>
  [223] jmpifz [232] ............................ if _oItem.getHeightOffset() = 0 then
  [226] pushint8 1 .............................. <1>
  [228] pusharglistnoret 1 ...................... <1>
  [230] extcall 93 .............................. return 1
  [232] getlocal 5 .............................. <_oItem>
  [234] pusharglist 1 ........................... <_oItem>
  [236] objcall 205 ............................. <_oItem.getType()>
  [238] pushcons 30 ............................. <"Teleport">
  [240] eq ...................................... <_oItem.getType() = "Teleport">
  [241] jmpifz [331] ............................ if _oItem.getType() = "Teleport" then
  [244] getparam 0 .............................. <me>
  [246] getchainedprop 127 ...................... <me.oAvatars>
  [248] getglobal 198 ........................... <oDenizenManager>
  [250] pusharglist 1 ........................... <oDenizenManager>
  [252] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [254] pusharglist 2 ........................... <me.oAvatars, oDenizenManager.getScreenName()>
  [256] objcall 206 ............................. <me.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [258] setlocal 7 .............................. oMyAvatar = me.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [260] getlocal 7 .............................. <oMyAvatar>
  [262] pusharglist 1 ........................... <oMyAvatar>
  [264] extcall 106 ............................. <voidp(oMyAvatar)>
  [266] jmpifz [275] ............................ if voidp(oMyAvatar) then
  [269] pushint8 1 .............................. <1>
  [271] pusharglistnoret 1 ...................... <1>
  [273] extcall 93 .............................. return 1
  [275] getlocal 7 .............................. <oMyAvatar>
  [277] pusharglist 1 ........................... <oMyAvatar>
  [279] objcall 207 ............................. <oMyAvatar.getSquare()>
  [281] setlocal 8 .............................. oMySquare = oMyAvatar.getSquare()
  [283] getlocal 8 .............................. <oMySquare>
  [285] pusharglist 1 ........................... <oMySquare>
  [287] extcall 106 ............................. <voidp(oMySquare)>
  [289] jmpifz [298] ............................ if voidp(oMySquare) then
  [292] pushint8 1 .............................. <1>
  [294] pusharglistnoret 1 ...................... <1>
  [296] extcall 93 .............................. return 1
  [298] getparam 0 .............................. <me>
  [300] getchainedprop 125 ...................... <me.oFurniture>
  [302] getlocal 8 .............................. <oMySquare>
  [304] pusharglist 2 ........................... <me.oFurniture, oMySquare>
  [306] objcall 208 ............................. <me.oFurniture.getTeleporterAtSquare(oMySquare)>
  [308] setlocal 9 .............................. oTeleporter = me.oFurniture.getTeleporterAtSquare(oMySquare)
  [310] getlocal 9 .............................. <oTeleporter>
  [312] pusharglist 1 ........................... <oTeleporter>
  [314] extcall 106 ............................. <voidp(oTeleporter)>
  [316] not ..................................... <not voidp(oTeleporter)>
  [317] jmpifz [325] ............................ if not voidp(oTeleporter) then
  [320] pushzero ................................ <0>
  [321] pusharglistnoret 1 ...................... <0>
  [323] extcall 93 .............................. return 0
  [325] pushint8 1 .............................. <1>
  [327] pusharglistnoret 1 ...................... <1>
  [329] extcall 93 .............................. return 1
  [331] pushint8 1 .............................. <1>
  [333] pusharglistnoret 1 ...................... <1>
  [335] extcall 93 .............................. return 1
  [337] ret
end

on clearInfoStand me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 129 ...................... <me.oInfoStand>
  [  4] pusharglistnoret 1 ...................... <me.oInfoStand>
  [  6] objcall 12 .............................. me.oInfoStand.clearInfoStand()
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 218 .......................... <me.oAvatarIndicator>
  [ 12] pusharglist 1 ........................... <me.oAvatarIndicator>
  [ 14] extcall 106 ............................. <voidp(me.oAvatarIndicator)>
  [ 16] not ..................................... <not voidp(me.oAvatarIndicator)>
  [ 17] jmpifz [ 36] ............................ if not voidp(me.oAvatarIndicator) then
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 218 ...................... <me.oAvatarIndicator>
  [ 24] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [ 26] objcall 219 ............................. me.oAvatarIndicator.destroyItem()
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 0 ........................... <>
  [ 32] extcall 132 ............................. <VOID>
  [ 34] setobjprop 218 .......................... me.oAvatarIndicator = VOID
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 15 .............................. me.displayCdPlaying()
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 1 ...................... <me>
  [ 46] objcall 16 .............................. me.displaySongPlaying()
  [ 48] ret
end

on broadCastMouseEvent me, bDoubleClick
  [  0] pushcons 31 ............................. <"received broadcastMouseEvent">
  [  2] pusharglistnoret 1 ...................... <"received broadcastMouseEvent">
  [  4] extcall 274 ............................. put "received broadcastMouseEvent"
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 52 .............................. <me.getSpritesUnderMouse()>
  [ 13] setlocal 0 .............................. aSpritesUnderMouse = me.getSpritesUnderMouse()
  [ 15] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 17] pusharglist 1 ........................... <aSpritesUnderMouse>
  [ 19] objcall 150 ............................. <aSpritesUnderMouse.count()>
  [ 21] setlocal 1 .............................. iCount = aSpritesUnderMouse.count()
  [ 23] getlocal 1 .............................. <iCount>
  [ 25] pushzero ................................ <0>
  [ 26] eq ...................................... <iCount = 0>
  [ 27] jmpifz [ 35] ............................ if iCount = 0 then
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 93 .............................. return 0
  [ 35] getlocal 1 .............................. <iCount>
  [ 37] setlocal 2
  [ 39] getlocal 2
  [ 41] pushint8 1 .............................. <1>
  [ 43] gteq
  [ 44] jmpifz [234] ............................ repeat with i = iCount down to 1
  [ 47] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 49] getlocal 2 .............................. <i>
  [ 51] pusharglist 2 ........................... <aSpritesUnderMouse, i>
  [ 53] objcall 151 ............................. <aSpritesUnderMouse[i]>
  [ 55] setlocal 3 .............................. iSpriteNum = aSpritesUnderMouse[i]
  [ 57] getlocal 3 .............................. <iSpriteNum>
  [ 59] pushsymb 153 ............................ <#getController>
  [ 61] pusharglist 2 ........................... <iSpriteNum, #getController>
  [ 63] extcall 152 ............................. <sendSprite(iSpriteNum, #getController)>
  [ 65] setlocal 4 .............................. oSpriteItem = sendSprite(iSpriteNum, #getController)
  [ 67] getlocal 4 .............................. <oSpriteItem>
  [ 69] pusharglist 1 ........................... <oSpriteItem>
  [ 71] extcall 106 ............................. <voidp(oSpriteItem)>
  [ 73] jmpifz [ 79] ............................ if voidp(oSpriteItem) then
  [ 76] jmp [225] ............................... next repeat
  [ 79] pusharglist 0 ........................... <>
  [ 81] extcall 132 ............................. <VOID>
  [ 83] setlocal 5 .............................. oItem = VOID
  [ 85] getlocal 4 .............................. <oSpriteItem>
  [ 87] pusharglist 1 ........................... <oSpriteItem>
  [ 89] objcall 154 ............................. <oSpriteItem.isAvatar()>
  [ 91] jmpifz [110] ............................ if oSpriteItem.isAvatar() then
  [ 94] getparam 0 .............................. <me>
  [ 96] getchainedprop 127 ...................... <me.oAvatars>
  [ 98] getlocal 4 .............................. <oSpriteItem>
  [100] pusharglist 1 ........................... <oSpriteItem>
  [102] objcall 155 ............................. <oSpriteItem.getScreenName()>
  [104] pusharglist 2 ........................... <me.oAvatars, oSpriteItem.getScreenName()>
  [106] objcall 206 ............................. <me.oAvatars.getAvatar(oSpriteItem.getScreenName())>
  [108] setlocal 5 .............................. oItem = me.oAvatars.getAvatar(oSpriteItem.getScreenName())
  [110] getlocal 4 .............................. <oSpriteItem>
  [112] pusharglist 1 ........................... <oSpriteItem>
  [114] objcall 220 ............................. <oSpriteItem.isFurniItem()>
  [116] jmpifz [163] ............................ if oSpriteItem.isFurniItem() then
  [119] getlocal 4 .............................. <oSpriteItem>
  [121] pusharglist 1 ........................... <oSpriteItem>
  [123] objcall 221 ............................. <oSpriteItem.isRugITem()>
  [125] jmpifz [147] ............................ if oSpriteItem.isRugITem() then / else
  [128] getparam 0 .............................. <me>
  [130] getchainedprop 123 ...................... <me.oRugs>
  [132] getlocal 4 .............................. <oSpriteItem>
  [134] pusharglist 1 ........................... <oSpriteItem>
  [136] objcall 222 ............................. <oSpriteItem.getPosId()>
  [138] pusharglist 2 ........................... <me.oRugs, oSpriteItem.getPosId()>
  [140] objcall 37 .............................. <me.oRugs.getItemByPossessionId(oSpriteItem.getPosId())>
  [142] setlocal 5 .............................. oItem = me.oRugs.getItemByPossessionId(oSpriteItem.getPosId())
  [144] jmp [163]
  [147] getparam 0 .............................. <me>
  [149] getchainedprop 125 ...................... <me.oFurniture>
  [151] getlocal 4 .............................. <oSpriteItem>
  [153] pusharglist 1 ........................... <oSpriteItem>
  [155] objcall 222 ............................. <oSpriteItem.getPosId()>
  [157] pusharglist 2 ........................... <me.oFurniture, oSpriteItem.getPosId()>
  [159] objcall 37 .............................. <me.oFurniture.getItemByPossessionId(oSpriteItem.getPosId())>
  [161] setlocal 5 .............................. oItem = me.oFurniture.getItemByPossessionId(oSpriteItem.getPosId())
  [163] getlocal 4 .............................. <oSpriteItem>
  [165] pusharglist 1 ........................... <oSpriteItem>
  [167] objcall 172 ............................. <oSpriteItem.isWallItem()>
  [169] jmpifz [188] ............................ if oSpriteItem.isWallItem() then
  [172] getparam 0 .............................. <me>
  [174] getchainedprop 122 ...................... <me.oWallItems>
  [176] getlocal 4 .............................. <oSpriteItem>
  [178] pusharglist 1 ........................... <oSpriteItem>
  [180] objcall 222 ............................. <oSpriteItem.getPosId()>
  [182] pusharglist 2 ........................... <me.oWallItems, oSpriteItem.getPosId()>
  [184] objcall 37 .............................. <me.oWallItems.getItemByPossessionId(oSpriteItem.getPosId())>
  [186] setlocal 5 .............................. oItem = me.oWallItems.getItemByPossessionId(oSpriteItem.getPosId())
  [188] getlocal 5 .............................. <oItem>
  [190] pusharglist 1 ........................... <oItem>
  [192] extcall 106 ............................. <voidp(oItem)>
  [194] jmpifz [200] ............................ if voidp(oItem) then
  [197] jmp [225] ............................... next repeat
  [200] getparam 0 .............................. <me>
  [202] getlocal 5 .............................. <oItem>
  [204] getlocal 3 .............................. <iSpriteNum>
  [206] getparam 1 .............................. <bDoubleClick>
  [208] pusharglist 4 ........................... <me, oItem, iSpriteNum, bDoubleClick>
  [210] objcall 14 .............................. <me.handleMouseEvent(oItem, iSpriteNum, bDoubleClick)>
  [212] setlocal 6 .............................. bHandled = me.handleMouseEvent(oItem, iSpriteNum, bDoubleClick)
  [214] getlocal 6 .............................. <bHandled>
  [216] jmpifz [225] ............................ if bHandled then
  [219] pushint8 1 .............................. <1>
  [221] pusharglistnoret 1 ...................... <1>
  [223] extcall 93 .............................. return 1
  [225] pushint8 -1
  [227] getlocal 2
  [229] add
  [230] setlocal 2
  [232] endrepeat [ 39]
  [234] pushzero ................................ <0>
  [235] pusharglistnoret 1 ...................... <0>
  [237] extcall 93 .............................. return 0
  [239] ret
end

on handleMouseEvent me, oItem, iSpriteNum, bDoubleClick
  [  0] pushcons 32 ............................. <"received handleMouseEvent">
  [  2] pusharglistnoret 1 ...................... <"received handleMouseEvent">
  [  4] extcall 274 ............................. put "received handleMouseEvent"
  [  7] getparam 1 .............................. <oItem>
  [  9] getparam 2 .............................. <iSpriteNum>
  [ 11] getparam 3 .............................. <bDoubleClick>
  [ 13] pusharglist 3 ........................... <oItem, iSpriteNum, bDoubleClick>
  [ 15] objcall 10 .............................. <oItem.mouseDownEvent(iSpriteNum, bDoubleClick)>
  [ 17] setlocal 0 .............................. bHandled = oItem.mouseDownEvent(iSpriteNum, bDoubleClick)
  [ 19] getlocal 0 .............................. <bHandled>
  [ 21] jmpifz [ 32] ............................ if bHandled then
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <oItem>
  [ 28] pusharglistnoret 2 ...................... <me, oItem>
  [ 30] objcall 23 .............................. me.setSelectedItem(oItem)
  [ 32] getlocal 0 .............................. <bHandled>
  [ 34] pusharglistnoret 1 ...................... <bHandled>
  [ 36] extcall 93 .............................. return bHandled
  [ 38] ret
end

on displayCdPlaying me
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getglobal 228 ........................... <oStudio>
  [ 15] pusharglist 1 ........................... <oStudio>
  [ 17] objcall 229 ............................. <oStudio.getcdplayer()>
  [ 19] setlocal 0 .............................. oCdplayer = oStudio.getcdplayer()
  [ 21] getlocal 0 .............................. <oCdplayer>
  [ 23] pusharglist 1 ........................... <oCdplayer>
  [ 25] objcall 230 ............................. <oCdplayer.isPlaying()>
  [ 27] setlocal 1 .............................. bPlaying = oCdplayer.isPlaying()
  [ 29] getlocal 1 .............................. <bPlaying>
  [ 31] pushint8 1 .............................. <1>
  [ 33] eq ...................................... <bPlaying = 1>
  [ 34] jmpifz [ 55] ............................ if bPlaying = 1 then
  [ 37] getlocal 0 .............................. <oCdplayer>
  [ 39] pusharglist 1 ........................... <oCdplayer>
  [ 41] objcall 231 ............................. <oCdplayer.getCd()>
  [ 43] setlocal 2 .............................. oCd = oCdplayer.getCd()
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 129 ...................... <me.oInfoStand>
  [ 49] getlocal 2 .............................. <oCd>
  [ 51] pusharglistnoret 2 ...................... <me.oInfoStand, oCd>
  [ 53] objcall 232 ............................. me.oInfoStand.displayCd(oCd)
  [ 55] ret
end

on displaySongPlaying me
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getglobal 228 ........................... <oStudio>
  [ 15] getobjprop 236 .......................... <oStudio.foSongPlaying>
  [ 17] pusharglist 1 ........................... <oStudio.foSongPlaying>
  [ 19] extcall 106 ............................. <voidp(oStudio.foSongPlaying)>
  [ 21] pushzero ................................ <0>
  [ 22] eq ...................................... <voidp(oStudio.foSongPlaying) = 0>
  [ 23] jmpifz [ 50] ............................ if voidp(oStudio.foSongPlaying) = 0 then
  [ 26] getglobal 228 ........................... <oStudio>
  [ 28] getobjprop 236 .......................... <oStudio.foSongPlaying>
  [ 30] setlocal 0 .............................. oSong = oStudio.foSongPlaying
  [ 32] getglobal 228 ........................... <oStudio>
  [ 34] getobjprop 237 .......................... <oStudio.sIJsongplayer>
  [ 36] setlocal 1 .............................. sAvatar = oStudio.sIJsongplayer
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 129 ...................... <me.oInfoStand>
  [ 42] getlocal 0 .............................. <oSong>
  [ 44] getlocal 1 .............................. <sAvatar>
  [ 46] pusharglistnoret 3 ...................... <me.oInfoStand, oSong, sAvatar>
  [ 48] objcall 238 ............................. me.oInfoStand.displaySong(oSong, sAvatar)
  [ 50] ret
end

on moveAvatar me, oTargetSquare
  [  0] getparam 1 .............................. <oTargetSquare>
  [  2] pusharglist 1 ........................... <oTargetSquare>
  [  4] extcall 106 ............................. <voidp(oTargetSquare)>
  [  6] jmpifz [ 15] ............................ if voidp(oTargetSquare) then
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 149 .......................... <me.oMouseSquare>
  [ 13] setparam 1 .............................. oTargetSquare = me.oMouseSquare
  [ 15] getglobal 241 ........................... <oSession>
  [ 17] pusharglist 1 ........................... <oSession>
  [ 19] extcall 106 ............................. <voidp(oSession)>
  [ 21] jmpifz [ 81] ............................ if voidp(oSession) then
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 127 ...................... <me.oAvatars>
  [ 28] pushcons 33 ............................. <"Aslan">
  [ 30] pusharglist 2 ........................... <me.oAvatars, "Aslan">
  [ 32] objcall 206 ............................. <me.oAvatars.getAvatar("Aslan")>
  [ 34] setlocal 0 .............................. oAvatar = me.oAvatars.getAvatar("Aslan")
  [ 36] getlocal 0 .............................. <oAvatar>
  [ 38] pusharglist 1 ........................... <oAvatar>
  [ 40] extcall 106 ............................. <voidp(oAvatar)>
  [ 42] not ..................................... <not voidp(oAvatar)>
  [ 43] jmpifz [ 81] ............................ if not voidp(oAvatar) then
  [ 46] getlocal 0 .............................. <oAvatar>
  [ 48] getchainedprop 242 ...................... <oAvatar.oSquare>
  [ 50] getparam 1 .............................. <oTargetSquare>
  [ 52] pusharglist 2 ........................... <oAvatar.oSquare, oTargetSquare>
  [ 54] objcall 243 ............................. <oAvatar.oSquare.equals(oTargetSquare)>
  [ 56] jmpifz [ 63] ............................ if oAvatar.oSquare.equals(oTargetSquare) then
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 93 .............................. return 
  [ 63] getlocal 0 .............................. <oAvatar>
  [ 65] getparam 1 .............................. <oTargetSquare>
  [ 67] pusharglistnoret 2 ...................... <oAvatar, oTargetSquare>
  [ 69] objcall 244 ............................. oAvatar.moveToSquare(oTargetSquare)
  [ 71] getlocal 0 .............................. <oAvatar>
  [ 73] pusharglistnoret 1 ...................... <oAvatar>
  [ 75] objcall 245 ............................. oAvatar.walk()
  [ 77] pusharglistnoret 0 ...................... <>
  [ 79] extcall 93 .............................. return 
  [ 81] getparam 1 .............................. <oTargetSquare>
  [ 83] pusharglist 1 ........................... <oTargetSquare>
  [ 85] extcall 106 ............................. <voidp(oTargetSquare)>
  [ 87] jmpifz [ 94] ............................ if voidp(oTargetSquare) then
  [ 90] pusharglistnoret 0 ...................... <>
  [ 92] extcall 93 .............................. return 
  [ 94] getparam 0 .............................. <me>
  [ 96] getparam 1 .............................. <oTargetSquare>
  [ 98] pusharglist 2 ........................... <me, oTargetSquare>
  [100] objcall 25 .............................. <me.isOverFloor(oTargetSquare)>
  [102] setlocal 1 .............................. bIsOverFloor = me.isOverFloor(oTargetSquare)
  [104] getlocal 1 .............................. <bIsOverFloor>
  [106] not ..................................... <not bIsOverFloor>
  [107] jmpifz [114] ............................ if not bIsOverFloor then
  [110] pusharglistnoret 0 ...................... <>
  [112] extcall 93 .............................. return 
  [114] getparam 0 .............................. <me>
  [116] getparam 1 .............................. <oTargetSquare>
  [118] pusharglist 2 ........................... <me, oTargetSquare>
  [120] objcall 11 .............................. <me.canMoveToSquare(oTargetSquare)>
  [122] setlocal 2 .............................. bCanMove = me.canMoveToSquare(oTargetSquare)
  [124] getparam 0 .............................. <me>
  [126] pushcons 34 ............................. <"moveAvatar() bCanMove: ">
  [128] getlocal 2 .............................. <bCanMove>
  [130] joinstr ................................. <"moveAvatar() bCanMove: " & bCanMove>
  [131] pusharglistnoret 2 ...................... <me, "moveAvatar() bCanMove: " & bCanMove>
  [133] objcall 50 .............................. me.debug("moveAvatar() bCanMove: " & bCanMove)
  [135] getlocal 2 .............................. <bCanMove>
  [137] not ..................................... <not bCanMove>
  [138] jmpifz [145] ............................ if not bCanMove then
  [141] pusharglistnoret 0 ...................... <>
  [143] extcall 93 .............................. return 
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 127 ...................... <me.oAvatars>
  [149] getglobal 241 ........................... <oSession>
  [151] pusharglist 1 ........................... <oSession>
  [153] objcall 155 ............................. <oSession.getScreenName()>
  [155] pusharglist 2 ........................... <me.oAvatars, oSession.getScreenName()>
  [157] objcall 206 ............................. <me.oAvatars.getAvatar(oSession.getScreenName())>
  [159] setlocal 0 .............................. oAvatar = me.oAvatars.getAvatar(oSession.getScreenName())
  [161] getlocal 0 .............................. <oAvatar>
  [163] pusharglist 1 ........................... <oAvatar>
  [165] extcall 106 ............................. <voidp(oAvatar)>
  [167] not ..................................... <not voidp(oAvatar)>
  [168] jmpifz [215] ............................ if not voidp(oAvatar) then
  [171] getlocal 0 .............................. <oAvatar>
  [173] getchainedprop 242 ...................... <oAvatar.oSquare>
  [175] getparam 1 .............................. <oTargetSquare>
  [177] pusharglist 2 ........................... <oAvatar.oSquare, oTargetSquare>
  [179] objcall 243 ............................. <oAvatar.oSquare.equals(oTargetSquare)>
  [181] jmpifz [188] ............................ if oAvatar.oSquare.equals(oTargetSquare) then
  [184] pusharglistnoret 0 ...................... <>
  [186] extcall 93 .............................. return 
  [188] getparam 0 .............................. <me>
  [190] pushcons 35 ............................. <"moveAvatar() calling oStudio.sendFindPath()">
  [192] pusharglistnoret 2 ...................... <me, "moveAvatar() calling oStudio.sendFindPath()">
  [194] objcall 50 .............................. me.debug("moveAvatar() calling oStudio.sendFindPath()")
  [196] getglobal 228 ........................... <oStudio>
  [198] getparam 1 .............................. <oTargetSquare>
  [200] getobjprop 179 .......................... <oTargetSquare.iCol>
  [202] pushzero ................................ <0>
  [203] getparam 1 .............................. <oTargetSquare>
  [205] getobjprop 178 .......................... <oTargetSquare.iRow>
  [207] pusharglistnoret 4 ...................... <oStudio, oTargetSquare.iCol, 0, oTargetSquare.iRow>
  [209] objcall 246 ............................. oStudio.sendFindPath(oTargetSquare.iCol, 0, oTargetSquare.iRow)
  [211] pusharglistnoret 0 ...................... <>
  [213] extcall 247 ............................. dontPassEvent()
  [215] ret
end

on moveAvatarToFrontOfItem me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_oItem>
  [  4] pusharglist 2 ........................... <me, _oItem>
  [  6] objcall 20 .............................. <me.getSquareInFrontOfItem(_oItem)>
  [  8] setlocal 0 .............................. oTargetSquare = me.getSquareInFrontOfItem(_oItem)
  [ 10] getparam 0 .............................. <me>
  [ 12] getlocal 0 .............................. <oTargetSquare>
  [ 14] pusharglist 2 ........................... <me, oTargetSquare>
  [ 16] objcall 11 .............................. <me.canMoveToSquare(oTargetSquare)>
  [ 18] setlocal 1 .............................. bCanMove = me.canMoveToSquare(oTargetSquare)
  [ 20] getlocal 1 .............................. <bCanMove>
  [ 22] jmpifz [ 42] ............................ if bCanMove then / else
  [ 25] getglobal 88 ............................ <oIsoScene>
  [ 27] getlocal 0 .............................. <oTargetSquare>
  [ 29] pusharglistnoret 2 ...................... <oIsoScene, oTargetSquare>
  [ 31] objcall 17 .............................. oIsoScene.moveAvatar(oTargetSquare)
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglistnoret 1 ...................... <1>
  [ 37] extcall 93 .............................. return 1
  [ 39] jmp [ 47]
  [ 42] pushzero ................................ <0>
  [ 43] pusharglistnoret 1 ...................... <0>
  [ 45] extcall 93 .............................. return 0
  [ 47] ret
end

on avatarIsInFrontOfItem me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 127 ...................... <me.oAvatars>
  [  4] getglobal 198 ........................... <oDenizenManager>
  [  6] pusharglist 1 ........................... <oDenizenManager>
  [  8] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 10] pusharglist 2 ........................... <me.oAvatars, oDenizenManager.getScreenName()>
  [ 12] objcall 206 ............................. <me.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [ 14] setlocal 0 .............................. oAvatar = me.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [ 16] getlocal 0 .............................. <oAvatar>
  [ 18] pusharglist 1 ........................... <oAvatar>
  [ 20] extcall 106 ............................. <voidp(oAvatar)>
  [ 22] jmpifz [ 30] ............................ if voidp(oAvatar) then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 93 .............................. return 0
  [ 30] getlocal 0 .............................. <oAvatar>
  [ 32] pusharglist 1 ........................... <oAvatar>
  [ 34] objcall 207 ............................. <oAvatar.getSquare()>
  [ 36] setlocal 1 .............................. oAvatarSquare = oAvatar.getSquare()
  [ 38] getlocal 1 .............................. <oAvatarSquare>
  [ 40] pusharglist 1 ........................... <oAvatarSquare>
  [ 42] extcall 106 ............................. <voidp(oAvatarSquare)>
  [ 44] jmpifz [ 52] ............................ if voidp(oAvatarSquare) then
  [ 47] pushzero ................................ <0>
  [ 48] pusharglistnoret 1 ...................... <0>
  [ 50] extcall 93 .............................. return 0
  [ 52] getparam 0 .............................. <me>
  [ 54] getparam 1 .............................. <_oItem>
  [ 56] pusharglist 2 ........................... <me, _oItem>
  [ 58] objcall 20 .............................. <me.getSquareInFrontOfItem(_oItem)>
  [ 60] setlocal 2 .............................. oTargetSquare = me.getSquareInFrontOfItem(_oItem)
  [ 62] getlocal 1 .............................. <oAvatarSquare>
  [ 64] getlocal 2 .............................. <oTargetSquare>
  [ 66] pusharglist 2 ........................... <oAvatarSquare, oTargetSquare>
  [ 68] objcall 243 ............................. <oAvatarSquare.equals(oTargetSquare)>
  [ 70] setlocal 3 .............................. bAvatarInTargetSquare = oAvatarSquare.equals(oTargetSquare)
  [ 72] getlocal 3 .............................. <bAvatarInTargetSquare>
  [ 74] pusharglistnoret 1 ...................... <bAvatarInTargetSquare>
  [ 76] extcall 93 .............................. return bAvatarInTargetSquare
  [ 78] ret
end

on getSquareInFrontOfItem me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] objcall 207 ............................. <_oItem.getSquare()>
  [  6] setlocal 0 .............................. oItemSquare = _oItem.getSquare()
  [  8] getparam 1 .............................. <_oItem>
  [ 10] pusharglist 1 ........................... <_oItem>
  [ 12] objcall 254 ............................. <_oItem.getDirection()>
  [ 14] setlocal 1 .............................. iItemDirection = _oItem.getDirection()
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 115 ...................... <me.oGrid>
  [ 20] getlocal 0 .............................. <oItemSquare>
  [ 22] getlocal 1 .............................. <iItemDirection>
  [ 24] pusharglist 3 ........................... <me.oGrid, oItemSquare, iItemDirection>
  [ 26] objcall 255 ............................. <me.oGrid.getSquareAtDirection(oItemSquare, iItemDirection)>
  [ 28] setlocal 2 .............................. oTargetSquare = me.oGrid.getSquareAtDirection(oItemSquare, iItemDirection)
  [ 30] getlocal 2 .............................. <oTargetSquare>
  [ 32] pusharglistnoret 1 ...................... <oTargetSquare>
  [ 34] extcall 93 .............................. return oTargetSquare
  [ 36] ret
end

on keyDownEvent me
  [  0] pusharglistnoret 0 ...................... <>
  [  2] extcall 258 ............................. nothing()
  [  5] pusharglist 0 ........................... <>
  [  7] thebuiltin 259 .......................... <the key>
  [ 10] peek 0 .................................. case the key of
  [ 12] pushcons 36 ............................. <"~">
  [ 14] eq
  [ 15] jmpifz [ 30] ............................ (case) "~":
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 115 ...................... <me.oGrid>
  [ 22] pusharglistnoret 1 ...................... <me.oGrid>
  [ 24] objcall 260 ............................. me.oGrid.toggleGridView()
  [ 27] jmp [272]
  [ 30] peek 0
  [ 32] pushcons 37 ............................. <"!">
  [ 34] eq
  [ 35] jmpifz [ 50] ............................ (case) "!":
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 117 ...................... <me.oBackground>
  [ 42] pusharglistnoret 1 ...................... <me.oBackground>
  [ 44] objcall 261 ............................. me.oBackground.toggleDisplay()
  [ 47] jmp [272]
  [ 50] peek 0
  [ 52] pushcons 38 ............................. <"@">
  [ 54] eq
  [ 55] jmpifz [ 70] ............................ (case) "@":
  [ 58] getparam 0 .............................. <me>
  [ 60] getchainedprop 118 ...................... <me.oFloor>
  [ 62] pusharglistnoret 1 ...................... <me.oFloor>
  [ 64] objcall 261 ............................. me.oFloor.toggleDisplay()
  [ 67] jmp [272]
  [ 70] peek 0
  [ 72] pushcons 39 ............................. <"#">
  [ 74] eq
  [ 75] jmpifz [ 90] ............................ (case) "#":
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 120 ...................... <me.oDoor>
  [ 82] pusharglistnoret 1 ...................... <me.oDoor>
  [ 84] objcall 261 ............................. me.oDoor.toggleDisplay()
  [ 87] jmp [272]
  [ 90] peek 0
  [ 92] pushcons 40 ............................. <"$">
  [ 94] eq
  [ 95] jmpifz [110] ............................ (case) "$":
  [ 98] getparam 0 .............................. <me>
  [100] getchainedprop 119 ...................... <me.oWall>
  [102] pusharglistnoret 1 ...................... <me.oWall>
  [104] objcall 261 ............................. me.oWall.toggleDisplay()
  [107] jmp [272]
  [110] peek 0
  [112] pushcons 41 ............................. <"%">
  [114] eq
  [115] jmpifz [130] ............................ (case) "%":
  [118] getparam 0 .............................. <me>
  [120] getchainedprop 124 ...................... <me.oHiliter>
  [122] pusharglistnoret 1 ...................... <me.oHiliter>
  [124] objcall 261 ............................. me.oHiliter.toggleDisplay()
  [127] jmp [272]
  [130] peek 0
  [132] pushcons 42 ............................. <"^">
  [134] eq
  [135] jmpifz [150] ............................ (case) "^":
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 121 ...................... <me.oWindow>
  [142] pusharglistnoret 1 ...................... <me.oWindow>
  [144] objcall 261 ............................. me.oWindow.toggleDisplay()
  [147] jmp [272]
  [150] peek 0
  [152] pushcons 43 ............................. <"&">
  [154] eq
  [155] jmpifz [170] ............................ (case) "&":
  [158] getparam 0 .............................. <me>
  [160] getchainedprop 123 ...................... <me.oRugs>
  [162] pusharglistnoret 1 ...................... <me.oRugs>
  [164] objcall 261 ............................. me.oRugs.toggleDisplay()
  [167] jmp [272]
  [170] peek 0
  [172] pushcons 44 ............................. <"*">
  [174] eq
  [175] jmpifz [190] ............................ (case) "*":
  [178] getparam 0 .............................. <me>
  [180] getchainedprop 125 ...................... <me.oFurniture>
  [182] pusharglistnoret 1 ...................... <me.oFurniture>
  [184] objcall 261 ............................. me.oFurniture.toggleDisplay()
  [187] jmp [272]
  [190] peek 0
  [192] pushcons 45 ............................. <"(">
  [194] eq
  [195] jmpifz [210] ............................ (case) "(":
  [198] getparam 0 .............................. <me>
  [200] getchainedprop 122 ...................... <me.oWallItems>
  [202] pusharglistnoret 1 ...................... <me.oWallItems>
  [204] objcall 261 ............................. me.oWallItems.toggleDisplay()
  [207] jmp [272]
  [210] peek 0
  [212] pushcons 46 ............................. <")">
  [214] eq
  [215] jmpifz [230] ............................ (case) ")":
  [218] getparam 0 .............................. <me>
  [220] getchainedprop 126 ...................... <me.oStaticItems>
  [222] pusharglistnoret 1 ...................... <me.oStaticItems>
  [224] objcall 261 ............................. me.oStaticItems.toggleDisplay()
  [227] jmp [272]
  [230] peek 0
  [232] pushcons 47 ............................. <"_">
  [234] eq
  [235] jmpifz [250] ............................ (case) "_":
  [238] getparam 0 .............................. <me>
  [240] getchainedprop 127 ...................... <me.oAvatars>
  [242] pusharglistnoret 1 ...................... <me.oAvatars>
  [244] objcall 261 ............................. me.oAvatars.toggleDisplay()
  [247] jmp [272]
  [250] peek 0
  [252] pushcons 48 ............................. <"v">
  [254] eq
  [255] jmpifz [272] ............................ (case) "v":
  [258] pusharglist 0 ........................... <>
  [260] thebuiltin 262 .......................... <the shiftDown>
  [263] jmpifz [272] ............................ if the shiftDown then
  [266] pushcons 49 ............................. <"VERSION: b0.01">
  [268] pusharglistnoret 1 ...................... <"VERSION: b0.01">
  [270] extcall 197 ............................. alert("VERSION: b0.01")
  [272] pop 1 ................................... end case
  [274] ret
end

on getSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 133 .......................... <me.oSelectedItem>
  [  4] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [  6] extcall 93 .............................. return me.oSelectedItem
  [  8] ret
end

on setSelectedItem me, oItem, bDisplayInfo
  [  0] getparam 1 .............................. <oItem>
  [  2] pusharglist 1 ........................... <oItem>
  [  4] extcall 106 ............................. <voidp(oItem)>
  [  6] jmpifz [ 13] ............................ if voidp(oItem) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] pushcons 50 ............................. <"setSelectedItem() ">
  [ 17] getparam 1 .............................. <oItem>
  [ 19] pusharglist 1 ........................... <oItem>
  [ 21] objcall 263 ............................. <oItem.toString()>
  [ 24] joinstr ................................. <"setSelectedItem() " & oItem.toString()>
  [ 25] pusharglistnoret 2 ...................... <me, "setSelectedItem() " & oItem.toString()>
  [ 27] objcall 50 .............................. me.debug("setSelectedItem() " & oItem.toString())
  [ 29] getglobal 174 ........................... <ElementMgr>
  [ 31] pusharglist 1 ........................... <ElementMgr>
  [ 33] objcall 264 ............................. <ElementMgr.getTrader()>
  [ 36] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 38] extcall 106 ............................. <voidp(ElementMgr.getTrader())>
  [ 40] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 41] setlocal 0 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 133 .......................... <me.oSelectedItem>
  [ 47] pusharglist 1 ........................... <me.oSelectedItem>
  [ 49] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [ 51] not ..................................... <not voidp(me.oSelectedItem)>
  [ 52] jmpifz [ 83] ............................ if not voidp(me.oSelectedItem) then
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 59] pusharglist 1 ........................... <me.oSelectedItem>
  [ 61] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [ 63] jmpifz [ 83] ............................ if me.oSelectedItem.getDrag() then
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglist 1 ........................... <me>
  [ 70] objcall 33 .............................. <me.dropSelectedItem()>
  [ 72] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [ 74] getlocal 1 .............................. <bDropped>
  [ 76] jmpifz [ 83] ............................ if bDropped then
  [ 79] pusharglistnoret 0 ...................... <>
  [ 81] extcall 93 .............................. return 
  [ 83] getparam 0 .............................. <me>
  [ 85] getparam 1 .............................. <oItem>
  [ 87] setobjprop 133 .......................... me.oSelectedItem = oItem
  [ 89] getparam 2 .............................. <bDisplayInfo>
  [ 91] pusharglist 1 ........................... <bDisplayInfo>
  [ 93] extcall 106 ............................. <voidp(bDisplayInfo)>
  [ 95] jmpifz [102] ............................ if voidp(bDisplayInfo) then
  [ 98] pushint8 1 .............................. <1>
  [100] setparam 2 .............................. bDisplayInfo = 1
  [102] getparam 2 .............................. <bDisplayInfo>
  [104] jmpifz [120] ............................ if bDisplayInfo then
  [107] getparam 0 .............................. <me>
  [109] getchainedprop 129 ...................... <me.oInfoStand>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 133 .......................... <me.oSelectedItem>
  [115] pusharglistnoret 2 ...................... <me.oInfoStand, me.oSelectedItem>
  [117] objcall 265 ............................. me.oInfoStand.display(me.oSelectedItem)
  [120] getparam 0 .............................. <me>
  [122] getchainedprop 133 ...................... <me.oSelectedItem>
  [124] pusharglist 1 ........................... <me.oSelectedItem>
  [126] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [128] jmpifz [143] ............................ if me.oSelectedItem.getDrag() then
  [131] getparam 0 .............................. <me>
  [133] pusharglist 1 ........................... <me>
  [135] objcall 33 .............................. <me.dropSelectedItem()>
  [137] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [139] pusharglistnoret 0 ...................... <>
  [141] extcall 93 .............................. return 
  [143] getparam 0 .............................. <me>
  [145] getchainedprop 133 ...................... <me.oSelectedItem>
  [147] pusharglist 1 ........................... <me.oSelectedItem>
  [149] objcall 154 ............................. <me.oSelectedItem.isAvatar()>
  [151] not ..................................... <not me.oSelectedItem.isAvatar()>
  [152] pusharglist 0 ........................... <>
  [154] thebuiltin 266 .......................... <the optionDown>
  [157] and ..................................... <not me.oSelectedItem.isAvatar() and the optionDown>
  [158] jmpifz [223] ............................ if not me.oSelectedItem.isAvatar() and the optionDown then
  [161] getglobal 228 ........................... <oStudio>
  [163] pusharglist 1 ........................... <oStudio>
  [165] extcall 106 ............................. <voidp(oStudio)>
  [167] jmpifz [181] ............................ if voidp(oStudio) then / else
  [170] pushint8 1 .............................. <1>
  [172] setlocal 2 .............................. bIsOwner = 1
  [174] pushint8 1 .............................. <1>
  [176] setlocal 3 .............................. bIsMod = 1
  [178] jmp [205]
  [181] getglobal 228 ........................... <oStudio>
  [183] getglobal 198 ........................... <oDenizenManager>
  [185] pusharglist 1 ........................... <oDenizenManager>
  [187] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [189] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [191] objcall 267 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [194] setlocal 2 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [196] getglobal 198 ........................... <oDenizenManager>
  [198] pusharglist 1 ........................... <oDenizenManager>
  [200] objcall 268 ............................. <oDenizenManager.isMod()>
  [203] setlocal 3 .............................. bIsMod = oDenizenManager.isMod()
  [205] getlocal 2 .............................. <bIsOwner>
  [207] getlocal 3 .............................. <bIsMod>
  [209] or ...................................... <bIsOwner or bIsMod>
  [210] jmpifz [219] ............................ if bIsOwner or bIsMod then
  [213] getparam 0 .............................. <me>
  [215] pusharglistnoret 1 ...................... <me>
  [217] objcall 32 .............................. me.moveSelectedItem()
  [219] pusharglistnoret 0 ...................... <>
  [221] extcall 93 .............................. return 
  [223] ret
end

on createItem me, sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop
  [  0] getparam 2 .............................. <sPosId>
  [  2] pusharglist 1 ........................... <sPosId>
  [  4] extcall 106 ............................. <voidp(sPosId)>
  [  6] jmpifz [ 46] ............................ if voidp(sPosId) then
  [  9] getglobal 273 ........................... <oTempId>
  [ 12] pusharglist 1 ........................... <oTempId>
  [ 14] extcall 106 ............................. <voidp(oTempId)>
  [ 16] jmpifz [ 28] ............................ if voidp(oTempId) then / else
  [ 19] pushint16 1000 .......................... <1000>
  [ 22] setglobal 273 ........................... oTempId = 1000
  [ 25] jmp [ 37]
  [ 28] getglobal 273 ........................... <oTempId>
  [ 31] pushint8 1 .............................. <1>
  [ 33] add ..................................... <oTempId + 1>
  [ 34] setglobal 273 ........................... oTempId = oTempId + 1
  [ 37] getglobal 273 ........................... <oTempId>
  [ 40] pusharglist 1 ........................... <oTempId>
  [ 42] extcall 162 ............................. <string(oTempId)>
  [ 44] setparam 2 .............................. sPosId = string(oTempId)
  [ 46] pushcons 51 ............................. <"TYPE_">
  [ 48] getparam 4 .............................. <sType>
  [ 50] joinstr ................................. <"TYPE_" & sType>
  [ 51] setlocal 0 .............................. sTypeScript = "TYPE_" & sType
  [ 53] getlocal 0 .............................. <sTypeScript>
  [ 55] pusharglist 1 ........................... <sTypeScript>
  [ 57] extcall 57 .............................. <script(sTypeScript)>
  [ 59] getparam 1 .............................. <sProdID>
  [ 61] getparam 2 .............................. <sPosId>
  [ 63] getparam 3 .............................. <sImageBase>
  [ 65] getparam 4 .............................. <sType>
  [ 67] getparam 5 .............................. <sAction>
  [ 69] getparam 6 .............................. <iState>
  [ 71] getparam 7 .............................. <aAttributes>
  [ 73] getparam 8 .............................. <sCastLib>
  [ 75] getparam 9 .............................. <iRow>
  [ 77] getparam 10 ............................. <_iCol>
  [ 79] getparam 11 ............................. <iGridY>
  [ 81] getparam 12 ............................. <iDirection>
  [ 83] getparam 13 ............................. <iHeight>
  [ 85] getparam 14 ............................. <iHeightOffset>
  [ 87] getparam 15 ............................. <bItemsAllowedOnTop>
  [ 89] pusharglist 16 .......................... <script(sTypeScript), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop>
  [ 91] objcall 0 ............................... <script(sTypeScript).new(sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 93] setlocal 1 .............................. oItem = script(sTypeScript).new(sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)
  [ 95] getlocal 1 .............................. <oItem>
  [ 97] pusharglistnoret 1 ...................... <oItem>
  [ 99] objcall 275 ............................. oItem.draw()
  [102] getlocal 1 .............................. <oItem>
  [104] pusharglistnoret 1 ...................... <oItem>
  [106] extcall 93 .............................. return oItem
  [108] ret
end

on isOverFloor me, _oSquare
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 116 ...................... <oIsoScene.oMap>
  [  4] getparam 1 .............................. <_oSquare>
  [  6] getobjprop 178 .......................... <_oSquare.iRow>
  [  8] getparam 1 .............................. <_oSquare>
  [ 10] getobjprop 179 .......................... <_oSquare.iCol>
  [ 12] pusharglist 3 ........................... <oIsoScene.oMap, _oSquare.iRow, _oSquare.iCol>
  [ 14] objcall 180 ............................. <oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)>
  [ 16] setlocal 0 .............................. oMapNode = oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)
  [ 18] getlocal 0 .............................. <oMapNode>
  [ 20] getobjprop 181 .......................... <oMapNode.w>
  [ 22] setlocal 1 .............................. iWeight = oMapNode.w
  [ 24] getlocal 1 .............................. <iWeight>
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 116 ...................... <me.oMap>
  [ 30] getchainedprop 182 ...................... <me.oMap.oPathfinder>
  [ 32] getobjprop 183 .......................... <me.oMap.oPathfinder.W_BLOCKED>
  [ 34] eq ...................................... <iWeight = me.oMap.oPathfinder.W_BLOCKED>
  [ 35] jmpifz [ 46] ............................ if iWeight = me.oMap.oPathfinder.W_BLOCKED then / else
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 93 .............................. return 0
  [ 43] jmp [ 52]
  [ 46] pushint8 1 .............................. <1>
  [ 48] pusharglistnoret 1 ...................... <1>
  [ 50] extcall 93 .............................. return 1
  [ 52] ret
end

on squaresAreOverFloor me, _aSquares
  [  0] getparam 1 .............................. <_aSquares>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 150
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 54] ............................ repeat with _oSquare in _aSquares
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 151
  [ 26] setlocal 0
  [ 28] getparam 0 .............................. <me>
  [ 30] getlocal 0 .............................. <_oSquare>
  [ 32] pusharglist 2 ........................... <me, _oSquare>
  [ 34] objcall 25 .............................. <me.isOverFloor(_oSquare)>
  [ 36] setlocal 1 .............................. bIsOverFloor = me.isOverFloor(_oSquare)
  [ 38] getlocal 1 .............................. <bIsOverFloor>
  [ 40] not ..................................... <not bIsOverFloor>
  [ 41] jmpifz [ 49] ............................ if not bIsOverFloor then
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 1 ...................... <0>
  [ 47] extcall 93 .............................. return 0
  [ 49] pushint8 1
  [ 51] add
  [ 52] endrepeat [ 10]
  [ 54] pop 3
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglistnoret 1 ...................... <1>
  [ 60] extcall 93 .............................. return 1
  [ 62] ret
end

on deleteSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 133 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 62] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 16] pusharglist 1 ........................... <me.oSelectedItem>
  [ 18] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [ 20] jmpifz [ 33] ............................ if me.oSelectedItem.getDrag() then
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 2 ...................... <me.oSelectedItem, 0>
  [ 30] objcall 292 ............................. me.oSelectedItem.setDrag(0)
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 37] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [ 39] objcall 28 .............................. me.oSelectedItem.deleteItem()
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglist 0 ........................... <>
  [ 45] extcall 132 ............................. <VOID>
  [ 47] setobjprop 133 .......................... me.oSelectedItem = VOID
  [ 49] getparam 0 .............................. <me>
  [ 51] getchainedprop 129 ...................... <me.oInfoStand>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 133 .......................... <me.oSelectedItem>
  [ 57] pusharglistnoret 2 ...................... <me.oInfoStand, me.oSelectedItem>
  [ 59] objcall 265 ............................. me.oInfoStand.display(me.oSelectedItem)
  [ 62] ret
end

on deleteItem me, oItem
  [  0] getparam 1 .............................. <oItem>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 133 .......................... <me.oSelectedItem>
  [  6] pusharglist 2 ........................... <oItem, me.oSelectedItem>
  [  8] objcall 243 ............................. <oItem.equals(me.oSelectedItem)>
  [ 10] jmpifz [ 26] ............................ if oItem.equals(me.oSelectedItem) then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 27 .............................. me.deleteSelectedItem()
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 93 .............................. return 
  [ 23] jmp [ 32]
  [ 26] getparam 1 .............................. <oItem>
  [ 28] pusharglistnoret 1 ...................... <oItem>
  [ 30] objcall 28 .............................. oItem.deleteItem()
  [ 32] ret
end

on rotateSelectedItem me
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 20] ............................ if voidp(oStudio) then / else
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 0 .............................. bIsOwner = 1
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 1 .............................. bIsMod = 1
  [ 17] jmp [ 44]
  [ 20] getglobal 228 ........................... <oStudio>
  [ 22] getglobal 198 ........................... <oDenizenManager>
  [ 24] pusharglist 1 ........................... <oDenizenManager>
  [ 26] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 28] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 30] objcall 267 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 33] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 35] getglobal 198 ........................... <oDenizenManager>
  [ 37] pusharglist 1 ........................... <oDenizenManager>
  [ 39] objcall 268 ............................. <oDenizenManager.isMod()>
  [ 42] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 44] getlocal 0 .............................. <bIsOwner>
  [ 46] not ..................................... <not bIsOwner>
  [ 47] getlocal 1 .............................. <bIsMod>
  [ 49] not ..................................... <not bIsMod>
  [ 50] and ..................................... <not bIsOwner and not bIsMod>
  [ 51] jmpifz [ 58] ............................ if not bIsOwner and not bIsMod then
  [ 54] pusharglistnoret 0 ...................... <>
  [ 56] extcall 93 .............................. return 
  [ 58] getparam 0 .............................. <me>
  [ 60] getobjprop 133 .......................... <me.oSelectedItem>
  [ 62] pusharglist 1 ........................... <me.oSelectedItem>
  [ 64] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [ 66] not ..................................... <not voidp(me.oSelectedItem)>
  [ 67] jmpifz [140] ............................ if not voidp(me.oSelectedItem) then
  [ 70] getparam 0 .............................. <me>
  [ 72] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 74] pusharglist 1 ........................... <me.oSelectedItem>
  [ 76] objcall 293 ............................. <me.oSelectedItem.rotate()>
  [ 79] setlocal 2 .............................. bSuccess = me.oSelectedItem.rotate()
  [ 81] getlocal 2 .............................. <bSuccess>
  [ 83] not ..................................... <not bSuccess>
  [ 84] jmpifz [100] ............................ if not bSuccess then
  [ 87] getparam 0 .............................. <me>
  [ 89] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 91] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [ 93] objcall 294 ............................. me.oSelectedItem.resetLastPosition()
  [ 96] pusharglistnoret 0 ...................... <>
  [ 98] extcall 93 .............................. return 
  [100] getglobal 241 ........................... <oSession>
  [102] pusharglist 1 ........................... <oSession>
  [104] extcall 106 ............................. <voidp(oSession)>
  [106] not ..................................... <not voidp(oSession)>
  [107] jmpifz [140] ............................ if not voidp(oSession) then
  [110] getglobal 241 ........................... <oSession>
  [112] getobjprop 295 .......................... <oSession.bTestMode>
  [115] not ..................................... <not oSession.bTestMode>
  [116] getglobal 296 ........................... <oPossessionStudio>
  [119] pusharglist 1 ........................... <oPossessionStudio>
  [121] extcall 106 ............................. <voidp(oPossessionStudio)>
  [123] not ..................................... <not voidp(oPossessionStudio)>
  [124] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [125] jmpifz [140] ............................ if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [128] getglobal 296 ........................... <oPossessionStudio>
  [131] getparam 0 .............................. <me>
  [133] getobjprop 133 .......................... <me.oSelectedItem>
  [135] pusharglistnoret 2 ...................... <oPossessionStudio, me.oSelectedItem>
  [137] objcall 297 ............................. oPossessionStudio.sendUpdatePossession(me.oSelectedItem)
  [140] ret
end

on useSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 133 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 12] ............................ if not voidp(me.oSelectedItem) then
  [ 12] ret
end

on itemIsInBackpack me, oItem
  [  0] getglobal 198 ........................... <oDenizenManager>
  [  2] pusharglist 1 ........................... <oDenizenManager>
  [  4] objcall 199 ............................. <oDenizenManager.getBackpack()>
  [  6] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [  8] getlocal 0 .............................. <oBackPack>
  [ 10] pusharglist 1 ........................... <oBackPack>
  [ 12] extcall 106 ............................. <voidp(oBackPack)>
  [ 14] jmpifz [ 22] ............................ if voidp(oBackPack) then
  [ 17] pushzero ................................ <0>
  [ 18] pusharglistnoret 1 ...................... <0>
  [ 20] extcall 93 .............................. return 0
  [ 22] getlocal 0 .............................. <oBackPack>
  [ 24] getparam 1 .............................. <oItem>
  [ 26] pusharglist 1 ........................... <oItem>
  [ 28] objcall 222 ............................. <oItem.getPosId()>
  [ 30] pusharglist 2 ........................... <oBackPack, oItem.getPosId()>
  [ 32] objcall 299 ............................. <oBackPack.idExists(oItem.getPosId())>
  [ 35] setlocal 1 .............................. bExists = oBackPack.idExists(oItem.getPosId())
  [ 37] getlocal 1 .............................. <bExists>
  [ 39] pusharglistnoret 1 ...................... <bExists>
  [ 41] extcall 93 .............................. return bExists
  [ 43] ret
end

on moveSelectedItem me, bForce
  [  0] getglobal 194 ........................... <gFeatureSet>
  [  2] pushsymb 301 ............................ <#FURNITURE_MOVE>
  [  5] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_MOVE>
  [  7] objcall 196 ............................. <gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [  9] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [ 10] getparam 1 .............................. <bForce>
  [ 12] pusharglist 1 ........................... <bForce>
  [ 14] extcall 106 ............................. <voidp(bForce)>
  [ 16] and ..................................... <not gFeatureSet.isEnabled(#FURNITURE_MOVE) and voidp(bForce)>
  [ 17] jmpifz [ 24] ............................ if not gFeatureSet.isEnabled(#FURNITURE_MOVE) and voidp(bForce) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 93 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 133 .......................... <me.oSelectedItem>
  [ 28] pusharglist 1 ........................... <me.oSelectedItem>
  [ 30] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [ 32] not ..................................... <not voidp(me.oSelectedItem)>
  [ 33] jmpifz [260] ............................ if not voidp(me.oSelectedItem) then
  [ 36] getglobal 228 ........................... <oStudio>
  [ 38] pusharglist 1 ........................... <oStudio>
  [ 40] extcall 106 ............................. <voidp(oStudio)>
  [ 42] jmpifz [ 59] ............................ if voidp(oStudio) then / else
  [ 45] pushint8 1 .............................. <1>
  [ 47] setlocal 0 .............................. bIsOwner = 1
  [ 49] pushint8 1 .............................. <1>
  [ 51] setlocal 1 .............................. bIsMod = 1
  [ 53] pushzero ................................ <0>
  [ 54] setlocal 2 .............................. bTrading = 0
  [ 56] jmp [ 97]
  [ 59] getglobal 228 ........................... <oStudio>
  [ 61] getglobal 198 ........................... <oDenizenManager>
  [ 63] pusharglist 1 ........................... <oDenizenManager>
  [ 65] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 67] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 69] objcall 267 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 72] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 74] getglobal 198 ........................... <oDenizenManager>
  [ 76] pusharglist 1 ........................... <oDenizenManager>
  [ 78] objcall 268 ............................. <oDenizenManager.isMod()>
  [ 81] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 83] getglobal 174 ........................... <ElementMgr>
  [ 85] pusharglist 1 ........................... <ElementMgr>
  [ 87] objcall 264 ............................. <ElementMgr.getTrader()>
  [ 90] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 92] extcall 106 ............................. <voidp(ElementMgr.getTrader())>
  [ 94] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 95] setlocal 2 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 97] getlocal 0 .............................. <bIsOwner>
  [ 99] not ..................................... <not bIsOwner>
  [100] getlocal 1 .............................. <bIsMod>
  [102] not ..................................... <not bIsMod>
  [103] and ..................................... <not bIsOwner and not bIsMod>
  [104] getlocal 2 .............................. <bTrading>
  [106] not ..................................... <not bTrading>
  [107] and ..................................... <not bIsOwner and not bIsMod and not bTrading>
  [108] jmpifz [115] ............................ if not bIsOwner and not bIsMod and not bTrading then
  [111] pusharglistnoret 0 ...................... <>
  [113] extcall 93 .............................. return 
  [115] getlocal 2 .............................. <bTrading>
  [117] jmpifz [145] ............................ if bTrading then
  [120] getparam 0 .............................. <me>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 133 .......................... <me.oSelectedItem>
  [126] pusharglist 2 ........................... <me, me.oSelectedItem>
  [128] objcall 31 .............................. <me.itemIsInBackpack(me.oSelectedItem)>
  [130] not ..................................... <not me.itemIsInBackpack(me.oSelectedItem)>
  [131] jmpifz [145] ............................ if not me.itemIsInBackpack(me.oSelectedItem) then
  [134] pushcons 52 ............................. <"items is in backpack can't trade it">
  [136] pusharglistnoret 1 ...................... <"items is in backpack can't trade it">
  [138] extcall 274 ............................. put "items is in backpack can't trade it"
  [141] pusharglistnoret 0 ...................... <>
  [143] extcall 93 .............................. return 
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 133 ...................... <me.oSelectedItem>
  [149] pusharglist 1 ........................... <me.oSelectedItem>
  [151] objcall 205 ............................. <me.oSelectedItem.getType()>
  [153] setlocal 3 .............................. sType = me.oSelectedItem.getType()
  [155] getlocal 3 .............................. <sType>
  [157] pushcons 53 ............................. <"Wallpaper">
  [159] eq ...................................... <sType = "Wallpaper">
  [160] jmpifz [202] ............................ if sType = "Wallpaper" then
  [163] getlocal 2 .............................. <bTrading>
  [165] jmpifz [183] ............................ if bTrading then
  [168] getparam 0 .............................. <me>
  [170] getchainedprop 133 ...................... <me.oSelectedItem>
  [172] pushint8 1 .............................. <1>
  [174] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [176] objcall 292 ............................. me.oSelectedItem.setDrag(1)
  [179] pusharglistnoret 0 ...................... <>
  [181] extcall 93 .............................. return 
  [183] getparam 0 .............................. <me>
  [185] getchainedprop 133 ...................... <me.oSelectedItem>
  [187] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [189] objcall 302 ............................. me.oSelectedItem.displayWallReplace()
  [192] getparam 0 .............................. <me>
  [194] pusharglistnoret 1 ...................... <me>
  [196] objcall 27 .............................. me.deleteSelectedItem()
  [198] pusharglistnoret 0 ...................... <>
  [200] extcall 93 .............................. return 
  [202] getlocal 3 .............................. <sType>
  [204] pushcons 54 ............................. <"Floor">
  [206] eq ...................................... <sType = "Floor">
  [207] jmpifz [249] ............................ if sType = "Floor" then
  [210] getlocal 2 .............................. <bTrading>
  [212] jmpifz [230] ............................ if bTrading then
  [215] getparam 0 .............................. <me>
  [217] getchainedprop 133 ...................... <me.oSelectedItem>
  [219] pushint8 1 .............................. <1>
  [221] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [223] objcall 292 ............................. me.oSelectedItem.setDrag(1)
  [226] pusharglistnoret 0 ...................... <>
  [228] extcall 93 .............................. return 
  [230] getparam 0 .............................. <me>
  [232] getchainedprop 133 ...................... <me.oSelectedItem>
  [234] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [236] objcall 303 ............................. me.oSelectedItem.displayFloorReplace()
  [239] getparam 0 .............................. <me>
  [241] pusharglistnoret 1 ...................... <me>
  [243] objcall 27 .............................. me.deleteSelectedItem()
  [245] pusharglistnoret 0 ...................... <>
  [247] extcall 93 .............................. return 
  [249] getparam 0 .............................. <me>
  [251] getchainedprop 133 ...................... <me.oSelectedItem>
  [253] pushint8 1 .............................. <1>
  [255] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [257] objcall 292 ............................. me.oSelectedItem.setDrag(1)
  [260] ret
end

on dropSelectedItem me, bReset
  [  0] getparam 1 .............................. <bReset>
  [  2] pusharglist 1 ........................... <bReset>
  [  4] extcall 106 ............................. <voidp(bReset)>
  [  6] jmpifz [ 12] ............................ if voidp(bReset) then
  [  9] pushzero ................................ <0>
  [ 10] setparam 1 .............................. bReset = 0
  [ 12] pushzero ................................ <0>
  [ 13] setlocal 0 .............................. bDropped = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 133 .......................... <me.oSelectedItem>
  [ 19] pusharglist 1 ........................... <me.oSelectedItem>
  [ 21] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [ 23] not ..................................... <not voidp(me.oSelectedItem)>
  [ 24] jmpifz [233] ............................ if not voidp(me.oSelectedItem) then
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 31] pusharglist 1 ........................... <me.oSelectedItem>
  [ 33] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [ 35] jmpifz [233] ............................ if me.oSelectedItem.getDrag() then
  [ 38] getparam 1 .............................. <bReset>
  [ 40] jmpifz [ 66] ............................ if bReset then
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 47] pusharglist 1 ........................... <me.oSelectedItem>
  [ 49] objcall 294 ............................. <me.oSelectedItem.resetLastPosition()>
  [ 52] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [ 53] jmpifz [ 62] ............................ if not me.oSelectedItem.resetLastPosition() then
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglistnoret 1 ...................... <me>
  [ 60] objcall 27 .............................. me.deleteSelectedItem()
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 93 .............................. return 
  [ 66] getglobal 174 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] objcall 305 ............................. <ElementMgr.mouseIsOverBackpack()>
  [ 73] jmpifz [ 99] ............................ if ElementMgr.mouseIsOverBackpack() then
  [ 76] getparam 0 .............................. <me>
  [ 78] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 80] pusharglist 1 ........................... <me.oSelectedItem>
  [ 82] objcall 294 ............................. <me.oSelectedItem.resetLastPosition()>
  [ 85] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [ 86] jmpifz [ 95] ............................ if not me.oSelectedItem.resetLastPosition() then
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglistnoret 1 ...................... <me>
  [ 93] objcall 27 .............................. me.deleteSelectedItem()
  [ 95] pusharglistnoret 0 ...................... <>
  [ 97] extcall 93 .............................. return 
  [ 99] getglobal 228 ........................... <oStudio>
  [101] pusharglist 1 ........................... <oStudio>
  [103] extcall 106 ............................. <voidp(oStudio)>
  [105] jmpifz [119] ............................ if voidp(oStudio) then / else
  [108] pushint8 1 .............................. <1>
  [110] setlocal 1 .............................. bOwner = 1
  [112] pushint8 1 .............................. <1>
  [114] setlocal 2 .............................. bIsMod = 1
  [116] jmp [143]
  [119] getglobal 228 ........................... <oStudio>
  [121] getglobal 198 ........................... <oDenizenManager>
  [123] pusharglist 1 ........................... <oDenizenManager>
  [125] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [127] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [129] objcall 267 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [132] setlocal 1 .............................. bOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [134] getglobal 198 ........................... <oDenizenManager>
  [136] pusharglist 1 ........................... <oDenizenManager>
  [138] objcall 268 ............................. <oDenizenManager.isMod()>
  [141] setlocal 2 .............................. bIsMod = oDenizenManager.isMod()
  [143] getlocal 1 .............................. <bOwner>
  [145] not ..................................... <not bOwner>
  [146] getlocal 2 .............................. <bIsMod>
  [148] not ..................................... <not bIsMod>
  [149] and ..................................... <not bOwner and not bIsMod>
  [150] jmpifz [176] ............................ if not bOwner and not bIsMod then
  [153] getparam 0 .............................. <me>
  [155] getchainedprop 133 ...................... <me.oSelectedItem>
  [157] pusharglist 1 ........................... <me.oSelectedItem>
  [159] objcall 294 ............................. <me.oSelectedItem.resetLastPosition()>
  [162] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [163] jmpifz [172] ............................ if not me.oSelectedItem.resetLastPosition() then
  [166] getparam 0 .............................. <me>
  [168] pusharglistnoret 1 ...................... <me>
  [170] objcall 27 .............................. me.deleteSelectedItem()
  [172] pusharglistnoret 0 ...................... <>
  [174] extcall 93 .............................. return 
  [176] getparam 0 .............................. <me>
  [178] getchainedprop 133 ...................... <me.oSelectedItem>
  [180] pusharglist 1 ........................... <me.oSelectedItem>
  [182] objcall 306 ............................. <me.oSelectedItem.drop()>
  [185] setlocal 0 .............................. bDropped = me.oSelectedItem.drop()
  [187] getlocal 0 .............................. <bDropped>
  [189] jmpifz [214] ............................ if bDropped then / else
  [192] getparam 0 .............................. <me>
  [194] getchainedprop 133 ...................... <me.oSelectedItem>
  [196] pushzero ................................ <0>
  [197] pusharglistnoret 2 ...................... <me.oSelectedItem, 0>
  [199] objcall 292 ............................. me.oSelectedItem.setDrag(0)
  [202] getparam 0 .............................. <me>
  [204] getchainedprop 133 ...................... <me.oSelectedItem>
  [206] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [208] objcall 307 ............................. me.oSelectedItem.sendPutInStudio()
  [211] jmp [233]
  [214] getparam 0 .............................. <me>
  [216] getchainedprop 133 ...................... <me.oSelectedItem>
  [218] pusharglist 1 ........................... <me.oSelectedItem>
  [220] objcall 294 ............................. <me.oSelectedItem.resetLastPosition()>
  [223] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [224] jmpifz [233] ............................ if not me.oSelectedItem.resetLastPosition() then
  [227] getparam 0 .............................. <me>
  [229] pusharglistnoret 1 ...................... <me>
  [231] objcall 27 .............................. me.deleteSelectedItem()
  [233] getlocal 0 .............................. <bDropped>
  [235] pusharglistnoret 1 ...................... <bDropped>
  [237] extcall 93 .............................. return bDropped
  [239] ret
end

on updateSelectedItem me, oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 133 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 71] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 16] pusharglist 1 ........................... <me.oSelectedItem>
  [ 18] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [ 20] jmpifz [ 71] ............................ if me.oSelectedItem.getDrag() then
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 27] pusharglist 1 ........................... <me.oSelectedItem>
  [ 29] objcall 172 ............................. <me.oSelectedItem.isWallItem()>
  [ 31] jmpifz [ 38] ............................ if me.oSelectedItem.isWallItem() then
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 93 .............................. return 
  [ 38] getglobal 174 ........................... <ElementMgr>
  [ 40] pusharglist 1 ........................... <ElementMgr>
  [ 42] objcall 305 ............................. <ElementMgr.mouseIsOverBackpack()>
  [ 45] jmpifz [ 52] ............................ if ElementMgr.mouseIsOverBackpack() then
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 93 .............................. return 
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 56] getparam 1 .............................. <oSquare>
  [ 58] pusharglist 2 ........................... <me.oSelectedItem, oSquare>
  [ 60] objcall 310 ............................. <me.oSelectedItem.placeItem(oSquare)>
  [ 63] setlocal 0 .............................. bSuccess = me.oSelectedItem.placeItem(oSquare)
  [ 65] getlocal 0 .............................. <bSuccess>
  [ 67] pusharglistnoret 1 ...................... <bSuccess>
  [ 69] extcall 93 .............................. return bSuccess
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 1 ...................... <0>
  [ 74] extcall 93 .............................. return 0
  [ 76] ret
end

on getSquareOffsets me, oItem, oSquare
  [  0] getparam 1 .............................. <oItem>
  [  2] pusharglist 1 ........................... <oItem>
  [  4] objcall 311 ............................. <oItem.getOccupiedSquares()>
  [  7] setlocal 0 .............................. aOccupiedSquares = oItem.getOccupiedSquares()
  [  9] getparam 1 .............................. <oItem>
  [ 11] pusharglist 1 ........................... <oItem>
  [ 13] objcall 312 ............................. <oItem.getGridX()>
  [ 16] setlocal 1 .............................. iGridX = oItem.getGridX()
  [ 18] getparam 1 .............................. <oItem>
  [ 20] pusharglist 1 ........................... <oItem>
  [ 22] objcall 313 ............................. <oItem.getGridZ()>
  [ 25] setlocal 2 .............................. iGridZ = oItem.getGridZ()
  [ 27] getparam 2 .............................. <oSquare>
  [ 29] getobjprop 179 .......................... <oSquare.iCol>
  [ 31] getlocal 1 .............................. <iGridX>
  [ 33] sub ..................................... <oSquare.iCol - iGridX>
  [ 34] setlocal 3 .............................. iXDif = oSquare.iCol - iGridX
  [ 36] getparam 2 .............................. <oSquare>
  [ 38] getobjprop 178 .......................... <oSquare.iRow>
  [ 40] getlocal 2 .............................. <iGridZ>
  [ 42] sub ..................................... <oSquare.iRow - iGridZ>
  [ 43] setlocal 4 .............................. iZDif = oSquare.iRow - iGridZ
  [ 45] pusharglist 0 ........................... <[]>
  [ 47] pushlist ................................ <[]>
  [ 48] setlocal 5 .............................. aDifList = []
  [ 50] getlocal 0 .............................. <aOccupiedSquares>
  [ 52] peek 0
  [ 54] pusharglist 1
  [ 56] extcall 150
  [ 58] pushint8 1
  [ 60] peek 0
  [ 62] peek 2
  [ 64] lteq
  [ 65] jmpifz [138] ............................ repeat with i in aOccupiedSquares
  [ 68] peek 2
  [ 70] peek 1
  [ 72] pusharglist 2
  [ 74] extcall 151
  [ 76] setlocal 6
  [ 78] getlocal 6 .............................. <i>
  [ 80] pusharglist 1 ........................... <i>
  [ 82] extcall 106 ............................. <voidp(i)>
  [ 84] jmpifz [ 90] ............................ if voidp(i) then
  [ 87] jmp [133] ............................... next repeat
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 115 ...................... <me.oGrid>
  [ 94] getlocal 6 .............................. <i>
  [ 96] getobjprop 178 .......................... <i.iRow>
  [ 98] getlocal 4 .............................. <iZDif>
  [100] add ..................................... <i.iRow + iZDif>
  [101] getlocal 6 .............................. <i>
  [103] getobjprop 179 .......................... <i.iCol>
  [105] getlocal 3 .............................. <iXDif>
  [107] add ..................................... <i.iCol + iXDif>
  [108] pusharglist 3 ........................... <me.oGrid, i.iRow + iZDif, i.iCol + iXDif>
  [110] objcall 314 ............................. <me.oGrid.getSquareByRowCol(i.iRow + iZDif, i.iCol + iXDif)>
  [113] setlocal 7 .............................. oDifSquare = me.oGrid.getSquareByRowCol(i.iRow + iZDif, i.iCol + iXDif)
  [115] getlocal 7 .............................. <oDifSquare>
  [117] pusharglist 1 ........................... <oDifSquare>
  [119] extcall 106 ............................. <voidp(oDifSquare)>
  [121] not ..................................... <not voidp(oDifSquare)>
  [122] jmpifz [133] ............................ if not voidp(oDifSquare) then
  [125] getlocal 5 .............................. <aDifList>
  [127] getlocal 7 .............................. <oDifSquare>
  [129] pusharglistnoret 2 ...................... <aDifList, oDifSquare>
  [131] objcall 135 ............................. aDifList.add(oDifSquare)
  [133] pushint8 1
  [135] add
  [136] endrepeat [ 60]
  [138] pop 3
  [140] getlocal 5 .............................. <aDifList>
  [142] pusharglistnoret 1 ...................... <aDifList>
  [144] extcall 93 .............................. return aDifList
  [146] ret
end

on addSelectedItemToTrade me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 133 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 106 ............................. <voidp(me.oSelectedItem)>
  [  8] jmpifz [ 22] ............................ if voidp(me.oSelectedItem) then
  [ 11] pushcons 55 ............................. <"addSelectedItemToTrade() selected item was void">
  [ 13] pusharglistnoret 1 ...................... <"addSelectedItemToTrade() selected item was void">
  [ 15] extcall 274 ............................. put "addSelectedItemToTrade() selected item was void"
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 93 .............................. return 
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 26] pusharglist 1 ........................... <me.oSelectedItem>
  [ 28] objcall 220 ............................. <me.oSelectedItem.isFurniItem()>
  [ 30] not ..................................... <not me.oSelectedItem.isFurniItem()>
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 35] pusharglist 1 ........................... <me.oSelectedItem>
  [ 37] objcall 172 ............................. <me.oSelectedItem.isWallItem()>
  [ 39] not ..................................... <not me.oSelectedItem.isWallItem()>
  [ 40] and ..................................... <not me.oSelectedItem.isFurniItem() and not me.oSelectedItem.isWallItem()>
  [ 41] jmpifz [ 55] ............................ if not me.oSelectedItem.isFurniItem() and not me.oSelectedItem.isWallItem() then
  [ 44] pushcons 56 ............................. <"addSelectedItemToTrade() NOT FURNI AND NOT WALL ITEM">
  [ 46] pusharglistnoret 1 ...................... <"addSelectedItemToTrade() NOT FURNI AND NOT WALL ITEM">
  [ 48] extcall 274 ............................. put "addSelectedItemToTrade() NOT FURNI AND NOT WALL ITEM"
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 93 .............................. return 
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 59] pusharglist 1 ........................... <me.oSelectedItem>
  [ 61] objcall 171 ............................. <me.oSelectedItem.getDrag()>
  [ 63] not ..................................... <not me.oSelectedItem.getDrag()>
  [ 64] jmpifz [ 78] ............................ if not me.oSelectedItem.getDrag() then
  [ 67] pushcons 57 ............................. <"addSelectedItemToTrade() NOT DRAG">
  [ 69] pusharglistnoret 1 ...................... <"addSelectedItemToTrade() NOT DRAG">
  [ 71] extcall 274 ............................. put "addSelectedItemToTrade() NOT DRAG"
  [ 74] pusharglistnoret 0 ...................... <>
  [ 76] extcall 93 .............................. return 
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 133 ...................... <me.oSelectedItem>
  [ 82] pusharglist 1 ........................... <me.oSelectedItem>
  [ 84] objcall 222 ............................. <me.oSelectedItem.getPosId()>
  [ 86] setlocal 0 .............................. iPosId = me.oSelectedItem.getPosId()
  [ 88] getglobal 228 ........................... <oStudio>
  [ 90] getlocal 0 .............................. <iPosId>
  [ 92] pusharglistnoret 2 ...................... <oStudio, iPosId>
  [ 94] objcall 322 ............................. oStudio.sendAddToTrade(iPosId)
  [ 97] getparam 0 .............................. <me>
  [ 99] pusharglistnoret 1 ...................... <me>
  [101] objcall 27 .............................. me.deleteSelectedItem()
  [103] ret
end

on getItemByPossessionId me, iPosId
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 125 ...................... <me.oFurniture>
  [  4] getparam 1 .............................. <iPosId>
  [  6] pusharglist 2 ........................... <me.oFurniture, iPosId>
  [  8] objcall 37 .............................. <me.oFurniture.getItemByPossessionId(iPosId)>
  [ 10] setlocal 0 .............................. oItem = me.oFurniture.getItemByPossessionId(iPosId)
  [ 12] getlocal 0 .............................. <oItem>
  [ 14] pusharglist 1 ........................... <oItem>
  [ 16] extcall 106 ............................. <voidp(oItem)>
  [ 18] not ..................................... <not voidp(oItem)>
  [ 19] jmpifz [ 28] ............................ if not voidp(oItem) then
  [ 22] getlocal 0 .............................. <oItem>
  [ 24] pusharglistnoret 1 ...................... <oItem>
  [ 26] extcall 93 .............................. return oItem
  [ 28] getparam 0 .............................. <me>
  [ 30] getchainedprop 122 ...................... <me.oWallItems>
  [ 32] getparam 1 .............................. <iPosId>
  [ 34] pusharglist 2 ........................... <me.oWallItems, iPosId>
  [ 36] objcall 37 .............................. <me.oWallItems.getItemByPossessionId(iPosId)>
  [ 38] setlocal 0 .............................. oItem = me.oWallItems.getItemByPossessionId(iPosId)
  [ 40] getlocal 0 .............................. <oItem>
  [ 42] pusharglist 1 ........................... <oItem>
  [ 44] extcall 106 ............................. <voidp(oItem)>
  [ 46] not ..................................... <not voidp(oItem)>
  [ 47] jmpifz [ 56] ............................ if not voidp(oItem) then
  [ 50] getlocal 0 .............................. <oItem>
  [ 52] pusharglistnoret 1 ...................... <oItem>
  [ 54] extcall 93 .............................. return oItem
  [ 56] getparam 0 .............................. <me>
  [ 58] getchainedprop 123 ...................... <me.oRugs>
  [ 60] getparam 1 .............................. <iPosId>
  [ 62] pusharglist 2 ........................... <me.oRugs, iPosId>
  [ 64] objcall 37 .............................. <me.oRugs.getItemByPossessionId(iPosId)>
  [ 66] setlocal 0 .............................. oItem = me.oRugs.getItemByPossessionId(iPosId)
  [ 68] getlocal 0 .............................. <oItem>
  [ 70] pusharglist 1 ........................... <oItem>
  [ 72] extcall 106 ............................. <voidp(oItem)>
  [ 74] not ..................................... <not voidp(oItem)>
  [ 75] jmpifz [ 84] ............................ if not voidp(oItem) then
  [ 78] getlocal 0 .............................. <oItem>
  [ 80] pusharglistnoret 1 ...................... <oItem>
  [ 82] extcall 93 .............................. return oItem
  [ 84] pusharglist 0 ........................... <>
  [ 86] extcall 132 ............................. <VOID>
  [ 88] pusharglistnoret 1 ...................... <VOID>
  [ 90] extcall 93 .............................. return VOID
  [ 92] ret
end

on calcMouseToSquare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 39 .............................. <me.calcMouseToGridPoint()>
  [  6] setlocal 0 .............................. oGridPoint = me.calcMouseToGridPoint()
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 115 ...................... <me.oGrid>
  [ 12] getlocal 0 .............................. <oGridPoint>
  [ 14] getobjprop 146 .......................... <oGridPoint.x>
  [ 16] getlocal 0 .............................. <oGridPoint>
  [ 18] getobjprop 147 .......................... <oGridPoint.z>
  [ 20] pusharglist 3 ........................... <me.oGrid, oGridPoint.x, oGridPoint.z>
  [ 22] objcall 148 ............................. <me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)>
  [ 24] setlocal 1 .............................. oSquare = me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)
  [ 26] getlocal 1 .............................. <oSquare>
  [ 28] pusharglistnoret 1 ...................... <oSquare>
  [ 30] extcall 93 .............................. return oSquare
  [ 32] ret
end

on calcMouseToGridPoint me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <>
  [  4] thebuiltin 326 .......................... <the mouseH>
  [  7] pusharglist 0 ........................... <>
  [  9] thebuiltin 327 .......................... <the mouseV>
  [ 12] pusharglist 2 ........................... <the mouseH, the mouseV>
  [ 14] extcall 325 ............................. <point(the mouseH, the mouseV)>
  [ 17] pusharglist 2 ........................... <me, point(the mouseH, the mouseV)>
  [ 19] objcall 40 .............................. <me.calcViewToGridPoint(point(the mouseH, the mouseV))>
  [ 21] setlocal 0 .............................. oGridPoint = me.calcViewToGridPoint(point(the mouseH, the mouseV))
  [ 23] getlocal 0 .............................. <oGridPoint>
  [ 25] pusharglistnoret 1 ...................... <oGridPoint>
  [ 27] extcall 93 .............................. return oGridPoint
  [ 29] ret
end

on calcViewToGridPoint me, oViewPoint
  [  0] getparam 1 .............................. <oViewPoint>
  [  2] getobjprop 328 .......................... <oViewPoint.locH>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 74 ........................... <me.iXOff>
  [  9] sub ..................................... <oViewPoint.locH - me.iXOff>
  [ 10] setlocal 0 .............................. iViewX = oViewPoint.locH - me.iXOff
  [ 12] getparam 1 .............................. <oViewPoint>
  [ 14] getobjprop 329 .......................... <oViewPoint.locV>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 76 ........................... <me.iYOff>
  [ 21] sub ..................................... <oViewPoint.locV - me.iYOff>
  [ 22] setlocal 1 .............................. iViewY = oViewPoint.locV - me.iYOff
  [ 24] getlocal 0 .............................. <iViewX>
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 71 ........................... <me.fCosY>
  [ 30] div ..................................... <iViewX / me.fCosY>
  [ 31] getlocal 1 .............................. <iViewY>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 68 ........................... <me.fSinY>
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 69 ........................... <me.fSinX>
  [ 41] mul ..................................... <me.fSinY * me.fSinX>
  [ 42] div ..................................... <iViewY / (me.fSinY * me.fSinX)>
  [ 43] sub ..................................... <(iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))>
  [ 44] pushint8 1 .............................. <1>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 71 ........................... <me.fCosY>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 68 ........................... <me.fSinY>
  [ 54] div ..................................... <me.fCosY / me.fSinY>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 68 ........................... <me.fSinY>
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 71 ........................... <me.fCosY>
  [ 63] div ..................................... <me.fSinY / me.fCosY>
  [ 64] add ..................................... <(me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)>
  [ 65] div ..................................... <1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))>
  [ 66] mul ..................................... <((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)))>
  [ 67] pusharglist 1 ........................... <((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)))>
  [ 69] extcall 111 ............................. <float(((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))))>
  [ 71] setlocal 2 .............................. iZ = float(((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))))
  [ 73] pushint8 1 .............................. <1>
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 71 ........................... <me.fCosY>
  [ 79] div ..................................... <1 / me.fCosY>
  [ 80] getlocal 0 .............................. <iViewX>
  [ 82] getlocal 2 .............................. <iZ>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 68 ........................... <me.fSinY>
  [ 88] mul ..................................... <iZ * me.fSinY>
  [ 89] sub ..................................... <iViewX - (iZ * me.fSinY)>
  [ 90] mul ..................................... <1 / me.fCosY * (iViewX - (iZ * me.fSinY))>
  [ 91] pusharglist 1 ........................... <1 / me.fCosY * (iViewX - (iZ * me.fSinY))>
  [ 93] extcall 111 ............................. <float(1 / me.fCosY * (iViewX - (iZ * me.fSinY)))>
  [ 95] setlocal 3 .............................. iX = float(1 / me.fCosY * (iViewX - (iZ * me.fSinY)))
  [ 97] getlocal 3 .............................. <iX>
  [ 99] pushzero ................................ <0>
  [100] getlocal 2 .............................. <iZ>
  [102] pusharglist 3 ........................... <iX, 0, iZ>
  [104] extcall 330 ............................. <vector(iX, 0, iZ)>
  [107] pusharglistnoret 1 ...................... <vector(iX, 0, iZ)>
  [109] extcall 93 .............................. return vector(iX, 0, iZ)
  [111] ret
end

on calcGridToViewPoint me, oGridPoint
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 58 ............................. <"calcViewPoint()">
  [  4] pusharglistnoret 2 ...................... <me, "calcViewPoint()">
  [  6] objcall 50 .............................. me.debug("calcViewPoint()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <oGridPoint>
  [ 12] pusharglist 2 ........................... <me, oGridPoint>
  [ 14] objcall 43 .............................. <me.calcViewX(oGridPoint)>
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <oGridPoint>
  [ 20] pusharglist 2 ........................... <me, oGridPoint>
  [ 22] objcall 44 .............................. <me.calcViewY(oGridPoint)>
  [ 24] pusharglist 2 ........................... <me.calcViewX(oGridPoint), me.calcViewY(oGridPoint)>
  [ 26] extcall 325 ............................. <point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))>
  [ 29] pusharglistnoret 1 ...................... <point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))>
  [ 31] extcall 93 .............................. return point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))
  [ 33] ret
end

on calcGridToViewPoints me, oGridPoints
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 59 ............................. <"calcViewPoints()">
  [  4] pusharglistnoret 2 ...................... <me, "calcViewPoints()">
  [  6] objcall 50 .............................. me.debug("calcViewPoints()")
  [  8] pushcons 60 ............................. <"Quad">
  [ 10] pusharglist 1 ........................... <"Quad">
  [ 12] extcall 57 .............................. <script("Quad")>
  [ 14] pusharglist 1 ........................... <script("Quad")>
  [ 16] extcall 0 ............................... <new(script("Quad"))>
  [ 18] setlocal 0 .............................. oViewPoints = new(script("Quad"))
  [ 20] getlocal 0 .............................. <oViewPoints>
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <oGridPoints>
  [ 26] getobjprop 336 .......................... <oGridPoints.tl>
  [ 29] pusharglist 2 ........................... <me, oGridPoints.tl>
  [ 31] objcall 337 ............................. <me.calcViewPoint(oGridPoints.tl)>
  [ 34] setobjprop 336 .......................... oViewPoints.tl = me.calcViewPoint(oGridPoints.tl)
  [ 37] getlocal 0 .............................. <oViewPoints>
  [ 39] getparam 0 .............................. <me>
  [ 41] getparam 1 .............................. <oGridPoints>
  [ 43] getobjprop 338 .......................... <oGridPoints.tr>
  [ 46] pusharglist 2 ........................... <me, oGridPoints.tr>
  [ 48] objcall 337 ............................. <me.calcViewPoint(oGridPoints.tr)>
  [ 51] setobjprop 338 .......................... oViewPoints.tr = me.calcViewPoint(oGridPoints.tr)
  [ 54] getlocal 0 .............................. <oViewPoints>
  [ 56] getparam 0 .............................. <me>
  [ 58] getparam 1 .............................. <oGridPoints>
  [ 60] getobjprop 339 .......................... <oGridPoints.br>
  [ 63] pusharglist 2 ........................... <me, oGridPoints.br>
  [ 65] objcall 337 ............................. <me.calcViewPoint(oGridPoints.br)>
  [ 68] setobjprop 339 .......................... oViewPoints.br = me.calcViewPoint(oGridPoints.br)
  [ 71] getlocal 0 .............................. <oViewPoints>
  [ 73] getparam 0 .............................. <me>
  [ 75] getparam 1 .............................. <oGridPoints>
  [ 77] getobjprop 340 .......................... <oGridPoints.bl>
  [ 80] pusharglist 2 ........................... <me, oGridPoints.bl>
  [ 82] objcall 337 ............................. <me.calcViewPoint(oGridPoints.bl)>
  [ 85] setobjprop 340 .......................... oViewPoints.bl = me.calcViewPoint(oGridPoints.bl)
  [ 88] getlocal 0 .............................. <oViewPoints>
  [ 90] pusharglistnoret 1 ...................... <oViewPoints>
  [ 92] extcall 93 .............................. return oViewPoints
  [ 94] ret
end

on calcViewX me, o3dPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 74 ........................... <me.iXOff>
  [  4] getparam 1 .............................. <o3dPoint>
  [  6] getobjprop 147 .......................... <o3dPoint.z>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 68 ........................... <me.fSinY>
  [ 12] mul ..................................... <o3dPoint.z * me.fSinY>
  [ 13] getparam 1 .............................. <o3dPoint>
  [ 15] getobjprop 146 .......................... <o3dPoint.x>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 71 ........................... <me.fCosY>
  [ 21] mul ..................................... <o3dPoint.x * me.fCosY>
  [ 22] add ..................................... <(o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)>
  [ 23] add ..................................... <me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY))>
  [ 24] pusharglist 1 ........................... <me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY))>
  [ 26] extcall 108 ............................. <integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))>
  [ 28] pusharglistnoret 1 ...................... <integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))>
  [ 30] extcall 93 .............................. return integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))
  [ 32] ret
end

on calcViewY me, o3dPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 76 ........................... <me.iYOff>
  [  4] getparam 1 .............................. <o3dPoint>
  [  6] getobjprop 344 .......................... <o3dPoint.y>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 72 ........................... <me.fCosX>
  [ 13] mul ..................................... <o3dPoint.y * me.fCosX>
  [ 14] getparam 1 .............................. <o3dPoint>
  [ 16] getobjprop 147 .......................... <o3dPoint.z>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 71 ........................... <me.fCosY>
  [ 22] mul ..................................... <o3dPoint.z * me.fCosY>
  [ 23] getparam 1 .............................. <o3dPoint>
  [ 25] getobjprop 146 .......................... <o3dPoint.x>
  [ 27] getparam 0 .............................. <me>
  [ 29] getobjprop 68 ........................... <me.fSinY>
  [ 31] mul ..................................... <o3dPoint.x * me.fSinY>
  [ 32] sub ..................................... <(o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)>
  [ 33] pushint8 2 .............................. <2>
  [ 35] div ..................................... <((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2>
  [ 36] sub ..................................... <(o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)>
  [ 37] add ..................................... <me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2))>
  [ 38] pusharglist 1 ........................... <me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2))>
  [ 40] extcall 108 ............................. <integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))>
  [ 42] pusharglistnoret 1 ...................... <integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))>
  [ 44] extcall 93 .............................. return integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))
  [ 46] ret
end

on initScene me, oScene
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 117 ...................... <me.oBackground>
  [  4] getparam 1 .............................. <oScene>
  [  6] pushcons 8 .............................. <"Background">
  [  8] pusharglist 2 ........................... <oScene, "Background">
  [ 10] extcall 180 ............................. <getNode(oScene, "Background")>
  [ 12] pusharglistnoret 2 ...................... <me.oBackground, getNode(oScene, "Background")>
  [ 14] objcall 2 ............................... me.oBackground.Init(getNode(oScene, "Background"))
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 118 ...................... <me.oFloor>
  [ 20] getparam 1 .............................. <oScene>
  [ 22] pushcons 54 ............................. <"Floor">
  [ 24] pusharglist 2 ........................... <oScene, "Floor">
  [ 26] extcall 180 ............................. <getNode(oScene, "Floor")>
  [ 28] pusharglistnoret 2 ...................... <me.oFloor, getNode(oScene, "Floor")>
  [ 30] objcall 2 ............................... me.oFloor.Init(getNode(oScene, "Floor"))
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 120 ...................... <me.oDoor>
  [ 36] getparam 1 .............................. <oScene>
  [ 38] pushcons 61 ............................. <"Door">
  [ 40] pusharglist 2 ........................... <oScene, "Door">
  [ 42] extcall 180 ............................. <getNode(oScene, "Door")>
  [ 44] pusharglistnoret 2 ...................... <me.oDoor, getNode(oScene, "Door")>
  [ 46] objcall 2 ............................... me.oDoor.Init(getNode(oScene, "Door"))
  [ 48] getparam 0 .............................. <me>
  [ 50] getchainedprop 119 ...................... <me.oWall>
  [ 52] getparam 1 .............................. <oScene>
  [ 54] pushcons 62 ............................. <"WAll">
  [ 56] pusharglist 2 ........................... <oScene, "WAll">
  [ 58] extcall 180 ............................. <getNode(oScene, "WAll")>
  [ 60] pusharglistnoret 2 ...................... <me.oWall, getNode(oScene, "WAll")>
  [ 62] objcall 2 ............................... me.oWall.Init(getNode(oScene, "WAll"))
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 121 ...................... <me.oWindow>
  [ 68] getparam 1 .............................. <oScene>
  [ 70] pushcons 63 ............................. <"Window">
  [ 72] pusharglist 2 ........................... <oScene, "Window">
  [ 74] extcall 180 ............................. <getNode(oScene, "Window")>
  [ 76] pusharglistnoret 2 ...................... <me.oWindow, getNode(oScene, "Window")>
  [ 78] objcall 2 ............................... me.oWindow.Init(getNode(oScene, "Window"))
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 122 ...................... <me.oWallItems>
  [ 84] getparam 1 .............................. <oScene>
  [ 86] pushcons 13 ............................. <"WallItems">
  [ 88] pusharglist 2 ........................... <oScene, "WallItems">
  [ 90] extcall 180 ............................. <getNode(oScene, "WallItems")>
  [ 92] pusharglistnoret 2 ...................... <me.oWallItems, getNode(oScene, "WallItems")>
  [ 94] objcall 2 ............................... me.oWallItems.Init(getNode(oScene, "WallItems"))
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 123 ...................... <me.oRugs>
  [100] getparam 1 .............................. <oScene>
  [102] pushcons 64 ............................. <"Rugs">
  [104] pusharglist 2 ........................... <oScene, "Rugs">
  [106] extcall 180 ............................. <getNode(oScene, "Rugs")>
  [108] pusharglistnoret 2 ...................... <me.oRugs, getNode(oScene, "Rugs")>
  [110] objcall 2 ............................... me.oRugs.Init(getNode(oScene, "Rugs"))
  [112] getparam 0 .............................. <me>
  [114] getchainedprop 124 ...................... <me.oHiliter>
  [116] getparam 1 .............................. <oScene>
  [118] pushcons 65 ............................. <"Hiliter">
  [120] pusharglist 2 ........................... <oScene, "Hiliter">
  [122] extcall 180 ............................. <getNode(oScene, "Hiliter")>
  [124] pusharglistnoret 2 ...................... <me.oHiliter, getNode(oScene, "Hiliter")>
  [126] objcall 2 ............................... me.oHiliter.Init(getNode(oScene, "Hiliter"))
  [128] getparam 0 .............................. <me>
  [130] getchainedprop 125 ...................... <me.oFurniture>
  [132] getparam 1 .............................. <oScene>
  [134] pushcons 66 ............................. <"Furniture">
  [136] pusharglist 2 ........................... <oScene, "Furniture">
  [138] extcall 180 ............................. <getNode(oScene, "Furniture")>
  [140] pusharglistnoret 2 ...................... <me.oFurniture, getNode(oScene, "Furniture")>
  [142] objcall 2 ............................... me.oFurniture.Init(getNode(oScene, "Furniture"))
  [144] getparam 0 .............................. <me>
  [146] getchainedprop 126 ...................... <me.oStaticItems>
  [148] getparam 1 .............................. <oScene>
  [150] pushcons 17 ............................. <"StaticItems">
  [152] pusharglist 2 ........................... <oScene, "StaticItems">
  [154] extcall 180 ............................. <getNode(oScene, "StaticItems")>
  [156] pusharglistnoret 2 ...................... <me.oStaticItems, getNode(oScene, "StaticItems")>
  [158] objcall 2 ............................... me.oStaticItems.Init(getNode(oScene, "StaticItems"))
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 127 ...................... <me.oAvatars>
  [164] getparam 1 .............................. <oScene>
  [166] pushcons 67 ............................. <"Avatars">
  [168] pusharglist 2 ........................... <oScene, "Avatars">
  [170] extcall 180 ............................. <getNode(oScene, "Avatars")>
  [172] pusharglistnoret 2 ...................... <me.oAvatars, getNode(oScene, "Avatars")>
  [174] objcall 2 ............................... me.oAvatars.Init(getNode(oScene, "Avatars"))
  [176] getparam 0 .............................. <me>
  [178] getchainedprop 130 ...................... <me.oVoteItems>
  [180] pusharglistnoret 1 ...................... <me.oVoteItems>
  [182] objcall 2 ............................... me.oVoteItems.Init()
  [184] getglobal 156 ........................... <oStudioMap>
  [186] pusharglist 1 ........................... <oStudioMap>
  [188] objcall 345 ............................. <oStudioMap.isWayneEnt()>
  [191] jmpifz [203] ............................ if oStudioMap.isWayneEnt() then
  [194] getparam 0 .............................. <me>
  [196] getchainedprop 119 ...................... <me.oWall>
  [198] pusharglistnoret 1 ...................... <me.oWall>
  [200] objcall 346 ............................. me.oWall.hideDisplay()
  [203] getglobal 156 ........................... <oStudioMap>
  [205] pusharglist 1 ........................... <oStudioMap>
  [207] objcall 157 ............................. <oStudioMap.isPrivate()>
  [209] jmpifz [228] ............................ if oStudioMap.isPrivate() then
  [212] getparam 0 .............................. <me>
  [214] getchainedprop 128 ...................... <me.oStudioInfo>
  [216] pusharglistnoret 1 ...................... <me.oStudioInfo>
  [218] objcall 2 ............................... me.oStudioInfo.Init()
  [220] getparam 0 .............................. <me>
  [222] getchainedprop 129 ...................... <me.oInfoStand>
  [224] pusharglistnoret 1 ...................... <me.oInfoStand>
  [226] objcall 2 ............................... me.oInfoStand.Init()
  [228] ret
end

on generateXml me
  [  0] pushcons 68 ............................. <"XML">
  [  2] pusharglist 1 ........................... <"XML">
  [  4] extcall 60 .............................. <newObject("XML")>
  [  6] setlocal 0 .............................. oNewXml = newObject("XML")
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 103 ...................... <me.oSceneXml>
  [ 12] getobjprop 107 .......................... <me.oSceneXml.firstChild>
  [ 14] setlocal 1 .............................. oRoot = me.oSceneXml.firstChild
  [ 16] getlocal 0 .............................. <oNewXml>
  [ 18] pushcons 69 ............................. <"Studio">
  [ 20] pusharglist 2 ........................... <oNewXml, "Studio">
  [ 22] objcall 347 ............................. <oNewXml.createElement("Studio")>
  [ 25] setlocal 2 .............................. oNewRoot = oNewXml.createElement("Studio")
  [ 27] getlocal 2 .............................. <oNewRoot>
  [ 29] getlocal 1 .............................. <oRoot>
  [ 31] getobjprop 109 .......................... <oRoot.attributes>
  [ 33] setobjprop 109 .......................... oNewRoot.attributes = oRoot.attributes
  [ 35] getlocal 1 .............................. <oRoot>
  [ 37] getobjprop 348 .......................... <oRoot.childNodes>
  [ 40] setlocal 3 .............................. aNodes = oRoot.childNodes
  [ 42] pushzero ................................ <0>
  [ 43] setlocal 4
  [ 45] getlocal 4
  [ 47] getlocal 3 .............................. <aNodes>
  [ 49] getobjprop 349 .......................... <aNodes.length>
  [ 52] pushint8 1 .............................. <1>
  [ 54] sub ..................................... <aNodes.length - 1>
  [ 55] lteq
  [ 56] jmpifz [131] ............................ repeat with i = 0 to aNodes.length - 1
  [ 59] getlocal 3 .............................. <aNodes>
  [ 61] getlocal 4 .............................. <i>
  [ 63] pusharglist 2 ........................... <aNodes, i>
  [ 65] objcall 151 ............................. <aNodes[i]>
  [ 67] setlocal 5 .............................. oNode = aNodes[i]
  [ 69] getlocal 5 .............................. <oNode>
  [ 71] getobjprop 350 .......................... <oNode.NodeName>
  [ 74] peek 0 .................................. case oNode.NodeName of
  [ 76] pushcons 66 ............................. <"Furniture">
  [ 78] eq
  [ 79] jmpifz [104] ............................ (case) "Furniture":
  [ 82] getparam 0 .............................. <me>
  [ 84] getchainedprop 125 ...................... <me.oFurniture>
  [ 86] pusharglist 1 ........................... <me.oFurniture>
  [ 88] objcall 46 .............................. <me.oFurniture.generateXml()>
  [ 90] setlocal 6 .............................. oNewNode = me.oFurniture.generateXml()
  [ 92] getlocal 2 .............................. <oNewRoot>
  [ 94] getlocal 6 .............................. <oNewNode>
  [ 96] pusharglistnoret 2 ...................... <oNewRoot, oNewNode>
  [ 98] objcall 351 ............................. oNewRoot.appendChild(oNewNode)
  [101] jmp [120] ............................... (case) otherwise:
  [104] getlocal 2 .............................. <oNewRoot>
  [106] getlocal 5 .............................. <oNode>
  [108] pushint8 1 .............................. <1>
  [110] pusharglist 2 ........................... <oNode, 1>
  [112] objcall 352 ............................. <oNode.cloneNode(1)>
  [115] pusharglistnoret 2 ...................... <oNewRoot, oNode.cloneNode(1)>
  [117] objcall 351 ............................. oNewRoot.appendChild(oNode.cloneNode(1))
  [120] pop 1 ................................... end case
  [122] pushint8 1
  [124] getlocal 4
  [126] add
  [127] setlocal 4
  [129] endrepeat [ 45]
  [131] getlocal 0 .............................. <oNewXml>
  [133] getlocal 2 .............................. <oNewRoot>
  [135] pusharglistnoret 2 ...................... <oNewXml, oNewRoot>
  [137] objcall 351 ............................. oNewXml.appendChild(oNewRoot)
  [140] getlocal 0 .............................. <oNewXml>
  [142] pusharglistnoret 1 ...................... <oNewXml>
  [144] extcall 93 .............................. return oNewXml
  [146] ret
end

on destroyScene me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 48 .............................. me.destroyObjects()
  [  6] getmovieprop 134 ........................ <the actorList>
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 2 ...................... <the actorList, me>
  [ 12] objcall 359 ............................. (the actorList).deleteOne(me)
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 132 ............................. <VOID>
  [ 19] setglobal 88 ............................ oIsoScene = VOID
  [ 21] ret
end

on destroyObjects me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 117 .......................... <me.oBackground>
  [  4] pusharglist 1 ........................... <me.oBackground>
  [  6] extcall 106 ............................. <voidp(me.oBackground)>
  [  8] not ..................................... <not voidp(me.oBackground)>
  [  9] jmpifz [ 21] ............................ if not voidp(me.oBackground) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 117 ...................... <me.oBackground>
  [ 16] pusharglistnoret 1 ...................... <me.oBackground>
  [ 18] objcall 360 ............................. me.oBackground.destroy()
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 118 .......................... <me.oFloor>
  [ 25] pusharglist 1 ........................... <me.oFloor>
  [ 27] extcall 106 ............................. <voidp(me.oFloor)>
  [ 29] not ..................................... <not voidp(me.oFloor)>
  [ 30] jmpifz [ 42] ............................ if not voidp(me.oFloor) then
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 118 ...................... <me.oFloor>
  [ 37] pusharglistnoret 1 ...................... <me.oFloor>
  [ 39] objcall 360 ............................. me.oFloor.destroy()
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 119 .......................... <me.oWall>
  [ 46] pusharglist 1 ........................... <me.oWall>
  [ 48] extcall 106 ............................. <voidp(me.oWall)>
  [ 50] not ..................................... <not voidp(me.oWall)>
  [ 51] jmpifz [ 63] ............................ if not voidp(me.oWall) then
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 119 ...................... <me.oWall>
  [ 58] pusharglistnoret 1 ...................... <me.oWall>
  [ 60] objcall 360 ............................. me.oWall.destroy()
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 120 .......................... <me.oDoor>
  [ 67] pusharglist 1 ........................... <me.oDoor>
  [ 69] extcall 106 ............................. <voidp(me.oDoor)>
  [ 71] not ..................................... <not voidp(me.oDoor)>
  [ 72] jmpifz [ 84] ............................ if not voidp(me.oDoor) then
  [ 75] getparam 0 .............................. <me>
  [ 77] getchainedprop 120 ...................... <me.oDoor>
  [ 79] pusharglistnoret 1 ...................... <me.oDoor>
  [ 81] objcall 360 ............................. me.oDoor.destroy()
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 124 .......................... <me.oHiliter>
  [ 88] pusharglist 1 ........................... <me.oHiliter>
  [ 90] extcall 106 ............................. <voidp(me.oHiliter)>
  [ 92] not ..................................... <not voidp(me.oHiliter)>
  [ 93] jmpifz [105] ............................ if not voidp(me.oHiliter) then
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 124 ...................... <me.oHiliter>
  [100] pusharglistnoret 1 ...................... <me.oHiliter>
  [102] objcall 360 ............................. me.oHiliter.destroy()
  [105] getparam 0 .............................. <me>
  [107] getobjprop 121 .......................... <me.oWindow>
  [109] pusharglist 1 ........................... <me.oWindow>
  [111] extcall 106 ............................. <voidp(me.oWindow)>
  [113] not ..................................... <not voidp(me.oWindow)>
  [114] jmpifz [126] ............................ if not voidp(me.oWindow) then
  [117] getparam 0 .............................. <me>
  [119] getchainedprop 121 ...................... <me.oWindow>
  [121] pusharglistnoret 1 ...................... <me.oWindow>
  [123] objcall 360 ............................. me.oWindow.destroy()
  [126] getparam 0 .............................. <me>
  [128] getobjprop 123 .......................... <me.oRugs>
  [130] pusharglist 1 ........................... <me.oRugs>
  [132] extcall 106 ............................. <voidp(me.oRugs)>
  [134] not ..................................... <not voidp(me.oRugs)>
  [135] jmpifz [147] ............................ if not voidp(me.oRugs) then
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 123 ...................... <me.oRugs>
  [142] pusharglistnoret 1 ...................... <me.oRugs>
  [144] objcall 360 ............................. me.oRugs.destroy()
  [147] getparam 0 .............................. <me>
  [149] getobjprop 125 .......................... <me.oFurniture>
  [151] pusharglist 1 ........................... <me.oFurniture>
  [153] extcall 106 ............................. <voidp(me.oFurniture)>
  [155] not ..................................... <not voidp(me.oFurniture)>
  [156] jmpifz [168] ............................ if not voidp(me.oFurniture) then
  [159] getparam 0 .............................. <me>
  [161] getchainedprop 125 ...................... <me.oFurniture>
  [163] pusharglistnoret 1 ...................... <me.oFurniture>
  [165] objcall 360 ............................. me.oFurniture.destroy()
  [168] getparam 0 .............................. <me>
  [170] getobjprop 122 .......................... <me.oWallItems>
  [172] pusharglist 1 ........................... <me.oWallItems>
  [174] extcall 106 ............................. <voidp(me.oWallItems)>
  [176] not ..................................... <not voidp(me.oWallItems)>
  [177] jmpifz [189] ............................ if not voidp(me.oWallItems) then
  [180] getparam 0 .............................. <me>
  [182] getchainedprop 122 ...................... <me.oWallItems>
  [184] pusharglistnoret 1 ...................... <me.oWallItems>
  [186] objcall 360 ............................. me.oWallItems.destroy()
  [189] getparam 0 .............................. <me>
  [191] getobjprop 126 .......................... <me.oStaticItems>
  [193] pusharglist 1 ........................... <me.oStaticItems>
  [195] extcall 106 ............................. <voidp(me.oStaticItems)>
  [197] not ..................................... <not voidp(me.oStaticItems)>
  [198] jmpifz [210] ............................ if not voidp(me.oStaticItems) then
  [201] getparam 0 .............................. <me>
  [203] getchainedprop 126 ...................... <me.oStaticItems>
  [205] pusharglistnoret 1 ...................... <me.oStaticItems>
  [207] objcall 360 ............................. me.oStaticItems.destroy()
  [210] getparam 0 .............................. <me>
  [212] getobjprop 127 .......................... <me.oAvatars>
  [214] pusharglist 1 ........................... <me.oAvatars>
  [216] extcall 106 ............................. <voidp(me.oAvatars)>
  [218] not ..................................... <not voidp(me.oAvatars)>
  [219] jmpifz [231] ............................ if not voidp(me.oAvatars) then
  [222] getparam 0 .............................. <me>
  [224] getchainedprop 127 ...................... <me.oAvatars>
  [226] pusharglistnoret 1 ...................... <me.oAvatars>
  [228] objcall 360 ............................. me.oAvatars.destroy()
  [231] getparam 0 .............................. <me>
  [233] getobjprop 115 .......................... <me.oGrid>
  [235] pusharglist 1 ........................... <me.oGrid>
  [237] extcall 106 ............................. <voidp(me.oGrid)>
  [239] not ..................................... <not voidp(me.oGrid)>
  [240] jmpifz [252] ............................ if not voidp(me.oGrid) then
  [243] getparam 0 .............................. <me>
  [245] getchainedprop 115 ...................... <me.oGrid>
  [247] pusharglistnoret 1 ...................... <me.oGrid>
  [249] objcall 360 ............................. me.oGrid.destroy()
  [252] getparam 0 .............................. <me>
  [254] getobjprop 114 .......................... <me.oSpriteManager>
  [256] pusharglist 1 ........................... <me.oSpriteManager>
  [258] extcall 106 ............................. <voidp(me.oSpriteManager)>
  [260] not ..................................... <not voidp(me.oSpriteManager)>
  [261] jmpifz [273] ............................ if not voidp(me.oSpriteManager) then
  [264] getparam 0 .............................. <me>
  [266] getchainedprop 114 ...................... <me.oSpriteManager>
  [268] pusharglistnoret 1 ...................... <me.oSpriteManager>
  [270] objcall 360 ............................. me.oSpriteManager.destroy()
  [273] getparam 0 .............................. <me>
  [275] getobjprop 128 .......................... <me.oStudioInfo>
  [277] pusharglist 1 ........................... <me.oStudioInfo>
  [279] extcall 106 ............................. <voidp(me.oStudioInfo)>
  [281] not ..................................... <not voidp(me.oStudioInfo)>
  [282] jmpifz [294] ............................ if not voidp(me.oStudioInfo) then
  [285] getparam 0 .............................. <me>
  [287] getchainedprop 128 ...................... <me.oStudioInfo>
  [289] pusharglistnoret 1 ...................... <me.oStudioInfo>
  [291] objcall 360 ............................. me.oStudioInfo.destroy()
  [294] getparam 0 .............................. <me>
  [296] getobjprop 129 .......................... <me.oInfoStand>
  [298] pusharglist 1 ........................... <me.oInfoStand>
  [300] extcall 106 ............................. <voidp(me.oInfoStand)>
  [302] not ..................................... <not voidp(me.oInfoStand)>
  [303] jmpifz [315] ............................ if not voidp(me.oInfoStand) then
  [306] getparam 0 .............................. <me>
  [308] getchainedprop 129 ...................... <me.oInfoStand>
  [310] pusharglistnoret 1 ...................... <me.oInfoStand>
  [312] objcall 360 ............................. me.oInfoStand.destroy()
  [315] getparam 0 .............................. <me>
  [317] getobjprop 130 .......................... <me.oVoteItems>
  [319] pusharglist 1 ........................... <me.oVoteItems>
  [321] extcall 106 ............................. <voidp(me.oVoteItems)>
  [323] not ..................................... <not voidp(me.oVoteItems)>
  [324] jmpifz [336] ............................ if not voidp(me.oVoteItems) then
  [327] getparam 0 .............................. <me>
  [329] getchainedprop 130 ...................... <me.oVoteItems>
  [331] pusharglistnoret 1 ...................... <me.oVoteItems>
  [333] objcall 360 ............................. me.oVoteItems.destroy()
  [336] getparam 0 .............................. <me>
  [338] getobjprop 218 .......................... <me.oAvatarIndicator>
  [340] pusharglist 1 ........................... <me.oAvatarIndicator>
  [342] extcall 106 ............................. <voidp(me.oAvatarIndicator)>
  [344] not ..................................... <not voidp(me.oAvatarIndicator)>
  [345] jmpifz [356] ............................ if not voidp(me.oAvatarIndicator) then
  [348] getparam 0 .............................. <me>
  [350] getchainedprop 218 ...................... <me.oAvatarIndicator>
  [352] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [354] objcall 219 ............................. me.oAvatarIndicator.destroyItem()
  [356] getparam 0 .............................. <me>
  [358] getobjprop 131 .......................... <me.oTrivia>
  [360] pusharglist 1 ........................... <me.oTrivia>
  [362] extcall 106 ............................. <voidp(me.oTrivia)>
  [364] not ..................................... <not voidp(me.oTrivia)>
  [365] jmpifz [377] ............................ if not voidp(me.oTrivia) then
  [368] getparam 0 .............................. <me>
  [370] getchainedprop 131 ...................... <me.oTrivia>
  [372] pusharglistnoret 1 ...................... <me.oTrivia>
  [374] objcall 360 ............................. me.oTrivia.destroy()
  [377] getparam 0 .............................. <me>
  [379] getchainedprop 58 ....................... <me.oIsoConstants>
  [381] getobjprop 361 .......................... <me.oIsoConstants.DEFAULT_SPRITE_COUNTER>
  [384] setlocal 0
  [386] getlocal 0
  [388] getparam 0 .............................. <me>
  [390] getchainedprop 58 ....................... <me.oIsoConstants>
  [392] getobjprop 362 .......................... <me.oIsoConstants.DEFAULT_SPRITE_COUNTER_MAX>
  [395] lteq
  [396] jmpifz [416] ............................ repeat with sprite_number = me.oIsoConstants.DEFAULT_SPRITE_COUNTER to me.oIsoConstants.DEFAULT_SPRITE_COUNTER_MAX
  [399] getlocal 0 .............................. <sprite_number>
  [401] pushzero ................................ <0>
  [402] pusharglistnoret 2 ...................... <sprite_number, 0>
  [404] extcall 363 ............................. puppetSprite(sprite_number, 0)
  [407] pushint8 1
  [409] getlocal 0
  [411] add
  [412] setlocal 0
  [414] endrepeat [386]
  [416] getparam 0 .............................. <me>
  [418] pusharglist 0 ........................... <>
  [420] extcall 132 ............................. <VOID>
  [422] setobjprop 133 .......................... me.oSelectedItem = VOID
  [424] ret
end

on createAvatarIndicator me, oAvatar
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 218 .......................... <me.oAvatarIndicator>
  [  4] pusharglist 1 ........................... <me.oAvatarIndicator>
  [  6] extcall 106 ............................. <voidp(me.oAvatarIndicator)>
  [  8] not ..................................... <not voidp(me.oAvatarIndicator)>
  [  9] jmpifz [ 28] ............................ if not voidp(me.oAvatarIndicator) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 218 ...................... <me.oAvatarIndicator>
  [ 16] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [ 18] objcall 219 ............................. me.oAvatarIndicator.destroyItem()
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 132 ............................. <VOID>
  [ 26] setobjprop 218 .......................... me.oAvatarIndicator = VOID
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 70 ............................. <"AvatarIndicator">
  [ 32] pusharglist 1 ........................... <"AvatarIndicator">
  [ 34] extcall 57 .............................. <script("AvatarIndicator")>
  [ 36] getparam 1 .............................. <oAvatar>
  [ 38] pusharglist 2 ........................... <script("AvatarIndicator"), oAvatar>
  [ 40] objcall 0 ............................... <script("AvatarIndicator").new(oAvatar)>
  [ 42] setobjprop 218 .......................... me.oAvatarIndicator = script("AvatarIndicator").new(oAvatar)
  [ 44] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 56 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 10] pushcons 71 ............................. <"IsoScene: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"IsoScene: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"IsoScene: " & sMessage>
  [ 17] extcall 274 ............................. put "IsoScene: " & sMessage
  [ 20] ret
end

on getItemsUnderMouse me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aItemsUnderMouse = []
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 125 ...................... <me.oFurniture>
  [  9] getlocal 0 .............................. <aItemsUnderMouse>
  [ 11] pusharglist 2 ........................... <me.oFurniture, aItemsUnderMouse>
  [ 13] objcall 51 .............................. <me.oFurniture.getItemsUnderMouse(aItemsUnderMouse)>
  [ 15] setlocal 0 .............................. aItemsUnderMouse = me.oFurniture.getItemsUnderMouse(aItemsUnderMouse)
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 127 ...................... <me.oAvatars>
  [ 21] getlocal 0 .............................. <aItemsUnderMouse>
  [ 23] pusharglist 2 ........................... <me.oAvatars, aItemsUnderMouse>
  [ 25] objcall 51 .............................. <me.oAvatars.getItemsUnderMouse(aItemsUnderMouse)>
  [ 27] setlocal 0 .............................. aItemsUnderMouse = me.oAvatars.getItemsUnderMouse(aItemsUnderMouse)
  [ 29] getlocal 0 .............................. <aItemsUnderMouse>
  [ 31] pusharglistnoret 1 ...................... <aItemsUnderMouse>
  [ 33] extcall 93 .............................. return aItemsUnderMouse
  [ 35] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 125 ...................... <me.oFurniture>
  [  9] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 11] pusharglist 2 ........................... <me.oFurniture, aSpritesUnderMouse>
  [ 13] objcall 52 .............................. <me.oFurniture.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 15] setlocal 0 .............................. aSpritesUnderMouse = me.oFurniture.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 127 ...................... <me.oAvatars>
  [ 21] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 23] pusharglist 2 ........................... <me.oAvatars, aSpritesUnderMouse>
  [ 25] objcall 52 .............................. <me.oAvatars.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 27] setlocal 0 .............................. aSpritesUnderMouse = me.oAvatars.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 122 ...................... <me.oWallItems>
  [ 33] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 35] pusharglist 2 ........................... <me.oWallItems, aSpritesUnderMouse>
  [ 37] objcall 52 .............................. <me.oWallItems.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 39] setlocal 0 .............................. aSpritesUnderMouse = me.oWallItems.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 41] getparam 0 .............................. <me>
  [ 43] getchainedprop 123 ...................... <me.oRugs>
  [ 45] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 47] pusharglist 2 ........................... <me.oRugs, aSpritesUnderMouse>
  [ 49] objcall 52 .............................. <me.oRugs.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 51] setlocal 0 .............................. aSpritesUnderMouse = me.oRugs.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 53] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 55] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 57] objcall 367 ............................. aSpritesUnderMouse.sort()
  [ 60] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 62] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 64] extcall 93 .............................. return aSpritesUnderMouse
  [ 66] ret
end

on getObjectsUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aObjectsUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 125 ...................... <me.oFurniture>
  [  9] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 11] pusharglistnoret 2 ...................... <me.oFurniture, aObjectsUnderMouse>
  [ 13] objcall 53 .............................. me.oFurniture.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 127 ...................... <me.oAvatars>
  [ 19] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 21] pusharglistnoret 2 ...................... <me.oAvatars, aObjectsUnderMouse>
  [ 23] objcall 53 .............................. me.oAvatars.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 25] getparam 0 .............................. <me>
  [ 27] getchainedprop 122 ...................... <me.oWallItems>
  [ 29] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 31] pusharglistnoret 2 ...................... <me.oWallItems, aObjectsUnderMouse>
  [ 33] objcall 53 .............................. me.oWallItems.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 123 ...................... <me.oRugs>
  [ 39] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 41] pusharglistnoret 2 ...................... <me.oRugs, aObjectsUnderMouse>
  [ 43] objcall 53 .............................. me.oRugs.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 45] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 47] pusharglistnoret 1 ...................... <aObjectsUnderMouse>
  [ 49] objcall 367 ............................. aObjectsUnderMouse.sort()
  [ 52] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 54] pusharglistnoret 1 ...................... <aObjectsUnderMouse>
  [ 56] extcall 93 .............................. return aObjectsUnderMouse
  [ 58] ret
end

on getTotalItems me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iTotalItems = 0
  [  3] getlocal 0 .............................. <iTotalItems>
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 122 ...................... <me.oWallItems>
  [  9] pusharglist 1 ........................... <me.oWallItems>
  [ 11] objcall 54 .............................. <me.oWallItems.getTotalItems()>
  [ 13] add ..................................... <iTotalItems + me.oWallItems.getTotalItems()>
  [ 14] setlocal 0 .............................. iTotalItems = iTotalItems + me.oWallItems.getTotalItems()
  [ 16] getlocal 0 .............................. <iTotalItems>
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 125 ...................... <me.oFurniture>
  [ 22] pusharglist 1 ........................... <me.oFurniture>
  [ 24] objcall 54 .............................. <me.oFurniture.getTotalItems()>
  [ 26] add ..................................... <iTotalItems + me.oFurniture.getTotalItems()>
  [ 27] setlocal 0 .............................. iTotalItems = iTotalItems + me.oFurniture.getTotalItems()
  [ 29] getlocal 0 .............................. <iTotalItems>
  [ 31] pusharglistnoret 1 ...................... <iTotalItems>
  [ 33] extcall 93 .............................. return iTotalItems
  [ 35] ret
end

on checkMaxItemsExceeded me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 54 .............................. <me.getTotalItems()>
  [  6] setlocal 0 .............................. iTotalItems = me.getTotalItems()
  [  8] getlocal 0 .............................. <iTotalItems>
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 14] getobjprop 370 .......................... <me.oIsoConstants.DEFAULT_MAX_ITEMS>
  [ 17] gteq .................................... <iTotalItems >= me.oIsoConstants.DEFAULT_MAX_ITEMS>
  [ 18] jmpifz [ 34] ............................ if iTotalItems >= me.oIsoConstants.DEFAULT_MAX_ITEMS then
  [ 21] getglobal 174 ........................... <ElementMgr>
  [ 23] pushcons 72 ............................. <"ALERT_MAX_ITEMS_EXCEEDED">
  [ 25] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_MAX_ITEMS_EXCEEDED">
  [ 27] objcall 197 ............................. ElementMgr.alert("ALERT_MAX_ITEMS_EXCEEDED")
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 93 .............................. return 0
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 93 .............................. return 1
  [ 40] ret
end
