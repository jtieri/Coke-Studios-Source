property iRow, iCol, iStartRow, iStartCol, iEndRow, iEndCol, iLayer, iTravelCols, aSteps, aDepths, aRows, aCols, iStepsPerSquare, iPathPosition, iFPS, iFPSTimer, iFPSTimerLength, iRandomDirTimer, iRandomDirTimerLength, iDirection, iCollisionWidth, iCollisionHeight, aCollisionRowSpan, bPaused
global oIsoScene, oSpriteManager, oAvatar, bDebugCollision, oTextConstants, oComputer

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 584 .......................... <me.spriteNum>
  [  5] pusharglist 1 ........................... <me.spriteNum>
  [  7] extcall 79 .............................. <sprite(me.spriteNum)>
  [  9] pushint16 500 ........................... <500>
  [ 12] inv ..................................... <-500>
  [ 13] pushint16 500 ........................... <500>
  [ 16] inv ..................................... <-500>
  [ 17] pusharglist 2 ........................... <-500, -500>
  [ 19] extcall 132 ............................. <point(-500, -500)>
  [ 21] setobjprop 80 ........................... sprite(me.spriteNum).loc = point(-500, -500)
  [ 23] getparam 0 .............................. <me>
  [ 25] pushint8 4 .............................. <4>
  [ 27] setobjprop 592 .......................... me.iStepsPerSquare = 4
  [ 30] ret
end

on initMachine me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 296 .......................... me.bPaused = 1
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 0 ........................... <[]>
  [ 11] pushlist ................................ <[]>
  [ 12] setobjprop 646 .......................... me.aCollisionRowSpan = []
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 591 .......................... <me.iStartRow>
  [ 20] setlocal 0
  [ 22] getlocal 0
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 618 .......................... <me.iEndRow>
  [ 29] lteq
  [ 30] jmpifz [ 53] ............................ repeat with i = me.iStartRow to me.iEndRow
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 646 ...................... <me.aCollisionRowSpan>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglistnoret 2 ...................... <me.aCollisionRowSpan, i>
  [ 42] objcall 81 .............................. me.aCollisionRowSpan.add(i)
  [ 44] pushint8 1
  [ 46] getlocal 0
  [ 48] add
  [ 49] setlocal 0
  [ 51] endrepeat [ 22]
  [ 53] getparam 0 .............................. <me>
  [ 55] pushint8 36 ............................. <36>
  [ 57] setobjprop 263 .......................... me.iCollisionWidth = 36
  [ 60] getparam 0 .............................. <me>
  [ 62] pushint8 32 ............................. <32>
  [ 64] setobjprop 264 .......................... me.iCollisionHeight = 32
  [ 67] getparam 0 .............................. <me>
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 590 .......................... <me.iEndCol>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 589 .......................... <me.iStartCol>
  [ 79] sub ..................................... <me.iEndCol - me.iStartCol>
  [ 80] pusharglist 1 ........................... <me.iEndCol - me.iStartCol>
  [ 82] extcall 624 ............................. <abs(me.iEndCol - me.iStartCol)>
  [ 85] setobjprop 625 .......................... me.iTravelCols = abs(me.iEndCol - me.iStartCol)
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglist 0 ........................... <[]>
  [ 92] pushlist ................................ <[]>
  [ 93] setobjprop 585 .......................... me.aSteps = []
  [ 96] getparam 0 .............................. <me>
  [ 98] pusharglist 0 ........................... <[]>
  [100] pushlist ................................ <[]>
  [101] setobjprop 586 .......................... me.aDepths = []
  [104] getparam 0 .............................. <me>
  [106] pusharglist 0 ........................... <[]>
  [108] pushlist ................................ <[]>
  [109] setobjprop 587 .......................... me.aRows = []
  [112] getparam 0 .............................. <me>
  [114] pusharglist 0 ........................... <[]>
  [116] pushlist ................................ <[]>
  [117] setobjprop 588 .......................... me.aCols = []
  [120] getparam 0 .............................. <me>
  [122] getobjprop 590 .......................... <me.iEndCol>
  [125] getparam 0 .............................. <me>
  [127] getobjprop 589 .......................... <me.iStartCol>
  [130] lt ...................................... <me.iEndCol < me.iStartCol>
  [131] setlocal 1 .............................. bDecreasing = me.iEndCol < me.iStartCol
  [133] getparam 0 .............................. <me>
  [135] getobjprop 589 .......................... <me.iStartCol>
  [138] setlocal 0
  [140] getlocal 0
  [142] getparam 0 .............................. <me>
  [144] getobjprop 590 .......................... <me.iEndCol>
  [147] pushint8 1 .............................. <1>
  [149] sub ..................................... <me.iEndCol - 1>
  [150] lteq
  [151] jmpifz [356] ............................ repeat with i = me.iStartCol to me.iEndCol - 1
  [154] getglobal 271 ........................... <oIsoScene>
  [157] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [160] pushsymb 273 ............................ <#aSquares>
  [163] getparam 0 .............................. <me>
  [165] getobjprop 591 .......................... <me.iStartRow>
  [168] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, me.iStartRow>
  [170] objcall 274 ............................. <oIsoScene.oGrid.aSquares[me.iStartRow]>
  [173] getlocal 0 .............................. <i>
  [175] pushint8 1 .............................. <1>
  [177] add ..................................... <i + 1>
  [178] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[me.iStartRow], i + 1>
  [180] objcall 86 .............................. <oIsoScene.oGrid.aSquares[me.iStartRow][i + 1]>
  [182] pusharglist 1 ........................... <oIsoScene.oGrid.aSquares[me.iStartRow][i + 1]>
  [184] objcall 474 ............................. <oIsoScene.oGrid.aSquares[me.iStartRow][i + 1].calcViewCenter()>
  [187] getglobal 271 ........................... <oIsoScene>
  [190] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [193] pushsymb 273 ............................ <#aSquares>
  [196] getparam 0 .............................. <me>
  [198] getobjprop 591 .......................... <me.iStartRow>
  [201] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, me.iStartRow>
  [203] objcall 274 ............................. <oIsoScene.oGrid.aSquares[me.iStartRow]>
  [206] getlocal 0 .............................. <i>
  [208] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[me.iStartRow], i>
  [210] objcall 86 .............................. <oIsoScene.oGrid.aSquares[me.iStartRow][i]>
  [212] pusharglist 1 ........................... <oIsoScene.oGrid.aSquares[me.iStartRow][i]>
  [214] objcall 474 ............................. <oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter()>
  [217] sub ..................................... <oIsoScene.oGrid.aSquares[me.iStartRow][i + 1].calcViewCenter() - oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter()>
  [218] setlocal 2 .............................. interDist = oIsoScene.oGrid.aSquares[me.iStartRow][i + 1].calcViewCenter() - oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter()
  [220] pushzero ................................ <0>
  [221] setlocal 3
  [223] getlocal 3
  [225] pushint8 3 .............................. <3>
  [227] lteq
  [228] jmpifz [347] ............................ repeat with j = 0 to 3
  [231] getparam 0 .............................. <me>
  [233] getobjprop 618 .......................... <me.iEndRow>
  [236] setlocal 4 .............................. jRow = me.iEndRow
  [238] getlocal 0 .............................. <i>
  [240] setlocal 5 .............................. jCol = i
  [242] getparam 0 .............................. <me>
  [244] getchainedprop 587 ...................... <me.aRows>
  [247] getlocal 4 .............................. <jRow>
  [249] pusharglistnoret 2 ...................... <me.aRows, jRow>
  [251] objcall 81 .............................. me.aRows.add(jRow)
  [253] getparam 0 .............................. <me>
  [255] getchainedprop 588 ...................... <me.aCols>
  [258] getlocal 5 .............................. <jCol>
  [260] pusharglistnoret 2 ...................... <me.aCols, jCol>
  [262] objcall 81 .............................. me.aCols.add(jCol)
  [264] getparam 0 .............................. <me>
  [266] getchainedprop 586 ...................... <me.aDepths>
  [269] getlocal 4 .............................. <jRow>
  [271] pushint8 100 ............................ <100>
  [273] mul ..................................... <jRow * 100>
  [274] getlocal 5 .............................. <jCol>
  [276] add ..................................... <(jRow * 100) + jCol>
  [277] pusharglistnoret 2 ...................... <me.aDepths, (jRow * 100) + jCol>
  [279] objcall 81 .............................. me.aDepths.add((jRow * 100) + jCol)
  [281] getparam 0 .............................. <me>
  [283] getchainedprop 585 ...................... <me.aSteps>
  [286] getglobal 271 ........................... <oIsoScene>
  [289] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [292] pushsymb 273 ............................ <#aSquares>
  [295] getparam 0 .............................. <me>
  [297] getobjprop 591 .......................... <me.iStartRow>
  [300] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, me.iStartRow>
  [302] objcall 274 ............................. <oIsoScene.oGrid.aSquares[me.iStartRow]>
  [305] getlocal 0 .............................. <i>
  [307] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[me.iStartRow], i>
  [309] objcall 86 .............................. <oIsoScene.oGrid.aSquares[me.iStartRow][i]>
  [311] pusharglist 1 ........................... <oIsoScene.oGrid.aSquares[me.iStartRow][i]>
  [313] objcall 474 ............................. <oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter()>
  [316] getlocal 2 .............................. <interDist>
  [318] pushfloat32 1.0 ......................... <1.0>
  [323] mul ..................................... <interDist * 1.0>
  [324] getparam 0 .............................. <me>
  [326] getobjprop 592 .......................... <me.iStepsPerSquare>
  [329] div ..................................... <interDist * 1.0 / me.iStepsPerSquare>
  [330] getlocal 3 .............................. <j>
  [332] mul ..................................... <interDist * 1.0 / me.iStepsPerSquare * j>
  [333] add ..................................... <oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter() + (interDist * 1.0 / me.iStepsPerSquare * j)>
  [334] pusharglistnoret 2 ...................... <me.aSteps, oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter() + (interDist * 1.0 / me.iStepsPerSquare * j)>
  [336] objcall 81 .............................. me.aSteps.add(oIsoScene.oGrid.aSquares[me.iStartRow][i].calcViewCenter() + (interDist * 1.0 / me.iStepsPerSquare * j))
  [338] pushint8 1
  [340] getlocal 3
  [342] add
  [343] setlocal 3
  [345] endrepeat [223]
  [347] pushint8 1
  [349] getlocal 0
  [351] add
  [352] setlocal 0
  [354] endrepeat [140]
  [356] getparam 0 .............................. <me>
  [358] pushint8 1 .............................. <1>
  [360] pushint8 1 .............................. <1>
  [362] inv ..................................... <-1>
  [363] pusharglist 2 ........................... <[1, -1]>
  [365] pushlist ................................ <[1, -1]>
  [366] pushint8 2 .............................. <2>
  [368] pusharglist 1 ........................... <2>
  [370] extcall 55 .............................. <random(2)>
  [372] pusharglist 2 ........................... <[1, -1], random(2)>
  [374] objcall 86 .............................. <[1, -1][random(2)]>
  [376] setobjprop 295 .......................... me.iDirection = [1, -1][random(2)]
  [379] getparam 0 .............................. <me>
  [381] getparam 0 .............................. <me>
  [383] pushsymb 585 ............................ <#aSteps>
  [386] pusharglist 2 ........................... <me, #aSteps>
  [388] objcall 88 .............................. <me.aSteps.count>
  [390] pushint8 2 .............................. <2>
  [392] sub ..................................... <me.aSteps.count - 2>
  [393] pusharglist 1 ........................... <me.aSteps.count - 2>
  [395] extcall 55 .............................. <random(me.aSteps.count - 2)>
  [397] pushint8 1 .............................. <1>
  [399] add ..................................... <random(me.aSteps.count - 2) + 1>
  [400] setobjprop 593 .......................... me.iPathPosition = random(me.aSteps.count - 2) + 1
  [403] getparam 0 .............................. <me>
  [405] getobjprop 584 .......................... <me.spriteNum>
  [408] pusharglist 1 ........................... <me.spriteNum>
  [410] extcall 79 .............................. <sprite(me.spriteNum)>
  [412] getparam 0 .............................. <me>
  [414] pushsymb 586 ............................ <#aDepths>
  [417] getparam 0 .............................. <me>
  [419] getobjprop 593 .......................... <me.iPathPosition>
  [422] pusharglist 3 ........................... <me, #aDepths, me.iPathPosition>
  [424] objcall 54 .............................. <me.aDepths[me.iPathPosition]>
  [426] setobjprop 134 .......................... sprite(me.spriteNum).locZ = me.aDepths[me.iPathPosition]
  [428] getparam 0 .............................. <me>
  [430] getparam 0 .............................. <me>
  [432] pushsymb 587 ............................ <#aRows>
  [435] getparam 0 .............................. <me>
  [437] getobjprop 593 .......................... <me.iPathPosition>
  [440] pusharglist 3 ........................... <me, #aRows, me.iPathPosition>
  [442] objcall 54 .............................. <me.aRows[me.iPathPosition]>
  [444] setobjprop 460 .......................... me.iRow = me.aRows[me.iPathPosition]
  [447] getparam 0 .............................. <me>
  [449] getparam 0 .............................. <me>
  [451] pushsymb 588 ............................ <#aCols>
  [454] getparam 0 .............................. <me>
  [456] getobjprop 593 .......................... <me.iPathPosition>
  [459] pusharglist 3 ........................... <me, #aCols, me.iPathPosition>
  [461] objcall 54 .............................. <me.aCols[me.iPathPosition]>
  [463] setobjprop 461 .......................... me.iCol = me.aCols[me.iPathPosition]
  [466] getparam 0 .............................. <me>
  [468] getobjprop 584 .......................... <me.spriteNum>
  [471] pusharglist 1 ........................... <me.spriteNum>
  [473] extcall 79 .............................. <sprite(me.spriteNum)>
  [475] getparam 0 .............................. <me>
  [477] pushsymb 585 ............................ <#aSteps>
  [480] getparam 0 .............................. <me>
  [482] getobjprop 593 .......................... <me.iPathPosition>
  [485] pusharglist 3 ........................... <me, #aSteps, me.iPathPosition>
  [487] objcall 54 .............................. <me.aSteps[me.iPathPosition]>
  [489] setobjprop 80 ........................... sprite(me.spriteNum).loc = me.aSteps[me.iPathPosition]
  [491] getparam 0 .............................. <me>
  [493] pushint8 15 ............................. <15>
  [495] setobjprop 311 .......................... me.iFPS = 15
  [498] getparam 0 .............................. <me>
  [500] getmovieprop 281 ........................ <the milliSeconds>
  [503] setobjprop 312 .......................... me.iFPSTimer = the milliSeconds
  [506] getparam 0 .............................. <me>
  [508] pushint16 1000 .......................... <1000>
  [511] getparam 0 .............................. <me>
  [513] getobjprop 311 .......................... <me.iFPS>
  [516] div ..................................... <1000 / me.iFPS>
  [517] setobjprop 313 .......................... me.iFPSTimerLength = 1000 / me.iFPS
  [520] getparam 0 .............................. <me>
  [522] getmovieprop 281 ........................ <the milliSeconds>
  [525] setobjprop 643 .......................... me.iRandomDirTimer = the milliSeconds
  [528] getparam 0 .............................. <me>
  [530] pushint16 1000 .......................... <1000>
  [533] pushint8 5 .............................. <5>
  [535] mul ..................................... <1000 * 5>
  [536] setobjprop 644 .......................... me.iRandomDirTimerLength = 1000 * 5
  [539] getmovieprop 60 ......................... <the actorList>
  [541] getparam 0 .............................. <me>
  [543] pusharglistnoret 2 ...................... <the actorList, me>
  [545] objcall 81 .............................. (the actorList).add(me)
  [547] ret
end

on pauseMachine me, bPauseValue
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bPauseValue>
  [  4] setobjprop 296 .......................... me.bPaused = bPauseValue
  [  7] getparam 1 .............................. <bPauseValue>
  [  9] not ..................................... <not bPauseValue>
  [ 10] jmpifz [ 48] ............................ if not bPauseValue then / else
  [ 13] getglobal 138 ........................... <oSpriteManager>
  [ 15] getobjprop 647 .......................... <oSpriteManager.iWhaleCartSound>
  [ 18] pusharglist 1 ........................... <oSpriteManager.iWhaleCartSound>
  [ 20] extcall 137 ............................. <sound(oSpriteManager.iWhaleCartSound)>
  [ 22] pushint8 125 ............................ <125>
  [ 24] setobjprop 140 .......................... sound(oSpriteManager.iWhaleCartSound).volume = 125
  [ 26] getglobal 138 ........................... <oSpriteManager>
  [ 28] getobjprop 647 .......................... <oSpriteManager.iWhaleCartSound>
  [ 31] pusharglist 1 ........................... <oSpriteManager.iWhaleCartSound>
  [ 33] extcall 137 ............................. <sound(oSpriteManager.iWhaleCartSound)>
  [ 35] pushcons 0 .............................. <"SQUEAKS4">
  [ 37] pusharglist 1 ........................... <"SQUEAKS4">
  [ 39] extcall 142 ............................. <member("SQUEAKS4")>
  [ 41] pusharglistnoret 2 ...................... <sound(oSpriteManager.iWhaleCartSound), member("SQUEAKS4")>
  [ 43] objcall 143 ............................. sound(oSpriteManager.iWhaleCartSound).play(member("SQUEAKS4"))
  [ 45] jmp [ 61]
  [ 48] getglobal 138 ........................... <oSpriteManager>
  [ 50] getobjprop 647 .......................... <oSpriteManager.iWhaleCartSound>
  [ 53] pusharglist 1 ........................... <oSpriteManager.iWhaleCartSound>
  [ 55] extcall 137 ............................. <sound(oSpriteManager.iWhaleCartSound)>
  [ 57] pusharglistnoret 1 ...................... <sound(oSpriteManager.iWhaleCartSound)>
  [ 59] objcall 155 ............................. sound(oSpriteManager.iWhaleCartSound).stop()
  [ 61] ret
end

on getCollisionRect me, theRowIndex
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 584 .......................... <me.spriteNum>
  [  5] pusharglist 1 ........................... <me.spriteNum>
  [  7] extcall 79 .............................. <sprite(me.spriteNum)>
  [  9] getobjprop 80 ........................... <sprite(me.spriteNum).loc>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 263 .......................... <me.iCollisionWidth>
  [ 16] pushint8 2 .............................. <2>
  [ 18] div ..................................... <me.iCollisionWidth / 2>
  [ 19] getparam 0 .............................. <me>
  [ 21] getobjprop 264 .......................... <me.iCollisionHeight>
  [ 24] pusharglist 2 ........................... <me.iCollisionWidth / 2, me.iCollisionHeight>
  [ 26] extcall 132 ............................. <point(me.iCollisionWidth / 2, me.iCollisionHeight)>
  [ 28] sub ..................................... <sprite(me.spriteNum).loc - point(me.iCollisionWidth / 2, me.iCollisionHeight)>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 584 .......................... <me.spriteNum>
  [ 34] pusharglist 1 ........................... <me.spriteNum>
  [ 36] extcall 79 .............................. <sprite(me.spriteNum)>
  [ 38] getobjprop 80 ........................... <sprite(me.spriteNum).loc>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 263 .......................... <me.iCollisionWidth>
  [ 45] pushint8 2 .............................. <2>
  [ 47] div ..................................... <me.iCollisionWidth / 2>
  [ 48] pushzero ................................ <0>
  [ 49] pusharglist 2 ........................... <me.iCollisionWidth / 2, 0>
  [ 51] extcall 132 ............................. <point(me.iCollisionWidth / 2, 0)>
  [ 53] add ..................................... <sprite(me.spriteNum).loc + point(me.iCollisionWidth / 2, 0)>
  [ 54] pusharglist 2 ........................... <sprite(me.spriteNum).loc - point(me.iCollisionWidth / 2, me.iCollisionHeight), sprite(me.spriteNum).loc + point(me.iCollisionWidth / 2, 0)>
  [ 56] extcall 133 ............................. <rect(sprite(me.spriteNum).loc - point(me.iCollisionWidth / 2, me.iCollisionHeight), sprite(me.spriteNum).loc + point(me.iCollisionWidth / 2, 0))>
  [ 58] setlocal 0 .............................. rRawRect = rect(sprite(me.spriteNum).loc - point(me.iCollisionWidth / 2, me.iCollisionHeight), sprite(me.spriteNum).loc + point(me.iCollisionWidth / 2, 0))
  [ 60] getparam 1 .............................. <theRowIndex>
  [ 62] pushint8 1 .............................. <1>
  [ 64] sub ..................................... <theRowIndex - 1>
  [ 65] getglobal 271 ........................... <oIsoScene>
  [ 68] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [ 71] pushsymb 273 ............................ <#aSquares>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 1>
  [ 78] objcall 274 ............................. <oIsoScene.oGrid.aSquares[1]>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[1], 1>
  [ 85] objcall 86 .............................. <oIsoScene.oGrid.aSquares[1][1]>
  [ 87] pushsymb 648 ............................ <#oViewPoints>
  [ 90] pushint8 4 .............................. <4>
  [ 92] pusharglist 3 ........................... <oIsoScene.oGrid.aSquares[1][1], #oViewPoints, 4>
  [ 94] objcall 54 .............................. <oIsoScene.oGrid.aSquares[1][1].oViewPoints[4]>
  [ 96] getglobal 271 ........................... <oIsoScene>
  [ 99] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [102] pushsymb 273 ............................ <#aSquares>
  [105] pushint8 1 .............................. <1>
  [107] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 1>
  [109] objcall 274 ............................. <oIsoScene.oGrid.aSquares[1]>
  [112] pushint8 1 .............................. <1>
  [114] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[1], 1>
  [116] objcall 86 .............................. <oIsoScene.oGrid.aSquares[1][1]>
  [118] pushsymb 648 ............................ <#oViewPoints>
  [121] pushint8 2 .............................. <2>
  [123] pusharglist 3 ........................... <oIsoScene.oGrid.aSquares[1][1], #oViewPoints, 2>
  [125] objcall 54 .............................. <oIsoScene.oGrid.aSquares[1][1].oViewPoints[2]>
  [127] sub ..................................... <oIsoScene.oGrid.aSquares[1][1].oViewPoints[4] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[2]>
  [128] mul ..................................... <(theRowIndex - 1) * (oIsoScene.oGrid.aSquares[1][1].oViewPoints[4] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[2])>
  [129] pushfloat32 2.0 ......................... <2.0>
  [134] div ..................................... <(theRowIndex - 1) * (oIsoScene.oGrid.aSquares[1][1].oViewPoints[4] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[2]) / 2.0>
  [135] setlocal 1 .............................. pXDif = (theRowIndex - 1) * (oIsoScene.oGrid.aSquares[1][1].oViewPoints[4] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[2]) / 2.0
  [137] getparam 1 .............................. <theRowIndex>
  [139] pushint8 1 .............................. <1>
  [141] sub ..................................... <theRowIndex - 1>
  [142] getglobal 271 ........................... <oIsoScene>
  [145] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [148] pushsymb 273 ............................ <#aSquares>
  [151] pushint8 1 .............................. <1>
  [153] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 1>
  [155] objcall 274 ............................. <oIsoScene.oGrid.aSquares[1]>
  [158] pushint8 1 .............................. <1>
  [160] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[1], 1>
  [162] objcall 86 .............................. <oIsoScene.oGrid.aSquares[1][1]>
  [164] pushsymb 648 ............................ <#oViewPoints>
  [167] pushint8 1 .............................. <1>
  [169] pusharglist 3 ........................... <oIsoScene.oGrid.aSquares[1][1], #oViewPoints, 1>
  [171] objcall 54 .............................. <oIsoScene.oGrid.aSquares[1][1].oViewPoints[1]>
  [173] getglobal 271 ........................... <oIsoScene>
  [176] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [179] pushsymb 273 ............................ <#aSquares>
  [182] pushint8 1 .............................. <1>
  [184] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 1>
  [186] objcall 274 ............................. <oIsoScene.oGrid.aSquares[1]>
  [189] pushint8 1 .............................. <1>
  [191] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[1], 1>
  [193] objcall 86 .............................. <oIsoScene.oGrid.aSquares[1][1]>
  [195] pushsymb 648 ............................ <#oViewPoints>
  [198] pushint8 3 .............................. <3>
  [200] pusharglist 3 ........................... <oIsoScene.oGrid.aSquares[1][1], #oViewPoints, 3>
  [202] objcall 54 .............................. <oIsoScene.oGrid.aSquares[1][1].oViewPoints[3]>
  [204] sub ..................................... <oIsoScene.oGrid.aSquares[1][1].oViewPoints[1] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[3]>
  [205] mul ..................................... <(theRowIndex - 1) * (oIsoScene.oGrid.aSquares[1][1].oViewPoints[1] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[3])>
  [206] pushfloat32 2.0 ......................... <2.0>
  [211] div ..................................... <(theRowIndex - 1) * (oIsoScene.oGrid.aSquares[1][1].oViewPoints[1] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[3]) / 2.0>
  [212] setlocal 2 .............................. pYDif = (theRowIndex - 1) * (oIsoScene.oGrid.aSquares[1][1].oViewPoints[1] - oIsoScene.oGrid.aSquares[1][1].oViewPoints[3]) / 2.0
  [214] getlocal 1 .............................. <pXDif>
  [216] pushint8 1 .............................. <1>
  [218] pusharglist 2 ........................... <pXDif, 1>
  [220] objcall 86 .............................. <pXDif[1]>
  [222] pusharglist 1 ........................... <pXDif[1]>
  [224] extcall 624 ............................. <abs(pXDif[1])>
  [227] getlocal 1 .............................. <pXDif>
  [229] pushint8 2 .............................. <2>
  [231] pusharglist 2 ........................... <pXDif, 2>
  [233] objcall 86 .............................. <pXDif[2]>
  [235] pusharglist 1 ........................... <pXDif[2]>
  [237] extcall 624 ............................. <abs(pXDif[2])>
  [240] getlocal 1 .............................. <pXDif>
  [242] pushint8 1 .............................. <1>
  [244] pusharglist 2 ........................... <pXDif, 1>
  [246] objcall 86 .............................. <pXDif[1]>
  [248] pusharglist 1 ........................... <pXDif[1]>
  [250] extcall 624 ............................. <abs(pXDif[1])>
  [253] getlocal 1 .............................. <pXDif>
  [255] pushint8 2 .............................. <2>
  [257] pusharglist 2 ........................... <pXDif, 2>
  [259] objcall 86 .............................. <pXDif[2]>
  [261] pusharglist 1 ........................... <pXDif[2]>
  [263] extcall 624 ............................. <abs(pXDif[2])>
  [266] pusharglist 4 ........................... <abs(pXDif[1]), abs(pXDif[2]), abs(pXDif[1]), abs(pXDif[2])>
  [268] extcall 133 ............................. <rect(abs(pXDif[1]), abs(pXDif[2]), abs(pXDif[1]), abs(pXDif[2]))>
  [270] setlocal 3 .............................. rXDif = rect(abs(pXDif[1]), abs(pXDif[2]), abs(pXDif[1]), abs(pXDif[2]))
  [272] getlocal 2 .............................. <pYDif>
  [274] pushint8 1 .............................. <1>
  [276] pusharglist 2 ........................... <pYDif, 1>
  [278] objcall 86 .............................. <pYDif[1]>
  [280] pusharglist 1 ........................... <pYDif[1]>
  [282] extcall 624 ............................. <abs(pYDif[1])>
  [285] getlocal 2 .............................. <pYDif>
  [287] pushint8 2 .............................. <2>
  [289] pusharglist 2 ........................... <pYDif, 2>
  [291] objcall 86 .............................. <pYDif[2]>
  [293] pusharglist 1 ........................... <pYDif[2]>
  [295] extcall 624 ............................. <abs(pYDif[2])>
  [298] getlocal 2 .............................. <pYDif>
  [300] pushint8 1 .............................. <1>
  [302] pusharglist 2 ........................... <pYDif, 1>
  [304] objcall 86 .............................. <pYDif[1]>
  [306] pusharglist 1 ........................... <pYDif[1]>
  [308] extcall 624 ............................. <abs(pYDif[1])>
  [311] getlocal 2 .............................. <pYDif>
  [313] pushint8 2 .............................. <2>
  [315] pusharglist 2 ........................... <pYDif, 2>
  [317] objcall 86 .............................. <pYDif[2]>
  [319] pusharglist 1 ........................... <pYDif[2]>
  [321] extcall 624 ............................. <abs(pYDif[2])>
  [324] pusharglist 4 ........................... <abs(pYDif[1]), abs(pYDif[2]), abs(pYDif[1]), abs(pYDif[2])>
  [326] extcall 133 ............................. <rect(abs(pYDif[1]), abs(pYDif[2]), abs(pYDif[1]), abs(pYDif[2]))>
  [328] setlocal 4 .............................. rYDif = rect(abs(pYDif[1]), abs(pYDif[2]), abs(pYDif[1]), abs(pYDif[2]))
  [330] getlocal 0 .............................. <rRawRect>
  [332] getlocal 3 .............................. <rXDif>
  [334] sub ..................................... <rRawRect - rXDif>
  [335] getlocal 4 .............................. <rYDif>
  [337] add ..................................... <rRawRect - rXDif + rYDif>
  [338] pusharglistnoret 1 ...................... <rRawRect - rXDif + rYDif>
  [340] extcall 63 .............................. return rRawRect - rXDif + rYDif
  [342] ret
end

on testCollision me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bCollision = 0
  [  3] getglobal 97 ............................ <oAvatar>
  [  5] not ..................................... <not oAvatar>
  [  6] pusharglist 0 ........................... <>
  [  8] extcall 59 .............................. <VOID>
  [ 10] eq ...................................... <not oAvatar = VOID>
  [ 11] jmpifz [219] ............................ if not oAvatar = VOID then
  [ 14] pushint8 1 .............................. <1>
  [ 16] setlocal 1
  [ 18] getlocal 1
  [ 20] getparam 0 .............................. <me>
  [ 22] pushsymb 646 ............................ <#aCollisionRowSpan>
  [ 25] pusharglist 2 ........................... <me, #aCollisionRowSpan>
  [ 27] objcall 88 .............................. <me.aCollisionRowSpan.count>
  [ 29] lteq
  [ 30] jmpifz [219] ............................ repeat with i = 1 to me.aCollisionRowSpan.count
  [ 33] getglobal 483 ........................... <bDebugCollision>
  [ 36] jmpifz [144] ............................ if bDebugCollision then
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 584 .......................... <me.spriteNum>
  [ 44] pushint16 160 ........................... <160>
  [ 47] add ..................................... <me.spriteNum + 160>
  [ 48] setlocal 2 .............................. cSprite = me.spriteNum + 160
  [ 50] getlocal 2 .............................. <cSprite>
  [ 52] getlocal 1 .............................. <i>
  [ 54] add ..................................... <cSprite + i>
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglistnoret 2 ...................... <cSprite + i, 1>
  [ 59] extcall 384 ............................. puppetSprite(cSprite + i, 1)
  [ 62] getlocal 2 .............................. <cSprite>
  [ 64] getlocal 1 .............................. <i>
  [ 66] add ..................................... <cSprite + i>
  [ 67] pusharglist 1 ........................... <cSprite + i>
  [ 69] extcall 79 .............................. <sprite(cSprite + i)>
  [ 71] pushcons 1 .............................. <"testbox">
  [ 73] pusharglist 1 ........................... <"testbox">
  [ 75] extcall 142 ............................. <member("testbox")>
  [ 77] setobjprop 142 .......................... sprite(cSprite + i).member = member("testbox")
  [ 79] getlocal 2 .............................. <cSprite>
  [ 81] getlocal 1 .............................. <i>
  [ 83] add ..................................... <cSprite + i>
  [ 84] pusharglist 1 ........................... <cSprite + i>
  [ 86] extcall 79 .............................. <sprite(cSprite + i)>
  [ 88] getlocal 1 .............................. <i>
  [ 90] pusharglist 1 ........................... <i>
  [ 92] extcall 497 ............................. <float(i)>
  [ 95] getparam 0 .............................. <me>
  [ 97] pushsymb 646 ............................ <#aCollisionRowSpan>
  [100] pusharglist 2 ........................... <me, #aCollisionRowSpan>
  [102] objcall 88 .............................. <me.aCollisionRowSpan.count>
  [104] div ..................................... <float(i) / me.aCollisionRowSpan.count>
  [105] pushint8 100 ............................ <100>
  [107] mul ..................................... <float(i) / me.aCollisionRowSpan.count * 100>
  [108] setobjprop 484 .......................... sprite(cSprite + i).blend = float(i) / me.aCollisionRowSpan.count * 100
  [111] getlocal 2 .............................. <cSprite>
  [113] getlocal 1 .............................. <i>
  [115] add ..................................... <cSprite + i>
  [116] pusharglist 1 ........................... <cSprite + i>
  [118] extcall 79 .............................. <sprite(cSprite + i)>
  [120] getparam 0 .............................. <me>
  [122] getlocal 1 .............................. <i>
  [124] pusharglist 2 ........................... <me, i>
  [126] objcall 171 ............................. <me.getCollisionRect(i)>
  [128] setobjprop 133 .......................... sprite(cSprite + i).rect = me.getCollisionRect(i)
  [130] getlocal 2 .............................. <cSprite>
  [132] getlocal 1 .............................. <i>
  [134] add ..................................... <cSprite + i>
  [135] pusharglist 1 ........................... <cSprite + i>
  [137] extcall 79 .............................. <sprite(cSprite + i)>
  [139] pushint16 10000 ......................... <10000>
  [142] setobjprop 134 .......................... sprite(cSprite + i).locZ = 10000
  [144] getparam 0 .............................. <me>
  [146] getlocal 1 .............................. <i>
  [148] pusharglist 2 ........................... <me, i>
  [150] objcall 171 ............................. <me.getCollisionRect(i)>
  [152] getglobal 97 ............................ <oAvatar>
  [154] pusharglist 1 ........................... <oAvatar>
  [156] objcall 171 ............................. <oAvatar.getCollisionRect()>
  [158] pusharglist 2 ........................... <me.getCollisionRect(i), oAvatar.getCollisionRect()>
  [160] extcall 640 ............................. <intersect(me.getCollisionRect(i), oAvatar.getCollisionRect())>
  [163] pushzero ................................ <0>
  [164] pushzero ................................ <0>
  [165] pushzero ................................ <0>
  [166] pushzero ................................ <0>
  [167] pusharglist 4 ........................... <0, 0, 0, 0>
  [169] extcall 133 ............................. <rect(0, 0, 0, 0)>
  [171] eq ...................................... <intersect(me.getCollisionRect(i), oAvatar.getCollisionRect()) = rect(0, 0, 0, 0)>
  [172] not ..................................... <not (intersect(me.getCollisionRect(i), oAvatar.getCollisionRect()) = rect(0, 0, 0, 0))>
  [173] setlocal 3 .............................. bSpriteIntersection = not (intersect(me.getCollisionRect(i), oAvatar.getCollisionRect()) = rect(0, 0, 0, 0))
  [175] getlocal 3 .............................. <bSpriteIntersection>
  [177] jmpifz [210] ............................ if bSpriteIntersection then
  [180] getglobal 97 ............................ <oAvatar>
  [182] pusharglist 1 ........................... <oAvatar>
  [184] objcall 212 ............................. <oAvatar.getCurrentSquareForCollision()>
  [186] getobjprop 460 .......................... <oAvatar.getCurrentSquareForCollision().iRow>
  [189] getparam 0 .............................. <me>
  [191] pushsymb 646 ............................ <#aCollisionRowSpan>
  [194] getlocal 1 .............................. <i>
  [196] pusharglist 3 ........................... <me, #aCollisionRowSpan, i>
  [198] objcall 54 .............................. <me.aCollisionRowSpan[i]>
  [200] eq ...................................... <oAvatar.getCurrentSquareForCollision().iRow = me.aCollisionRowSpan[i]>
  [201] jmpifz [210] ............................ if oAvatar.getCurrentSquareForCollision().iRow = me.aCollisionRowSpan[i] then
  [204] pushint8 1 .............................. <1>
  [206] pusharglistnoret 1 ...................... <1>
  [208] extcall 63 .............................. return 1
  [210] pushint8 1
  [212] getlocal 1
  [214] add
  [215] setlocal 1
  [217] endrepeat [ 18]
  [219] getlocal 0 .............................. <bCollision>
  [221] pusharglistnoret 1 ...................... <bCollision>
  [223] extcall 63 .............................. return bCollision
  [225] ret
end

on drawBots me
  [  0] getmovieprop 281 ........................ <the milliSeconds>
  [  3] getparam 0 .............................. <me>
  [  5] getobjprop 643 .......................... <me.iRandomDirTimer>
  [  8] sub ..................................... <the milliSeconds - me.iRandomDirTimer>
  [  9] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iRandomDirTimer
  [ 11] getlocal 0 .............................. <iElapsedTime>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 644 .......................... <me.iRandomDirTimerLength>
  [ 18] gteq .................................... <iElapsedTime >= me.iRandomDirTimerLength>
  [ 19] pushint16 150 ........................... <150>
  [ 22] pusharglist 1 ........................... <150>
  [ 24] extcall 55 .............................. <random(150)>
  [ 26] pushint8 1 .............................. <1>
  [ 28] eq ...................................... <random(150) = 1>
  [ 29] and ..................................... <(iElapsedTime >= me.iRandomDirTimerLength) and (random(150) = 1)>
  [ 30] jmpifz [ 55] ............................ if (iElapsedTime >= me.iRandomDirTimerLength) and (random(150) = 1) then
  [ 33] getparam 0 .............................. <me>
  [ 35] getmovieprop 281 ........................ <the milliSeconds>
  [ 38] setobjprop 643 .......................... me.iRandomDirTimer = the milliSeconds
  [ 41] getparam 0 .............................. <me>
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 295 .......................... <me.iDirection>
  [ 48] pushint8 1 .............................. <1>
  [ 50] inv ..................................... <-1>
  [ 51] mul ..................................... <me.iDirection * -1>
  [ 52] setobjprop 295 .......................... me.iDirection = me.iDirection * -1
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 593 .......................... <me.iPathPosition>
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 585 ............................ <#aSteps>
  [ 65] pusharglist 2 ........................... <me, #aSteps>
  [ 67] objcall 88 .............................. <me.aSteps.count>
  [ 69] eq ...................................... <me.iPathPosition = me.aSteps.count>
  [ 70] getparam 0 .............................. <me>
  [ 72] getobjprop 295 .......................... <me.iDirection>
  [ 75] pushint8 1 .............................. <1>
  [ 77] eq ...................................... <me.iDirection = 1>
  [ 78] and ..................................... <(me.iPathPosition = me.aSteps.count) and (me.iDirection = 1)>
  [ 79] jmpifz [ 93] ............................ if (me.iPathPosition = me.aSteps.count) and (me.iDirection = 1) then / else
  [ 82] getparam 0 .............................. <me>
  [ 84] pushint8 1 .............................. <1>
  [ 86] inv ..................................... <-1>
  [ 87] setobjprop 295 .......................... me.iDirection = -1
  [ 90] jmp [121]
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 593 .......................... <me.iPathPosition>
  [ 98] pushint8 1 .............................. <1>
  [100] eq ...................................... <me.iPathPosition = 1>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 295 .......................... <me.iDirection>
  [106] pushint8 1 .............................. <1>
  [108] inv ..................................... <-1>
  [109] eq ...................................... <me.iDirection = -1>
  [110] and ..................................... <(me.iPathPosition = 1) and (me.iDirection = -1)>
  [111] jmpifz [121] ............................ if (me.iPathPosition = 1) and (me.iDirection = -1) then
  [114] getparam 0 .............................. <me>
  [116] pushint8 1 .............................. <1>
  [118] setobjprop 295 .......................... me.iDirection = 1
  [121] getparam 0 .............................. <me>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 593 .......................... <me.iPathPosition>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 295 .......................... <me.iDirection>
  [133] add ..................................... <me.iPathPosition + me.iDirection>
  [134] setobjprop 593 .......................... me.iPathPosition = me.iPathPosition + me.iDirection
  [137] getparam 0 .............................. <me>
  [139] getobjprop 584 .......................... <me.spriteNum>
  [142] pusharglist 1 ........................... <me.spriteNum>
  [144] extcall 79 .............................. <sprite(me.spriteNum)>
  [146] getparam 0 .............................. <me>
  [148] pushsymb 585 ............................ <#aSteps>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 593 .......................... <me.iPathPosition>
  [156] pusharglist 3 ........................... <me, #aSteps, me.iPathPosition>
  [158] objcall 54 .............................. <me.aSteps[me.iPathPosition]>
  [160] setobjprop 80 ........................... sprite(me.spriteNum).loc = me.aSteps[me.iPathPosition]
  [162] getparam 0 .............................. <me>
  [164] getobjprop 584 .......................... <me.spriteNum>
  [167] pusharglist 1 ........................... <me.spriteNum>
  [169] extcall 79 .............................. <sprite(me.spriteNum)>
  [171] getparam 0 .............................. <me>
  [173] pushsymb 586 ............................ <#aDepths>
  [176] getparam 0 .............................. <me>
  [178] getobjprop 593 .......................... <me.iPathPosition>
  [181] pusharglist 3 ........................... <me, #aDepths, me.iPathPosition>
  [183] objcall 54 .............................. <me.aDepths[me.iPathPosition]>
  [185] setobjprop 134 .......................... sprite(me.spriteNum).locZ = me.aDepths[me.iPathPosition]
  [187] getglobal 138 ........................... <oSpriteManager>
  [189] getobjprop 647 .......................... <oSpriteManager.iWhaleCartSound>
  [192] pusharglist 1 ........................... <oSpriteManager.iWhaleCartSound>
  [194] extcall 137 ............................. <sound(oSpriteManager.iWhaleCartSound)>
  [196] pushint8 1 .............................. <1>
  [198] getparam 0 .............................. <me>
  [200] pushsymb 588 ............................ <#aCols>
  [203] getparam 0 .............................. <me>
  [205] getobjprop 593 .......................... <me.iPathPosition>
  [208] pusharglist 3 ........................... <me, #aCols, me.iPathPosition>
  [210] objcall 54 .............................. <me.aCols[me.iPathPosition]>
  [212] pushint8 7 .............................. <7>
  [214] sub ..................................... <me.aCols[me.iPathPosition] - 7>
  [215] pusharglist 1 ........................... <me.aCols[me.iPathPosition] - 7>
  [217] extcall 497 ............................. <float(me.aCols[me.iPathPosition] - 7)>
  [220] pushint8 20 ............................. <20>
  [222] pushint8 7 .............................. <7>
  [224] sub ..................................... <20 - 7>
  [225] div ..................................... <float(me.aCols[me.iPathPosition] - 7) / (20 - 7)>
  [226] pushint16 200 ........................... <200>
  [229] mul ..................................... <float(me.aCols[me.iPathPosition] - 7) / (20 - 7) * 200>
  [230] pushint8 100 ............................ <100>
  [232] sub ..................................... <(float(me.aCols[me.iPathPosition] - 7) / (20 - 7) * 200) - 100>
  [233] mul ..................................... <1 * ((float(me.aCols[me.iPathPosition] - 7) / (20 - 7) * 200) - 100)>
  [234] setobjprop 141 .......................... sound(oSpriteManager.iWhaleCartSound).pan = 1 * ((float(me.aCols[me.iPathPosition] - 7) / (20 - 7) * 200) - 100)
  [236] getparam 0 .............................. <me>
  [238] getmovieprop 281 ........................ <the milliSeconds>
  [241] setobjprop 312 .......................... me.iFPSTimer = the milliSeconds
  [244] getparam 0 .............................. <me>
  [246] pusharglist 1 ........................... <me>
  [248] objcall 620 ............................. <me.testCollision()>
  [251] jmpifz [273] ............................ if me.testCollision() then
  [254] pushcons 2 .............................. <"The user has collided with the whale base cart.">
  [256] pusharglistnoret 1 ...................... <"The user has collided with the whale base cart.">
  [258] extcall 49 .............................. put "The user has collided with the whale base cart."
  [260] getglobal 97 ............................ <oAvatar>
  [262] getglobal 72 ............................ <oTextConstants>
  [264] getobjprop 655 .......................... <oTextConstants.sWhaleCartCollision>
  [267] pushcons 3 .............................. <"hit">
  [269] pusharglistnoret 3 ...................... <oAvatar, oTextConstants.sWhaleCartCollision, "hit">
  [271] objcall 206 ............................. oAvatar.doCollision(oTextConstants.sWhaleCartCollision, "hit")
  [273] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 296 .......................... <me.bPaused>
  [  5] not ..................................... <not me.bPaused>
  [  6] jmpifz [ 54] ............................ if not me.bPaused then
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 311 .......................... <me.iFPS>
  [ 14] pushzero ................................ <0>
  [ 15] gt ...................................... <me.iFPS > 0>
  [ 16] jmpifz [ 54] ............................ if me.iFPS > 0 then
  [ 19] getmovieprop 281 ........................ <the milliSeconds>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 312 .......................... <me.iFPSTimer>
  [ 27] sub ..................................... <the milliSeconds - me.iFPSTimer>
  [ 28] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iFPSTimer
  [ 30] getlocal 0 .............................. <iElapsedTime>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 313 .......................... <me.iFPSTimerLength>
  [ 37] gteq .................................... <iElapsedTime >= me.iFPSTimerLength>
  [ 38] jmpifz [ 54] ............................ if iElapsedTime >= me.iFPSTimerLength then
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 619 ............................. me.drawBots()
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 63 .............................. return 1
  [ 54] pushzero ................................ <0>
  [ 55] pusharglistnoret 1 ...................... <0>
  [ 57] extcall 63 .............................. return 0
  [ 59] ret
end

on getPropertyDescriptionList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. vRowColRange = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 30 ............................. <30>
  [ 13] lteq
  [ 14] jmpifz [ 34] ............................ repeat with i = 1 to 30
  [ 17] getlocal 0 .............................. <vRowColRange>
  [ 19] getlocal 1 .............................. <i>
  [ 21] pusharglistnoret 2 ...................... <vRowColRange, i>
  [ 23] objcall 81 .............................. vRowColRange.add(i)
  [ 25] pushint8 1
  [ 27] getlocal 1
  [ 29] add
  [ 30] setlocal 1
  [ 32] endrepeat [  9]
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] setlocal 2 .............................. vLayerRange = []
  [ 39] pushint8 1 .............................. <1>
  [ 41] setlocal 1
  [ 43] getlocal 1
  [ 45] pushint8 10 ............................. <10>
  [ 47] lteq
  [ 48] jmpifz [ 68] ............................ repeat with i = 1 to 10
  [ 51] getlocal 2 .............................. <vLayerRange>
  [ 53] getlocal 1 .............................. <i>
  [ 55] pusharglistnoret 2 ...................... <vLayerRange, i>
  [ 57] objcall 81 .............................. vLayerRange.add(i)
  [ 59] pushint8 1
  [ 61] getlocal 1
  [ 63] add
  [ 64] setlocal 1
  [ 66] endrepeat [ 43]
  [ 68] pusharglist 0 ........................... <[:]>
  [ 70] pushproplist ............................ <[:]>
  [ 71] setlocal 3 .............................. vList = [:]
  [ 73] getlocal 3 .............................. <vList>
  [ 75] pushsymb 591 ............................ <#iStartRow>
  [ 78] pushsymb 606 ............................ <#comment>
  [ 81] pushcons 4 .............................. <"Start Row">
  [ 83] pushsymb 607 ............................ <#range>
  [ 86] getlocal 0 .............................. <vRowColRange>
  [ 88] pushsymb 608 ............................ <#format>
  [ 91] pushsymb 123 ............................ <#integer>
  [ 93] pushsymb 609 ............................ <#default>
  [ 96] getlocal 0 .............................. <vRowColRange>
  [ 98] pushint8 1 .............................. <1>
  [100] pusharglist 2 ........................... <vRowColRange, 1>
  [102] objcall 86 .............................. <vRowColRange[1]>
  [104] pusharglist 8 ........................... <[#comment: "Start Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [106] pushproplist ............................ <[#comment: "Start Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [107] pusharglistnoret 3 ...................... <vList, #iStartRow, [#comment: "Start Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [109] objcall 610 ............................. vList.addProp(#iStartRow, [#comment: "Start Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]])
  [112] getlocal 3 .............................. <vList>
  [114] pushsymb 589 ............................ <#iStartCol>
  [117] pushsymb 606 ............................ <#comment>
  [120] pushcons 5 .............................. <"Start Column">
  [122] pushsymb 607 ............................ <#range>
  [125] getlocal 0 .............................. <vRowColRange>
  [127] pushsymb 608 ............................ <#format>
  [130] pushsymb 123 ............................ <#integer>
  [132] pushsymb 609 ............................ <#default>
  [135] getlocal 0 .............................. <vRowColRange>
  [137] pushint8 1 .............................. <1>
  [139] pusharglist 2 ........................... <vRowColRange, 1>
  [141] objcall 86 .............................. <vRowColRange[1]>
  [143] pusharglist 8 ........................... <[#comment: "Start Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [145] pushproplist ............................ <[#comment: "Start Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [146] pusharglistnoret 3 ...................... <vList, #iStartCol, [#comment: "Start Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [148] objcall 610 ............................. vList.addProp(#iStartCol, [#comment: "Start Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]])
  [151] getlocal 3 .............................. <vList>
  [153] pushsymb 618 ............................ <#iEndRow>
  [156] pushsymb 606 ............................ <#comment>
  [159] pushcons 6 .............................. <"End Row">
  [161] pushsymb 607 ............................ <#range>
  [164] getlocal 0 .............................. <vRowColRange>
  [166] pushsymb 608 ............................ <#format>
  [169] pushsymb 123 ............................ <#integer>
  [171] pushsymb 609 ............................ <#default>
  [174] getlocal 0 .............................. <vRowColRange>
  [176] pushint8 1 .............................. <1>
  [178] pusharglist 2 ........................... <vRowColRange, 1>
  [180] objcall 86 .............................. <vRowColRange[1]>
  [182] pusharglist 8 ........................... <[#comment: "End Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [184] pushproplist ............................ <[#comment: "End Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [185] pusharglistnoret 3 ...................... <vList, #iEndRow, [#comment: "End Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [187] objcall 610 ............................. vList.addProp(#iEndRow, [#comment: "End Row", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]])
  [190] getlocal 3 .............................. <vList>
  [192] pushsymb 590 ............................ <#iEndCol>
  [195] pushsymb 606 ............................ <#comment>
  [198] pushcons 7 .............................. <"End Column">
  [200] pushsymb 607 ............................ <#range>
  [203] getlocal 0 .............................. <vRowColRange>
  [205] pushsymb 608 ............................ <#format>
  [208] pushsymb 123 ............................ <#integer>
  [210] pushsymb 609 ............................ <#default>
  [213] getlocal 0 .............................. <vRowColRange>
  [215] pushint8 1 .............................. <1>
  [217] pusharglist 2 ........................... <vRowColRange, 1>
  [219] objcall 86 .............................. <vRowColRange[1]>
  [221] pusharglist 8 ........................... <[#comment: "End Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [223] pushproplist ............................ <[#comment: "End Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [224] pusharglistnoret 3 ...................... <vList, #iEndCol, [#comment: "End Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]]>
  [226] objcall 610 ............................. vList.addProp(#iEndCol, [#comment: "End Column", #range: vRowColRange, #format: #integer, #default: vRowColRange[1]])
  [229] getlocal 3 .............................. <vList>
  [231] pushsymb 611 ............................ <#iLayer>
  [234] pushsymb 606 ............................ <#comment>
  [237] pushcons 8 .............................. <"Layer">
  [239] pushsymb 607 ............................ <#range>
  [242] getlocal 2 .............................. <vLayerRange>
  [244] pushsymb 608 ............................ <#format>
  [247] pushsymb 123 ............................ <#integer>
  [249] pushsymb 609 ............................ <#default>
  [252] getlocal 2 .............................. <vLayerRange>
  [254] pushint8 1 .............................. <1>
  [256] pusharglist 2 ........................... <vLayerRange, 1>
  [258] objcall 86 .............................. <vLayerRange[1]>
  [260] pusharglist 8 ........................... <[#comment: "Layer", #range: vLayerRange, #format: #integer, #default: vLayerRange[1]]>
  [262] pushproplist ............................ <[#comment: "Layer", #range: vLayerRange, #format: #integer, #default: vLayerRange[1]]>
  [263] pusharglistnoret 3 ...................... <vList, #iLayer, [#comment: "Layer", #range: vLayerRange, #format: #integer, #default: vLayerRange[1]]>
  [265] objcall 610 ............................. vList.addProp(#iLayer, [#comment: "Layer", #range: vLayerRange, #format: #integer, #default: vLayerRange[1]])
  [268] getlocal 3 .............................. <vList>
  [270] pusharglistnoret 1 ...................... <vList>
  [272] extcall 63 .............................. return vList
  [274] ret
end
