property bDebug, oMath2d, oIsoConstants, iYRot, iXRot, fSinY, fSinX, fCosY, fCosX, iXOff, iYOff, iFPS, iSequenceRate, iSqSize, iRows, iCols, oGrid, oMap, oHotSpots, oSpriteManager, oMouseSquare, oMouseGridPoint, oFMath, oBackground, oFloor, oWall, oDoor, oWindow, oRugs, oFurniture, oWallItems, oAvatars, oStaticItems, oHiliter, oStudioInfo, oInfoStand, oVoteItems, oAvatarIndicator, oSelectedItem, oSceneXml, oMapXml, oEntryXml, iLastClickTime, iAllowedClickTime
global oIsoScene, oSession, oStudio, oPossessionStudio, oRoom, oStudioMap, oDenizenManager, gbTestMode, ElementMgr, oAvatar

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 56 ........................... me.bDebug = 1
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 0 .............................. <"new() ">
  [ 10] pusharglistnoret 2 ...................... <me, "new() ">
  [ 12] objcall 50 .............................. me.debug("new() ")
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 1 .............................. <"IsoConstants">
  [ 18] pusharglist 1 ........................... <"IsoConstants">
  [ 20] extcall 57 .............................. <script("IsoConstants")>
  [ 22] pusharglist 1 ........................... <script("IsoConstants")>
  [ 24] extcall 0 ............................... <new(script("IsoConstants"))>
  [ 26] setobjprop 58 ........................... me.oIsoConstants = new(script("IsoConstants"))
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 2 .............................. <"Math2d">
  [ 32] pusharglist 1 ........................... <"Math2d">
  [ 34] extcall 57 .............................. <script("Math2d")>
  [ 36] pusharglist 1 ........................... <script("Math2d")>
  [ 38] extcall 0 ............................... <new(script("Math2d"))>
  [ 40] setobjprop 59 ........................... me.oMath2d = new(script("Math2d"))
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 3 .............................. <"Math">
  [ 46] pusharglist 1 ........................... <"Math">
  [ 48] extcall 60 .............................. <newObject("Math")>
  [ 50] setobjprop 61 ........................... me.oFMath = newObject("Math")
  [ 52] getparam 0 .............................. <me>
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 58] getobjprop 62 ........................... <me.oIsoConstants.DEFAULT_YROT>
  [ 60] setobjprop 63 ........................... me.iYRot = me.oIsoConstants.DEFAULT_YROT
  [ 62] getparam 0 .............................. <me>
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 68] getobjprop 64 ........................... <me.oIsoConstants.DEFAULT_XROT>
  [ 70] setobjprop 65 ........................... me.iXRot = me.oIsoConstants.DEFAULT_XROT
  [ 72] getparam 0 .............................. <me>
  [ 74] getprop 59 .............................. <oMath2d>
  [ 76] getparam 0 .............................. <me>
  [ 78] getobjprop 63 ........................... <me.iYRot>
  [ 80] pusharglist 2 ........................... <oMath2d, me.iYRot>
  [ 82] objcall 67 .............................. <oMath2d.rad(me.iYRot)>
  [ 84] pusharglist 1 ........................... <oMath2d.rad(me.iYRot)>
  [ 86] extcall 66 .............................. <sin(oMath2d.rad(me.iYRot))>
  [ 88] setobjprop 68 ........................... me.fSinY = sin(oMath2d.rad(me.iYRot))
  [ 90] getparam 0 .............................. <me>
  [ 92] getprop 59 .............................. <oMath2d>
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 65 ........................... <me.iXRot>
  [ 98] pusharglist 2 ........................... <oMath2d, me.iXRot>
  [100] objcall 67 .............................. <oMath2d.rad(me.iXRot)>
  [102] pusharglist 1 ........................... <oMath2d.rad(me.iXRot)>
  [104] extcall 66 .............................. <sin(oMath2d.rad(me.iXRot))>
  [106] setobjprop 69 ........................... me.fSinX = sin(oMath2d.rad(me.iXRot))
  [108] getparam 0 .............................. <me>
  [110] getprop 59 .............................. <oMath2d>
  [112] getparam 0 .............................. <me>
  [114] getobjprop 63 ........................... <me.iYRot>
  [116] pusharglist 2 ........................... <oMath2d, me.iYRot>
  [118] objcall 67 .............................. <oMath2d.rad(me.iYRot)>
  [120] pusharglist 1 ........................... <oMath2d.rad(me.iYRot)>
  [122] extcall 70 .............................. <cos(oMath2d.rad(me.iYRot))>
  [124] setobjprop 71 ........................... me.fCosY = cos(oMath2d.rad(me.iYRot))
  [126] getparam 0 .............................. <me>
  [128] getprop 59 .............................. <oMath2d>
  [130] getparam 0 .............................. <me>
  [132] getobjprop 65 ........................... <me.iXRot>
  [134] pusharglist 2 ........................... <oMath2d, me.iXRot>
  [136] objcall 67 .............................. <oMath2d.rad(me.iXRot)>
  [138] pusharglist 1 ........................... <oMath2d.rad(me.iXRot)>
  [140] extcall 70 .............................. <cos(oMath2d.rad(me.iXRot))>
  [142] setobjprop 72 ........................... me.fCosX = cos(oMath2d.rad(me.iXRot))
  [144] getparam 0 .............................. <me>
  [146] getparam 0 .............................. <me>
  [148] getchainedprop 58 ....................... <me.oIsoConstants>
  [150] getobjprop 73 ........................... <me.oIsoConstants.DEFAULT_XOFF>
  [152] setobjprop 74 ........................... me.iXOff = me.oIsoConstants.DEFAULT_XOFF
  [154] getparam 0 .............................. <me>
  [156] getparam 0 .............................. <me>
  [158] getchainedprop 58 ....................... <me.oIsoConstants>
  [160] getobjprop 75 ........................... <me.oIsoConstants.DEFAULT_YOFF>
  [162] setobjprop 76 ........................... me.iYOff = me.oIsoConstants.DEFAULT_YOFF
  [164] getparam 0 .............................. <me>
  [166] getparam 0 .............................. <me>
  [168] getchainedprop 58 ....................... <me.oIsoConstants>
  [170] getobjprop 77 ........................... <me.oIsoConstants.DEFAULT_SQSIZE>
  [172] setobjprop 78 ........................... me.iSqSize = me.oIsoConstants.DEFAULT_SQSIZE
  [174] getparam 0 .............................. <me>
  [176] getparam 0 .............................. <me>
  [178] getchainedprop 58 ....................... <me.oIsoConstants>
  [180] getobjprop 79 ........................... <me.oIsoConstants.DEFAULT_ROWS>
  [182] setobjprop 80 ........................... me.iRows = me.oIsoConstants.DEFAULT_ROWS
  [184] getparam 0 .............................. <me>
  [186] getparam 0 .............................. <me>
  [188] getchainedprop 58 ....................... <me.oIsoConstants>
  [190] getobjprop 81 ........................... <me.oIsoConstants.DEFAULT_COLS>
  [192] setobjprop 82 ........................... me.iCols = me.oIsoConstants.DEFAULT_COLS
  [194] getparam 0 .............................. <me>
  [196] getparam 0 .............................. <me>
  [198] getchainedprop 58 ....................... <me.oIsoConstants>
  [200] getobjprop 83 ........................... <me.oIsoConstants.DEFAULT_FPS>
  [202] setobjprop 84 ........................... me.iFPS = me.oIsoConstants.DEFAULT_FPS
  [204] getparam 0 .............................. <me>
  [206] getparam 0 .............................. <me>
  [208] getchainedprop 58 ....................... <me.oIsoConstants>
  [210] getobjprop 85 ........................... <me.oIsoConstants.DEFAULT_SEQUENCE_RATE>
  [212] setobjprop 86 ........................... me.iSequenceRate = me.oIsoConstants.DEFAULT_SEQUENCE_RATE
  [214] getparam 0 .............................. <me>
  [216] setglobal 88 ............................ oIsoScene = me
  [218] getparam 0 .............................. <me>
  [220] getmovieprop 89 ......................... <the milliSeconds>
  [222] setobjprop 90 ........................... me.iLastClickTime = the milliSeconds
  [224] getparam 0 .............................. <me>
  [226] pushint16 650 ........................... <650>
  [229] setobjprop 91 ........................... me.iAllowedClickTime = 650
  [231] getparam 0 .............................. <me>
  [233] pusharglistnoret 1 ...................... <me>
  [235] extcall 92 .............................. return me
  [237] ret
end

on setLayout me, iLayout
  [  0] getparam 1 .............................. <iLayout>
  [  2] peek 0 .................................. case iLayout of
  [  4] getparam 0 .............................. <me>
  [  6] getchainedprop 58 ....................... <me.oIsoConstants>
  [  8] getobjprop 94 ........................... <me.oIsoConstants.DEFAULT_LAYOUT_TYPE>
  [ 10] eq
  [ 11] jmpifz [ 67] ............................ (case) me.oIsoConstants.DEFAULT_LAYOUT_TYPE:
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 20] getobjprop 73 ........................... <me.oIsoConstants.DEFAULT_XOFF>
  [ 22] setobjprop 74 ........................... me.iXOff = me.oIsoConstants.DEFAULT_XOFF
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 30] getobjprop 75 ........................... <me.oIsoConstants.DEFAULT_YOFF>
  [ 32] setobjprop 76 ........................... me.iYOff = me.oIsoConstants.DEFAULT_YOFF
  [ 34] getparam 0 .............................. <me>
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 40] getobjprop 77 ........................... <me.oIsoConstants.DEFAULT_SQSIZE>
  [ 42] setobjprop 78 ........................... me.iSqSize = me.oIsoConstants.DEFAULT_SQSIZE
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 50] getobjprop 79 ........................... <me.oIsoConstants.DEFAULT_ROWS>
  [ 52] setobjprop 80 ........................... me.iRows = me.oIsoConstants.DEFAULT_ROWS
  [ 54] getparam 0 .............................. <me>
  [ 56] getparam 0 .............................. <me>
  [ 58] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 60] getobjprop 81 ........................... <me.oIsoConstants.DEFAULT_COLS>
  [ 62] setobjprop 82 ........................... me.iCols = me.oIsoConstants.DEFAULT_COLS
  [ 64] jmp [129]
  [ 67] peek 0
  [ 69] getparam 0 .............................. <me>
  [ 71] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 73] getobjprop 95 ........................... <me.oIsoConstants.DEFAULT_LG_LAYOUT_TYPE>
  [ 75] eq
  [ 76] jmpifz [129] ............................ (case) me.oIsoConstants.DEFAULT_LG_LAYOUT_TYPE:
  [ 79] getparam 0 .............................. <me>
  [ 81] getparam 0 .............................. <me>
  [ 83] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 85] getobjprop 96 ........................... <me.oIsoConstants.DEFAULT_LG_XOFF>
  [ 87] setobjprop 74 ........................... me.iXOff = me.oIsoConstants.DEFAULT_LG_XOFF
  [ 89] getparam 0 .............................. <me>
  [ 91] getparam 0 .............................. <me>
  [ 93] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 95] getobjprop 97 ........................... <me.oIsoConstants.DEFAULT_LG_YOFF>
  [ 97] setobjprop 76 ........................... me.iYOff = me.oIsoConstants.DEFAULT_LG_YOFF
  [ 99] getparam 0 .............................. <me>
  [101] getparam 0 .............................. <me>
  [103] getchainedprop 58 ....................... <me.oIsoConstants>
  [105] getobjprop 98 ........................... <me.oIsoConstants.DEFAULT_LG_SQSIZE>
  [107] setobjprop 78 ........................... me.iSqSize = me.oIsoConstants.DEFAULT_LG_SQSIZE
  [109] getparam 0 .............................. <me>
  [111] getparam 0 .............................. <me>
  [113] getchainedprop 58 ....................... <me.oIsoConstants>
  [115] getobjprop 99 ........................... <me.oIsoConstants.DEFAULT_LG_ROWS>
  [117] setobjprop 80 ........................... me.iRows = me.oIsoConstants.DEFAULT_LG_ROWS
  [119] getparam 0 .............................. <me>
  [121] getparam 0 .............................. <me>
  [123] getchainedprop 58 ....................... <me.oIsoConstants>
  [125] getobjprop 100 .......................... <me.oIsoConstants.DEFAULT_LG_COLS>
  [127] setobjprop 82 ........................... me.iCols = me.oIsoConstants.DEFAULT_LG_COLS
  [129] pop 1 ................................... end case
  [131] ret
end

on init me, _oSceneXml, _oMapXml, _oEntryXml
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 3 ............................... me.lockDisplay(1)
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <_oSceneXml>
  [ 12] setobjprop 102 .......................... me.oSceneXml = _oSceneXml
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 2 .............................. <_oMapXml>
  [ 18] setobjprop 103 .......................... me.oMapXml = _oMapXml
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 3 .............................. <_oEntryXml>
  [ 24] setobjprop 104 .......................... me.oEntryXml = _oEntryXml
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 102 .......................... <me.oSceneXml>
  [ 30] pusharglist 1 ........................... <me.oSceneXml>
  [ 32] extcall 105 ............................. <voidp(me.oSceneXml)>
  [ 34] not ..................................... <not voidp(me.oSceneXml)>
  [ 35] jmpifz [ 94] ............................ if not voidp(me.oSceneXml) then
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 102 ...................... <me.oSceneXml>
  [ 42] getobjprop 106 .......................... <me.oSceneXml.firstChild>
  [ 44] setlocal 0 .............................. oScene = me.oSceneXml.firstChild
  [ 46] getlocal 0 .............................. <oScene>
  [ 48] getchainedprop 108 ...................... <oScene.attributes>
  [ 50] getobjprop 109 .......................... <oScene.attributes.layoutType>
  [ 52] pusharglist 1 ........................... <oScene.attributes.layoutType>
  [ 54] extcall 107 ............................. <integer(oScene.attributes.layoutType)>
  [ 56] setlocal 1 .............................. iLayoutType = integer(oScene.attributes.layoutType)
  [ 58] getparam 0 .............................. <me>
  [ 60] getlocal 1 .............................. <iLayoutType>
  [ 62] pusharglistnoret 2 ...................... <me, iLayoutType>
  [ 64] objcall 1 ............................... me.setLayout(iLayoutType)
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 0 .............................. <oScene>
  [ 70] getchainedprop 108 ...................... <oScene.attributes>
  [ 72] getobjprop 111 .......................... <oScene.attributes.xoff>
  [ 74] pusharglist 1 ........................... <oScene.attributes.xoff>
  [ 76] extcall 110 ............................. <float(oScene.attributes.xoff)>
  [ 78] setobjprop 74 ........................... me.iXOff = float(oScene.attributes.xoff)
  [ 80] getparam 0 .............................. <me>
  [ 82] getlocal 0 .............................. <oScene>
  [ 84] getchainedprop 108 ...................... <oScene.attributes>
  [ 86] getobjprop 112 .......................... <oScene.attributes.yoff>
  [ 88] pusharglist 1 ........................... <oScene.attributes.yoff>
  [ 90] extcall 110 ............................. <float(oScene.attributes.yoff)>
  [ 92] setobjprop 76 ........................... me.iYOff = float(oScene.attributes.yoff)
  [ 94] getparam 0 .............................. <me>
  [ 96] pushcons 4 .............................. <"IsoSpriteManager">
  [ 98] pusharglist 1 ........................... <"IsoSpriteManager">
  [100] extcall 57 .............................. <script("IsoSpriteManager")>
  [102] getparam 0 .............................. <me>
  [104] pusharglist 2 ........................... <script("IsoSpriteManager"), me>
  [106] extcall 0 ............................... <new(script("IsoSpriteManager"), me)>
  [108] setobjprop 113 .......................... me.oSpriteManager = new(script("IsoSpriteManager"), me)
  [110] getparam 0 .............................. <me>
  [112] pushcons 5 .............................. <"IsoGrid">
  [114] pusharglist 1 ........................... <"IsoGrid">
  [116] extcall 57 .............................. <script("IsoGrid")>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 80 ........................... <me.iRows>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 82 ........................... <me.iCols>
  [126] getparam 0 .............................. <me>
  [128] getobjprop 78 ........................... <me.iSqSize>
  [130] pusharglist 4 ........................... <script("IsoGrid"), me.iRows, me.iCols, me.iSqSize>
  [132] extcall 0 ............................... <new(script("IsoGrid"), me.iRows, me.iCols, me.iSqSize)>
  [134] setobjprop 114 .......................... me.oGrid = new(script("IsoGrid"), me.iRows, me.iCols, me.iSqSize)
  [136] getparam 0 .............................. <me>
  [138] pushcons 6 .............................. <"Map">
  [140] pusharglist 1 ........................... <"Map">
  [142] extcall 57 .............................. <script("Map")>
  [144] getparam 0 .............................. <me>
  [146] getchainedprop 114 ...................... <me.oGrid>
  [148] getobjprop 80 ........................... <me.oGrid.iRows>
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 114 ...................... <me.oGrid>
  [154] getobjprop 82 ........................... <me.oGrid.iCols>
  [156] getprop 103 ............................. <oMapXml>
  [158] pusharglist 4 ........................... <script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml>
  [160] extcall 0 ............................... <new(script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml)>
  [162] setobjprop 115 .......................... me.oMap = new(script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml)
  [164] getparam 0 .............................. <me>
  [166] pushcons 7 .............................. <"Background">
  [168] pusharglist 1 ........................... <"Background">
  [170] extcall 57 .............................. <script("Background")>
  [172] pusharglist 1 ........................... <script("Background")>
  [174] objcall 0 ............................... <script("Background").new()>
  [176] setobjprop 116 .......................... me.oBackground = script("Background").new()
  [178] getparam 0 .............................. <me>
  [180] pushcons 8 .............................. <"Floor">
  [182] pusharglist 1 ........................... <"Floor">
  [184] extcall 57 .............................. <script("Floor")>
  [186] pusharglist 1 ........................... <script("Floor")>
  [188] objcall 0 ............................... <script("Floor").new()>
  [190] setobjprop 117 .......................... me.oFloor = script("Floor").new()
  [192] getparam 0 .............................. <me>
  [194] pushcons 9 .............................. <"Wall">
  [196] pusharglist 1 ........................... <"Wall">
  [198] extcall 57 .............................. <script("Wall")>
  [200] pusharglist 1 ........................... <script("Wall")>
  [202] objcall 0 ............................... <script("Wall").new()>
  [204] setobjprop 118 .......................... me.oWall = script("Wall").new()
  [206] getparam 0 .............................. <me>
  [208] pushcons 10 ............................. <"Door">
  [210] pusharglist 1 ........................... <"Door">
  [212] extcall 57 .............................. <script("Door")>
  [214] pusharglist 1 ........................... <script("Door")>
  [216] objcall 0 ............................... <script("Door").new()>
  [218] setobjprop 119 .......................... me.oDoor = script("Door").new()
  [220] getparam 0 .............................. <me>
  [222] pushcons 11 ............................. <"Window">
  [224] pusharglist 1 ........................... <"Window">
  [226] extcall 57 .............................. <script("Window")>
  [228] pusharglist 1 ........................... <script("Window")>
  [230] objcall 0 ............................... <script("Window").new()>
  [232] setobjprop 120 .......................... me.oWindow = script("Window").new()
  [234] getparam 0 .............................. <me>
  [236] pushcons 12 ............................. <"WallItems">
  [238] pusharglist 1 ........................... <"WallItems">
  [240] extcall 57 .............................. <script("WallItems")>
  [242] pusharglist 1 ........................... <script("WallItems")>
  [244] objcall 0 ............................... <script("WallItems").new()>
  [246] setobjprop 121 .......................... me.oWallItems = script("WallItems").new()
  [248] getparam 0 .............................. <me>
  [250] pushcons 13 ............................. <"Rugs">
  [252] pusharglist 1 ........................... <"Rugs">
  [254] extcall 57 .............................. <script("Rugs")>
  [256] pusharglist 1 ........................... <script("Rugs")>
  [258] objcall 0 ............................... <script("Rugs").new()>
  [260] setobjprop 122 .......................... me.oRugs = script("Rugs").new()
  [262] getparam 0 .............................. <me>
  [264] pushcons 14 ............................. <"Hiliter">
  [266] pusharglist 1 ........................... <"Hiliter">
  [268] extcall 57 .............................. <script("Hiliter")>
  [270] pusharglist 1 ........................... <script("Hiliter")>
  [272] objcall 0 ............................... <script("Hiliter").new()>
  [274] setobjprop 123 .......................... me.oHiliter = script("Hiliter").new()
  [276] getparam 0 .............................. <me>
  [278] pushcons 15 ............................. <"Furniture">
  [280] pusharglist 1 ........................... <"Furniture">
  [282] extcall 57 .............................. <script("Furniture")>
  [284] pusharglist 1 ........................... <script("Furniture")>
  [286] objcall 0 ............................... <script("Furniture").new()>
  [288] setobjprop 124 .......................... me.oFurniture = script("Furniture").new()
  [290] getparam 0 .............................. <me>
  [292] pushcons 16 ............................. <"StaticItems">
  [294] pusharglist 1 ........................... <"StaticItems">
  [296] extcall 57 .............................. <script("StaticItems")>
  [298] pusharglist 1 ........................... <script("StaticItems")>
  [300] objcall 0 ............................... <script("StaticItems").new()>
  [302] setobjprop 125 .......................... me.oStaticItems = script("StaticItems").new()
  [304] getparam 0 .............................. <me>
  [306] pushcons 17 ............................. <"Avatars">
  [308] pusharglist 1 ........................... <"Avatars">
  [310] extcall 57 .............................. <script("Avatars")>
  [312] pusharglist 1 ........................... <script("Avatars")>
  [314] objcall 0 ............................... <script("Avatars").new()>
  [316] setobjprop 126 .......................... me.oAvatars = script("Avatars").new()
  [318] getparam 0 .............................. <me>
  [320] pushcons 18 ............................. <"StudioInfo">
  [322] pusharglist 1 ........................... <"StudioInfo">
  [324] extcall 57 .............................. <script("StudioInfo")>
  [326] pusharglist 1 ........................... <script("StudioInfo")>
  [328] objcall 0 ............................... <script("StudioInfo").new()>
  [330] setobjprop 127 .......................... me.oStudioInfo = script("StudioInfo").new()
  [332] getparam 0 .............................. <me>
  [334] pushcons 19 ............................. <"InfoStandObject">
  [336] pusharglist 1 ........................... <"InfoStandObject">
  [338] extcall 57 .............................. <script("InfoStandObject")>
  [340] pusharglist 1 ........................... <script("InfoStandObject")>
  [342] objcall 0 ............................... <script("InfoStandObject").new()>
  [344] setobjprop 128 .......................... me.oInfoStand = script("InfoStandObject").new()
  [346] getparam 0 .............................. <me>
  [348] pushcons 20 ............................. <"VoteItems">
  [350] pusharglist 1 ........................... <"VoteItems">
  [352] extcall 57 .............................. <script("VoteItems")>
  [354] pusharglist 1 ........................... <script("VoteItems")>
  [356] objcall 0 ............................... <script("VoteItems").new()>
  [358] setobjprop 129 .......................... me.oVoteItems = script("VoteItems").new()
  [360] getlocal 0 .............................. <oScene>
  [362] pusharglist 1 ........................... <oScene>
  [364] extcall 105 ............................. <voidp(oScene)>
  [366] not ..................................... <not voidp(oScene)>
  [367] jmpifz [378] ............................ if not voidp(oScene) then
  [370] getparam 0 .............................. <me>
  [372] getlocal 0 .............................. <oScene>
  [374] pusharglistnoret 2 ...................... <me, oScene>
  [376] objcall 45 .............................. me.initScene(oScene)
  [378] getparam 0 .............................. <me>
  [380] pusharglist 0 ........................... <>
  [382] extcall 130 ............................. <VOID>
  [384] setobjprop 131 .......................... me.oSelectedItem = VOID
  [386] getmovieprop 132 ........................ <the actorList>
  [388] getparam 0 .............................. <me>
  [390] pusharglistnoret 2 ...................... <the actorList, me>
  [392] objcall 133 ............................. (the actorList).add(me)
  [394] ret
end

on lockDisplay me, bState
  [  0] getparam 1 .............................. <bState>
  [  2] setmovieprop 139 ........................ the updateLock = bState
  [  4] getparam 1 .............................. <bState>
  [  6] not ..................................... <not bState>
  [  7] jmpifz [ 32] ............................ if not bState then
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 121 .......................... <me.oWallItems>
  [ 14] pusharglist 1 ........................... <me.oWallItems>
  [ 16] extcall 105 ............................. <voidp(me.oWallItems)>
  [ 18] not ..................................... <not voidp(me.oWallItems)>
  [ 19] jmpifz [ 32] ............................ if not voidp(me.oWallItems) then
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 121 ...................... <me.oWallItems>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 2 ...................... <me.oWallItems, 1>
  [ 30] objcall 140 ............................. me.oWallItems.drawAll(1)
  [ 32] ret
end

on setSequenceRate me, _iSequenceRate
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 21 ............................. <"setSequenceRate() ">
  [  4] getparam 1 .............................. <_iSequenceRate>
  [  6] joinstr ................................. <"setSequenceRate() " & _iSequenceRate>
  [  7] pusharglistnoret 2 ...................... <me, "setSequenceRate() " & _iSequenceRate>
  [  9] objcall 50 .............................. me.debug("setSequenceRate() " & _iSequenceRate)
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 1 .............................. <_iSequenceRate>
  [ 15] pushint8 100 ............................ <100>
  [ 17] pushcons 22 ............................. <0.01>
  [ 19] mul ..................................... <100 * 0.01>
  [ 20] mul ..................................... <_iSequenceRate * (100 * 0.01)>
  [ 21] setobjprop 86 ........................... me.iSequenceRate = _iSequenceRate * (100 * 0.01)
  [ 23] ret
end

on getSequenceRate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 86 ........................... <me.iSequenceRate>
  [  4] pusharglistnoret 1 ...................... <me.iSequenceRate>
  [  6] extcall 92 .............................. return me.iSequenceRate
  [  8] ret
end

on getEntryXml me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.oEntryXml>
  [  4] pusharglistnoret 1 ...................... <me.oEntryXml>
  [  6] extcall 92 .............................. return me.oEntryXml
  [  8] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 38 .............................. <me.calcMouseToGridPoint()>
  [  8] setobjprop 143 .......................... me.oMouseGridPoint = me.calcMouseToGridPoint()
  [ 10] getparam 0 .............................. <me>
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 114 ...................... <me.oGrid>
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 143 ...................... <me.oMouseGridPoint>
  [ 20] getobjprop 144 .......................... <me.oMouseGridPoint.x>
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 143 ...................... <me.oMouseGridPoint>
  [ 26] getobjprop 145 .......................... <me.oMouseGridPoint.z>
  [ 28] pusharglist 3 ........................... <me.oGrid, me.oMouseGridPoint.x, me.oMouseGridPoint.z>
  [ 30] objcall 146 ............................. <me.oGrid.getSquareByXZ(me.oMouseGridPoint.x, me.oMouseGridPoint.z)>
  [ 32] setobjprop 147 .......................... me.oMouseSquare = me.oGrid.getSquareByXZ(me.oMouseGridPoint.x, me.oMouseGridPoint.z)
  [ 34] ret
end

on clickAllowed me
  [  0] getmovieprop 89 ......................... <the milliSeconds>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 90 ........................... <me.iLastClickTime>
  [  6] sub ..................................... <the milliSeconds - me.iLastClickTime>
  [  7] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iLastClickTime
  [  9] getlocal 0 .............................. <iElapsedTime>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 91 ........................... <me.iAllowedClickTime>
  [ 15] gt ...................................... <iElapsedTime > me.iAllowedClickTime>
  [ 16] jmpifz [ 31] ............................ if iElapsedTime > me.iAllowedClickTime then
  [ 19] getparam 0 .............................. <me>
  [ 21] getmovieprop 89 ......................... <the milliSeconds>
  [ 23] setobjprop 90 ........................... me.iLastClickTime = the milliSeconds
  [ 25] pushint8 1 .............................. <1>
  [ 27] pusharglistnoret 1 ...................... <1>
  [ 29] extcall 92 .............................. return 1
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 92 .............................. return 0
  [ 36] ret
end

on mouseDownEvent me, bDoubleClick
  [  0] pusharglistnoret 0 ...................... <>
  [  2] extcall 92 .............................. return 
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 8 ............................... <me.clickAllowed()>
  [ 10] setlocal 0 .............................. bClickAllowed = me.clickAllowed()
  [ 12] getparam 1 .............................. <bDoubleClick>
  [ 14] not ..................................... <not bDoubleClick>
  [ 15] jmpifz [ 28] ............................ if not bDoubleClick then
  [ 18] getlocal 0 .............................. <bClickAllowed>
  [ 20] not ..................................... <not bClickAllowed>
  [ 21] jmpifz [ 28] ............................ if not bClickAllowed then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 92 .............................. return 
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 131 .......................... <me.oSelectedItem>
  [ 32] pusharglist 1 ........................... <me.oSelectedItem>
  [ 34] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [ 36] not ..................................... <not voidp(me.oSelectedItem)>
  [ 37] jmpifz [ 76] ............................ if not voidp(me.oSelectedItem) then
  [ 40] getparam 0 .............................. <me>
  [ 42] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 44] pusharglist 1 ........................... <me.oSelectedItem>
  [ 46] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 48] jmpifz [ 76] ............................ if me.oSelectedItem.getDrag() then
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 30 .............................. <me.dropSelectedItem()>
  [ 57] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [ 59] getlocal 1 .............................. <bDropped>
  [ 61] jmpifz [ 76] ............................ if bDropped then
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 0 ........................... <>
  [ 68] extcall 130 ............................. <VOID>
  [ 70] setobjprop 131 .......................... me.oSelectedItem = VOID
  [ 72] pusharglistnoret 0 ...................... <>
  [ 74] extcall 92 .............................. return 
  [ 76] getglobal 150 ........................... <ElementMgr>
  [ 78] pusharglist 1 ........................... <ElementMgr>
  [ 80] objcall 151 ............................. <ElementMgr.mouseIsOverWindow()>
  [ 82] jmpifz [ 89] ............................ if ElementMgr.mouseIsOverWindow() then
  [ 85] pusharglistnoret 0 ...................... <>
  [ 87] extcall 92 .............................. return 
  [ 89] getparam 0 .............................. <me>
  [ 91] getparam 1 .............................. <bDoubleClick>
  [ 93] pusharglist 2 ........................... <me, bDoubleClick>
  [ 95] objcall 12 .............................. <me.broadCastMouseEvent(bDoubleClick)>
  [ 97] setlocal 2 .............................. bItemSelected = me.broadCastMouseEvent(bDoubleClick)
  [ 99] getlocal 2 .............................. <bItemSelected>
  [101] jmpifz [110] ............................ if bItemSelected then
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 92 .............................. return 1
  [110] getparam 0 .............................. <me>
  [112] getchainedprop 119 ...................... <me.oDoor>
  [114] pusharglist 1 ........................... <me.oDoor>
  [116] objcall 152 ............................. <me.oDoor.mouseOverDoor()>
  [118] setlocal 3 .............................. bDoorSelected = me.oDoor.mouseOverDoor()
  [120] getlocal 3 .............................. <bDoorSelected>
  [122] jmpifz [139] ............................ if bDoorSelected then
  [125] getparam 0 .............................. <me>
  [127] getchainedprop 119 ...................... <me.oDoor>
  [129] pusharglistnoret 1 ...................... <me.oDoor>
  [131] objcall 153 ............................. me.oDoor.exitSelected()
  [133] pushint8 1 .............................. <1>
  [135] pusharglistnoret 1 ...................... <1>
  [137] extcall 92 .............................. return 1
  [139] getparam 0 .............................. <me>
  [141] pusharglistnoret 1 ...................... <me>
  [143] objcall 11 .............................. me.clearInfoStand()
  [145] getparam 0 .............................. <me>
  [147] getobjprop 147 .......................... <me.oMouseSquare>
  [149] pusharglist 0 ........................... <>
  [151] extcall 130 ............................. <VOID>
  [153] nteq .................................... <me.oMouseSquare <> VOID>
  [154] jmpifz [267] ............................ if me.oMouseSquare <> VOID then
  [157] getparam 0 .............................. <me>
  [159] getchainedprop 115 ...................... <me.oMap>
  [161] getparam 0 .............................. <me>
  [163] getchainedprop 147 ...................... <me.oMouseSquare>
  [165] getobjprop 154 .......................... <me.oMouseSquare.iRow>
  [167] getparam 0 .............................. <me>
  [169] getchainedprop 147 ...................... <me.oMouseSquare>
  [171] getobjprop 155 .......................... <me.oMouseSquare.iCol>
  [173] pusharglist 3 ........................... <me.oMap, me.oMouseSquare.iRow, me.oMouseSquare.iCol>
  [175] objcall 156 ............................. <me.oMap.getNode(me.oMouseSquare.iRow, me.oMouseSquare.iCol)>
  [177] setlocal 4 .............................. oMapNode = me.oMap.getNode(me.oMouseSquare.iRow, me.oMouseSquare.iCol)
  [179] getlocal 4 .............................. <oMapNode>
  [181] pusharglist 1 ........................... <oMapNode>
  [183] extcall 105 ............................. <voidp(oMapNode)>
  [185] jmpifz [194] ............................ if voidp(oMapNode) then
  [188] pushint8 1 .............................. <1>
  [190] pusharglistnoret 1 ...................... <1>
  [192] extcall 92 .............................. return 1
  [194] getlocal 4 .............................. <oMapNode>
  [196] getobjprop 157 .......................... <oMapNode.w>
  [198] setlocal 5 .............................. iWeight = oMapNode.w
  [200] getlocal 5 .............................. <iWeight>
  [202] getparam 0 .............................. <me>
  [204] getchainedprop 115 ...................... <me.oMap>
  [206] getchainedprop 158 ...................... <me.oMap.oPathfinder>
  [208] getobjprop 159 .......................... <me.oMap.oPathfinder.W_BLOCKED>
  [210] eq ...................................... <iWeight = me.oMap.oPathfinder.W_BLOCKED>
  [211] getlocal 5 .............................. <iWeight>
  [213] getparam 0 .............................. <me>
  [215] getchainedprop 115 ...................... <me.oMap>
  [217] getchainedprop 158 ...................... <me.oMap.oPathfinder>
  [219] getobjprop 160 .......................... <me.oMap.oPathfinder.W_ENTER>
  [221] eq ...................................... <iWeight = me.oMap.oPathfinder.W_ENTER>
  [222] or ...................................... <(iWeight = me.oMap.oPathfinder.W_BLOCKED) or (iWeight = me.oMap.oPathfinder.W_ENTER)>
  [223] jmpifz [231] ............................ if (iWeight = me.oMap.oPathfinder.W_BLOCKED) or (iWeight = me.oMap.oPathfinder.W_ENTER) then
  [226] pushzero ................................ <0>
  [227] pusharglistnoret 1 ...................... <0>
  [229] extcall 92 .............................. return 0
  [231] getparam 0 .............................. <me>
  [233] pusharglist 1 ........................... <me>
  [235] objcall 30 .............................. <me.dropSelectedItem()>
  [237] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [239] getlocal 1 .............................. <bDropped>
  [241] jmpifz [255] ............................ if bDropped then / else
  [244] getparam 0 .............................. <me>
  [246] pusharglist 0 ........................... <>
  [248] extcall 130 ............................. <VOID>
  [250] setobjprop 131 .......................... me.oSelectedItem = VOID
  [252] jmp [261]
  [255] getparam 0 .............................. <me>
  [257] pusharglistnoret 1 ...................... <me>
  [259] objcall 15 .............................. me.moveAvatar()
  [261] pushint8 1 .............................. <1>
  [263] pusharglistnoret 1 ...................... <1>
  [265] extcall 92 .............................. return 1
  [267] pushzero ................................ <0>
  [268] pusharglistnoret 1 ...................... <0>
  [270] extcall 92 .............................. return 0
  [272] ret
end

on canMoveToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 126 ...................... <me.oAvatars>
  [  4] getparam 1 .............................. <_oSquare>
  [  6] pusharglist 2 ........................... <me.oAvatars, _oSquare>
  [  8] objcall 168 ............................. <me.oAvatars.getItemsAtSquare(_oSquare)>
  [ 10] setlocal 0 .............................. _aAvatars = me.oAvatars.getItemsAtSquare(_oSquare)
  [ 12] getlocal 0 .............................. <_aAvatars>
  [ 14] getobjprop 169 .......................... <_aAvatars.count>
  [ 16] pushzero ................................ <0>
  [ 17] gt ...................................... <_aAvatars.count > 0>
  [ 18] jmpifz [ 26] ............................ if _aAvatars.count > 0 then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 92 .............................. return 0
  [ 26] getglobal 88 ............................ <oIsoScene>
  [ 28] getchainedprop 115 ...................... <oIsoScene.oMap>
  [ 30] getparam 1 .............................. <_oSquare>
  [ 32] getobjprop 154 .......................... <_oSquare.iRow>
  [ 34] getparam 1 .............................. <_oSquare>
  [ 36] getobjprop 155 .......................... <_oSquare.iCol>
  [ 38] pusharglist 3 ........................... <oIsoScene.oMap, _oSquare.iRow, _oSquare.iCol>
  [ 40] objcall 156 ............................. <oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)>
  [ 42] setlocal 1 .............................. oMapNode = oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)
  [ 44] getlocal 1 .............................. <oMapNode>
  [ 46] getobjprop 157 .......................... <oMapNode.w>
  [ 48] setlocal 2 .............................. iWeight = oMapNode.w
  [ 50] getlocal 2 .............................. <iWeight>
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 115 ...................... <me.oMap>
  [ 56] getchainedprop 158 ...................... <me.oMap.oPathfinder>
  [ 58] getobjprop 170 .......................... <me.oMap.oPathfinder.W_QUEUE>
  [ 60] eq ...................................... <iWeight = me.oMap.oPathfinder.W_QUEUE>
  [ 61] jmpifz [125] ............................ if iWeight = me.oMap.oPathfinder.W_QUEUE then
  [ 64] getglobal 171 ........................... <oDenizenManager>
  [ 66] pusharglist 1 ........................... <oDenizenManager>
  [ 68] objcall 172 ............................. <oDenizenManager.getBackpack()>
  [ 70] setlocal 3 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 72] getlocal 3 .............................. <oBackPack>
  [ 74] pusharglist 1 ........................... <oBackPack>
  [ 76] extcall 105 ............................. <voidp(oBackPack)>
  [ 78] jmpifz [ 86] ............................ if voidp(oBackPack) then
  [ 81] pushzero ................................ <0>
  [ 82] pusharglistnoret 1 ...................... <0>
  [ 84] extcall 92 .............................. return 0
  [ 86] getlocal 3 .............................. <oBackPack>
  [ 88] pusharglist 1 ........................... <oBackPack>
  [ 90] objcall 173 ............................. <oBackPack.getNumberOfBurnedCds()>
  [ 92] setlocal 4 .............................. iBurnedCds = oBackPack.getNumberOfBurnedCds()
  [ 94] getlocal 4 .............................. <iBurnedCds>
  [ 96] pushzero ................................ <0>
  [ 97] gt ...................................... <iBurnedCds > 0>
  [ 98] jmpifz [110] ............................ if iBurnedCds > 0 then / else
  [101] pushint8 1 .............................. <1>
  [103] pusharglistnoret 1 ...................... <1>
  [105] extcall 92 .............................. return 1
  [107] jmp [125]
  [110] getglobal 150 ........................... <ElementMgr>
  [112] pushcons 23 ............................. <"NOCD_TITLE">
  [114] pushcons 24 ............................. <"NOCD_DESC">
  [116] pusharglistnoret 3 ...................... <ElementMgr, "NOCD_TITLE", "NOCD_DESC">
  [118] objcall 174 ............................. ElementMgr.alert("NOCD_TITLE", "NOCD_DESC")
  [120] pushzero ................................ <0>
  [121] pusharglistnoret 1 ...................... <0>
  [123] extcall 92 .............................. return 0
  [125] getparam 0 .............................. <me>
  [127] getchainedprop 124 ...................... <me.oFurniture>
  [129] getparam 1 .............................. <_oSquare>
  [131] pusharglist 2 ........................... <me.oFurniture, _oSquare>
  [133] objcall 175 ............................. <me.oFurniture.getItemAtSquareWithGreatestHeightOffset(_oSquare)>
  [135] setlocal 5 .............................. _oItem = me.oFurniture.getItemAtSquareWithGreatestHeightOffset(_oSquare)
  [137] getlocal 5 .............................. <_oItem>
  [139] pusharglist 1 ........................... <_oItem>
  [141] extcall 105 ............................. <voidp(_oItem)>
  [143] jmpifz [152] ............................ if voidp(_oItem) then
  [146] pushint8 1 .............................. <1>
  [148] pusharglistnoret 1 ...................... <1>
  [150] extcall 92 .............................. return 1
  [152] getparam 0 .............................. <me>
  [154] getchainedprop 124 ...................... <me.oFurniture>
  [156] getlocal 5 .............................. <_oItem>
  [158] pusharglist 2 ........................... <me.oFurniture, _oItem>
  [160] objcall 176 ............................. <me.oFurniture.isSeatableItem(_oItem)>
  [162] setlocal 6 .............................. bIsSeatable = me.oFurniture.isSeatableItem(_oItem)
  [164] getlocal 6 .............................. <bIsSeatable>
  [166] jmpifz [175] ............................ if bIsSeatable then
  [169] pushint8 1 .............................. <1>
  [171] pusharglistnoret 1 ...................... <1>
  [173] extcall 92 .............................. return 1
  [175] getlocal 5 .............................. <_oItem>
  [177] pusharglist 1 ........................... <_oItem>
  [179] objcall 177 ............................. <_oItem.getProdId()>
  [181] getparam 0 .............................. <me>
  [183] getchainedprop 58 ....................... <me.oIsoConstants>
  [185] getobjprop 178 .......................... <me.oIsoConstants.BURNED_CD>
  [187] eq ...................................... <_oItem.getProdId() = me.oIsoConstants.BURNED_CD>
  [188] jmpifz [208] ............................ if _oItem.getProdId() = me.oIsoConstants.BURNED_CD then
  [191] getlocal 5 .............................. <_oItem>
  [193] pusharglist 1 ........................... <_oItem>
  [195] objcall 179 ............................. <_oItem.getHeightOffset()>
  [197] pushzero ................................ <0>
  [198] eq ...................................... <_oItem.getHeightOffset() = 0>
  [199] jmpifz [208] ............................ if _oItem.getHeightOffset() = 0 then
  [202] pushint8 1 .............................. <1>
  [204] pusharglistnoret 1 ...................... <1>
  [206] extcall 92 .............................. return 1
  [208] getlocal 5 .............................. <_oItem>
  [210] pusharglist 1 ........................... <_oItem>
  [212] objcall 180 ............................. <_oItem.getType()>
  [214] pushcons 25 ............................. <"Teleport">
  [216] eq ...................................... <_oItem.getType() = "Teleport">
  [217] jmpifz [307] ............................ if _oItem.getType() = "Teleport" then
  [220] getparam 0 .............................. <me>
  [222] getchainedprop 126 ...................... <me.oAvatars>
  [224] getglobal 171 ........................... <oDenizenManager>
  [226] pusharglist 1 ........................... <oDenizenManager>
  [228] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [230] pusharglist 2 ........................... <me.oAvatars, oDenizenManager.getScreenName()>
  [232] objcall 182 ............................. <me.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [234] setlocal 7 .............................. oMyAvatar = me.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [236] getlocal 7 .............................. <oMyAvatar>
  [238] pusharglist 1 ........................... <oMyAvatar>
  [240] extcall 105 ............................. <voidp(oMyAvatar)>
  [242] jmpifz [251] ............................ if voidp(oMyAvatar) then
  [245] pushint8 1 .............................. <1>
  [247] pusharglistnoret 1 ...................... <1>
  [249] extcall 92 .............................. return 1
  [251] getlocal 7 .............................. <oMyAvatar>
  [253] pusharglist 1 ........................... <oMyAvatar>
  [255] objcall 183 ............................. <oMyAvatar.getSquare()>
  [257] setlocal 8 .............................. oMySquare = oMyAvatar.getSquare()
  [259] getlocal 8 .............................. <oMySquare>
  [261] pusharglist 1 ........................... <oMySquare>
  [263] extcall 105 ............................. <voidp(oMySquare)>
  [265] jmpifz [274] ............................ if voidp(oMySquare) then
  [268] pushint8 1 .............................. <1>
  [270] pusharglistnoret 1 ...................... <1>
  [272] extcall 92 .............................. return 1
  [274] getparam 0 .............................. <me>
  [276] getchainedprop 124 ...................... <me.oFurniture>
  [278] getlocal 8 .............................. <oMySquare>
  [280] pusharglist 2 ........................... <me.oFurniture, oMySquare>
  [282] objcall 184 ............................. <me.oFurniture.getTeleporterAtSquare(oMySquare)>
  [284] setlocal 9 .............................. oTeleporter = me.oFurniture.getTeleporterAtSquare(oMySquare)
  [286] getlocal 9 .............................. <oTeleporter>
  [288] pusharglist 1 ........................... <oTeleporter>
  [290] extcall 105 ............................. <voidp(oTeleporter)>
  [292] not ..................................... <not voidp(oTeleporter)>
  [293] jmpifz [301] ............................ if not voidp(oTeleporter) then
  [296] pushzero ................................ <0>
  [297] pusharglistnoret 1 ...................... <0>
  [299] extcall 92 .............................. return 0
  [301] pushint8 1 .............................. <1>
  [303] pusharglistnoret 1 ...................... <1>
  [305] extcall 92 .............................. return 1
  [307] pushint8 1 .............................. <1>
  [309] pusharglistnoret 1 ...................... <1>
  [311] extcall 92 .............................. return 1
  [313] ret
end

on clearInfoStand me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 128 ...................... <me.oInfoStand>
  [  4] pusharglistnoret 1 ...................... <me.oInfoStand>
  [  6] objcall 11 .............................. me.oInfoStand.clearInfoStand()
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 194 .......................... <me.oAvatarIndicator>
  [ 12] pusharglist 1 ........................... <me.oAvatarIndicator>
  [ 14] extcall 105 ............................. <voidp(me.oAvatarIndicator)>
  [ 16] not ..................................... <not voidp(me.oAvatarIndicator)>
  [ 17] jmpifz [ 36] ............................ if not voidp(me.oAvatarIndicator) then
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 194 ...................... <me.oAvatarIndicator>
  [ 24] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [ 26] objcall 195 ............................. me.oAvatarIndicator.destroyItem()
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 0 ........................... <>
  [ 32] extcall 130 ............................. <VOID>
  [ 34] setobjprop 194 .......................... me.oAvatarIndicator = VOID
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 14 .............................. me.displayCdPlaying()
  [ 42] ret
end

on broadCastMouseEvent me, bDoubleClick
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 52 .............................. <me.getSpritesUnderMouse()>
  [  6] setlocal 0 .............................. aSpritesUnderMouse = me.getSpritesUnderMouse()
  [  8] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 10] pusharglist 1 ........................... <aSpritesUnderMouse>
  [ 12] objcall 169 ............................. <aSpritesUnderMouse.count()>
  [ 14] setlocal 1 .............................. iCount = aSpritesUnderMouse.count()
  [ 16] getlocal 1 .............................. <iCount>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <iCount = 0>
  [ 20] jmpifz [ 28] ............................ if iCount = 0 then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 92 .............................. return 0
  [ 28] getlocal 1 .............................. <iCount>
  [ 30] setlocal 2
  [ 32] getlocal 2
  [ 34] pushint8 1 .............................. <1>
  [ 36] gteq
  [ 37] jmpifz [227] ............................ repeat with i = iCount down to 1
  [ 40] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 42] getlocal 2 .............................. <i>
  [ 44] pusharglist 2 ........................... <aSpritesUnderMouse, i>
  [ 46] objcall 196 ............................. <aSpritesUnderMouse[i]>
  [ 48] setlocal 3 .............................. iSpriteNum = aSpritesUnderMouse[i]
  [ 50] getlocal 3 .............................. <iSpriteNum>
  [ 52] pushsymb 198 ............................ <#getController>
  [ 54] pusharglist 2 ........................... <iSpriteNum, #getController>
  [ 56] extcall 197 ............................. <sendSprite(iSpriteNum, #getController)>
  [ 58] setlocal 4 .............................. oSpriteItem = sendSprite(iSpriteNum, #getController)
  [ 60] getlocal 4 .............................. <oSpriteItem>
  [ 62] pusharglist 1 ........................... <oSpriteItem>
  [ 64] extcall 105 ............................. <voidp(oSpriteItem)>
  [ 66] jmpifz [ 72] ............................ if voidp(oSpriteItem) then
  [ 69] jmp [218] ............................... next repeat
  [ 72] pusharglist 0 ........................... <>
  [ 74] extcall 130 ............................. <VOID>
  [ 76] setlocal 5 .............................. oItem = VOID
  [ 78] getlocal 4 .............................. <oSpriteItem>
  [ 80] pusharglist 1 ........................... <oSpriteItem>
  [ 82] objcall 199 ............................. <oSpriteItem.isAvatar()>
  [ 84] jmpifz [103] ............................ if oSpriteItem.isAvatar() then
  [ 87] getparam 0 .............................. <me>
  [ 89] getchainedprop 126 ...................... <me.oAvatars>
  [ 91] getlocal 4 .............................. <oSpriteItem>
  [ 93] pusharglist 1 ........................... <oSpriteItem>
  [ 95] objcall 181 ............................. <oSpriteItem.getScreenName()>
  [ 97] pusharglist 2 ........................... <me.oAvatars, oSpriteItem.getScreenName()>
  [ 99] objcall 182 ............................. <me.oAvatars.getAvatar(oSpriteItem.getScreenName())>
  [101] setlocal 5 .............................. oItem = me.oAvatars.getAvatar(oSpriteItem.getScreenName())
  [103] getlocal 4 .............................. <oSpriteItem>
  [105] pusharglist 1 ........................... <oSpriteItem>
  [107] objcall 200 ............................. <oSpriteItem.isFurniItem()>
  [109] jmpifz [156] ............................ if oSpriteItem.isFurniItem() then
  [112] getlocal 4 .............................. <oSpriteItem>
  [114] pusharglist 1 ........................... <oSpriteItem>
  [116] objcall 201 ............................. <oSpriteItem.isRugITem()>
  [118] jmpifz [140] ............................ if oSpriteItem.isRugITem() then / else
  [121] getparam 0 .............................. <me>
  [123] getchainedprop 122 ...................... <me.oRugs>
  [125] getlocal 4 .............................. <oSpriteItem>
  [127] pusharglist 1 ........................... <oSpriteItem>
  [129] objcall 202 ............................. <oSpriteItem.getPosId()>
  [131] pusharglist 2 ........................... <me.oRugs, oSpriteItem.getPosId()>
  [133] objcall 34 .............................. <me.oRugs.getItemByPossessionId(oSpriteItem.getPosId())>
  [135] setlocal 5 .............................. oItem = me.oRugs.getItemByPossessionId(oSpriteItem.getPosId())
  [137] jmp [156]
  [140] getparam 0 .............................. <me>
  [142] getchainedprop 124 ...................... <me.oFurniture>
  [144] getlocal 4 .............................. <oSpriteItem>
  [146] pusharglist 1 ........................... <oSpriteItem>
  [148] objcall 202 ............................. <oSpriteItem.getPosId()>
  [150] pusharglist 2 ........................... <me.oFurniture, oSpriteItem.getPosId()>
  [152] objcall 34 .............................. <me.oFurniture.getItemByPossessionId(oSpriteItem.getPosId())>
  [154] setlocal 5 .............................. oItem = me.oFurniture.getItemByPossessionId(oSpriteItem.getPosId())
  [156] getlocal 4 .............................. <oSpriteItem>
  [158] pusharglist 1 ........................... <oSpriteItem>
  [160] objcall 203 ............................. <oSpriteItem.isWallItem()>
  [162] jmpifz [181] ............................ if oSpriteItem.isWallItem() then
  [165] getparam 0 .............................. <me>
  [167] getchainedprop 121 ...................... <me.oWallItems>
  [169] getlocal 4 .............................. <oSpriteItem>
  [171] pusharglist 1 ........................... <oSpriteItem>
  [173] objcall 202 ............................. <oSpriteItem.getPosId()>
  [175] pusharglist 2 ........................... <me.oWallItems, oSpriteItem.getPosId()>
  [177] objcall 34 .............................. <me.oWallItems.getItemByPossessionId(oSpriteItem.getPosId())>
  [179] setlocal 5 .............................. oItem = me.oWallItems.getItemByPossessionId(oSpriteItem.getPosId())
  [181] getlocal 5 .............................. <oItem>
  [183] pusharglist 1 ........................... <oItem>
  [185] extcall 105 ............................. <voidp(oItem)>
  [187] jmpifz [193] ............................ if voidp(oItem) then
  [190] jmp [218] ............................... next repeat
  [193] getparam 0 .............................. <me>
  [195] getlocal 5 .............................. <oItem>
  [197] getlocal 3 .............................. <iSpriteNum>
  [199] getparam 1 .............................. <bDoubleClick>
  [201] pusharglist 4 ........................... <me, oItem, iSpriteNum, bDoubleClick>
  [203] objcall 13 .............................. <me.handleMouseEvent(oItem, iSpriteNum, bDoubleClick)>
  [205] setlocal 6 .............................. bHandled = me.handleMouseEvent(oItem, iSpriteNum, bDoubleClick)
  [207] getlocal 6 .............................. <bHandled>
  [209] jmpifz [218] ............................ if bHandled then
  [212] pushint8 1 .............................. <1>
  [214] pusharglistnoret 1 ...................... <1>
  [216] extcall 92 .............................. return 1
  [218] pushint8 -1
  [220] getlocal 2
  [222] add
  [223] setlocal 2
  [225] endrepeat [ 32]
  [227] pushzero ................................ <0>
  [228] pusharglistnoret 1 ...................... <0>
  [230] extcall 92 .............................. return 0
  [232] ret
end

on handleMouseEvent me, oItem, iSpriteNum, bDoubleClick
  [  0] getparam 1 .............................. <oItem>
  [  2] getparam 2 .............................. <iSpriteNum>
  [  4] getparam 3 .............................. <bDoubleClick>
  [  6] pusharglist 3 ........................... <oItem, iSpriteNum, bDoubleClick>
  [  8] objcall 9 ............................... <oItem.mouseDownEvent(iSpriteNum, bDoubleClick)>
  [ 10] setlocal 0 .............................. bHandled = oItem.mouseDownEvent(iSpriteNum, bDoubleClick)
  [ 12] getlocal 0 .............................. <bHandled>
  [ 14] jmpifz [ 25] ............................ if bHandled then
  [ 17] getparam 0 .............................. <me>
  [ 19] getparam 1 .............................. <oItem>
  [ 21] pusharglistnoret 2 ...................... <me, oItem>
  [ 23] objcall 21 .............................. me.setSelectedItem(oItem)
  [ 25] getlocal 0 .............................. <bHandled>
  [ 27] pusharglistnoret 1 ...................... <bHandled>
  [ 29] extcall 92 .............................. return bHandled
  [ 31] ret
end

on displayCdPlaying me
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 92 .............................. return 
  [ 13] getglobal 211 ........................... <oStudio>
  [ 15] pusharglist 1 ........................... <oStudio>
  [ 17] objcall 212 ............................. <oStudio.getcdplayer()>
  [ 19] setlocal 0 .............................. oCdplayer = oStudio.getcdplayer()
  [ 21] getlocal 0 .............................. <oCdplayer>
  [ 23] pusharglist 1 ........................... <oCdplayer>
  [ 25] objcall 213 ............................. <oCdplayer.isPlaying()>
  [ 27] setlocal 1 .............................. bPlaying = oCdplayer.isPlaying()
  [ 29] getlocal 1 .............................. <bPlaying>
  [ 31] pushint8 1 .............................. <1>
  [ 33] eq ...................................... <bPlaying = 1>
  [ 34] jmpifz [ 55] ............................ if bPlaying = 1 then
  [ 37] getlocal 0 .............................. <oCdplayer>
  [ 39] pusharglist 1 ........................... <oCdplayer>
  [ 41] objcall 214 ............................. <oCdplayer.getCd()>
  [ 43] setlocal 2 .............................. oCd = oCdplayer.getCd()
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 128 ...................... <me.oInfoStand>
  [ 49] getlocal 2 .............................. <oCd>
  [ 51] pusharglistnoret 2 ...................... <me.oInfoStand, oCd>
  [ 53] objcall 215 ............................. me.oInfoStand.displayCd(oCd)
  [ 55] ret
end

on moveAvatar me, oTargetSquare
  [  0] getparam 1 .............................. <oTargetSquare>
  [  2] pusharglist 1 ........................... <oTargetSquare>
  [  4] extcall 105 ............................. <voidp(oTargetSquare)>
  [  6] jmpifz [ 15] ............................ if voidp(oTargetSquare) then
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 147 .......................... <me.oMouseSquare>
  [ 13] setparam 1 .............................. oTargetSquare = me.oMouseSquare
  [ 15] getglobal 219 ........................... <oAvatar>
  [ 17] pusharglist 1 ........................... <oAvatar>
  [ 19] extcall 105 ............................. <voidp(oAvatar)>
  [ 21] not ..................................... <not voidp(oAvatar)>
  [ 22] jmpifz [ 60] ............................ if not voidp(oAvatar) then
  [ 25] getglobal 219 ........................... <oAvatar>
  [ 27] getchainedprop 220 ...................... <oAvatar.oSquare>
  [ 29] getparam 1 .............................. <oTargetSquare>
  [ 31] pusharglist 2 ........................... <oAvatar.oSquare, oTargetSquare>
  [ 33] objcall 221 ............................. <oAvatar.oSquare.equals(oTargetSquare)>
  [ 35] jmpifz [ 42] ............................ if oAvatar.oSquare.equals(oTargetSquare) then
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 92 .............................. return 
  [ 42] getglobal 219 ........................... <oAvatar>
  [ 44] getparam 1 .............................. <oTargetSquare>
  [ 46] pusharglistnoret 2 ...................... <oAvatar, oTargetSquare>
  [ 48] objcall 222 ............................. oAvatar.moveToSquare(oTargetSquare)
  [ 50] getglobal 219 ........................... <oAvatar>
  [ 52] pusharglistnoret 1 ...................... <oAvatar>
  [ 54] objcall 223 ............................. oAvatar.walk()
  [ 56] pusharglistnoret 0 ...................... <>
  [ 58] extcall 92 .............................. return 
  [ 60] getparam 1 .............................. <oTargetSquare>
  [ 62] pusharglist 1 ........................... <oTargetSquare>
  [ 64] extcall 105 ............................. <voidp(oTargetSquare)>
  [ 66] jmpifz [ 73] ............................ if voidp(oTargetSquare) then
  [ 69] pusharglistnoret 0 ...................... <>
  [ 71] extcall 92 .............................. return 
  [ 73] getparam 0 .............................. <me>
  [ 75] getparam 1 .............................. <oTargetSquare>
  [ 77] pusharglist 2 ........................... <me, oTargetSquare>
  [ 79] objcall 23 .............................. <me.isOverFloor(oTargetSquare)>
  [ 81] setlocal 0 .............................. bIsOverFloor = me.isOverFloor(oTargetSquare)
  [ 83] getlocal 0 .............................. <bIsOverFloor>
  [ 85] not ..................................... <not bIsOverFloor>
  [ 86] jmpifz [ 93] ............................ if not bIsOverFloor then
  [ 89] pusharglistnoret 0 ...................... <>
  [ 91] extcall 92 .............................. return 
  [ 93] getparam 0 .............................. <me>
  [ 95] getparam 1 .............................. <oTargetSquare>
  [ 97] pusharglist 2 ........................... <me, oTargetSquare>
  [ 99] objcall 10 .............................. <me.canMoveToSquare(oTargetSquare)>
  [101] setlocal 1 .............................. bCanMove = me.canMoveToSquare(oTargetSquare)
  [103] getlocal 1 .............................. <bCanMove>
  [105] not ..................................... <not bCanMove>
  [106] jmpifz [113] ............................ if not bCanMove then
  [109] pusharglistnoret 0 ...................... <>
  [111] extcall 92 .............................. return 
  [113] getparam 0 .............................. <me>
  [115] getchainedprop 126 ...................... <me.oAvatars>
  [117] getglobal 224 ........................... <oSession>
  [119] pusharglist 1 ........................... <oSession>
  [121] objcall 181 ............................. <oSession.getScreenName()>
  [123] pusharglist 2 ........................... <me.oAvatars, oSession.getScreenName()>
  [125] objcall 182 ............................. <me.oAvatars.getAvatar(oSession.getScreenName())>
  [127] setglobal 219 ........................... oAvatar = me.oAvatars.getAvatar(oSession.getScreenName())
  [129] getglobal 219 ........................... <oAvatar>
  [131] pusharglist 1 ........................... <oAvatar>
  [133] extcall 105 ............................. <voidp(oAvatar)>
  [135] not ..................................... <not voidp(oAvatar)>
  [136] jmpifz [175] ............................ if not voidp(oAvatar) then
  [139] getglobal 219 ........................... <oAvatar>
  [141] getchainedprop 220 ...................... <oAvatar.oSquare>
  [143] getparam 1 .............................. <oTargetSquare>
  [145] pusharglist 2 ........................... <oAvatar.oSquare, oTargetSquare>
  [147] objcall 221 ............................. <oAvatar.oSquare.equals(oTargetSquare)>
  [149] jmpifz [156] ............................ if oAvatar.oSquare.equals(oTargetSquare) then
  [152] pusharglistnoret 0 ...................... <>
  [154] extcall 92 .............................. return 
  [156] getglobal 211 ........................... <oStudio>
  [158] getparam 1 .............................. <oTargetSquare>
  [160] getobjprop 155 .......................... <oTargetSquare.iCol>
  [162] pushzero ................................ <0>
  [163] getparam 1 .............................. <oTargetSquare>
  [165] getobjprop 154 .......................... <oTargetSquare.iRow>
  [167] pusharglistnoret 4 ...................... <oStudio, oTargetSquare.iCol, 0, oTargetSquare.iRow>
  [169] objcall 225 ............................. oStudio.sendFindPath(oTargetSquare.iCol, 0, oTargetSquare.iRow)
  [171] pusharglistnoret 0 ...................... <>
  [173] extcall 226 ............................. dontPassEvent()
  [175] ret
end

on moveAvatarToFrontOfItem me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_oItem>
  [  4] pusharglist 2 ........................... <me, _oItem>
  [  6] objcall 18 .............................. <me.getSquareInFrontOfItem(_oItem)>
  [  8] setlocal 0 .............................. oTargetSquare = me.getSquareInFrontOfItem(_oItem)
  [ 10] getparam 0 .............................. <me>
  [ 12] getlocal 0 .............................. <oTargetSquare>
  [ 14] pusharglist 2 ........................... <me, oTargetSquare>
  [ 16] objcall 10 .............................. <me.canMoveToSquare(oTargetSquare)>
  [ 18] setlocal 1 .............................. bCanMove = me.canMoveToSquare(oTargetSquare)
  [ 20] getlocal 1 .............................. <bCanMove>
  [ 22] jmpifz [ 42] ............................ if bCanMove then / else
  [ 25] getglobal 88 ............................ <oIsoScene>
  [ 27] getlocal 0 .............................. <oTargetSquare>
  [ 29] pusharglistnoret 2 ...................... <oIsoScene, oTargetSquare>
  [ 31] objcall 15 .............................. oIsoScene.moveAvatar(oTargetSquare)
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglistnoret 1 ...................... <1>
  [ 37] extcall 92 .............................. return 1
  [ 39] jmp [ 47]
  [ 42] pushzero ................................ <0>
  [ 43] pusharglistnoret 1 ...................... <0>
  [ 45] extcall 92 .............................. return 0
  [ 47] ret
end

on avatarIsInFrontOfItem me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 126 ...................... <me.oAvatars>
  [  4] getglobal 171 ........................... <oDenizenManager>
  [  6] pusharglist 1 ........................... <oDenizenManager>
  [  8] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 10] pusharglist 2 ........................... <me.oAvatars, oDenizenManager.getScreenName()>
  [ 12] objcall 182 ............................. <me.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [ 14] setglobal 219 ........................... oAvatar = me.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [ 16] getglobal 219 ........................... <oAvatar>
  [ 18] pusharglist 1 ........................... <oAvatar>
  [ 20] extcall 105 ............................. <voidp(oAvatar)>
  [ 22] jmpifz [ 30] ............................ if voidp(oAvatar) then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 92 .............................. return 0
  [ 30] getglobal 219 ........................... <oAvatar>
  [ 32] pusharglist 1 ........................... <oAvatar>
  [ 34] objcall 183 ............................. <oAvatar.getSquare()>
  [ 36] setlocal 0 .............................. oAvatarSquare = oAvatar.getSquare()
  [ 38] getlocal 0 .............................. <oAvatarSquare>
  [ 40] pusharglist 1 ........................... <oAvatarSquare>
  [ 42] extcall 105 ............................. <voidp(oAvatarSquare)>
  [ 44] jmpifz [ 52] ............................ if voidp(oAvatarSquare) then
  [ 47] pushzero ................................ <0>
  [ 48] pusharglistnoret 1 ...................... <0>
  [ 50] extcall 92 .............................. return 0
  [ 52] getparam 0 .............................. <me>
  [ 54] getparam 1 .............................. <_oItem>
  [ 56] pusharglist 2 ........................... <me, _oItem>
  [ 58] objcall 18 .............................. <me.getSquareInFrontOfItem(_oItem)>
  [ 60] setlocal 1 .............................. oTargetSquare = me.getSquareInFrontOfItem(_oItem)
  [ 62] getlocal 0 .............................. <oAvatarSquare>
  [ 64] getlocal 1 .............................. <oTargetSquare>
  [ 66] pusharglist 2 ........................... <oAvatarSquare, oTargetSquare>
  [ 68] objcall 221 ............................. <oAvatarSquare.equals(oTargetSquare)>
  [ 70] setlocal 2 .............................. bAvatarInTargetSquare = oAvatarSquare.equals(oTargetSquare)
  [ 72] getlocal 2 .............................. <bAvatarInTargetSquare>
  [ 74] pusharglistnoret 1 ...................... <bAvatarInTargetSquare>
  [ 76] extcall 92 .............................. return bAvatarInTargetSquare
  [ 78] ret
end

on getSquareInFrontOfItem me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] objcall 183 ............................. <_oItem.getSquare()>
  [  6] setlocal 0 .............................. oItemSquare = _oItem.getSquare()
  [  8] getparam 1 .............................. <_oItem>
  [ 10] pusharglist 1 ........................... <_oItem>
  [ 12] objcall 232 ............................. <_oItem.getDirection()>
  [ 14] setlocal 1 .............................. iItemDirection = _oItem.getDirection()
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 114 ...................... <me.oGrid>
  [ 20] getlocal 0 .............................. <oItemSquare>
  [ 22] getlocal 1 .............................. <iItemDirection>
  [ 24] pusharglist 3 ........................... <me.oGrid, oItemSquare, iItemDirection>
  [ 26] objcall 233 ............................. <me.oGrid.getSquareAtDirection(oItemSquare, iItemDirection)>
  [ 28] setlocal 2 .............................. oTargetSquare = me.oGrid.getSquareAtDirection(oItemSquare, iItemDirection)
  [ 30] getlocal 2 .............................. <oTargetSquare>
  [ 32] pusharglistnoret 1 ...................... <oTargetSquare>
  [ 34] extcall 92 .............................. return oTargetSquare
  [ 36] ret
end

on keyDownEvent me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 236 .......................... <the keyCode>
  [  4] peek 0 .................................. case the keyCode of
  [  6] pushint8 126 ............................ <126>
  [  8] eq
  [  9] jmpifz [ 15] ............................ (case) 126:
  [ 12] jmp [ 66]
  [ 15] peek 0
  [ 17] pushint8 125 ............................ <125>
  [ 19] eq
  [ 20] jmpifz [ 26] ............................ (case) 125:
  [ 23] jmp [ 66]
  [ 26] peek 0
  [ 28] pushint8 124 ............................ <124>
  [ 30] eq
  [ 31] jmpifz [ 37] ............................ (case) 124:
  [ 34] jmp [ 66]
  [ 37] peek 0
  [ 39] pushint8 123 ............................ <123>
  [ 41] eq
  [ 42] jmpifz [ 48] ............................ (case) 123:
  [ 45] jmp [ 66]
  [ 48] peek 0
  [ 50] pushint8 117 ............................ <117>
  [ 52] eq
  [ 53] jmpifz [ 66] ............................ (case) 117:
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglistnoret 1 ...................... <me>
  [ 60] objcall 25 .............................. me.deleteSelectedItem()
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 237 ............................. updateStage()
  [ 66] pop 1 ................................... end case
  [ 68] ret
end

on getSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 131 .......................... <me.oSelectedItem>
  [  4] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [  6] extcall 92 .............................. return me.oSelectedItem
  [  8] ret
end

on setSelectedItem me, oItem, bDisplayInfo
  [  0] getparam 1 .............................. <oItem>
  [  2] pusharglist 1 ........................... <oItem>
  [  4] extcall 105 ............................. <voidp(oItem)>
  [  6] jmpifz [ 13] ............................ if voidp(oItem) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 92 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 131 .......................... <me.oSelectedItem>
  [ 17] pusharglist 1 ........................... <me.oSelectedItem>
  [ 19] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [ 21] not ..................................... <not voidp(me.oSelectedItem)>
  [ 22] jmpifz [ 53] ............................ if not voidp(me.oSelectedItem) then
  [ 25] getparam 0 .............................. <me>
  [ 27] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 29] pusharglist 1 ........................... <me.oSelectedItem>
  [ 31] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 33] jmpifz [ 53] ............................ if me.oSelectedItem.getDrag() then
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 1 ........................... <me>
  [ 40] objcall 30 .............................. <me.dropSelectedItem()>
  [ 42] setlocal 0 .............................. bDropped = me.dropSelectedItem()
  [ 44] getlocal 0 .............................. <bDropped>
  [ 46] jmpifz [ 53] ............................ if bDropped then
  [ 49] pusharglistnoret 0 ...................... <>
  [ 51] extcall 92 .............................. return 
  [ 53] getparam 0 .............................. <me>
  [ 55] getparam 1 .............................. <oItem>
  [ 57] setobjprop 131 .......................... me.oSelectedItem = oItem
  [ 59] getparam 2 .............................. <bDisplayInfo>
  [ 61] pusharglist 1 ........................... <bDisplayInfo>
  [ 63] extcall 105 ............................. <voidp(bDisplayInfo)>
  [ 65] jmpifz [ 72] ............................ if voidp(bDisplayInfo) then
  [ 68] pushint8 1 .............................. <1>
  [ 70] setparam 2 .............................. bDisplayInfo = 1
  [ 72] getparam 2 .............................. <bDisplayInfo>
  [ 74] jmpifz [ 89] ............................ if bDisplayInfo then
  [ 77] getparam 0 .............................. <me>
  [ 79] getchainedprop 128 ...................... <me.oInfoStand>
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 131 .......................... <me.oSelectedItem>
  [ 85] pusharglistnoret 2 ...................... <me.oInfoStand, me.oSelectedItem>
  [ 87] objcall 238 ............................. me.oInfoStand.display(me.oSelectedItem)
  [ 89] getparam 0 .............................. <me>
  [ 91] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 93] pusharglist 1 ........................... <me.oSelectedItem>
  [ 95] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 97] jmpifz [112] ............................ if me.oSelectedItem.getDrag() then
  [100] getparam 0 .............................. <me>
  [102] pusharglist 1 ........................... <me>
  [104] objcall 30 .............................. <me.dropSelectedItem()>
  [106] setlocal 0 .............................. bDropped = me.dropSelectedItem()
  [108] pusharglistnoret 0 ...................... <>
  [110] extcall 92 .............................. return 
  [112] getparam 0 .............................. <me>
  [114] getchainedprop 131 ...................... <me.oSelectedItem>
  [116] pusharglist 1 ........................... <me.oSelectedItem>
  [118] objcall 199 ............................. <me.oSelectedItem.isAvatar()>
  [120] not ..................................... <not me.oSelectedItem.isAvatar()>
  [121] pusharglist 0 ........................... <>
  [123] thebuiltin 239 .......................... <the optionDown>
  [125] and ..................................... <not me.oSelectedItem.isAvatar() and the optionDown>
  [126] jmpifz [189] ............................ if not me.oSelectedItem.isAvatar() and the optionDown then
  [129] getglobal 211 ........................... <oStudio>
  [131] pusharglist 1 ........................... <oStudio>
  [133] extcall 105 ............................. <voidp(oStudio)>
  [135] jmpifz [149] ............................ if voidp(oStudio) then / else
  [138] pushint8 1 .............................. <1>
  [140] setlocal 1 .............................. bIsOwner = 1
  [142] pushint8 1 .............................. <1>
  [144] setlocal 2 .............................. bIsMod = 1
  [146] jmp [171]
  [149] getglobal 211 ........................... <oStudio>
  [151] getglobal 171 ........................... <oDenizenManager>
  [153] pusharglist 1 ........................... <oDenizenManager>
  [155] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [157] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [159] objcall 240 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [161] setlocal 1 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [163] getglobal 171 ........................... <oDenizenManager>
  [165] pusharglist 1 ........................... <oDenizenManager>
  [167] objcall 241 ............................. <oDenizenManager.isMod()>
  [169] setlocal 2 .............................. bIsMod = oDenizenManager.isMod()
  [171] getlocal 1 .............................. <bIsOwner>
  [173] getlocal 2 .............................. <bIsMod>
  [175] or ...................................... <bIsOwner or bIsMod>
  [176] jmpifz [185] ............................ if bIsOwner or bIsMod then
  [179] getparam 0 .............................. <me>
  [181] pusharglistnoret 1 ...................... <me>
  [183] objcall 29 .............................. me.moveSelectedItem()
  [185] pusharglistnoret 0 ...................... <>
  [187] extcall 92 .............................. return 
  [189] ret
end

on createItem me, sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop
  [  0] getparam 2 .............................. <sPosId>
  [  2] pusharglist 1 ........................... <sPosId>
  [  4] extcall 105 ............................. <voidp(sPosId)>
  [  6] jmpifz [ 41] ............................ if voidp(sPosId) then
  [  9] getglobal 245 ........................... <oTempId>
  [ 11] pusharglist 1 ........................... <oTempId>
  [ 13] extcall 105 ............................. <voidp(oTempId)>
  [ 15] jmpifz [ 26] ............................ if voidp(oTempId) then / else
  [ 18] pushint16 1000 .......................... <1000>
  [ 21] setglobal 245 ........................... oTempId = 1000
  [ 23] jmp [ 33]
  [ 26] getglobal 245 ........................... <oTempId>
  [ 28] pushint8 1 .............................. <1>
  [ 30] add ..................................... <oTempId + 1>
  [ 31] setglobal 245 ........................... oTempId = oTempId + 1
  [ 33] getglobal 245 ........................... <oTempId>
  [ 35] pusharglist 1 ........................... <oTempId>
  [ 37] extcall 246 ............................. <string(oTempId)>
  [ 39] setparam 2 .............................. sPosId = string(oTempId)
  [ 41] pushcons 26 ............................. <"TYPE_">
  [ 43] getparam 4 .............................. <sType>
  [ 45] joinstr ................................. <"TYPE_" & sType>
  [ 46] setlocal 0 .............................. sTypeScript = "TYPE_" & sType
  [ 48] getlocal 0 .............................. <sTypeScript>
  [ 50] pusharglist 1 ........................... <sTypeScript>
  [ 52] extcall 57 .............................. <script(sTypeScript)>
  [ 54] getparam 1 .............................. <sProdID>
  [ 56] getparam 2 .............................. <sPosId>
  [ 58] getparam 3 .............................. <sImageBase>
  [ 60] getparam 4 .............................. <sType>
  [ 62] getparam 5 .............................. <sAction>
  [ 64] getparam 6 .............................. <iState>
  [ 66] getparam 7 .............................. <aAttributes>
  [ 68] getparam 8 .............................. <sCastLib>
  [ 70] getparam 9 .............................. <iRow>
  [ 72] getparam 10 ............................. <_iCol>
  [ 74] getparam 11 ............................. <iGridY>
  [ 76] getparam 12 ............................. <iDirection>
  [ 78] getparam 13 ............................. <iHeight>
  [ 80] getparam 14 ............................. <iHeightOffset>
  [ 82] getparam 15 ............................. <bItemsAllowedOnTop>
  [ 84] pusharglist 16 .......................... <script(sTypeScript), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop>
  [ 86] objcall 0 ............................... <script(sTypeScript).new(sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 88] setlocal 1 .............................. oItem = script(sTypeScript).new(sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)
  [ 90] getlocal 1 .............................. <oItem>
  [ 92] pusharglistnoret 1 ...................... <oItem>
  [ 94] objcall 247 ............................. oItem.draw()
  [ 96] getlocal 1 .............................. <oItem>
  [ 98] pusharglistnoret 1 ...................... <oItem>
  [100] extcall 92 .............................. return oItem
  [102] ret
end

on isOverFloor me, _oSquare
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 115 ...................... <oIsoScene.oMap>
  [  4] getparam 1 .............................. <_oSquare>
  [  6] getobjprop 154 .......................... <_oSquare.iRow>
  [  8] getparam 1 .............................. <_oSquare>
  [ 10] getobjprop 155 .......................... <_oSquare.iCol>
  [ 12] pusharglist 3 ........................... <oIsoScene.oMap, _oSquare.iRow, _oSquare.iCol>
  [ 14] objcall 156 ............................. <oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)>
  [ 16] setlocal 0 .............................. oMapNode = oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)
  [ 18] getlocal 0 .............................. <oMapNode>
  [ 20] getobjprop 157 .......................... <oMapNode.w>
  [ 22] setlocal 1 .............................. iWeight = oMapNode.w
  [ 24] getlocal 1 .............................. <iWeight>
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 115 ...................... <me.oMap>
  [ 30] getchainedprop 158 ...................... <me.oMap.oPathfinder>
  [ 32] getobjprop 159 .......................... <me.oMap.oPathfinder.W_BLOCKED>
  [ 34] eq ...................................... <iWeight = me.oMap.oPathfinder.W_BLOCKED>
  [ 35] jmpifz [ 46] ............................ if iWeight = me.oMap.oPathfinder.W_BLOCKED then / else
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 92 .............................. return 0
  [ 43] jmp [ 52]
  [ 46] pushint8 1 .............................. <1>
  [ 48] pusharglistnoret 1 ...................... <1>
  [ 50] extcall 92 .............................. return 1
  [ 52] ret
end

on squaresAreOverFloor me, _aSquares
  [  0] getparam 1 .............................. <_aSquares>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 169
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 54] ............................ repeat with _oSquare in _aSquares
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 196
  [ 26] setlocal 0
  [ 28] getparam 0 .............................. <me>
  [ 30] getlocal 0 .............................. <_oSquare>
  [ 32] pusharglist 2 ........................... <me, _oSquare>
  [ 34] objcall 23 .............................. <me.isOverFloor(_oSquare)>
  [ 36] setlocal 1 .............................. bIsOverFloor = me.isOverFloor(_oSquare)
  [ 38] getlocal 1 .............................. <bIsOverFloor>
  [ 40] not ..................................... <not bIsOverFloor>
  [ 41] jmpifz [ 49] ............................ if not bIsOverFloor then
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 1 ...................... <0>
  [ 47] extcall 92 .............................. return 0
  [ 49] pushint8 1
  [ 51] add
  [ 52] endrepeat [ 10]
  [ 54] pop 3
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglistnoret 1 ...................... <1>
  [ 60] extcall 92 .............................. return 1
  [ 62] ret
end

on deleteSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 131 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 61] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 16] pusharglist 1 ........................... <me.oSelectedItem>
  [ 18] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 20] jmpifz [ 33] ............................ if me.oSelectedItem.getDrag() then
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 2 ...................... <me.oSelectedItem, 0>
  [ 30] objcall 264 ............................. me.oSelectedItem.setDrag(0)
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 37] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [ 39] objcall 26 .............................. me.oSelectedItem.deleteItem()
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglist 0 ........................... <>
  [ 45] extcall 130 ............................. <VOID>
  [ 47] setobjprop 131 .......................... me.oSelectedItem = VOID
  [ 49] getparam 0 .............................. <me>
  [ 51] getchainedprop 128 ...................... <me.oInfoStand>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 131 .......................... <me.oSelectedItem>
  [ 57] pusharglistnoret 2 ...................... <me.oInfoStand, me.oSelectedItem>
  [ 59] objcall 238 ............................. me.oInfoStand.display(me.oSelectedItem)
  [ 61] ret
end

on deleteItem me, oItem
  [  0] getparam 1 .............................. <oItem>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 131 .......................... <me.oSelectedItem>
  [  6] pusharglist 2 ........................... <oItem, me.oSelectedItem>
  [  8] objcall 221 ............................. <oItem.equals(me.oSelectedItem)>
  [ 10] jmpifz [ 26] ............................ if oItem.equals(me.oSelectedItem) then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 25 .............................. me.deleteSelectedItem()
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 92 .............................. return 
  [ 23] jmp [ 32]
  [ 26] getparam 1 .............................. <oItem>
  [ 28] pusharglistnoret 1 ...................... <oItem>
  [ 30] objcall 26 .............................. oItem.deleteItem()
  [ 32] ret
end

on rotateSelectedItem me
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 20] ............................ if voidp(oStudio) then / else
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 0 .............................. bIsOwner = 1
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 1 .............................. bIsMod = 1
  [ 17] jmp [ 42]
  [ 20] getglobal 211 ........................... <oStudio>
  [ 22] getglobal 171 ........................... <oDenizenManager>
  [ 24] pusharglist 1 ........................... <oDenizenManager>
  [ 26] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 28] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 30] objcall 240 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 32] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 34] getglobal 171 ........................... <oDenizenManager>
  [ 36] pusharglist 1 ........................... <oDenizenManager>
  [ 38] objcall 241 ............................. <oDenizenManager.isMod()>
  [ 40] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 42] getlocal 0 .............................. <bIsOwner>
  [ 44] not ..................................... <not bIsOwner>
  [ 45] getlocal 1 .............................. <bIsMod>
  [ 47] not ..................................... <not bIsMod>
  [ 48] and ..................................... <not bIsOwner and not bIsMod>
  [ 49] jmpifz [ 56] ............................ if not bIsOwner and not bIsMod then
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 92 .............................. return 
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 131 .......................... <me.oSelectedItem>
  [ 60] pusharglist 1 ........................... <me.oSelectedItem>
  [ 62] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [ 64] not ..................................... <not voidp(me.oSelectedItem)>
  [ 65] jmpifz [138] ............................ if not voidp(me.oSelectedItem) then
  [ 68] getparam 0 .............................. <me>
  [ 70] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 72] pusharglist 1 ........................... <me.oSelectedItem>
  [ 74] objcall 265 ............................. <me.oSelectedItem.rotate()>
  [ 77] setlocal 2 .............................. bSuccess = me.oSelectedItem.rotate()
  [ 79] getlocal 2 .............................. <bSuccess>
  [ 81] not ..................................... <not bSuccess>
  [ 82] jmpifz [ 98] ............................ if not bSuccess then
  [ 85] getparam 0 .............................. <me>
  [ 87] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 89] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [ 91] objcall 266 ............................. me.oSelectedItem.resetLastPosition()
  [ 94] pusharglistnoret 0 ...................... <>
  [ 96] extcall 92 .............................. return 
  [ 98] getglobal 224 ........................... <oSession>
  [100] pusharglist 1 ........................... <oSession>
  [102] extcall 105 ............................. <voidp(oSession)>
  [104] not ..................................... <not voidp(oSession)>
  [105] jmpifz [138] ............................ if not voidp(oSession) then
  [108] getglobal 224 ........................... <oSession>
  [110] getobjprop 267 .......................... <oSession.bTestMode>
  [113] not ..................................... <not oSession.bTestMode>
  [114] getglobal 268 ........................... <oPossessionStudio>
  [117] pusharglist 1 ........................... <oPossessionStudio>
  [119] extcall 105 ............................. <voidp(oPossessionStudio)>
  [121] not ..................................... <not voidp(oPossessionStudio)>
  [122] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [123] jmpifz [138] ............................ if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [126] getglobal 268 ........................... <oPossessionStudio>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 131 .......................... <me.oSelectedItem>
  [133] pusharglistnoret 2 ...................... <oPossessionStudio, me.oSelectedItem>
  [135] objcall 269 ............................. oPossessionStudio.sendUpdatePossession(me.oSelectedItem)
  [138] ret
end

on useSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 131 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 12] ............................ if not voidp(me.oSelectedItem) then
  [ 12] ret
end

on moveSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 131 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [204] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getglobal 211 ........................... <oStudio>
  [ 14] pusharglist 1 ........................... <oStudio>
  [ 16] extcall 105 ............................. <voidp(oStudio)>
  [ 18] jmpifz [ 35] ............................ if voidp(oStudio) then / else
  [ 21] pushint8 1 .............................. <1>
  [ 23] setlocal 0 .............................. bIsOwner = 1
  [ 25] pushint8 1 .............................. <1>
  [ 27] setlocal 1 .............................. bIsMod = 1
  [ 29] pushzero ................................ <0>
  [ 30] setlocal 2 .............................. bTrading = 0
  [ 32] jmp [ 71]
  [ 35] getglobal 211 ........................... <oStudio>
  [ 37] getglobal 171 ........................... <oDenizenManager>
  [ 39] pusharglist 1 ........................... <oDenizenManager>
  [ 41] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 43] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 45] objcall 240 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 47] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 49] getglobal 171 ........................... <oDenizenManager>
  [ 51] pusharglist 1 ........................... <oDenizenManager>
  [ 53] objcall 241 ............................. <oDenizenManager.isMod()>
  [ 55] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 57] getglobal 150 ........................... <ElementMgr>
  [ 59] pusharglist 1 ........................... <ElementMgr>
  [ 61] objcall 271 ............................. <ElementMgr.getTrader()>
  [ 64] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 66] extcall 105 ............................. <voidp(ElementMgr.getTrader())>
  [ 68] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 69] setlocal 2 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 71] getlocal 0 .............................. <bIsOwner>
  [ 73] not ..................................... <not bIsOwner>
  [ 74] getlocal 1 .............................. <bIsMod>
  [ 76] not ..................................... <not bIsMod>
  [ 77] and ..................................... <not bIsOwner and not bIsMod>
  [ 78] getlocal 2 .............................. <bTrading>
  [ 80] not ..................................... <not bTrading>
  [ 81] and ..................................... <not bIsOwner and not bIsMod and not bTrading>
  [ 82] jmpifz [ 89] ............................ if not bIsOwner and not bIsMod and not bTrading then
  [ 85] pusharglistnoret 0 ...................... <>
  [ 87] extcall 92 .............................. return 
  [ 89] getparam 0 .............................. <me>
  [ 91] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 93] pusharglist 1 ........................... <me.oSelectedItem>
  [ 95] objcall 180 ............................. <me.oSelectedItem.getType()>
  [ 97] setlocal 3 .............................. sType = me.oSelectedItem.getType()
  [ 99] getlocal 3 .............................. <sType>
  [101] pushcons 27 ............................. <"Wallpaper">
  [103] eq ...................................... <sType = "Wallpaper">
  [104] jmpifz [146] ............................ if sType = "Wallpaper" then
  [107] getlocal 2 .............................. <bTrading>
  [109] jmpifz [127] ............................ if bTrading then
  [112] getparam 0 .............................. <me>
  [114] getchainedprop 131 ...................... <me.oSelectedItem>
  [116] pushint8 1 .............................. <1>
  [118] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [120] objcall 264 ............................. me.oSelectedItem.setDrag(1)
  [123] pusharglistnoret 0 ...................... <>
  [125] extcall 92 .............................. return 
  [127] getparam 0 .............................. <me>
  [129] getchainedprop 131 ...................... <me.oSelectedItem>
  [131] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [133] objcall 272 ............................. me.oSelectedItem.displayWallReplace()
  [136] getparam 0 .............................. <me>
  [138] pusharglistnoret 1 ...................... <me>
  [140] objcall 25 .............................. me.deleteSelectedItem()
  [142] pusharglistnoret 0 ...................... <>
  [144] extcall 92 .............................. return 
  [146] getlocal 3 .............................. <sType>
  [148] pushcons 8 .............................. <"Floor">
  [150] eq ...................................... <sType = "Floor">
  [151] jmpifz [193] ............................ if sType = "Floor" then
  [154] getlocal 2 .............................. <bTrading>
  [156] jmpifz [174] ............................ if bTrading then
  [159] getparam 0 .............................. <me>
  [161] getchainedprop 131 ...................... <me.oSelectedItem>
  [163] pushint8 1 .............................. <1>
  [165] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [167] objcall 264 ............................. me.oSelectedItem.setDrag(1)
  [170] pusharglistnoret 0 ...................... <>
  [172] extcall 92 .............................. return 
  [174] getparam 0 .............................. <me>
  [176] getchainedprop 131 ...................... <me.oSelectedItem>
  [178] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [180] objcall 273 ............................. me.oSelectedItem.displayFloorReplace()
  [183] getparam 0 .............................. <me>
  [185] pusharglistnoret 1 ...................... <me>
  [187] objcall 25 .............................. me.deleteSelectedItem()
  [189] pusharglistnoret 0 ...................... <>
  [191] extcall 92 .............................. return 
  [193] getparam 0 .............................. <me>
  [195] getchainedprop 131 ...................... <me.oSelectedItem>
  [197] pushint8 1 .............................. <1>
  [199] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [201] objcall 264 ............................. me.oSelectedItem.setDrag(1)
  [204] ret
end

on dropSelectedItem me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDropped = 0
  [  3] getparam 0 .............................. <me>
  [  5] getobjprop 131 .......................... <me.oSelectedItem>
  [  7] pusharglist 1 ........................... <me.oSelectedItem>
  [  9] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [ 11] not ..................................... <not voidp(me.oSelectedItem)>
  [ 12] jmpifz [191] ............................ if not voidp(me.oSelectedItem) then
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 19] pusharglist 1 ........................... <me.oSelectedItem>
  [ 21] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 23] jmpifz [191] ............................ if me.oSelectedItem.getDrag() then
  [ 26] getglobal 150 ........................... <ElementMgr>
  [ 28] pusharglist 1 ........................... <ElementMgr>
  [ 30] objcall 275 ............................. <ElementMgr.mouseIsOverBackpack()>
  [ 33] jmpifz [ 59] ............................ if ElementMgr.mouseIsOverBackpack() then
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 40] pusharglist 1 ........................... <me.oSelectedItem>
  [ 42] objcall 266 ............................. <me.oSelectedItem.resetLastPosition()>
  [ 45] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [ 46] jmpifz [ 55] ............................ if not me.oSelectedItem.resetLastPosition() then
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglistnoret 1 ...................... <me>
  [ 53] objcall 25 .............................. me.deleteSelectedItem()
  [ 55] pusharglistnoret 0 ...................... <>
  [ 57] extcall 92 .............................. return 
  [ 59] getglobal 211 ........................... <oStudio>
  [ 61] pusharglist 1 ........................... <oStudio>
  [ 63] extcall 105 ............................. <voidp(oStudio)>
  [ 65] jmpifz [ 79] ............................ if voidp(oStudio) then / else
  [ 68] pushint8 1 .............................. <1>
  [ 70] setlocal 1 .............................. bOwner = 1
  [ 72] pushint8 1 .............................. <1>
  [ 74] setlocal 2 .............................. bIsMod = 1
  [ 76] jmp [101]
  [ 79] getglobal 211 ........................... <oStudio>
  [ 81] getglobal 171 ........................... <oDenizenManager>
  [ 83] pusharglist 1 ........................... <oDenizenManager>
  [ 85] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 87] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 89] objcall 240 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 91] setlocal 1 .............................. bOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 93] getglobal 171 ........................... <oDenizenManager>
  [ 95] pusharglist 1 ........................... <oDenizenManager>
  [ 97] objcall 241 ............................. <oDenizenManager.isMod()>
  [ 99] setlocal 2 .............................. bIsMod = oDenizenManager.isMod()
  [101] getlocal 1 .............................. <bOwner>
  [103] not ..................................... <not bOwner>
  [104] getlocal 2 .............................. <bIsMod>
  [106] not ..................................... <not bIsMod>
  [107] and ..................................... <not bOwner and not bIsMod>
  [108] jmpifz [134] ............................ if not bOwner and not bIsMod then
  [111] getparam 0 .............................. <me>
  [113] getchainedprop 131 ...................... <me.oSelectedItem>
  [115] pusharglist 1 ........................... <me.oSelectedItem>
  [117] objcall 266 ............................. <me.oSelectedItem.resetLastPosition()>
  [120] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [121] jmpifz [130] ............................ if not me.oSelectedItem.resetLastPosition() then
  [124] getparam 0 .............................. <me>
  [126] pusharglistnoret 1 ...................... <me>
  [128] objcall 25 .............................. me.deleteSelectedItem()
  [130] pusharglistnoret 0 ...................... <>
  [132] extcall 92 .............................. return 
  [134] getparam 0 .............................. <me>
  [136] getchainedprop 131 ...................... <me.oSelectedItem>
  [138] pusharglist 1 ........................... <me.oSelectedItem>
  [140] objcall 276 ............................. <me.oSelectedItem.drop()>
  [143] setlocal 0 .............................. bDropped = me.oSelectedItem.drop()
  [145] getlocal 0 .............................. <bDropped>
  [147] jmpifz [172] ............................ if bDropped then / else
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 131 ...................... <me.oSelectedItem>
  [154] pushzero ................................ <0>
  [155] pusharglistnoret 2 ...................... <me.oSelectedItem, 0>
  [157] objcall 264 ............................. me.oSelectedItem.setDrag(0)
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 131 ...................... <me.oSelectedItem>
  [164] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [166] objcall 277 ............................. me.oSelectedItem.sendPutInStudio()
  [169] jmp [191]
  [172] getparam 0 .............................. <me>
  [174] getchainedprop 131 ...................... <me.oSelectedItem>
  [176] pusharglist 1 ........................... <me.oSelectedItem>
  [178] objcall 266 ............................. <me.oSelectedItem.resetLastPosition()>
  [181] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [182] jmpifz [191] ............................ if not me.oSelectedItem.resetLastPosition() then
  [185] getparam 0 .............................. <me>
  [187] pusharglistnoret 1 ...................... <me>
  [189] objcall 25 .............................. me.deleteSelectedItem()
  [191] getlocal 0 .............................. <bDropped>
  [193] pusharglistnoret 1 ...................... <bDropped>
  [195] extcall 92 .............................. return bDropped
  [197] ret
end

on updateSelectedItem me, oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 131 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 71] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 16] pusharglist 1 ........................... <me.oSelectedItem>
  [ 18] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 20] jmpifz [ 71] ............................ if me.oSelectedItem.getDrag() then
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 27] pusharglist 1 ........................... <me.oSelectedItem>
  [ 29] objcall 203 ............................. <me.oSelectedItem.isWallItem()>
  [ 31] jmpifz [ 38] ............................ if me.oSelectedItem.isWallItem() then
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 92 .............................. return 
  [ 38] getglobal 150 ........................... <ElementMgr>
  [ 40] pusharglist 1 ........................... <ElementMgr>
  [ 42] objcall 275 ............................. <ElementMgr.mouseIsOverBackpack()>
  [ 45] jmpifz [ 52] ............................ if ElementMgr.mouseIsOverBackpack() then
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 92 .............................. return 
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 56] getparam 1 .............................. <oSquare>
  [ 58] pusharglist 2 ........................... <me.oSelectedItem, oSquare>
  [ 60] objcall 279 ............................. <me.oSelectedItem.placeItem(oSquare)>
  [ 63] setlocal 0 .............................. bSuccess = me.oSelectedItem.placeItem(oSquare)
  [ 65] getlocal 0 .............................. <bSuccess>
  [ 67] pusharglistnoret 1 ...................... <bSuccess>
  [ 69] extcall 92 .............................. return bSuccess
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 1 ...................... <0>
  [ 74] extcall 92 .............................. return 0
  [ 76] ret
end

on getSquareOffsets me, oItem, oSquare
  [  0] getparam 1 .............................. <oItem>
  [  2] pusharglist 1 ........................... <oItem>
  [  4] objcall 280 ............................. <oItem.getOccupiedSquares()>
  [  7] setlocal 0 .............................. aOccupiedSquares = oItem.getOccupiedSquares()
  [  9] getparam 1 .............................. <oItem>
  [ 11] pusharglist 1 ........................... <oItem>
  [ 13] objcall 281 ............................. <oItem.getGridX()>
  [ 16] setlocal 1 .............................. iGridX = oItem.getGridX()
  [ 18] getparam 1 .............................. <oItem>
  [ 20] pusharglist 1 ........................... <oItem>
  [ 22] objcall 282 ............................. <oItem.getGridZ()>
  [ 25] setlocal 2 .............................. iGridZ = oItem.getGridZ()
  [ 27] getparam 2 .............................. <oSquare>
  [ 29] getobjprop 155 .......................... <oSquare.iCol>
  [ 31] getlocal 1 .............................. <iGridX>
  [ 33] sub ..................................... <oSquare.iCol - iGridX>
  [ 34] setlocal 3 .............................. iXDif = oSquare.iCol - iGridX
  [ 36] getparam 2 .............................. <oSquare>
  [ 38] getobjprop 154 .......................... <oSquare.iRow>
  [ 40] getlocal 2 .............................. <iGridZ>
  [ 42] sub ..................................... <oSquare.iRow - iGridZ>
  [ 43] setlocal 4 .............................. iZDif = oSquare.iRow - iGridZ
  [ 45] pusharglist 0 ........................... <[]>
  [ 47] pushlist ................................ <[]>
  [ 48] setlocal 5 .............................. aDifList = []
  [ 50] getlocal 0 .............................. <aOccupiedSquares>
  [ 52] peek 0
  [ 54] pusharglist 1
  [ 56] extcall 169
  [ 58] pushint8 1
  [ 60] peek 0
  [ 62] peek 2
  [ 64] lteq
  [ 65] jmpifz [138] ............................ repeat with i in aOccupiedSquares
  [ 68] peek 2
  [ 70] peek 1
  [ 72] pusharglist 2
  [ 74] extcall 196
  [ 76] setlocal 6
  [ 78] getlocal 6 .............................. <i>
  [ 80] pusharglist 1 ........................... <i>
  [ 82] extcall 105 ............................. <voidp(i)>
  [ 84] jmpifz [ 90] ............................ if voidp(i) then
  [ 87] jmp [133] ............................... next repeat
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 114 ...................... <me.oGrid>
  [ 94] getlocal 6 .............................. <i>
  [ 96] getobjprop 154 .......................... <i.iRow>
  [ 98] getlocal 4 .............................. <iZDif>
  [100] add ..................................... <i.iRow + iZDif>
  [101] getlocal 6 .............................. <i>
  [103] getobjprop 155 .......................... <i.iCol>
  [105] getlocal 3 .............................. <iXDif>
  [107] add ..................................... <i.iCol + iXDif>
  [108] pusharglist 3 ........................... <me.oGrid, i.iRow + iZDif, i.iCol + iXDif>
  [110] objcall 283 ............................. <me.oGrid.getSquareByRowCol(i.iRow + iZDif, i.iCol + iXDif)>
  [113] setlocal 7 .............................. oDifSquare = me.oGrid.getSquareByRowCol(i.iRow + iZDif, i.iCol + iXDif)
  [115] getlocal 7 .............................. <oDifSquare>
  [117] pusharglist 1 ........................... <oDifSquare>
  [119] extcall 105 ............................. <voidp(oDifSquare)>
  [121] not ..................................... <not voidp(oDifSquare)>
  [122] jmpifz [133] ............................ if not voidp(oDifSquare) then
  [125] getlocal 5 .............................. <aDifList>
  [127] getlocal 7 .............................. <oDifSquare>
  [129] pusharglistnoret 2 ...................... <aDifList, oDifSquare>
  [131] objcall 133 ............................. aDifList.add(oDifSquare)
  [133] pushint8 1
  [135] add
  [136] endrepeat [ 60]
  [138] pop 3
  [140] getlocal 5 .............................. <aDifList>
  [142] pusharglistnoret 1 ...................... <aDifList>
  [144] extcall 92 .............................. return aDifList
  [146] ret
end

on addSelectedItemToTrade me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 131 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 105 ............................. <voidp(me.oSelectedItem)>
  [  8] jmpifz [ 15] ............................ if voidp(me.oSelectedItem) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 92 .............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 19] pusharglist 1 ........................... <me.oSelectedItem>
  [ 21] objcall 200 ............................. <me.oSelectedItem.isFurniItem()>
  [ 23] not ..................................... <not me.oSelectedItem.isFurniItem()>
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 28] pusharglist 1 ........................... <me.oSelectedItem>
  [ 30] objcall 203 ............................. <me.oSelectedItem.isWallItem()>
  [ 32] not ..................................... <not me.oSelectedItem.isWallItem()>
  [ 33] and ..................................... <not me.oSelectedItem.isFurniItem() and not me.oSelectedItem.isWallItem()>
  [ 34] jmpifz [ 41] ............................ if not me.oSelectedItem.isFurniItem() and not me.oSelectedItem.isWallItem() then
  [ 37] pusharglistnoret 0 ...................... <>
  [ 39] extcall 92 .............................. return 
  [ 41] getparam 0 .............................. <me>
  [ 43] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 45] pusharglist 1 ........................... <me.oSelectedItem>
  [ 47] objcall 149 ............................. <me.oSelectedItem.getDrag()>
  [ 49] not ..................................... <not me.oSelectedItem.getDrag()>
  [ 50] jmpifz [ 57] ............................ if not me.oSelectedItem.getDrag() then
  [ 53] pusharglistnoret 0 ...................... <>
  [ 55] extcall 92 .............................. return 
  [ 57] getparam 0 .............................. <me>
  [ 59] getchainedprop 131 ...................... <me.oSelectedItem>
  [ 61] pusharglist 1 ........................... <me.oSelectedItem>
  [ 63] objcall 202 ............................. <me.oSelectedItem.getPosId()>
  [ 65] setlocal 0 .............................. iPosId = me.oSelectedItem.getPosId()
  [ 67] getglobal 211 ........................... <oStudio>
  [ 69] getlocal 0 .............................. <iPosId>
  [ 71] pusharglistnoret 2 ...................... <oStudio, iPosId>
  [ 73] objcall 291 ............................. oStudio.sendAddToTrade(iPosId)
  [ 76] getparam 0 .............................. <me>
  [ 78] pusharglistnoret 1 ...................... <me>
  [ 80] objcall 25 .............................. me.deleteSelectedItem()
  [ 82] ret
end

on getItemByPossessionId me, iPosId
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 124 ...................... <me.oFurniture>
  [  4] getparam 1 .............................. <iPosId>
  [  6] pusharglist 2 ........................... <me.oFurniture, iPosId>
  [  8] objcall 34 .............................. <me.oFurniture.getItemByPossessionId(iPosId)>
  [ 10] setlocal 0 .............................. oItem = me.oFurniture.getItemByPossessionId(iPosId)
  [ 12] getlocal 0 .............................. <oItem>
  [ 14] pusharglist 1 ........................... <oItem>
  [ 16] extcall 105 ............................. <voidp(oItem)>
  [ 18] not ..................................... <not voidp(oItem)>
  [ 19] jmpifz [ 28] ............................ if not voidp(oItem) then
  [ 22] getlocal 0 .............................. <oItem>
  [ 24] pusharglistnoret 1 ...................... <oItem>
  [ 26] extcall 92 .............................. return oItem
  [ 28] getparam 0 .............................. <me>
  [ 30] getchainedprop 121 ...................... <me.oWallItems>
  [ 32] getparam 1 .............................. <iPosId>
  [ 34] pusharglist 2 ........................... <me.oWallItems, iPosId>
  [ 36] objcall 34 .............................. <me.oWallItems.getItemByPossessionId(iPosId)>
  [ 38] setlocal 0 .............................. oItem = me.oWallItems.getItemByPossessionId(iPosId)
  [ 40] getlocal 0 .............................. <oItem>
  [ 42] pusharglist 1 ........................... <oItem>
  [ 44] extcall 105 ............................. <voidp(oItem)>
  [ 46] not ..................................... <not voidp(oItem)>
  [ 47] jmpifz [ 56] ............................ if not voidp(oItem) then
  [ 50] getlocal 0 .............................. <oItem>
  [ 52] pusharglistnoret 1 ...................... <oItem>
  [ 54] extcall 92 .............................. return oItem
  [ 56] getparam 0 .............................. <me>
  [ 58] getchainedprop 122 ...................... <me.oRugs>
  [ 60] getparam 1 .............................. <iPosId>
  [ 62] pusharglist 2 ........................... <me.oRugs, iPosId>
  [ 64] objcall 34 .............................. <me.oRugs.getItemByPossessionId(iPosId)>
  [ 66] setlocal 0 .............................. oItem = me.oRugs.getItemByPossessionId(iPosId)
  [ 68] getlocal 0 .............................. <oItem>
  [ 70] pusharglist 1 ........................... <oItem>
  [ 72] extcall 105 ............................. <voidp(oItem)>
  [ 74] not ..................................... <not voidp(oItem)>
  [ 75] jmpifz [ 84] ............................ if not voidp(oItem) then
  [ 78] getlocal 0 .............................. <oItem>
  [ 80] pusharglistnoret 1 ...................... <oItem>
  [ 82] extcall 92 .............................. return oItem
  [ 84] pusharglist 0 ........................... <>
  [ 86] extcall 130 ............................. <VOID>
  [ 88] pusharglistnoret 1 ...................... <VOID>
  [ 90] extcall 92 .............................. return VOID
  [ 92] ret
end

on calcMouseToSquare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 38 .............................. <me.calcMouseToGridPoint()>
  [  6] setlocal 0 .............................. oGridPoint = me.calcMouseToGridPoint()
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 114 ...................... <me.oGrid>
  [ 12] getlocal 0 .............................. <oGridPoint>
  [ 14] getobjprop 144 .......................... <oGridPoint.x>
  [ 16] getlocal 0 .............................. <oGridPoint>
  [ 18] getobjprop 145 .......................... <oGridPoint.z>
  [ 20] pusharglist 3 ........................... <me.oGrid, oGridPoint.x, oGridPoint.z>
  [ 22] objcall 146 ............................. <me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)>
  [ 24] setlocal 1 .............................. oSquare = me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)
  [ 26] getlocal 1 .............................. <oSquare>
  [ 28] pusharglistnoret 1 ...................... <oSquare>
  [ 30] extcall 92 .............................. return oSquare
  [ 32] ret
end

on calcPointToSquare me, thePoint
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <thePoint>
  [  4] pusharglist 2 ........................... <me, thePoint>
  [  6] objcall 37 .............................. <me.calcPointToGridPoint(thePoint)>
  [  8] setlocal 0 .............................. oGridPoint = me.calcPointToGridPoint(thePoint)
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 114 ...................... <me.oGrid>
  [ 14] getlocal 0 .............................. <oGridPoint>
  [ 16] getobjprop 144 .......................... <oGridPoint.x>
  [ 18] getlocal 0 .............................. <oGridPoint>
  [ 20] getobjprop 145 .......................... <oGridPoint.z>
  [ 22] pusharglist 3 ........................... <me.oGrid, oGridPoint.x, oGridPoint.z>
  [ 24] objcall 146 ............................. <me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)>
  [ 26] setlocal 1 .............................. oSquare = me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)
  [ 28] getlocal 1 .............................. <oSquare>
  [ 30] pusharglistnoret 1 ...................... <oSquare>
  [ 32] extcall 92 .............................. return oSquare
  [ 34] ret
end

on calcPointToGridPoint me, thePoint
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <thePoint>
  [  4] pusharglist 2 ........................... <me, thePoint>
  [  6] objcall 40 .............................. <me.calcViewToGridPoint(thePoint)>
  [  8] setlocal 0 .............................. oGridPoint = me.calcViewToGridPoint(thePoint)
  [ 10] getlocal 0 .............................. <oGridPoint>
  [ 12] pusharglistnoret 1 ...................... <oGridPoint>
  [ 14] extcall 92 .............................. return oGridPoint
  [ 16] ret
end

on calcMouseToGridPoint me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <>
  [  4] thebuiltin 296 .......................... <the mouseH>
  [  7] pusharglist 0 ........................... <>
  [  9] thebuiltin 297 .......................... <the mouseV>
  [ 12] pusharglist 2 ........................... <the mouseH, the mouseV>
  [ 14] extcall 295 ............................. <point(the mouseH, the mouseV)>
  [ 17] pusharglist 2 ........................... <me, point(the mouseH, the mouseV)>
  [ 19] objcall 40 .............................. <me.calcViewToGridPoint(point(the mouseH, the mouseV))>
  [ 21] setlocal 0 .............................. oGridPoint = me.calcViewToGridPoint(point(the mouseH, the mouseV))
  [ 23] getlocal 0 .............................. <oGridPoint>
  [ 25] pusharglistnoret 1 ...................... <oGridPoint>
  [ 27] extcall 92 .............................. return oGridPoint
  [ 29] ret
end

on calcAvatarToSquare me
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 219 ........................... <oAvatar>
  [  4] getobjprop 298 .......................... <oAvatar.oPoint>
  [  7] pusharglist 2 ........................... <me, oAvatar.oPoint>
  [  9] objcall 40 .............................. <me.calcViewToGridPoint(oAvatar.oPoint)>
  [ 11] setlocal 0 .............................. oGridPoint = me.calcViewToGridPoint(oAvatar.oPoint)
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 114 ...................... <me.oGrid>
  [ 17] getlocal 0 .............................. <oGridPoint>
  [ 19] getobjprop 144 .......................... <oGridPoint.x>
  [ 21] getlocal 0 .............................. <oGridPoint>
  [ 23] getobjprop 145 .......................... <oGridPoint.z>
  [ 25] pusharglist 3 ........................... <me.oGrid, oGridPoint.x, oGridPoint.z>
  [ 27] objcall 146 ............................. <me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)>
  [ 29] setlocal 1 .............................. oSquare = me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)
  [ 31] getlocal 1 .............................. <oSquare>
  [ 33] pusharglistnoret 1 ...................... <oSquare>
  [ 35] extcall 92 .............................. return oSquare
  [ 37] ret
end

on calcViewToGridPoint me, oViewPoint
  [  0] getparam 1 .............................. <oViewPoint>
  [  2] getobjprop 299 .......................... <oViewPoint.locH>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 74 ........................... <me.iXOff>
  [  9] sub ..................................... <oViewPoint.locH - me.iXOff>
  [ 10] setlocal 0 .............................. iViewX = oViewPoint.locH - me.iXOff
  [ 12] getparam 1 .............................. <oViewPoint>
  [ 14] getobjprop 300 .......................... <oViewPoint.locV>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 76 ........................... <me.iYOff>
  [ 21] sub ..................................... <oViewPoint.locV - me.iYOff>
  [ 22] setlocal 1 .............................. iViewY = oViewPoint.locV - me.iYOff
  [ 24] getlocal 0 .............................. <iViewX>
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 71 ........................... <me.fCosY>
  [ 30] div ..................................... <iViewX / me.fCosY>
  [ 31] getlocal 1 .............................. <iViewY>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 68 ........................... <me.fSinY>
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 69 ........................... <me.fSinX>
  [ 41] mul ..................................... <me.fSinY * me.fSinX>
  [ 42] div ..................................... <iViewY / (me.fSinY * me.fSinX)>
  [ 43] sub ..................................... <(iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))>
  [ 44] pushint8 1 .............................. <1>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 71 ........................... <me.fCosY>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 68 ........................... <me.fSinY>
  [ 54] div ..................................... <me.fCosY / me.fSinY>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 68 ........................... <me.fSinY>
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 71 ........................... <me.fCosY>
  [ 63] div ..................................... <me.fSinY / me.fCosY>
  [ 64] add ..................................... <(me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)>
  [ 65] div ..................................... <1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))>
  [ 66] mul ..................................... <((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)))>
  [ 67] pusharglist 1 ........................... <((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)))>
  [ 69] extcall 110 ............................. <float(((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))))>
  [ 71] setlocal 2 .............................. iZ = float(((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))))
  [ 73] pushint8 1 .............................. <1>
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 71 ........................... <me.fCosY>
  [ 79] div ..................................... <1 / me.fCosY>
  [ 80] getlocal 0 .............................. <iViewX>
  [ 82] getlocal 2 .............................. <iZ>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 68 ........................... <me.fSinY>
  [ 88] mul ..................................... <iZ * me.fSinY>
  [ 89] sub ..................................... <iViewX - (iZ * me.fSinY)>
  [ 90] mul ..................................... <1 / me.fCosY * (iViewX - (iZ * me.fSinY))>
  [ 91] pusharglist 1 ........................... <1 / me.fCosY * (iViewX - (iZ * me.fSinY))>
  [ 93] extcall 110 ............................. <float(1 / me.fCosY * (iViewX - (iZ * me.fSinY)))>
  [ 95] setlocal 3 .............................. iX = float(1 / me.fCosY * (iViewX - (iZ * me.fSinY)))
  [ 97] getlocal 3 .............................. <iX>
  [ 99] pushzero ................................ <0>
  [100] getlocal 2 .............................. <iZ>
  [102] pusharglist 3 ........................... <iX, 0, iZ>
  [104] extcall 301 ............................. <vector(iX, 0, iZ)>
  [107] pusharglistnoret 1 ...................... <vector(iX, 0, iZ)>
  [109] extcall 92 .............................. return vector(iX, 0, iZ)
  [111] ret
end

on calcGridToViewPoint me, oGridPoint
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <oGridPoint>
  [  4] pusharglist 2 ........................... <me, oGridPoint>
  [  6] objcall 43 .............................. <me.calcViewX(oGridPoint)>
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <oGridPoint>
  [ 12] pusharglist 2 ........................... <me, oGridPoint>
  [ 14] objcall 44 .............................. <me.calcViewY(oGridPoint)>
  [ 16] pusharglist 2 ........................... <me.calcViewX(oGridPoint), me.calcViewY(oGridPoint)>
  [ 18] extcall 295 ............................. <point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))>
  [ 21] pusharglistnoret 1 ...................... <point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))>
  [ 23] extcall 92 .............................. return point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))
  [ 25] ret
end

on calcGridToViewPoints me, oGridPoints
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 28 ............................. <"calcViewPoints()">
  [  4] pusharglistnoret 2 ...................... <me, "calcViewPoints()">
  [  6] objcall 50 .............................. me.debug("calcViewPoints()")
  [  8] pushcons 29 ............................. <"Quad">
  [ 10] pusharglist 1 ........................... <"Quad">
  [ 12] extcall 57 .............................. <script("Quad")>
  [ 14] pusharglist 1 ........................... <script("Quad")>
  [ 16] extcall 0 ............................... <new(script("Quad"))>
  [ 18] setlocal 0 .............................. oViewPoints = new(script("Quad"))
  [ 20] getlocal 0 .............................. <oViewPoints>
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <oGridPoints>
  [ 26] getobjprop 307 .......................... <oGridPoints.tl>
  [ 29] pusharglist 2 ........................... <me, oGridPoints.tl>
  [ 31] objcall 308 ............................. <me.calcViewPoint(oGridPoints.tl)>
  [ 34] setobjprop 307 .......................... oViewPoints.tl = me.calcViewPoint(oGridPoints.tl)
  [ 37] getlocal 0 .............................. <oViewPoints>
  [ 39] getparam 0 .............................. <me>
  [ 41] getparam 1 .............................. <oGridPoints>
  [ 43] getobjprop 309 .......................... <oGridPoints.tr>
  [ 46] pusharglist 2 ........................... <me, oGridPoints.tr>
  [ 48] objcall 308 ............................. <me.calcViewPoint(oGridPoints.tr)>
  [ 51] setobjprop 309 .......................... oViewPoints.tr = me.calcViewPoint(oGridPoints.tr)
  [ 54] getlocal 0 .............................. <oViewPoints>
  [ 56] getparam 0 .............................. <me>
  [ 58] getparam 1 .............................. <oGridPoints>
  [ 60] getobjprop 310 .......................... <oGridPoints.br>
  [ 63] pusharglist 2 ........................... <me, oGridPoints.br>
  [ 65] objcall 308 ............................. <me.calcViewPoint(oGridPoints.br)>
  [ 68] setobjprop 310 .......................... oViewPoints.br = me.calcViewPoint(oGridPoints.br)
  [ 71] getlocal 0 .............................. <oViewPoints>
  [ 73] getparam 0 .............................. <me>
  [ 75] getparam 1 .............................. <oGridPoints>
  [ 77] getobjprop 311 .......................... <oGridPoints.bl>
  [ 80] pusharglist 2 ........................... <me, oGridPoints.bl>
  [ 82] objcall 308 ............................. <me.calcViewPoint(oGridPoints.bl)>
  [ 85] setobjprop 311 .......................... oViewPoints.bl = me.calcViewPoint(oGridPoints.bl)
  [ 88] getlocal 0 .............................. <oViewPoints>
  [ 90] pusharglistnoret 1 ...................... <oViewPoints>
  [ 92] extcall 92 .............................. return oViewPoints
  [ 94] ret
end

on calcViewX me, o3dPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 74 ........................... <me.iXOff>
  [  4] getparam 1 .............................. <o3dPoint>
  [  6] getobjprop 145 .......................... <o3dPoint.z>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 68 ........................... <me.fSinY>
  [ 12] mul ..................................... <o3dPoint.z * me.fSinY>
  [ 13] getparam 1 .............................. <o3dPoint>
  [ 15] getobjprop 144 .......................... <o3dPoint.x>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 71 ........................... <me.fCosY>
  [ 21] mul ..................................... <o3dPoint.x * me.fCosY>
  [ 22] add ..................................... <(o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)>
  [ 23] add ..................................... <me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY))>
  [ 24] pusharglist 1 ........................... <me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY))>
  [ 26] extcall 107 ............................. <integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))>
  [ 28] pusharglistnoret 1 ...................... <integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))>
  [ 30] extcall 92 .............................. return integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))
  [ 32] ret
end

on calcViewY me, o3dPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 76 ........................... <me.iYOff>
  [  4] getparam 1 .............................. <o3dPoint>
  [  6] getobjprop 315 .......................... <o3dPoint.y>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 72 ........................... <me.fCosX>
  [ 13] mul ..................................... <o3dPoint.y * me.fCosX>
  [ 14] getparam 1 .............................. <o3dPoint>
  [ 16] getobjprop 145 .......................... <o3dPoint.z>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 71 ........................... <me.fCosY>
  [ 22] mul ..................................... <o3dPoint.z * me.fCosY>
  [ 23] getparam 1 .............................. <o3dPoint>
  [ 25] getobjprop 144 .......................... <o3dPoint.x>
  [ 27] getparam 0 .............................. <me>
  [ 29] getobjprop 68 ........................... <me.fSinY>
  [ 31] mul ..................................... <o3dPoint.x * me.fSinY>
  [ 32] sub ..................................... <(o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)>
  [ 33] pushint8 2 .............................. <2>
  [ 35] div ..................................... <((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2>
  [ 36] sub ..................................... <(o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)>
  [ 37] add ..................................... <me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2))>
  [ 38] pusharglist 1 ........................... <me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2))>
  [ 40] extcall 107 ............................. <integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))>
  [ 42] pusharglistnoret 1 ...................... <integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))>
  [ 44] extcall 92 .............................. return integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))
  [ 46] ret
end

on initScene me, oScene
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 116 ...................... <me.oBackground>
  [  4] getparam 1 .............................. <oScene>
  [  6] pushcons 7 .............................. <"Background">
  [  8] pusharglist 2 ........................... <oScene, "Background">
  [ 10] extcall 156 ............................. <getNode(oScene, "Background")>
  [ 12] pusharglistnoret 2 ...................... <me.oBackground, getNode(oScene, "Background")>
  [ 14] objcall 2 ............................... me.oBackground.init(getNode(oScene, "Background"))
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 117 ...................... <me.oFloor>
  [ 20] getparam 1 .............................. <oScene>
  [ 22] pushcons 8 .............................. <"Floor">
  [ 24] pusharglist 2 ........................... <oScene, "Floor">
  [ 26] extcall 156 ............................. <getNode(oScene, "Floor")>
  [ 28] pusharglistnoret 2 ...................... <me.oFloor, getNode(oScene, "Floor")>
  [ 30] objcall 2 ............................... me.oFloor.init(getNode(oScene, "Floor"))
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 119 ...................... <me.oDoor>
  [ 36] getparam 1 .............................. <oScene>
  [ 38] pushcons 10 ............................. <"Door">
  [ 40] pusharglist 2 ........................... <oScene, "Door">
  [ 42] extcall 156 ............................. <getNode(oScene, "Door")>
  [ 44] pusharglistnoret 2 ...................... <me.oDoor, getNode(oScene, "Door")>
  [ 46] objcall 2 ............................... me.oDoor.init(getNode(oScene, "Door"))
  [ 48] getparam 0 .............................. <me>
  [ 50] getchainedprop 118 ...................... <me.oWall>
  [ 52] getparam 1 .............................. <oScene>
  [ 54] pushcons 9 .............................. <"Wall">
  [ 56] pusharglist 2 ........................... <oScene, "Wall">
  [ 58] extcall 156 ............................. <getNode(oScene, "Wall")>
  [ 60] pusharglistnoret 2 ...................... <me.oWall, getNode(oScene, "Wall")>
  [ 62] objcall 2 ............................... me.oWall.init(getNode(oScene, "Wall"))
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 120 ...................... <me.oWindow>
  [ 68] getparam 1 .............................. <oScene>
  [ 70] pushcons 11 ............................. <"Window">
  [ 72] pusharglist 2 ........................... <oScene, "Window">
  [ 74] extcall 156 ............................. <getNode(oScene, "Window")>
  [ 76] pusharglistnoret 2 ...................... <me.oWindow, getNode(oScene, "Window")>
  [ 78] objcall 2 ............................... me.oWindow.init(getNode(oScene, "Window"))
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 121 ...................... <me.oWallItems>
  [ 84] getparam 1 .............................. <oScene>
  [ 86] pushcons 12 ............................. <"WallItems">
  [ 88] pusharglist 2 ........................... <oScene, "WallItems">
  [ 90] extcall 156 ............................. <getNode(oScene, "WallItems")>
  [ 92] pusharglistnoret 2 ...................... <me.oWallItems, getNode(oScene, "WallItems")>
  [ 94] objcall 2 ............................... me.oWallItems.init(getNode(oScene, "WallItems"))
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 122 ...................... <me.oRugs>
  [100] getparam 1 .............................. <oScene>
  [102] pushcons 13 ............................. <"Rugs">
  [104] pusharglist 2 ........................... <oScene, "Rugs">
  [106] extcall 156 ............................. <getNode(oScene, "Rugs")>
  [108] pusharglistnoret 2 ...................... <me.oRugs, getNode(oScene, "Rugs")>
  [110] objcall 2 ............................... me.oRugs.init(getNode(oScene, "Rugs"))
  [112] getparam 0 .............................. <me>
  [114] getchainedprop 123 ...................... <me.oHiliter>
  [116] getparam 1 .............................. <oScene>
  [118] pushcons 14 ............................. <"Hiliter">
  [120] pusharglist 2 ........................... <oScene, "Hiliter">
  [122] extcall 156 ............................. <getNode(oScene, "Hiliter")>
  [124] pusharglistnoret 2 ...................... <me.oHiliter, getNode(oScene, "Hiliter")>
  [126] objcall 2 ............................... me.oHiliter.init(getNode(oScene, "Hiliter"))
  [128] getparam 0 .............................. <me>
  [130] getchainedprop 124 ...................... <me.oFurniture>
  [132] getparam 1 .............................. <oScene>
  [134] pushcons 15 ............................. <"Furniture">
  [136] pusharglist 2 ........................... <oScene, "Furniture">
  [138] extcall 156 ............................. <getNode(oScene, "Furniture")>
  [140] pusharglistnoret 2 ...................... <me.oFurniture, getNode(oScene, "Furniture")>
  [142] objcall 2 ............................... me.oFurniture.init(getNode(oScene, "Furniture"))
  [144] getparam 0 .............................. <me>
  [146] getchainedprop 125 ...................... <me.oStaticItems>
  [148] getparam 1 .............................. <oScene>
  [150] pushcons 16 ............................. <"StaticItems">
  [152] pusharglist 2 ........................... <oScene, "StaticItems">
  [154] extcall 156 ............................. <getNode(oScene, "StaticItems")>
  [156] pusharglistnoret 2 ...................... <me.oStaticItems, getNode(oScene, "StaticItems")>
  [158] objcall 2 ............................... me.oStaticItems.init(getNode(oScene, "StaticItems"))
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 126 ...................... <me.oAvatars>
  [164] getparam 1 .............................. <oScene>
  [166] pushcons 17 ............................. <"Avatars">
  [168] pusharglist 2 ........................... <oScene, "Avatars">
  [170] extcall 156 ............................. <getNode(oScene, "Avatars")>
  [172] pusharglistnoret 2 ...................... <me.oAvatars, getNode(oScene, "Avatars")>
  [174] objcall 2 ............................... me.oAvatars.init(getNode(oScene, "Avatars"))
  [176] getparam 0 .............................. <me>
  [178] getchainedprop 129 ...................... <me.oVoteItems>
  [180] pusharglistnoret 1 ...................... <me.oVoteItems>
  [182] objcall 2 ............................... me.oVoteItems.init()
  [184] getglobal 316 ........................... <oStudioMap>
  [187] pusharglist 1 ........................... <oStudioMap>
  [189] objcall 317 ............................. <oStudioMap.isPrivate()>
  [192] jmpifz [211] ............................ if oStudioMap.isPrivate() then
  [195] getparam 0 .............................. <me>
  [197] getchainedprop 127 ...................... <me.oStudioInfo>
  [199] pusharglistnoret 1 ...................... <me.oStudioInfo>
  [201] objcall 2 ............................... me.oStudioInfo.init()
  [203] getparam 0 .............................. <me>
  [205] getchainedprop 128 ...................... <me.oInfoStand>
  [207] pusharglistnoret 1 ...................... <me.oInfoStand>
  [209] objcall 2 ............................... me.oInfoStand.init()
  [211] ret
end

on generateXml me
  [  0] pushcons 30 ............................. <"XML">
  [  2] pusharglist 1 ........................... <"XML">
  [  4] extcall 60 .............................. <newObject("XML")>
  [  6] setlocal 0 .............................. oNewXml = newObject("XML")
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 102 ...................... <me.oSceneXml>
  [ 12] getobjprop 106 .......................... <me.oSceneXml.firstChild>
  [ 14] setlocal 1 .............................. oRoot = me.oSceneXml.firstChild
  [ 16] getlocal 0 .............................. <oNewXml>
  [ 18] pushcons 31 ............................. <"Studio">
  [ 20] pusharglist 2 ........................... <oNewXml, "Studio">
  [ 22] objcall 318 ............................. <oNewXml.createElement("Studio")>
  [ 25] setlocal 2 .............................. oNewRoot = oNewXml.createElement("Studio")
  [ 27] getlocal 2 .............................. <oNewRoot>
  [ 29] getlocal 1 .............................. <oRoot>
  [ 31] getobjprop 108 .......................... <oRoot.attributes>
  [ 33] setobjprop 108 .......................... oNewRoot.attributes = oRoot.attributes
  [ 35] getlocal 1 .............................. <oRoot>
  [ 37] getobjprop 319 .......................... <oRoot.childNodes>
  [ 40] setlocal 3 .............................. aNodes = oRoot.childNodes
  [ 42] pushzero ................................ <0>
  [ 43] setlocal 4
  [ 45] getlocal 4
  [ 47] getlocal 3 .............................. <aNodes>
  [ 49] getobjprop 320 .......................... <aNodes.length>
  [ 52] pushint8 1 .............................. <1>
  [ 54] sub ..................................... <aNodes.length - 1>
  [ 55] lteq
  [ 56] jmpifz [131] ............................ repeat with i = 0 to aNodes.length - 1
  [ 59] getlocal 3 .............................. <aNodes>
  [ 61] getlocal 4 .............................. <i>
  [ 63] pusharglist 2 ........................... <aNodes, i>
  [ 65] objcall 196 ............................. <aNodes[i]>
  [ 67] setlocal 5 .............................. oNode = aNodes[i]
  [ 69] getlocal 5 .............................. <oNode>
  [ 71] getobjprop 321 .......................... <oNode.nodeName>
  [ 74] peek 0 .................................. case oNode.nodeName of
  [ 76] pushcons 15 ............................. <"Furniture">
  [ 78] eq
  [ 79] jmpifz [104] ............................ (case) "Furniture":
  [ 82] getparam 0 .............................. <me>
  [ 84] getchainedprop 124 ...................... <me.oFurniture>
  [ 86] pusharglist 1 ........................... <me.oFurniture>
  [ 88] objcall 46 .............................. <me.oFurniture.generateXml()>
  [ 90] setlocal 6 .............................. oNewNode = me.oFurniture.generateXml()
  [ 92] getlocal 2 .............................. <oNewRoot>
  [ 94] getlocal 6 .............................. <oNewNode>
  [ 96] pusharglistnoret 2 ...................... <oNewRoot, oNewNode>
  [ 98] objcall 322 ............................. oNewRoot.appendChild(oNewNode)
  [101] jmp [120] ............................... (case) otherwise:
  [104] getlocal 2 .............................. <oNewRoot>
  [106] getlocal 5 .............................. <oNode>
  [108] pushint8 1 .............................. <1>
  [110] pusharglist 2 ........................... <oNode, 1>
  [112] objcall 323 ............................. <oNode.cloneNode(1)>
  [115] pusharglistnoret 2 ...................... <oNewRoot, oNode.cloneNode(1)>
  [117] objcall 322 ............................. oNewRoot.appendChild(oNode.cloneNode(1))
  [120] pop 1 ................................... end case
  [122] pushint8 1
  [124] getlocal 4
  [126] add
  [127] setlocal 4
  [129] endrepeat [ 45]
  [131] getlocal 0 .............................. <oNewXml>
  [133] getlocal 2 .............................. <oNewRoot>
  [135] pusharglistnoret 2 ...................... <oNewXml, oNewRoot>
  [137] objcall 322 ............................. oNewXml.appendChild(oNewRoot)
  [140] getlocal 0 .............................. <oNewXml>
  [142] pusharglistnoret 1 ...................... <oNewXml>
  [144] extcall 92 .............................. return oNewXml
  [146] ret
end

on destroyScene me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 48 .............................. me.destroyObjects()
  [  6] getmovieprop 132 ........................ <the actorList>
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 2 ...................... <the actorList, me>
  [ 12] objcall 330 ............................. (the actorList).deleteOne(me)
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 130 ............................. <VOID>
  [ 19] setglobal 88 ............................ oIsoScene = VOID
  [ 21] ret
end

on destroyObjects me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 116 .......................... <me.oBackground>
  [  4] pusharglist 1 ........................... <me.oBackground>
  [  6] extcall 105 ............................. <voidp(me.oBackground)>
  [  8] not ..................................... <not voidp(me.oBackground)>
  [  9] jmpifz [ 21] ............................ if not voidp(me.oBackground) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 116 ...................... <me.oBackground>
  [ 16] pusharglistnoret 1 ...................... <me.oBackground>
  [ 18] objcall 331 ............................. me.oBackground.destroy()
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 117 .......................... <me.oFloor>
  [ 25] pusharglist 1 ........................... <me.oFloor>
  [ 27] extcall 105 ............................. <voidp(me.oFloor)>
  [ 29] not ..................................... <not voidp(me.oFloor)>
  [ 30] jmpifz [ 42] ............................ if not voidp(me.oFloor) then
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 117 ...................... <me.oFloor>
  [ 37] pusharglistnoret 1 ...................... <me.oFloor>
  [ 39] objcall 331 ............................. me.oFloor.destroy()
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 118 .......................... <me.oWall>
  [ 46] pusharglist 1 ........................... <me.oWall>
  [ 48] extcall 105 ............................. <voidp(me.oWall)>
  [ 50] not ..................................... <not voidp(me.oWall)>
  [ 51] jmpifz [ 63] ............................ if not voidp(me.oWall) then
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 118 ...................... <me.oWall>
  [ 58] pusharglistnoret 1 ...................... <me.oWall>
  [ 60] objcall 331 ............................. me.oWall.destroy()
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 119 .......................... <me.oDoor>
  [ 67] pusharglist 1 ........................... <me.oDoor>
  [ 69] extcall 105 ............................. <voidp(me.oDoor)>
  [ 71] not ..................................... <not voidp(me.oDoor)>
  [ 72] jmpifz [ 84] ............................ if not voidp(me.oDoor) then
  [ 75] getparam 0 .............................. <me>
  [ 77] getchainedprop 119 ...................... <me.oDoor>
  [ 79] pusharglistnoret 1 ...................... <me.oDoor>
  [ 81] objcall 331 ............................. me.oDoor.destroy()
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 123 .......................... <me.oHiliter>
  [ 88] pusharglist 1 ........................... <me.oHiliter>
  [ 90] extcall 105 ............................. <voidp(me.oHiliter)>
  [ 92] not ..................................... <not voidp(me.oHiliter)>
  [ 93] jmpifz [105] ............................ if not voidp(me.oHiliter) then
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 123 ...................... <me.oHiliter>
  [100] pusharglistnoret 1 ...................... <me.oHiliter>
  [102] objcall 331 ............................. me.oHiliter.destroy()
  [105] getparam 0 .............................. <me>
  [107] getobjprop 120 .......................... <me.oWindow>
  [109] pusharglist 1 ........................... <me.oWindow>
  [111] extcall 105 ............................. <voidp(me.oWindow)>
  [113] not ..................................... <not voidp(me.oWindow)>
  [114] jmpifz [126] ............................ if not voidp(me.oWindow) then
  [117] getparam 0 .............................. <me>
  [119] getchainedprop 120 ...................... <me.oWindow>
  [121] pusharglistnoret 1 ...................... <me.oWindow>
  [123] objcall 331 ............................. me.oWindow.destroy()
  [126] getparam 0 .............................. <me>
  [128] getobjprop 122 .......................... <me.oRugs>
  [130] pusharglist 1 ........................... <me.oRugs>
  [132] extcall 105 ............................. <voidp(me.oRugs)>
  [134] not ..................................... <not voidp(me.oRugs)>
  [135] jmpifz [147] ............................ if not voidp(me.oRugs) then
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 122 ...................... <me.oRugs>
  [142] pusharglistnoret 1 ...................... <me.oRugs>
  [144] objcall 331 ............................. me.oRugs.destroy()
  [147] getparam 0 .............................. <me>
  [149] getobjprop 124 .......................... <me.oFurniture>
  [151] pusharglist 1 ........................... <me.oFurniture>
  [153] extcall 105 ............................. <voidp(me.oFurniture)>
  [155] not ..................................... <not voidp(me.oFurniture)>
  [156] jmpifz [168] ............................ if not voidp(me.oFurniture) then
  [159] getparam 0 .............................. <me>
  [161] getchainedprop 124 ...................... <me.oFurniture>
  [163] pusharglistnoret 1 ...................... <me.oFurniture>
  [165] objcall 331 ............................. me.oFurniture.destroy()
  [168] getparam 0 .............................. <me>
  [170] getobjprop 121 .......................... <me.oWallItems>
  [172] pusharglist 1 ........................... <me.oWallItems>
  [174] extcall 105 ............................. <voidp(me.oWallItems)>
  [176] not ..................................... <not voidp(me.oWallItems)>
  [177] jmpifz [189] ............................ if not voidp(me.oWallItems) then
  [180] getparam 0 .............................. <me>
  [182] getchainedprop 121 ...................... <me.oWallItems>
  [184] pusharglistnoret 1 ...................... <me.oWallItems>
  [186] objcall 331 ............................. me.oWallItems.destroy()
  [189] getparam 0 .............................. <me>
  [191] getobjprop 125 .......................... <me.oStaticItems>
  [193] pusharglist 1 ........................... <me.oStaticItems>
  [195] extcall 105 ............................. <voidp(me.oStaticItems)>
  [197] not ..................................... <not voidp(me.oStaticItems)>
  [198] jmpifz [210] ............................ if not voidp(me.oStaticItems) then
  [201] getparam 0 .............................. <me>
  [203] getchainedprop 125 ...................... <me.oStaticItems>
  [205] pusharglistnoret 1 ...................... <me.oStaticItems>
  [207] objcall 331 ............................. me.oStaticItems.destroy()
  [210] getparam 0 .............................. <me>
  [212] getobjprop 126 .......................... <me.oAvatars>
  [214] pusharglist 1 ........................... <me.oAvatars>
  [216] extcall 105 ............................. <voidp(me.oAvatars)>
  [218] not ..................................... <not voidp(me.oAvatars)>
  [219] jmpifz [231] ............................ if not voidp(me.oAvatars) then
  [222] getparam 0 .............................. <me>
  [224] getchainedprop 126 ...................... <me.oAvatars>
  [226] pusharglistnoret 1 ...................... <me.oAvatars>
  [228] objcall 331 ............................. me.oAvatars.destroy()
  [231] getparam 0 .............................. <me>
  [233] getobjprop 114 .......................... <me.oGrid>
  [235] pusharglist 1 ........................... <me.oGrid>
  [237] extcall 105 ............................. <voidp(me.oGrid)>
  [239] not ..................................... <not voidp(me.oGrid)>
  [240] jmpifz [252] ............................ if not voidp(me.oGrid) then
  [243] getparam 0 .............................. <me>
  [245] getchainedprop 114 ...................... <me.oGrid>
  [247] pusharglistnoret 1 ...................... <me.oGrid>
  [249] objcall 331 ............................. me.oGrid.destroy()
  [252] getparam 0 .............................. <me>
  [254] getobjprop 113 .......................... <me.oSpriteManager>
  [256] pusharglist 1 ........................... <me.oSpriteManager>
  [258] extcall 105 ............................. <voidp(me.oSpriteManager)>
  [260] not ..................................... <not voidp(me.oSpriteManager)>
  [261] jmpifz [273] ............................ if not voidp(me.oSpriteManager) then
  [264] getparam 0 .............................. <me>
  [266] getchainedprop 113 ...................... <me.oSpriteManager>
  [268] pusharglistnoret 1 ...................... <me.oSpriteManager>
  [270] objcall 331 ............................. me.oSpriteManager.destroy()
  [273] getparam 0 .............................. <me>
  [275] getobjprop 127 .......................... <me.oStudioInfo>
  [277] pusharglist 1 ........................... <me.oStudioInfo>
  [279] extcall 105 ............................. <voidp(me.oStudioInfo)>
  [281] not ..................................... <not voidp(me.oStudioInfo)>
  [282] jmpifz [294] ............................ if not voidp(me.oStudioInfo) then
  [285] getparam 0 .............................. <me>
  [287] getchainedprop 127 ...................... <me.oStudioInfo>
  [289] pusharglistnoret 1 ...................... <me.oStudioInfo>
  [291] objcall 331 ............................. me.oStudioInfo.destroy()
  [294] getparam 0 .............................. <me>
  [296] getobjprop 128 .......................... <me.oInfoStand>
  [298] pusharglist 1 ........................... <me.oInfoStand>
  [300] extcall 105 ............................. <voidp(me.oInfoStand)>
  [302] not ..................................... <not voidp(me.oInfoStand)>
  [303] jmpifz [315] ............................ if not voidp(me.oInfoStand) then
  [306] getparam 0 .............................. <me>
  [308] getchainedprop 128 ...................... <me.oInfoStand>
  [310] pusharglistnoret 1 ...................... <me.oInfoStand>
  [312] objcall 331 ............................. me.oInfoStand.destroy()
  [315] getparam 0 .............................. <me>
  [317] getobjprop 129 .......................... <me.oVoteItems>
  [319] pusharglist 1 ........................... <me.oVoteItems>
  [321] extcall 105 ............................. <voidp(me.oVoteItems)>
  [323] not ..................................... <not voidp(me.oVoteItems)>
  [324] jmpifz [336] ............................ if not voidp(me.oVoteItems) then
  [327] getparam 0 .............................. <me>
  [329] getchainedprop 129 ...................... <me.oVoteItems>
  [331] pusharglistnoret 1 ...................... <me.oVoteItems>
  [333] objcall 331 ............................. me.oVoteItems.destroy()
  [336] getparam 0 .............................. <me>
  [338] getobjprop 194 .......................... <me.oAvatarIndicator>
  [340] pusharglist 1 ........................... <me.oAvatarIndicator>
  [342] extcall 105 ............................. <voidp(me.oAvatarIndicator)>
  [344] not ..................................... <not voidp(me.oAvatarIndicator)>
  [345] jmpifz [356] ............................ if not voidp(me.oAvatarIndicator) then
  [348] getparam 0 .............................. <me>
  [350] getchainedprop 194 ...................... <me.oAvatarIndicator>
  [352] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [354] objcall 195 ............................. me.oAvatarIndicator.destroyItem()
  [356] getparam 0 .............................. <me>
  [358] pusharglist 0 ........................... <>
  [360] extcall 130 ............................. <VOID>
  [362] setobjprop 131 .......................... me.oSelectedItem = VOID
  [364] ret
end

on createAvatarIndicator me, oAvatar
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 194 .......................... <me.oAvatarIndicator>
  [  4] pusharglist 1 ........................... <me.oAvatarIndicator>
  [  6] extcall 105 ............................. <voidp(me.oAvatarIndicator)>
  [  8] not ..................................... <not voidp(me.oAvatarIndicator)>
  [  9] jmpifz [ 28] ............................ if not voidp(me.oAvatarIndicator) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 194 ...................... <me.oAvatarIndicator>
  [ 16] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [ 18] objcall 195 ............................. me.oAvatarIndicator.destroyItem()
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 130 ............................. <VOID>
  [ 26] setobjprop 194 .......................... me.oAvatarIndicator = VOID
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 32 ............................. <"AvatarIndicator">
  [ 32] pusharglist 1 ........................... <"AvatarIndicator">
  [ 34] extcall 57 .............................. <script("AvatarIndicator")>
  [ 36] getglobal 219 ........................... <oAvatar>
  [ 38] pusharglist 2 ........................... <script("AvatarIndicator"), oAvatar>
  [ 40] objcall 0 ............................... <script("AvatarIndicator").new(oAvatar)>
  [ 42] setobjprop 194 .......................... me.oAvatarIndicator = script("AvatarIndicator").new(oAvatar)
  [ 44] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 56 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 10] pushcons 33 ............................. <"IsoScene: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"IsoScene: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"IsoScene: " & sMessage>
  [ 17] extcall 332 ............................. put "IsoScene: " & sMessage
  [ 20] ret
end

on getItemsUnderMouse me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aItemsUnderMouse = []
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 124 ...................... <me.oFurniture>
  [  9] getlocal 0 .............................. <aItemsUnderMouse>
  [ 11] pusharglist 2 ........................... <me.oFurniture, aItemsUnderMouse>
  [ 13] objcall 51 .............................. <me.oFurniture.getItemsUnderMouse(aItemsUnderMouse)>
  [ 15] setlocal 0 .............................. aItemsUnderMouse = me.oFurniture.getItemsUnderMouse(aItemsUnderMouse)
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 126 ...................... <me.oAvatars>
  [ 21] getlocal 0 .............................. <aItemsUnderMouse>
  [ 23] pusharglist 2 ........................... <me.oAvatars, aItemsUnderMouse>
  [ 25] objcall 51 .............................. <me.oAvatars.getItemsUnderMouse(aItemsUnderMouse)>
  [ 27] setlocal 0 .............................. aItemsUnderMouse = me.oAvatars.getItemsUnderMouse(aItemsUnderMouse)
  [ 29] getlocal 0 .............................. <aItemsUnderMouse>
  [ 31] pusharglistnoret 1 ...................... <aItemsUnderMouse>
  [ 33] extcall 92 .............................. return aItemsUnderMouse
  [ 35] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 124 ...................... <me.oFurniture>
  [  9] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 11] pusharglist 2 ........................... <me.oFurniture, aSpritesUnderMouse>
  [ 13] objcall 52 .............................. <me.oFurniture.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 15] setlocal 0 .............................. aSpritesUnderMouse = me.oFurniture.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 126 ...................... <me.oAvatars>
  [ 21] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 23] pusharglist 2 ........................... <me.oAvatars, aSpritesUnderMouse>
  [ 25] objcall 52 .............................. <me.oAvatars.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 27] setlocal 0 .............................. aSpritesUnderMouse = me.oAvatars.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 121 ...................... <me.oWallItems>
  [ 33] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 35] pusharglist 2 ........................... <me.oWallItems, aSpritesUnderMouse>
  [ 37] objcall 52 .............................. <me.oWallItems.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 39] setlocal 0 .............................. aSpritesUnderMouse = me.oWallItems.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 41] getparam 0 .............................. <me>
  [ 43] getchainedprop 122 ...................... <me.oRugs>
  [ 45] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 47] pusharglist 2 ........................... <me.oRugs, aSpritesUnderMouse>
  [ 49] objcall 52 .............................. <me.oRugs.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 51] setlocal 0 .............................. aSpritesUnderMouse = me.oRugs.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 53] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 55] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 57] objcall 336 ............................. aSpritesUnderMouse.sort()
  [ 60] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 62] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 64] extcall 92 .............................. return aSpritesUnderMouse
  [ 66] ret
end

on getObjectsUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aObjectsUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 124 ...................... <me.oFurniture>
  [  9] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 11] pusharglistnoret 2 ...................... <me.oFurniture, aObjectsUnderMouse>
  [ 13] objcall 53 .............................. me.oFurniture.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 126 ...................... <me.oAvatars>
  [ 19] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 21] pusharglistnoret 2 ...................... <me.oAvatars, aObjectsUnderMouse>
  [ 23] objcall 53 .............................. me.oAvatars.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 25] getparam 0 .............................. <me>
  [ 27] getchainedprop 121 ...................... <me.oWallItems>
  [ 29] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 31] pusharglistnoret 2 ...................... <me.oWallItems, aObjectsUnderMouse>
  [ 33] objcall 53 .............................. me.oWallItems.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 122 ...................... <me.oRugs>
  [ 39] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 41] pusharglistnoret 2 ...................... <me.oRugs, aObjectsUnderMouse>
  [ 43] objcall 53 .............................. me.oRugs.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 45] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 47] pusharglistnoret 1 ...................... <aObjectsUnderMouse>
  [ 49] objcall 336 ............................. aObjectsUnderMouse.sort()
  [ 52] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 54] pusharglistnoret 1 ...................... <aObjectsUnderMouse>
  [ 56] extcall 92 .............................. return aObjectsUnderMouse
  [ 58] ret
end

on getTotalItems me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iTotalItems = 0
  [  3] getlocal 0 .............................. <iTotalItems>
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 121 ...................... <me.oWallItems>
  [  9] pusharglist 1 ........................... <me.oWallItems>
  [ 11] objcall 54 .............................. <me.oWallItems.getTotalItems()>
  [ 13] add ..................................... <iTotalItems + me.oWallItems.getTotalItems()>
  [ 14] setlocal 0 .............................. iTotalItems = iTotalItems + me.oWallItems.getTotalItems()
  [ 16] getlocal 0 .............................. <iTotalItems>
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 124 ...................... <me.oFurniture>
  [ 22] pusharglist 1 ........................... <me.oFurniture>
  [ 24] objcall 54 .............................. <me.oFurniture.getTotalItems()>
  [ 26] add ..................................... <iTotalItems + me.oFurniture.getTotalItems()>
  [ 27] setlocal 0 .............................. iTotalItems = iTotalItems + me.oFurniture.getTotalItems()
  [ 29] getlocal 0 .............................. <iTotalItems>
  [ 31] pusharglistnoret 1 ...................... <iTotalItems>
  [ 33] extcall 92 .............................. return iTotalItems
  [ 35] ret
end

on checkMaxItemsExceeded me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 54 .............................. <me.getTotalItems()>
  [  6] setlocal 0 .............................. iTotalItems = me.getTotalItems()
  [  8] getlocal 0 .............................. <iTotalItems>
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 58 ....................... <me.oIsoConstants>
  [ 14] getobjprop 339 .......................... <me.oIsoConstants.DEFAULT_MAX_ITEMS>
  [ 17] gteq .................................... <iTotalItems >= me.oIsoConstants.DEFAULT_MAX_ITEMS>
  [ 18] jmpifz [ 34] ............................ if iTotalItems >= me.oIsoConstants.DEFAULT_MAX_ITEMS then
  [ 21] getglobal 150 ........................... <ElementMgr>
  [ 23] pushcons 34 ............................. <"ALERT_MAX_ITEMS_EXCEEDED">
  [ 25] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_MAX_ITEMS_EXCEEDED">
  [ 27] objcall 174 ............................. ElementMgr.alert("ALERT_MAX_ITEMS_EXCEEDED")
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 92 .............................. return 0
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 92 .............................. return 1
  [ 40] ret
end
