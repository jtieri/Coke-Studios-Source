property sPartCast, sAvatarCast, iWidth, iHeight, iColorDepth, iAlphaDepth, iDefaultInk, sDefaultString, aAttributes, aConfigSettings, aRuntimeConfig, aDirectionMap, aDrawOrder, aDefDrawOrder, iDirection, aCurrDrawSettings, oPoint, iScale, iShadowSprite, iImageSprite, iAnimStep, iAnimStepMax, sBodyAction, sFaceAction, sItemAction, iFPS, iFPSTimer, iFPSTimerLength, bBlink, iBlinkTimer, iBlinkTimerLength, bChatting, iChatTimer, iChatTimerLength, bEmote, iEmoteTimer, iEmoteTimerLength, bDance, aDanceOverride, bCarry, bDrink, iDrinkTimer, iDrinkTimerLength, iDrinkWaitTimerLength, iDrinkActionTimerLength, bSleep, iSleepTimer, iSleepTimerLength, oImageMember, oBuffer, aSourceImages, bUseSprites, oBufferBGColor, oSpriteBgColor, iSpriteInk, oPreviewImage, iHeightOffset, iDither, bDoFloodFill, iDrawTime, iDrawCount, iDisplayTime, iDisplayCount, iFrameTime, iFrameCount, bDisplayStatus, bMove, bMoving, iStepsToNextSquare, iStepsTravelled, pCurrentSquareLoc, pNextSquareLoc, oCurrentSquare, oNextSquare, aStepSizes, bOnSled, oSled, aSleds, aDirectionPointVectors, iCollisionWidth, iCollisionHeight, oStartSquare, iToolCarried, iToolSprite, bPaused, bFlash, iFlashSpeed, iFlashTimer, iFlashTimerLength, oFlashImage, oFlashImageGood, oFlashImageBad
global oStudioMap, oSpriteManager, iSledTrackValue, iBotSquareValue, bDebugCollision, oTextConstants, oIsoScene, oMapObject, oComputer, oAvatar

on new me, _sAttributes, _iScale, _bPreviewOnly
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 10 ............................. <10>
  [  4] setobjprop 263 .......................... me.iCollisionWidth = 10
  [  7] getparam 0 .............................. <me>
  [  9] pushint8 50 ............................. <50>
  [ 11] setobjprop 264 .......................... me.iCollisionHeight = 50
  [ 14] getparam 0 .............................. <me>
  [ 16] pushzero ................................ <0>
  [ 17] setobjprop 265 .......................... me.bOnSled = 0
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 59 .............................. <VOID>
  [ 26] setobjprop 266 .......................... me.oSled = VOID
  [ 29] getparam 0 .............................. <me>
  [ 31] pusharglist 0 ........................... <[]>
  [ 33] pushlist ................................ <[]>
  [ 34] setobjprop 267 .......................... me.aSleds = []
  [ 37] getparam 0 .............................. <me>
  [ 39] pushfloat32 4.0 ......................... <4.0>
  [ 44] setobjprop 268 .......................... me.iStepsToNextSquare = 4.0
  [ 47] getparam 0 .............................. <me>
  [ 49] pushzero ................................ <0>
  [ 50] setobjprop 269 .......................... me.iStepsTravelled = 0
  [ 53] getparam 0 .............................. <me>
  [ 55] pushzero ................................ <0>
  [ 56] pushzero ................................ <0>
  [ 57] pusharglist 2 ........................... <0, 0>
  [ 59] extcall 132 ............................. <point(0, 0)>
  [ 61] pushzero ................................ <0>
  [ 62] pushzero ................................ <0>
  [ 63] pusharglist 2 ........................... <0, 0>
  [ 65] extcall 132 ............................. <point(0, 0)>
  [ 67] pushzero ................................ <0>
  [ 68] pushzero ................................ <0>
  [ 69] pusharglist 2 ........................... <0, 0>
  [ 71] extcall 132 ............................. <point(0, 0)>
  [ 73] pushzero ................................ <0>
  [ 74] pushzero ................................ <0>
  [ 75] pusharglist 2 ........................... <0, 0>
  [ 77] extcall 132 ............................. <point(0, 0)>
  [ 79] pushzero ................................ <0>
  [ 80] pushzero ................................ <0>
  [ 81] pusharglist 2 ........................... <0, 0>
  [ 83] extcall 132 ............................. <point(0, 0)>
  [ 85] pushzero ................................ <0>
  [ 86] pushzero ................................ <0>
  [ 87] pusharglist 2 ........................... <0, 0>
  [ 89] extcall 132 ............................. <point(0, 0)>
  [ 91] pushzero ................................ <0>
  [ 92] pushzero ................................ <0>
  [ 93] pusharglist 2 ........................... <0, 0>
  [ 95] extcall 132 ............................. <point(0, 0)>
  [ 97] pushzero ................................ <0>
  [ 98] pushzero ................................ <0>
  [ 99] pusharglist 2 ........................... <0, 0>
  [101] extcall 132 ............................. <point(0, 0)>
  [103] pusharglist 8 ........................... <[point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0)]>
  [105] pushlist ................................ <[point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0)]>
  [106] setobjprop 270 .......................... me.aStepSizes = [point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0), point(0, 0)]
  [109] pushint8 1 .............................. <1>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 268 .......................... <me.iStepsToNextSquare>
  [116] div ..................................... <1 / me.iStepsToNextSquare>
  [117] setlocal 0 .............................. distFrac = 1 / me.iStepsToNextSquare
  [119] getparam 0 .............................. <me>
  [121] pushsymb 270 ............................ <#aStepSizes>
  [124] pushint8 1 .............................. <1>
  [126] getlocal 0 .............................. <distFrac>
  [128] getglobal 271 ........................... <oIsoScene>
  [131] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [134] pushsymb 273 ............................ <#aSquares>
  [137] pushint8 1 .............................. <1>
  [139] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 1>
  [141] objcall 274 ............................. <oIsoScene.oGrid.aSquares[1]>
  [144] pushint8 2 .............................. <2>
  [146] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[1], 2>
  [148] objcall 86 .............................. <oIsoScene.oGrid.aSquares[1][2]>
  [150] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[1][2].oViewCenter>
  [153] getglobal 271 ........................... <oIsoScene>
  [156] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [159] pushsymb 273 ............................ <#aSquares>
  [162] pushint8 2 .............................. <2>
  [164] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 2>
  [166] objcall 274 ............................. <oIsoScene.oGrid.aSquares[2]>
  [169] pushint8 2 .............................. <2>
  [171] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[2], 2>
  [173] objcall 86 .............................. <oIsoScene.oGrid.aSquares[2][2]>
  [175] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[2][2].oViewCenter>
  [178] sub ..................................... <oIsoScene.oGrid.aSquares[1][2].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter>
  [179] mul ..................................... <distFrac * (oIsoScene.oGrid.aSquares[1][2].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter)>
  [180] pusharglistnoret 4 ...................... <me, #aStepSizes, 1, distFrac * (oIsoScene.oGrid.aSquares[1][2].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter)>
  [182] objcall 276 ............................. me.aStepSizes[1] = distFrac * (oIsoScene.oGrid.aSquares[1][2].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter)
  [185] getparam 0 .............................. <me>
  [187] pushsymb 270 ............................ <#aStepSizes>
  [190] pushint8 5 .............................. <5>
  [192] getlocal 0 .............................. <distFrac>
  [194] getglobal 271 ........................... <oIsoScene>
  [197] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [200] pushsymb 273 ............................ <#aSquares>
  [203] pushint8 2 .............................. <2>
  [205] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 2>
  [207] objcall 274 ............................. <oIsoScene.oGrid.aSquares[2]>
  [210] pushint8 2 .............................. <2>
  [212] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[2], 2>
  [214] objcall 86 .............................. <oIsoScene.oGrid.aSquares[2][2]>
  [216] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[2][2].oViewCenter>
  [219] getglobal 271 ........................... <oIsoScene>
  [222] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [225] pushsymb 273 ............................ <#aSquares>
  [228] pushint8 1 .............................. <1>
  [230] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 1>
  [232] objcall 274 ............................. <oIsoScene.oGrid.aSquares[1]>
  [235] pushint8 2 .............................. <2>
  [237] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[1], 2>
  [239] objcall 86 .............................. <oIsoScene.oGrid.aSquares[1][2]>
  [241] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[1][2].oViewCenter>
  [244] sub ..................................... <oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[1][2].oViewCenter>
  [245] mul ..................................... <distFrac * (oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[1][2].oViewCenter)>
  [246] pusharglistnoret 4 ...................... <me, #aStepSizes, 5, distFrac * (oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[1][2].oViewCenter)>
  [248] objcall 276 ............................. me.aStepSizes[5] = distFrac * (oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[1][2].oViewCenter)
  [251] getparam 0 .............................. <me>
  [253] pushsymb 270 ............................ <#aStepSizes>
  [256] pushint8 7 .............................. <7>
  [258] getlocal 0 .............................. <distFrac>
  [260] getglobal 271 ........................... <oIsoScene>
  [263] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [266] pushsymb 273 ............................ <#aSquares>
  [269] pushint8 2 .............................. <2>
  [271] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 2>
  [273] objcall 274 ............................. <oIsoScene.oGrid.aSquares[2]>
  [276] pushint8 1 .............................. <1>
  [278] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[2], 1>
  [280] objcall 86 .............................. <oIsoScene.oGrid.aSquares[2][1]>
  [282] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[2][1].oViewCenter>
  [285] getglobal 271 ........................... <oIsoScene>
  [288] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [291] pushsymb 273 ............................ <#aSquares>
  [294] pushint8 2 .............................. <2>
  [296] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 2>
  [298] objcall 274 ............................. <oIsoScene.oGrid.aSquares[2]>
  [301] pushint8 2 .............................. <2>
  [303] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[2], 2>
  [305] objcall 86 .............................. <oIsoScene.oGrid.aSquares[2][2]>
  [307] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[2][2].oViewCenter>
  [310] sub ..................................... <oIsoScene.oGrid.aSquares[2][1].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter>
  [311] mul ..................................... <distFrac * (oIsoScene.oGrid.aSquares[2][1].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter)>
  [312] pusharglistnoret 4 ...................... <me, #aStepSizes, 7, distFrac * (oIsoScene.oGrid.aSquares[2][1].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter)>
  [314] objcall 276 ............................. me.aStepSizes[7] = distFrac * (oIsoScene.oGrid.aSquares[2][1].oViewCenter - oIsoScene.oGrid.aSquares[2][2].oViewCenter)
  [317] getparam 0 .............................. <me>
  [319] pushsymb 270 ............................ <#aStepSizes>
  [322] pushint8 3 .............................. <3>
  [324] getlocal 0 .............................. <distFrac>
  [326] getglobal 271 ........................... <oIsoScene>
  [329] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [332] pushsymb 273 ............................ <#aSquares>
  [335] pushint8 2 .............................. <2>
  [337] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 2>
  [339] objcall 274 ............................. <oIsoScene.oGrid.aSquares[2]>
  [342] pushint8 2 .............................. <2>
  [344] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[2], 2>
  [346] objcall 86 .............................. <oIsoScene.oGrid.aSquares[2][2]>
  [348] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[2][2].oViewCenter>
  [351] getglobal 271 ........................... <oIsoScene>
  [354] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [357] pushsymb 273 ............................ <#aSquares>
  [360] pushint8 2 .............................. <2>
  [362] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 2>
  [364] objcall 274 ............................. <oIsoScene.oGrid.aSquares[2]>
  [367] pushint8 1 .............................. <1>
  [369] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[2], 1>
  [371] objcall 86 .............................. <oIsoScene.oGrid.aSquares[2][1]>
  [373] getobjprop 275 .......................... <oIsoScene.oGrid.aSquares[2][1].oViewCenter>
  [376] sub ..................................... <oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[2][1].oViewCenter>
  [377] mul ..................................... <distFrac * (oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[2][1].oViewCenter)>
  [378] pusharglistnoret 4 ...................... <me, #aStepSizes, 3, distFrac * (oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[2][1].oViewCenter)>
  [380] objcall 276 ............................. me.aStepSizes[3] = distFrac * (oIsoScene.oGrid.aSquares[2][2].oViewCenter - oIsoScene.oGrid.aSquares[2][1].oViewCenter)
  [383] getparam 0 .............................. <me>
  [385] pushzero ................................ <0>
  [386] pushint8 1 .............................. <1>
  [388] inv ..................................... <-1>
  [389] pushzero ................................ <0>
  [390] pusharglist 2 ........................... <-1, 0>
  [392] extcall 132 ............................. <point(-1, 0)>
  [394] pushint8 2 .............................. <2>
  [396] pushzero ................................ <0>
  [397] pushint8 1 .............................. <1>
  [399] pusharglist 2 ........................... <0, 1>
  [401] extcall 132 ............................. <point(0, 1)>
  [403] pushint8 4 .............................. <4>
  [405] pushint8 1 .............................. <1>
  [407] pushzero ................................ <0>
  [408] pusharglist 2 ........................... <1, 0>
  [410] extcall 132 ............................. <point(1, 0)>
  [412] pushint8 6 .............................. <6>
  [414] pushzero ................................ <0>
  [415] pushint8 1 .............................. <1>
  [417] inv ..................................... <-1>
  [418] pusharglist 2 ........................... <0, -1>
  [420] extcall 132 ............................. <point(0, -1)>
  [422] pusharglist 8 ........................... <[0: point(-1, 0), 2: point(0, 1), 4: point(1, 0), 6: point(0, -1)]>
  [424] pushproplist ............................ <[0: point(-1, 0), 2: point(0, 1), 4: point(1, 0), 6: point(0, -1)]>
  [425] setobjprop 277 .......................... me.aDirectionPointVectors = [0: point(-1, 0), 2: point(0, 1), 4: point(1, 0), 6: point(0, -1)]
  [428] getparam 0 .............................. <me>
  [430] pushzero ................................ <0>
  [431] setobjprop 278 .......................... me.bDisplayStatus = 0
  [434] getparam 0 .............................. <me>
  [436] pushzero ................................ <0>
  [437] setobjprop 279 .......................... me.bFlash = 0
  [440] getparam 0 .............................. <me>
  [442] pushint8 125 ............................ <125>
  [444] setobjprop 280 .......................... me.iFlashSpeed = 125
  [447] getparam 0 .............................. <me>
  [449] getmovieprop 281 ........................ <the milliSeconds>
  [452] setobjprop 282 .......................... me.iFlashTimer = the milliSeconds
  [455] getparam 0 .............................. <me>
  [457] pushint16 2000 .......................... <2000>
  [460] setobjprop 283 .......................... me.iFlashTimerLength = 2000
  [463] getparam 0 .............................. <me>
  [465] pushint8 1 .............................. <1>
  [467] pushint8 1 .............................. <1>
  [469] pushint8 16 ............................. <16>
  [471] pusharglist 3 ........................... <1, 1, 16>
  [473] extcall 284 ............................. <image(1, 1, 16)>
  [476] setobjprop 285 .......................... me.oFlashImage = image(1, 1, 16)
  [479] getparam 0 .............................. <me>
  [481] getchainedprop 285 ...................... <me.oFlashImage>
  [484] getparam 0 .............................. <me>
  [486] getchainedprop 285 ...................... <me.oFlashImage>
  [489] getobjprop 133 .......................... <me.oFlashImage.rect>
  [491] pushzero ................................ <0>
  [492] pushzero ................................ <0>
  [493] pushzero ................................ <0>
  [494] pusharglist 3 ........................... <0, 0, 0>
  [496] extcall 286 ............................. <rgb(0, 0, 0)>
  [499] pusharglistnoret 3 ...................... <me.oFlashImage, me.oFlashImage.rect, rgb(0, 0, 0)>
  [501] objcall 287 ............................. me.oFlashImage.fill(me.oFlashImage.rect, rgb(0, 0, 0))
  [504] getparam 0 .............................. <me>
  [506] pushint8 1 .............................. <1>
  [508] pushint8 1 .............................. <1>
  [510] pushint8 16 ............................. <16>
  [512] pusharglist 3 ........................... <1, 1, 16>
  [514] extcall 284 ............................. <image(1, 1, 16)>
  [517] setobjprop 288 .......................... me.oFlashImageGood = image(1, 1, 16)
  [520] getparam 0 .............................. <me>
  [522] getchainedprop 288 ...................... <me.oFlashImageGood>
  [525] getparam 0 .............................. <me>
  [527] getchainedprop 285 ...................... <me.oFlashImage>
  [530] getobjprop 133 .......................... <me.oFlashImage.rect>
  [532] pushzero ................................ <0>
  [533] pushint16 255 ........................... <255>
  [536] pushzero ................................ <0>
  [537] pusharglist 3 ........................... <0, 255, 0>
  [539] extcall 286 ............................. <rgb(0, 255, 0)>
  [542] pusharglistnoret 3 ...................... <me.oFlashImageGood, me.oFlashImage.rect, rgb(0, 255, 0)>
  [544] objcall 287 ............................. me.oFlashImageGood.fill(me.oFlashImage.rect, rgb(0, 255, 0))
  [547] getparam 0 .............................. <me>
  [549] pushint8 1 .............................. <1>
  [551] pushint8 1 .............................. <1>
  [553] pushint8 16 ............................. <16>
  [555] pusharglist 3 ........................... <1, 1, 16>
  [557] extcall 284 ............................. <image(1, 1, 16)>
  [560] setobjprop 289 .......................... me.oFlashImageBad = image(1, 1, 16)
  [563] getparam 0 .............................. <me>
  [565] getchainedprop 289 ...................... <me.oFlashImageBad>
  [568] getparam 0 .............................. <me>
  [570] getchainedprop 285 ...................... <me.oFlashImage>
  [573] getobjprop 133 .......................... <me.oFlashImage.rect>
  [575] pushint16 255 ........................... <255>
  [578] pushzero ................................ <0>
  [579] pushzero ................................ <0>
  [580] pusharglist 3 ........................... <255, 0, 0>
  [582] extcall 286 ............................. <rgb(255, 0, 0)>
  [585] pusharglistnoret 3 ...................... <me.oFlashImageBad, me.oFlashImage.rect, rgb(255, 0, 0)>
  [587] objcall 287 ............................. me.oFlashImageBad.fill(me.oFlashImage.rect, rgb(255, 0, 0))
  [590] getparam 0 .............................. <me>
  [592] pushcons 0 .............................. <"people">
  [594] setobjprop 290 .......................... me.sPartCast = "people"
  [597] getparam 0 .............................. <me>
  [599] pushcons 1 .............................. <"gamecode">
  [601] setobjprop 291 .......................... me.sAvatarCast = "gamecode"
  [604] getparam 0 .............................. <me>
  [606] pushfloat32 77.0 ........................ <77.0>
  [611] setobjprop 292 .......................... me.iWidth = 77.0
  [614] getparam 0 .............................. <me>
  [616] pushfloat32 110.0 ....................... <110.0>
  [621] setobjprop 293 .......................... me.iHeight = 110.0
  [624] getparam 0 .............................. <me>
  [626] pushint8 58 ............................. <58>
  [628] setobjprop 294 .......................... me.iScale = 58
  [631] getparam 0 .............................. <me>
  [633] pushint8 4 .............................. <4>
  [635] setobjprop 295 .......................... me.iDirection = 4
  [638] getparam 0 .............................. <me>
  [640] pushint8 1 .............................. <1>
  [642] setobjprop 296 .......................... me.bPaused = 1
  [645] getparam 0 .............................. <me>
  [647] pushint8 90 ............................. <90>
  [649] pushint16 275 ........................... <275>
  [652] pusharglist 2 ........................... <90, 275>
  [654] extcall 132 ............................. <point(90, 275)>
  [656] setobjprop 297 .......................... me.oPoint = point(90, 275)
  [659] getmovieprop 298 ........................ <the platform>
  [662] pushcons 2 .............................. <"windows">
  [664] containsstr ............................. <the platform contains "windows">
  [665] jmpifz [678] ............................ if the platform contains "windows" then / else
  [668] getparam 0 .............................. <me>
  [670] pushint8 32 ............................. <32>
  [672] setobjprop 299 .......................... me.iColorDepth = 32
  [675] jmp [685]
  [678] getparam 0 .............................. <me>
  [680] pushint8 32 ............................. <32>
  [682] setobjprop 299 .......................... me.iColorDepth = 32
  [685] getparam 0 .............................. <me>
  [687] pushzero ................................ <0>
  [688] setobjprop 300 .......................... me.iAlphaDepth = 0
  [691] getparam 0 .............................. <me>
  [693] pushint8 41 ............................. <41>
  [695] setobjprop 301 .......................... me.iDefaultInk = 41
  [698] getparam 0 .............................. <me>
  [700] pusharglist 0 ........................... <[:]>
  [702] pushproplist ............................ <[:]>
  [703] setobjprop 302 .......................... me.aSourceImages = [:]
  [706] getparam 0 .............................. <me>
  [708] pushint8 100 ............................ <100>
  [710] pushint8 100 ............................ <100>
  [712] pushint8 100 ............................ <100>
  [714] pusharglist 3 ........................... <100, 100, 100>
  [716] extcall 286 ............................. <rgb(100, 100, 100)>
  [719] setobjprop 303 .......................... me.oSpriteBgColor = rgb(100, 100, 100)
  [722] getparam 0 .............................. <me>
  [724] pushint8 100 ............................ <100>
  [726] pushint8 100 ............................ <100>
  [728] pushint8 100 ............................ <100>
  [730] pusharglist 3 ........................... <100, 100, 100>
  [732] extcall 286 ............................. <rgb(100, 100, 100)>
  [735] setobjprop 304 .......................... me.oBufferBGColor = rgb(100, 100, 100)
  [738] getparam 0 .............................. <me>
  [740] pushint8 36 ............................. <36>
  [742] setobjprop 305 .......................... me.iSpriteInk = 36
  [745] getparam 0 .............................. <me>
  [747] pushzero ................................ <0>
  [748] setobjprop 306 .......................... me.iAnimStep = 0
  [751] getparam 0 .............................. <me>
  [753] pushint8 7 .............................. <7>
  [755] setobjprop 307 .......................... me.iAnimStepMax = 7
  [758] getparam 0 .............................. <me>
  [760] pushcons 3 .............................. <"std">
  [762] setobjprop 308 .......................... me.sBodyAction = "std"
  [765] getparam 0 .............................. <me>
  [767] pushcons 3 .............................. <"std">
  [769] setobjprop 309 .......................... me.sFaceAction = "std"
  [772] getparam 0 .............................. <me>
  [774] pushcons 4 .............................. <EMPTY>
  [776] setobjprop 310 .......................... me.sItemAction = EMPTY
  [779] getparam 0 .............................. <me>
  [781] pushint8 15 ............................. <15>
  [783] setobjprop 311 .......................... me.iFPS = 15
  [786] getparam 0 .............................. <me>
  [788] getmovieprop 281 ........................ <the milliSeconds>
  [791] setobjprop 312 .......................... me.iFPSTimer = the milliSeconds
  [794] getparam 0 .............................. <me>
  [796] pushint16 1000 .......................... <1000>
  [799] getparam 0 .............................. <me>
  [801] getobjprop 311 .......................... <me.iFPS>
  [804] div ..................................... <1000 / me.iFPS>
  [805] setobjprop 313 .......................... me.iFPSTimerLength = 1000 / me.iFPS
  [808] getparam 0 .............................. <me>
  [810] pushint8 1 .............................. <1>
  [812] setobjprop 314 .......................... me.bBlink = 1
  [815] getparam 0 .............................. <me>
  [817] getmovieprop 281 ........................ <the milliSeconds>
  [820] setobjprop 315 .......................... me.iBlinkTimer = the milliSeconds
  [823] getparam 0 .............................. <me>
  [825] pushint16 3000 .......................... <3000>
  [828] setobjprop 316 .......................... me.iBlinkTimerLength = 3000
  [831] getparam 0 .............................. <me>
  [833] getmovieprop 281 ........................ <the milliSeconds>
  [836] setobjprop 317 .......................... me.iChatTimer = the milliSeconds
  [839] getparam 0 .............................. <me>
  [841] pushint16 1000 .......................... <1000>
  [844] setobjprop 318 .......................... me.iChatTimerLength = 1000
  [847] getparam 0 .............................. <me>
  [849] pushzero ................................ <0>
  [850] setobjprop 319 .......................... me.bChatting = 0
  [853] getparam 0 .............................. <me>
  [855] pushzero ................................ <0>
  [856] setobjprop 320 .......................... me.bEmote = 0
  [859] getparam 0 .............................. <me>
  [861] getmovieprop 281 ........................ <the milliSeconds>
  [864] setobjprop 321 .......................... me.iEmoteTimer = the milliSeconds
  [867] getparam 0 .............................. <me>
  [869] pushint16 5000 .......................... <5000>
  [872] setobjprop 322 .......................... me.iEmoteTimerLength = 5000
  [875] getparam 0 .............................. <me>
  [877] pushzero ................................ <0>
  [878] setobjprop 323 .......................... me.bDance = 0
  [881] getparam 0 .............................. <me>
  [883] pushzero ................................ <0>
  [884] setobjprop 324 .......................... me.bCarry = 0
  [887] getparam 0 .............................. <me>
  [889] getglobal 138 ........................... <oSpriteManager>
  [891] pusharglist 1 ........................... <oSpriteManager>
  [893] objcall 325 ............................. <oSpriteManager.checkOutSprite()>
  [896] setobjprop 326 .......................... me.iToolSprite = oSpriteManager.checkOutSprite()
  [899] getparam 0 .............................. <me>
  [901] pushzero ................................ <0>
  [902] setobjprop 327 .......................... me.bDrink = 0
  [905] getparam 0 .............................. <me>
  [907] getmovieprop 281 ........................ <the milliSeconds>
  [910] setobjprop 328 .......................... me.iDrinkTimer = the milliSeconds
  [913] getparam 0 .............................. <me>
  [915] pushint16 5000 .......................... <5000>
  [918] setobjprop 329 .......................... me.iDrinkWaitTimerLength = 5000
  [921] getparam 0 .............................. <me>
  [923] pushint16 400 ........................... <400>
  [926] setobjprop 330 .......................... me.iDrinkActionTimerLength = 400
  [929] getparam 0 .............................. <me>
  [931] getparam 0 .............................. <me>
  [933] getobjprop 329 .......................... <me.iDrinkWaitTimerLength>
  [936] setobjprop 331 .......................... me.iDrinkTimerLength = me.iDrinkWaitTimerLength
  [939] getparam 0 .............................. <me>
  [941] pushzero ................................ <0>
  [942] setobjprop 332 .......................... me.bSleep = 0
  [945] getparam 0 .............................. <me>
  [947] getmovieprop 281 ........................ <the milliSeconds>
  [950] setobjprop 333 .......................... me.iSleepTimer = the milliSeconds
  [953] getparam 0 .............................. <me>
  [955] pushint32 300000 ........................ <300000>
  [960] setobjprop 334 .......................... me.iSleepTimerLength = 300000
  [963] getparam 0 .............................. <me>
  [965] pusharglistnoret 1 ...................... <me>
  [967] objcall 181 ............................. me.setDefaultString()
  [969] getparam 0 .............................. <me>
  [971] getparam 1 .............................. <_sAttributes>
  [973] pusharglistnoret 2 ...................... <me, _sAttributes>
  [975] objcall 183 ............................. me.setAttributes(_sAttributes)
  [977] getparam 0 .............................. <me>
  [979] pusharglistnoret 1 ...................... <me>
  [981] objcall 185 ............................. me.setConfigSettings()
  [983] getparam 0 .............................. <me>
  [985] pusharglistnoret 1 ...................... <me>
  [987] objcall 186 ............................. me.setRuntimeConfig()
  [989] getparam 0 .............................. <me>
  [991] pusharglistnoret 1 ...................... <me>
  [993] objcall 188 ............................. me.setDirectionMap()
  [995] getparam 0 .............................. <me>
  [997] pushsymb 335 ............................ <#lh>
  [1000] pushsymb 336 ........................... <#ls>
  [1003] pushsymb 337 ........................... <#bd>
  [1006] pushsymb 338 ........................... <#sh>
  [1009] pushsymb 339 ........................... <#lg>
  [1012] pushsymb 340 ........................... <#ch>
  [1015] pushsymb 341 ........................... <#ri>
  [1018] pushsymb 342 ........................... <#rh>
  [1021] pushsymb 343 ........................... <#rs>
  [1024] pushsymb 344 ........................... <#hd>
  [1027] pushsymb 345 ........................... <#fc>
  [1030] pushsymb 346 ........................... <#ey>
  [1033] pushsymb 347 ........................... <#hr>
  [1036] pushsymb 348 ........................... <#ht>
  [1039] pusharglist 14 ......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [1041] pushlist ............................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [1042] setobjprop 349 ......................... me.aDefDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]
  [1045] getparam 0 ............................. <me>
  [1047] pusharglistnoret 1 ..................... <me>
  [1049] objcall 189 ............................ me.setDrawOrder()
  [1051] getparam 0 ............................. <me>
  [1053] pusharglistnoret 1 ..................... <me>
  [1055] objcall 187 ............................ me.setDanceOverride()
  [1057] getparam 0 ............................. <me>
  [1059] pushzero ............................... <0>
  [1060] setobjprop 350 ......................... me.iDither = 0
  [1063] getparam 0 ............................. <me>
  [1065] getparam 3 ............................. <_bPreviewOnly>
  [1067] pusharglistnoret 2 ..................... <me, _bPreviewOnly>
  [1069] objcall 172 ............................ me.setFloodFill(_bPreviewOnly)
  [1071] getparam 0 ............................. <me>
  [1073] pusharglistnoret 1 ..................... <me>
  [1075] objcall 177 ............................ me.createBuffer()
  [1077] getparam 0 ............................. <me>
  [1079] getparam 0 ............................. <me>
  [1081] getobjprop 294 ......................... <me.iScale>
  [1084] pusharglistnoret 2 ..................... <me, me.iScale>
  [1086] objcall 228 ............................ me.setScale(me.iScale)
  [1088] getparam 0 ............................. <me>
  [1090] pushzero ............................... <0>
  [1091] setobjprop 351 ......................... me.iHeightOffset = 0
  [1094] getparam 0 ............................. <me>
  [1096] pusharglistnoret 1 ..................... <me>
  [1098] objcall 199 ............................ me.draw()
  [1100] getparam 0 ............................. <me>
  [1102] getparam 0 ............................. <me>
  [1104] getchainedprop 352 ..................... <me.oBuffer>
  [1107] pusharglist 1 .......................... <me.oBuffer>
  [1109] objcall 126 ............................ <me.oBuffer.duplicate()>
  [1111] setobjprop 353 ......................... me.oPreviewImage = me.oBuffer.duplicate()
  [1114] getparam 0 ............................. <me>
  [1116] pusharglistnoret 1 ..................... <me>
  [1118] extcall 63 ............................. return me
  [1120] ret
end

on getDirectionPoint me, dirVal
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 277 ...................... <me.aDirectionPointVectors>
  [  5] getparam 1 .............................. <dirVal>
  [  7] pusharglist 1 ........................... <dirVal>
  [  9] extcall 121 ............................. <string(dirVal)>
  [ 11] pusharglist 1 ........................... <string(dirVal)>
  [ 13] extcall 358 ............................. <symbol(string(dirVal))>
  [ 16] pusharglist 2 ........................... <me.aDirectionPointVectors, symbol(string(dirVal))>
  [ 18] objcall 54 .............................. <me.aDirectionPointVectors.getProp(symbol(string(dirVal)))>
  [ 20] pusharglistnoret 1 ...................... <me.aDirectionPointVectors.getProp(symbol(string(dirVal)))>
  [ 22] extcall 63 .............................. return me.aDirectionPointVectors.getProp(symbol(string(dirVal)))
  [ 24] ret
end

on startFlash me, iFlashTime, isGood
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 279 .......................... me.bFlash = 1
  [  7] getparam 0 .............................. <me>
  [  9] getmovieprop 281 ........................ <the milliSeconds>
  [ 12] setobjprop 282 .......................... me.iFlashTimer = the milliSeconds
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 1 .............................. <iFlashTime>
  [ 19] setobjprop 283 .......................... me.iFlashTimerLength = iFlashTime
  [ 22] getparam 2 .............................. <isGood>
  [ 24] jmpifz [ 40] ............................ if isGood then / else
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 288 .......................... <me.oFlashImageGood>
  [ 34] setobjprop 285 .......................... me.oFlashImage = me.oFlashImageGood
  [ 37] jmp [ 50]
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 289 .......................... <me.oFlashImageBad>
  [ 47] setobjprop 285 .......................... me.oFlashImage = me.oFlashImageBad
  [ 50] ret
end

on stopFlash me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 279 .......................... me.bFlash = 0
  [  6] ret
end

on getFlashing me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 279 .......................... <me.bFlash>
  [  5] pusharglistnoret 1 ...................... <me.bFlash>
  [  7] extcall 63 .............................. return me.bFlash
  [  9] ret
end

on enterSled me, theSled
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 265 .......................... me.bOnSled = 1
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <theSled>
  [ 11] setobjprop 266 .......................... me.oSled = theSled
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 266 .......................... <me.oSled>
  [ 21] setobjprop 362 .......................... me.oNextSquare = me.oSled
  [ 24] ret
end

on exitSled me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 265 .......................... me.bOnSled = 0
  [  6] getparam 0 .............................. <me>
  [  8] pusharglist 0 ........................... <>
  [ 10] extcall 59 .............................. <VOID>
  [ 12] setobjprop 266 .......................... me.oSled = VOID
  [ 15] ret
end

on getCollisionRect me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 215 ............................. <me.getLoc()>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 263 .......................... <me.iCollisionWidth>
  [ 11] pushint8 2 .............................. <2>
  [ 13] div ..................................... <me.iCollisionWidth / 2>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 264 .......................... <me.iCollisionHeight>
  [ 19] pusharglist 2 ........................... <me.iCollisionWidth / 2, me.iCollisionHeight>
  [ 21] extcall 132 ............................. <point(me.iCollisionWidth / 2, me.iCollisionHeight)>
  [ 23] sub ..................................... <me.getLoc() - point(me.iCollisionWidth / 2, me.iCollisionHeight)>
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 215 ............................. <me.getLoc()>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 263 .......................... <me.iCollisionWidth>
  [ 35] pushint8 2 .............................. <2>
  [ 37] div ..................................... <me.iCollisionWidth / 2>
  [ 38] pushzero ................................ <0>
  [ 39] pusharglist 2 ........................... <me.iCollisionWidth / 2, 0>
  [ 41] extcall 132 ............................. <point(me.iCollisionWidth / 2, 0)>
  [ 43] add ..................................... <me.getLoc() + point(me.iCollisionWidth / 2, 0)>
  [ 44] pusharglist 2 ........................... <me.getLoc() - point(me.iCollisionWidth / 2, me.iCollisionHeight), me.getLoc() + point(me.iCollisionWidth / 2, 0)>
  [ 46] extcall 133 ............................. <rect(me.getLoc() - point(me.iCollisionWidth / 2, me.iCollisionHeight), me.getLoc() + point(me.iCollisionWidth / 2, 0))>
  [ 48] pusharglistnoret 1 ...................... <rect(me.getLoc() - point(me.iCollisionWidth / 2, me.iCollisionHeight), me.getLoc() + point(me.iCollisionWidth / 2, 0))>
  [ 50] extcall 63 .............................. return rect(me.getLoc() - point(me.iCollisionWidth / 2, me.iCollisionHeight), me.getLoc() + point(me.iCollisionWidth / 2, 0))
  [ 52] ret
end

on setFloodFill me, _bPreviewOnly
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 364 .......................... me.bDoFloodFill = 0
  [  6] getparam 1 .............................. <_bPreviewOnly>
  [  8] jmpifz [ 31] ............................ if _bPreviewOnly then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] setobjprop 364 .......................... me.bDoFloodFill = 0
  [ 17] getparam 0 .............................. <me>
  [ 19] getparam 0 .............................. <me>
  [ 21] getobjprop 303 .......................... <me.oSpriteBgColor>
  [ 24] setobjprop 304 .......................... me.oBufferBGColor = me.oSpriteBgColor
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 63 .............................. return 
  [ 31] getglobal 366 ........................... <oStudioMap>
  [ 34] pusharglist 1 ........................... <oStudioMap>
  [ 36] extcall 365 ............................. <voidp(oStudioMap)>
  [ 39] not ..................................... <not voidp(oStudioMap)>
  [ 40] jmpifz [ 83] ............................ if not voidp(oStudioMap) then / else
  [ 43] getglobal 366 ........................... <oStudioMap>
  [ 46] pusharglist 1 ........................... <oStudioMap>
  [ 48] objcall 367 ............................. <oStudioMap.isPrivate()>
  [ 51] jmpifz [ 73] ............................ if oStudioMap.isPrivate() then / else
  [ 54] getparam 0 .............................. <me>
  [ 56] pushzero ................................ <0>
  [ 57] setobjprop 364 .......................... me.bDoFloodFill = 0
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 303 .......................... <me.oSpriteBgColor>
  [ 67] setobjprop 304 .......................... me.oBufferBGColor = me.oSpriteBgColor
  [ 70] jmp [ 80]
  [ 73] getparam 0 .............................. <me>
  [ 75] pushint8 1 .............................. <1>
  [ 77] setobjprop 364 .......................... me.bDoFloodFill = 1
  [ 80] jmp [ 99]
  [ 83] getparam 0 .............................. <me>
  [ 85] pushzero ................................ <0>
  [ 86] setobjprop 364 .......................... me.bDoFloodFill = 0
  [ 89] getparam 0 .............................. <me>
  [ 91] getparam 0 .............................. <me>
  [ 93] getobjprop 303 .......................... <me.oSpriteBgColor>
  [ 96] setobjprop 304 .......................... me.oBufferBGColor = me.oSpriteBgColor
  [ 99] ret
end

on getFPS me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 311 .......................... <me.iFPS>
  [  5] pusharglistnoret 1 ...................... <me.iFPS>
  [  7] extcall 63 .............................. return me.iFPS
  [  9] ret
end

on initSprites me, _iImageSprite, _iShadowSprite
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iImageSprite>
  [  4] setobjprop 368 .......................... me.iImageSprite = _iImageSprite
  [  7] getparam 0 .............................. <me>
  [  9] getparam 2 .............................. <_iShadowSprite>
  [ 11] setobjprop 369 .......................... me.iShadowSprite = _iShadowSprite
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 178 ............................. me.createMember()
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglistnoret 1 ...................... <me>
  [ 24] objcall 179 ............................. me.createSprites()
  [ 26] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 353 .......................... <me.oPreviewImage>
  [  5] pusharglistnoret 1 ...................... <me.oPreviewImage>
  [  7] extcall 63 .............................. return me.oPreviewImage
  [  9] ret
end

on end me
  [  0] ret
end

on createBuffer me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 292 .......................... <me.iWidth>
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 293 .......................... <me.iHeight>
  [ 12] pushint8 20 ............................. <20>
  [ 14] add ..................................... <me.iHeight + 20>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 299 .......................... <me.iColorDepth>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 300 .......................... <me.iAlphaDepth>
  [ 25] pusharglist 4 ........................... <me.iWidth, me.iHeight + 20, me.iColorDepth, me.iAlphaDepth>
  [ 27] extcall 284 ............................. <image(me.iWidth, me.iHeight + 20, me.iColorDepth, me.iAlphaDepth)>
  [ 30] setobjprop 352 .......................... me.oBuffer = image(me.iWidth, me.iHeight + 20, me.iColorDepth, me.iAlphaDepth)
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 352 ...................... <me.oBuffer>
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 352 ...................... <me.oBuffer>
  [ 43] getobjprop 133 .......................... <me.oBuffer.rect>
  [ 45] getparam 0 .............................. <me>
  [ 47] getobjprop 304 .......................... <me.oBufferBGColor>
  [ 50] pusharglistnoret 3 ...................... <me.oBuffer, me.oBuffer.rect, me.oBufferBGColor>
  [ 52] objcall 287 ............................. me.oBuffer.fill(me.oBuffer.rect, me.oBufferBGColor)
  [ 55] ret
end

on createMember me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 368 .......................... <me.iImageSprite>
  [  5] pusharglist 1 ........................... <me.iImageSprite>
  [  7] extcall 121 ............................. <string(me.iImageSprite)>
  [  9] setlocal 0 .............................. sName = string(me.iImageSprite)
  [ 11] getlocal 0 .............................. <sName>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 291 .......................... <me.sAvatarCast>
  [ 18] pusharglist 2 ........................... <sName, me.sAvatarCast>
  [ 20] extcall 142 ............................. <member(sName, me.sAvatarCast)>
  [ 22] setlocal 1 .............................. oExistingMember = member(sName, me.sAvatarCast)
  [ 24] getlocal 1 .............................. <oExistingMember>
  [ 26] getobjprop 372 .......................... <oExistingMember.memberNum>
  [ 29] pushzero ................................ <0>
  [ 30] lteq .................................... <oExistingMember.memberNum <= 0>
  [ 31] jmpifz [ 59] ............................ if oExistingMember.memberNum <= 0 then / else
  [ 34] getparam 0 .............................. <me>
  [ 36] pushsymb 373 ............................ <#bitmap>
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 291 .......................... <me.sAvatarCast>
  [ 44] pusharglist 1 ........................... <me.sAvatarCast>
  [ 46] extcall 374 ............................. <castLib(me.sAvatarCast)>
  [ 49] pusharglist 2 ........................... <#bitmap, castLib(me.sAvatarCast)>
  [ 51] extcall 2 ............................... <new(#bitmap, castLib(me.sAvatarCast))>
  [ 53] setobjprop 375 .......................... me.oImageMember = new(#bitmap, castLib(me.sAvatarCast))
  [ 56] jmp [ 66]
  [ 59] getparam 0 .............................. <me>
  [ 61] getlocal 1 .............................. <oExistingMember>
  [ 63] setobjprop 375 .......................... me.oImageMember = oExistingMember
  [ 66] getparam 0 .............................. <me>
  [ 68] getchainedprop 375 ...................... <me.oImageMember>
  [ 71] getlocal 0 .............................. <sName>
  [ 73] setobjprop 376 .......................... me.oImageMember.name = sName
  [ 76] getparam 0 .............................. <me>
  [ 78] getchainedprop 352 ...................... <me.oBuffer>
  [ 81] getobjprop 377 .......................... <me.oBuffer.width>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 294 .......................... <me.iScale>
  [ 89] pushcons 5 .............................. <0.01>
  [ 91] mul ..................................... <me.iScale * 0.01>
  [ 92] mul ..................................... <me.oBuffer.width * (me.iScale * 0.01)>
  [ 93] getparam 0 .............................. <me>
  [ 95] getchainedprop 352 ...................... <me.oBuffer>
  [ 98] getobjprop 378 .......................... <me.oBuffer.height>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 294 .......................... <me.iScale>
  [106] pushcons 5 .............................. <0.01>
  [108] mul ..................................... <me.iScale * 0.01>
  [109] mul ..................................... <me.oBuffer.height * (me.iScale * 0.01)>
  [110] getparam 0 .............................. <me>
  [112] getobjprop 299 .......................... <me.iColorDepth>
  [115] getparam 0 .............................. <me>
  [117] getobjprop 300 .......................... <me.iAlphaDepth>
  [120] pusharglist 4 ........................... <me.oBuffer.width * (me.iScale * 0.01), me.oBuffer.height * (me.iScale * 0.01), me.iColorDepth, me.iAlphaDepth>
  [122] extcall 284 ............................. <image(me.oBuffer.width * (me.iScale * 0.01), me.oBuffer.height * (me.iScale * 0.01), me.iColorDepth, me.iAlphaDepth)>
  [125] setlocal 2 .............................. oMemberImage = image(me.oBuffer.width * (me.iScale * 0.01), me.oBuffer.height * (me.iScale * 0.01), me.iColorDepth, me.iAlphaDepth)
  [127] getlocal 2 .............................. <oMemberImage>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 352 .......................... <me.oBuffer>
  [134] getparam 0 .............................. <me>
  [136] getchainedprop 352 ...................... <me.oBuffer>
  [139] getobjprop 133 .......................... <me.oBuffer.rect>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 294 .......................... <me.iScale>
  [146] pushcons 5 .............................. <0.01>
  [148] mul ..................................... <me.iScale * 0.01>
  [149] mul ..................................... <me.oBuffer.rect * (me.iScale * 0.01)>
  [150] getparam 0 .............................. <me>
  [152] getchainedprop 352 ...................... <me.oBuffer>
  [155] getobjprop 133 .......................... <me.oBuffer.rect>
  [157] pusharglistnoret 4 ...................... <oMemberImage, me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect>
  [159] objcall 379 ............................. oMemberImage.copyPixels(me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect)
  [162] getparam 0 .............................. <me>
  [164] getchainedprop 375 ...................... <me.oImageMember>
  [167] getlocal 2 .............................. <oMemberImage>
  [169] setobjprop 284 .......................... me.oImageMember.image = oMemberImage
  [172] getparam 0 .............................. <me>
  [174] getchainedprop 375 ...................... <me.oImageMember>
  [177] getparam 0 .............................. <me>
  [179] getobjprop 292 .......................... <me.iWidth>
  [182] getparam 0 .............................. <me>
  [184] getobjprop 294 .......................... <me.iScale>
  [187] pushcons 5 .............................. <0.01>
  [189] mul ..................................... <me.iScale * 0.01>
  [190] mul ..................................... <me.iWidth * (me.iScale * 0.01)>
  [191] pushint8 2 .............................. <2>
  [193] div ..................................... <me.iWidth * (me.iScale * 0.01) / 2>
  [194] getparam 0 .............................. <me>
  [196] getobjprop 293 .......................... <me.iHeight>
  [199] getparam 0 .............................. <me>
  [201] getobjprop 294 .......................... <me.iScale>
  [204] pushcons 5 .............................. <0.01>
  [206] mul ..................................... <me.iScale * 0.01>
  [207] mul ..................................... <me.iHeight * (me.iScale * 0.01)>
  [208] pusharglist 2 ........................... <me.iWidth * (me.iScale * 0.01) / 2, me.iHeight * (me.iScale * 0.01)>
  [210] extcall 132 ............................. <point(me.iWidth * (me.iScale * 0.01) / 2, me.iHeight * (me.iScale * 0.01))>
  [212] setobjprop 380 .......................... me.oImageMember.regPoint = point(me.iWidth * (me.iScale * 0.01) / 2, me.iHeight * (me.iScale * 0.01))
  [215] ret
end

on createSprites me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 368 .......................... <me.iImageSprite>
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglistnoret 2 ...................... <me.iImageSprite, 1>
  [  9] extcall 384 ............................. puppetSprite(me.iImageSprite, 1)
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 368 .......................... <me.iImageSprite>
  [ 17] pusharglist 1 ........................... <me.iImageSprite>
  [ 19] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 375 .......................... <me.oImageMember>
  [ 26] setobjprop 142 .......................... sprite(me.iImageSprite).member = me.oImageMember
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 364 .......................... <me.bDoFloodFill>
  [ 33] jmpifz [ 56] ............................ if me.bDoFloodFill then / else
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 368 .......................... <me.iImageSprite>
  [ 41] pusharglist 1 ........................... <me.iImageSprite>
  [ 43] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 45] getparam 0 .............................. <me>
  [ 47] getobjprop 303 .......................... <me.oSpriteBgColor>
  [ 50] setobjprop 385 .......................... sprite(me.iImageSprite).bgColor = me.oSpriteBgColor
  [ 53] jmp [ 73]
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 368 .......................... <me.iImageSprite>
  [ 61] pusharglist 1 ........................... <me.iImageSprite>
  [ 63] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 65] getparam 0 .............................. <me>
  [ 67] getobjprop 304 .......................... <me.oBufferBGColor>
  [ 70] setobjprop 385 .......................... sprite(me.iImageSprite).bgColor = me.oBufferBGColor
  [ 73] getparam 0 .............................. <me>
  [ 75] getobjprop 368 .......................... <me.iImageSprite>
  [ 78] pusharglist 1 ........................... <me.iImageSprite>
  [ 80] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 305 .......................... <me.iSpriteInk>
  [ 87] setobjprop 386 .......................... sprite(me.iImageSprite).ink = me.iSpriteInk
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 369 .......................... <me.iShadowSprite>
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglistnoret 2 ...................... <me.iShadowSprite, 1>
  [ 99] extcall 384 ............................. puppetSprite(me.iShadowSprite, 1)
  [102] pushcons 6 .............................. <"human_shadow_sh">
  [104] setlocal 0 .............................. sShadowMember = "human_shadow_sh"
  [106] getglobal 366 ........................... <oStudioMap>
  [109] pusharglist 1 ........................... <oStudioMap>
  [111] extcall 365 ............................. <voidp(oStudioMap)>
  [114] not ..................................... <not voidp(oStudioMap)>
  [115] jmpifz [133] ............................ if not voidp(oStudioMap) then
  [118] getglobal 366 ........................... <oStudioMap>
  [121] pusharglist 1 ........................... <oStudioMap>
  [123] objcall 367 ............................. <oStudioMap.isPrivate()>
  [126] jmpifz [133] ............................ if oStudioMap.isPrivate() then
  [129] pushcons 7 .............................. <"human_shadow_h">
  [131] setlocal 0 .............................. sShadowMember = "human_shadow_h"
  [133] getparam 0 .............................. <me>
  [135] getobjprop 369 .......................... <me.iShadowSprite>
  [138] pusharglist 1 ........................... <me.iShadowSprite>
  [140] extcall 79 .............................. <sprite(me.iShadowSprite)>
  [142] getlocal 0 .............................. <sShadowMember>
  [144] pusharglist 1 ........................... <sShadowMember>
  [146] extcall 142 ............................. <member(sShadowMember)>
  [148] setobjprop 142 .......................... sprite(me.iShadowSprite).member = member(sShadowMember)
  [150] ret
end

on getBuffer me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 352 .......................... <me.oBuffer>
  [  5] pusharglistnoret 1 ...................... <me.oBuffer>
  [  7] extcall 63 .............................. return me.oBuffer
  [  9] ret
end

on setDefaultString me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 8 .............................. <"hr=008/115,61,17&hd=001/153,126,99&ey=006/238,238,238&fc=002/153,126,99&bd=001/153,126,99&lh=001/153,126,99&rh=001/153,126,99&ch=004/238,153,0&ls=001/238,60,47&rs=001/238,60,47&lg=001/97,120,85&sh=001/51,25,25">
  [  4] setobjprop 388 .......................... me.sDefaultString = "hr=008/115,61,17&hd=001/153,126,99&ey=006/238,238,238&fc=002/153,126,99&bd=001/153,126,99&lh=001/153,126,99&rh=001/153,126,99&ch=004/238,153,0&ls=001/238,60,47&rs=001/238,60,47&lg=001/97,120,85&sh=001/51,25,25"
  [  7] getparam 0 .............................. <me>
  [  9] getparam 0 .............................. <me>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 388 .......................... <me.sDefaultString>
  [ 16] pusharglist 2 ........................... <me, me.sDefaultString>
  [ 18] objcall 182 ............................. <me.fishifyAvatarString(me.sDefaultString)>
  [ 20] setobjprop 388 .......................... me.sDefaultString = me.fishifyAvatarString(me.sDefaultString)
  [ 23] ret
end

on fishifyAvatarString me, sOriginalString
  [  0] pushcons 9 .............................. <"Object">
  [  2] pusharglist 1 ........................... <"Object">
  [  4] extcall 389 ............................. <newObject("Object")>
  [  7] setlocal 0 .............................. flo = newObject("Object")
  [  9] getlocal 0 .............................. <flo>
  [ 11] pushcons 10 ............................. <"String">
  [ 13] getparam 1 .............................. <sOriginalString>
  [ 15] pusharglist 2 ........................... <"String", sOriginalString>
  [ 17] extcall 389 ............................. <newObject("String", sOriginalString)>
  [ 20] setobjprop 390 .......................... flo.s = newObject("String", sOriginalString)
  [ 23] getlocal 0 .............................. <flo>
  [ 25] getlocal 0 .............................. <flo>
  [ 27] getchainedprop 390 ...................... <flo.s>
  [ 30] pushcons 11 ............................. <"&">
  [ 32] pusharglist 2 ........................... <flo.s, "&">
  [ 34] objcall 391 ............................. <flo.s.split("&")>
  [ 37] setobjprop 392 .......................... flo.a = flo.s.split("&")
  [ 40] pushcons 4 .............................. <EMPTY>
  [ 42] setlocal 1 .............................. colorString = EMPTY
  [ 44] pushzero ................................ <0>
  [ 45] setlocal 2 .............................. isBoy = 0
  [ 47] pushzero ................................ <0>
  [ 48] setlocal 3
  [ 50] getlocal 3
  [ 52] getlocal 0 .............................. <flo>
  [ 54] getchainedprop 392 ...................... <flo.a>
  [ 57] getobjprop 393 .......................... <flo.a.length>
  [ 60] pushint8 1 .............................. <1>
  [ 62] sub ..................................... <flo.a.length - 1>
  [ 63] lteq
  [ 64] jmpifz [178] ............................ repeat with i = 0 to flo.a.length - 1
  [ 67] getlocal 0 .............................. <flo>
  [ 69] pushsymb 392 ............................ <#a>
  [ 72] getlocal 3 .............................. <i>
  [ 74] pusharglist 3 ........................... <flo, #a, i>
  [ 76] objcall 274 ............................. <flo.a[i]>
  [ 79] pushsymb 394 ............................ <#char>
  [ 82] pushint8 1 .............................. <1>
  [ 84] pushint8 2 .............................. <2>
  [ 86] pusharglist 4 ........................... <flo.a[i], #char, 1, 2>
  [ 88] objcall 54 .............................. <flo.a[i].char[1..2]>
  [ 90] pushcons 12 ............................. <"lg">
  [ 92] eq ...................................... <flo.a[i].char[1..2] = "lg">
  [ 93] jmpifz [136] ............................ if flo.a[i].char[1..2] = "lg" then
  [ 96] pushcons 10 ............................. <"String">
  [ 98] getlocal 0 .............................. <flo>
  [100] pushsymb 392 ............................ <#a>
  [103] getlocal 3 .............................. <i>
  [105] pusharglist 3 ........................... <flo, #a, i>
  [107] objcall 54 .............................. <flo.a[i]>
  [109] pusharglist 2 ........................... <"String", flo.a[i]>
  [111] extcall 389 ............................. <newObject("String", flo.a[i])>
  [114] setlocal 4 .............................. partString = newObject("String", flo.a[i])
  [116] getlocal 4 .............................. <partString>
  [118] pushcons 13 ............................. <"/">
  [120] pusharglist 2 ........................... <partString, "/">
  [122] objcall 391 ............................. <partString.split("/")>
  [125] pushint8 1 .............................. <1>
  [127] pusharglist 2 ........................... <partString.split("/"), 1>
  [129] objcall 86 .............................. <partString.split("/")[1]>
  [131] setlocal 1 .............................. colorString = partString.split("/")[1]
  [133] jmp [169] ............................... next repeat
  [136] getlocal 0 .............................. <flo>
  [138] pushsymb 392 ............................ <#a>
  [141] getlocal 3 .............................. <i>
  [143] pusharglist 3 ........................... <flo, #a, i>
  [145] objcall 274 ............................. <flo.a[i]>
  [148] pushsymb 394 ............................ <#char>
  [151] pushint8 1 .............................. <1>
  [153] pushint8 6 .............................. <6>
  [155] pusharglist 4 ........................... <flo.a[i], #char, 1, 6>
  [157] objcall 54 .............................. <flo.a[i].char[1..6]>
  [159] pushcons 14 ............................. <"bd=001">
  [161] eq ...................................... <flo.a[i].char[1..6] = "bd=001">
  [162] jmpifz [169] ............................ if flo.a[i].char[1..6] = "bd=001" then
  [165] pushint8 1 .............................. <1>
  [167] setlocal 2 .............................. isBoy = 1
  [169] pushint8 1
  [171] getlocal 3
  [173] add
  [174] setlocal 3
  [176] endrepeat [ 50]
  [178] pushzero ................................ <0>
  [179] setlocal 3
  [181] getlocal 3
  [183] getlocal 0 .............................. <flo>
  [185] getchainedprop 392 ...................... <flo.a>
  [188] getobjprop 393 .......................... <flo.a.length>
  [191] pushint8 1 .............................. <1>
  [193] sub ..................................... <flo.a.length - 1>
  [194] lteq
  [195] jmpifz [483] ............................ repeat with i = 0 to flo.a.length - 1
  [198] getlocal 0 .............................. <flo>
  [200] pushsymb 392 ............................ <#a>
  [203] getlocal 3 .............................. <i>
  [205] pusharglist 3 ........................... <flo, #a, i>
  [207] objcall 274 ............................. <flo.a[i]>
  [210] pushsymb 394 ............................ <#char>
  [213] pushint8 1 .............................. <1>
  [215] pushint8 2 .............................. <2>
  [217] pusharglist 4 ........................... <flo.a[i], #char, 1, 2>
  [219] objcall 54 .............................. <flo.a[i].char[1..2]>
  [221] setlocal 5 .............................. bodyPart = flo.a[i].char[1..2]
  [223] getlocal 5 .............................. <bodyPart>
  [225] peek 0 .................................. case bodyPart of
  [227] pushcons 15 ............................. <"hr">
  [229] nteq
  [230] jmpifz [241] ............................ (case) "hr", ...
  [233] peek 0
  [235] pushcons 16 ............................. <"ey">
  [237] eq
  [238] jmpifz [244] ............................ (case) ..., "ey":
  [241] jmp [471]
  [244] peek 0
  [246] pushcons 17 ............................. <"sh">
  [248] eq
  [249] jmpifz [330] ............................ (case) "sh":
  [252] getlocal 0 .............................. <flo>
  [254] pushsymb 392 ............................ <#a>
  [257] getlocal 3 .............................. <i>
  [259] getlocal 0 .............................. <flo>
  [261] pushsymb 392 ............................ <#a>
  [264] getlocal 3 .............................. <i>
  [266] pusharglist 3 ........................... <flo, #a, i>
  [268] objcall 274 ............................. <flo.a[i]>
  [271] pushsymb 394 ............................ <#char>
  [274] pushint8 1 .............................. <1>
  [276] pushint8 3 .............................. <3>
  [278] pusharglist 4 ........................... <flo.a[i], #char, 1, 3>
  [280] objcall 54 .............................. <flo.a[i].char[1..3]>
  [282] pushcons 18 ............................. <"000">
  [284] joinstr ................................. <flo.a[i].char[1..3] & "000">
  [285] getlocal 0 .............................. <flo>
  [287] pushsymb 392 ............................ <#a>
  [290] getlocal 3 .............................. <i>
  [292] pusharglist 3 ........................... <flo, #a, i>
  [294] objcall 274 ............................. <flo.a[i]>
  [297] pushsymb 394 ............................ <#char>
  [300] pushint8 7 .............................. <7>
  [302] getlocal 0 .............................. <flo>
  [304] pushsymb 392 ............................ <#a>
  [307] getlocal 3 .............................. <i>
  [309] pusharglist 3 ........................... <flo, #a, i>
  [311] objcall 274 ............................. <flo.a[i]>
  [314] getobjprop 393 .......................... <flo.a[i].length>
  [317] pusharglist 4 ........................... <flo.a[i], #char, 7, flo.a[i].length>
  [319] objcall 54 .............................. <flo.a[i].char[7..flo.a[i].length]>
  [321] joinstr ................................. <flo.a[i].char[1..3] & "000" & flo.a[i].char[7..flo.a[i].length]>
  [322] pusharglistnoret 4 ...................... <flo, #a, i, flo.a[i].char[1..3] & "000" & flo.a[i].char[7..flo.a[i].length]>
  [324] objcall 276 ............................. flo.a[i] = flo.a[i].char[1..3] & "000" & flo.a[i].char[7..flo.a[i].length]
  [327] jmp [471]
  [330] peek 0
  [332] pushcons 19 ............................. <"hd">
  [334] nteq
  [335] jmpifz [370] ............................ (case) "hd", ...
  [338] peek 0
  [340] pushcons 20 ............................. <"fc">
  [342] nteq
  [343] jmpifz [370] ............................ (case) ..., "fc", ...
  [346] peek 0
  [348] pushcons 21 ............................. <"bd">
  [350] nteq
  [351] jmpifz [370] ............................ (case) ..., "bd", ...
  [354] peek 0
  [356] pushcons 22 ............................. <"lh">
  [358] nteq
  [359] jmpifz [370] ............................ (case) ..., "lh", ...
  [362] peek 0
  [364] pushcons 23 ............................. <"rh">
  [366] eq
  [367] jmpifz [373] ............................ (case) ..., "rh":
  [370] jmp [471]
  [373] peek 0
  [375] pushcons 12 ............................. <"lg">
  [377] eq
  [378] jmpifz [471] ............................ (case) "lg":
  [381] getlocal 2 .............................. <isBoy>
  [383] jmpifz [430] ............................ if isBoy then / else
  [386] getlocal 0 .............................. <flo>
  [388] pushsymb 392 ............................ <#a>
  [391] getlocal 3 .............................. <i>
  [393] getlocal 0 .............................. <flo>
  [395] pushsymb 392 ............................ <#a>
  [398] getlocal 3 .............................. <i>
  [400] pusharglist 3 ........................... <flo, #a, i>
  [402] objcall 274 ............................. <flo.a[i]>
  [405] pushsymb 394 ............................ <#char>
  [408] pushint8 1 .............................. <1>
  [410] pushint8 3 .............................. <3>
  [412] pusharglist 4 ........................... <flo.a[i], #char, 1, 3>
  [414] objcall 54 .............................. <flo.a[i].char[1..3]>
  [416] pushcons 24 ............................. <"101/">
  [418] joinstr ................................. <flo.a[i].char[1..3] & "101/">
  [419] getlocal 1 .............................. <colorString>
  [421] joinstr ................................. <flo.a[i].char[1..3] & "101/" & colorString>
  [422] pusharglistnoret 4 ...................... <flo, #a, i, flo.a[i].char[1..3] & "101/" & colorString>
  [424] objcall 276 ............................. flo.a[i] = flo.a[i].char[1..3] & "101/" & colorString
  [427] jmp [471]
  [430] getlocal 0 .............................. <flo>
  [432] pushsymb 392 ............................ <#a>
  [435] getlocal 3 .............................. <i>
  [437] getlocal 0 .............................. <flo>
  [439] pushsymb 392 ............................ <#a>
  [442] getlocal 3 .............................. <i>
  [444] pusharglist 3 ........................... <flo, #a, i>
  [446] objcall 274 ............................. <flo.a[i]>
  [449] pushsymb 394 ............................ <#char>
  [452] pushint8 1 .............................. <1>
  [454] pushint8 3 .............................. <3>
  [456] pusharglist 4 ........................... <flo.a[i], #char, 1, 3>
  [458] objcall 54 .............................. <flo.a[i].char[1..3]>
  [460] pushcons 25 ............................. <"100/">
  [462] joinstr ................................. <flo.a[i].char[1..3] & "100/">
  [463] getlocal 1 .............................. <colorString>
  [465] joinstr ................................. <flo.a[i].char[1..3] & "100/" & colorString>
  [466] pusharglistnoret 4 ...................... <flo, #a, i, flo.a[i].char[1..3] & "100/" & colorString>
  [468] objcall 276 ............................. flo.a[i] = flo.a[i].char[1..3] & "100/" & colorString
  [471] pop 1 ................................... end case
  [473] pushint8 1
  [475] getlocal 3
  [477] add
  [478] setlocal 3
  [480] endrepeat [181]
  [483] getlocal 0 .............................. <flo>
  [485] getchainedprop 392 ...................... <flo.a>
  [488] pushcons 11 ............................. <"&">
  [490] pusharglist 2 ........................... <flo.a, "&">
  [492] objcall 395 ............................. <flo.a.join("&")>
  [495] setlocal 6 .............................. sOutString = flo.a.join("&")
  [497] getlocal 6 .............................. <sOutString>
  [499] pusharglistnoret 1 ...................... <sOutString>
  [501] extcall 63 .............................. return sOutString
  [503] ret
end

on setAttributes me, sString
  [  0] getparam 1 .............................. <sString>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 59 .............................. <VOID>
  [  6] eq ...................................... <sString = VOID>
  [  7] jmpifz [ 17] ............................ if sString = VOID then
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 388 .......................... <me.sDefaultString>
  [ 15] setparam 1 .............................. sString = me.sDefaultString
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 0 ........................... <[:]>
  [ 21] pushproplist ............................ <[:]>
  [ 22] setobjprop 403 .......................... me.aAttributes = [:]
  [ 25] pushcons 11 ............................. <"&">
  [ 27] setmovieprop 404 ........................ the itemDelimiter = "&"
  [ 30] getparam 1 .............................. <sString>
  [ 32] pushsymb 405 ............................ <#items>
  [ 35] pusharglist 2 ........................... <sString, #items>
  [ 37] objcall 88 .............................. <sString.items.count>
  [ 39] setlocal 0 .............................. iNumParts = sString.items.count
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 1
  [ 45] getlocal 1
  [ 47] getlocal 0 .............................. <iNumParts>
  [ 49] lteq
  [ 50] jmpifz [301] ............................ repeat with i = 1 to iNumParts
  [ 53] pushcons 11 ............................. <"&">
  [ 55] setmovieprop 404 ........................ the itemDelimiter = "&"
  [ 58] getparam 1 .............................. <sString>
  [ 60] pushsymb 406 ............................ <#item>
  [ 63] getlocal 1 .............................. <i>
  [ 65] pusharglist 3 ........................... <sString, #item, i>
  [ 67] objcall 54 .............................. <sString.item[i]>
  [ 69] setlocal 2 .............................. sTotalPart = sString.item[i]
  [ 71] pushcons 26 ............................. <"=">
  [ 73] setmovieprop 404 ........................ the itemDelimiter = "="
  [ 76] getlocal 2 .............................. <sTotalPart>
  [ 78] pushsymb 406 ............................ <#item>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglist 3 ........................... <sTotalPart, #item, 1>
  [ 85] objcall 54 .............................. <sTotalPart.item[1]>
  [ 87] setlocal 3 .............................. sPart = sTotalPart.item[1]
  [ 89] getlocal 2 .............................. <sTotalPart>
  [ 91] pushsymb 406 ............................ <#item>
  [ 94] pushint8 2 .............................. <2>
  [ 96] pusharglist 3 ........................... <sTotalPart, #item, 2>
  [ 98] objcall 54 .............................. <sTotalPart.item[2]>
  [100] setlocal 4 .............................. sPartCodeAndColor = sTotalPart.item[2]
  [102] pushcons 13 ............................. <"/">
  [104] setmovieprop 404 ........................ the itemDelimiter = "/"
  [107] getlocal 4 .............................. <sPartCodeAndColor>
  [109] pushsymb 406 ............................ <#item>
  [112] pushint8 1 .............................. <1>
  [114] pusharglist 3 ........................... <sPartCodeAndColor, #item, 1>
  [116] objcall 54 .............................. <sPartCodeAndColor.item[1]>
  [118] setlocal 5 .............................. sPartCode = sPartCodeAndColor.item[1]
  [120] getlocal 4 .............................. <sPartCodeAndColor>
  [122] pushsymb 406 ............................ <#item>
  [125] pushint8 2 .............................. <2>
  [127] pusharglist 3 ........................... <sPartCodeAndColor, #item, 2>
  [129] objcall 54 .............................. <sPartCodeAndColor.item[2]>
  [131] setlocal 6 .............................. sColorParts = sPartCodeAndColor.item[2]
  [133] pushcons 27 ............................. <",">
  [135] setmovieprop 404 ........................ the itemDelimiter = ","
  [138] getlocal 6 .............................. <sColorParts>
  [140] pushsymb 405 ............................ <#items>
  [143] pusharglist 2 ........................... <sColorParts, #items>
  [145] objcall 88 .............................. <sColorParts.items.count>
  [147] setlocal 7 .............................. iColorLength = sColorParts.items.count
  [149] getlocal 6 .............................. <sColorParts>
  [151] pushsymb 406 ............................ <#item>
  [154] pushint8 1 .............................. <1>
  [156] pusharglist 3 ........................... <sColorParts, #item, 1>
  [158] objcall 54 .............................. <sColorParts.item[1]>
  [160] pusharglist 1 ........................... <sColorParts.item[1]>
  [162] extcall 123 ............................. <integer(sColorParts.item[1])>
  [164] setlocal 8 .............................. iR = integer(sColorParts.item[1])
  [166] getlocal 6 .............................. <sColorParts>
  [168] pushsymb 406 ............................ <#item>
  [171] pushint8 2 .............................. <2>
  [173] pusharglist 3 ........................... <sColorParts, #item, 2>
  [175] objcall 54 .............................. <sColorParts.item[2]>
  [177] pusharglist 1 ........................... <sColorParts.item[2]>
  [179] extcall 123 ............................. <integer(sColorParts.item[2])>
  [181] setlocal 9 .............................. iG = integer(sColorParts.item[2])
  [183] getlocal 6 .............................. <sColorParts>
  [185] pushsymb 406 ............................ <#item>
  [188] pushint8 3 .............................. <3>
  [190] pusharglist 3 ........................... <sColorParts, #item, 3>
  [192] objcall 54 .............................. <sColorParts.item[3]>
  [194] pusharglist 1 ........................... <sColorParts.item[3]>
  [196] extcall 123 ............................. <integer(sColorParts.item[3])>
  [198] setlocal 10 ............................. iB = integer(sColorParts.item[3])
  [200] getlocal 7 .............................. <iColorLength>
  [202] pushint8 1 .............................. <1>
  [204] eq ...................................... <iColorLength = 1>
  [205] jmpifz [223] ............................ if iColorLength = 1 then / else
  [208] pushsymb 408 ............................ <#paletteIndex>
  [211] getlocal 8 .............................. <iR>
  [213] pusharglist 2 ........................... <#paletteIndex, iR>
  [215] extcall 407 ............................. <color(#paletteIndex, iR)>
  [218] setlocal 11 ............................. oColor = color(#paletteIndex, iR)
  [220] jmp [236]
  [223] getlocal 8 .............................. <iR>
  [225] getlocal 9 .............................. <iG>
  [227] getlocal 10 ............................. <iB>
  [229] pusharglist 3 ........................... <iR, iG, iB>
  [231] extcall 286 ............................. <rgb(iR, iG, iB)>
  [234] setlocal 11 ............................. oColor = rgb(iR, iG, iB)
  [236] getlocal 3 .............................. <sPart>
  [238] pushcons 16 ............................. <"ey">
  [240] eq ...................................... <sPart = "ey">
  [241] jmpifz [263] ............................ if sPart = "ey" then
  [244] pushsymb 286 ............................ <#rgb>
  [247] pushint16 255 ........................... <255>
  [250] pushint16 255 ........................... <255>
  [253] pushint16 255 ........................... <255>
  [256] pusharglist 4 ........................... <#rgb, 255, 255, 255>
  [258] extcall 407 ............................. <color(#rgb, 255, 255, 255)>
  [261] setlocal 11 ............................. oColor = color(#rgb, 255, 255, 255)
  [263] pushsymb 409 ............................ <#prtCd>
  [266] getlocal 5 .............................. <sPartCode>
  [268] pushsymb 410 ............................ <#clr>
  [271] getlocal 11 ............................. <oColor>
  [273] pusharglist 4 ........................... <[#prtCd: sPartCode, #clr: oColor]>
  [275] pushproplist ............................ <[#prtCd: sPartCode, #clr: oColor]>
  [276] setlocal 12 ............................. aPart = [#prtCd: sPartCode, #clr: oColor]
  [278] getparam 0 .............................. <me>
  [280] pushsymb 403 ............................ <#aAttributes>
  [283] getlocal 3 .............................. <sPart>
  [285] getlocal 12 ............................. <aPart>
  [287] pusharglistnoret 4 ...................... <me, #aAttributes, sPart, aPart>
  [289] objcall 276 ............................. me.aAttributes[sPart] = aPart
  [292] pushint8 1
  [294] getlocal 1
  [296] add
  [297] setlocal 1
  [299] endrepeat [ 45]
  [301] getparam 0 .............................. <me>
  [303] pushsymb 403 ............................ <#aAttributes>
  [306] pushcons 28 ............................. <"ri">
  [308] pushsymb 409 ............................ <#prtCd>
  [311] pushcons 29 ............................. <"003">
  [313] pushsymb 410 ............................ <#clr>
  [316] pushsymb 286 ............................ <#rgb>
  [319] pushint16 255 ........................... <255>
  [322] pushint16 255 ........................... <255>
  [325] pushint16 255 ........................... <255>
  [328] pusharglist 4 ........................... <#rgb, 255, 255, 255>
  [330] extcall 407 ............................. <color(#rgb, 255, 255, 255)>
  [333] pusharglist 4 ........................... <[#prtCd: "003", #clr: color(#rgb, 255, 255, 255)]>
  [335] pushproplist ............................ <[#prtCd: "003", #clr: color(#rgb, 255, 255, 255)]>
  [336] pusharglistnoret 4 ...................... <me, #aAttributes, "ri", [#prtCd: "003", #clr: color(#rgb, 255, 255, 255)]>
  [338] objcall 276 ............................. me.aAttributes["ri"] = [#prtCd: "003", #clr: color(#rgb, 255, 255, 255)]
  [341] ret
end

on generateAttributeString me
  [  0] pushcons 4 .............................. <EMPTY>
  [  2] setlocal 0 .............................. s = EMPTY
  [  4] pushint8 1 .............................. <1>
  [  6] setlocal 1
  [  8] getlocal 1
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 403 ............................ <#aAttributes>
  [ 15] pusharglist 2 ........................... <me, #aAttributes>
  [ 17] objcall 88 .............................. <me.aAttributes.count>
  [ 19] lteq
  [ 20] jmpifz [158] ............................ repeat with i = 1 to me.aAttributes.count
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 403 ...................... <me.aAttributes>
  [ 28] getlocal 1 .............................. <i>
  [ 30] pusharglist 2 ........................... <me.aAttributes, i>
  [ 32] objcall 424 ............................. <me.aAttributes.getPropAt(i)>
  [ 35] setlocal 2 .............................. sPart = me.aAttributes.getPropAt(i)
  [ 37] getparam 0 .............................. <me>
  [ 39] pushsymb 403 ............................ <#aAttributes>
  [ 42] getlocal 2 .............................. <sPart>
  [ 44] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [ 46] objcall 274 ............................. <me.aAttributes[sPart]>
  [ 49] pushsymb 409 ............................ <#prtCd>
  [ 52] pusharglist 2 ........................... <me.aAttributes[sPart], #prtCd>
  [ 54] objcall 86 .............................. <me.aAttributes[sPart][#prtCd]>
  [ 56] setlocal 3 .............................. sPartCode = me.aAttributes[sPart][#prtCd]
  [ 58] getparam 0 .............................. <me>
  [ 60] pushsymb 403 ............................ <#aAttributes>
  [ 63] getlocal 2 .............................. <sPart>
  [ 65] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [ 67] objcall 274 ............................. <me.aAttributes[sPart]>
  [ 70] pushsymb 410 ............................ <#clr>
  [ 73] pusharglist 2 ........................... <me.aAttributes[sPart], #clr>
  [ 75] objcall 86 .............................. <me.aAttributes[sPart][#clr]>
  [ 77] setlocal 4 .............................. oColor = me.aAttributes[sPart][#clr]
  [ 79] getlocal 2 .............................. <sPart>
  [ 81] pushcons 28 ............................. <"ri">
  [ 83] eq ...................................... <sPart = "ri">
  [ 84] jmpifz [ 90] ............................ if sPart = "ri" then
  [ 87] jmp [149] ............................... next repeat
  [ 90] getlocal 2 .............................. <sPart>
  [ 92] pushcons 26 ............................. <"=">
  [ 94] joinstr ................................. <sPart & "=">
  [ 95] getlocal 3 .............................. <sPartCode>
  [ 97] joinstr ................................. <sPart & "=" & sPartCode>
  [ 98] pushcons 13 ............................. <"/">
  [100] joinstr ................................. <sPart & "=" & sPartCode & "/">
  [101] getlocal 4 .............................. <oColor>
  [103] getobjprop 425 .......................... <oColor.red>
  [106] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red>
  [107] pushcons 27 ............................. <",">
  [109] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & ",">
  [110] getlocal 4 .............................. <oColor>
  [112] getobjprop 426 .......................... <oColor.green>
  [115] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green>
  [116] pushcons 27 ............................. <",">
  [118] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green & ",">
  [119] getlocal 4 .............................. <oColor>
  [121] getobjprop 427 .......................... <oColor.blue>
  [124] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green & "," & oColor.blue>
  [125] setlocal 5 .............................. sP = sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green & "," & oColor.blue
  [127] getlocal 0 .............................. <s>
  [129] pushcons 4 .............................. <EMPTY>
  [131] nteq .................................... <s <> EMPTY>
  [132] jmpifz [142] ............................ if s <> EMPTY then
  [135] getlocal 0 .............................. <s>
  [137] pushcons 11 ............................. <"&">
  [139] joinstr ................................. <s & "&">
  [140] setlocal 0 .............................. s = s & "&"
  [142] getlocal 0 .............................. <s>
  [144] getlocal 5 .............................. <sP>
  [146] joinstr ................................. <s & sP>
  [147] setlocal 0 .............................. s = s & sP
  [149] pushint8 1
  [151] getlocal 1
  [153] add
  [154] setlocal 1
  [156] endrepeat [  8]
  [158] getlocal 0 .............................. <s>
  [160] pusharglistnoret 1 ...................... <s>
  [162] extcall 63 .............................. return s
  [164] ret
end

on setConfigSettings me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"AvatarConfigSettings">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 291 .......................... <me.sAvatarCast>
  [  9] pusharglist 2 ........................... <"AvatarConfigSettings", me.sAvatarCast>
  [ 11] extcall 142 ............................. <member("AvatarConfigSettings", me.sAvatarCast)>
  [ 13] getobjprop 430 .......................... <member("AvatarConfigSettings", me.sAvatarCast).text>
  [ 16] pusharglist 1 ........................... <member("AvatarConfigSettings", me.sAvatarCast).text>
  [ 18] extcall 429 ............................. <value(member("AvatarConfigSettings", me.sAvatarCast).text)>
  [ 21] setobjprop 431 .......................... me.aConfigSettings = value(member("AvatarConfigSettings", me.sAvatarCast).text)
  [ 24] ret
end

on setRuntimeConfig me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 432 .......................... me.aRuntimeConfig = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 13] pushsymb 337 ............................ <#bd>
  [ 16] pushsymb 433 ............................ <#act>
  [ 19] pushsymb 434 ............................ <#std>
  [ 22] pushsymb 435 ............................ <#anim>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pushsymb 436 ............................ <#animIndex>
  [ 30] pushzero ................................ <0>
  [ 31] pushsymb 437 ............................ <#Active>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pushsymb 438 ............................ <#dirOff>
  [ 39] pushzero ................................ <0>
  [ 40] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 42] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 43] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #bd, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 45] objcall 276 ............................. me.aRuntimeConfig[#bd] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [ 48] getparam 0 .............................. <me>
  [ 50] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 53] pushsymb 344 ............................ <#hd>
  [ 56] pushsymb 433 ............................ <#act>
  [ 59] pushsymb 434 ............................ <#std>
  [ 62] pushsymb 435 ............................ <#anim>
  [ 65] pushint8 1 .............................. <1>
  [ 67] pushsymb 436 ............................ <#animIndex>
  [ 70] pushzero ................................ <0>
  [ 71] pushsymb 437 ............................ <#Active>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pushsymb 438 ............................ <#dirOff>
  [ 79] pushzero ................................ <0>
  [ 80] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 82] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 83] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #hd, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 85] objcall 276 ............................. me.aRuntimeConfig[#hd] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [ 88] getparam 0 .............................. <me>
  [ 90] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 93] pushsymb 345 ............................ <#fc>
  [ 96] pushsymb 433 ............................ <#act>
  [ 99] pushsymb 434 ............................ <#std>
  [102] pushsymb 435 ............................ <#anim>
  [105] pushint8 1 .............................. <1>
  [107] pushsymb 436 ............................ <#animIndex>
  [110] pushzero ................................ <0>
  [111] pushsymb 437 ............................ <#Active>
  [114] pushint8 1 .............................. <1>
  [116] pushsymb 438 ............................ <#dirOff>
  [119] pushzero ................................ <0>
  [120] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [122] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [123] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #fc, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [125] objcall 276 ............................. me.aRuntimeConfig[#fc] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [128] getparam 0 .............................. <me>
  [130] pushsymb 432 ............................ <#aRuntimeConfig>
  [133] pushsymb 346 ............................ <#ey>
  [136] pushsymb 433 ............................ <#act>
  [139] pushsymb 434 ............................ <#std>
  [142] pushsymb 435 ............................ <#anim>
  [145] pushint8 1 .............................. <1>
  [147] pushsymb 436 ............................ <#animIndex>
  [150] pushzero ................................ <0>
  [151] pushsymb 437 ............................ <#Active>
  [154] pushint8 1 .............................. <1>
  [156] pushsymb 438 ............................ <#dirOff>
  [159] pushzero ................................ <0>
  [160] pushsymb 386 ............................ <#ink>
  [163] pushint8 36 ............................. <36>
  [165] pusharglist 12 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]>
  [167] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]>
  [168] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ey, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]>
  [170] objcall 276 ............................. me.aRuntimeConfig[#ey] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]
  [173] getparam 0 .............................. <me>
  [175] pushsymb 432 ............................ <#aRuntimeConfig>
  [178] pushsymb 347 ............................ <#hr>
  [181] pushsymb 433 ............................ <#act>
  [184] pushsymb 434 ............................ <#std>
  [187] pushsymb 435 ............................ <#anim>
  [190] pushint8 1 .............................. <1>
  [192] pushsymb 436 ............................ <#animIndex>
  [195] pushzero ................................ <0>
  [196] pushsymb 437 ............................ <#Active>
  [199] pushint8 1 .............................. <1>
  [201] pushsymb 438 ............................ <#dirOff>
  [204] pushzero ................................ <0>
  [205] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [207] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [208] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #hr, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [210] objcall 276 ............................. me.aRuntimeConfig[#hr] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [213] getparam 0 .............................. <me>
  [215] pushsymb 432 ............................ <#aRuntimeConfig>
  [218] pushsymb 338 ............................ <#sh>
  [221] pushsymb 433 ............................ <#act>
  [224] pushsymb 434 ............................ <#std>
  [227] pushsymb 435 ............................ <#anim>
  [230] pushint8 1 .............................. <1>
  [232] pushsymb 436 ............................ <#animIndex>
  [235] pushzero ................................ <0>
  [236] pushsymb 437 ............................ <#Active>
  [239] pushint8 1 .............................. <1>
  [241] pushsymb 438 ............................ <#dirOff>
  [244] pushzero ................................ <0>
  [245] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [247] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [248] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #sh, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [250] objcall 276 ............................. me.aRuntimeConfig[#sh] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [253] getparam 0 .............................. <me>
  [255] pushsymb 432 ............................ <#aRuntimeConfig>
  [258] pushsymb 339 ............................ <#lg>
  [261] pushsymb 433 ............................ <#act>
  [264] pushsymb 434 ............................ <#std>
  [267] pushsymb 435 ............................ <#anim>
  [270] pushint8 1 .............................. <1>
  [272] pushsymb 436 ............................ <#animIndex>
  [275] pushzero ................................ <0>
  [276] pushsymb 437 ............................ <#Active>
  [279] pushint8 1 .............................. <1>
  [281] pushsymb 438 ............................ <#dirOff>
  [284] pushzero ................................ <0>
  [285] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [287] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [288] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #lg, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [290] objcall 276 ............................. me.aRuntimeConfig[#lg] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [293] getparam 0 .............................. <me>
  [295] pushsymb 432 ............................ <#aRuntimeConfig>
  [298] pushsymb 335 ............................ <#lh>
  [301] pushsymb 433 ............................ <#act>
  [304] pushsymb 434 ............................ <#std>
  [307] pushsymb 435 ............................ <#anim>
  [310] pushint8 1 .............................. <1>
  [312] pushsymb 436 ............................ <#animIndex>
  [315] pushzero ................................ <0>
  [316] pushsymb 437 ............................ <#Active>
  [319] pushint8 1 .............................. <1>
  [321] pushsymb 438 ............................ <#dirOff>
  [324] pushzero ................................ <0>
  [325] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [327] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [328] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #lh, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [330] objcall 276 ............................. me.aRuntimeConfig[#lh] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [333] getparam 0 .............................. <me>
  [335] pushsymb 432 ............................ <#aRuntimeConfig>
  [338] pushsymb 342 ............................ <#rh>
  [341] pushsymb 433 ............................ <#act>
  [344] pushsymb 434 ............................ <#std>
  [347] pushsymb 435 ............................ <#anim>
  [350] pushint8 1 .............................. <1>
  [352] pushsymb 436 ............................ <#animIndex>
  [355] pushzero ................................ <0>
  [356] pushsymb 437 ............................ <#Active>
  [359] pushint8 1 .............................. <1>
  [361] pushsymb 438 ............................ <#dirOff>
  [364] pushzero ................................ <0>
  [365] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [367] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [368] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #rh, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [370] objcall 276 ............................. me.aRuntimeConfig[#rh] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [373] getparam 0 .............................. <me>
  [375] pushsymb 432 ............................ <#aRuntimeConfig>
  [378] pushsymb 340 ............................ <#ch>
  [381] pushsymb 433 ............................ <#act>
  [384] pushsymb 434 ............................ <#std>
  [387] pushsymb 435 ............................ <#anim>
  [390] pushint8 1 .............................. <1>
  [392] pushsymb 436 ............................ <#animIndex>
  [395] pushzero ................................ <0>
  [396] pushsymb 437 ............................ <#Active>
  [399] pushint8 1 .............................. <1>
  [401] pushsymb 438 ............................ <#dirOff>
  [404] pushzero ................................ <0>
  [405] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [407] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [408] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ch, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [410] objcall 276 ............................. me.aRuntimeConfig[#ch] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [413] getparam 0 .............................. <me>
  [415] pushsymb 432 ............................ <#aRuntimeConfig>
  [418] pushsymb 343 ............................ <#rs>
  [421] pushsymb 433 ............................ <#act>
  [424] pushsymb 434 ............................ <#std>
  [427] pushsymb 435 ............................ <#anim>
  [430] pushint8 1 .............................. <1>
  [432] pushsymb 436 ............................ <#animIndex>
  [435] pushzero ................................ <0>
  [436] pushsymb 437 ............................ <#Active>
  [439] pushint8 1 .............................. <1>
  [441] pushsymb 438 ............................ <#dirOff>
  [444] pushzero ................................ <0>
  [445] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [447] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [448] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #rs, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [450] objcall 276 ............................. me.aRuntimeConfig[#rs] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [453] getparam 0 .............................. <me>
  [455] pushsymb 432 ............................ <#aRuntimeConfig>
  [458] pushsymb 336 ............................ <#ls>
  [461] pushsymb 433 ............................ <#act>
  [464] pushsymb 434 ............................ <#std>
  [467] pushsymb 435 ............................ <#anim>
  [470] pushint8 1 .............................. <1>
  [472] pushsymb 436 ............................ <#animIndex>
  [475] pushzero ................................ <0>
  [476] pushsymb 437 ............................ <#Active>
  [479] pushint8 1 .............................. <1>
  [481] pushsymb 438 ............................ <#dirOff>
  [484] pushzero ................................ <0>
  [485] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [487] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [488] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ls, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [490] objcall 276 ............................. me.aRuntimeConfig[#ls] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [493] getparam 0 .............................. <me>
  [495] pushsymb 432 ............................ <#aRuntimeConfig>
  [498] pushsymb 341 ............................ <#ri>
  [501] pushsymb 433 ............................ <#act>
  [504] pushsymb 439 ............................ <#crr>
  [507] pushsymb 435 ............................ <#anim>
  [510] pushint8 1 .............................. <1>
  [512] pushsymb 436 ............................ <#animIndex>
  [515] pushzero ................................ <0>
  [516] pushsymb 437 ............................ <#Active>
  [519] pushzero ................................ <0>
  [520] pushsymb 438 ............................ <#dirOff>
  [523] pushzero ................................ <0>
  [524] pusharglist 10 .......................... <[#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]>
  [526] pushproplist ............................ <[#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]>
  [527] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ri, [#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]>
  [529] objcall 276 ............................. me.aRuntimeConfig[#ri] = [#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]
  [532] ret
end

on setDanceOverride me
  [  0] pushzero ................................ <0>
  [  1] pushzero ................................ <0>
  [  2] pusharglist 2 ........................... <0, 0>
  [  4] extcall 132 ............................. <point(0, 0)>
  [  6] pushzero ................................ <0>
  [  7] pushzero ................................ <0>
  [  8] pusharglist 2 ........................... <0, 0>
  [ 10] extcall 132 ............................. <point(0, 0)>
  [ 12] pushzero ................................ <0>
  [ 13] pushint8 1 .............................. <1>
  [ 15] inv ..................................... <-1>
  [ 16] pusharglist 2 ........................... <0, -1>
  [ 18] extcall 132 ............................. <point(0, -1)>
  [ 20] pushzero ................................ <0>
  [ 21] pushint8 1 .............................. <1>
  [ 23] inv ..................................... <-1>
  [ 24] pusharglist 2 ........................... <0, -1>
  [ 26] extcall 132 ............................. <point(0, -1)>
  [ 28] pushzero ................................ <0>
  [ 29] pushzero ................................ <0>
  [ 30] pusharglist 2 ........................... <0, 0>
  [ 32] extcall 132 ............................. <point(0, 0)>
  [ 34] pushzero ................................ <0>
  [ 35] pushzero ................................ <0>
  [ 36] pusharglist 2 ........................... <0, 0>
  [ 38] extcall 132 ............................. <point(0, 0)>
  [ 40] pushzero ................................ <0>
  [ 41] pushint8 1 .............................. <1>
  [ 43] inv ..................................... <-1>
  [ 44] pusharglist 2 ........................... <0, -1>
  [ 46] extcall 132 ............................. <point(0, -1)>
  [ 48] pushzero ................................ <0>
  [ 49] pushint8 1 .............................. <1>
  [ 51] inv ..................................... <-1>
  [ 52] pusharglist 2 ........................... <0, -1>
  [ 54] extcall 132 ............................. <point(0, -1)>
  [ 56] pusharglist 8 ........................... <[point(0, 0), point(0, 0), point(0, -1), point(0, -1), point(0, 0), point(0, 0), point(0, -1), point(0, -1)]>
  [ 58] pushlist ................................ <[point(0, 0), point(0, 0), point(0, -1), point(0, -1), point(0, 0), point(0, 0), point(0, -1), point(0, -1)]>
  [ 59] setlocal 0 .............................. aLocOff = [point(0, 0), point(0, 0), point(0, -1), point(0, -1), point(0, 0), point(0, 0), point(0, -1), point(0, -1)]
  [ 61] pushint8 1 .............................. <1>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pushint8 1 .............................. <1>
  [ 67] pushint8 1 .............................. <1>
  [ 69] pushint8 1 .............................. <1>
  [ 71] inv ..................................... <-1>
  [ 72] pushint8 1 .............................. <1>
  [ 74] inv ..................................... <-1>
  [ 75] pushint8 1 .............................. <1>
  [ 77] inv ..................................... <-1>
  [ 78] pushint8 1 .............................. <1>
  [ 80] inv ..................................... <-1>
  [ 81] pusharglist 8 ........................... <[1, 1, 1, 1, -1, -1, -1, -1]>
  [ 83] pushlist ................................ <[1, 1, 1, 1, -1, -1, -1, -1]>
  [ 84] setlocal 1 .............................. aDirOff = [1, 1, 1, 1, -1, -1, -1, -1]
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglist 0 ........................... <[:]>
  [ 90] pushproplist ............................ <[:]>
  [ 91] setobjprop 440 .......................... me.aDanceOverride = [:]
  [ 94] getparam 0 .............................. <me>
  [ 96] pushsymb 440 ............................ <#aDanceOverride>
  [ 99] pushsymb 337 ............................ <#bd>
  [102] pusharglist 0 ........................... <[:]>
  [104] pushproplist ............................ <[:]>
  [105] pusharglistnoret 4 ...................... <me, #aDanceOverride, #bd, [:]>
  [107] objcall 276 ............................. me.aDanceOverride[#bd] = [:]
  [110] getparam 0 .............................. <me>
  [112] pushsymb 440 ............................ <#aDanceOverride>
  [115] pushsymb 337 ............................ <#bd>
  [118] pusharglist 3 ........................... <me, #aDanceOverride, #bd>
  [120] objcall 274 ............................. <me.aDanceOverride[#bd]>
  [123] pushsymb 441 ............................ <#prts>
  [126] pushsymb 433 ............................ <#act>
  [129] pushcons 3 .............................. <"std">
  [131] pushsymb 442 ............................ <#fr>
  [134] pushzero ................................ <0>
  [135] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [137] pushproplist ............................ <[#act: "std", #fr: 0]>
  [138] pushsymb 433 ............................ <#act>
  [141] pushcons 3 .............................. <"std">
  [143] pushsymb 442 ............................ <#fr>
  [146] pushzero ................................ <0>
  [147] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [149] pushproplist ............................ <[#act: "std", #fr: 0]>
  [150] pushsymb 433 ............................ <#act>
  [153] pushcons 31 ............................. <"wlk">
  [155] pushsymb 442 ............................ <#fr>
  [158] pushzero ................................ <0>
  [159] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [161] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [162] pushsymb 433 ............................ <#act>
  [165] pushcons 31 ............................. <"wlk">
  [167] pushsymb 442 ............................ <#fr>
  [170] pushzero ................................ <0>
  [171] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [173] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [174] pushsymb 433 ............................ <#act>
  [177] pushcons 3 .............................. <"std">
  [179] pushsymb 442 ............................ <#fr>
  [182] pushzero ................................ <0>
  [183] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [185] pushproplist ............................ <[#act: "std", #fr: 0]>
  [186] pushsymb 433 ............................ <#act>
  [189] pushcons 3 .............................. <"std">
  [191] pushsymb 442 ............................ <#fr>
  [194] pushzero ................................ <0>
  [195] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [197] pushproplist ............................ <[#act: "std", #fr: 0]>
  [198] pushsymb 433 ............................ <#act>
  [201] pushcons 31 ............................. <"wlk">
  [203] pushsymb 442 ............................ <#fr>
  [206] pushint8 2 .............................. <2>
  [208] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [210] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [211] pushsymb 433 ............................ <#act>
  [214] pushcons 31 ............................. <"wlk">
  [216] pushsymb 442 ............................ <#fr>
  [219] pushint8 2 .............................. <2>
  [221] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [223] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [224] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [226] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [227] pusharglistnoret 3 ...................... <me.aDanceOverride[#bd], #prts, [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [229] objcall 443 ............................. me.aDanceOverride[#bd][#prts] = [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]
  [232] getparam 0 .............................. <me>
  [234] pushsymb 440 ............................ <#aDanceOverride>
  [237] pushsymb 339 ............................ <#lg>
  [240] pusharglist 0 ........................... <[:]>
  [242] pushproplist ............................ <[:]>
  [243] pusharglistnoret 4 ...................... <me, #aDanceOverride, #lg, [:]>
  [245] objcall 276 ............................. me.aDanceOverride[#lg] = [:]
  [248] getparam 0 .............................. <me>
  [250] pushsymb 440 ............................ <#aDanceOverride>
  [253] pushsymb 339 ............................ <#lg>
  [256] pusharglist 3 ........................... <me, #aDanceOverride, #lg>
  [258] objcall 274 ............................. <me.aDanceOverride[#lg]>
  [261] pushsymb 441 ............................ <#prts>
  [264] pushsymb 433 ............................ <#act>
  [267] pushcons 3 .............................. <"std">
  [269] pushsymb 442 ............................ <#fr>
  [272] pushzero ................................ <0>
  [273] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [275] pushproplist ............................ <[#act: "std", #fr: 0]>
  [276] pushsymb 433 ............................ <#act>
  [279] pushcons 3 .............................. <"std">
  [281] pushsymb 442 ............................ <#fr>
  [284] pushzero ................................ <0>
  [285] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [287] pushproplist ............................ <[#act: "std", #fr: 0]>
  [288] pushsymb 433 ............................ <#act>
  [291] pushcons 31 ............................. <"wlk">
  [293] pushsymb 442 ............................ <#fr>
  [296] pushzero ................................ <0>
  [297] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [299] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [300] pushsymb 433 ............................ <#act>
  [303] pushcons 31 ............................. <"wlk">
  [305] pushsymb 442 ............................ <#fr>
  [308] pushzero ................................ <0>
  [309] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [311] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [312] pushsymb 433 ............................ <#act>
  [315] pushcons 3 .............................. <"std">
  [317] pushsymb 442 ............................ <#fr>
  [320] pushzero ................................ <0>
  [321] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [323] pushproplist ............................ <[#act: "std", #fr: 0]>
  [324] pushsymb 433 ............................ <#act>
  [327] pushcons 3 .............................. <"std">
  [329] pushsymb 442 ............................ <#fr>
  [332] pushzero ................................ <0>
  [333] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [335] pushproplist ............................ <[#act: "std", #fr: 0]>
  [336] pushsymb 433 ............................ <#act>
  [339] pushcons 31 ............................. <"wlk">
  [341] pushsymb 442 ............................ <#fr>
  [344] pushint8 2 .............................. <2>
  [346] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [348] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [349] pushsymb 433 ............................ <#act>
  [352] pushcons 31 ............................. <"wlk">
  [354] pushsymb 442 ............................ <#fr>
  [357] pushint8 2 .............................. <2>
  [359] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [361] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [362] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [364] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [365] pusharglistnoret 3 ...................... <me.aDanceOverride[#lg], #prts, [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [367] objcall 443 ............................. me.aDanceOverride[#lg][#prts] = [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]
  [370] getparam 0 .............................. <me>
  [372] pushsymb 440 ............................ <#aDanceOverride>
  [375] pushsymb 338 ............................ <#sh>
  [378] pusharglist 0 ........................... <[:]>
  [380] pushproplist ............................ <[:]>
  [381] pusharglistnoret 4 ...................... <me, #aDanceOverride, #sh, [:]>
  [383] objcall 276 ............................. me.aDanceOverride[#sh] = [:]
  [386] getparam 0 .............................. <me>
  [388] pushsymb 440 ............................ <#aDanceOverride>
  [391] pushsymb 338 ............................ <#sh>
  [394] pusharglist 3 ........................... <me, #aDanceOverride, #sh>
  [396] objcall 274 ............................. <me.aDanceOverride[#sh]>
  [399] pushsymb 441 ............................ <#prts>
  [402] pushsymb 433 ............................ <#act>
  [405] pushcons 3 .............................. <"std">
  [407] pushsymb 442 ............................ <#fr>
  [410] pushzero ................................ <0>
  [411] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [413] pushproplist ............................ <[#act: "std", #fr: 0]>
  [414] pushsymb 433 ............................ <#act>
  [417] pushcons 3 .............................. <"std">
  [419] pushsymb 442 ............................ <#fr>
  [422] pushzero ................................ <0>
  [423] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [425] pushproplist ............................ <[#act: "std", #fr: 0]>
  [426] pushsymb 433 ............................ <#act>
  [429] pushcons 31 ............................. <"wlk">
  [431] pushsymb 442 ............................ <#fr>
  [434] pushzero ................................ <0>
  [435] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [437] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [438] pushsymb 433 ............................ <#act>
  [441] pushcons 31 ............................. <"wlk">
  [443] pushsymb 442 ............................ <#fr>
  [446] pushzero ................................ <0>
  [447] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [449] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [450] pushsymb 433 ............................ <#act>
  [453] pushcons 3 .............................. <"std">
  [455] pushsymb 442 ............................ <#fr>
  [458] pushzero ................................ <0>
  [459] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [461] pushproplist ............................ <[#act: "std", #fr: 0]>
  [462] pushsymb 433 ............................ <#act>
  [465] pushcons 3 .............................. <"std">
  [467] pushsymb 442 ............................ <#fr>
  [470] pushzero ................................ <0>
  [471] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [473] pushproplist ............................ <[#act: "std", #fr: 0]>
  [474] pushsymb 433 ............................ <#act>
  [477] pushcons 31 ............................. <"wlk">
  [479] pushsymb 442 ............................ <#fr>
  [482] pushint8 2 .............................. <2>
  [484] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [486] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [487] pushsymb 433 ............................ <#act>
  [490] pushcons 31 ............................. <"wlk">
  [492] pushsymb 442 ............................ <#fr>
  [495] pushint8 2 .............................. <2>
  [497] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [499] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [500] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [502] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [503] pusharglistnoret 3 ...................... <me.aDanceOverride[#sh], #prts, [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [505] objcall 443 ............................. me.aDanceOverride[#sh][#prts] = [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]
  [508] getparam 0 .............................. <me>
  [510] pushsymb 440 ............................ <#aDanceOverride>
  [513] pushsymb 335 ............................ <#lh>
  [516] pusharglist 0 ........................... <[:]>
  [518] pushproplist ............................ <[:]>
  [519] pusharglistnoret 4 ...................... <me, #aDanceOverride, #lh, [:]>
  [521] objcall 276 ............................. me.aDanceOverride[#lh] = [:]
  [524] getparam 0 .............................. <me>
  [526] pushsymb 440 ............................ <#aDanceOverride>
  [529] pushsymb 335 ............................ <#lh>
  [532] pusharglist 3 ........................... <me, #aDanceOverride, #lh>
  [534] objcall 274 ............................. <me.aDanceOverride[#lh]>
  [537] pushsymb 441 ............................ <#prts>
  [540] pushsymb 433 ............................ <#act>
  [543] pushcons 32 ............................. <"crr">
  [545] pushsymb 442 ............................ <#fr>
  [548] pushzero ................................ <0>
  [549] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [551] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [552] pushsymb 433 ............................ <#act>
  [555] pushcons 31 ............................. <"wlk">
  [557] pushsymb 442 ............................ <#fr>
  [560] pushint8 1 .............................. <1>
  [562] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [564] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [565] pushsymb 433 ............................ <#act>
  [568] pushcons 3 .............................. <"std">
  [570] pushsymb 442 ............................ <#fr>
  [573] pushzero ................................ <0>
  [574] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [576] pushproplist ............................ <[#act: "std", #fr: 0]>
  [577] pushsymb 433 ............................ <#act>
  [580] pushcons 3 .............................. <"std">
  [582] pushsymb 442 ............................ <#fr>
  [585] pushzero ................................ <0>
  [586] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [588] pushproplist ............................ <[#act: "std", #fr: 0]>
  [589] pushsymb 433 ............................ <#act>
  [592] pushcons 3 .............................. <"std">
  [594] pushsymb 442 ............................ <#fr>
  [597] pushzero ................................ <0>
  [598] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [600] pushproplist ............................ <[#act: "std", #fr: 0]>
  [601] pushsymb 433 ............................ <#act>
  [604] pushcons 31 ............................. <"wlk">
  [606] pushsymb 442 ............................ <#fr>
  [609] pushint8 1 .............................. <1>
  [611] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [613] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [614] pushsymb 433 ............................ <#act>
  [617] pushcons 32 ............................. <"crr">
  [619] pushsymb 442 ............................ <#fr>
  [622] pushzero ................................ <0>
  [623] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [625] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [626] pushsymb 433 ............................ <#act>
  [629] pushcons 32 ............................. <"crr">
  [631] pushsymb 442 ............................ <#fr>
  [634] pushzero ................................ <0>
  [635] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [637] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [638] pusharglist 8 ........................... <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [640] pushlist ................................ <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [641] pusharglistnoret 3 ...................... <me.aDanceOverride[#lh], #prts, [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [643] objcall 443 ............................. me.aDanceOverride[#lh][#prts] = [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]
  [646] getparam 0 .............................. <me>
  [648] pushsymb 440 ............................ <#aDanceOverride>
  [651] pushsymb 335 ............................ <#lh>
  [654] pusharglist 3 ........................... <me, #aDanceOverride, #lh>
  [656] objcall 274 ............................. <me.aDanceOverride[#lh]>
  [659] pushsymb 444 ............................ <#locOff>
  [662] getlocal 0 .............................. <aLocOff>
  [664] pusharglistnoret 3 ...................... <me.aDanceOverride[#lh], #locOff, aLocOff>
  [666] objcall 443 ............................. me.aDanceOverride[#lh][#locOff] = aLocOff
  [669] getparam 0 .............................. <me>
  [671] pushsymb 440 ............................ <#aDanceOverride>
  [674] pushsymb 336 ............................ <#ls>
  [677] pusharglist 0 ........................... <[:]>
  [679] pushproplist ............................ <[:]>
  [680] pusharglistnoret 4 ...................... <me, #aDanceOverride, #ls, [:]>
  [682] objcall 276 ............................. me.aDanceOverride[#ls] = [:]
  [685] getparam 0 .............................. <me>
  [687] pushsymb 440 ............................ <#aDanceOverride>
  [690] pushsymb 336 ............................ <#ls>
  [693] pusharglist 3 ........................... <me, #aDanceOverride, #ls>
  [695] objcall 274 ............................. <me.aDanceOverride[#ls]>
  [698] pushsymb 441 ............................ <#prts>
  [701] pushsymb 433 ............................ <#act>
  [704] pushcons 32 ............................. <"crr">
  [706] pushsymb 442 ............................ <#fr>
  [709] pushzero ................................ <0>
  [710] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [712] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [713] pushsymb 433 ............................ <#act>
  [716] pushcons 31 ............................. <"wlk">
  [718] pushsymb 442 ............................ <#fr>
  [721] pushint8 1 .............................. <1>
  [723] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [725] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [726] pushsymb 433 ............................ <#act>
  [729] pushcons 3 .............................. <"std">
  [731] pushsymb 442 ............................ <#fr>
  [734] pushzero ................................ <0>
  [735] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [737] pushproplist ............................ <[#act: "std", #fr: 0]>
  [738] pushsymb 433 ............................ <#act>
  [741] pushcons 3 .............................. <"std">
  [743] pushsymb 442 ............................ <#fr>
  [746] pushzero ................................ <0>
  [747] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [749] pushproplist ............................ <[#act: "std", #fr: 0]>
  [750] pushsymb 433 ............................ <#act>
  [753] pushcons 3 .............................. <"std">
  [755] pushsymb 442 ............................ <#fr>
  [758] pushzero ................................ <0>
  [759] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [761] pushproplist ............................ <[#act: "std", #fr: 0]>
  [762] pushsymb 433 ............................ <#act>
  [765] pushcons 31 ............................. <"wlk">
  [767] pushsymb 442 ............................ <#fr>
  [770] pushint8 1 .............................. <1>
  [772] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [774] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [775] pushsymb 433 ............................ <#act>
  [778] pushcons 32 ............................. <"crr">
  [780] pushsymb 442 ............................ <#fr>
  [783] pushzero ................................ <0>
  [784] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [786] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [787] pushsymb 433 ............................ <#act>
  [790] pushcons 32 ............................. <"crr">
  [792] pushsymb 442 ............................ <#fr>
  [795] pushzero ................................ <0>
  [796] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [798] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [799] pusharglist 8 ........................... <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [801] pushlist ................................ <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [802] pusharglistnoret 3 ...................... <me.aDanceOverride[#ls], #prts, [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [804] objcall 443 ............................. me.aDanceOverride[#ls][#prts] = [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]
  [807] getparam 0 .............................. <me>
  [809] pushsymb 440 ............................ <#aDanceOverride>
  [812] pushsymb 336 ............................ <#ls>
  [815] pusharglist 3 ........................... <me, #aDanceOverride, #ls>
  [817] objcall 274 ............................. <me.aDanceOverride[#ls]>
  [820] pushsymb 444 ............................ <#locOff>
  [823] getlocal 0 .............................. <aLocOff>
  [825] pusharglistnoret 3 ...................... <me.aDanceOverride[#ls], #locOff, aLocOff>
  [827] objcall 443 ............................. me.aDanceOverride[#ls][#locOff] = aLocOff
  [830] getparam 0 .............................. <me>
  [832] pushsymb 440 ............................ <#aDanceOverride>
  [835] pushsymb 342 ............................ <#rh>
  [838] pusharglist 0 ........................... <[:]>
  [840] pushproplist ............................ <[:]>
  [841] pusharglistnoret 4 ...................... <me, #aDanceOverride, #rh, [:]>
  [843] objcall 276 ............................. me.aDanceOverride[#rh] = [:]
  [846] getparam 0 .............................. <me>
  [848] pushsymb 440 ............................ <#aDanceOverride>
  [851] pushsymb 342 ............................ <#rh>
  [854] pusharglist 3 ........................... <me, #aDanceOverride, #rh>
  [856] objcall 274 ............................. <me.aDanceOverride[#rh]>
  [859] pushsymb 441 ............................ <#prts>
  [862] pushsymb 433 ............................ <#act>
  [865] pushcons 3 .............................. <"std">
  [867] pushsymb 442 ............................ <#fr>
  [870] pushzero ................................ <0>
  [871] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [873] pushproplist ............................ <[#act: "std", #fr: 0]>
  [874] pushsymb 433 ............................ <#act>
  [877] pushcons 31 ............................. <"wlk">
  [879] pushsymb 442 ............................ <#fr>
  [882] pushint8 3 .............................. <3>
  [884] pusharglist 4 ........................... <[#act: "wlk", #fr: 3]>
  [886] pushproplist ............................ <[#act: "wlk", #fr: 3]>
  [887] pushsymb 433 ............................ <#act>
  [890] pushcons 32 ............................. <"crr">
  [892] pushsymb 442 ............................ <#fr>
  [895] pushzero ................................ <0>
  [896] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [898] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [899] pushsymb 433 ............................ <#act>
  [902] pushcons 32 ............................. <"crr">
  [904] pushsymb 442 ............................ <#fr>
  [907] pushzero ................................ <0>
  [908] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [910] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [911] pushsymb 433 ............................ <#act>
  [914] pushcons 32 ............................. <"crr">
  [916] pushsymb 442 ............................ <#fr>
  [919] pushzero ................................ <0>
  [920] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [922] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [923] pushsymb 433 ............................ <#act>
  [926] pushcons 31 ............................. <"wlk">
  [928] pushsymb 442 ............................ <#fr>
  [931] pushint8 3 .............................. <3>
  [933] pusharglist 4 ........................... <[#act: "wlk", #fr: 3]>
  [935] pushproplist ............................ <[#act: "wlk", #fr: 3]>
  [936] pushsymb 433 ............................ <#act>
  [939] pushcons 3 .............................. <"std">
  [941] pushsymb 442 ............................ <#fr>
  [944] pushzero ................................ <0>
  [945] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [947] pushproplist ............................ <[#act: "std", #fr: 0]>
  [948] pushsymb 433 ............................ <#act>
  [951] pushcons 3 .............................. <"std">
  [953] pushsymb 442 ............................ <#fr>
  [956] pushzero ................................ <0>
  [957] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [959] pushproplist ............................ <[#act: "std", #fr: 0]>
  [960] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [962] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [963] pusharglistnoret 3 ...................... <me.aDanceOverride[#rh], #prts, [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [965] objcall 443 ............................. me.aDanceOverride[#rh][#prts] = [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]
  [968] getparam 0 .............................. <me>
  [970] pushsymb 440 ............................ <#aDanceOverride>
  [973] pushsymb 342 ............................ <#rh>
  [976] pusharglist 3 ........................... <me, #aDanceOverride, #rh>
  [978] objcall 274 ............................. <me.aDanceOverride[#rh]>
  [981] pushsymb 444 ............................ <#locOff>
  [984] getlocal 0 .............................. <aLocOff>
  [986] pusharglistnoret 3 ...................... <me.aDanceOverride[#rh], #locOff, aLocOff>
  [988] objcall 443 ............................. me.aDanceOverride[#rh][#locOff] = aLocOff
  [991] getparam 0 .............................. <me>
  [993] pushsymb 440 ............................ <#aDanceOverride>
  [996] pushsymb 343 ............................ <#rs>
  [999] pusharglist 0 ........................... <[:]>
  [1001] pushproplist ........................... <[:]>
  [1002] pusharglistnoret 4 ..................... <me, #aDanceOverride, #rs, [:]>
  [1004] objcall 276 ............................ me.aDanceOverride[#rs] = [:]
  [1007] getparam 0 ............................. <me>
  [1009] pushsymb 440 ........................... <#aDanceOverride>
  [1012] pushsymb 343 ........................... <#rs>
  [1015] pusharglist 3 .......................... <me, #aDanceOverride, #rs>
  [1017] objcall 274 ............................ <me.aDanceOverride[#rs]>
  [1020] pushsymb 441 ........................... <#prts>
  [1023] pushsymb 433 ........................... <#act>
  [1026] pushcons 3 ............................. <"std">
  [1028] pushsymb 442 ........................... <#fr>
  [1031] pushzero ............................... <0>
  [1032] pusharglist 4 .......................... <[#act: "std", #fr: 0]>
  [1034] pushproplist ........................... <[#act: "std", #fr: 0]>
  [1035] pushsymb 433 ........................... <#act>
  [1038] pushcons 31 ............................ <"wlk">
  [1040] pushsymb 442 ........................... <#fr>
  [1043] pushint8 3 ............................. <3>
  [1045] pusharglist 4 .......................... <[#act: "wlk", #fr: 3]>
  [1047] pushproplist ........................... <[#act: "wlk", #fr: 3]>
  [1048] pushsymb 433 ........................... <#act>
  [1051] pushcons 32 ............................ <"crr">
  [1053] pushsymb 442 ........................... <#fr>
  [1056] pushzero ............................... <0>
  [1057] pusharglist 4 .......................... <[#act: "crr", #fr: 0]>
  [1059] pushproplist ........................... <[#act: "crr", #fr: 0]>
  [1060] pushsymb 433 ........................... <#act>
  [1063] pushcons 32 ............................ <"crr">
  [1065] pushsymb 442 ........................... <#fr>
  [1068] pushzero ............................... <0>
  [1069] pusharglist 4 .......................... <[#act: "crr", #fr: 0]>
  [1071] pushproplist ........................... <[#act: "crr", #fr: 0]>
  [1072] pushsymb 433 ........................... <#act>
  [1075] pushcons 32 ............................ <"crr">
  [1077] pushsymb 442 ........................... <#fr>
  [1080] pushzero ............................... <0>
  [1081] pusharglist 4 .......................... <[#act: "crr", #fr: 0]>
  [1083] pushproplist ........................... <[#act: "crr", #fr: 0]>
  [1084] pushsymb 433 ........................... <#act>
  [1087] pushcons 31 ............................ <"wlk">
  [1089] pushsymb 442 ........................... <#fr>
  [1092] pushint8 3 ............................. <3>
  [1094] pusharglist 4 .......................... <[#act: "wlk", #fr: 3]>
  [1096] pushproplist ........................... <[#act: "wlk", #fr: 3]>
  [1097] pushsymb 433 ........................... <#act>
  [1100] pushcons 3 ............................. <"std">
  [1102] pushsymb 442 ........................... <#fr>
  [1105] pushzero ............................... <0>
  [1106] pusharglist 4 .......................... <[#act: "std", #fr: 0]>
  [1108] pushproplist ........................... <[#act: "std", #fr: 0]>
  [1109] pushsymb 433 ........................... <#act>
  [1112] pushcons 3 ............................. <"std">
  [1114] pushsymb 442 ........................... <#fr>
  [1117] pushzero ............................... <0>
  [1118] pusharglist 4 .......................... <[#act: "std", #fr: 0]>
  [1120] pushproplist ........................... <[#act: "std", #fr: 0]>
  [1121] pusharglist 8 .......................... <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [1123] pushlist ............................... <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [1124] pusharglistnoret 3 ..................... <me.aDanceOverride[#rs], #prts, [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [1126] objcall 443 ............................ me.aDanceOverride[#rs][#prts] = [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]
  [1129] getparam 0 ............................. <me>
  [1131] pushsymb 440 ........................... <#aDanceOverride>
  [1134] pushsymb 343 ........................... <#rs>
  [1137] pusharglist 3 .......................... <me, #aDanceOverride, #rs>
  [1139] objcall 274 ............................ <me.aDanceOverride[#rs]>
  [1142] pushsymb 444 ........................... <#locOff>
  [1145] getlocal 0 ............................. <aLocOff>
  [1147] pusharglistnoret 3 ..................... <me.aDanceOverride[#rs], #locOff, aLocOff>
  [1149] objcall 443 ............................ me.aDanceOverride[#rs][#locOff] = aLocOff
  [1152] getparam 0 ............................. <me>
  [1154] pushsymb 440 ........................... <#aDanceOverride>
  [1157] pushsymb 340 ........................... <#ch>
  [1160] pusharglist 0 .......................... <[:]>
  [1162] pushproplist ........................... <[:]>
  [1163] pusharglistnoret 4 ..................... <me, #aDanceOverride, #ch, [:]>
  [1165] objcall 276 ............................ me.aDanceOverride[#ch] = [:]
  [1168] getparam 0 ............................. <me>
  [1170] pushsymb 440 ........................... <#aDanceOverride>
  [1173] pushsymb 340 ........................... <#ch>
  [1176] pusharglist 3 .......................... <me, #aDanceOverride, #ch>
  [1178] objcall 274 ............................ <me.aDanceOverride[#ch]>
  [1181] pushsymb 444 ........................... <#locOff>
  [1184] getlocal 0 ............................. <aLocOff>
  [1186] pusharglistnoret 3 ..................... <me.aDanceOverride[#ch], #locOff, aLocOff>
  [1188] objcall 443 ............................ me.aDanceOverride[#ch][#locOff] = aLocOff
  [1191] getparam 0 ............................. <me>
  [1193] pushsymb 440 ........................... <#aDanceOverride>
  [1196] pushsymb 344 ........................... <#hd>
  [1199] pusharglist 0 .......................... <[:]>
  [1201] pushproplist ........................... <[:]>
  [1202] pusharglistnoret 4 ..................... <me, #aDanceOverride, #hd, [:]>
  [1204] objcall 276 ............................ me.aDanceOverride[#hd] = [:]
  [1207] getparam 0 ............................. <me>
  [1209] pushsymb 440 ........................... <#aDanceOverride>
  [1212] pushsymb 344 ........................... <#hd>
  [1215] pusharglist 3 .......................... <me, #aDanceOverride, #hd>
  [1217] objcall 274 ............................ <me.aDanceOverride[#hd]>
  [1220] pushsymb 444 ........................... <#locOff>
  [1223] getlocal 0 ............................. <aLocOff>
  [1225] pusharglistnoret 3 ..................... <me.aDanceOverride[#hd], #locOff, aLocOff>
  [1227] objcall 443 ............................ me.aDanceOverride[#hd][#locOff] = aLocOff
  [1230] getparam 0 ............................. <me>
  [1232] pushsymb 440 ........................... <#aDanceOverride>
  [1235] pushsymb 344 ........................... <#hd>
  [1238] pusharglist 3 .......................... <me, #aDanceOverride, #hd>
  [1240] objcall 274 ............................ <me.aDanceOverride[#hd]>
  [1243] pushsymb 438 ........................... <#dirOff>
  [1246] getlocal 1 ............................. <aDirOff>
  [1248] pusharglistnoret 3 ..................... <me.aDanceOverride[#hd], #dirOff, aDirOff>
  [1250] objcall 443 ............................ me.aDanceOverride[#hd][#dirOff] = aDirOff
  [1253] getparam 0 ............................. <me>
  [1255] pushsymb 440 ........................... <#aDanceOverride>
  [1258] pushsymb 345 ........................... <#fc>
  [1261] pusharglist 0 .......................... <[:]>
  [1263] pushproplist ........................... <[:]>
  [1264] pusharglistnoret 4 ..................... <me, #aDanceOverride, #fc, [:]>
  [1266] objcall 276 ............................ me.aDanceOverride[#fc] = [:]
  [1269] getparam 0 ............................. <me>
  [1271] pushsymb 440 ........................... <#aDanceOverride>
  [1274] pushsymb 345 ........................... <#fc>
  [1277] pusharglist 3 .......................... <me, #aDanceOverride, #fc>
  [1279] objcall 274 ............................ <me.aDanceOverride[#fc]>
  [1282] pushsymb 444 ........................... <#locOff>
  [1285] getlocal 0 ............................. <aLocOff>
  [1287] pusharglistnoret 3 ..................... <me.aDanceOverride[#fc], #locOff, aLocOff>
  [1289] objcall 443 ............................ me.aDanceOverride[#fc][#locOff] = aLocOff
  [1292] getparam 0 ............................. <me>
  [1294] pushsymb 440 ........................... <#aDanceOverride>
  [1297] pushsymb 345 ........................... <#fc>
  [1300] pusharglist 3 .......................... <me, #aDanceOverride, #fc>
  [1302] objcall 274 ............................ <me.aDanceOverride[#fc]>
  [1305] pushsymb 438 ........................... <#dirOff>
  [1308] getlocal 1 ............................. <aDirOff>
  [1310] pusharglistnoret 3 ..................... <me.aDanceOverride[#fc], #dirOff, aDirOff>
  [1312] objcall 443 ............................ me.aDanceOverride[#fc][#dirOff] = aDirOff
  [1315] getparam 0 ............................. <me>
  [1317] pushsymb 440 ........................... <#aDanceOverride>
  [1320] pushsymb 346 ........................... <#ey>
  [1323] pusharglist 0 .......................... <[:]>
  [1325] pushproplist ........................... <[:]>
  [1326] pusharglistnoret 4 ..................... <me, #aDanceOverride, #ey, [:]>
  [1328] objcall 276 ............................ me.aDanceOverride[#ey] = [:]
  [1331] getparam 0 ............................. <me>
  [1333] pushsymb 440 ........................... <#aDanceOverride>
  [1336] pushsymb 346 ........................... <#ey>
  [1339] pusharglist 3 .......................... <me, #aDanceOverride, #ey>
  [1341] objcall 274 ............................ <me.aDanceOverride[#ey]>
  [1344] pushsymb 444 ........................... <#locOff>
  [1347] getlocal 0 ............................. <aLocOff>
  [1349] pusharglistnoret 3 ..................... <me.aDanceOverride[#ey], #locOff, aLocOff>
  [1351] objcall 443 ............................ me.aDanceOverride[#ey][#locOff] = aLocOff
  [1354] getparam 0 ............................. <me>
  [1356] pushsymb 440 ........................... <#aDanceOverride>
  [1359] pushsymb 346 ........................... <#ey>
  [1362] pusharglist 3 .......................... <me, #aDanceOverride, #ey>
  [1364] objcall 274 ............................ <me.aDanceOverride[#ey]>
  [1367] pushsymb 438 ........................... <#dirOff>
  [1370] getlocal 1 ............................. <aDirOff>
  [1372] pusharglistnoret 3 ..................... <me.aDanceOverride[#ey], #dirOff, aDirOff>
  [1374] objcall 443 ............................ me.aDanceOverride[#ey][#dirOff] = aDirOff
  [1377] getparam 0 ............................. <me>
  [1379] pushsymb 440 ........................... <#aDanceOverride>
  [1382] pushsymb 347 ........................... <#hr>
  [1385] pusharglist 0 .......................... <[:]>
  [1387] pushproplist ........................... <[:]>
  [1388] pusharglistnoret 4 ..................... <me, #aDanceOverride, #hr, [:]>
  [1390] objcall 276 ............................ me.aDanceOverride[#hr] = [:]
  [1393] getparam 0 ............................. <me>
  [1395] pushsymb 440 ........................... <#aDanceOverride>
  [1398] pushsymb 347 ........................... <#hr>
  [1401] pusharglist 3 .......................... <me, #aDanceOverride, #hr>
  [1403] objcall 274 ............................ <me.aDanceOverride[#hr]>
  [1406] pushsymb 444 ........................... <#locOff>
  [1409] getlocal 0 ............................. <aLocOff>
  [1411] pusharglistnoret 3 ..................... <me.aDanceOverride[#hr], #locOff, aLocOff>
  [1413] objcall 443 ............................ me.aDanceOverride[#hr][#locOff] = aLocOff
  [1416] getparam 0 ............................. <me>
  [1418] pushsymb 440 ........................... <#aDanceOverride>
  [1421] pushsymb 347 ........................... <#hr>
  [1424] pusharglist 3 .......................... <me, #aDanceOverride, #hr>
  [1426] objcall 274 ............................ <me.aDanceOverride[#hr]>
  [1429] pushsymb 438 ........................... <#dirOff>
  [1432] getlocal 1 ............................. <aDirOff>
  [1434] pusharglistnoret 3 ..................... <me.aDanceOverride[#hr], #dirOff, aDirOff>
  [1436] objcall 443 ............................ me.aDanceOverride[#hr][#dirOff] = aDirOff
  [1439] getparam 0 ............................. <me>
  [1441] pushsymb 440 ........................... <#aDanceOverride>
  [1444] pushsymb 341 ........................... <#ri>
  [1447] pusharglist 0 .......................... <[:]>
  [1449] pushproplist ........................... <[:]>
  [1450] pusharglistnoret 4 ..................... <me, #aDanceOverride, #ri, [:]>
  [1452] objcall 276 ............................ me.aDanceOverride[#ri] = [:]
  [1455] getparam 0 ............................. <me>
  [1457] pushsymb 440 ........................... <#aDanceOverride>
  [1460] pushsymb 341 ........................... <#ri>
  [1463] pusharglist 3 .......................... <me, #aDanceOverride, #ri>
  [1465] objcall 274 ............................ <me.aDanceOverride[#ri]>
  [1468] pushsymb 444 ........................... <#locOff>
  [1471] getlocal 0 ............................. <aLocOff>
  [1473] pusharglistnoret 3 ..................... <me.aDanceOverride[#ri], #locOff, aLocOff>
  [1475] objcall 443 ............................ me.aDanceOverride[#ri][#locOff] = aLocOff
  [1478] ret
end

on setDirectionMap me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pushint8 6 .............................. <6>
  [  5] pushint8 1 .............................. <1>
  [  7] pushint8 5 .............................. <5>
  [  9] pushint8 2 .............................. <2>
  [ 11] pushint8 4 .............................. <4>
  [ 13] pushint8 3 .............................. <3>
  [ 15] pushint8 7 .............................. <7>
  [ 17] pushint8 4 .............................. <4>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pushint8 5 .............................. <5>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pushint8 6 .............................. <6>
  [ 27] pushzero ................................ <0>
  [ 28] pushint8 7 .............................. <7>
  [ 30] pushint8 3 .............................. <3>
  [ 32] pusharglist 16 .......................... <[0: 6, 1: 5, 2: 4, 3: 7, 4: 2, 5: 1, 6: 0, 7: 3]>
  [ 34] pushproplist ............................ <[0: 6, 1: 5, 2: 4, 3: 7, 4: 2, 5: 1, 6: 0, 7: 3]>
  [ 35] setobjprop 447 .......................... me.aDirectionMap = [0: 6, 1: 5, 2: 4, 3: 7, 4: 2, 5: 1, 6: 0, 7: 3]
  [ 38] ret
end

on setDrawOrder me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 295 .......................... <me.iDirection>
  [  5] peek 0 .................................. case me.iDirection of
  [  7] pushint8 2 .............................. <2>
  [  9] eq
  [ 10] jmpifz [ 63] ............................ (case) 2:
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 337 ............................ <#bd>
  [ 18] pushsymb 338 ............................ <#sh>
  [ 21] pushsymb 339 ............................ <#lg>
  [ 24] pushsymb 335 ............................ <#lh>
  [ 27] pushsymb 336 ............................ <#ls>
  [ 30] pushsymb 340 ............................ <#ch>
  [ 33] pushsymb 344 ............................ <#hd>
  [ 36] pushsymb 345 ............................ <#fc>
  [ 39] pushsymb 346 ............................ <#ey>
  [ 42] pushsymb 341 ............................ <#ri>
  [ 45] pushsymb 342 ............................ <#rh>
  [ 48] pushsymb 343 ............................ <#rs>
  [ 51] pushsymb 347 ............................ <#hr>
  [ 54] pusharglist 13 .......................... <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [ 56] pushlist ................................ <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [ 57] setobjprop 448 .......................... me.aDrawOrder = [#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [ 60] jmp [259]
  [ 63] peek 0
  [ 65] pushint8 3 .............................. <3>
  [ 67] eq
  [ 68] jmpifz [121] ............................ (case) 3:
  [ 71] getparam 0 .............................. <me>
  [ 73] pushsymb 337 ............................ <#bd>
  [ 76] pushsymb 338 ............................ <#sh>
  [ 79] pushsymb 339 ............................ <#lg>
  [ 82] pushsymb 340 ............................ <#ch>
  [ 85] pushsymb 335 ............................ <#lh>
  [ 88] pushsymb 336 ............................ <#ls>
  [ 91] pushsymb 344 ............................ <#hd>
  [ 94] pushsymb 345 ............................ <#fc>
  [ 97] pushsymb 346 ............................ <#ey>
  [100] pushsymb 341 ............................ <#ri>
  [103] pushsymb 342 ............................ <#rh>
  [106] pushsymb 343 ............................ <#rs>
  [109] pushsymb 347 ............................ <#hr>
  [112] pusharglist 13 .......................... <[#bd, #sh, #lg, #ch, #lh, #ls, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [114] pushlist ................................ <[#bd, #sh, #lg, #ch, #lh, #ls, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [115] setobjprop 448 .......................... me.aDrawOrder = [#bd, #sh, #lg, #ch, #lh, #ls, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [118] jmp [259]
  [121] peek 0
  [123] pushint8 4 .............................. <4>
  [125] eq
  [126] jmpifz [179] ............................ (case) 4:
  [129] getparam 0 .............................. <me>
  [131] pushsymb 337 ............................ <#bd>
  [134] pushsymb 338 ............................ <#sh>
  [137] pushsymb 339 ............................ <#lg>
  [140] pushsymb 335 ............................ <#lh>
  [143] pushsymb 336 ............................ <#ls>
  [146] pushsymb 340 ............................ <#ch>
  [149] pushsymb 344 ............................ <#hd>
  [152] pushsymb 345 ............................ <#fc>
  [155] pushsymb 346 ............................ <#ey>
  [158] pushsymb 341 ............................ <#ri>
  [161] pushsymb 342 ............................ <#rh>
  [164] pushsymb 343 ............................ <#rs>
  [167] pushsymb 347 ............................ <#hr>
  [170] pusharglist 13 .......................... <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [172] pushlist ................................ <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [173] setobjprop 448 .......................... me.aDrawOrder = [#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [176] jmp [259]
  [179] peek 0
  [181] pushint8 6 .............................. <6>
  [183] nteq
  [184] jmpifz [202] ............................ (case) 6, ...
  [187] peek 0
  [189] pushint8 7 .............................. <7>
  [191] nteq
  [192] jmpifz [202] ............................ (case) ..., 7, ...
  [195] peek 0
  [197] pushzero ................................ <0>
  [198] eq
  [199] jmpifz [249] ............................ (case) ..., 0:
  [202] getparam 0 .............................. <me>
  [204] pushsymb 335 ............................ <#lh>
  [207] pushsymb 336 ............................ <#ls>
  [210] pushsymb 337 ............................ <#bd>
  [213] pushsymb 338 ............................ <#sh>
  [216] pushsymb 339 ............................ <#lg>
  [219] pushsymb 340 ............................ <#ch>
  [222] pushsymb 341 ............................ <#ri>
  [225] pushsymb 342 ............................ <#rh>
  [228] pushsymb 343 ............................ <#rs>
  [231] pushsymb 344 ............................ <#hd>
  [234] pushsymb 347 ............................ <#hr>
  [237] pushsymb 348 ............................ <#ht>
  [240] pusharglist 12 .......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]>
  [242] pushlist ................................ <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]>
  [243] setobjprop 448 .......................... me.aDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]
  [246] jmp [259] ............................... (case) otherwise:
  [249] getparam 0 .............................. <me>
  [251] getparam 0 .............................. <me>
  [253] getobjprop 349 .......................... <me.aDefDrawOrder>
  [256] setobjprop 448 .......................... me.aDrawOrder = me.aDefDrawOrder
  [259] pop 1 ................................... end case
  [261] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 311 .......................... <me.iFPS>
  [  5] pushzero ................................ <0>
  [  6] gt ...................................... <me.iFPS > 0>
  [  7] jmpifz [ 44] ............................ if me.iFPS > 0 then
  [ 10] getmovieprop 281 ........................ <the milliSeconds>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 312 .......................... <me.iFPSTimer>
  [ 18] sub ..................................... <the milliSeconds - me.iFPSTimer>
  [ 19] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iFPSTimer
  [ 21] getlocal 0 .............................. <iElapsedTime>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 313 .......................... <me.iFPSTimerLength>
  [ 28] gteq .................................... <iElapsedTime >= me.iFPSTimerLength>
  [ 29] jmpifz [ 44] ............................ if iElapsedTime >= me.iFPSTimerLength then
  [ 32] getparam 0 .............................. <me>
  [ 34] pusharglistnoret 1 ...................... <me>
  [ 36] objcall 196 ............................. me.doFrameEvent()
  [ 38] pushint8 1 .............................. <1>
  [ 40] pusharglistnoret 1 ...................... <1>
  [ 42] extcall 63 .............................. return 1
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 1 ...................... <0>
  [ 47] extcall 63 .............................. return 0
  [ 49] ret
end

on pauseMachine me, bPauseValue
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bPauseValue>
  [  4] setobjprop 296 .......................... me.bPaused = bPauseValue
  [  7] ret
end

on displayDrawStatus me
  [  0] pushcons 4 .............................. <EMPTY>
  [  2] setlocal 0 .............................. sStatus = EMPTY
  [  4] getlocal 0 .............................. <sStatus>
  [  6] pushcons 33 ............................. <"DRAW TIME: ">
  [  8] joinstr ................................. <sStatus & "DRAW TIME: ">
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 451 .......................... <me.iDrawTime>
  [ 14] joinstr ................................. <sStatus & "DRAW TIME: " & me.iDrawTime>
  [ 15] pushcons 34 ............................. <RETURN>
  [ 17] joinstr ................................. <sStatus & "DRAW TIME: " & me.iDrawTime & RETURN>
  [ 18] setlocal 0 .............................. sStatus = sStatus & "DRAW TIME: " & me.iDrawTime & RETURN
  [ 20] getlocal 0 .............................. <sStatus>
  [ 22] pushcons 35 ............................. <"DRAW COUNT: ">
  [ 24] joinstr ................................. <sStatus & "DRAW COUNT: ">
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 452 .......................... <me.iDrawCount>
  [ 30] joinstr ................................. <sStatus & "DRAW COUNT: " & me.iDrawCount>
  [ 31] pushcons 34 ............................. <RETURN>
  [ 33] joinstr ................................. <sStatus & "DRAW COUNT: " & me.iDrawCount & RETURN>
  [ 34] setlocal 0 .............................. sStatus = sStatus & "DRAW COUNT: " & me.iDrawCount & RETURN
  [ 36] getlocal 0 .............................. <sStatus>
  [ 38] pushcons 36 ............................. <"DISPLAY TIME: ">
  [ 40] joinstr ................................. <sStatus & "DISPLAY TIME: ">
  [ 41] getparam 0 .............................. <me>
  [ 43] getobjprop 453 .......................... <me.iDisplayTime>
  [ 46] joinstr ................................. <sStatus & "DISPLAY TIME: " & me.iDisplayTime>
  [ 47] pushcons 34 ............................. <RETURN>
  [ 49] joinstr ................................. <sStatus & "DISPLAY TIME: " & me.iDisplayTime & RETURN>
  [ 50] setlocal 0 .............................. sStatus = sStatus & "DISPLAY TIME: " & me.iDisplayTime & RETURN
  [ 52] getlocal 0 .............................. <sStatus>
  [ 54] pushcons 37 ............................. <"DISPLAY COUNT: ">
  [ 56] joinstr ................................. <sStatus & "DISPLAY COUNT: ">
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 454 .......................... <me.iDisplayCount>
  [ 62] joinstr ................................. <sStatus & "DISPLAY COUNT: " & me.iDisplayCount>
  [ 63] pushcons 34 ............................. <RETURN>
  [ 65] joinstr ................................. <sStatus & "DISPLAY COUNT: " & me.iDisplayCount & RETURN>
  [ 66] setlocal 0 .............................. sStatus = sStatus & "DISPLAY COUNT: " & me.iDisplayCount & RETURN
  [ 68] getlocal 0 .............................. <sStatus>
  [ 70] pushcons 38 ............................. <"FRAME TIME: ">
  [ 72] joinstr ................................. <sStatus & "FRAME TIME: ">
  [ 73] getparam 0 .............................. <me>
  [ 75] getobjprop 455 .......................... <me.iFrameTime>
  [ 78] joinstr ................................. <sStatus & "FRAME TIME: " & me.iFrameTime>
  [ 79] pushcons 34 ............................. <RETURN>
  [ 81] joinstr ................................. <sStatus & "FRAME TIME: " & me.iFrameTime & RETURN>
  [ 82] setlocal 0 .............................. sStatus = sStatus & "FRAME TIME: " & me.iFrameTime & RETURN
  [ 84] getlocal 0 .............................. <sStatus>
  [ 86] pushcons 39 ............................. <"FRAME COUNT: ">
  [ 88] joinstr ................................. <sStatus & "FRAME COUNT: ">
  [ 89] getparam 0 .............................. <me>
  [ 91] getobjprop 456 .......................... <me.iFrameCount>
  [ 94] joinstr ................................. <sStatus & "FRAME COUNT: " & me.iFrameCount>
  [ 95] pushcons 34 ............................. <RETURN>
  [ 97] joinstr ................................. <sStatus & "FRAME COUNT: " & me.iFrameCount & RETURN>
  [ 98] setlocal 0 .............................. sStatus = sStatus & "FRAME COUNT: " & me.iFrameCount & RETURN
  [100] pushcons 40 ............................. <"DrawStatus">
  [102] pusharglist 1 ........................... <"DrawStatus">
  [104] extcall 142 ............................. <member("DrawStatus")>
  [106] getlocal 0 .............................. <sStatus>
  [108] setobjprop 430 .......................... member("DrawStatus").text = sStatus
  [111] ret
end

on setUserCommand me, whichKey
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 296 .......................... <me.bPaused>
  [  5] not ..................................... <not me.bPaused>
  [  6] jmpifz [439] ............................ if not me.bPaused then
  [  9] pushint8 126 ............................ <126>
  [ 11] pushint8 1 .............................. <1>
  [ 13] inv ..................................... <-1>
  [ 14] pushint8 124 ............................ <124>
  [ 16] pushint8 1 .............................. <1>
  [ 18] inv ..................................... <-1>
  [ 19] pushint8 125 ............................ <125>
  [ 21] pushint8 1 .............................. <1>
  [ 23] inv ..................................... <-1>
  [ 24] pushint8 123 ............................ <123>
  [ 26] pusharglist 7 ........................... <[126, -1, 124, -1, 125, -1, 123]>
  [ 28] pushlist ................................ <[126, -1, 124, -1, 125, -1, 123]>
  [ 29] setlocal 0 .............................. ks = [126, -1, 124, -1, 125, -1, 123]
  [ 31] getlocal 0 .............................. <ks>
  [ 33] pusharglist 0 ........................... <>
  [ 35] thebuiltin 458 .......................... <the keyCode>
  [ 38] pusharglist 2 ........................... <ks, the keyCode>
  [ 40] objcall 130 ............................. <ks.getPos(the keyCode)>
  [ 42] pushint8 1 .............................. <1>
  [ 44] sub ..................................... <ks.getPos(the keyCode) - 1>
  [ 45] setlocal 1 .............................. newdir = ks.getPos(the keyCode) - 1
  [ 47] getlocal 0 .............................. <ks>
  [ 49] getparam 1 .............................. <whichKey>
  [ 51] pusharglist 2 ........................... <ks, whichKey>
  [ 53] objcall 130 ............................. <ks.getPos(whichKey)>
  [ 55] pushint8 1 .............................. <1>
  [ 57] sub ..................................... <ks.getPos(whichKey) - 1>
  [ 58] setlocal 1 .............................. newdir = ks.getPos(whichKey) - 1
  [ 60] getlocal 1 .............................. <newdir>
  [ 62] pushint8 1 .............................. <1>
  [ 64] inv ..................................... <-1>
  [ 65] nteq .................................... <newdir <> -1>
  [ 66] jmpifz [439] ............................ if newdir <> -1 then
  [ 69] getlocal 1 .............................. <newdir>
  [ 71] pushint8 2 .............................. <2>
  [ 73] eq ...................................... <newdir = 2>
  [ 74] getlocal 1 .............................. <newdir>
  [ 76] pushint8 6 .............................. <6>
  [ 78] eq ...................................... <newdir = 6>
  [ 79] or ...................................... <(newdir = 2) or (newdir = 6)>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 265 .......................... <me.bOnSled>
  [ 85] and ..................................... <((newdir = 2) or (newdir = 6)) and me.bOnSled>
  [ 86] not ..................................... <not (((newdir = 2) or (newdir = 6)) and me.bOnSled)>
  [ 87] jmpifz [256] ............................ if not (((newdir = 2) or (newdir = 6)) and me.bOnSled) then
  [ 90] getparam 0 .............................. <me>
  [ 92] getlocal 1 .............................. <newdir>
  [ 94] setobjprop 295 .......................... me.iDirection = newdir
  [ 97] getparam 0 .............................. <me>
  [ 99] pushint8 1 .............................. <1>
  [101] setobjprop 459 .......................... me.bMove = 1
  [104] getparam 0 .............................. <me>
  [106] pushint8 1 .............................. <1>
  [108] setobjprop 269 .......................... me.iStepsTravelled = 1
  [111] getparam 0 .............................. <me>
  [113] getparam 0 .............................. <me>
  [115] pusharglist 1 ........................... <me>
  [117] objcall 211 ............................. <me.getCurrentSquare()>
  [119] getobjprop 460 .......................... <me.getCurrentSquare().iRow>
  [122] getparam 0 .............................. <me>
  [124] pusharglist 1 ........................... <me>
  [126] objcall 211 ............................. <me.getCurrentSquare()>
  [128] getobjprop 461 .......................... <me.getCurrentSquare().iCol>
  [131] pusharglist 2 ........................... <me.getCurrentSquare().iRow, me.getCurrentSquare().iCol>
  [133] extcall 132 ............................. <point(me.getCurrentSquare().iRow, me.getCurrentSquare().iCol)>
  [135] setobjprop 462 .......................... me.pCurrentSquareLoc = point(me.getCurrentSquare().iRow, me.getCurrentSquare().iCol)
  [138] getparam 0 .............................. <me>
  [140] getparam 0 .............................. <me>
  [142] getobjprop 462 .......................... <me.pCurrentSquareLoc>
  [145] getparam 0 .............................. <me>
  [147] getparam 0 .............................. <me>
  [149] getobjprop 295 .......................... <me.iDirection>
  [152] pusharglist 2 ........................... <me, me.iDirection>
  [154] objcall 166 ............................. <me.getDirectionPoint(me.iDirection)>
  [156] add ..................................... <me.pCurrentSquareLoc + me.getDirectionPoint(me.iDirection)>
  [157] setobjprop 463 .......................... me.pNextSquareLoc = me.pCurrentSquareLoc + me.getDirectionPoint(me.iDirection)
  [160] getglobal 464 ........................... <oMapObject>
  [163] pushsymb 465 ............................ <#oGridVals>
  [166] getparam 0 .............................. <me>
  [168] pushsymb 463 ............................ <#pNextSquareLoc>
  [171] pushint8 1 .............................. <1>
  [173] pusharglist 3 ........................... <me, #pNextSquareLoc, 1>
  [175] objcall 54 .............................. <me.pNextSquareLoc[1]>
  [177] pusharglist 3 ........................... <oMapObject, #oGridVals, me.pNextSquareLoc[1]>
  [179] objcall 274 ............................. <oMapObject.oGridVals[me.pNextSquareLoc[1]]>
  [182] getparam 0 .............................. <me>
  [184] pushsymb 463 ............................ <#pNextSquareLoc>
  [187] pushint8 2 .............................. <2>
  [189] pusharglist 3 ........................... <me, #pNextSquareLoc, 2>
  [191] objcall 54 .............................. <me.pNextSquareLoc[2]>
  [193] pusharglist 2 ........................... <oMapObject.oGridVals[me.pNextSquareLoc[1]], me.pNextSquareLoc[2]>
  [195] objcall 86 .............................. <oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]]>
  [197] setlocal 2 .............................. thisGridVal = oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]]
  [199] getlocal 2 .............................. <thisGridVal>
  [201] getglobal 466 ........................... <iSledTrackValue>
  [204] eq ...................................... <thisGridVal = iSledTrackValue>
  [205] getlocal 2 .............................. <thisGridVal>
  [207] pushint8 1 .............................. <1>
  [209] inv ..................................... <-1>
  [210] eq ...................................... <thisGridVal = -1>
  [211] or ...................................... <(thisGridVal = iSledTrackValue) or (thisGridVal = -1)>
  [212] jmpifz [228] ............................ if (thisGridVal = iSledTrackValue) or (thisGridVal = -1) then / else
  [215] getparam 0 .............................. <me>
  [217] getparam 0 .............................. <me>
  [219] getobjprop 467 .......................... <me.oCurrentSquare>
  [222] setobjprop 362 .......................... me.oNextSquare = me.oCurrentSquare
  [225] jmp [256]
  [228] getparam 0 .............................. <me>
  [230] getparam 0 .............................. <me>
  [232] pushsymb 463 ............................ <#pNextSquareLoc>
  [235] pushint8 1 .............................. <1>
  [237] pusharglist 3 ........................... <me, #pNextSquareLoc, 1>
  [239] objcall 54 .............................. <me.pNextSquareLoc[1]>
  [241] getparam 0 .............................. <me>
  [243] pushsymb 463 ............................ <#pNextSquareLoc>
  [246] pushint8 2 .............................. <2>
  [248] pusharglist 3 ........................... <me, #pNextSquareLoc, 2>
  [250] objcall 54 .............................. <me.pNextSquareLoc[2]>
  [252] pusharglistnoret 3 ...................... <me, me.pNextSquareLoc[1], me.pNextSquareLoc[2]>
  [254] objcall 210 ............................. me.setNextSquare(me.pNextSquareLoc[1], me.pNextSquareLoc[2])
  [256] getparam 0 .............................. <me>
  [258] getobjprop 265 .......................... <me.bOnSled>
  [261] getlocal 1 .............................. <newdir>
  [263] pushzero ................................ <0>
  [264] eq ...................................... <newdir = 0>
  [265] getlocal 1 .............................. <newdir>
  [267] pushint8 4 .............................. <4>
  [269] eq ...................................... <newdir = 4>
  [270] or ...................................... <(newdir = 0) or (newdir = 4)>
  [271] and ..................................... <me.bOnSled and ((newdir = 0) or (newdir = 4))>
  [272] jmpifz [281] ............................ if me.bOnSled and ((newdir = 0) or (newdir = 4)) then
  [275] getparam 0 .............................. <me>
  [277] pusharglistnoret 1 ...................... <me>
  [279] objcall 170 ............................. me.exitSled()
  [281] pushint8 1 .............................. <1>
  [283] setlocal 3
  [285] getlocal 3
  [287] getparam 0 .............................. <me>
  [289] pushsymb 267 ............................ <#aSleds>
  [292] pusharglist 2 ........................... <me, #aSleds>
  [294] objcall 88 .............................. <me.aSleds.count>
  [296] lteq
  [297] jmpifz [439] ............................ repeat with i = 1 to me.aSleds.count
  [300] getparam 0 .............................. <me>
  [302] getchainedprop 463 ...................... <me.pNextSquareLoc>
  [305] getobjprop 468 .......................... <me.pNextSquareLoc.locH>
  [308] getparam 0 .............................. <me>
  [310] pushsymb 267 ............................ <#aSleds>
  [313] getlocal 3 .............................. <i>
  [315] pusharglist 3 ........................... <me, #aSleds, i>
  [317] objcall 274 ............................. <me.aSleds[i]>
  [320] getobjprop 460 .......................... <me.aSleds[i].iRow>
  [323] eq ...................................... <me.pNextSquareLoc.locH = me.aSleds[i].iRow>
  [324] getparam 0 .............................. <me>
  [326] getchainedprop 463 ...................... <me.pNextSquareLoc>
  [329] getobjprop 468 .......................... <me.pNextSquareLoc.locH>
  [332] getparam 0 .............................. <me>
  [334] pushsymb 267 ............................ <#aSleds>
  [337] getlocal 3 .............................. <i>
  [339] pusharglist 3 ........................... <me, #aSleds, i>
  [341] objcall 274 ............................. <me.aSleds[i]>
  [344] getobjprop 460 .......................... <me.aSleds[i].iRow>
  [347] getparam 0 .............................. <me>
  [349] pushsymb 267 ............................ <#aSleds>
  [352] getlocal 3 .............................. <i>
  [354] pusharglist 3 ........................... <me, #aSleds, i>
  [356] objcall 274 ............................. <me.aSleds[i]>
  [359] getobjprop 295 .......................... <me.aSleds[i].iDirection>
  [362] add ..................................... <me.aSleds[i].iRow + me.aSleds[i].iDirection>
  [363] eq ...................................... <me.pNextSquareLoc.locH = (me.aSleds[i].iRow + me.aSleds[i].iDirection)>
  [364] or ...................................... <(me.pNextSquareLoc.locH = me.aSleds[i].iRow) or (me.pNextSquareLoc.locH = (me.aSleds[i].iRow + me.aSleds[i].iDirection))>
  [365] getglobal 464 ........................... <oMapObject>
  [368] pushsymb 465 ............................ <#oGridVals>
  [371] getparam 0 .............................. <me>
  [373] pushsymb 463 ............................ <#pNextSquareLoc>
  [376] pushint8 1 .............................. <1>
  [378] pusharglist 3 ........................... <me, #pNextSquareLoc, 1>
  [380] objcall 54 .............................. <me.pNextSquareLoc[1]>
  [382] pusharglist 3 ........................... <oMapObject, #oGridVals, me.pNextSquareLoc[1]>
  [384] objcall 274 ............................. <oMapObject.oGridVals[me.pNextSquareLoc[1]]>
  [387] getparam 0 .............................. <me>
  [389] pushsymb 463 ............................ <#pNextSquareLoc>
  [392] pushint8 2 .............................. <2>
  [394] pusharglist 3 ........................... <me, #pNextSquareLoc, 2>
  [396] objcall 54 .............................. <me.pNextSquareLoc[2]>
  [398] pusharglist 2 ........................... <oMapObject.oGridVals[me.pNextSquareLoc[1]], me.pNextSquareLoc[2]>
  [400] objcall 86 .............................. <oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]]>
  [402] getglobal 466 ........................... <iSledTrackValue>
  [405] pushint8 1 .............................. <1>
  [407] add ..................................... <iSledTrackValue + 1>
  [408] eq ...................................... <oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]] = (iSledTrackValue + 1)>
  [409] and ..................................... <((me.pNextSquareLoc.locH = me.aSleds[i].iRow) or (me.pNextSquareLoc.locH = (me.aSleds[i].iRow + me.aSleds[i].iDirection))) and (oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]] = (iSledTrackValue + 1))>
  [410] jmpifz [430] ............................ if ((me.pNextSquareLoc.locH = me.aSleds[i].iRow) or (me.pNextSquareLoc.locH = (me.aSleds[i].iRow + me.aSleds[i].iDirection))) and (oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]] = (iSledTrackValue + 1)) then
  [413] getparam 0 .............................. <me>
  [415] getparam 0 .............................. <me>
  [417] pushsymb 267 ............................ <#aSleds>
  [420] getlocal 3 .............................. <i>
  [422] pusharglist 3 ........................... <me, #aSleds, i>
  [424] objcall 54 .............................. <me.aSleds[i]>
  [426] pusharglistnoret 2 ...................... <me, me.aSleds[i]>
  [428] objcall 169 ............................. me.enterSled(me.aSleds[i])
  [430] pushint8 1
  [432] getlocal 3
  [434] add
  [435] setlocal 3
  [437] endrepeat [285]
  [439] ret
end

on evaluateUserCommand me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 269 .......................... <me.iStepsTravelled>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <me.iStepsTravelled = 0>
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 269 .......................... <me.iStepsTravelled>
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 268 .......................... <me.iStepsToNextSquare>
  [ 17] pusharglist 1 ........................... <me.iStepsToNextSquare>
  [ 19] extcall 123 ............................. <integer(me.iStepsToNextSquare)>
  [ 21] eq ...................................... <me.iStepsTravelled = integer(me.iStepsToNextSquare)>
  [ 22] or ...................................... <(me.iStepsTravelled = 0) or (me.iStepsTravelled = integer(me.iStepsToNextSquare))>
  [ 23] jmpifz [310] ............................ if (me.iStepsTravelled = 0) or (me.iStepsTravelled = integer(me.iStepsToNextSquare)) then / else
  [ 26] getparam 0 .............................. <me>
  [ 28] pushzero ................................ <0>
  [ 29] setobjprop 269 .......................... me.iStepsTravelled = 0
  [ 32] getprop 368 ............................. <iImageSprite>
  [ 35] pusharglist 1 ........................... <iImageSprite>
  [ 37] extcall 79 .............................. <sprite(iImageSprite)>
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglist 1 ........................... <me>
  [ 43] objcall 211 ............................. <me.getCurrentSquare()>
  [ 45] getobjprop 460 .......................... <me.getCurrentSquare().iRow>
  [ 48] pushint8 100 ............................ <100>
  [ 50] mul ..................................... <me.getCurrentSquare().iRow * 100>
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 211 ............................. <me.getCurrentSquare()>
  [ 57] getobjprop 461 .......................... <me.getCurrentSquare().iCol>
  [ 60] add ..................................... <(me.getCurrentSquare().iRow * 100) + me.getCurrentSquare().iCol>
  [ 61] pushint8 1 .............................. <1>
  [ 63] add ..................................... <(me.getCurrentSquare().iRow * 100) + me.getCurrentSquare().iCol + 1>
  [ 64] setobjprop 134 .......................... sprite(iImageSprite).locZ = (me.getCurrentSquare().iRow * 100) + me.getCurrentSquare().iCol + 1
  [ 66] getparam 0 .............................. <me>
  [ 68] pushzero ................................ <0>
  [ 69] setobjprop 459 .......................... me.bMove = 0
  [ 72] pushint8 123 ............................ <123>
  [ 74] pusharglist 1 ........................... <123>
  [ 76] extcall 473 ............................. <keyPressed(123)>
  [ 79] jmpifz [ 93] ............................ if keyPressed(123) then / else
  [ 82] getparam 0 .............................. <me>
  [ 84] pushint8 123 ............................ <123>
  [ 86] pusharglistnoret 2 ...................... <me, 123>
  [ 88] objcall 191 ............................. me.setUserCommand(123)
  [ 90] jmp [172]
  [ 93] pushint8 124 ............................ <124>
  [ 95] pusharglist 1 ........................... <124>
  [ 97] extcall 473 ............................. <keyPressed(124)>
  [100] jmpifz [114] ............................ if keyPressed(124) then / else
  [103] getparam 0 .............................. <me>
  [105] pushint8 124 ............................ <124>
  [107] pusharglistnoret 2 ...................... <me, 124>
  [109] objcall 191 ............................. me.setUserCommand(124)
  [111] jmp [172]
  [114] pushint8 125 ............................ <125>
  [116] pusharglist 1 ........................... <125>
  [118] extcall 473 ............................. <keyPressed(125)>
  [121] jmpifz [135] ............................ if keyPressed(125) then / else
  [124] getparam 0 .............................. <me>
  [126] pushint8 125 ............................ <125>
  [128] pusharglistnoret 2 ...................... <me, 125>
  [130] objcall 191 ............................. me.setUserCommand(125)
  [132] jmp [172]
  [135] pushint8 126 ............................ <126>
  [137] pusharglist 1 ........................... <126>
  [139] extcall 473 ............................. <keyPressed(126)>
  [142] jmpifz [156] ............................ if keyPressed(126) then / else
  [145] getparam 0 .............................. <me>
  [147] pushint8 126 ............................ <126>
  [149] pusharglistnoret 2 ...................... <me, 126>
  [151] objcall 191 ............................. me.setUserCommand(126)
  [153] jmp [172]
  [156] getparam 0 .............................. <me>
  [158] getparam 0 .............................. <me>
  [160] getobjprop 467 .......................... <me.oCurrentSquare>
  [163] setobjprop 362 .......................... me.oNextSquare = me.oCurrentSquare
  [166] getparam 0 .............................. <me>
  [168] pusharglistnoret 1 ...................... <me>
  [170] objcall 236 ............................. me.stand()
  [172] getparam 0 .............................. <me>
  [174] getobjprop 459 .......................... <me.bMove>
  [177] jmpifz [272] ............................ if me.bMove then
  [180] getglobal 464 ........................... <oMapObject>
  [183] pushsymb 465 ............................ <#oGridVals>
  [186] getparam 0 .............................. <me>
  [188] pushsymb 463 ............................ <#pNextSquareLoc>
  [191] pushint8 1 .............................. <1>
  [193] pusharglist 3 ........................... <me, #pNextSquareLoc, 1>
  [195] objcall 54 .............................. <me.pNextSquareLoc[1]>
  [197] pusharglist 3 ........................... <oMapObject, #oGridVals, me.pNextSquareLoc[1]>
  [199] objcall 274 ............................. <oMapObject.oGridVals[me.pNextSquareLoc[1]]>
  [202] getparam 0 .............................. <me>
  [204] pushsymb 463 ............................ <#pNextSquareLoc>
  [207] pushint8 2 .............................. <2>
  [209] pusharglist 3 ........................... <me, #pNextSquareLoc, 2>
  [211] objcall 54 .............................. <me.pNextSquareLoc[2]>
  [213] pusharglist 2 ........................... <oMapObject.oGridVals[me.pNextSquareLoc[1]], me.pNextSquareLoc[2]>
  [215] objcall 86 .............................. <oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]]>
  [217] setlocal 0 .............................. thisGridVal = oMapObject.oGridVals[me.pNextSquareLoc[1]][me.pNextSquareLoc[2]]
  [219] getlocal 0 .............................. <thisGridVal>
  [221] getglobal 466 ........................... <iSledTrackValue>
  [224] eq ...................................... <thisGridVal = iSledTrackValue>
  [225] getlocal 0 .............................. <thisGridVal>
  [227] pushint8 1 .............................. <1>
  [229] inv ..................................... <-1>
  [230] eq ...................................... <thisGridVal = -1>
  [231] or ...................................... <(thisGridVal = iSledTrackValue) or (thisGridVal = -1)>
  [232] jmpifz [272] ............................ if (thisGridVal = iSledTrackValue) or (thisGridVal = -1) then
  [235] getparam 0 .............................. <me>
  [237] getparam 0 .............................. <me>
  [239] pusharglist 1 ........................... <me>
  [241] objcall 211 ............................. <me.getCurrentSquare()>
  [243] getobjprop 460 .......................... <me.getCurrentSquare().iRow>
  [246] getparam 0 .............................. <me>
  [248] pusharglist 1 ........................... <me>
  [250] objcall 211 ............................. <me.getCurrentSquare()>
  [252] getobjprop 461 .......................... <me.getCurrentSquare().iCol>
  [255] pusharglist 2 ........................... <me.getCurrentSquare().iRow, me.getCurrentSquare().iCol>
  [257] extcall 132 ............................. <point(me.getCurrentSquare().iRow, me.getCurrentSquare().iCol)>
  [259] setobjprop 462 .......................... me.pCurrentSquareLoc = point(me.getCurrentSquare().iRow, me.getCurrentSquare().iCol)
  [262] getparam 0 .............................. <me>
  [264] getparam 0 .............................. <me>
  [266] getobjprop 462 .......................... <me.pCurrentSquareLoc>
  [269] setobjprop 463 .......................... me.pNextSquareLoc = me.pCurrentSquareLoc
  [272] getparam 0 .............................. <me>
  [274] getobjprop 362 .......................... <me.oNextSquare>
  [277] getparam 0 .............................. <me>
  [279] getobjprop 467 .......................... <me.oCurrentSquare>
  [282] eq ...................................... <me.oNextSquare = me.oCurrentSquare>
  [283] jmpifz [307] ............................ if me.oNextSquare = me.oCurrentSquare then
  [286] getparam 0 .............................. <me>
  [288] getparam 0 .............................. <me>
  [290] getchainedprop 467 ...................... <me.oCurrentSquare>
  [293] pusharglist 1 ........................... <me.oCurrentSquare>
  [295] objcall 474 ............................. <me.oCurrentSquare.calcViewCenter()>
  [298] pusharglistnoret 2 ...................... <me, me.oCurrentSquare.calcViewCenter()>
  [300] objcall 214 ............................. me.setLoc(me.oCurrentSquare.calcViewCenter())
  [302] pusharglistnoret 0 ...................... <>
  [304] extcall 475 ............................. updateStage()
  [307] jmp [323]
  [310] getparam 0 .............................. <me>
  [312] getparam 0 .............................. <me>
  [314] getobjprop 269 .......................... <me.iStepsTravelled>
  [317] pushint8 1 .............................. <1>
  [319] add ..................................... <me.iStepsTravelled + 1>
  [320] setobjprop 269 .......................... me.iStepsTravelled = me.iStepsTravelled + 1
  [323] getparam 0 .............................. <me>
  [325] pusharglistnoret 1 ...................... <me>
  [327] objcall 195 ............................. me.doUserMove()
  [329] getglobal 464 ........................... <oMapObject>
  [332] pushsymb 465 ............................ <#oGridVals>
  [335] getparam 0 .............................. <me>
  [337] getchainedprop 467 ...................... <me.oCurrentSquare>
  [340] getobjprop 460 .......................... <me.oCurrentSquare.iRow>
  [343] pusharglist 3 ........................... <oMapObject, #oGridVals, me.oCurrentSquare.iRow>
  [345] objcall 274 ............................. <oMapObject.oGridVals[me.oCurrentSquare.iRow]>
  [348] getparam 0 .............................. <me>
  [350] getchainedprop 467 ...................... <me.oCurrentSquare>
  [353] getobjprop 461 .......................... <me.oCurrentSquare.iCol>
  [356] pusharglist 2 ........................... <oMapObject.oGridVals[me.oCurrentSquare.iRow], me.oCurrentSquare.iCol>
  [358] objcall 86 .............................. <oMapObject.oGridVals[me.oCurrentSquare.iRow][me.oCurrentSquare.iCol]>
  [360] pushint16 175 ........................... <175>
  [363] eq ...................................... <oMapObject.oGridVals[me.oCurrentSquare.iRow][me.oCurrentSquare.iCol] = 175>
  [364] jmpifz [470] ............................ if oMapObject.oGridVals[me.oCurrentSquare.iRow][me.oCurrentSquare.iCol] = 175 then / else
  [367] getparam 0 .............................. <me>
  [369] getchainedprop 467 ...................... <me.oCurrentSquare>
  [372] getobjprop 461 .......................... <me.oCurrentSquare.iCol>
  [375] pushint8 9 .............................. <9>
  [377] sub ..................................... <me.oCurrentSquare.iCol - 9>
  [378] setlocal 1 .............................. iToolNum = me.oCurrentSquare.iCol - 9
  [380] getglobal 58 ............................ <oComputer>
  [382] getlocal 1 .............................. <iToolNum>
  [384] pusharglist 2 ........................... <oComputer, iToolNum>
  [386] objcall 34 .............................. <oComputer.getToolOnTable(iToolNum)>
  [388] jmpifz [456] ............................ if oComputer.getToolOnTable(iToolNum) then / else
  [391] pushint8 49 ............................. <49>
  [393] pusharglist 1 ........................... <49>
  [395] extcall 473 ............................. <keyPressed(49)>
  [398] pushint8 125 ............................ <125>
  [400] pusharglist 1 ........................... <125>
  [402] extcall 473 ............................. <keyPressed(125)>
  [405] getglobal 58 ............................ <oComputer>
  [407] pusharglist 1 ........................... <oComputer>
  [409] objcall 9 ............................... <oComputer.getInteractingWithUser()>
  [411] not ..................................... <not oComputer.getInteractingWithUser()>
  [412] and ..................................... <keyPressed(125) and not oComputer.getInteractingWithUser()>
  [413] or ...................................... <keyPressed(49) or (keyPressed(125) and not oComputer.getInteractingWithUser())>
  [414] jmpifz [428] ............................ if keyPressed(49) or (keyPressed(125) and not oComputer.getInteractingWithUser()) then / else
  [417] getparam 0 .............................. <me>
  [419] getlocal 1 .............................. <iToolNum>
  [421] pusharglistnoret 2 ...................... <me, iToolNum>
  [423] objcall 36 .............................. me.pickUpTool(iToolNum)
  [425] jmp [449]
  [428] getparam 0 .............................. <me>
  [430] getchainedprop 467 ...................... <me.oCurrentSquare>
  [433] getobjprop 461 .......................... <me.oCurrentSquare.iCol>
  [436] pushint8 9 .............................. <9>
  [438] sub ..................................... <me.oCurrentSquare.iCol - 9>
  [439] setlocal 1 .............................. iToolNum = me.oCurrentSquare.iCol - 9
  [441] getglobal 58 ............................ <oComputer>
  [443] getlocal 1 .............................. <iToolNum>
  [445] pusharglistnoret 2 ...................... <oComputer, iToolNum>
  [447] objcall 35 .............................. oComputer.hiliteTool(iToolNum)
  [449] pusharglistnoret 0 ...................... <>
  [451] extcall 63 .............................. return 
  [453] jmp [467]
  [456] getglobal 58 ............................ <oComputer>
  [458] pushzero ................................ <0>
  [459] pusharglistnoret 2 ...................... <oComputer, 0>
  [461] objcall 35 .............................. oComputer.hiliteTool(0)
  [463] pusharglistnoret 0 ...................... <>
  [465] extcall 63 .............................. return 
  [467] jmp [477]
  [470] getglobal 58 ............................ <oComputer>
  [472] pushzero ................................ <0>
  [473] pusharglistnoret 2 ...................... <oComputer, 0>
  [475] objcall 35 .............................. oComputer.hiliteTool(0)
  [477] getglobal 464 ........................... <oMapObject>
  [480] pushsymb 465 ............................ <#oGridVals>
  [483] getparam 0 .............................. <me>
  [485] getchainedprop 467 ...................... <me.oCurrentSquare>
  [488] getobjprop 460 .......................... <me.oCurrentSquare.iRow>
  [491] pusharglist 3 ........................... <oMapObject, #oGridVals, me.oCurrentSquare.iRow>
  [493] objcall 274 ............................. <oMapObject.oGridVals[me.oCurrentSquare.iRow]>
  [496] getparam 0 .............................. <me>
  [498] getchainedprop 467 ...................... <me.oCurrentSquare>
  [501] getobjprop 461 .......................... <me.oCurrentSquare.iCol>
  [504] pusharglist 2 ........................... <oMapObject.oGridVals[me.oCurrentSquare.iRow], me.oCurrentSquare.iCol>
  [506] objcall 86 .............................. <oMapObject.oGridVals[me.oCurrentSquare.iRow][me.oCurrentSquare.iCol]>
  [508] pushint16 180 ........................... <180>
  [511] eq ...................................... <oMapObject.oGridVals[me.oCurrentSquare.iRow][me.oCurrentSquare.iCol] = 180>
  [512] jmpifz [567] ............................ if oMapObject.oGridVals[me.oCurrentSquare.iRow][me.oCurrentSquare.iCol] = 180 then / else
  [515] pushint8 49 ............................. <49>
  [517] pusharglist 1 ........................... <49>
  [519] extcall 473 ............................. <keyPressed(49)>
  [522] pushint8 126 ............................ <126>
  [524] pusharglist 1 ........................... <126>
  [526] extcall 473 ............................. <keyPressed(126)>
  [529] getglobal 58 ............................ <oComputer>
  [531] pusharglist 1 ........................... <oComputer>
  [533] objcall 9 ............................... <oComputer.getInteractingWithUser()>
  [535] not ..................................... <not oComputer.getInteractingWithUser()>
  [536] and ..................................... <keyPressed(126) and not oComputer.getInteractingWithUser()>
  [537] or ...................................... <keyPressed(49) or (keyPressed(126) and not oComputer.getInteractingWithUser())>
  [538] jmpifz [560] ............................ if keyPressed(49) or (keyPressed(126) and not oComputer.getInteractingWithUser()) then
  [541] getglobal 58 ............................ <oComputer>
  [543] pusharglistnoret 1 ...................... <oComputer>
  [545] objcall 38 .............................. oComputer.matchTool()
  [547] pushcons 41 ............................. <"TODO: MATCH TOOL COMPUTER CALL">
  [549] pusharglistnoret 1 ...................... <"TODO: MATCH TOOL COMPUTER CALL">
  [551] extcall 49 .............................. put "TODO: MATCH TOOL COMPUTER CALL"
  [553] getparam 0 .............................. <me>
  [555] pushzero ................................ <0>
  [556] pusharglistnoret 2 ...................... <me, 0>
  [558] objcall 224 ............................. me.setDirection(0)
  [560] pusharglistnoret 0 ...................... <>
  [562] extcall 63 .............................. return 
  [564] jmp [571]
  [567] pusharglistnoret 0 ...................... <>
  [569] extcall 63 .............................. return 
  [571] ret
end

on getToolCarried me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 476 .......................... <me.iToolCarried>
  [  5] pusharglistnoret 1 ...................... <me.iToolCarried>
  [  7] extcall 63 .............................. return me.iToolCarried
  [  9] ret
end

on setToolCarried me, iTool
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iTool>
  [  4] setobjprop 476 .......................... me.iToolCarried = iTool
  [  7] ret
end

on carryTool me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 326 .......................... <me.iToolSprite>
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglistnoret 2 ...................... <me.iToolSprite, 1>
  [  9] extcall 384 ............................. puppetSprite(me.iToolSprite, 1)
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 295 .......................... <me.iDirection>
  [ 17] pushint8 6 .............................. <6>
  [ 19] eq ...................................... <me.iDirection = 6>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 295 .......................... <me.iDirection>
  [ 25] pushzero ................................ <0>
  [ 26] eq ...................................... <me.iDirection = 0>
  [ 27] or ...................................... <(me.iDirection = 6) or (me.iDirection = 0)>
  [ 28] jmpifz [ 88] ............................ if (me.iDirection = 6) or (me.iDirection = 0) then / else
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 326 .......................... <me.iToolSprite>
  [ 36] pusharglist 1 ........................... <me.iToolSprite>
  [ 38] extcall 79 .............................. <sprite(me.iToolSprite)>
  [ 40] pushcons 42 ............................. <"Tool_">
  [ 42] pushcons 43 ............................. <"1">
  [ 44] joinstr ................................. <"Tool_" & "1">
  [ 45] pushcons 44 ............................. <"_">
  [ 47] joinstr ................................. <"Tool_" & "1" & "_">
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 295 .......................... <me.iDirection>
  [ 53] joinstr ................................. <"Tool_" & "1" & "_" & me.iDirection>
  [ 54] pusharglist 1 ........................... <"Tool_" & "1" & "_" & me.iDirection>
  [ 56] extcall 142 ............................. <member("Tool_" & "1" & "_" & me.iDirection)>
  [ 58] setobjprop 142 .......................... sprite(me.iToolSprite).member = member("Tool_" & "1" & "_" & me.iDirection)
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 326 .......................... <me.iToolSprite>
  [ 65] pusharglist 1 ........................... <me.iToolSprite>
  [ 67] extcall 79 .............................. <sprite(me.iToolSprite)>
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 368 .......................... <me.iImageSprite>
  [ 74] pusharglist 1 ........................... <me.iImageSprite>
  [ 76] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 78] getobjprop 134 .......................... <sprite(me.iImageSprite).locZ>
  [ 80] pushint8 1 .............................. <1>
  [ 82] sub ..................................... <sprite(me.iImageSprite).locZ - 1>
  [ 83] setobjprop 134 .......................... sprite(me.iToolSprite).locZ = sprite(me.iImageSprite).locZ - 1
  [ 85] jmp [145]
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 326 .......................... <me.iToolSprite>
  [ 93] pusharglist 1 ........................... <me.iToolSprite>
  [ 95] extcall 79 .............................. <sprite(me.iToolSprite)>
  [ 97] pushcons 42 ............................. <"Tool_">
  [ 99] getparam 0 .............................. <me>
  [101] getobjprop 476 .......................... <me.iToolCarried>
  [104] joinstr ................................. <"Tool_" & me.iToolCarried>
  [105] pushcons 44 ............................. <"_">
  [107] joinstr ................................. <"Tool_" & me.iToolCarried & "_">
  [108] getparam 0 .............................. <me>
  [110] getobjprop 295 .......................... <me.iDirection>
  [113] joinstr ................................. <"Tool_" & me.iToolCarried & "_" & me.iDirection>
  [114] pusharglist 1 ........................... <"Tool_" & me.iToolCarried & "_" & me.iDirection>
  [116] extcall 142 ............................. <member("Tool_" & me.iToolCarried & "_" & me.iDirection)>
  [118] setobjprop 142 .......................... sprite(me.iToolSprite).member = member("Tool_" & me.iToolCarried & "_" & me.iDirection)
  [120] getparam 0 .............................. <me>
  [122] getobjprop 326 .......................... <me.iToolSprite>
  [125] pusharglist 1 ........................... <me.iToolSprite>
  [127] extcall 79 .............................. <sprite(me.iToolSprite)>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 368 .......................... <me.iImageSprite>
  [134] pusharglist 1 ........................... <me.iImageSprite>
  [136] extcall 79 .............................. <sprite(me.iImageSprite)>
  [138] getobjprop 134 .......................... <sprite(me.iImageSprite).locZ>
  [140] pushint8 1 .............................. <1>
  [142] add ..................................... <sprite(me.iImageSprite).locZ + 1>
  [143] setobjprop 134 .......................... sprite(me.iToolSprite).locZ = sprite(me.iImageSprite).locZ + 1
  [145] getparam 0 .............................. <me>
  [147] getobjprop 326 .......................... <me.iToolSprite>
  [150] pusharglist 1 ........................... <me.iToolSprite>
  [152] extcall 79 .............................. <sprite(me.iToolSprite)>
  [154] pushint8 36 ............................. <36>
  [156] setobjprop 386 .......................... sprite(me.iToolSprite).ink = 36
  [159] getparam 0 .............................. <me>
  [161] getobjprop 326 .......................... <me.iToolSprite>
  [164] pusharglist 1 ........................... <me.iToolSprite>
  [166] extcall 79 .............................. <sprite(me.iToolSprite)>
  [168] getparam 0 .............................. <me>
  [170] pusharglist 1 ........................... <me>
  [172] objcall 215 ............................. <me.getLoc()>
  [174] setobjprop 80 ........................... sprite(me.iToolSprite).loc = me.getLoc()
  [176] ret
end

on pickUpTool me, iToolNum
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 4 .............................. <4>
  [  4] pusharglistnoret 2 ...................... <me, 4>
  [  6] objcall 224 ............................. me.setDirection(4)
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 324 .......................... <me.bCarry>
  [ 13] jmpifz [ 27] ............................ if me.bCarry then
  [ 16] getglobal 58 ............................ <oComputer>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 476 .......................... <me.iToolCarried>
  [ 23] pusharglistnoret 2 ...................... <oComputer, me.iToolCarried>
  [ 25] objcall 37 .............................. oComputer.dropOffTool(me.iToolCarried)
  [ 27] getglobal 58 ............................ <oComputer>
  [ 29] getparam 1 .............................. <iToolNum>
  [ 31] pusharglistnoret 2 ...................... <oComputer, iToolNum>
  [ 33] objcall 36 .............................. oComputer.pickUpTool(iToolNum)
  [ 35] getparam 0 .............................. <me>
  [ 37] pushint8 1 .............................. <1>
  [ 39] setobjprop 324 .......................... me.bCarry = 1
  [ 42] getparam 0 .............................. <me>
  [ 44] getparam 1 .............................. <iToolNum>
  [ 46] pusharglistnoret 2 ...................... <me, iToolNum>
  [ 48] objcall 193 ............................. me.setToolCarried(iToolNum)
  [ 50] getparam 0 .............................. <me>
  [ 52] pusharglistnoret 1 ...................... <me>
  [ 54] objcall 194 ............................. me.carryTool()
  [ 56] ret
end

on dropTool me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 324 .......................... me.bCarry = 0
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] pusharglistnoret 2 ...................... <me, 0>
  [ 11] objcall 193 ............................. me.setToolCarried(0)
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 326 .......................... <me.iToolSprite>
  [ 18] pusharglist 1 ........................... <me.iToolSprite>
  [ 20] extcall 79 .............................. <sprite(me.iToolSprite)>
  [ 22] pushint16 500 ........................... <500>
  [ 25] inv ..................................... <-500>
  [ 26] pushint16 500 ........................... <500>
  [ 29] inv ..................................... <-500>
  [ 30] pusharglist 2 ........................... <-500, -500>
  [ 32] extcall 132 ............................. <point(-500, -500)>
  [ 34] setobjprop 80 ........................... sprite(me.iToolSprite).loc = point(-500, -500)
  [ 36] ret
end

on doUserMove me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 362 .......................... <me.oNextSquare>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 467 .......................... <me.oCurrentSquare>
  [ 10] eq ...................................... <me.oNextSquare = me.oCurrentSquare>
  [ 11] not ..................................... <not (me.oNextSquare = me.oCurrentSquare)>
  [ 12] jmpifz [197] ............................ if not (me.oNextSquare = me.oCurrentSquare) then
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 295 .......................... <me.iDirection>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglistnoret 3 ...................... <me, me.iDirection, 1>
  [ 26] objcall 224 ............................. me.setDirection(me.iDirection, 1)
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 211 ............................. <me.getCurrentSquare()>
  [ 34] pusharglist 1 ........................... <me.getCurrentSquare()>
  [ 36] objcall 474 ............................. <me.getCurrentSquare().calcViewCenter()>
  [ 39] setlocal 0 .............................. currentLoc = me.getCurrentSquare().calcViewCenter()
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglist 1 ........................... <me>
  [ 45] objcall 213 ............................. <me.getNextSquare()>
  [ 47] pusharglist 1 ........................... <me.getNextSquare()>
  [ 49] objcall 474 ............................. <me.getNextSquare().calcViewCenter()>
  [ 52] setlocal 1 .............................. nextLoc = me.getNextSquare().calcViewCenter()
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 270 ............................ <#aStepSizes>
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 295 .......................... <me.iDirection>
  [ 64] pushint8 1 .............................. <1>
  [ 66] add ..................................... <me.iDirection + 1>
  [ 67] pusharglist 3 ........................... <me, #aStepSizes, me.iDirection + 1>
  [ 69] objcall 54 .............................. <me.aStepSizes[me.iDirection + 1]>
  [ 71] setlocal 2 .............................. changeLoc = me.aStepSizes[me.iDirection + 1]
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 215 ............................. <me.getLoc()>
  [ 79] getlocal 2 .............................. <changeLoc>
  [ 81] add ..................................... <me.getLoc() + changeLoc>
  [ 82] setlocal 3 .............................. pNextStepTaken = me.getLoc() + changeLoc
  [ 84] getlocal 0 .............................. <currentLoc>
  [ 86] getlocal 1 .............................. <nextLoc>
  [ 88] getlocal 0 .............................. <currentLoc>
  [ 90] sub ..................................... <nextLoc - currentLoc>
  [ 91] pushfloat32 1.0 ......................... <1.0>
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 269 .......................... <me.iStepsTravelled>
  [101] mul ..................................... <1.0 * me.iStepsTravelled>
  [102] mul ..................................... <(nextLoc - currentLoc) * (1.0 * me.iStepsTravelled)>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 268 .......................... <me.iStepsToNextSquare>
  [108] div ..................................... <(nextLoc - currentLoc) * (1.0 * me.iStepsTravelled) / me.iStepsToNextSquare>
  [109] add ..................................... <currentLoc + ((nextLoc - currentLoc) * (1.0 * me.iStepsTravelled) / me.iStepsToNextSquare)>
  [110] setlocal 3 .............................. pNextStepTaken = currentLoc + ((nextLoc - currentLoc) * (1.0 * me.iStepsTravelled) / me.iStepsToNextSquare)
  [112] getparam 0 .............................. <me>
  [114] getlocal 3 .............................. <pNextStepTaken>
  [116] pusharglistnoret 2 ...................... <me, pNextStepTaken>
  [118] objcall 214 ............................. me.setLoc(pNextStepTaken)
  [120] pushint8 1 .............................. <1>
  [122] setlocal 4 .............................. bDraw = 1
  [124] getparam 0 .............................. <me>
  [126] pusharglistnoret 1 ...................... <me>
  [128] objcall 237 ............................. me.walk()
  [130] getparam 0 .............................. <me>
  [132] getobjprop 269 .......................... <me.iStepsTravelled>
  [135] getparam 0 .............................. <me>
  [137] getobjprop 268 .......................... <me.iStepsToNextSquare>
  [140] pusharglist 1 ........................... <me.iStepsToNextSquare>
  [142] extcall 123 ............................. <integer(me.iStepsToNextSquare)>
  [144] eq ...................................... <me.iStepsTravelled = integer(me.iStepsToNextSquare)>
  [145] jmpifz [197] ............................ if me.iStepsTravelled = integer(me.iStepsToNextSquare) then
  [148] getparam 0 .............................. <me>
  [150] getobjprop 265 .......................... <me.bOnSled>
  [153] jmpifz [169] ............................ if me.bOnSled then / else
  [156] getparam 0 .............................. <me>
  [158] getparam 0 .............................. <me>
  [160] getobjprop 362 .......................... <me.oNextSquare>
  [163] setobjprop 467 .......................... me.oCurrentSquare = me.oNextSquare
  [166] jmp [197]
  [169] getparam 0 .............................. <me>
  [171] getparam 0 .............................. <me>
  [173] pushsymb 463 ............................ <#pNextSquareLoc>
  [176] pushint8 1 .............................. <1>
  [178] pusharglist 3 ........................... <me, #pNextSquareLoc, 1>
  [180] objcall 54 .............................. <me.pNextSquareLoc[1]>
  [182] getparam 0 .............................. <me>
  [184] pushsymb 463 ............................ <#pNextSquareLoc>
  [187] pushint8 2 .............................. <2>
  [189] pusharglist 3 ........................... <me, #pNextSquareLoc, 2>
  [191] objcall 54 .............................. <me.pNextSquareLoc[2]>
  [193] pusharglistnoret 3 ...................... <me, me.pNextSquareLoc[1], me.pNextSquareLoc[2]>
  [195] objcall 209 ............................. me.setCurrentSquare(me.pNextSquareLoc[1], me.pNextSquareLoc[2])
  [197] ret
end

on doFrameEvent me
  [  0] getglobal 483 ........................... <bDebugCollision>
  [  3] jmpifz [ 75] ............................ if bDebugCollision then
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 368 .......................... <me.iImageSprite>
  [ 11] pushint8 100 ............................ <100>
  [ 13] add ..................................... <me.iImageSprite + 100>
  [ 14] setlocal 0 .............................. cSprite = me.iImageSprite + 100
  [ 16] getlocal 0 .............................. <cSprite>
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 2 ...................... <cSprite, 1>
  [ 22] extcall 384 ............................. puppetSprite(cSprite, 1)
  [ 25] getlocal 0 .............................. <cSprite>
  [ 27] pusharglist 1 ........................... <cSprite>
  [ 29] extcall 79 .............................. <sprite(cSprite)>
  [ 31] pushcons 45 ............................. <"testbox">
  [ 33] pusharglist 1 ........................... <"testbox">
  [ 35] extcall 142 ............................. <member("testbox")>
  [ 37] setobjprop 142 .......................... sprite(cSprite).member = member("testbox")
  [ 39] getlocal 0 .............................. <cSprite>
  [ 41] pusharglist 1 ........................... <cSprite>
  [ 43] extcall 79 .............................. <sprite(cSprite)>
  [ 45] pushint8 50 ............................. <50>
  [ 47] setobjprop 484 .......................... sprite(cSprite).blend = 50
  [ 50] getlocal 0 .............................. <cSprite>
  [ 52] pusharglist 1 ........................... <cSprite>
  [ 54] extcall 79 .............................. <sprite(cSprite)>
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 171 ............................. <me.getCollisionRect()>
  [ 62] setobjprop 133 .......................... sprite(cSprite).rect = me.getCollisionRect()
  [ 64] getlocal 0 .............................. <cSprite>
  [ 66] pusharglist 1 ........................... <cSprite>
  [ 68] extcall 79 .............................. <sprite(cSprite)>
  [ 70] pushint16 10000 ......................... <10000>
  [ 73] setobjprop 134 .......................... sprite(cSprite).locZ = 10000
  [ 75] pushint8 1 .............................. <1>
  [ 77] setlocal 1 .............................. bDraw = 1
  [ 79] getparam 0 .............................. <me>
  [ 81] pushzero ................................ <0>
  [ 82] setobjprop 459 .......................... me.bMove = 0
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglistnoret 1 ...................... <me>
  [ 89] objcall 192 ............................. me.evaluateUserCommand()
  [ 91] getparam 0 .............................. <me>
  [ 93] pushint8 1 .............................. <1>
  [ 95] setobjprop 459 .......................... me.bMove = 1
  [ 98] getparam 0 .............................. <me>
  [100] pushint8 1 .............................. <1>
  [102] setobjprop 485 .......................... me.bMoving = 1
  [105] getmovieprop 281 ........................ <the milliSeconds>
  [108] setlocal 2 .............................. iStartTime = the milliSeconds
  [110] getparam 0 .............................. <me>
  [112] pusharglist 1 ........................... <me>
  [114] objcall 198 ............................. <me.calcAnim()>
  [116] setlocal 3 .............................. bAnim = me.calcAnim()
  [118] getlocal 1 .............................. <bDraw>
  [120] getlocal 3 .............................. <bAnim>
  [122] or ...................................... <bDraw or bAnim>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 459 .......................... <me.bMove>
  [128] or ...................................... <bDraw or bAnim or me.bMove>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 265 .......................... <me.bOnSled>
  [134] or ...................................... <bDraw or bAnim or me.bMove or me.bOnSled>
  [135] jmpifz [166] ............................ if bDraw or bAnim or me.bMove or me.bOnSled then
  [138] getparam 0 .............................. <me>
  [140] pusharglistnoret 1 ...................... <me>
  [142] objcall 200 ............................. me.display()
  [144] getparam 0 .............................. <me>
  [146] getmovieprop 281 ........................ <the milliSeconds>
  [149] getlocal 2 .............................. <iStartTime>
  [151] sub ..................................... <the milliSeconds - iStartTime>
  [152] setobjprop 455 .......................... me.iFrameTime = the milliSeconds - iStartTime
  [155] getparam 0 .............................. <me>
  [157] getprop 456 ............................. <iFrameCount>
  [160] pushint8 1 .............................. <1>
  [162] add ..................................... <iFrameCount + 1>
  [163] setobjprop 456 .......................... me.iFrameCount = iFrameCount + 1
  [166] getparam 0 .............................. <me>
  [168] pusharglistnoret 1 ...................... <me>
  [170] objcall 197 ............................. me.advanceAnimFrame()
  [172] getparam 0 .............................. <me>
  [174] getmovieprop 281 ........................ <the milliSeconds>
  [177] setobjprop 312 .......................... me.iFPSTimer = the milliSeconds
  [180] pusharglistnoret 0 ...................... <>
  [182] extcall 475 ............................. updateStage()
  [185] ret
end

on advanceAnimFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 306 .......................... <me.iAnimStep>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 307 .......................... <me.iAnimStepMax>
  [ 10] eq ...................................... <me.iAnimStep = me.iAnimStepMax>
  [ 11] jmpifz [ 23] ............................ if me.iAnimStep = me.iAnimStepMax then / else
  [ 14] getparam 0 .............................. <me>
  [ 16] pushzero ................................ <0>
  [ 17] setobjprop 306 .......................... me.iAnimStep = 0
  [ 20] jmp [ 36]
  [ 23] getparam 0 .............................. <me>
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 306 .......................... <me.iAnimStep>
  [ 30] pushint8 1 .............................. <1>
  [ 32] add ..................................... <me.iAnimStep + 1>
  [ 33] setobjprop 306 .......................... me.iAnimStep = me.iAnimStep + 1
  [ 36] ret
end

on calcAnim me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDrawAnim = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 239 ............................. <me.isWalking()>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 323 .......................... <me.bDance>
  [ 14] or ...................................... <me.isWalking() or me.bDance>
  [ 15] jmpifz [178] ............................ if me.isWalking() or me.bDance then
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 1
  [ 22] getlocal 1
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 29] pusharglist 2 ........................... <me, #aRuntimeConfig>
  [ 31] objcall 88 .............................. <me.aRuntimeConfig.count>
  [ 33] lteq
  [ 34] jmpifz [178] ............................ repeat with i = 1 to me.aRuntimeConfig.count
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 432 ...................... <me.aRuntimeConfig>
  [ 42] getlocal 1 .............................. <i>
  [ 44] pusharglist 2 ........................... <me.aRuntimeConfig, i>
  [ 46] objcall 424 ............................. <me.aRuntimeConfig.getPropAt(i)>
  [ 49] setlocal 2 .............................. sPart = me.aRuntimeConfig.getPropAt(i)
  [ 51] getparam 0 .............................. <me>
  [ 53] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 56] getlocal 2 .............................. <sPart>
  [ 58] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [ 60] objcall 54 .............................. <me.aRuntimeConfig[sPart]>
  [ 62] setlocal 3 .............................. aPartConfig = me.aRuntimeConfig[sPart]
  [ 64] getlocal 3 .............................. <aPartConfig>
  [ 66] pushsymb 433 ............................ <#act>
  [ 69] pusharglist 2 ........................... <aPartConfig, #act>
  [ 71] objcall 86 .............................. <aPartConfig[#act]>
  [ 73] setlocal 4 .............................. sAction = aPartConfig[#act]
  [ 75] getlocal 3 .............................. <aPartConfig>
  [ 77] pushsymb 435 ............................ <#anim>
  [ 80] pusharglist 2 ........................... <aPartConfig, #anim>
  [ 82] objcall 86 .............................. <aPartConfig[#anim]>
  [ 84] setlocal 5 .............................. bAnim = aPartConfig[#anim]
  [ 86] getlocal 5 .............................. <bAnim>
  [ 88] jmpifz [169] ............................ if bAnim then
  [ 91] pushint8 1 .............................. <1>
  [ 93] setlocal 0 .............................. bDrawAnim = 1
  [ 95] getparam 0 .............................. <me>
  [ 97] pushsymb 431 ............................ <#aConfigSettings>
  [100] getlocal 2 .............................. <sPart>
  [102] pusharglist 3 ........................... <me, #aConfigSettings, sPart>
  [104] objcall 274 ............................. <me.aConfigSettings[sPart]>
  [107] getlocal 4 .............................. <sAction>
  [109] pusharglist 2 ........................... <me.aConfigSettings[sPart], sAction>
  [111] objcall 86 .............................. <me.aConfigSettings[sPart][sAction]>
  [113] pushsymb 442 ............................ <#fr>
  [116] pusharglist 2 ........................... <me.aConfigSettings[sPart][sAction], #fr>
  [118] objcall 86 .............................. <me.aConfigSettings[sPart][sAction][#fr]>
  [120] setlocal 6 .............................. aAnimFrames = me.aConfigSettings[sPart][sAction][#fr]
  [122] getlocal 6 .............................. <aAnimFrames>
  [124] getparam 0 .............................. <me>
  [126] getobjprop 306 .......................... <me.iAnimStep>
  [129] pushint8 4 .............................. <4>
  [131] mod ..................................... <me.iAnimStep mod 4>
  [132] pusharglist 2 ........................... <aAnimFrames, me.iAnimStep mod 4>
  [134] objcall 130 ............................. <aAnimFrames.getPos(me.iAnimStep mod 4)>
  [136] pushzero ................................ <0>
  [137] gt ...................................... <aAnimFrames.getPos(me.iAnimStep mod 4) > 0>
  [138] jmpifz [169] ............................ if aAnimFrames.getPos(me.iAnimStep mod 4) > 0 then
  [141] getparam 0 .............................. <me>
  [143] pushsymb 432 ............................ <#aRuntimeConfig>
  [146] getlocal 2 .............................. <sPart>
  [148] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [150] objcall 274 ............................. <me.aRuntimeConfig[sPart]>
  [153] pushsymb 436 ............................ <#animIndex>
  [156] getparam 0 .............................. <me>
  [158] getobjprop 306 .......................... <me.iAnimStep>
  [161] pushint8 4 .............................. <4>
  [163] mod ..................................... <me.iAnimStep mod 4>
  [164] pusharglistnoret 3 ...................... <me.aRuntimeConfig[sPart], #animIndex, me.iAnimStep mod 4>
  [166] objcall 443 ............................. me.aRuntimeConfig[sPart][#animIndex] = me.iAnimStep mod 4
  [169] pushint8 1
  [171] getlocal 1
  [173] add
  [174] setlocal 1
  [176] endrepeat [ 22]
  [178] getlocal 0 .............................. <bDrawAnim>
  [180] pusharglistnoret 1 ...................... <bDrawAnim>
  [182] extcall 63 .............................. return bDrawAnim
  [184] ret
end

on draw me, bForce
  [  0] getmovieprop 281 ........................ <the milliSeconds>
  [  3] setlocal 0 .............................. iStartTime = the milliSeconds
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 204 ............................. <me.getDrawSettings()>
  [ 11] setlocal 1 .............................. aDrawSettings = me.getDrawSettings()
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 352 ...................... <me.oBuffer>
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 352 ...................... <me.oBuffer>
  [ 23] getobjprop 133 .......................... <me.oBuffer.rect>
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 304 .......................... <me.oBufferBGColor>
  [ 30] pusharglistnoret 3 ...................... <me.oBuffer, me.oBuffer.rect, me.oBufferBGColor>
  [ 32] objcall 287 ............................. me.oBuffer.fill(me.oBuffer.rect, me.oBufferBGColor)
  [ 35] getparam 0 .............................. <me>
  [ 37] getlocal 1 .............................. <aDrawSettings>
  [ 39] setobjprop 493 .......................... me.aCurrDrawSettings = aDrawSettings
  [ 42] getlocal 1 .............................. <aDrawSettings>
  [ 44] peek 0
  [ 46] pusharglist 1
  [ 48] extcall 88
  [ 50] pushint8 1
  [ 52] peek 0
  [ 54] peek 2
  [ 56] lteq
  [ 57] jmpifz [ 83] ............................ repeat with i in aDrawSettings
  [ 60] peek 2
  [ 62] peek 1
  [ 64] pusharglist 2
  [ 66] extcall 86
  [ 68] setlocal 2
  [ 70] getparam 0 .............................. <me>
  [ 72] getlocal 2 .............................. <i>
  [ 74] pusharglistnoret 2 ...................... <me, i>
  [ 76] objcall 201 ............................. me.drawPart(i)
  [ 78] pushint8 1
  [ 80] add
  [ 81] endrepeat [ 52]
  [ 83] pop 3
  [ 85] getparam 0 .............................. <me>
  [ 87] getmovieprop 281 ........................ <the milliSeconds>
  [ 90] getlocal 0 .............................. <iStartTime>
  [ 92] sub ..................................... <the milliSeconds - iStartTime>
  [ 93] setobjprop 451 .......................... me.iDrawTime = the milliSeconds - iStartTime
  [ 96] getparam 0 .............................. <me>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 452 .......................... <me.iDrawCount>
  [103] pushint8 1 .............................. <1>
  [105] add ..................................... <me.iDrawCount + 1>
  [106] setobjprop 452 .......................... me.iDrawCount = me.iDrawCount + 1
  [109] ret
end

on display me, bForce
  [  0] getmovieprop 281 ........................ <the milliSeconds>
  [  3] setlocal 0 .............................. iStartTime = the milliSeconds
  [  5] getparam 0 .............................. <me>
  [  7] pusharglistnoret 1 ...................... <me>
  [  9] objcall 199 ............................. me.draw()
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 375 .......................... <me.oImageMember>
  [ 16] pusharglist 1 ........................... <me.oImageMember>
  [ 18] extcall 365 ............................. <voidp(me.oImageMember)>
  [ 21] jmpifz [ 28] ............................ if voidp(me.oImageMember) then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 63 .............................. return 
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 168 ............................. <me.getFlashing()>
  [ 34] jmpifz [194] ............................ if me.getFlashing() then
  [ 37] getmovieprop 281 ........................ <the milliSeconds>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 282 .......................... <me.iFlashTimer>
  [ 45] sub ..................................... <the milliSeconds - me.iFlashTimer>
  [ 46] setlocal 1 .............................. iElapsedTime = the milliSeconds - me.iFlashTimer
  [ 48] getlocal 1 .............................. <iElapsedTime>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 283 .......................... <me.iFlashTimerLength>
  [ 55] gteq .................................... <iElapsedTime >= me.iFlashTimerLength>
  [ 56] jmpifz [ 68] ............................ if iElapsedTime >= me.iFlashTimerLength then / else
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglistnoret 1 ...................... <me>
  [ 63] objcall 167 ............................. me.stopFlash()
  [ 65] jmp [194]
  [ 68] getlocal 1 .............................. <iElapsedTime>
  [ 70] pusharglist 1 ........................... <iElapsedTime>
  [ 72] extcall 497 ............................. <float(iElapsedTime)>
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 280 .......................... <me.iFlashSpeed>
  [ 80] div ..................................... <float(iElapsedTime) / me.iFlashSpeed>
  [ 81] pusharglist 1 ........................... <float(iElapsedTime) / me.iFlashSpeed>
  [ 83] extcall 123 ............................. <integer(float(iElapsedTime) / me.iFlashSpeed)>
  [ 85] pushint8 2 .............................. <2>
  [ 87] mod ..................................... <integer(float(iElapsedTime) / me.iFlashSpeed) mod 2>
  [ 88] pushzero ................................ <0>
  [ 89] eq ...................................... <(integer(float(iElapsedTime) / me.iFlashSpeed) mod 2) = 0>
  [ 90] jmpifz [194] ............................ if (integer(float(iElapsedTime) / me.iFlashSpeed) mod 2) = 0 then
  [ 93] getparam 0 .............................. <me>
  [ 95] getchainedprop 352 ...................... <me.oBuffer>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 285 .......................... <me.oFlashImage>
  [103] getparam 0 .............................. <me>
  [105] getchainedprop 352 ...................... <me.oBuffer>
  [108] getobjprop 133 .......................... <me.oBuffer.rect>
  [110] pushzero ................................ <0>
  [111] pushzero ................................ <0>
  [112] pushint8 1 .............................. <1>
  [114] pushint8 1 .............................. <1>
  [116] pusharglist 4 ........................... <0, 0, 1, 1>
  [118] extcall 133 ............................. <rect(0, 0, 1, 1)>
  [120] pushsymb 484 ............................ <#blend>
  [123] pushint8 50 ............................. <50>
  [125] pusharglist 2 ........................... <[#blend: 50]>
  [127] pushproplist ............................ <[#blend: 50]>
  [128] pusharglistnoret 5 ...................... <me.oBuffer, me.oFlashImage, me.oBuffer.rect, rect(0, 0, 1, 1), [#blend: 50]>
  [130] objcall 379 ............................. me.oBuffer.copyPixels(me.oFlashImage, me.oBuffer.rect, rect(0, 0, 1, 1), [#blend: 50])
  [133] getparam 0 .............................. <me>
  [135] getobjprop 303 .......................... <me.oSpriteBgColor>
  [138] pusharglistnoret 1 ...................... <me.oSpriteBgColor>
  [140] extcall 49 .............................. put me.oSpriteBgColor
  [142] getparam 0 .............................. <me>
  [144] getchainedprop 352 ...................... <me.oBuffer>
  [147] pushint8 1 .............................. <1>
  [149] pushint8 1 .............................. <1>
  [151] pusharglist 2 ........................... <1, 1>
  [153] extcall 132 ............................. <point(1, 1)>
  [155] getparam 0 .............................. <me>
  [157] getobjprop 303 .......................... <me.oSpriteBgColor>
  [160] pusharglistnoret 3 ...................... <me.oBuffer, point(1, 1), me.oSpriteBgColor>
  [162] objcall 496 ............................. me.oBuffer.floodFill(point(1, 1), me.oSpriteBgColor)
  [165] getparam 0 .............................. <me>
  [167] getchainedprop 352 ...................... <me.oBuffer>
  [170] pushint8 1 .............................. <1>
  [172] pushint8 1 .............................. <1>
  [174] pusharglist 2 ........................... <1, 1>
  [176] extcall 132 ............................. <point(1, 1)>
  [178] pushint8 100 ............................ <100>
  [180] pushint8 100 ............................ <100>
  [182] pushint8 100 ............................ <100>
  [184] pusharglist 3 ........................... <100, 100, 100>
  [186] extcall 286 ............................. <rgb(100, 100, 100)>
  [189] pusharglistnoret 3 ...................... <me.oBuffer, point(1, 1), rgb(100, 100, 100)>
  [191] objcall 496 ............................. me.oBuffer.floodFill(point(1, 1), rgb(100, 100, 100))
  [194] getparam 0 .............................. <me>
  [196] getchainedprop 375 ...................... <me.oImageMember>
  [199] getchainedprop 284 ...................... <me.oImageMember.image>
  [202] getparam 0 .............................. <me>
  [204] getobjprop 352 .......................... <me.oBuffer>
  [207] getparam 0 .............................. <me>
  [209] getchainedprop 352 ...................... <me.oBuffer>
  [212] getobjprop 133 .......................... <me.oBuffer.rect>
  [214] getparam 0 .............................. <me>
  [216] getobjprop 294 .......................... <me.iScale>
  [219] pushcons 5 .............................. <0.01>
  [221] mul ..................................... <me.iScale * 0.01>
  [222] mul ..................................... <me.oBuffer.rect * (me.iScale * 0.01)>
  [223] getparam 0 .............................. <me>
  [225] getchainedprop 352 ...................... <me.oBuffer>
  [228] getobjprop 133 .......................... <me.oBuffer.rect>
  [230] pushsymb 495 ............................ <#dither>
  [233] getparam 0 .............................. <me>
  [235] getobjprop 350 .......................... <me.iDither>
  [238] pusharglist 2 ........................... <[#dither: me.iDither]>
  [240] pushproplist ............................ <[#dither: me.iDither]>
  [241] pusharglistnoret 5 ...................... <me.oImageMember.image, me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect, [#dither: me.iDither]>
  [243] objcall 379 ............................. me.oImageMember.image.copyPixels(me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect, [#dither: me.iDither])
  [246] getparam 0 .............................. <me>
  [248] getobjprop 364 .......................... <me.bDoFloodFill>
  [251] jmpifz [280] ............................ if me.bDoFloodFill then
  [254] getparam 0 .............................. <me>
  [256] getchainedprop 375 ...................... <me.oImageMember>
  [259] getchainedprop 284 ...................... <me.oImageMember.image>
  [262] pushint8 1 .............................. <1>
  [264] pushint8 1 .............................. <1>
  [266] pusharglist 2 ........................... <1, 1>
  [268] extcall 132 ............................. <point(1, 1)>
  [270] getparam 0 .............................. <me>
  [272] getobjprop 303 .......................... <me.oSpriteBgColor>
  [275] pusharglistnoret 3 ...................... <me.oImageMember.image, point(1, 1), me.oSpriteBgColor>
  [277] objcall 496 ............................. me.oImageMember.image.floodFill(point(1, 1), me.oSpriteBgColor)
  [280] getparam 0 .............................. <me>
  [282] getmovieprop 281 ........................ <the milliSeconds>
  [285] getlocal 0 .............................. <iStartTime>
  [287] sub ..................................... <the milliSeconds - iStartTime>
  [288] setobjprop 453 .......................... me.iDisplayTime = the milliSeconds - iStartTime
  [291] getparam 0 .............................. <me>
  [293] getparam 0 .............................. <me>
  [295] getobjprop 454 .......................... <me.iDisplayCount>
  [298] pushint8 1 .............................. <1>
  [300] add ..................................... <me.iDisplayCount + 1>
  [301] setobjprop 454 .......................... me.iDisplayCount = me.iDisplayCount + 1
  [304] ret
end

on drawPart me, aPartSettings
  [  0] getparam 1 .............................. <aPartSettings>
  [  2] pushsymb 498 ............................ <#prt>
  [  5] pusharglist 2 ........................... <aPartSettings, #prt>
  [  7] objcall 86 .............................. <aPartSettings[#prt]>
  [  9] setlocal 0 .............................. sPart = aPartSettings[#prt]
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 16] getlocal 0 .............................. <sPart>
  [ 18] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [ 20] objcall 274 ............................. <me.aRuntimeConfig[sPart]>
  [ 23] pushsymb 437 ............................ <#Active>
  [ 26] pusharglist 2 ........................... <me.aRuntimeConfig[sPart], #Active>
  [ 28] objcall 86 .............................. <me.aRuntimeConfig[sPart][#Active]>
  [ 30] not ..................................... <not me.aRuntimeConfig[sPart][#Active]>
  [ 31] jmpifz [ 38] ............................ if not me.aRuntimeConfig[sPart][#Active] then
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 63 .............................. return 
  [ 38] getparam 1 .............................. <aPartSettings>
  [ 40] pushsymb 142 ............................ <#member>
  [ 42] pusharglist 2 ........................... <aPartSettings, #member>
  [ 44] objcall 86 .............................. <aPartSettings[#member]>
  [ 46] setlocal 1 .............................. oPartMember = aPartSettings[#member]
  [ 48] getlocal 1 .............................. <oPartMember>
  [ 50] getobjprop 372 .......................... <oPartMember.memberNum>
  [ 53] pushint8 1 .............................. <1>
  [ 55] inv ..................................... <-1>
  [ 56] eq ...................................... <oPartMember.memberNum = -1>
  [ 57] jmpifz [ 64] ............................ if oPartMember.memberNum = -1 then
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 63 .............................. return 
  [ 64] getparam 1 .............................. <aPartSettings>
  [ 66] pushsymb 410 ............................ <#clr>
  [ 69] pusharglist 2 ........................... <aPartSettings, #clr>
  [ 71] objcall 86 .............................. <aPartSettings[#clr]>
  [ 73] setlocal 2 .............................. oColor = aPartSettings[#clr]
  [ 75] getparam 1 .............................. <aPartSettings>
  [ 77] pushsymb 386 ............................ <#ink>
  [ 80] pusharglist 2 ........................... <aPartSettings, #ink>
  [ 82] objcall 86 .............................. <aPartSettings[#ink]>
  [ 84] setlocal 3 .............................. iInk = aPartSettings[#ink]
  [ 86] getparam 1 .............................. <aPartSettings>
  [ 88] pushsymb 499 ............................ <#flip>
  [ 91] pusharglist 2 ........................... <aPartSettings, #flip>
  [ 93] objcall 86 .............................. <aPartSettings[#flip]>
  [ 95] setlocal 4 .............................. bFlip = aPartSettings[#flip]
  [ 97] getparam 1 .............................. <aPartSettings>
  [ 99] pushsymb 444 ............................ <#locOff>
  [102] pusharglist 2 ........................... <aPartSettings, #locOff>
  [104] objcall 86 .............................. <aPartSettings[#locOff]>
  [106] setlocal 5 .............................. oLocOff = aPartSettings[#locOff]
  [108] getlocal 5 .............................. <oLocOff>
  [110] getlocal 5 .............................. <oLocOff>
  [112] getlocal 5 .............................. <oLocOff>
  [114] getlocal 5 .............................. <oLocOff>
  [116] pusharglist 4 ........................... <[oLocOff, oLocOff, oLocOff, oLocOff]>
  [118] pushlist ................................ <[oLocOff, oLocOff, oLocOff, oLocOff]>
  [119] setlocal 6 .............................. oLocOffQuad = [oLocOff, oLocOff, oLocOff, oLocOff]
  [121] getparam 0 .............................. <me>
  [123] pushsymb 302 ............................ <#aSourceImages>
  [126] getlocal 1 .............................. <oPartMember>
  [128] getobjprop 376 .......................... <oPartMember.name>
  [131] pusharglist 3 ........................... <me, #aSourceImages, oPartMember.name>
  [133] objcall 54 .............................. <me.aSourceImages[oPartMember.name]>
  [135] setlocal 7 .............................. aSourceImageData = me.aSourceImages[oPartMember.name]
  [137] getlocal 7 .............................. <aSourceImageData>
  [139] pusharglist 1 ........................... <aSourceImageData>
  [141] extcall 365 ............................. <voidp(aSourceImageData)>
  [144] jmpifz [214] ............................ if voidp(aSourceImageData) then / else
  [147] getlocal 1 .............................. <oPartMember>
  [149] getobjprop 284 .......................... <oPartMember.image>
  [152] setlocal 8 .............................. oSourceImage = oPartMember.image
  [154] getlocal 8 .............................. <oSourceImage>
  [156] pusharglist 1 ........................... <oSourceImage>
  [158] objcall 500 ............................. <oSourceImage.createMatte()>
  [161] setlocal 9 .............................. oMatte = oSourceImage.createMatte()
  [163] pushsymb 385 ............................ <#bgColor>
  [166] getlocal 2 .............................. <oColor>
  [168] pushsymb 386 ............................ <#ink>
  [171] getlocal 3 .............................. <iInk>
  [173] pushsymb 501 ............................ <#maskImage>
  [176] getlocal 9 .............................. <oMatte>
  [178] pusharglist 6 ........................... <[#bgColor: oColor, #ink: iInk, #maskImage: oMatte]>
  [180] pushproplist ............................ <[#bgColor: oColor, #ink: iInk, #maskImage: oMatte]>
  [181] setlocal 10 ............................. aParams = [#bgColor: oColor, #ink: iInk, #maskImage: oMatte]
  [183] getparam 0 .............................. <me>
  [185] pushsymb 302 ............................ <#aSourceImages>
  [188] getlocal 1 .............................. <oPartMember>
  [190] getobjprop 376 .......................... <oPartMember.name>
  [193] pushsymb 284 ............................ <#image>
  [196] getlocal 8 .............................. <oSourceImage>
  [198] pushsymb 502 ............................ <#params>
  [201] getlocal 10 ............................. <aParams>
  [203] pusharglist 4 ........................... <[#image: oSourceImage, #params: aParams]>
  [205] pushproplist ............................ <[#image: oSourceImage, #params: aParams]>
  [206] pusharglistnoret 4 ...................... <me, #aSourceImages, oPartMember.name, [#image: oSourceImage, #params: aParams]>
  [208] objcall 276 ............................. me.aSourceImages[oPartMember.name] = [#image: oSourceImage, #params: aParams]
  [211] jmp [236]
  [214] getlocal 7 .............................. <aSourceImageData>
  [216] pushsymb 284 ............................ <#image>
  [219] pusharglist 2 ........................... <aSourceImageData, #image>
  [221] objcall 86 .............................. <aSourceImageData[#image]>
  [223] setlocal 8 .............................. oSourceImage = aSourceImageData[#image]
  [225] getlocal 7 .............................. <aSourceImageData>
  [227] pushsymb 502 ............................ <#params>
  [230] pusharglist 2 ........................... <aSourceImageData, #params>
  [232] objcall 86 .............................. <aSourceImageData[#params]>
  [234] setlocal 10 ............................. aParams = aSourceImageData[#params]
  [236] getparam 0 .............................. <me>
  [238] getlocal 1 .............................. <oPartMember>
  [240] pusharglist 2 ........................... <me, oPartMember>
  [242] objcall 203 ............................. <me.getMemberRect(oPartMember)>
  [244] setlocal 11 ............................. oSourceRect = me.getMemberRect(oPartMember)
  [246] pushzero ................................ <0>
  [247] pushzero ................................ <0>
  [248] getlocal 11 ............................. <oSourceRect>
  [250] getobjprop 377 .......................... <oSourceRect.width>
  [253] getlocal 11 ............................. <oSourceRect>
  [255] getobjprop 378 .......................... <oSourceRect.height>
  [258] pusharglist 4 ........................... <0, 0, oSourceRect.width, oSourceRect.height>
  [260] extcall 133 ............................. <rect(0, 0, oSourceRect.width, oSourceRect.height)>
  [262] setlocal 12 ............................. oDestRect = rect(0, 0, oSourceRect.width, oSourceRect.height)
  [264] getparam 0 .............................. <me>
  [266] getlocal 12 ............................. <oDestRect>
  [268] getlocal 4 .............................. <bFlip>
  [270] pusharglist 3 ........................... <me, oDestRect, bFlip>
  [272] objcall 202 ............................. <me.createQuadFromRect(oDestRect, bFlip)>
  [274] setlocal 13 ............................. oDestQuad = me.createQuadFromRect(oDestRect, bFlip)
  [276] getlocal 13 ............................. <oDestQuad>
  [278] getlocal 6 .............................. <oLocOffQuad>
  [280] add ..................................... <oDestQuad + oLocOffQuad>
  [281] setlocal 13 ............................. oDestQuad = oDestQuad + oLocOffQuad
  [283] getlocal 10 ............................. <aParams>
  [285] pushsymb 495 ............................ <#dither>
  [288] getparam 0 .............................. <me>
  [290] getobjprop 350 .......................... <me.iDither>
  [293] pusharglistnoret 3 ...................... <aParams, #dither, me.iDither>
  [295] objcall 443 ............................. aParams[#dither] = me.iDither
  [298] getparam 0 .............................. <me>
  [300] getchainedprop 352 ...................... <me.oBuffer>
  [303] getlocal 8 .............................. <oSourceImage>
  [305] getlocal 13 ............................. <oDestQuad>
  [307] getlocal 11 ............................. <oSourceRect>
  [309] getlocal 10 ............................. <aParams>
  [311] pusharglistnoret 5 ...................... <me.oBuffer, oSourceImage, oDestQuad, oSourceRect, aParams>
  [313] objcall 379 ............................. me.oBuffer.copyPixels(oSourceImage, oDestQuad, oSourceRect, aParams)
  [316] ret
end

on createQuadFromRect me, rRect, bFlip
  [  0] getparam 1 .............................. <rRect>
  [  2] getobjprop 516 .......................... <rRect.left>
  [  5] getparam 1 .............................. <rRect>
  [  7] getobjprop 517 .......................... <rRect.top>
  [ 10] pusharglist 2 ........................... <rRect.left, rRect.top>
  [ 12] extcall 132 ............................. <point(rRect.left, rRect.top)>
  [ 14] setlocal 0 .............................. oP1 = point(rRect.left, rRect.top)
  [ 16] getparam 1 .............................. <rRect>
  [ 18] getobjprop 518 .......................... <rRect.right>
  [ 21] getparam 1 .............................. <rRect>
  [ 23] getobjprop 517 .......................... <rRect.top>
  [ 26] pusharglist 2 ........................... <rRect.right, rRect.top>
  [ 28] extcall 132 ............................. <point(rRect.right, rRect.top)>
  [ 30] setlocal 1 .............................. oP2 = point(rRect.right, rRect.top)
  [ 32] getparam 1 .............................. <rRect>
  [ 34] getobjprop 518 .......................... <rRect.right>
  [ 37] getparam 1 .............................. <rRect>
  [ 39] getobjprop 519 .......................... <rRect.bottom>
  [ 42] pusharglist 2 ........................... <rRect.right, rRect.bottom>
  [ 44] extcall 132 ............................. <point(rRect.right, rRect.bottom)>
  [ 46] setlocal 2 .............................. oP3 = point(rRect.right, rRect.bottom)
  [ 48] getparam 1 .............................. <rRect>
  [ 50] getobjprop 516 .......................... <rRect.left>
  [ 53] getparam 1 .............................. <rRect>
  [ 55] getobjprop 519 .......................... <rRect.bottom>
  [ 58] pusharglist 2 ........................... <rRect.left, rRect.bottom>
  [ 60] extcall 132 ............................. <point(rRect.left, rRect.bottom)>
  [ 62] setlocal 3 .............................. oP4 = point(rRect.left, rRect.bottom)
  [ 64] getparam 2 .............................. <bFlip>
  [ 66] jmpifz [ 87] ............................ if bFlip then / else
  [ 69] getlocal 1 .............................. <oP2>
  [ 71] getlocal 0 .............................. <oP1>
  [ 73] getlocal 3 .............................. <oP4>
  [ 75] getlocal 2 .............................. <oP3>
  [ 77] pusharglist 4 ........................... <[oP2, oP1, oP4, oP3]>
  [ 79] pushlist ................................ <[oP2, oP1, oP4, oP3]>
  [ 80] pusharglistnoret 1 ...................... <[oP2, oP1, oP4, oP3]>
  [ 82] extcall 63 .............................. return [oP2, oP1, oP4, oP3]
  [ 84] jmp [102]
  [ 87] getlocal 0 .............................. <oP1>
  [ 89] getlocal 1 .............................. <oP2>
  [ 91] getlocal 2 .............................. <oP3>
  [ 93] getlocal 3 .............................. <oP4>
  [ 95] pusharglist 4 ........................... <[oP1, oP2, oP3, oP4]>
  [ 97] pushlist ................................ <[oP1, oP2, oP3, oP4]>
  [ 98] pusharglistnoret 1 ...................... <[oP1, oP2, oP3, oP4]>
  [100] extcall 63 .............................. return [oP1, oP2, oP3, oP4]
  [102] ret
end

on getMemberRect me, oMember
  [  0] getparam 1 .............................. <oMember>
  [  2] getobjprop 380 .......................... <oMember.regPoint>
  [  5] setlocal 0 .............................. oRegPoint = oMember.regPoint
  [  7] pushzero ................................ <0>
  [  8] setlocal 1 .............................. vAdd = 0
  [ 10] getlocal 0 .............................. <oRegPoint>
  [ 12] getobjprop 525 .......................... <oRegPoint.locV>
  [ 15] getparam 1 .............................. <oMember>
  [ 17] getchainedprop 133 ...................... <oMember.rect>
  [ 19] getobjprop 519 .......................... <oMember.rect.bottom>
  [ 22] lt ...................................... <oRegPoint.locV < oMember.rect.bottom>
  [ 23] jmpifz [ 41] ............................ if oRegPoint.locV < oMember.rect.bottom then
  [ 26] getparam 1 .............................. <oMember>
  [ 28] getchainedprop 133 ...................... <oMember.rect>
  [ 30] getobjprop 519 .......................... <oMember.rect.bottom>
  [ 33] getlocal 0 .............................. <oRegPoint>
  [ 35] getobjprop 525 .......................... <oRegPoint.locV>
  [ 38] sub ..................................... <oMember.rect.bottom - oRegPoint.locV>
  [ 39] setlocal 1 .............................. vAdd = oMember.rect.bottom - oRegPoint.locV
  [ 41] getlocal 0 .............................. <oRegPoint>
  [ 43] getobjprop 468 .......................... <oRegPoint.locH>
  [ 46] getlocal 0 .............................. <oRegPoint>
  [ 48] getobjprop 525 .......................... <oRegPoint.locV>
  [ 51] pushint8 110 ............................ <110>
  [ 53] sub ..................................... <oRegPoint.locV - 110>
  [ 54] getlocal 0 .............................. <oRegPoint>
  [ 56] getobjprop 468 .......................... <oRegPoint.locH>
  [ 59] pushint8 77 ............................. <77>
  [ 61] add ..................................... <oRegPoint.locH + 77>
  [ 62] getlocal 0 .............................. <oRegPoint>
  [ 64] getobjprop 525 .......................... <oRegPoint.locV>
  [ 67] getlocal 1 .............................. <vAdd>
  [ 69] add ..................................... <oRegPoint.locV + vAdd>
  [ 70] pusharglist 4 ........................... <oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd>
  [ 72] extcall 133 ............................. <rect(oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd)>
  [ 74] pusharglistnoret 1 ...................... <rect(oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd)>
  [ 76] extcall 63 .............................. return rect(oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd)
  [ 78] ret
end

on getDrawSettings me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aDrawSettings = [:]
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 448 ............................ <#aDrawOrder>
  [ 16] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 18] objcall 88 .............................. <me.aDrawOrder.count>
  [ 20] lteq
  [ 21] jmpifz [ 78] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 448 ............................ <#aDrawOrder>
  [ 29] getlocal 1 .............................. <i>
  [ 31] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 33] objcall 54 .............................. <me.aDrawOrder[i]>
  [ 35] setlocal 2 .............................. sPart = me.aDrawOrder[i]
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 2 .............................. <sPart>
  [ 41] pusharglist 2 ........................... <me, sPart>
  [ 43] objcall 205 ............................. <me.getPartSettings(sPart)>
  [ 45] setlocal 3 .............................. aPartSettings = me.getPartSettings(sPart)
  [ 47] getlocal 3 .............................. <aPartSettings>
  [ 49] pusharglist 1 ........................... <aPartSettings>
  [ 51] extcall 365 ............................. <voidp(aPartSettings)>
  [ 54] not ..................................... <not voidp(aPartSettings)>
  [ 55] jmpifz [ 69] ............................ if not voidp(aPartSettings) then
  [ 58] getlocal 0 .............................. <aDrawSettings>
  [ 60] getlocal 2 .............................. <sPart>
  [ 62] getlocal 3 .............................. <aPartSettings>
  [ 64] pusharglistnoret 3 ...................... <aDrawSettings, sPart, aPartSettings>
  [ 66] objcall 443 ............................. aDrawSettings[sPart] = aPartSettings
  [ 69] pushint8 1
  [ 71] getlocal 1
  [ 73] add
  [ 74] setlocal 1
  [ 76] endrepeat [  9]
  [ 78] getlocal 0 .............................. <aDrawSettings>
  [ 80] pusharglistnoret 1 ...................... <aDrawSettings>
  [ 82] extcall 63 .............................. return aDrawSettings
  [ 84] ret
end

on getPartSettings me, prt
  [  0] getparam 1 .............................. <prt>
  [  2] setlocal 0 .............................. sPart = prt
  [  4] getparam 0 .............................. <me>
  [  6] pushsymb 432 ............................ <#aRuntimeConfig>
  [  9] getlocal 0 .............................. <sPart>
  [ 11] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [ 13] objcall 54 .............................. <me.aRuntimeConfig[sPart]>
  [ 15] setlocal 1 .............................. aConfig = me.aRuntimeConfig[sPart]
  [ 17] getlocal 1 .............................. <aConfig>
  [ 19] pusharglist 0 ........................... <>
  [ 21] extcall 59 .............................. <VOID>
  [ 23] eq ...................................... <aConfig = VOID>
  [ 24] jmpifz [ 35] ............................ if aConfig = VOID then
  [ 27] pusharglist 0 ........................... <>
  [ 29] extcall 59 .............................. <VOID>
  [ 31] pusharglistnoret 1 ...................... <VOID>
  [ 33] extcall 63 .............................. return VOID
  [ 35] getparam 0 .............................. <me>
  [ 37] pushsymb 403 ............................ <#aAttributes>
  [ 40] getparam 1 .............................. <prt>
  [ 42] pusharglist 3 ........................... <me, #aAttributes, prt>
  [ 44] objcall 274 ............................. <me.aAttributes[prt]>
  [ 47] pushsymb 409 ............................ <#prtCd>
  [ 50] pusharglist 2 ........................... <me.aAttributes[prt], #prtCd>
  [ 52] objcall 86 .............................. <me.aAttributes[prt][#prtCd]>
  [ 54] setlocal 2 .............................. sPartCode = me.aAttributes[prt][#prtCd]
  [ 56] getlocal 2 .............................. <sPartCode>
  [ 58] pushcons 18 ............................. <"000">
  [ 60] eq ...................................... <sPartCode = "000">
  [ 61] jmpifz [ 72] ............................ if sPartCode = "000" then
  [ 64] pusharglist 0 ........................... <>
  [ 66] extcall 59 .............................. <VOID>
  [ 68] pusharglistnoret 1 ...................... <VOID>
  [ 70] extcall 63 .............................. return VOID
  [ 72] getlocal 1 .............................. <aConfig>
  [ 74] pushsymb 437 ............................ <#Active>
  [ 77] pusharglist 2 ........................... <aConfig, #Active>
  [ 79] objcall 86 .............................. <aConfig[#Active]>
  [ 81] setlocal 3 .............................. bActive = aConfig[#Active]
  [ 83] getlocal 3 .............................. <bActive>
  [ 85] not ..................................... <not bActive>
  [ 86] jmpifz [ 97] ............................ if not bActive then
  [ 89] pusharglist 0 ........................... <>
  [ 91] extcall 59 .............................. <VOID>
  [ 93] pusharglistnoret 1 ...................... <VOID>
  [ 95] extcall 63 .............................. return VOID
  [ 97] getparam 0 .............................. <me>
  [ 99] pushsymb 440 ............................ <#aDanceOverride>
  [102] getlocal 0 .............................. <sPart>
  [104] pusharglist 3 ........................... <me, #aDanceOverride, sPart>
  [106] objcall 54 .............................. <me.aDanceOverride[sPart]>
  [108] setlocal 4 .............................. aDanceSetting = me.aDanceOverride[sPart]
  [110] pushcons 46 ............................. <"h">
  [112] setlocal 5 .............................. sID = "h"
  [114] getlocal 1 .............................. <aConfig>
  [116] pushsymb 433 ............................ <#act>
  [119] pusharglist 2 ........................... <aConfig, #act>
  [121] objcall 86 .............................. <aConfig[#act]>
  [123] setlocal 6 .............................. sAction = aConfig[#act]
  [125] getparam 0 .............................. <me>
  [127] getobjprop 323 .......................... <me.bDance>
  [130] getparam 0 .............................. <me>
  [132] getobjprop 308 .......................... <me.sBodyAction>
  [135] pushcons 3 .............................. <"std">
  [137] eq ...................................... <me.sBodyAction = "std">
  [138] and ..................................... <me.bDance and (me.sBodyAction = "std")>
  [139] jmpifz [198] ............................ if me.bDance and (me.sBodyAction = "std") then
  [142] getlocal 4 .............................. <aDanceSetting>
  [144] pusharglist 1 ........................... <aDanceSetting>
  [146] extcall 365 ............................. <voidp(aDanceSetting)>
  [149] not ..................................... <not voidp(aDanceSetting)>
  [150] jmpifz [198] ............................ if not voidp(aDanceSetting) then
  [153] getlocal 4 .............................. <aDanceSetting>
  [155] pushsymb 441 ............................ <#prts>
  [158] pusharglist 2 ........................... <aDanceSetting, #prts>
  [160] objcall 86 .............................. <aDanceSetting[#prts]>
  [162] setlocal 7 .............................. aDanceParts = aDanceSetting[#prts]
  [164] getlocal 7 .............................. <aDanceParts>
  [166] pusharglist 1 ........................... <aDanceParts>
  [168] extcall 365 ............................. <voidp(aDanceParts)>
  [171] not ..................................... <not voidp(aDanceParts)>
  [172] jmpifz [198] ............................ if not voidp(aDanceParts) then
  [175] getlocal 7 .............................. <aDanceParts>
  [177] getparam 0 .............................. <me>
  [179] getobjprop 306 .......................... <me.iAnimStep>
  [182] pushint8 1 .............................. <1>
  [184] add ..................................... <me.iAnimStep + 1>
  [185] pusharglist 2 ........................... <aDanceParts, me.iAnimStep + 1>
  [187] objcall 86 .............................. <aDanceParts[me.iAnimStep + 1]>
  [189] pushsymb 433 ............................ <#act>
  [192] pusharglist 2 ........................... <aDanceParts[me.iAnimStep + 1], #act>
  [194] objcall 86 .............................. <aDanceParts[me.iAnimStep + 1][#act]>
  [196] setlocal 6 .............................. sAction = aDanceParts[me.iAnimStep + 1][#act]
  [198] getparam 0 .............................. <me>
  [200] pushsymb 431 ............................ <#aConfigSettings>
  [203] getlocal 0 .............................. <sPart>
  [205] pusharglist 3 ........................... <me, #aConfigSettings, sPart>
  [207] objcall 274 ............................. <me.aConfigSettings[sPart]>
  [210] getlocal 1 .............................. <aConfig>
  [212] pushsymb 433 ............................ <#act>
  [215] pusharglist 2 ........................... <aConfig, #act>
  [217] objcall 86 .............................. <aConfig[#act]>
  [219] pusharglist 2 ........................... <me.aConfigSettings[sPart], aConfig[#act]>
  [221] objcall 86 .............................. <me.aConfigSettings[sPart][aConfig[#act]]>
  [223] pushsymb 529 ............................ <#dir>
  [226] pusharglist 2 ........................... <me.aConfigSettings[sPart][aConfig[#act]], #dir>
  [228] objcall 86 .............................. <me.aConfigSettings[sPart][aConfig[#act]][#dir]>
  [230] setlocal 8 .............................. aDirs = me.aConfigSettings[sPart][aConfig[#act]][#dir]
  [232] getparam 0 .............................. <me>
  [234] getparam 0 .............................. <me>
  [236] getobjprop 295 .......................... <me.iDirection>
  [239] getlocal 1 .............................. <aConfig>
  [241] pushsymb 438 ............................ <#dirOff>
  [244] pusharglist 2 ........................... <aConfig, #dirOff>
  [246] objcall 86 .............................. <aConfig[#dirOff]>
  [248] pusharglist 3 ........................... <me, me.iDirection, aConfig[#dirOff]>
  [250] objcall 217 ............................. <me.getDirectionOffset(me.iDirection, aConfig[#dirOff])>
  [252] setlocal 9 .............................. iDirOff = me.getDirectionOffset(me.iDirection, aConfig[#dirOff])
  [254] getparam 0 .............................. <me>
  [256] getlocal 9 .............................. <iDirOff>
  [258] getlocal 8 .............................. <aDirs>
  [260] pusharglist 3 ........................... <me, iDirOff, aDirs>
  [262] objcall 216 ............................. <me.getRealDirection(iDirOff, aDirs)>
  [264] setlocal 10 ............................. iDir = me.getRealDirection(iDirOff, aDirs)
  [266] getlocal 10 ............................. <iDir>
  [268] pusharglist 1 ........................... <iDir>
  [270] extcall 365 ............................. <voidp(iDir)>
  [273] getparam 0 .............................. <me>
  [275] getobjprop 323 .......................... <me.bDance>
  [278] not ..................................... <not me.bDance>
  [279] and ..................................... <voidp(iDir) and not me.bDance>
  [280] jmpifz [291] ............................ if voidp(iDir) and not me.bDance then
  [283] pusharglist 0 ........................... <>
  [285] extcall 59 .............................. <VOID>
  [287] pusharglistnoret 1 ...................... <VOID>
  [289] extcall 63 .............................. return VOID
  [291] getlocal 1 .............................. <aConfig>
  [293] pushsymb 436 ............................ <#animIndex>
  [296] pusharglist 2 ........................... <aConfig, #animIndex>
  [298] objcall 86 .............................. <aConfig[#animIndex]>
  [300] setlocal 11 ............................. iFrame = aConfig[#animIndex]
  [302] getlocal 7 .............................. <aDanceParts>
  [304] pusharglist 1 ........................... <aDanceParts>
  [306] extcall 365 ............................. <voidp(aDanceParts)>
  [309] not ..................................... <not voidp(aDanceParts)>
  [310] jmpifz [336] ............................ if not voidp(aDanceParts) then
  [313] getlocal 7 .............................. <aDanceParts>
  [315] getparam 0 .............................. <me>
  [317] getobjprop 306 .......................... <me.iAnimStep>
  [320] pushint8 1 .............................. <1>
  [322] add ..................................... <me.iAnimStep + 1>
  [323] pusharglist 2 ........................... <aDanceParts, me.iAnimStep + 1>
  [325] objcall 86 .............................. <aDanceParts[me.iAnimStep + 1]>
  [327] pushsymb 442 ............................ <#fr>
  [330] pusharglist 2 ........................... <aDanceParts[me.iAnimStep + 1], #fr>
  [332] objcall 86 .............................. <aDanceParts[me.iAnimStep + 1][#fr]>
  [334] setlocal 11 ............................. iFrame = aDanceParts[me.iAnimStep + 1][#fr]
  [336] getparam 0 .............................. <me>
  [338] getobjprop 323 .......................... <me.bDance>
  [341] getparam 0 .............................. <me>
  [343] getobjprop 308 .......................... <me.sBodyAction>
  [346] pushcons 3 .............................. <"std">
  [348] eq ...................................... <me.sBodyAction = "std">
  [349] and ..................................... <me.bDance and (me.sBodyAction = "std")>
  [350] jmpifz [443] ............................ if me.bDance and (me.sBodyAction = "std") then
  [353] getlocal 4 .............................. <aDanceSetting>
  [355] pusharglist 1 ........................... <aDanceSetting>
  [357] extcall 365 ............................. <voidp(aDanceSetting)>
  [360] not ..................................... <not voidp(aDanceSetting)>
  [361] jmpifz [443] ............................ if not voidp(aDanceSetting) then
  [364] getlocal 4 .............................. <aDanceSetting>
  [366] pushsymb 438 ............................ <#dirOff>
  [369] pusharglist 2 ........................... <aDanceSetting, #dirOff>
  [371] objcall 86 .............................. <aDanceSetting[#dirOff]>
  [373] setlocal 12 ............................. aDanceDirOff = aDanceSetting[#dirOff]
  [375] getlocal 12 ............................. <aDanceDirOff>
  [377] pusharglist 1 ........................... <aDanceDirOff>
  [379] extcall 365 ............................. <voidp(aDanceDirOff)>
  [382] not ..................................... <not voidp(aDanceDirOff)>
  [383] jmpifz [443] ............................ if not voidp(aDanceDirOff) then
  [386] getparam 0 .............................. <me>
  [388] getparam 0 .............................. <me>
  [390] getobjprop 295 .......................... <me.iDirection>
  [393] getlocal 12 ............................. <aDanceDirOff>
  [395] getparam 0 .............................. <me>
  [397] getobjprop 306 .......................... <me.iAnimStep>
  [400] pushint8 1 .............................. <1>
  [402] add ..................................... <me.iAnimStep + 1>
  [403] pusharglist 2 ........................... <aDanceDirOff, me.iAnimStep + 1>
  [405] objcall 86 .............................. <aDanceDirOff[me.iAnimStep + 1]>
  [407] pusharglist 3 ........................... <me, me.iDirection, aDanceDirOff[me.iAnimStep + 1]>
  [409] objcall 217 ............................. <me.getDirectionOffset(me.iDirection, aDanceDirOff[me.iAnimStep + 1])>
  [411] setlocal 9 .............................. iDirOff = me.getDirectionOffset(me.iDirection, aDanceDirOff[me.iAnimStep + 1])
  [413] getparam 0 .............................. <me>
  [415] getlocal 9 .............................. <iDirOff>
  [417] getlocal 8 .............................. <aDirs>
  [419] pusharglist 3 ........................... <me, iDirOff, aDirs>
  [421] objcall 216 ............................. <me.getRealDirection(iDirOff, aDirs)>
  [423] setlocal 10 ............................. iDir = me.getRealDirection(iDirOff, aDirs)
  [425] getlocal 10 ............................. <iDir>
  [427] pusharglist 1 ........................... <iDir>
  [429] extcall 365 ............................. <voidp(iDir)>
  [432] jmpifz [443] ............................ if voidp(iDir) then
  [435] pusharglist 0 ........................... <>
  [437] extcall 59 .............................. <VOID>
  [439] pusharglistnoret 1 ...................... <VOID>
  [441] extcall 63 .............................. return VOID
  [443] getlocal 8 .............................. <aDirs>
  [445] getparam 0 .............................. <me>
  [447] getobjprop 295 .......................... <me.iDirection>
  [450] pusharglist 2 ........................... <aDirs, me.iDirection>
  [452] objcall 130 ............................. <aDirs.getPos(me.iDirection)>
  [454] pushzero ................................ <0>
  [455] gt ...................................... <aDirs.getPos(me.iDirection) > 0>
  [456] not ..................................... <not (aDirs.getPos(me.iDirection) > 0)>
  [457] setlocal 13 ............................. bFlip = not (aDirs.getPos(me.iDirection) > 0)
  [459] getparam 0 .............................. <me>
  [461] getobjprop 324 .......................... <me.bCarry>
  [464] getlocal 0 .............................. <sPart>
  [466] pushsymb 341 ............................ <#ri>
  [469] eq ...................................... <sPart = #ri>
  [470] and ..................................... <me.bCarry and (sPart = #ri)>
  [471] jmpifz [502] ............................ if me.bCarry and (sPart = #ri) then
  [474] getparam 0 .............................. <me>
  [476] getobjprop 295 .......................... <me.iDirection>
  [479] pushint8 5 .............................. <5>
  [481] eq ...................................... <me.iDirection = 5>
  [482] getparam 0 .............................. <me>
  [484] getobjprop 295 .......................... <me.iDirection>
  [487] pushint8 4 .............................. <4>
  [489] eq ...................................... <me.iDirection = 4>
  [490] or ...................................... <(me.iDirection = 5) or (me.iDirection = 4)>
  [491] jmpifz [498] ............................ if (me.iDirection = 5) or (me.iDirection = 4) then
  [494] pushint8 1 .............................. <1>
  [496] setlocal 13 ............................. bFlip = 1
  [498] pushcons 32 ............................. <"crr">
  [500] setlocal 6 .............................. sAction = "crr"
  [502] getparam 0 .............................. <me>
  [504] getobjprop 324 .......................... <me.bCarry>
  [507] jmpifz [556] ............................ if me.bCarry then / else
  [510] getlocal 0 .............................. <sPart>
  [512] pushsymb 342 ............................ <#rh>
  [515] eq ...................................... <sPart = #rh>
  [516] getlocal 0 .............................. <sPart>
  [518] pushsymb 343 ............................ <#rs>
  [521] eq ...................................... <sPart = #rs>
  [522] or ...................................... <(sPart = #rh) or (sPart = #rs)>
  [523] getlocal 0 .............................. <sPart>
  [525] pushsymb 335 ............................ <#lh>
  [528] eq ...................................... <sPart = #lh>
  [529] or ...................................... <(sPart = #rh) or (sPart = #rs) or (sPart = #lh)>
  [530] getlocal 0 .............................. <sPart>
  [532] pushsymb 336 ............................ <#ls>
  [535] eq ...................................... <sPart = #ls>
  [536] or ...................................... <(sPart = #rh) or (sPart = #rs) or (sPart = #lh) or (sPart = #ls)>
  [537] jmpifz [547] ............................ if (sPart = #rh) or (sPart = #rs) or (sPart = #lh) or (sPart = #ls) then
  [540] pushcons 32 ............................. <"crr">
  [542] setlocal 6 .............................. sAction = "crr"
  [544] pushzero ................................ <0>
  [545] setlocal 11 ............................. iFrame = 0
  [547] getparam 0 .............................. <me>
  [549] pusharglistnoret 1 ...................... <me>
  [551] objcall 194 ............................. me.carryTool()
  [553] jmp [579]
  [556] getparam 0 .............................. <me>
  [558] getobjprop 326 .......................... <me.iToolSprite>
  [561] pusharglist 1 ........................... <me.iToolSprite>
  [563] extcall 79 .............................. <sprite(me.iToolSprite)>
  [565] pushint16 500 ........................... <500>
  [568] inv ..................................... <-500>
  [569] pushint16 500 ........................... <500>
  [572] inv ..................................... <-500>
  [573] pusharglist 2 ........................... <-500, -500>
  [575] extcall 132 ............................. <point(-500, -500)>
  [577] setobjprop 80 ........................... sprite(me.iToolSprite).loc = point(-500, -500)
  [579] getparam 0 .............................. <me>
  [581] pushsymb 403 ............................ <#aAttributes>
  [584] getparam 1 .............................. <prt>
  [586] pusharglist 3 ........................... <me, #aAttributes, prt>
  [588] objcall 274 ............................. <me.aAttributes[prt]>
  [591] pushsymb 410 ............................ <#clr>
  [594] pusharglist 2 ........................... <me.aAttributes[prt], #clr>
  [596] objcall 86 .............................. <me.aAttributes[prt][#clr]>
  [598] setlocal 14 ............................. oColor = me.aAttributes[prt][#clr]
  [600] getlocal 5 .............................. <sID>
  [602] pushcons 44 ............................. <"_">
  [604] joinstr ................................. <sID & "_">
  [605] getlocal 6 .............................. <sAction>
  [607] joinstr ................................. <sID & "_" & sAction>
  [608] pushcons 44 ............................. <"_">
  [610] joinstr ................................. <sID & "_" & sAction & "_">
  [611] getlocal 0 .............................. <sPart>
  [613] joinstr ................................. <sID & "_" & sAction & "_" & sPart>
  [614] pushcons 44 ............................. <"_">
  [616] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_">
  [617] getlocal 2 .............................. <sPartCode>
  [619] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode>
  [620] pushcons 44 ............................. <"_">
  [622] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_">
  [623] getlocal 10 ............................. <iDir>
  [625] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir>
  [626] pushcons 44 ............................. <"_">
  [628] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_">
  [629] getlocal 11 ............................. <iFrame>
  [631] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & iFrame>
  [632] setlocal 15 ............................. sMemberName = sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & iFrame
  [634] getlocal 15 ............................. <sMemberName>
  [636] getparam 0 .............................. <me>
  [638] getobjprop 290 .......................... <me.sPartCast>
  [641] pusharglist 2 ........................... <sMemberName, me.sPartCast>
  [643] extcall 142 ............................. <member(sMemberName, me.sPartCast)>
  [645] setlocal 16 ............................. oMember = member(sMemberName, me.sPartCast)
  [647] getlocal 16 ............................. <oMember>
  [649] getobjprop 372 .......................... <oMember.memberNum>
  [652] pushint8 1 .............................. <1>
  [654] inv ..................................... <-1>
  [655] eq ...................................... <oMember.memberNum = -1>
  [656] jmpifz [726] ............................ if oMember.memberNum = -1 then
  [659] getlocal 5 .............................. <sID>
  [661] pushcons 44 ............................. <"_">
  [663] joinstr ................................. <sID & "_">
  [664] getlocal 6 .............................. <sAction>
  [666] joinstr ................................. <sID & "_" & sAction>
  [667] pushcons 44 ............................. <"_">
  [669] joinstr ................................. <sID & "_" & sAction & "_">
  [670] getlocal 0 .............................. <sPart>
  [672] joinstr ................................. <sID & "_" & sAction & "_" & sPart>
  [673] pushcons 44 ............................. <"_">
  [675] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_">
  [676] getlocal 2 .............................. <sPartCode>
  [678] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode>
  [679] pushcons 44 ............................. <"_">
  [681] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_">
  [682] getlocal 10 ............................. <iDir>
  [684] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir>
  [685] pushcons 44 ............................. <"_">
  [687] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_">
  [688] pushcons 47 ............................. <"0">
  [690] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & "0">
  [691] setlocal 15 ............................. sMemberName = sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & "0"
  [693] getlocal 15 ............................. <sMemberName>
  [695] getparam 0 .............................. <me>
  [697] getobjprop 290 .......................... <me.sPartCast>
  [700] pusharglist 2 ........................... <sMemberName, me.sPartCast>
  [702] extcall 142 ............................. <member(sMemberName, me.sPartCast)>
  [704] setlocal 16 ............................. oMember = member(sMemberName, me.sPartCast)
  [706] getlocal 16 ............................. <oMember>
  [708] getobjprop 372 .......................... <oMember.memberNum>
  [711] pushint8 1 .............................. <1>
  [713] inv ..................................... <-1>
  [714] eq ...................................... <oMember.memberNum = -1>
  [715] jmpifz [726] ............................ if oMember.memberNum = -1 then
  [718] pusharglist 0 ........................... <>
  [720] extcall 59 .............................. <VOID>
  [722] pusharglistnoret 1 ...................... <VOID>
  [724] extcall 63 .............................. return VOID
  [726] getlocal 1 .............................. <aConfig>
  [728] pushsymb 386 ............................ <#ink>
  [731] pusharglist 2 ........................... <aConfig, #ink>
  [733] objcall 86 .............................. <aConfig[#ink]>
  [735] setlocal 17 ............................. iInk = aConfig[#ink]
  [737] getlocal 17 ............................. <iInk>
  [739] pusharglist 1 ........................... <iInk>
  [741] extcall 365 ............................. <voidp(iInk)>
  [744] jmpifz [754] ............................ if voidp(iInk) then
  [747] getparam 0 .............................. <me>
  [749] getobjprop 301 .......................... <me.iDefaultInk>
  [752] setlocal 17 ............................. iInk = me.iDefaultInk
  [754] pushzero ................................ <0>
  [755] pushzero ................................ <0>
  [756] pusharglist 2 ........................... <0, 0>
  [758] extcall 132 ............................. <point(0, 0)>
  [760] setlocal 18 ............................. oLocOff = point(0, 0)
  [762] getparam 0 .............................. <me>
  [764] getobjprop 323 .......................... <me.bDance>
  [767] getparam 0 .............................. <me>
  [769] getobjprop 308 .......................... <me.sBodyAction>
  [772] pushcons 3 .............................. <"std">
  [774] eq ...................................... <me.sBodyAction = "std">
  [775] and ..................................... <me.bDance and (me.sBodyAction = "std")>
  [776] jmpifz [828] ............................ if me.bDance and (me.sBodyAction = "std") then
  [779] getlocal 4 .............................. <aDanceSetting>
  [781] pusharglist 1 ........................... <aDanceSetting>
  [783] extcall 365 ............................. <voidp(aDanceSetting)>
  [786] not ..................................... <not voidp(aDanceSetting)>
  [787] jmpifz [828] ............................ if not voidp(aDanceSetting) then
  [790] getlocal 4 .............................. <aDanceSetting>
  [792] pushsymb 444 ............................ <#locOff>
  [795] pusharglist 2 ........................... <aDanceSetting, #locOff>
  [797] objcall 86 .............................. <aDanceSetting[#locOff]>
  [799] setlocal 19 ............................. aDanceLocOff = aDanceSetting[#locOff]
  [801] getlocal 19 ............................. <aDanceLocOff>
  [803] pusharglist 1 ........................... <aDanceLocOff>
  [805] extcall 365 ............................. <voidp(aDanceLocOff)>
  [808] not ..................................... <not voidp(aDanceLocOff)>
  [809] jmpifz [828] ............................ if not voidp(aDanceLocOff) then
  [812] getlocal 19 ............................. <aDanceLocOff>
  [814] getparam 0 .............................. <me>
  [816] getobjprop 306 .......................... <me.iAnimStep>
  [819] pushint8 1 .............................. <1>
  [821] add ..................................... <me.iAnimStep + 1>
  [822] pusharglist 2 ........................... <aDanceLocOff, me.iAnimStep + 1>
  [824] objcall 86 .............................. <aDanceLocOff[me.iAnimStep + 1]>
  [826] setlocal 18 ............................. oLocOff = aDanceLocOff[me.iAnimStep + 1]
  [828] pushsymb 530 ............................ <#id>
  [831] getlocal 5 .............................. <sID>
  [833] pushsymb 433 ............................ <#act>
  [836] getlocal 6 .............................. <sAction>
  [838] pushsymb 498 ............................ <#prt>
  [841] getparam 1 .............................. <prt>
  [843] pushsymb 409 ............................ <#prtCd>
  [846] getlocal 2 .............................. <sPartCode>
  [848] pushsymb 529 ............................ <#dir>
  [851] getlocal 10 ............................. <iDir>
  [853] pushsymb 442 ............................ <#fr>
  [856] getlocal 11 ............................. <iFrame>
  [858] pushsymb 499 ............................ <#flip>
  [861] getlocal 13 ............................. <bFlip>
  [863] pushsymb 410 ............................ <#clr>
  [866] getlocal 14 ............................. <oColor>
  [868] pushsymb 531 ............................ <#memberName>
  [871] getlocal 15 ............................. <sMemberName>
  [873] pushsymb 142 ............................ <#member>
  [875] getlocal 16 ............................. <oMember>
  [877] pushsymb 386 ............................ <#ink>
  [880] getlocal 17 ............................. <iInk>
  [882] pushsymb 444 ............................ <#locOff>
  [885] getlocal 18 ............................. <oLocOff>
  [887] pusharglist 24 .......................... <[#id: sID, #act: sAction, #prt: prt, #prtCd: sPartCode, #dir: iDir, #fr: iFrame, #flip: bFlip, #clr: oColor, #memberName: sMemberName, #member: oMember, #ink: iInk, #locOff: oLocOff]>
  [889] pushproplist ............................ <[#id: sID, #act: sAction, #prt: prt, #prtCd: sPartCode, #dir: iDir, #fr: iFrame, #flip: bFlip, #clr: oColor, #memberName: sMemberName, #member: oMember, #ink: iInk, #locOff: oLocOff]>
  [890] setlocal 20 ............................. aPartSettings = [#id: sID, #act: sAction, #prt: prt, #prtCd: sPartCode, #dir: iDir, #fr: iFrame, #flip: bFlip, #clr: oColor, #memberName: sMemberName, #member: oMember, #ink: iInk, #locOff: oLocOff]
  [892] getlocal 20 ............................. <aPartSettings>
  [894] pusharglistnoret 1 ...................... <aPartSettings>
  [896] extcall 63 .............................. return aPartSettings
  [898] ret
end

on doCollision me, sCollisionMessage, sSoundType
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 168 ............................. <me.getFlashing()>
  [  6] not ..................................... <not me.getFlashing()>
  [  7] jmpifz [286] ............................ if not me.getFlashing() then
  [ 10] getglobal 58 ............................ <oComputer>
  [ 12] getchainedprop 61 ....................... <oComputer.oTimer>
  [ 14] pusharglistnoret 1 ...................... <oComputer.oTimer>
  [ 16] objcall 99 .............................. oComputer.oTimer.stopTiming()
  [ 18] getparam 0 .............................. <me>
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 2 ...................... <me, 1>
  [ 24] objcall 103 ............................. me.pauseMachine(1)
  [ 26] pushsymb 103 ............................ <#pauseMachine>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 2 ...................... <#pauseMachine, 1>
  [ 32] extcall 94 .............................. sendAllSprites(#pauseMachine, 1)
  [ 34] getglobal 58 ............................ <oComputer>
  [ 36] pushint8 1 .............................. <1>
  [ 38] pusharglistnoret 2 ...................... <oComputer, 1>
  [ 40] objcall 28 .............................. oComputer.decrementLives(1)
  [ 42] getparam 2 .............................. <sSoundType>
  [ 44] peek 0 .................................. case sSoundType of
  [ 46] pushcons 48 ............................. <"hit">
  [ 48] eq
  [ 49] jmpifz [ 76] ............................ (case) "hit":
  [ 52] pushcons 49 ............................. <"metlcrs1">
  [ 54] pusharglist 1 ........................... <"metlcrs1">
  [ 56] extcall 142 ............................. <member("metlcrs1")>
  [ 58] setlocal 0 .............................. oMember = member("metlcrs1")
  [ 60] getglobal 138 ........................... <oSpriteManager>
  [ 62] getobjprop 152 .......................... <oSpriteManager.iEffectSound>
  [ 64] pusharglist 1 ........................... <oSpriteManager.iEffectSound>
  [ 66] extcall 137 ............................. <sound(oSpriteManager.iEffectSound)>
  [ 68] pushint16 235 ........................... <235>
  [ 71] setobjprop 140 .......................... sound(oSpriteManager.iEffectSound).volume = 235
  [ 73] jmp [161]
  [ 76] peek 0
  [ 78] pushcons 50 ............................. <"cook">
  [ 80] eq
  [ 81] jmpifz [108] ............................ (case) "cook":
  [ 84] pushcons 51 ............................. <"shock">
  [ 86] pusharglist 1 ........................... <"shock">
  [ 88] extcall 142 ............................. <member("shock")>
  [ 90] setlocal 0 .............................. oMember = member("shock")
  [ 92] getglobal 138 ........................... <oSpriteManager>
  [ 94] getobjprop 152 .......................... <oSpriteManager.iEffectSound>
  [ 96] pusharglist 1 ........................... <oSpriteManager.iEffectSound>
  [ 98] extcall 137 ............................. <sound(oSpriteManager.iEffectSound)>
  [100] pushint16 200 ........................... <200>
  [103] setobjprop 140 .......................... sound(oSpriteManager.iEffectSound).volume = 200
  [105] jmp [161]
  [108] peek 0
  [110] pushcons 52 ............................. <"bot">
  [112] eq
  [113] jmpifz [140] ............................ (case) "bot":
  [116] pushcons 53 ............................. <"Boing002">
  [118] pusharglist 1 ........................... <"Boing002">
  [120] extcall 142 ............................. <member("Boing002")>
  [122] setlocal 0 .............................. oMember = member("Boing002")
  [124] getglobal 138 ........................... <oSpriteManager>
  [126] getobjprop 152 .......................... <oSpriteManager.iEffectSound>
  [128] pusharglist 1 ........................... <oSpriteManager.iEffectSound>
  [130] extcall 137 ............................. <sound(oSpriteManager.iEffectSound)>
  [132] pushint16 200 ........................... <200>
  [135] setobjprop 140 .......................... sound(oSpriteManager.iEffectSound).volume = 200
  [137] jmp [161] ............................... (case) otherwise:
  [140] pushcons 49 ............................. <"metlcrs1">
  [142] pusharglist 1 ........................... <"metlcrs1">
  [144] extcall 142 ............................. <member("metlcrs1")>
  [146] setlocal 0 .............................. oMember = member("metlcrs1")
  [148] getglobal 138 ........................... <oSpriteManager>
  [150] getobjprop 152 .......................... <oSpriteManager.iEffectSound>
  [152] pusharglist 1 ........................... <oSpriteManager.iEffectSound>
  [154] extcall 137 ............................. <sound(oSpriteManager.iEffectSound)>
  [156] pushint16 235 ........................... <235>
  [159] setobjprop 140 .......................... sound(oSpriteManager.iEffectSound).volume = 235
  [161] pop 1 ................................... end case
  [163] getglobal 138 ........................... <oSpriteManager>
  [165] getobjprop 152 .......................... <oSpriteManager.iEffectSound>
  [167] pusharglist 1 ........................... <oSpriteManager.iEffectSound>
  [169] extcall 137 ............................. <sound(oSpriteManager.iEffectSound)>
  [171] pushzero ................................ <0>
  [172] setobjprop 141 .......................... sound(oSpriteManager.iEffectSound).pan = 0
  [174] getglobal 138 ........................... <oSpriteManager>
  [176] getobjprop 152 .......................... <oSpriteManager.iEffectSound>
  [178] pusharglist 1 ........................... <oSpriteManager.iEffectSound>
  [180] extcall 137 ............................. <sound(oSpriteManager.iEffectSound)>
  [182] getlocal 0 .............................. <oMember>
  [184] pusharglistnoret 2 ...................... <sound(oSpriteManager.iEffectSound), oMember>
  [186] objcall 143 ............................. sound(oSpriteManager.iEffectSound).play(oMember)
  [188] getglobal 58 ............................ <oComputer>
  [190] pusharglist 1 ........................... <oComputer>
  [192] objcall 27 .............................. <oComputer.getLives()>
  [194] pushzero ................................ <0>
  [195] gt ...................................... <oComputer.getLives() > 0>
  [196] jmpifz [244] ............................ if oComputer.getLives() > 0 then / else
  [199] getglobal 72 ............................ <oTextConstants>
  [201] getparam 1 .............................. <sCollisionMessage>
  [203] getglobal 58 ............................ <oComputer>
  [205] pusharglist 1 ........................... <oComputer>
  [207] objcall 27 .............................. <oComputer.getLives()>
  [209] pusharglist 3 ........................... <oTextConstants, sCollisionMessage, oComputer.getLives()>
  [211] objcall 544 ............................. <oTextConstants.getCollisionMessage(sCollisionMessage, oComputer.getLives())>
  [214] setlocal 1 .............................. sTheCollisionMessage = oTextConstants.getCollisionMessage(sCollisionMessage, oComputer.getLives())
  [216] pushsymb 95 ............................. <#showAlert>
  [218] getlocal 1 .............................. <sTheCollisionMessage>
  [220] pusharglistnoret 2 ...................... <#showAlert, sTheCollisionMessage>
  [222] extcall 94 .............................. sendAllSprites(#showAlert, sTheCollisionMessage)
  [224] pushcons 54 ............................. <"_TIMER_">
  [226] pusharglist 1 ........................... <"_TIMER_">
  [228] extcall 64 .............................. <script("_TIMER_")>
  [230] pushint16 3000 .......................... <3000>
  [233] pushsymb 20 ............................. <#callForToolAfterCollision>
  [235] getglobal 58 ............................ <oComputer>
  [237] pusharglistnoret 4 ...................... <script("_TIMER_"), 3000, #callForToolAfterCollision, oComputer>
  [239] objcall 2 ............................... script("_TIMER_").new(3000, #callForToolAfterCollision, oComputer)
  [241] jmp [286]
  [244] getglobal 72 ............................ <oTextConstants>
  [246] getparam 1 .............................. <sCollisionMessage>
  [248] getglobal 58 ............................ <oComputer>
  [250] pusharglist 1 ........................... <oComputer>
  [252] objcall 27 .............................. <oComputer.getLives()>
  [254] pusharglist 3 ........................... <oTextConstants, sCollisionMessage, oComputer.getLives()>
  [256] objcall 544 ............................. <oTextConstants.getCollisionMessage(sCollisionMessage, oComputer.getLives())>
  [259] setlocal 1 .............................. sTheCollisionMessage = oTextConstants.getCollisionMessage(sCollisionMessage, oComputer.getLives())
  [261] pushsymb 95 ............................. <#showAlert>
  [263] getlocal 1 .............................. <sTheCollisionMessage>
  [265] pusharglistnoret 2 ...................... <#showAlert, sTheCollisionMessage>
  [267] extcall 94 .............................. sendAllSprites(#showAlert, sTheCollisionMessage)
  [269] pushcons 54 ............................. <"_TIMER_">
  [271] pusharglist 1 ........................... <"_TIMER_">
  [273] extcall 64 .............................. <script("_TIMER_")>
  [275] pushint16 3000 .......................... <3000>
  [278] pushsymb 14 ............................. <#gameOver>
  [280] getglobal 58 ............................ <oComputer>
  [282] pusharglistnoret 4 ...................... <script("_TIMER_"), 3000, #gameOver, oComputer>
  [284] objcall 2 ............................... script("_TIMER_").new(3000, #gameOver, oComputer)
  [286] ret
end

on resetPositionToStart me
  [  0] getparam 0 .............................. <me>
  [  2] pushint16 500 ........................... <500>
  [  5] inv ..................................... <-500>
  [  6] pushint16 500 ........................... <500>
  [  9] inv ..................................... <-500>
  [ 10] pusharglist 2 ........................... <-500, -500>
  [ 12] extcall 132 ............................. <point(-500, -500)>
  [ 14] pusharglistnoret 2 ...................... <me, point(-500, -500)>
  [ 16] objcall 214 ............................. me.setLoc(point(-500, -500))
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 475 ............................. updateStage()
  [ 23] getparam 0 .............................. <me>
  [ 25] pushint8 4 .............................. <4>
  [ 27] pusharglistnoret 2 ...................... <me, 4>
  [ 29] objcall 224 ............................. me.setDirection(4)
  [ 31] getparam 0 .............................. <me>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 548 .......................... <me.oStartSquare>
  [ 38] setobjprop 467 .......................... me.oCurrentSquare = me.oStartSquare
  [ 41] getparam 0 .............................. <me>
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 548 .......................... <me.oStartSquare>
  [ 48] setobjprop 362 .......................... me.oNextSquare = me.oStartSquare
  [ 51] getparam 0 .............................. <me>
  [ 53] getparam 0 .............................. <me>
  [ 55] getchainedprop 548 ...................... <me.oStartSquare>
  [ 58] getobjprop 460 .......................... <me.oStartSquare.iRow>
  [ 61] getparam 0 .............................. <me>
  [ 63] getchainedprop 548 ...................... <me.oStartSquare>
  [ 66] getobjprop 461 .......................... <me.oStartSquare.iCol>
  [ 69] pusharglist 2 ........................... <me.oStartSquare.iRow, me.oStartSquare.iCol>
  [ 71] extcall 132 ............................. <point(me.oStartSquare.iRow, me.oStartSquare.iCol)>
  [ 73] setobjprop 462 .......................... me.pCurrentSquareLoc = point(me.oStartSquare.iRow, me.oStartSquare.iCol)
  [ 76] getparam 0 .............................. <me>
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 548 ...................... <me.oStartSquare>
  [ 83] getobjprop 460 .......................... <me.oStartSquare.iRow>
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 548 ...................... <me.oStartSquare>
  [ 91] getobjprop 461 .......................... <me.oStartSquare.iCol>
  [ 94] pusharglist 2 ........................... <me.oStartSquare.iRow, me.oStartSquare.iCol>
  [ 96] extcall 132 ............................. <point(me.oStartSquare.iRow, me.oStartSquare.iCol)>
  [ 98] setobjprop 463 .......................... me.pNextSquareLoc = point(me.oStartSquare.iRow, me.oStartSquare.iCol)
  [101] getprop 368 ............................. <iImageSprite>
  [104] pusharglist 1 ........................... <iImageSprite>
  [106] extcall 79 .............................. <sprite(iImageSprite)>
  [108] getparam 0 .............................. <me>
  [110] pusharglist 1 ........................... <me>
  [112] objcall 211 ............................. <me.getCurrentSquare()>
  [114] getobjprop 460 .......................... <me.getCurrentSquare().iRow>
  [117] pushint8 100 ............................ <100>
  [119] mul ..................................... <me.getCurrentSquare().iRow * 100>
  [120] getparam 0 .............................. <me>
  [122] pusharglist 1 ........................... <me>
  [124] objcall 211 ............................. <me.getCurrentSquare()>
  [126] getobjprop 461 .......................... <me.getCurrentSquare().iCol>
  [129] add ..................................... <(me.getCurrentSquare().iRow * 100) + me.getCurrentSquare().iCol>
  [130] pushint8 1 .............................. <1>
  [132] add ..................................... <(me.getCurrentSquare().iRow * 100) + me.getCurrentSquare().iCol + 1>
  [133] setobjprop 134 .......................... sprite(iImageSprite).locZ = (me.getCurrentSquare().iRow * 100) + me.getCurrentSquare().iCol + 1
  [135] getparam 0 .............................. <me>
  [137] pusharglistnoret 1 ...................... <me>
  [139] objcall 236 ............................. me.stand()
  [141] getparam 0 .............................. <me>
  [143] getobjprop 324 .......................... <me.bCarry>
  [146] jmpifz [166] ............................ if me.bCarry then
  [149] getglobal 58 ............................ <oComputer>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 476 .......................... <me.iToolCarried>
  [156] pusharglistnoret 2 ...................... <oComputer, me.iToolCarried>
  [158] objcall 37 .............................. oComputer.dropOffTool(me.iToolCarried)
  [160] getparam 0 .............................. <me>
  [162] pusharglistnoret 1 ...................... <me>
  [164] objcall 109 ............................. me.dropTool()
  [166] ret
end

on setStartSquare me, theRow, theCol
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 271 ........................... <oIsoScene>
  [  5] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [  8] pushsymb 273 ............................ <#aSquares>
  [ 11] getparam 1 .............................. <theRow>
  [ 13] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, theRow>
  [ 15] objcall 274 ............................. <oIsoScene.oGrid.aSquares[theRow]>
  [ 18] getparam 2 .............................. <theCol>
  [ 20] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[theRow], theCol>
  [ 22] objcall 86 .............................. <oIsoScene.oGrid.aSquares[theRow][theCol]>
  [ 24] setobjprop 548 .......................... me.oStartSquare = oIsoScene.oGrid.aSquares[theRow][theCol]
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 548 .......................... <me.oStartSquare>
  [ 34] setobjprop 467 .......................... me.oCurrentSquare = me.oStartSquare
  [ 37] getparam 0 .............................. <me>
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 548 .......................... <me.oStartSquare>
  [ 44] setobjprop 362 .......................... me.oNextSquare = me.oStartSquare
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 1 .............................. <theRow>
  [ 51] getparam 2 .............................. <theCol>
  [ 53] pusharglist 2 ........................... <theRow, theCol>
  [ 55] extcall 132 ............................. <point(theRow, theCol)>
  [ 57] setobjprop 462 .......................... me.pCurrentSquareLoc = point(theRow, theCol)
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 1 .............................. <theRow>
  [ 64] getparam 2 .............................. <theCol>
  [ 66] pusharglist 2 ........................... <theRow, theCol>
  [ 68] extcall 132 ............................. <point(theRow, theCol)>
  [ 70] setobjprop 463 .......................... me.pNextSquareLoc = point(theRow, theCol)
  [ 73] getparam 0 .............................. <me>
  [ 75] getglobal 271 ........................... <oIsoScene>
  [ 78] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [ 81] pushsymb 273 ............................ <#aSquares>
  [ 84] pushint8 30 ............................. <30>
  [ 86] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, 30>
  [ 88] objcall 274 ............................. <oIsoScene.oGrid.aSquares[30]>
  [ 91] pushint8 30 ............................. <30>
  [ 93] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[30], 30>
  [ 95] objcall 86 .............................. <oIsoScene.oGrid.aSquares[30][30]>
  [ 97] setobjprop 467 .......................... me.oCurrentSquare = oIsoScene.oGrid.aSquares[30][30]
  [100] getparam 0 .............................. <me>
  [102] pushint8 30 ............................. <30>
  [104] pushint8 30 ............................. <30>
  [106] pusharglist 2 ........................... <30, 30>
  [108] extcall 132 ............................. <point(30, 30)>
  [110] setobjprop 462 .......................... me.pCurrentSquareLoc = point(30, 30)
  [113] getparam 0 .............................. <me>
  [115] pushint8 30 ............................. <30>
  [117] pushint8 30 ............................. <30>
  [119] pusharglist 2 ........................... <30, 30>
  [121] extcall 132 ............................. <point(30, 30)>
  [123] setobjprop 463 .......................... me.pNextSquareLoc = point(30, 30)
  [126] ret
end

on getStartSquare me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 548 .......................... <me.oStartSquare>
  [  5] pusharglistnoret 1 ...................... <me.oStartSquare>
  [  7] extcall 63 .............................. return me.oStartSquare
  [  9] ret
end

on setCurrentSquare me, theRow, theCol
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 271 ........................... <oIsoScene>
  [  5] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [  8] pushsymb 273 ............................ <#aSquares>
  [ 11] getparam 1 .............................. <theRow>
  [ 13] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, theRow>
  [ 15] objcall 274 ............................. <oIsoScene.oGrid.aSquares[theRow]>
  [ 18] getparam 2 .............................. <theCol>
  [ 20] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[theRow], theCol>
  [ 22] objcall 86 .............................. <oIsoScene.oGrid.aSquares[theRow][theCol]>
  [ 24] setobjprop 467 .......................... me.oCurrentSquare = oIsoScene.oGrid.aSquares[theRow][theCol]
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 1 .............................. <theRow>
  [ 31] getparam 2 .............................. <theCol>
  [ 33] pusharglist 2 ........................... <theRow, theCol>
  [ 35] extcall 132 ............................. <point(theRow, theCol)>
  [ 37] setobjprop 462 .......................... me.pCurrentSquareLoc = point(theRow, theCol)
  [ 40] ret
end

on setNextSquare me, theRow, theCol
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 271 ........................... <oIsoScene>
  [  5] getchainedprop 272 ...................... <oIsoScene.oGrid>
  [  8] pushsymb 273 ............................ <#aSquares>
  [ 11] getparam 1 .............................. <theRow>
  [ 13] pusharglist 3 ........................... <oIsoScene.oGrid, #aSquares, theRow>
  [ 15] objcall 274 ............................. <oIsoScene.oGrid.aSquares[theRow]>
  [ 18] getparam 2 .............................. <theCol>
  [ 20] pusharglist 2 ........................... <oIsoScene.oGrid.aSquares[theRow], theCol>
  [ 22] objcall 86 .............................. <oIsoScene.oGrid.aSquares[theRow][theCol]>
  [ 24] setobjprop 362 .......................... me.oNextSquare = oIsoScene.oGrid.aSquares[theRow][theCol]
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 1 .............................. <theRow>
  [ 31] getparam 2 .............................. <theCol>
  [ 33] pusharglist 2 ........................... <theRow, theCol>
  [ 35] extcall 132 ............................. <point(theRow, theCol)>
  [ 37] setobjprop 463 .......................... me.pNextSquareLoc = point(theRow, theCol)
  [ 40] ret
end

on getCurrentSquare me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 467 .......................... <me.oCurrentSquare>
  [  5] pusharglistnoret 1 ...................... <me.oCurrentSquare>
  [  7] extcall 63 .............................. return me.oCurrentSquare
  [  9] ret
end

on getCurrentSquareForCollision me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 269 .......................... <me.iStepsTravelled>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 268 .......................... <me.iStepsToNextSquare>
  [ 10] pushint8 2 .............................. <2>
  [ 12] div ..................................... <me.iStepsToNextSquare / 2>
  [ 13] pusharglist 1 ........................... <me.iStepsToNextSquare / 2>
  [ 15] extcall 123 ............................. <integer(me.iStepsToNextSquare / 2)>
  [ 17] lteq .................................... <me.iStepsTravelled <= integer(me.iStepsToNextSquare / 2)>
  [ 18] jmpifz [ 33] ............................ if me.iStepsTravelled <= integer(me.iStepsToNextSquare / 2) then / else
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 467 .......................... <me.oCurrentSquare>
  [ 26] pusharglistnoret 1 ...................... <me.oCurrentSquare>
  [ 28] extcall 63 .............................. return me.oCurrentSquare
  [ 30] jmp [ 42]
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 362 .......................... <me.oNextSquare>
  [ 38] pusharglistnoret 1 ...................... <me.oNextSquare>
  [ 40] extcall 63 .............................. return me.oNextSquare
  [ 42] ret
end

on getNextSquare me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 362 .......................... <me.oNextSquare>
  [  5] pusharglistnoret 1 ...................... <me.oNextSquare>
  [  7] extcall 63 .............................. return me.oNextSquare
  [  9] ret
end

on setLoc me, oLoc
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <oLoc>
  [  4] setobjprop 297 .......................... me.oPoint = oLoc
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 368 .......................... <me.iImageSprite>
  [ 12] pusharglist 1 ........................... <me.iImageSprite>
  [ 14] extcall 365 ............................. <voidp(me.iImageSprite)>
  [ 17] jmpifz [ 24] ............................ if voidp(me.iImageSprite) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 63 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 368 .......................... <me.iImageSprite>
  [ 29] pusharglist 1 ........................... <me.iImageSprite>
  [ 31] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 297 ...................... <me.oPoint>
  [ 38] getobjprop 468 .......................... <me.oPoint.locH>
  [ 41] setobjprop 468 .......................... sprite(me.iImageSprite).locH = me.oPoint.locH
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 368 .......................... <me.iImageSprite>
  [ 49] pusharglist 1 ........................... <me.iImageSprite>
  [ 51] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 53] getparam 0 .............................. <me>
  [ 55] getchainedprop 297 ...................... <me.oPoint>
  [ 58] getobjprop 525 .......................... <me.oPoint.locV>
  [ 61] getparam 0 .............................. <me>
  [ 63] getobjprop 351 .......................... <me.iHeightOffset>
  [ 66] sub ..................................... <me.oPoint.locV - me.iHeightOffset>
  [ 67] setobjprop 525 .......................... sprite(me.iImageSprite).locV = me.oPoint.locV - me.iHeightOffset
  [ 70] getparam 0 .............................. <me>
  [ 72] getobjprop 369 .......................... <me.iShadowSprite>
  [ 75] pusharglist 1 ........................... <me.iShadowSprite>
  [ 77] extcall 365 ............................. <voidp(me.iShadowSprite)>
  [ 80] jmpifz [ 87] ............................ if voidp(me.iShadowSprite) then
  [ 83] pusharglistnoret 0 ...................... <>
  [ 85] extcall 63 .............................. return 
  [ 87] getparam 0 .............................. <me>
  [ 89] getobjprop 369 .......................... <me.iShadowSprite>
  [ 92] pusharglist 1 ........................... <me.iShadowSprite>
  [ 94] extcall 79 .............................. <sprite(me.iShadowSprite)>
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 297 .......................... <me.oPoint>
  [101] setobjprop 80 ........................... sprite(me.iShadowSprite).loc = me.oPoint
  [103] ret
end

on getLoc me, oLoc
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 297 .......................... <me.oPoint>
  [  5] pusharglistnoret 1 ...................... <me.oPoint>
  [  7] extcall 63 .............................. return me.oPoint
  [  9] ret
end

on getRealDirection me, iDir, aDirs
  [  0] getparam 2 .............................. <aDirs>
  [  2] getparam 1 .............................. <iDir>
  [  4] pusharglist 2 ........................... <aDirs, iDir>
  [  6] objcall 130 ............................. <aDirs.getPos(iDir)>
  [  8] pushzero ................................ <0>
  [  9] gt ...................................... <aDirs.getPos(iDir) > 0>
  [ 10] setlocal 0 .............................. bRealExists = aDirs.getPos(iDir) > 0
  [ 12] getlocal 0 .............................. <bRealExists>
  [ 14] jmpifz [ 23] ............................ if bRealExists then
  [ 17] getparam 1 .............................. <iDir>
  [ 19] pusharglistnoret 1 ...................... <iDir>
  [ 21] extcall 63 .............................. return iDir
  [ 23] getparam 1 .............................. <iDir>
  [ 25] pushint8 7 .............................. <7>
  [ 27] eq ...................................... <iDir = 7>
  [ 28] jmpifz [ 39] ............................ if iDir = 7 then
  [ 31] pusharglist 0 ........................... <>
  [ 33] extcall 59 .............................. <VOID>
  [ 35] pusharglistnoret 1 ...................... <VOID>
  [ 37] extcall 63 .............................. return VOID
  [ 39] getparam 0 .............................. <me>
  [ 41] getchainedprop 447 ...................... <me.aDirectionMap>
  [ 44] getparam 1 .............................. <iDir>
  [ 46] pusharglist 2 ........................... <me.aDirectionMap, iDir>
  [ 48] objcall 54 .............................. <me.aDirectionMap.getProp(iDir)>
  [ 50] setlocal 1 .............................. iFakeDir = me.aDirectionMap.getProp(iDir)
  [ 52] getparam 2 .............................. <aDirs>
  [ 54] getlocal 1 .............................. <iFakeDir>
  [ 56] pusharglist 2 ........................... <aDirs, iFakeDir>
  [ 58] objcall 130 ............................. <aDirs.getPos(iFakeDir)>
  [ 60] pushzero ................................ <0>
  [ 61] gt ...................................... <aDirs.getPos(iFakeDir) > 0>
  [ 62] setlocal 2 .............................. bFakeExists = aDirs.getPos(iFakeDir) > 0
  [ 64] getlocal 2 .............................. <bFakeExists>
  [ 66] jmpifz [ 78] ............................ if bFakeExists then / else
  [ 69] getlocal 1 .............................. <iFakeDir>
  [ 71] pusharglistnoret 1 ...................... <iFakeDir>
  [ 73] extcall 63 .............................. return iFakeDir
  [ 75] jmp [ 86]
  [ 78] pusharglist 0 ........................... <>
  [ 80] extcall 59 .............................. <VOID>
  [ 82] pusharglistnoret 1 ...................... <VOID>
  [ 84] extcall 63 .............................. return VOID
  [ 86] ret
end

on getDirectionOffset me, iDir, iDirOff
  [  0] getparam 1 .............................. <iDir>
  [  2] getparam 2 .............................. <iDirOff>
  [  4] add ..................................... <iDir + iDirOff>
  [  5] setlocal 0 .............................. iNewDir = iDir + iDirOff
  [  7] getlocal 0 .............................. <iNewDir>
  [  9] pushzero ................................ <0>
  [ 10] lt ...................................... <iNewDir < 0>
  [ 11] jmpifz [ 21] ............................ if iNewDir < 0 then
  [ 14] pushint8 8 .............................. <8>
  [ 16] getlocal 0 .............................. <iNewDir>
  [ 18] add ..................................... <8 + iNewDir>
  [ 19] setlocal 0 .............................. iNewDir = 8 + iNewDir
  [ 21] getlocal 0 .............................. <iNewDir>
  [ 23] pushint8 7 .............................. <7>
  [ 25] gt ...................................... <iNewDir > 7>
  [ 26] jmpifz [ 36] ............................ if iNewDir > 7 then
  [ 29] getlocal 0 .............................. <iNewDir>
  [ 31] pushint8 8 .............................. <8>
  [ 33] mod ..................................... <iNewDir mod 8>
  [ 34] setlocal 0 .............................. iNewDir = iNewDir mod 8
  [ 36] getlocal 0 .............................. <iNewDir>
  [ 38] pusharglistnoret 1 ...................... <iNewDir>
  [ 40] extcall 63 .............................. return iNewDir
  [ 42] ret
end

on setPartActive me, sPart, bActive, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 432 ............................ <#aRuntimeConfig>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  9] objcall 274 ............................. <me.aRuntimeConfig[sPart]>
  [ 12] pushsymb 437 ............................ <#Active>
  [ 15] getparam 2 .............................. <bActive>
  [ 17] pusharglistnoret 3 ...................... <me.aRuntimeConfig[sPart], #Active, bActive>
  [ 19] objcall 443 ............................. me.aRuntimeConfig[sPart][#Active] = bActive
  [ 22] ret
end

on getPartActive me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 432 ............................ <#aRuntimeConfig>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  9] objcall 274 ............................. <me.aRuntimeConfig[sPart]>
  [ 12] pushsymb 437 ............................ <#Active>
  [ 15] pusharglist 2 ........................... <me.aRuntimeConfig[sPart], #Active>
  [ 17] objcall 86 .............................. <me.aRuntimeConfig[sPart][#Active]>
  [ 19] pusharglistnoret 1 ...................... <me.aRuntimeConfig[sPart][#Active]>
  [ 21] extcall 63 .............................. return me.aRuntimeConfig[sPart][#Active]
  [ 23] ret
end

on setPartCode me, sPart, sPartCode, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 403 ............................ <#aAttributes>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  9] objcall 274 ............................. <me.aAttributes[sPart]>
  [ 12] pushsymb 409 ............................ <#prtCd>
  [ 15] getparam 2 .............................. <sPartCode>
  [ 17] pusharglistnoret 3 ...................... <me.aAttributes[sPart], #prtCd, sPartCode>
  [ 19] objcall 443 ............................. me.aAttributes[sPart][#prtCd] = sPartCode
  [ 22] ret
end

on getPartCode me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 403 ............................ <#aAttributes>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  9] objcall 274 ............................. <me.aAttributes[sPart]>
  [ 12] pushsymb 409 ............................ <#prtCd>
  [ 15] pusharglist 2 ........................... <me.aAttributes[sPart], #prtCd>
  [ 17] objcall 86 .............................. <me.aAttributes[sPart][#prtCd]>
  [ 19] pusharglistnoret 1 ...................... <me.aAttributes[sPart][#prtCd]>
  [ 21] extcall 63 .............................. return me.aAttributes[sPart][#prtCd]
  [ 23] ret
end

on setPartAction me, sPart, sAct, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 432 ............................ <#aRuntimeConfig>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  9] objcall 274 ............................. <me.aRuntimeConfig[sPart]>
  [ 12] pushsymb 433 ............................ <#act>
  [ 15] getparam 2 .............................. <sAct>
  [ 17] pusharglistnoret 3 ...................... <me.aRuntimeConfig[sPart], #act, sAct>
  [ 19] objcall 443 ............................. me.aRuntimeConfig[sPart][#act] = sAct
  [ 22] ret
end

on getPartAction me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 432 ............................ <#aRuntimeConfig>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  9] objcall 274 ............................. <me.aRuntimeConfig[sPart]>
  [ 12] pushsymb 433 ............................ <#act>
  [ 15] pusharglist 2 ........................... <me.aRuntimeConfig[sPart], #act>
  [ 17] objcall 86 .............................. <me.aRuntimeConfig[sPart][#act]>
  [ 19] pusharglistnoret 1 ...................... <me.aRuntimeConfig[sPart][#act]>
  [ 21] extcall 63 .............................. return me.aRuntimeConfig[sPart][#act]
  [ 23] ret
end

on setDirection me, iDir, bDisplay
  [  0] getparam 1 .............................. <iDir>
  [  2] pusharglist 1 ........................... <iDir>
  [  4] extcall 365 ............................. <voidp(iDir)>
  [  7] jmpifz [ 14] ............................ if voidp(iDir) then
  [ 10] pushint8 2 .............................. <2>
  [ 12] setparam 1 .............................. iDir = 2
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 295 .......................... <me.iDirection>
  [ 19] getparam 1 .............................. <iDir>
  [ 21] eq ...................................... <me.iDirection = iDir>
  [ 22] jmpifz [ 29] ............................ if me.iDirection = iDir then
  [ 25] pusharglistnoret 0 ...................... <>
  [ 27] extcall 63 .............................. return 
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 1 .............................. <iDir>
  [ 33] setobjprop 295 .......................... me.iDirection = iDir
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 189 ............................. me.setDrawOrder()
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 1 ...................... <me>
  [ 46] objcall 200 ............................. me.display()
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglistnoret 1 ...................... <me>
  [ 52] objcall 251 ............................. me.wakeup()
  [ 54] ret
end

on rotate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 295 .......................... <me.iDirection>
  [  5] pushint8 1 .............................. <1>
  [  7] add ..................................... <me.iDirection + 1>
  [  8] setlocal 0 .............................. iNewDir = me.iDirection + 1
  [ 10] getlocal 0 .............................. <iNewDir>
  [ 12] pushint8 7 .............................. <7>
  [ 14] gt ...................................... <iNewDir > 7>
  [ 15] jmpifz [ 21] ............................ if iNewDir > 7 then
  [ 18] pushzero ................................ <0>
  [ 19] setlocal 0 .............................. iNewDir = 0
  [ 21] getparam 0 .............................. <me>
  [ 23] getlocal 0 .............................. <iNewDir>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pusharglistnoret 3 ...................... <me, iNewDir, 1>
  [ 29] objcall 224 ............................. me.setDirection(iNewDir, 1)
  [ 31] ret
end

on setFPS me, _iFPS, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iFPS>
  [  4] setobjprop 311 .......................... me.iFPS = _iFPS
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 311 .......................... <me.iFPS>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <me.iFPS = 0>
  [ 14] jmpifz [ 30] ............................ if me.iFPS = 0 then / else
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 0 ........................... <>
  [ 21] thebuiltin 558 .......................... <the maxinteger>
  [ 24] setobjprop 313 .......................... me.iFPSTimerLength = the maxinteger
  [ 27] jmp [ 44]
  [ 30] getparam 0 .............................. <me>
  [ 32] pushint16 1000 .......................... <1000>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 311 .......................... <me.iFPS>
  [ 40] div ..................................... <1000 / me.iFPS>
  [ 41] setobjprop 313 .......................... me.iFPSTimerLength = 1000 / me.iFPS
  [ 44] ret
end

on setAnimFrame me, iFrame, bDisplay
  [  0] getparam 1 .............................. <iFrame>
  [  2] pushzero ................................ <0>
  [  3] gteq .................................... <iFrame >= 0>
  [  4] getparam 1 .............................. <iFrame>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 307 .......................... <me.iAnimStepMax>
  [ 11] lteq .................................... <iFrame <= me.iAnimStepMax>
  [ 12] and ..................................... <(iFrame >= 0) and (iFrame <= me.iAnimStepMax)>
  [ 13] jmpifz [ 23] ............................ if (iFrame >= 0) and (iFrame <= me.iAnimStepMax) then
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <iFrame>
  [ 20] setobjprop 306 .......................... me.iAnimStep = iFrame
  [ 23] ret
end

on setScale me, _iScale, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iScale>
  [  4] setobjprop 294 .......................... me.iScale = _iScale
  [  7] getparam 0 .............................. <me>
  [  9] pusharglistnoret 1 ...................... <me>
  [ 11] objcall 178 ............................. me.createMember()
  [ 13] ret
end

on getPartColor me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 403 ............................ <#aAttributes>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  9] objcall 274 ............................. <me.aAttributes[sPart]>
  [ 12] pushsymb 410 ............................ <#clr>
  [ 15] pusharglist 2 ........................... <me.aAttributes[sPart], #clr>
  [ 17] objcall 86 .............................. <me.aAttributes[sPart][#clr]>
  [ 19] pusharglistnoret 1 ...................... <me.aAttributes[sPart][#clr]>
  [ 21] extcall 63 .............................. return me.aAttributes[sPart][#clr]
  [ 23] ret
end

on setPartColor me, sPart, oColor, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 403 ............................ <#aAttributes>
  [  5] getparam 1 .............................. <sPart>
  [  7] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  9] objcall 274 ............................. <me.aAttributes[sPart]>
  [ 12] pushsymb 410 ............................ <#clr>
  [ 15] getparam 2 .............................. <oColor>
  [ 17] pusharglistnoret 3 ...................... <me.aAttributes[sPart], #clr, oColor>
  [ 19] objcall 443 ............................. me.aAttributes[sPart][#clr] = oColor
  [ 22] ret
end

on flipHSpriteRect me, oSprite
  [  0] getparam 1 .............................. <oSprite>
  [  2] getobjprop 133 .......................... <oSprite.rect>
  [  4] setlocal 0 .............................. oOrigSpriteRect = oSprite.rect
  [  6] getlocal 0 .............................. <oOrigSpriteRect>
  [  8] getobjprop 516 .......................... <oOrigSpriteRect.left>
  [ 11] setlocal 1 .............................. iLeft = oOrigSpriteRect.left
  [ 13] getparam 1 .............................. <oSprite>
  [ 15] getobjprop 468 .......................... <oSprite.locH>
  [ 18] setlocal 2 .............................. iLocH = oSprite.locH
  [ 20] getlocal 2 .............................. <iLocH>
  [ 22] getlocal 1 .............................. <iLeft>
  [ 24] sub ..................................... <iLocH - iLeft>
  [ 25] pushint8 2 .............................. <2>
  [ 27] mul ..................................... <(iLocH - iLeft) * 2>
  [ 28] getlocal 0 .............................. <oOrigSpriteRect>
  [ 30] getobjprop 377 .......................... <oOrigSpriteRect.width>
  [ 33] sub ..................................... <((iLocH - iLeft) * 2) - oOrigSpriteRect.width>
  [ 34] setlocal 3 .............................. iHDif = ((iLocH - iLeft) * 2) - oOrigSpriteRect.width
  [ 36] getlocal 3 .............................. <iHDif>
  [ 38] pushzero ................................ <0>
  [ 39] getlocal 3 .............................. <iHDif>
  [ 41] pushzero ................................ <0>
  [ 42] pusharglist 4 ........................... <iHDif, 0, iHDif, 0>
  [ 44] extcall 133 ............................. <rect(iHDif, 0, iHDif, 0)>
  [ 46] setlocal 4 .............................. rDifRect = rect(iHDif, 0, iHDif, 0)
  [ 48] getlocal 0 .............................. <oOrigSpriteRect>
  [ 50] getlocal 4 .............................. <rDifRect>
  [ 52] add ..................................... <oOrigSpriteRect + rDifRect>
  [ 53] setlocal 5 .............................. oNewRect = oOrigSpriteRect + rDifRect
  [ 55] getlocal 5 .............................. <oNewRect>
  [ 57] pusharglistnoret 1 ...................... <oNewRect>
  [ 59] extcall 63 .............................. return oNewRect
  [ 61] ret
end

on calcViewRect me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 297 ...................... <me.oPoint>
  [  5] getobjprop 468 .......................... <me.oPoint.locH>
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 567 ...................... <me.oScaledRect>
  [ 13] getobjprop 377 .......................... <me.oScaledRect.width>
  [ 16] pushint8 2 .............................. <2>
  [ 18] div ..................................... <me.oScaledRect.width / 2>
  [ 19] sub ..................................... <me.oPoint.locH - (me.oScaledRect.width / 2)>
  [ 20] setlocal 0 .............................. iLeft = me.oPoint.locH - (me.oScaledRect.width / 2)
  [ 22] getlocal 0 .............................. <iLeft>
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 567 ...................... <me.oScaledRect>
  [ 29] getobjprop 377 .......................... <me.oScaledRect.width>
  [ 32] add ..................................... <iLeft + me.oScaledRect.width>
  [ 33] setlocal 1 .............................. iRight = iLeft + me.oScaledRect.width
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 297 ...................... <me.oPoint>
  [ 40] getobjprop 525 .......................... <me.oPoint.locV>
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 567 ...................... <me.oScaledRect>
  [ 48] getobjprop 378 .......................... <me.oScaledRect.height>
  [ 51] sub ..................................... <me.oPoint.locV - me.oScaledRect.height>
  [ 52] setlocal 2 .............................. iTop = me.oPoint.locV - me.oScaledRect.height
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 297 ...................... <me.oPoint>
  [ 59] getobjprop 525 .......................... <me.oPoint.locV>
  [ 62] setlocal 3 .............................. iBottom = me.oPoint.locV
  [ 64] getlocal 0 .............................. <iLeft>
  [ 66] getlocal 2 .............................. <iTop>
  [ 68] getlocal 1 .............................. <iRight>
  [ 70] getlocal 3 .............................. <iBottom>
  [ 72] pusharglist 4 ........................... <iLeft, iTop, iRight, iBottom>
  [ 74] extcall 133 ............................. <rect(iLeft, iTop, iRight, iBottom)>
  [ 76] pusharglistnoret 1 ...................... <rect(iLeft, iTop, iRight, iBottom)>
  [ 78] extcall 63 .............................. return rect(iLeft, iTop, iRight, iBottom)
  [ 80] ret
end

on changeDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iDir>
  [  4] pusharglistnoret 2 ...................... <me, iDir>
  [  6] objcall 224 ............................. me.setDirection(iDir)
  [  8] ret
end

on setDefaultActions me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 3 .............................. <"std">
  [  4] pusharglistnoret 2 ...................... <me, "std">
  [  6] objcall 235 ............................. me.setBodyAction("std")
  [  8] getparam 0 .............................. <me>
  [ 10] pushcons 3 .............................. <"std">
  [ 12] pusharglistnoret 2 ...................... <me, "std">
  [ 14] objcall 252 ............................. me.setFaceAction("std")
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 3 .............................. <"std">
  [ 20] pusharglistnoret 2 ...................... <me, "std">
  [ 22] objcall 246 ............................. me.setItemAction("std")
  [ 24] getparam 0 .............................. <me>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 2 ...................... <me, 0>
  [ 29] objcall 227 ............................. me.setAnimFrame(0)
  [ 31] ret
end

on setBodyAction me, sAction
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sAction>
  [  4] setobjprop 308 .......................... me.sBodyAction = sAction
  [  7] getparam 1 .............................. <sAction>
  [  9] peek 0 .................................. case sAction of
  [ 11] pushcons 3 .............................. <"std">
  [ 13] eq
  [ 14] jmpifz [ 26] ............................ (case) "std":
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 1 ...................... <me>
  [ 21] objcall 236 ............................. me.stand()
  [ 23] jmp [ 67]
  [ 26] peek 0
  [ 28] pushcons 31 ............................. <"wlk">
  [ 30] eq
  [ 31] jmpifz [ 43] ............................ (case) "wlk":
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglistnoret 1 ...................... <me>
  [ 38] objcall 237 ............................. me.walk()
  [ 40] jmp [ 67]
  [ 43] peek 0
  [ 45] pushcons 55 ............................. <"sit">
  [ 47] eq
  [ 48] jmpifz [ 60] ............................ (case) "sit":
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglistnoret 1 ...................... <me>
  [ 55] objcall 238 ............................. me.sit()
  [ 57] jmp [ 67] ............................... (case) otherwise:
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglistnoret 1 ...................... <me>
  [ 64] objcall 571 ............................. me.resetBody()
  [ 67] pop 1 ................................... end case
  [ 69] getparam 0 .............................. <me>
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 309 .......................... <me.sFaceAction>
  [ 76] pusharglistnoret 2 ...................... <me, me.sFaceAction>
  [ 78] objcall 252 ............................. me.setFaceAction(me.sFaceAction)
  [ 80] getparam 0 .............................. <me>
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 310 .......................... <me.sItemAction>
  [ 87] pusharglistnoret 2 ...................... <me, me.sItemAction>
  [ 89] objcall 246 ............................. me.setItemAction(me.sItemAction)
  [ 91] getparam 0 .............................. <me>
  [ 93] pushzero ................................ <0>
  [ 94] pusharglistnoret 2 ...................... <me, 0>
  [ 96] objcall 227 ............................. me.setAnimFrame(0)
  [ 98] getparam 0 .............................. <me>
  [100] pusharglistnoret 1 ...................... <me>
  [102] objcall 251 ............................. me.wakeup()
  [104] getparam 0 .............................. <me>
  [106] pusharglistnoret 1 ...................... <me>
  [108] objcall 200 ............................. me.display()
  [110] ret
end

on stand me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 337 ............................ <#bd>
  [  5] pushcons 3 .............................. <"std">
  [  7] pusharglistnoret 3 ...................... <me, #bd, "std">
  [  9] objcall 222 ............................. me.setPartAction(#bd, "std")
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 340 ............................ <#ch>
  [ 16] pushcons 3 .............................. <"std">
  [ 18] pusharglistnoret 3 ...................... <me, #ch, "std">
  [ 20] objcall 222 ............................. me.setPartAction(#ch, "std")
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 335 ............................ <#lh>
  [ 27] pushcons 3 .............................. <"std">
  [ 29] pusharglistnoret 3 ...................... <me, #lh, "std">
  [ 31] objcall 222 ............................. me.setPartAction(#lh, "std")
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 342 ............................ <#rh>
  [ 38] pushcons 3 .............................. <"std">
  [ 40] pusharglistnoret 3 ...................... <me, #rh, "std">
  [ 42] objcall 222 ............................. me.setPartAction(#rh, "std")
  [ 44] getparam 0 .............................. <me>
  [ 46] pushsymb 336 ............................ <#ls>
  [ 49] pushcons 3 .............................. <"std">
  [ 51] pusharglistnoret 3 ...................... <me, #ls, "std">
  [ 53] objcall 222 ............................. me.setPartAction(#ls, "std")
  [ 55] getparam 0 .............................. <me>
  [ 57] pushsymb 343 ............................ <#rs>
  [ 60] pushcons 3 .............................. <"std">
  [ 62] pusharglistnoret 3 ...................... <me, #rs, "std">
  [ 64] objcall 222 ............................. me.setPartAction(#rs, "std")
  [ 66] getparam 0 .............................. <me>
  [ 68] pushsymb 339 ............................ <#lg>
  [ 71] pushcons 3 .............................. <"std">
  [ 73] pusharglistnoret 3 ...................... <me, #lg, "std">
  [ 75] objcall 222 ............................. me.setPartAction(#lg, "std")
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 338 ............................ <#sh>
  [ 82] pushcons 3 .............................. <"std">
  [ 84] pusharglistnoret 3 ...................... <me, #sh, "std">
  [ 86] objcall 222 ............................. me.setPartAction(#sh, "std")
  [ 88] getparam 0 .............................. <me>
  [ 90] pushzero ................................ <0>
  [ 91] pusharglistnoret 2 ...................... <me, 0>
  [ 93] objcall 227 ............................. me.setAnimFrame(0)
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] objcall 200 ............................. me.display()
  [101] ret
end

on walk me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 337 ............................ <#bd>
  [  5] pushcons 31 ............................. <"wlk">
  [  7] pusharglistnoret 3 ...................... <me, #bd, "wlk">
  [  9] objcall 222 ............................. me.setPartAction(#bd, "wlk")
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 340 ............................ <#ch>
  [ 16] pushcons 3 .............................. <"std">
  [ 18] pusharglistnoret 3 ...................... <me, #ch, "std">
  [ 20] objcall 222 ............................. me.setPartAction(#ch, "std")
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 335 ............................ <#lh>
  [ 27] pushcons 31 ............................. <"wlk">
  [ 29] pusharglistnoret 3 ...................... <me, #lh, "wlk">
  [ 31] objcall 222 ............................. me.setPartAction(#lh, "wlk")
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 342 ............................ <#rh>
  [ 38] pushcons 31 ............................. <"wlk">
  [ 40] pusharglistnoret 3 ...................... <me, #rh, "wlk">
  [ 42] objcall 222 ............................. me.setPartAction(#rh, "wlk")
  [ 44] getparam 0 .............................. <me>
  [ 46] pushsymb 336 ............................ <#ls>
  [ 49] pushcons 31 ............................. <"wlk">
  [ 51] pusharglistnoret 3 ...................... <me, #ls, "wlk">
  [ 53] objcall 222 ............................. me.setPartAction(#ls, "wlk")
  [ 55] getparam 0 .............................. <me>
  [ 57] pushsymb 343 ............................ <#rs>
  [ 60] pushcons 31 ............................. <"wlk">
  [ 62] pusharglistnoret 3 ...................... <me, #rs, "wlk">
  [ 64] objcall 222 ............................. me.setPartAction(#rs, "wlk")
  [ 66] getparam 0 .............................. <me>
  [ 68] pushsymb 339 ............................ <#lg>
  [ 71] pushcons 31 ............................. <"wlk">
  [ 73] pusharglistnoret 3 ...................... <me, #lg, "wlk">
  [ 75] objcall 222 ............................. me.setPartAction(#lg, "wlk")
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 338 ............................ <#sh>
  [ 82] pushcons 31 ............................. <"wlk">
  [ 84] pusharglistnoret 3 ...................... <me, #sh, "wlk">
  [ 86] objcall 222 ............................. me.setPartAction(#sh, "wlk")
  [ 88] getparam 0 .............................. <me>
  [ 90] pushcons 31 ............................. <"wlk">
  [ 92] setobjprop 308 .......................... me.sBodyAction = "wlk"
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] objcall 200 ............................. me.display()
  [101] ret
end

on sit me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 337 ............................ <#bd>
  [  5] pushcons 55 ............................. <"sit">
  [  7] pusharglistnoret 3 ...................... <me, #bd, "sit">
  [  9] objcall 222 ............................. me.setPartAction(#bd, "sit")
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 340 ............................ <#ch>
  [ 16] pushcons 3 .............................. <"std">
  [ 18] pusharglistnoret 3 ...................... <me, #ch, "std">
  [ 20] objcall 222 ............................. me.setPartAction(#ch, "std")
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 335 ............................ <#lh>
  [ 27] pushcons 3 .............................. <"std">
  [ 29] pusharglistnoret 3 ...................... <me, #lh, "std">
  [ 31] objcall 222 ............................. me.setPartAction(#lh, "std")
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 342 ............................ <#rh>
  [ 38] pushcons 3 .............................. <"std">
  [ 40] pusharglistnoret 3 ...................... <me, #rh, "std">
  [ 42] objcall 222 ............................. me.setPartAction(#rh, "std")
  [ 44] getparam 0 .............................. <me>
  [ 46] pushsymb 336 ............................ <#ls>
  [ 49] pushcons 3 .............................. <"std">
  [ 51] pusharglistnoret 3 ...................... <me, #ls, "std">
  [ 53] objcall 222 ............................. me.setPartAction(#ls, "std")
  [ 55] getparam 0 .............................. <me>
  [ 57] pushsymb 343 ............................ <#rs>
  [ 60] pushcons 3 .............................. <"std">
  [ 62] pusharglistnoret 3 ...................... <me, #rs, "std">
  [ 64] objcall 222 ............................. me.setPartAction(#rs, "std")
  [ 66] getparam 0 .............................. <me>
  [ 68] pushsymb 339 ............................ <#lg>
  [ 71] pushcons 55 ............................. <"sit">
  [ 73] pusharglistnoret 3 ...................... <me, #lg, "sit">
  [ 75] objcall 222 ............................. me.setPartAction(#lg, "sit")
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 338 ............................ <#sh>
  [ 82] pushcons 55 ............................. <"sit">
  [ 84] pusharglistnoret 3 ...................... <me, #sh, "sit">
  [ 86] objcall 222 ............................. me.setPartAction(#sh, "sit")
  [ 88] getparam 0 .............................. <me>
  [ 90] pushcons 55 ............................. <"sit">
  [ 92] setobjprop 308 .......................... me.sBodyAction = "sit"
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] objcall 200 ............................. me.display()
  [101] ret
end

on isWalking me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 323 .......................... <me.bDance>
  [  5] not ..................................... <not me.bDance>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 308 .......................... <me.sBodyAction>
  [ 11] pushcons 31 ............................. <"wlk">
  [ 13] eq ...................................... <me.sBodyAction = "wlk">
  [ 14] and ..................................... <not me.bDance and (me.sBodyAction = "wlk")>
  [ 15] jmpifz [ 27] ............................ if not me.bDance and (me.sBodyAction = "wlk") then / else
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 63 .............................. return 1
  [ 24] jmp [ 32]
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 63 .............................. return 0
  [ 32] ret
end

on isSitting me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 308 .......................... <me.sBodyAction>
  [  5] pushcons 55 ............................. <"sit">
  [  7] eq ...................................... <me.sBodyAction = "sit">
  [  8] jmpifz [ 20] ............................ if me.sBodyAction = "sit" then / else
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 63 .............................. return 1
  [ 17] jmp [ 25]
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 63 .............................. return 0
  [ 25] ret
end

on dance me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 323 .......................... me.bDance = bState
  [  7] getparam 0 .............................. <me>
  [  9] pusharglistnoret 1 ...................... <me>
  [ 11] objcall 200 ............................. me.display()
  [ 13] ret
end

on lookStraight me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 245 ............................. me.setLookDirection(0)
  [  7] ret
end

on lookLeft me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] inv ..................................... <-1>
  [  5] pusharglistnoret 2 ...................... <me, -1>
  [  7] objcall 245 ............................. me.setLookDirection(-1)
  [  9] ret
end

on lookRight me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 245 ............................. me.setLookDirection(1)
  [  8] ret
end

on setLookDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 432 ............................ <#aRuntimeConfig>
  [  5] pushsymb 344 ............................ <#hd>
  [  8] pusharglist 3 ........................... <me, #aRuntimeConfig, #hd>
  [ 10] objcall 274 ............................. <me.aRuntimeConfig[#hd]>
  [ 13] pushsymb 438 ............................ <#dirOff>
  [ 16] getparam 1 .............................. <iDir>
  [ 18] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#hd], #dirOff, iDir>
  [ 20] objcall 443 ............................. me.aRuntimeConfig[#hd][#dirOff] = iDir
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 28] pushsymb 345 ............................ <#fc>
  [ 31] pusharglist 3 ........................... <me, #aRuntimeConfig, #fc>
  [ 33] objcall 274 ............................. <me.aRuntimeConfig[#fc]>
  [ 36] pushsymb 438 ............................ <#dirOff>
  [ 39] getparam 1 .............................. <iDir>
  [ 41] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#fc], #dirOff, iDir>
  [ 43] objcall 443 ............................. me.aRuntimeConfig[#fc][#dirOff] = iDir
  [ 46] getparam 0 .............................. <me>
  [ 48] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 51] pushsymb 346 ............................ <#ey>
  [ 54] pusharglist 3 ........................... <me, #aRuntimeConfig, #ey>
  [ 56] objcall 274 ............................. <me.aRuntimeConfig[#ey]>
  [ 59] pushsymb 438 ............................ <#dirOff>
  [ 62] getparam 1 .............................. <iDir>
  [ 64] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#ey], #dirOff, iDir>
  [ 66] objcall 443 ............................. me.aRuntimeConfig[#ey][#dirOff] = iDir
  [ 69] getparam 0 .............................. <me>
  [ 71] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 74] pushsymb 347 ............................ <#hr>
  [ 77] pusharglist 3 ........................... <me, #aRuntimeConfig, #hr>
  [ 79] objcall 274 ............................. <me.aRuntimeConfig[#hr]>
  [ 82] pushsymb 438 ............................ <#dirOff>
  [ 85] getparam 1 .............................. <iDir>
  [ 87] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#hr], #dirOff, iDir>
  [ 89] objcall 443 ............................. me.aRuntimeConfig[#hr][#dirOff] = iDir
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 432 ............................ <#aRuntimeConfig>
  [ 97] pushsymb 348 ............................ <#ht>
  [100] pusharglist 3 ........................... <me, #aRuntimeConfig, #ht>
  [102] objcall 274 ............................. <me.aRuntimeConfig[#ht]>
  [105] pushsymb 438 ............................ <#dirOff>
  [108] getparam 1 .............................. <iDir>
  [110] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#ht], #dirOff, iDir>
  [112] objcall 443 ............................. me.aRuntimeConfig[#ht][#dirOff] = iDir
  [115] getparam 0 .............................. <me>
  [117] pusharglistnoret 1 ...................... <me>
  [119] objcall 200 ............................. me.display()
  [121] ret
end

on setItemAction me, sAction
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 310 .......................... <me.sItemAction>
  [  5] pushcons 4 .............................. <EMPTY>
  [  7] nteq .................................... <me.sItemAction <> EMPTY>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 310 .......................... <me.sItemAction>
  [ 13] getparam 1 .............................. <sAction>
  [ 15] eq ...................................... <me.sItemAction = sAction>
  [ 16] and ..................................... <(me.sItemAction <> EMPTY) and (me.sItemAction = sAction)>
  [ 17] jmpifz [ 24] ............................ if (me.sItemAction <> EMPTY) and (me.sItemAction = sAction) then
  [ 20] pushcons 4 .............................. <EMPTY>
  [ 22] setparam 1 .............................. sAction = EMPTY
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <sAction>
  [ 28] setobjprop 310 .......................... me.sItemAction = sAction
  [ 31] getparam 1 .............................. <sAction>
  [ 33] peek 0 .................................. case sAction of
  [ 35] pushcons 32 ............................. <"crr">
  [ 37] eq
  [ 38] jmpifz [ 57] ............................ (case) "crr":
  [ 41] getparam 0 .............................. <me>
  [ 43] pushint8 1 .............................. <1>
  [ 45] setobjprop 324 .......................... me.bCarry = 1
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglistnoret 1 ...................... <me>
  [ 52] objcall 248 ............................. me.carry()
  [ 54] jmp [ 63] ............................... (case) otherwise:
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglistnoret 1 ...................... <me>
  [ 61] objcall 247 ............................. me.resetItem()
  [ 63] pop 1 ................................... end case
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglistnoret 1 ...................... <me>
  [ 69] objcall 251 ............................. me.wakeup()
  [ 71] ret
end

on resetItem me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 28 ............................. <"ri">
  [  4] pushzero ................................ <0>
  [  5] pusharglistnoret 3 ...................... <me, "ri", 0>
  [  7] objcall 218 ............................. me.setPartActive("ri", 0)
  [  9] getparam 0 .............................. <me>
  [ 11] pushzero ................................ <0>
  [ 12] setobjprop 324 .......................... me.bCarry = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pushzero ................................ <0>
  [ 18] setobjprop 327 .......................... me.bDrink = 0
  [ 21] ret
end

on carry me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 28 ............................. <"ri">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "ri", 1>
  [  8] objcall 218 ............................. me.setPartActive("ri", 1)
  [ 10] ret
end

on drink me
  [  0] ret
end

on isCarrying me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 324 .......................... <me.bCarry>
  [  5] pusharglistnoret 1 ...................... <me.bCarry>
  [  7] extcall 63 .............................. return me.bCarry
  [  9] ret
end

on wakeup me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 332 .......................... me.bSleep = 0
  [  6] getparam 0 .............................. <me>
  [  8] getmovieprop 281 ........................ <the milliSeconds>
  [ 11] setobjprop 333 .......................... me.iSleepTimer = the milliSeconds
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 253 ............................. me.resetFace()
  [ 20] ret
end

on setFaceAction me, sAction, bStartEmoteTimer
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 332 .......................... <me.bSleep>
  [  5] jmpifz [ 14] ............................ if me.bSleep then
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 1 ...................... <me>
  [ 12] objcall 251 ............................. me.wakeup()
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 1 .............................. <sAction>
  [ 18] setobjprop 309 .......................... me.sFaceAction = sAction
  [ 21] getparam 1 .............................. <sAction>
  [ 23] peek 0 .................................. case sAction of
  [ 25] pushcons 3 .............................. <"std">
  [ 27] eq
  [ 28] jmpifz [ 46] ............................ (case) "std":
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglistnoret 1 ...................... <me>
  [ 35] objcall 253 ............................. me.resetFace()
  [ 37] getparam 0 .............................. <me>
  [ 39] pushzero ................................ <0>
  [ 40] setobjprop 320 .......................... me.bEmote = 0
  [ 43] jmp [174]
  [ 46] peek 0
  [ 48] pushcons 56 ............................. <"spk">
  [ 50] eq
  [ 51] jmpifz [ 63] ............................ (case) "spk":
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglistnoret 1 ...................... <me>
  [ 58] objcall 254 ............................. me.speak()
  [ 60] jmp [174]
  [ 63] peek 0
  [ 65] pushcons 57 ............................. <"sml">
  [ 67] eq
  [ 68] jmpifz [ 87] ............................ (case) "sml":
  [ 71] getparam 0 .............................. <me>
  [ 73] pusharglistnoret 1 ...................... <me>
  [ 75] objcall 255 ............................. me.smile()
  [ 77] getparam 0 .............................. <me>
  [ 79] pushint8 1 .............................. <1>
  [ 81] setobjprop 320 .......................... me.bEmote = 1
  [ 84] jmp [174]
  [ 87] peek 0
  [ 89] pushcons 58 ............................. <"agr">
  [ 91] eq
  [ 92] jmpifz [112] ............................ (case) "agr":
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] objcall 256 ............................. me.angry()
  [102] getparam 0 .............................. <me>
  [104] pushint8 1 .............................. <1>
  [106] setobjprop 320 .......................... me.bEmote = 1
  [109] jmp [174]
  [112] peek 0
  [114] pushcons 59 ............................. <"sad">
  [116] eq
  [117] jmpifz [137] ............................ (case) "sad":
  [120] getparam 0 .............................. <me>
  [122] pusharglistnoret 1 ...................... <me>
  [124] objcall 257 ............................. me.sad()
  [127] getparam 0 .............................. <me>
  [129] pushint8 1 .............................. <1>
  [131] setobjprop 320 .......................... me.bEmote = 1
  [134] jmp [174]
  [137] peek 0
  [139] pushcons 60 ............................. <"srp">
  [141] eq
  [142] jmpifz [162] ............................ (case) "srp":
  [145] getparam 0 .............................. <me>
  [147] pusharglistnoret 1 ...................... <me>
  [149] objcall 258 ............................. me.surprised()
  [152] getparam 0 .............................. <me>
  [154] pushint8 1 .............................. <1>
  [156] setobjprop 320 .......................... me.bEmote = 1
  [159] jmp [174] ............................... (case) otherwise:
  [162] getparam 0 .............................. <me>
  [164] pusharglistnoret 1 ...................... <me>
  [166] objcall 253 ............................. me.resetFace()
  [168] getparam 0 .............................. <me>
  [170] pushzero ................................ <0>
  [171] setobjprop 320 .......................... me.bEmote = 0
  [174] pop 1 ................................... end case
  [176] getparam 0 .............................. <me>
  [178] getobjprop 320 .......................... <me.bEmote>
  [181] jmpifz [205] ............................ if me.bEmote then
  [184] getparam 2 .............................. <bStartEmoteTimer>
  [186] pusharglist 1 ........................... <bStartEmoteTimer>
  [188] extcall 365 ............................. <voidp(bStartEmoteTimer)>
  [191] getparam 2 .............................. <bStartEmoteTimer>
  [193] or ...................................... <voidp(bStartEmoteTimer) or bStartEmoteTimer>
  [194] jmpifz [205] ............................ if voidp(bStartEmoteTimer) or bStartEmoteTimer then
  [197] getparam 0 .............................. <me>
  [199] getmovieprop 281 ........................ <the milliSeconds>
  [202] setobjprop 321 .......................... me.iEmoteTimer = the milliSeconds
  [205] ret
end

on resetFace me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 319 .......................... <me.bChatting>
  [  5] not ..................................... <not me.bChatting>
  [  6] jmpifz [ 20] ............................ if not me.bChatting then
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 344 ............................ <#hd>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 18] objcall 222 ............................. me.setPartAction(#hd, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 319 .......................... <me.bChatting>
  [ 25] not ..................................... <not me.bChatting>
  [ 26] jmpifz [ 40] ............................ if not me.bChatting then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 345 ............................ <#fc>
  [ 34] pushcons 3 .............................. <"std">
  [ 36] pusharglistnoret 3 ...................... <me, #fc, "std">
  [ 38] objcall 222 ............................. me.setPartAction(#fc, "std")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 346 ............................ <#ey>
  [ 45] pushcons 3 .............................. <"std">
  [ 47] pusharglistnoret 3 ...................... <me, #ey, "std">
  [ 49] objcall 222 ............................. me.setPartAction(#ey, "std")
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 319 .......................... <me.bChatting>
  [ 56] not ..................................... <not me.bChatting>
  [ 57] jmpifz [ 71] ............................ if not me.bChatting then
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 347 ............................ <#hr>
  [ 65] pushcons 3 .............................. <"std">
  [ 67] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 69] objcall 222 ............................. me.setPartAction(#hr, "std")
  [ 71] ret
end

on speak me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 346 ............................ <#ey>
  [  5] pushcons 3 .............................. <"std">
  [  7] pusharglistnoret 3 ...................... <me, #ey, "std">
  [  9] objcall 222 ............................. me.setPartAction(#ey, "std")
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 344 ............................ <#hd>
  [ 16] pushcons 56 ............................. <"spk">
  [ 18] pusharglistnoret 3 ...................... <me, #hd, "spk">
  [ 20] objcall 222 ............................. me.setPartAction(#hd, "spk")
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 345 ............................ <#fc>
  [ 27] pushcons 56 ............................. <"spk">
  [ 29] pusharglistnoret 3 ...................... <me, #fc, "spk">
  [ 31] objcall 222 ............................. me.setPartAction(#fc, "spk")
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 347 ............................ <#hr>
  [ 38] pushcons 56 ............................. <"spk">
  [ 40] pusharglistnoret 3 ...................... <me, #hr, "spk">
  [ 42] objcall 222 ............................. me.setPartAction(#hr, "spk")
  [ 44] ret
end

on smile me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 319 .......................... <me.bChatting>
  [  5] not ..................................... <not me.bChatting>
  [  6] jmpifz [ 20] ............................ if not me.bChatting then
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 344 ............................ <#hd>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 18] objcall 222 ............................. me.setPartAction(#hd, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 319 .......................... <me.bChatting>
  [ 25] not ..................................... <not me.bChatting>
  [ 26] jmpifz [ 40] ............................ if not me.bChatting then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 345 ............................ <#fc>
  [ 34] pushcons 57 ............................. <"sml">
  [ 36] pusharglistnoret 3 ...................... <me, #fc, "sml">
  [ 38] objcall 222 ............................. me.setPartAction(#fc, "sml")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 346 ............................ <#ey>
  [ 45] pushcons 57 ............................. <"sml">
  [ 47] pusharglistnoret 3 ...................... <me, #ey, "sml">
  [ 49] objcall 222 ............................. me.setPartAction(#ey, "sml")
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 319 .......................... <me.bChatting>
  [ 56] not ..................................... <not me.bChatting>
  [ 57] jmpifz [ 71] ............................ if not me.bChatting then
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 347 ............................ <#hr>
  [ 65] pushcons 3 .............................. <"std">
  [ 67] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 69] objcall 222 ............................. me.setPartAction(#hr, "std")
  [ 71] ret
end

on angry me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 319 .......................... <me.bChatting>
  [  5] not ..................................... <not me.bChatting>
  [  6] jmpifz [ 20] ............................ if not me.bChatting then
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 344 ............................ <#hd>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 18] objcall 222 ............................. me.setPartAction(#hd, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 319 .......................... <me.bChatting>
  [ 25] not ..................................... <not me.bChatting>
  [ 26] jmpifz [ 40] ............................ if not me.bChatting then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 345 ............................ <#fc>
  [ 34] pushcons 58 ............................. <"agr">
  [ 36] pusharglistnoret 3 ...................... <me, #fc, "agr">
  [ 38] objcall 222 ............................. me.setPartAction(#fc, "agr")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 346 ............................ <#ey>
  [ 45] pushcons 58 ............................. <"agr">
  [ 47] pusharglistnoret 3 ...................... <me, #ey, "agr">
  [ 49] objcall 222 ............................. me.setPartAction(#ey, "agr")
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 319 .......................... <me.bChatting>
  [ 56] not ..................................... <not me.bChatting>
  [ 57] jmpifz [ 71] ............................ if not me.bChatting then
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 347 ............................ <#hr>
  [ 65] pushcons 3 .............................. <"std">
  [ 67] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 69] objcall 222 ............................. me.setPartAction(#hr, "std")
  [ 71] ret
end

on sad me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 319 .......................... <me.bChatting>
  [  5] not ..................................... <not me.bChatting>
  [  6] jmpifz [ 20] ............................ if not me.bChatting then
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 344 ............................ <#hd>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 18] objcall 222 ............................. me.setPartAction(#hd, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 319 .......................... <me.bChatting>
  [ 25] not ..................................... <not me.bChatting>
  [ 26] jmpifz [ 40] ............................ if not me.bChatting then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 345 ............................ <#fc>
  [ 34] pushcons 59 ............................. <"sad">
  [ 36] pusharglistnoret 3 ...................... <me, #fc, "sad">
  [ 38] objcall 222 ............................. me.setPartAction(#fc, "sad")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 346 ............................ <#ey>
  [ 45] pushcons 59 ............................. <"sad">
  [ 47] pusharglistnoret 3 ...................... <me, #ey, "sad">
  [ 49] objcall 222 ............................. me.setPartAction(#ey, "sad")
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 319 .......................... <me.bChatting>
  [ 56] not ..................................... <not me.bChatting>
  [ 57] jmpifz [ 71] ............................ if not me.bChatting then
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 347 ............................ <#hr>
  [ 65] pushcons 3 .............................. <"std">
  [ 67] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 69] objcall 222 ............................. me.setPartAction(#hr, "std")
  [ 71] ret
end

on surprised me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 319 .......................... <me.bChatting>
  [  5] not ..................................... <not me.bChatting>
  [  6] jmpifz [ 20] ............................ if not me.bChatting then
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 344 ............................ <#hd>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 18] objcall 222 ............................. me.setPartAction(#hd, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 319 .......................... <me.bChatting>
  [ 25] not ..................................... <not me.bChatting>
  [ 26] jmpifz [ 40] ............................ if not me.bChatting then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 345 ............................ <#fc>
  [ 34] pushcons 60 ............................. <"srp">
  [ 36] pusharglistnoret 3 ...................... <me, #fc, "srp">
  [ 38] objcall 222 ............................. me.setPartAction(#fc, "srp")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 346 ............................ <#ey>
  [ 45] pushcons 60 ............................. <"srp">
  [ 47] pusharglistnoret 3 ...................... <me, #ey, "srp">
  [ 49] objcall 222 ............................. me.setPartAction(#ey, "srp")
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 319 .......................... <me.bChatting>
  [ 56] not ..................................... <not me.bChatting>
  [ 57] jmpifz [ 71] ............................ if not me.bChatting then
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 347 ............................ <#hr>
  [ 65] pushcons 3 .............................. <"std">
  [ 67] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 69] objcall 222 ............................. me.setPartAction(#hr, "std")
  [ 71] ret
end

on chat me, sString
  [  0] getparam 1 .............................. <sString>
  [  2] pusharglist 1 ........................... <sString>
  [  4] extcall 365 ............................. <voidp(sString)>
  [  7] getparam 1 .............................. <sString>
  [  9] pushcons 4 .............................. <EMPTY>
  [ 11] eq ...................................... <sString = EMPTY>
  [ 12] or ...................................... <voidp(sString) or (sString = EMPTY)>
  [ 13] jmpifz [ 20] ............................ if voidp(sString) or (sString = EMPTY) then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 63 .............................. return 
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 1 .............................. <sString>
  [ 24] getobjprop 393 .......................... <sString.length>
  [ 27] pushint8 100 ............................ <100>
  [ 29] mul ..................................... <sString.length * 100>
  [ 30] setobjprop 318 .......................... me.iChatTimerLength = sString.length * 100
  [ 33] getparam 0 .............................. <me>
  [ 35] getmovieprop 281 ........................ <the milliSeconds>
  [ 38] setobjprop 317 .......................... me.iChatTimer = the milliSeconds
  [ 41] getparam 0 .............................. <me>
  [ 43] pushint8 1 .............................. <1>
  [ 45] setobjprop 319 .......................... me.bChatting = 1
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglistnoret 1 ...................... <me>
  [ 52] objcall 254 ............................. me.speak()
  [ 54] ret
end

on setDepth me, iDepth, iShadowDepth
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 368 .......................... <me.iImageSprite>
  [  5] pusharglist 1 ........................... <me.iImageSprite>
  [  7] extcall 365 ............................. <voidp(me.iImageSprite)>
  [ 10] jmpifz [ 17] ............................ if voidp(me.iImageSprite) then
  [ 13] pusharglistnoret 0 ...................... <>
  [ 15] extcall 63 .............................. return 
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 368 .......................... <me.iImageSprite>
  [ 22] pusharglist 1 ........................... <me.iImageSprite>
  [ 24] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 26] getparam 1 .............................. <iDepth>
  [ 28] pushint8 1 .............................. <1>
  [ 30] add ..................................... <iDepth + 1>
  [ 31] setobjprop 134 .......................... sprite(me.iImageSprite).locZ = iDepth + 1
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 369 .......................... <me.iShadowSprite>
  [ 38] pusharglist 1 ........................... <me.iShadowSprite>
  [ 40] extcall 365 ............................. <voidp(me.iShadowSprite)>
  [ 43] jmpifz [ 50] ............................ if voidp(me.iShadowSprite) then
  [ 46] pusharglistnoret 0 ...................... <>
  [ 48] extcall 63 .............................. return 
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 369 .......................... <me.iShadowSprite>
  [ 55] pusharglist 1 ........................... <me.iShadowSprite>
  [ 57] extcall 79 .............................. <sprite(me.iShadowSprite)>
  [ 59] getparam 2 .............................. <iShadowDepth>
  [ 61] setobjprop 134 .......................... sprite(me.iShadowSprite).locZ = iShadowDepth
  [ 63] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeightOffset>
  [  4] setobjprop 351 .......................... me.iHeightOffset = _iHeightOffset
  [  7] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 351 .......................... <me.iHeightOffset>
  [  5] pusharglistnoret 1 ...................... <me.iHeightOffset>
  [  7] extcall 63 .............................. return me.iHeightOffset
  [  9] ret
end

on destroy me
  [  0] getmovieprop 60 ......................... <the actorList>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglistnoret 2 ...................... <the actorList, me>
  [  6] objcall 62 .............................. (the actorList).deleteOne(me)
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 368 .......................... <me.iImageSprite>
  [ 13] pusharglist 1 ........................... <me.iImageSprite>
  [ 15] extcall 79 .............................. <sprite(me.iImageSprite)>
  [ 17] pusharglist 0 ........................... <>
  [ 19] extcall 59 .............................. <VOID>
  [ 21] setobjprop 142 .......................... sprite(me.iImageSprite).member = VOID
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 369 .......................... <me.iShadowSprite>
  [ 28] pusharglist 1 ........................... <me.iShadowSprite>
  [ 30] extcall 79 .............................. <sprite(me.iShadowSprite)>
  [ 32] pusharglist 0 ........................... <>
  [ 34] extcall 59 .............................. <VOID>
  [ 36] setobjprop 142 .......................... sprite(me.iShadowSprite).member = VOID
  [ 38] pusharglist 0 ........................... <>
  [ 40] extcall 59 .............................. <VOID>
  [ 42] setglobal 97 ............................ oAvatar = VOID
  [ 44] pusharglist 0 ........................... <>
  [ 46] extcall 59 .............................. <VOID>
  [ 48] setparam 0 .............................. me = VOID
  [ 50] ret
end
