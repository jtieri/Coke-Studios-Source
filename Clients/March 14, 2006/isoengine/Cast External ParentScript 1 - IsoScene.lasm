property bDebug, oMath2d, oIsoConstants, iYRot, iXRot, fSinY, fSinX, fCosY, fCosX, iXOff, iYOff, iFPS, iSequenceRate, iSqSize, iRows, iCols, oGrid, oMap, oHotSpots, oSpriteManager, oMouseSquare, oMouseGridPoint, oFMath, oBackground, oFloor, oWall, oDoor, oWindow, oRugs, oFurniture, oWallItems, oAvatars, oStaticItems, oHiliter, oStudioInfo, oInfoStand, oVoteItems, oAvatarIndicator, oTrivia, oSelectedItem, oSceneXml, oMapXml, oEntryXml, iLastClickTime, iAllowedClickTime, sLastRolloverItemName
global oIsoScene, oSession, oStudio, oPossessionStudio, oRoom, oStudioMap, oDenizenManager, gbTestMode, ElementMgr, gFeatureSet, gCatalog

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 338 .......................... me.bDebug = 0
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 0 .............................. <"new() ">
  [ 10] pusharglistnoret 2 ...................... <me, "new() ">
  [ 12] objcall 332 ............................. me.debug("new() ")
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 1 .............................. <"IsoConstants">
  [ 19] pusharglist 1 ........................... <"IsoConstants">
  [ 21] extcall 194 ............................. <script("IsoConstants")>
  [ 23] pusharglist 1 ........................... <script("IsoConstants")>
  [ 25] extcall 0 ............................... <new(script("IsoConstants"))>
  [ 27] setobjprop 339 .......................... me.oIsoConstants = new(script("IsoConstants"))
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 2 .............................. <"Math2d">
  [ 34] pusharglist 1 ........................... <"Math2d">
  [ 36] extcall 194 ............................. <script("Math2d")>
  [ 38] pusharglist 1 ........................... <script("Math2d")>
  [ 40] extcall 0 ............................... <new(script("Math2d"))>
  [ 42] setobjprop 340 .......................... me.oMath2d = new(script("Math2d"))
  [ 45] getparam 0 .............................. <me>
  [ 47] pushcons 3 .............................. <"Math">
  [ 49] pusharglist 1 ........................... <"Math">
  [ 51] extcall 341 ............................. <newObject("Math")>
  [ 54] setobjprop 342 .......................... me.oFMath = newObject("Math")
  [ 57] getparam 0 .............................. <me>
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 64] getobjprop 343 .......................... <me.oIsoConstants.DEFAULT_YROT>
  [ 67] setobjprop 344 .......................... me.iYRot = me.oIsoConstants.DEFAULT_YROT
  [ 70] getparam 0 .............................. <me>
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 77] getobjprop 345 .......................... <me.oIsoConstants.DEFAULT_XROT>
  [ 80] setobjprop 346 .......................... me.iXRot = me.oIsoConstants.DEFAULT_XROT
  [ 83] getparam 0 .............................. <me>
  [ 85] getprop 340 ............................. <oMath2d>
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 344 .......................... <me.iYRot>
  [ 93] pusharglist 2 ........................... <oMath2d, me.iYRot>
  [ 95] objcall 348 ............................. <oMath2d.rad(me.iYRot)>
  [ 98] pusharglist 1 ........................... <oMath2d.rad(me.iYRot)>
  [100] extcall 347 ............................. <sin(oMath2d.rad(me.iYRot))>
  [103] setobjprop 349 .......................... me.fSinY = sin(oMath2d.rad(me.iYRot))
  [106] getparam 0 .............................. <me>
  [108] getprop 340 ............................. <oMath2d>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 346 .......................... <me.iXRot>
  [116] pusharglist 2 ........................... <oMath2d, me.iXRot>
  [118] objcall 348 ............................. <oMath2d.rad(me.iXRot)>
  [121] pusharglist 1 ........................... <oMath2d.rad(me.iXRot)>
  [123] extcall 347 ............................. <sin(oMath2d.rad(me.iXRot))>
  [126] setobjprop 350 .......................... me.fSinX = sin(oMath2d.rad(me.iXRot))
  [129] getparam 0 .............................. <me>
  [131] getprop 340 ............................. <oMath2d>
  [134] getparam 0 .............................. <me>
  [136] getobjprop 344 .......................... <me.iYRot>
  [139] pusharglist 2 ........................... <oMath2d, me.iYRot>
  [141] objcall 348 ............................. <oMath2d.rad(me.iYRot)>
  [144] pusharglist 1 ........................... <oMath2d.rad(me.iYRot)>
  [146] extcall 351 ............................. <cos(oMath2d.rad(me.iYRot))>
  [149] setobjprop 352 .......................... me.fCosY = cos(oMath2d.rad(me.iYRot))
  [152] getparam 0 .............................. <me>
  [154] getprop 340 ............................. <oMath2d>
  [157] getparam 0 .............................. <me>
  [159] getobjprop 346 .......................... <me.iXRot>
  [162] pusharglist 2 ........................... <oMath2d, me.iXRot>
  [164] objcall 348 ............................. <oMath2d.rad(me.iXRot)>
  [167] pusharglist 1 ........................... <oMath2d.rad(me.iXRot)>
  [169] extcall 351 ............................. <cos(oMath2d.rad(me.iXRot))>
  [172] setobjprop 353 .......................... me.fCosX = cos(oMath2d.rad(me.iXRot))
  [175] getparam 0 .............................. <me>
  [177] getparam 0 .............................. <me>
  [179] getchainedprop 339 ...................... <me.oIsoConstants>
  [182] getobjprop 354 .......................... <me.oIsoConstants.DEFAULT_XOFF>
  [185] setobjprop 355 .......................... me.iXOff = me.oIsoConstants.DEFAULT_XOFF
  [188] getparam 0 .............................. <me>
  [190] getparam 0 .............................. <me>
  [192] getchainedprop 339 ...................... <me.oIsoConstants>
  [195] getobjprop 356 .......................... <me.oIsoConstants.DEFAULT_YOFF>
  [198] setobjprop 357 .......................... me.iYOff = me.oIsoConstants.DEFAULT_YOFF
  [201] getparam 0 .............................. <me>
  [203] getparam 0 .............................. <me>
  [205] getchainedprop 339 ...................... <me.oIsoConstants>
  [208] getobjprop 358 .......................... <me.oIsoConstants.DEFAULT_SQSIZE>
  [211] setobjprop 359 .......................... me.iSqSize = me.oIsoConstants.DEFAULT_SQSIZE
  [214] getparam 0 .............................. <me>
  [216] getparam 0 .............................. <me>
  [218] getchainedprop 339 ...................... <me.oIsoConstants>
  [221] getobjprop 360 .......................... <me.oIsoConstants.DEFAULT_ROWS>
  [224] setobjprop 361 .......................... me.iRows = me.oIsoConstants.DEFAULT_ROWS
  [227] getparam 0 .............................. <me>
  [229] getparam 0 .............................. <me>
  [231] getchainedprop 339 ...................... <me.oIsoConstants>
  [234] getobjprop 362 .......................... <me.oIsoConstants.DEFAULT_COLS>
  [237] setobjprop 363 .......................... me.iCols = me.oIsoConstants.DEFAULT_COLS
  [240] getparam 0 .............................. <me>
  [242] getparam 0 .............................. <me>
  [244] getchainedprop 339 ...................... <me.oIsoConstants>
  [247] getobjprop 364 .......................... <me.oIsoConstants.DEFAULT_FPS>
  [250] setobjprop 365 .......................... me.iFPS = me.oIsoConstants.DEFAULT_FPS
  [253] getparam 0 .............................. <me>
  [255] getparam 0 .............................. <me>
  [257] getchainedprop 339 ...................... <me.oIsoConstants>
  [260] getobjprop 366 .......................... <me.oIsoConstants.DEFAULT_SEQUENCE_RATE>
  [263] setobjprop 367 .......................... me.iSequenceRate = me.oIsoConstants.DEFAULT_SEQUENCE_RATE
  [266] getparam 0 .............................. <me>
  [268] getchainedprop 339 ...................... <me.oIsoConstants>
  [271] getobjprop 364 .......................... <me.oIsoConstants.DEFAULT_FPS>
  [274] pusharglistnoret 1 ...................... <me.oIsoConstants.DEFAULT_FPS>
  [276] extcall 368 ............................. puppetTempo(me.oIsoConstants.DEFAULT_FPS)
  [279] getparam 0 .............................. <me>
  [281] setglobal 133 ........................... oIsoScene = me
  [283] getparam 0 .............................. <me>
  [285] getmovieprop 369 ........................ <the milliSeconds>
  [288] setobjprop 370 .......................... me.iLastClickTime = the milliSeconds
  [291] getparam 0 .............................. <me>
  [293] pushint16 650 ........................... <650>
  [296] setobjprop 371 .......................... me.iAllowedClickTime = 650
  [299] getparam 0 .............................. <me>
  [301] pushcons 4 .............................. <EMPTY>
  [303] setobjprop 372 .......................... me.sLastRolloverItemName = EMPTY
  [306] getparam 0 .............................. <me>
  [308] pusharglistnoret 1 ...................... <me>
  [310] extcall 52 .............................. return me
  [312] ret
end

on setLayout me, iLayout
  [  0] getparam 1 .............................. <iLayout>
  [  2] peek 0 .................................. case iLayout of
  [  4] getparam 0 .............................. <me>
  [  6] getchainedprop 339 ...................... <me.oIsoConstants>
  [  9] getobjprop 373 .......................... <me.oIsoConstants.DEFAULT_LAYOUT_TYPE>
  [ 12] eq
  [ 13] jmpifz [ 84] ............................ (case) me.oIsoConstants.DEFAULT_LAYOUT_TYPE:
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 23] getobjprop 354 .......................... <me.oIsoConstants.DEFAULT_XOFF>
  [ 26] setobjprop 355 .......................... me.iXOff = me.oIsoConstants.DEFAULT_XOFF
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 36] getobjprop 356 .......................... <me.oIsoConstants.DEFAULT_YOFF>
  [ 39] setobjprop 357 .......................... me.iYOff = me.oIsoConstants.DEFAULT_YOFF
  [ 42] getparam 0 .............................. <me>
  [ 44] getparam 0 .............................. <me>
  [ 46] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 49] getobjprop 358 .......................... <me.oIsoConstants.DEFAULT_SQSIZE>
  [ 52] setobjprop 359 .......................... me.iSqSize = me.oIsoConstants.DEFAULT_SQSIZE
  [ 55] getparam 0 .............................. <me>
  [ 57] getparam 0 .............................. <me>
  [ 59] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 62] getobjprop 360 .......................... <me.oIsoConstants.DEFAULT_ROWS>
  [ 65] setobjprop 361 .......................... me.iRows = me.oIsoConstants.DEFAULT_ROWS
  [ 68] getparam 0 .............................. <me>
  [ 70] getparam 0 .............................. <me>
  [ 72] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 75] getobjprop 362 .......................... <me.oIsoConstants.DEFAULT_COLS>
  [ 78] setobjprop 363 .......................... me.iCols = me.oIsoConstants.DEFAULT_COLS
  [ 81] jmp [163]
  [ 84] peek 0
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 91] getobjprop 374 .......................... <me.oIsoConstants.DEFAULT_LG_LAYOUT_TYPE>
  [ 94] eq
  [ 95] jmpifz [163] ............................ (case) me.oIsoConstants.DEFAULT_LG_LAYOUT_TYPE:
  [ 98] getparam 0 .............................. <me>
  [100] getparam 0 .............................. <me>
  [102] getchainedprop 339 ...................... <me.oIsoConstants>
  [105] getobjprop 375 .......................... <me.oIsoConstants.DEFAULT_LG_XOFF>
  [108] setobjprop 355 .......................... me.iXOff = me.oIsoConstants.DEFAULT_LG_XOFF
  [111] getparam 0 .............................. <me>
  [113] getparam 0 .............................. <me>
  [115] getchainedprop 339 ...................... <me.oIsoConstants>
  [118] getobjprop 376 .......................... <me.oIsoConstants.DEFAULT_LG_YOFF>
  [121] setobjprop 357 .......................... me.iYOff = me.oIsoConstants.DEFAULT_LG_YOFF
  [124] getparam 0 .............................. <me>
  [126] getparam 0 .............................. <me>
  [128] getchainedprop 339 ...................... <me.oIsoConstants>
  [131] getobjprop 377 .......................... <me.oIsoConstants.DEFAULT_LG_SQSIZE>
  [134] setobjprop 359 .......................... me.iSqSize = me.oIsoConstants.DEFAULT_LG_SQSIZE
  [137] getparam 0 .............................. <me>
  [139] getparam 0 .............................. <me>
  [141] getchainedprop 339 ...................... <me.oIsoConstants>
  [144] getobjprop 378 .......................... <me.oIsoConstants.DEFAULT_LG_ROWS>
  [147] setobjprop 361 .......................... me.iRows = me.oIsoConstants.DEFAULT_LG_ROWS
  [150] getparam 0 .............................. <me>
  [152] getparam 0 .............................. <me>
  [154] getchainedprop 339 ...................... <me.oIsoConstants>
  [157] getobjprop 379 .......................... <me.oIsoConstants.DEFAULT_LG_COLS>
  [160] setobjprop 363 .......................... me.iCols = me.oIsoConstants.DEFAULT_LG_COLS
  [163] pop 1 ................................... end case
  [165] ret
end

on init me, _oSceneXml, _oMapXml, _oEntryXml
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 288 ............................. me.lockDisplay(1)
  [  9] getparam 0 .............................. <me>
  [ 11] getparam 1 .............................. <_oSceneXml>
  [ 13] setobjprop 381 .......................... me.oSceneXml = _oSceneXml
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 2 .............................. <_oMapXml>
  [ 20] setobjprop 382 .......................... me.oMapXml = _oMapXml
  [ 23] getparam 0 .............................. <me>
  [ 25] getparam 3 .............................. <_oEntryXml>
  [ 27] setobjprop 383 .......................... me.oEntryXml = _oEntryXml
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 381 .......................... <me.oSceneXml>
  [ 35] pusharglist 1 ........................... <me.oSceneXml>
  [ 37] extcall 59 .............................. <voidp(me.oSceneXml)>
  [ 39] not ..................................... <not voidp(me.oSceneXml)>
  [ 40] jmpifz [112] ............................ if not voidp(me.oSceneXml) then
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 381 ...................... <me.oSceneXml>
  [ 48] getobjprop 384 .......................... <me.oSceneXml.firstChild>
  [ 51] setlocal 0 .............................. oScene = me.oSceneXml.firstChild
  [ 53] getlocal 0 .............................. <oScene>
  [ 55] getchainedprop 385 ...................... <oScene.attributes>
  [ 58] getobjprop 386 .......................... <oScene.attributes.layoutType>
  [ 61] pusharglist 1 ........................... <oScene.attributes.layoutType>
  [ 63] extcall 69 .............................. <integer(oScene.attributes.layoutType)>
  [ 65] setlocal 1 .............................. iLayoutType = integer(oScene.attributes.layoutType)
  [ 67] getparam 0 .............................. <me>
  [ 69] getlocal 1 .............................. <iLayoutType>
  [ 71] pusharglistnoret 2 ...................... <me, iLayoutType>
  [ 73] objcall 287 ............................. me.setLayout(iLayoutType)
  [ 76] getparam 0 .............................. <me>
  [ 78] getlocal 0 .............................. <oScene>
  [ 80] getchainedprop 385 ...................... <oScene.attributes>
  [ 83] getobjprop 388 .......................... <oScene.attributes.xoff>
  [ 86] pusharglist 1 ........................... <oScene.attributes.xoff>
  [ 88] extcall 387 ............................. <float(oScene.attributes.xoff)>
  [ 91] setobjprop 355 .......................... me.iXOff = float(oScene.attributes.xoff)
  [ 94] getparam 0 .............................. <me>
  [ 96] getlocal 0 .............................. <oScene>
  [ 98] getchainedprop 385 ...................... <oScene.attributes>
  [101] getobjprop 389 .......................... <oScene.attributes.yoff>
  [104] pusharglist 1 ........................... <oScene.attributes.yoff>
  [106] extcall 387 ............................. <float(oScene.attributes.yoff)>
  [109] setobjprop 357 .......................... me.iYOff = float(oScene.attributes.yoff)
  [112] getparam 0 .............................. <me>
  [114] pushcons 5 .............................. <"IsoSpriteManager">
  [116] pusharglist 1 ........................... <"IsoSpriteManager">
  [118] extcall 194 ............................. <script("IsoSpriteManager")>
  [120] getparam 0 .............................. <me>
  [122] pusharglist 2 ........................... <script("IsoSpriteManager"), me>
  [124] extcall 0 ............................... <new(script("IsoSpriteManager"), me)>
  [126] setobjprop 134 .......................... me.oSpriteManager = new(script("IsoSpriteManager"), me)
  [128] getparam 0 .............................. <me>
  [130] pushcons 6 .............................. <"IsoGrid">
  [132] pusharglist 1 ........................... <"IsoGrid">
  [134] extcall 194 ............................. <script("IsoGrid")>
  [136] getparam 0 .............................. <me>
  [138] getobjprop 361 .......................... <me.iRows>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 363 .......................... <me.iCols>
  [146] getparam 0 .............................. <me>
  [148] getobjprop 359 .......................... <me.iSqSize>
  [151] pusharglist 4 ........................... <script("IsoGrid"), me.iRows, me.iCols, me.iSqSize>
  [153] extcall 0 ............................... <new(script("IsoGrid"), me.iRows, me.iCols, me.iSqSize)>
  [155] setobjprop 136 .......................... me.oGrid = new(script("IsoGrid"), me.iRows, me.iCols, me.iSqSize)
  [157] getparam 0 .............................. <me>
  [159] pushcons 7 .............................. <"Map">
  [161] pusharglist 1 ........................... <"Map">
  [163] extcall 194 ............................. <script("Map")>
  [165] getparam 0 .............................. <me>
  [167] getchainedprop 136 ...................... <me.oGrid>
  [169] getobjprop 361 .......................... <me.oGrid.iRows>
  [172] getparam 0 .............................. <me>
  [174] getchainedprop 136 ...................... <me.oGrid>
  [176] getobjprop 363 .......................... <me.oGrid.iCols>
  [179] getprop 382 ............................. <oMapXml>
  [182] pusharglist 4 ........................... <script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml>
  [184] extcall 0 ............................... <new(script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml)>
  [186] setobjprop 390 .......................... me.oMap = new(script("Map"), me.oGrid.iRows, me.oGrid.iCols, oMapXml)
  [189] getparam 0 .............................. <me>
  [191] pushcons 8 .............................. <"Background">
  [193] pusharglist 1 ........................... <"Background">
  [195] extcall 194 ............................. <script("Background")>
  [197] pusharglist 1 ........................... <script("Background")>
  [199] objcall 0 ............................... <script("Background").new()>
  [201] setobjprop 391 .......................... me.oBackground = script("Background").new()
  [204] getparam 0 .............................. <me>
  [206] pushcons 9 .............................. <"Floor">
  [208] pusharglist 1 ........................... <"Floor">
  [210] extcall 194 ............................. <script("Floor")>
  [212] pusharglist 1 ........................... <script("Floor")>
  [214] objcall 0 ............................... <script("Floor").new()>
  [216] setobjprop 392 .......................... me.oFloor = script("Floor").new()
  [219] getparam 0 .............................. <me>
  [221] pushcons 10 ............................. <"Wall">
  [223] pusharglist 1 ........................... <"Wall">
  [225] extcall 194 ............................. <script("Wall")>
  [227] pusharglist 1 ........................... <script("Wall")>
  [229] objcall 0 ............................... <script("Wall").new()>
  [231] setobjprop 393 .......................... me.oWall = script("Wall").new()
  [234] getparam 0 .............................. <me>
  [236] pushcons 11 ............................. <"Door">
  [238] pusharglist 1 ........................... <"Door">
  [240] extcall 194 ............................. <script("Door")>
  [242] pusharglist 1 ........................... <script("Door")>
  [244] objcall 0 ............................... <script("Door").new()>
  [246] setobjprop 394 .......................... me.oDoor = script("Door").new()
  [249] getparam 0 .............................. <me>
  [251] pushcons 12 ............................. <"Window">
  [253] pusharglist 1 ........................... <"Window">
  [255] extcall 194 ............................. <script("Window")>
  [257] pusharglist 1 ........................... <script("Window")>
  [259] objcall 0 ............................... <script("Window").new()>
  [261] setobjprop 395 .......................... me.oWindow = script("Window").new()
  [264] getparam 0 .............................. <me>
  [266] pushcons 13 ............................. <"WallItems">
  [268] pusharglist 1 ........................... <"WallItems">
  [270] extcall 194 ............................. <script("WallItems")>
  [272] pusharglist 1 ........................... <script("WallItems")>
  [274] objcall 0 ............................... <script("WallItems").new()>
  [276] setobjprop 396 .......................... me.oWallItems = script("WallItems").new()
  [279] getparam 0 .............................. <me>
  [281] pushcons 14 ............................. <"Rugs">
  [283] pusharglist 1 ........................... <"Rugs">
  [285] extcall 194 ............................. <script("Rugs")>
  [287] pusharglist 1 ........................... <script("Rugs")>
  [289] objcall 0 ............................... <script("Rugs").new()>
  [291] setobjprop 397 .......................... me.oRugs = script("Rugs").new()
  [294] getparam 0 .............................. <me>
  [296] pushcons 15 ............................. <"Hiliter">
  [298] pusharglist 1 ........................... <"Hiliter">
  [300] extcall 194 ............................. <script("Hiliter")>
  [302] pusharglist 1 ........................... <script("Hiliter")>
  [304] objcall 0 ............................... <script("Hiliter").new()>
  [306] setobjprop 398 .......................... me.oHiliter = script("Hiliter").new()
  [309] getparam 0 .............................. <me>
  [311] pushcons 16 ............................. <"Furniture">
  [313] pusharglist 1 ........................... <"Furniture">
  [315] extcall 194 ............................. <script("Furniture")>
  [317] pusharglist 1 ........................... <script("Furniture")>
  [319] objcall 0 ............................... <script("Furniture").new()>
  [321] setobjprop 399 .......................... me.oFurniture = script("Furniture").new()
  [324] getparam 0 .............................. <me>
  [326] pushcons 17 ............................. <"StaticItems">
  [328] pusharglist 1 ........................... <"StaticItems">
  [330] extcall 194 ............................. <script("StaticItems")>
  [332] pusharglist 1 ........................... <script("StaticItems")>
  [334] objcall 0 ............................... <script("StaticItems").new()>
  [336] setobjprop 400 .......................... me.oStaticItems = script("StaticItems").new()
  [339] getparam 0 .............................. <me>
  [341] pushcons 18 ............................. <"Avatars">
  [343] pusharglist 1 ........................... <"Avatars">
  [345] extcall 194 ............................. <script("Avatars")>
  [347] pusharglist 1 ........................... <script("Avatars")>
  [349] objcall 0 ............................... <script("Avatars").new()>
  [351] setobjprop 401 .......................... me.oAvatars = script("Avatars").new()
  [354] getparam 0 .............................. <me>
  [356] pushcons 19 ............................. <"StudioInfo">
  [358] pusharglist 1 ........................... <"StudioInfo">
  [360] extcall 194 ............................. <script("StudioInfo")>
  [362] pusharglist 1 ........................... <script("StudioInfo")>
  [364] objcall 0 ............................... <script("StudioInfo").new()>
  [366] setobjprop 402 .......................... me.oStudioInfo = script("StudioInfo").new()
  [369] getparam 0 .............................. <me>
  [371] pushcons 20 ............................. <"InfoStandObject">
  [373] pusharglist 1 ........................... <"InfoStandObject">
  [375] extcall 194 ............................. <script("InfoStandObject")>
  [377] pusharglist 1 ........................... <script("InfoStandObject")>
  [379] objcall 0 ............................... <script("InfoStandObject").new()>
  [381] setobjprop 403 .......................... me.oInfoStand = script("InfoStandObject").new()
  [384] getparam 0 .............................. <me>
  [386] pushcons 21 ............................. <"VoteItems">
  [388] pusharglist 1 ........................... <"VoteItems">
  [390] extcall 194 ............................. <script("VoteItems")>
  [392] pusharglist 1 ........................... <script("VoteItems")>
  [394] objcall 0 ............................... <script("VoteItems").new()>
  [396] setobjprop 404 .......................... me.oVoteItems = script("VoteItems").new()
  [399] getparam 0 .............................. <me>
  [401] pushcons 22 ............................. <"TRIVIA">
  [403] pusharglist 1 ........................... <"TRIVIA">
  [405] extcall 194 ............................. <script("TRIVIA")>
  [407] pusharglist 1 ........................... <script("TRIVIA")>
  [409] objcall 0 ............................... <script("TRIVIA").new()>
  [411] setobjprop 405 .......................... me.oTrivia = script("TRIVIA").new()
  [414] getlocal 0 .............................. <oScene>
  [416] pusharglist 1 ........................... <oScene>
  [418] extcall 59 .............................. <voidp(oScene)>
  [420] not ..................................... <not voidp(oScene)>
  [421] jmpifz [433] ............................ if not voidp(oScene) then
  [424] getparam 0 .............................. <me>
  [426] getlocal 0 .............................. <oScene>
  [428] pusharglistnoret 2 ...................... <me, oScene>
  [430] objcall 327 ............................. me.initScene(oScene)
  [433] getparam 0 .............................. <me>
  [435] pusharglist 0 ........................... <>
  [437] extcall 238 ............................. <VOID>
  [439] setobjprop 240 .......................... me.oSelectedItem = VOID
  [441] getmovieprop 406 ........................ <the actorList>
  [444] getparam 0 .............................. <me>
  [446] pusharglistnoret 2 ...................... <the actorList, me>
  [448] objcall 140 ............................. (the actorList).add(me)
  [450] ret
end

on lockDisplay me, bState
  [  0] getparam 1 .............................. <bState>
  [  2] setmovieprop 412 ........................ the updateLock = bState
  [  5] getparam 1 .............................. <bState>
  [  7] not ..................................... <not bState>
  [  8] jmpifz [ 36] ............................ if not bState then
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 396 .......................... <me.oWallItems>
  [ 16] pusharglist 1 ........................... <me.oWallItems>
  [ 18] extcall 59 .............................. <voidp(me.oWallItems)>
  [ 20] not ..................................... <not voidp(me.oWallItems)>
  [ 21] jmpifz [ 36] ............................ if not voidp(me.oWallItems) then
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 396 ...................... <me.oWallItems>
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglistnoret 2 ...................... <me.oWallItems, 1>
  [ 33] objcall 413 ............................. me.oWallItems.drawAll(1)
  [ 36] ret
end

on setSequenceRate me, _iSequenceRate
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 23 ............................. <"setSequenceRate() ">
  [  4] getparam 1 .............................. <_iSequenceRate>
  [  6] joinstr ................................. <"setSequenceRate() " & _iSequenceRate>
  [  7] pusharglistnoret 2 ...................... <me, "setSequenceRate() " & _iSequenceRate>
  [  9] objcall 332 ............................. me.debug("setSequenceRate() " & _iSequenceRate)
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 1 .............................. <_iSequenceRate>
  [ 16] pushint8 100 ............................ <100>
  [ 18] pushcons 24 ............................. <0.01>
  [ 20] mul ..................................... <100 * 0.01>
  [ 21] mul ..................................... <_iSequenceRate * (100 * 0.01)>
  [ 22] setobjprop 367 .......................... me.iSequenceRate = _iSequenceRate * (100 * 0.01)
  [ 25] ret
end

on getSequenceRate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 367 .......................... <me.iSequenceRate>
  [  5] pusharglistnoret 1 ...................... <me.iSequenceRate>
  [  7] extcall 52 .............................. return me.iSequenceRate
  [  9] ret
end

on getEntryXml me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 383 .......................... <me.oEntryXml>
  [  5] pusharglistnoret 1 ...................... <me.oEntryXml>
  [  7] extcall 52 .............................. return me.oEntryXml
  [  9] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 321 ............................. <me.calcMouseToGridPoint()>
  [  9] setobjprop 416 .......................... me.oMouseGridPoint = me.calcMouseToGridPoint()
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] getchainedprop 136 ...................... <me.oGrid>
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 416 ...................... <me.oMouseGridPoint>
  [ 23] getobjprop 35 ........................... <me.oMouseGridPoint.x>
  [ 25] getparam 0 .............................. <me>
  [ 27] getchainedprop 416 ...................... <me.oMouseGridPoint>
  [ 30] getobjprop 417 .......................... <me.oMouseGridPoint.z>
  [ 33] pusharglist 3 ........................... <me.oGrid, me.oMouseGridPoint.x, me.oMouseGridPoint.z>
  [ 35] objcall 418 ............................. <me.oGrid.getSquareByXZ(me.oMouseGridPoint.x, me.oMouseGridPoint.z)>
  [ 38] setobjprop 419 .......................... me.oMouseSquare = me.oGrid.getSquareByXZ(me.oMouseGridPoint.x, me.oMouseGridPoint.z)
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 293 ............................. me.processRoomRollover()
  [ 48] ret
end

on processRoomRollover me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 334 ............................. <me.getSpritesUnderMouse()>
  [  7] setlocal 0 .............................. aSpriteList = me.getSpritesUnderMouse()
  [  9] getlocal 0 .............................. <aSpriteList>
  [ 11] pusharglist 1 ........................... <aSpriteList>
  [ 13] extcall 59 .............................. <voidp(aSpriteList)>
  [ 15] not ..................................... <not voidp(aSpriteList)>
  [ 16] getlocal 0 .............................. <aSpriteList>
  [ 18] getobjprop 155 .......................... <aSpriteList.count>
  [ 20] pushzero ................................ <0>
  [ 21] gt ...................................... <aSpriteList.count > 0>
  [ 22] and ..................................... <not voidp(aSpriteList) and (aSpriteList.count > 0)>
  [ 23] jmpifz [132] ............................ if not voidp(aSpriteList) and (aSpriteList.count > 0) then / else
  [ 26] getlocal 0 .............................. <aSpriteList>
  [ 28] getlocal 0 .............................. <aSpriteList>
  [ 30] getobjprop 155 .......................... <aSpriteList.count>
  [ 32] pusharglist 2 ........................... <aSpriteList, aSpriteList.count>
  [ 34] objcall 72 .............................. <aSpriteList[aSpriteList.count]>
  [ 36] setlocal 1 .............................. iSpriteNum = aSpriteList[aSpriteList.count]
  [ 38] getlocal 1 .............................. <iSpriteNum>
  [ 40] pushsymb 421 ............................ <#getController>
  [ 43] pusharglist 2 ........................... <iSpriteNum, #getController>
  [ 45] extcall 420 ............................. <sendSprite(iSpriteNum, #getController)>
  [ 48] setlocal 2 .............................. oSpriteItem = sendSprite(iSpriteNum, #getController)
  [ 50] getlocal 2 .............................. <oSpriteItem>
  [ 52] pusharglist 1 ........................... <oSpriteItem>
  [ 54] objcall 25 .............................. <oSpriteItem.isAvatar()>
  [ 56] jmpifz [ 70] ............................ if oSpriteItem.isAvatar() then / else
  [ 59] getlocal 2 .............................. <oSpriteItem>
  [ 61] pusharglist 1 ........................... <oSpriteItem>
  [ 63] objcall 78 .............................. <oSpriteItem.getScreenName()>
  [ 65] setlocal 3 .............................. sName = oSpriteItem.getScreenName()
  [ 67] jmp [129]
  [ 70] getglobal 60 ............................ <oStudioMap>
  [ 72] pusharglist 1 ........................... <oStudioMap>
  [ 74] extcall 59 .............................. <voidp(oStudioMap)>
  [ 76] not ..................................... <not voidp(oStudioMap)>
  [ 77] jmpifz [129] ............................ if not voidp(oStudioMap) then
  [ 80] getglobal 60 ............................ <oStudioMap>
  [ 82] pusharglist 1 ........................... <oStudioMap>
  [ 84] objcall 61 .............................. <oStudioMap.isPrivate()>
  [ 86] jmpifz [129] ............................ if oStudioMap.isPrivate() then
  [ 89] getglobal 68 ............................ <gCatalog>
  [ 91] getlocal 2 .............................. <oSpriteItem>
  [ 93] pusharglist 1 ........................... <oSpriteItem>
  [ 95] objcall 98 .............................. <oSpriteItem.getProdId()>
  [ 97] pusharglist 2 ........................... <gCatalog, oSpriteItem.getProdId()>
  [ 99] objcall 70 .............................. <gCatalog.getItemByProdId(oSpriteItem.getProdId())>
  [101] setlocal 4 .............................. aCatalogItem = gCatalog.getItemByProdId(oSpriteItem.getProdId())
  [103] getlocal 4 .............................. <aCatalogItem>
  [105] pusharglist 1 ........................... <aCatalogItem>
  [107] extcall 59 .............................. <voidp(aCatalogItem)>
  [109] jmpifz [119] ............................ if voidp(aCatalogItem) then / else
  [112] pushcons 4 .............................. <EMPTY>
  [114] setlocal 3 .............................. sName = EMPTY
  [116] jmp [129]
  [119] getlocal 4 .............................. <aCatalogItem>
  [121] pushsymb 99 ............................. <#name>
  [123] pusharglist 2 ........................... <aCatalogItem, #name>
  [125] objcall 72 .............................. <aCatalogItem[#name]>
  [127] setlocal 3 .............................. sName = aCatalogItem[#name]
  [129] jmp [136]
  [132] pushcons 4 .............................. <EMPTY>
  [134] setlocal 3 .............................. sName = EMPTY
  [136] getlocal 3 .............................. <sName>
  [138] pusharglist 1 ........................... <sName>
  [140] extcall 422 ............................. <string(sName)>
  [143] setlocal 3 .............................. sName = string(sName)
  [145] getparam 0 .............................. <me>
  [147] getobjprop 372 .......................... <me.sLastRolloverItemName>
  [150] getlocal 3 .............................. <sName>
  [152] nteq .................................... <me.sLastRolloverItemName <> sName>
  [153] jmpifz [173] ............................ if me.sLastRolloverItemName <> sName then
  [156] pushcons 25 ............................. <"cb.rolldisplay">
  [158] pusharglist 1 ........................... <"cb.rolldisplay">
  [160] extcall 30 .............................. <member("cb.rolldisplay")>
  [162] getlocal 3 .............................. <sName>
  [164] setobjprop 152 .......................... member("cb.rolldisplay").text = sName
  [166] getparam 0 .............................. <me>
  [168] getlocal 3 .............................. <sName>
  [170] setobjprop 372 .......................... me.sLastRolloverItemName = sName
  [173] ret
end

on clickAllowed me
  [  0] getmovieprop 369 ........................ <the milliSeconds>
  [  3] getparam 0 .............................. <me>
  [  5] getobjprop 370 .......................... <me.iLastClickTime>
  [  8] sub ..................................... <the milliSeconds - me.iLastClickTime>
  [  9] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iLastClickTime
  [ 11] getlocal 0 .............................. <iElapsedTime>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 371 .......................... <me.iAllowedClickTime>
  [ 18] gt ...................................... <iElapsedTime > me.iAllowedClickTime>
  [ 19] jmpifz [ 36] ............................ if iElapsedTime > me.iAllowedClickTime then
  [ 22] getparam 0 .............................. <me>
  [ 24] getmovieprop 369 ........................ <the milliSeconds>
  [ 27] setobjprop 370 .......................... me.iLastClickTime = the milliSeconds
  [ 30] pushint8 1 .............................. <1>
  [ 32] pusharglistnoret 1 ...................... <1>
  [ 34] extcall 52 .............................. return 1
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 1 ...................... <0>
  [ 39] extcall 52 .............................. return 0
  [ 41] ret
end

on mouseDownEvent me, bDoubleClick
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 294 ............................. <me.clickAllowed()>
  [  7] setlocal 0 .............................. bClickAllowed = me.clickAllowed()
  [  9] getparam 1 .............................. <bDoubleClick>
  [ 11] not ..................................... <not bDoubleClick>
  [ 12] jmpifz [ 25] ............................ if not bDoubleClick then
  [ 15] getlocal 0 .............................. <bClickAllowed>
  [ 17] not ..................................... <not bClickAllowed>
  [ 18] jmpifz [ 25] ............................ if not bClickAllowed then
  [ 21] pusharglistnoret 0 ...................... <>
  [ 23] extcall 52 .............................. return 
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 240 .......................... <me.oSelectedItem>
  [ 29] pusharglist 1 ........................... <me.oSelectedItem>
  [ 31] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [ 33] not ..................................... <not voidp(me.oSelectedItem)>
  [ 34] jmpifz [105] ............................ if not voidp(me.oSelectedItem) then
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 41] pusharglist 1 ........................... <me.oSelectedItem>
  [ 43] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [ 45] jmpifz [105] ............................ if me.oSelectedItem.getDrag() then
  [ 48] getparam 0 .............................. <me>
  [ 50] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 52] pusharglist 1 ........................... <me.oSelectedItem>
  [ 54] objcall 27 .............................. <me.oSelectedItem.isWallItem()>
  [ 56] jmpifz [ 79] ............................ if me.oSelectedItem.isWallItem() then
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 63] pusharglist 1 ........................... <me.oSelectedItem>
  [ 65] objcall 427 ............................. <me.oSelectedItem.testTradeDrop()>
  [ 68] setlocal 1 .............................. bDropped = me.oSelectedItem.testTradeDrop()
  [ 70] getlocal 1 .............................. <bDropped>
  [ 72] jmpifz [ 79] ............................ if bDropped then
  [ 75] pusharglistnoret 0 ...................... <>
  [ 77] extcall 52 .............................. return 
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 315 ............................. <me.dropSelectedItem()>
  [ 86] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [ 88] getlocal 1 .............................. <bDropped>
  [ 90] jmpifz [105] ............................ if bDropped then
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglist 0 ........................... <>
  [ 97] extcall 238 ............................. <VOID>
  [ 99] setobjprop 240 .......................... me.oSelectedItem = VOID
  [101] pusharglistnoret 0 ...................... <>
  [103] extcall 52 .............................. return 
  [105] getglobal 172 ........................... <ElementMgr>
  [107] pusharglist 1 ........................... <ElementMgr>
  [109] objcall 428 ............................. <ElementMgr.mouseIsOverWindow()>
  [112] jmpifz [119] ............................ if ElementMgr.mouseIsOverWindow() then
  [115] pusharglistnoret 0 ...................... <>
  [117] extcall 52 .............................. return 
  [119] getparam 0 .............................. <me>
  [121] getparam 1 .............................. <bDoubleClick>
  [123] pusharglist 2 ........................... <me, bDoubleClick>
  [125] objcall 297 ............................. <me.broadCastMouseEvent(bDoubleClick)>
  [128] setlocal 2 .............................. bItemSelected = me.broadCastMouseEvent(bDoubleClick)
  [130] getlocal 2 .............................. <bItemSelected>
  [132] jmpifz [141] ............................ if bItemSelected then
  [135] pushint8 1 .............................. <1>
  [137] pusharglistnoret 1 ...................... <1>
  [139] extcall 52 .............................. return 1
  [141] getparam 0 .............................. <me>
  [143] getchainedprop 394 ...................... <me.oDoor>
  [146] pusharglist 1 ........................... <me.oDoor>
  [148] objcall 429 ............................. <me.oDoor.mouseOverDoor()>
  [151] setlocal 3 .............................. bDoorSelected = me.oDoor.mouseOverDoor()
  [153] getlocal 3 .............................. <bDoorSelected>
  [155] jmpifz [174] ............................ if bDoorSelected then
  [158] getparam 0 .............................. <me>
  [160] getchainedprop 394 ...................... <me.oDoor>
  [163] pusharglistnoret 1 ...................... <me.oDoor>
  [165] objcall 430 ............................. me.oDoor.exitSelected()
  [168] pushint8 1 .............................. <1>
  [170] pusharglistnoret 1 ...................... <1>
  [172] extcall 52 .............................. return 1
  [174] getparam 0 .............................. <me>
  [176] pusharglistnoret 1 ...................... <me>
  [178] objcall 2 ............................... me.clearInfoStand()
  [180] getparam 0 .............................. <me>
  [182] getobjprop 419 .......................... <me.oMouseSquare>
  [185] pusharglist 0 ........................... <>
  [187] extcall 238 ............................. <VOID>
  [189] nteq .................................... <me.oMouseSquare <> VOID>
  [190] jmpifz [318] ............................ if me.oMouseSquare <> VOID then
  [193] getparam 0 .............................. <me>
  [195] getchainedprop 390 ...................... <me.oMap>
  [198] getparam 0 .............................. <me>
  [200] getchainedprop 419 ...................... <me.oMouseSquare>
  [203] getobjprop 431 .......................... <me.oMouseSquare.iRow>
  [206] getparam 0 .............................. <me>
  [208] getchainedprop 419 ...................... <me.oMouseSquare>
  [211] getobjprop 432 .......................... <me.oMouseSquare.iCol>
  [214] pusharglist 3 ........................... <me.oMap, me.oMouseSquare.iRow, me.oMouseSquare.iCol>
  [216] objcall 433 ............................. <me.oMap.getNode(me.oMouseSquare.iRow, me.oMouseSquare.iCol)>
  [219] setlocal 4 .............................. oMapNode = me.oMap.getNode(me.oMouseSquare.iRow, me.oMouseSquare.iCol)
  [221] getlocal 4 .............................. <oMapNode>
  [223] pusharglist 1 ........................... <oMapNode>
  [225] extcall 59 .............................. <voidp(oMapNode)>
  [227] jmpifz [236] ............................ if voidp(oMapNode) then
  [230] pushint8 1 .............................. <1>
  [232] pusharglistnoret 1 ...................... <1>
  [234] extcall 52 .............................. return 1
  [236] getlocal 4 .............................. <oMapNode>
  [238] getobjprop 434 .......................... <oMapNode.w>
  [241] setlocal 5 .............................. iWeight = oMapNode.w
  [243] getlocal 5 .............................. <iWeight>
  [245] getparam 0 .............................. <me>
  [247] getchainedprop 390 ...................... <me.oMap>
  [250] getchainedprop 435 ...................... <me.oMap.oPathfinder>
  [253] getobjprop 436 .......................... <me.oMap.oPathfinder.W_BLOCKED>
  [256] eq ...................................... <iWeight = me.oMap.oPathfinder.W_BLOCKED>
  [257] getlocal 5 .............................. <iWeight>
  [259] getparam 0 .............................. <me>
  [261] getchainedprop 390 ...................... <me.oMap>
  [264] getchainedprop 435 ...................... <me.oMap.oPathfinder>
  [267] getobjprop 437 .......................... <me.oMap.oPathfinder.W_ENTER>
  [270] eq ...................................... <iWeight = me.oMap.oPathfinder.W_ENTER>
  [271] or ...................................... <(iWeight = me.oMap.oPathfinder.W_BLOCKED) or (iWeight = me.oMap.oPathfinder.W_ENTER)>
  [272] jmpifz [280] ............................ if (iWeight = me.oMap.oPathfinder.W_BLOCKED) or (iWeight = me.oMap.oPathfinder.W_ENTER) then
  [275] pushzero ................................ <0>
  [276] pusharglistnoret 1 ...................... <0>
  [278] extcall 52 .............................. return 0
  [280] getparam 0 .............................. <me>
  [282] pusharglist 1 ........................... <me>
  [284] objcall 315 ............................. <me.dropSelectedItem()>
  [287] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [289] getlocal 1 .............................. <bDropped>
  [291] jmpifz [305] ............................ if bDropped then / else
  [294] getparam 0 .............................. <me>
  [296] pusharglist 0 ........................... <>
  [298] extcall 238 ............................. <VOID>
  [300] setobjprop 240 .......................... me.oSelectedItem = VOID
  [302] jmp [312]
  [305] getparam 0 .............................. <me>
  [307] pusharglistnoret 1 ...................... <me>
  [309] objcall 301 ............................. me.moveAvatar()
  [312] pushint8 1 .............................. <1>
  [314] pusharglistnoret 1 ...................... <1>
  [316] extcall 52 .............................. return 1
  [318] pushzero ................................ <0>
  [319] pusharglistnoret 1 ...................... <0>
  [321] extcall 52 .............................. return 0
  [323] ret
end

on canMoveToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 401 ...................... <me.oAvatars>
  [  5] getparam 1 .............................. <_oSquare>
  [  7] pusharglist 2 ........................... <me.oAvatars, _oSquare>
  [  9] objcall 445 ............................. <me.oAvatars.getItemsAtSquare(_oSquare)>
  [ 12] setlocal 0 .............................. _aAvatars = me.oAvatars.getItemsAtSquare(_oSquare)
  [ 14] getlocal 0 .............................. <_aAvatars>
  [ 16] getobjprop 155 .......................... <_aAvatars.count>
  [ 18] pushzero ................................ <0>
  [ 19] gt ...................................... <_aAvatars.count > 0>
  [ 20] jmpifz [ 28] ............................ if _aAvatars.count > 0 then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 52 .............................. return 0
  [ 28] getglobal 133 ........................... <oIsoScene>
  [ 30] getchainedprop 390 ...................... <oIsoScene.oMap>
  [ 33] getparam 1 .............................. <_oSquare>
  [ 35] getobjprop 431 .......................... <_oSquare.iRow>
  [ 38] getparam 1 .............................. <_oSquare>
  [ 40] getobjprop 432 .......................... <_oSquare.iCol>
  [ 43] pusharglist 3 ........................... <oIsoScene.oMap, _oSquare.iRow, _oSquare.iCol>
  [ 45] objcall 433 ............................. <oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)>
  [ 48] setlocal 1 .............................. oMapNode = oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)
  [ 50] getlocal 1 .............................. <oMapNode>
  [ 52] getobjprop 434 .......................... <oMapNode.w>
  [ 55] setlocal 2 .............................. iWeight = oMapNode.w
  [ 57] getlocal 2 .............................. <iWeight>
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 390 ...................... <me.oMap>
  [ 64] getchainedprop 435 ...................... <me.oMap.oPathfinder>
  [ 67] getobjprop 446 .......................... <me.oMap.oPathfinder.W_QUEUE>
  [ 70] eq ...................................... <iWeight = me.oMap.oPathfinder.W_QUEUE>
  [ 71] jmpifz [162] ............................ if iWeight = me.oMap.oPathfinder.W_QUEUE then
  [ 74] getglobal 233 ........................... <gFeatureSet>
  [ 76] pushsymb 447 ............................ <#PERFORMANCE>
  [ 79] pusharglist 2 ........................... <gFeatureSet, #PERFORMANCE>
  [ 81] objcall 235 ............................. <gFeatureSet.isEnabled(#PERFORMANCE)>
  [ 83] not ..................................... <not gFeatureSet.isEnabled(#PERFORMANCE)>
  [ 84] jmpifz [ 99] ............................ if not gFeatureSet.isEnabled(#PERFORMANCE) then
  [ 87] getglobal 172 ........................... <ElementMgr>
  [ 89] pushcons 26 ............................. <"FEATURE_DISABLED">
  [ 91] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 93] objcall 236 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 95] pusharglistnoret 0 ...................... <>
  [ 97] extcall 52 .............................. return 
  [ 99] getglobal 77 ............................ <oDenizenManager>
  [101] pusharglist 1 ........................... <oDenizenManager>
  [103] objcall 448 ............................. <oDenizenManager.getBackpack()>
  [106] setlocal 3 .............................. oBackPack = oDenizenManager.getBackpack()
  [108] getlocal 3 .............................. <oBackPack>
  [110] pusharglist 1 ........................... <oBackPack>
  [112] extcall 59 .............................. <voidp(oBackPack)>
  [114] jmpifz [122] ............................ if voidp(oBackPack) then
  [117] pushzero ................................ <0>
  [118] pusharglistnoret 1 ...................... <0>
  [120] extcall 52 .............................. return 0
  [122] getlocal 3 .............................. <oBackPack>
  [124] pusharglist 1 ........................... <oBackPack>
  [126] objcall 449 ............................. <oBackPack.getNumberOfBurnedCds()>
  [129] setlocal 4 .............................. iBurnedCds = oBackPack.getNumberOfBurnedCds()
  [131] getlocal 4 .............................. <iBurnedCds>
  [133] pushzero ................................ <0>
  [134] gt ...................................... <iBurnedCds > 0>
  [135] jmpifz [147] ............................ if iBurnedCds > 0 then / else
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 52 .............................. return 1
  [144] jmp [162]
  [147] getglobal 172 ........................... <ElementMgr>
  [149] pushcons 27 ............................. <"NOCD_TITLE">
  [151] pushcons 28 ............................. <"NOCD_DESC">
  [153] pusharglistnoret 3 ...................... <ElementMgr, "NOCD_TITLE", "NOCD_DESC">
  [155] objcall 236 ............................. ElementMgr.alert("NOCD_TITLE", "NOCD_DESC")
  [157] pushzero ................................ <0>
  [158] pusharglistnoret 1 ...................... <0>
  [160] extcall 52 .............................. return 0
  [162] getparam 0 .............................. <me>
  [164] getchainedprop 399 ...................... <me.oFurniture>
  [167] getparam 1 .............................. <_oSquare>
  [169] pusharglist 2 ........................... <me.oFurniture, _oSquare>
  [171] objcall 450 ............................. <me.oFurniture.getItemAtSquareWithGreatestHeightOffset(_oSquare)>
  [174] setlocal 5 .............................. _oItem = me.oFurniture.getItemAtSquareWithGreatestHeightOffset(_oSquare)
  [176] getlocal 5 .............................. <_oItem>
  [178] pusharglist 1 ........................... <_oItem>
  [180] extcall 59 .............................. <voidp(_oItem)>
  [182] jmpifz [191] ............................ if voidp(_oItem) then
  [185] pushint8 1 .............................. <1>
  [187] pusharglistnoret 1 ...................... <1>
  [189] extcall 52 .............................. return 1
  [191] getparam 0 .............................. <me>
  [193] getchainedprop 399 ...................... <me.oFurniture>
  [196] getlocal 5 .............................. <_oItem>
  [198] pusharglist 2 ........................... <me.oFurniture, _oItem>
  [200] objcall 451 ............................. <me.oFurniture.isSeatableItem(_oItem)>
  [203] setlocal 6 .............................. bIsSeatable = me.oFurniture.isSeatableItem(_oItem)
  [205] getlocal 6 .............................. <bIsSeatable>
  [207] jmpifz [216] ............................ if bIsSeatable then
  [210] pushint8 1 .............................. <1>
  [212] pusharglistnoret 1 ...................... <1>
  [214] extcall 52 .............................. return 1
  [216] getlocal 5 .............................. <_oItem>
  [218] pusharglist 1 ........................... <_oItem>
  [220] objcall 98 .............................. <_oItem.getProdId()>
  [222] getparam 0 .............................. <me>
  [224] getchainedprop 339 ...................... <me.oIsoConstants>
  [227] getobjprop 452 .......................... <me.oIsoConstants.BURNED_CD>
  [230] eq ...................................... <_oItem.getProdId() = me.oIsoConstants.BURNED_CD>
  [231] jmpifz [252] ............................ if _oItem.getProdId() = me.oIsoConstants.BURNED_CD then
  [234] getlocal 5 .............................. <_oItem>
  [236] pusharglist 1 ........................... <_oItem>
  [238] objcall 453 ............................. <_oItem.getHeightOffset()>
  [241] pushzero ................................ <0>
  [242] eq ...................................... <_oItem.getHeightOffset() = 0>
  [243] jmpifz [252] ............................ if _oItem.getHeightOffset() = 0 then
  [246] pushint8 1 .............................. <1>
  [248] pusharglistnoret 1 ...................... <1>
  [250] extcall 52 .............................. return 1
  [252] getlocal 5 .............................. <_oItem>
  [254] pusharglist 1 ........................... <_oItem>
  [256] objcall 454 ............................. <_oItem.getType()>
  [259] pushcons 29 ............................. <"Teleport">
  [261] eq ...................................... <_oItem.getType() = "Teleport">
  [262] jmpifz [356] ............................ if _oItem.getType() = "Teleport" then
  [265] getparam 0 .............................. <me>
  [267] getchainedprop 401 ...................... <me.oAvatars>
  [270] getglobal 77 ............................ <oDenizenManager>
  [272] pusharglist 1 ........................... <oDenizenManager>
  [274] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [276] pusharglist 2 ........................... <me.oAvatars, oDenizenManager.getScreenName()>
  [278] objcall 80 .............................. <me.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [280] setlocal 7 .............................. oMyAvatar = me.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [282] getlocal 7 .............................. <oMyAvatar>
  [284] pusharglist 1 ........................... <oMyAvatar>
  [286] extcall 59 .............................. <voidp(oMyAvatar)>
  [288] jmpifz [297] ............................ if voidp(oMyAvatar) then
  [291] pushint8 1 .............................. <1>
  [293] pusharglistnoret 1 ...................... <1>
  [295] extcall 52 .............................. return 1
  [297] getlocal 7 .............................. <oMyAvatar>
  [299] pusharglist 1 ........................... <oMyAvatar>
  [301] objcall 455 ............................. <oMyAvatar.getSquare()>
  [304] setlocal 8 .............................. oMySquare = oMyAvatar.getSquare()
  [306] getlocal 8 .............................. <oMySquare>
  [308] pusharglist 1 ........................... <oMySquare>
  [310] extcall 59 .............................. <voidp(oMySquare)>
  [312] jmpifz [321] ............................ if voidp(oMySquare) then
  [315] pushint8 1 .............................. <1>
  [317] pusharglistnoret 1 ...................... <1>
  [319] extcall 52 .............................. return 1
  [321] getparam 0 .............................. <me>
  [323] getchainedprop 399 ...................... <me.oFurniture>
  [326] getlocal 8 .............................. <oMySquare>
  [328] pusharglist 2 ........................... <me.oFurniture, oMySquare>
  [330] objcall 456 ............................. <me.oFurniture.getTeleporterAtSquare(oMySquare)>
  [333] setlocal 9 .............................. oTeleporter = me.oFurniture.getTeleporterAtSquare(oMySquare)
  [335] getlocal 9 .............................. <oTeleporter>
  [337] pusharglist 1 ........................... <oTeleporter>
  [339] extcall 59 .............................. <voidp(oTeleporter)>
  [341] not ..................................... <not voidp(oTeleporter)>
  [342] jmpifz [350] ............................ if not voidp(oTeleporter) then
  [345] pushzero ................................ <0>
  [346] pusharglistnoret 1 ...................... <0>
  [348] extcall 52 .............................. return 0
  [350] pushint8 1 .............................. <1>
  [352] pusharglistnoret 1 ...................... <1>
  [354] extcall 52 .............................. return 1
  [356] pushint8 1 .............................. <1>
  [358] pusharglistnoret 1 ...................... <1>
  [360] extcall 52 .............................. return 1
  [362] ret
end

on clearInfoStand me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 403 ...................... <me.oInfoStand>
  [  5] pusharglistnoret 1 ...................... <me.oInfoStand>
  [  7] objcall 2 ............................... me.oInfoStand.clearInfoStand()
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 465 .......................... <me.oAvatarIndicator>
  [ 14] pusharglist 1 ........................... <me.oAvatarIndicator>
  [ 16] extcall 59 .............................. <voidp(me.oAvatarIndicator)>
  [ 18] not ..................................... <not voidp(me.oAvatarIndicator)>
  [ 19] jmpifz [ 41] ............................ if not voidp(me.oAvatarIndicator) then
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 465 ...................... <me.oAvatarIndicator>
  [ 27] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [ 29] objcall 466 ............................. me.oAvatarIndicator.destroyItem()
  [ 32] getparam 0 .............................. <me>
  [ 34] pusharglist 0 ........................... <>
  [ 36] extcall 238 ............................. <VOID>
  [ 38] setobjprop 465 .......................... me.oAvatarIndicator = VOID
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 299 ............................. me.displayCdPlaying()
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglistnoret 1 ...................... <me>
  [ 52] objcall 300 ............................. me.displaySongPlaying()
  [ 55] ret
end

on broadCastMouseEvent me, bDoubleClick
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 334 ............................. <me.getSpritesUnderMouse()>
  [  7] setlocal 0 .............................. aSpritesUnderMouse = me.getSpritesUnderMouse()
  [  9] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 11] pusharglist 1 ........................... <aSpritesUnderMouse>
  [ 13] objcall 155 ............................. <aSpritesUnderMouse.count()>
  [ 15] setlocal 1 .............................. iCount = aSpritesUnderMouse.count()
  [ 17] getlocal 1 .............................. <iCount>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <iCount = 0>
  [ 21] jmpifz [ 29] ............................ if iCount = 0 then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 52 .............................. return 0
  [ 29] getlocal 1 .............................. <iCount>
  [ 31] setlocal 2
  [ 33] getlocal 2
  [ 35] pushint8 1 .............................. <1>
  [ 37] gteq
  [ 38] jmpifz [239] ............................ repeat with i = iCount down to 1
  [ 41] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 43] getlocal 2 .............................. <i>
  [ 45] pusharglist 2 ........................... <aSpritesUnderMouse, i>
  [ 47] objcall 72 .............................. <aSpritesUnderMouse[i]>
  [ 49] setlocal 3 .............................. iSpriteNum = aSpritesUnderMouse[i]
  [ 51] getlocal 3 .............................. <iSpriteNum>
  [ 53] pushsymb 421 ............................ <#getController>
  [ 56] pusharglist 2 ........................... <iSpriteNum, #getController>
  [ 58] extcall 420 ............................. <sendSprite(iSpriteNum, #getController)>
  [ 61] setlocal 4 .............................. oSpriteItem = sendSprite(iSpriteNum, #getController)
  [ 63] getlocal 4 .............................. <oSpriteItem>
  [ 65] pusharglist 1 ........................... <oSpriteItem>
  [ 67] extcall 59 .............................. <voidp(oSpriteItem)>
  [ 69] jmpifz [ 75] ............................ if voidp(oSpriteItem) then
  [ 72] jmp [230] ............................... next repeat
  [ 75] pusharglist 0 ........................... <>
  [ 77] extcall 238 ............................. <VOID>
  [ 79] setlocal 5 .............................. oItem = VOID
  [ 81] getlocal 4 .............................. <oSpriteItem>
  [ 83] pusharglist 1 ........................... <oSpriteItem>
  [ 85] objcall 25 .............................. <oSpriteItem.isAvatar()>
  [ 87] jmpifz [107] ............................ if oSpriteItem.isAvatar() then
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 401 ...................... <me.oAvatars>
  [ 95] getlocal 4 .............................. <oSpriteItem>
  [ 97] pusharglist 1 ........................... <oSpriteItem>
  [ 99] objcall 78 .............................. <oSpriteItem.getScreenName()>
  [101] pusharglist 2 ........................... <me.oAvatars, oSpriteItem.getScreenName()>
  [103] objcall 80 .............................. <me.oAvatars.getAvatar(oSpriteItem.getScreenName())>
  [105] setlocal 5 .............................. oItem = me.oAvatars.getAvatar(oSpriteItem.getScreenName())
  [107] getlocal 4 .............................. <oSpriteItem>
  [109] pusharglist 1 ........................... <oSpriteItem>
  [111] objcall 26 .............................. <oSpriteItem.isFurniItem()>
  [113] jmpifz [165] ............................ if oSpriteItem.isFurniItem() then
  [116] getlocal 4 .............................. <oSpriteItem>
  [118] pusharglist 1 ........................... <oSpriteItem>
  [120] objcall 467 ............................. <oSpriteItem.isRugITem()>
  [123] jmpifz [147] ............................ if oSpriteItem.isRugITem() then / else
  [126] getparam 0 .............................. <me>
  [128] getchainedprop 397 ...................... <me.oRugs>
  [131] getlocal 4 .............................. <oSpriteItem>
  [133] pusharglist 1 ........................... <oSpriteItem>
  [135] objcall 249 ............................. <oSpriteItem.getPosId()>
  [137] pusharglist 2 ........................... <me.oRugs, oSpriteItem.getPosId()>
  [139] objcall 319 ............................. <me.oRugs.getItemByPossessionId(oSpriteItem.getPosId())>
  [142] setlocal 5 .............................. oItem = me.oRugs.getItemByPossessionId(oSpriteItem.getPosId())
  [144] jmp [165]
  [147] getparam 0 .............................. <me>
  [149] getchainedprop 399 ...................... <me.oFurniture>
  [152] getlocal 4 .............................. <oSpriteItem>
  [154] pusharglist 1 ........................... <oSpriteItem>
  [156] objcall 249 ............................. <oSpriteItem.getPosId()>
  [158] pusharglist 2 ........................... <me.oFurniture, oSpriteItem.getPosId()>
  [160] objcall 319 ............................. <me.oFurniture.getItemByPossessionId(oSpriteItem.getPosId())>
  [163] setlocal 5 .............................. oItem = me.oFurniture.getItemByPossessionId(oSpriteItem.getPosId())
  [165] getlocal 4 .............................. <oSpriteItem>
  [167] pusharglist 1 ........................... <oSpriteItem>
  [169] objcall 27 .............................. <oSpriteItem.isWallItem()>
  [171] jmpifz [192] ............................ if oSpriteItem.isWallItem() then
  [174] getparam 0 .............................. <me>
  [176] getchainedprop 396 ...................... <me.oWallItems>
  [179] getlocal 4 .............................. <oSpriteItem>
  [181] pusharglist 1 ........................... <oSpriteItem>
  [183] objcall 249 ............................. <oSpriteItem.getPosId()>
  [185] pusharglist 2 ........................... <me.oWallItems, oSpriteItem.getPosId()>
  [187] objcall 319 ............................. <me.oWallItems.getItemByPossessionId(oSpriteItem.getPosId())>
  [190] setlocal 5 .............................. oItem = me.oWallItems.getItemByPossessionId(oSpriteItem.getPosId())
  [192] getlocal 5 .............................. <oItem>
  [194] pusharglist 1 ........................... <oItem>
  [196] extcall 59 .............................. <voidp(oItem)>
  [198] jmpifz [204] ............................ if voidp(oItem) then
  [201] jmp [230] ............................... next repeat
  [204] getparam 0 .............................. <me>
  [206] getlocal 5 .............................. <oItem>
  [208] getlocal 3 .............................. <iSpriteNum>
  [210] getparam 1 .............................. <bDoubleClick>
  [212] pusharglist 4 ........................... <me, oItem, iSpriteNum, bDoubleClick>
  [214] objcall 298 ............................. <me.handleMouseEvent(oItem, iSpriteNum, bDoubleClick)>
  [217] setlocal 6 .............................. bHandled = me.handleMouseEvent(oItem, iSpriteNum, bDoubleClick)
  [219] getlocal 6 .............................. <bHandled>
  [221] jmpifz [230] ............................ if bHandled then
  [224] pushint8 1 .............................. <1>
  [226] pusharglistnoret 1 ...................... <1>
  [228] extcall 52 .............................. return 1
  [230] pushint8 -1
  [232] getlocal 2
  [234] add
  [235] setlocal 2
  [237] endrepeat [ 33]
  [239] pushzero ................................ <0>
  [240] pusharglistnoret 1 ...................... <0>
  [242] extcall 52 .............................. return 0
  [244] ret
end

on handleMouseEvent me, oItem, iSpriteNum, bDoubleClick
  [  0] getparam 1 .............................. <oItem>
  [  2] getparam 2 .............................. <iSpriteNum>
  [  4] getparam 3 .............................. <bDoubleClick>
  [  6] pusharglist 3 ........................... <oItem, iSpriteNum, bDoubleClick>
  [  8] objcall 295 ............................. <oItem.mouseDownEvent(iSpriteNum, bDoubleClick)>
  [ 11] setlocal 0 .............................. bHandled = oItem.mouseDownEvent(iSpriteNum, bDoubleClick)
  [ 13] getlocal 0 .............................. <bHandled>
  [ 15] jmpifz [ 27] ............................ if bHandled then
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <oItem>
  [ 22] pusharglistnoret 2 ...................... <me, oItem>
  [ 24] objcall 307 ............................. me.setSelectedItem(oItem)
  [ 27] getlocal 0 .............................. <bHandled>
  [ 29] pusharglistnoret 1 ...................... <bHandled>
  [ 31] extcall 52 .............................. return bHandled
  [ 33] ret
end

on displayCdPlaying me
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getglobal 64 ............................ <oStudio>
  [ 15] pusharglist 1 ........................... <oStudio>
  [ 17] objcall 74 .............................. <oStudio.getcdplayer()>
  [ 19] setlocal 0 .............................. oCdplayer = oStudio.getcdplayer()
  [ 21] getlocal 0 .............................. <oCdplayer>
  [ 23] pusharglist 1 ........................... <oCdplayer>
  [ 25] objcall 171 ............................. <oCdplayer.isPlaying()>
  [ 27] setlocal 1 .............................. bPlaying = oCdplayer.isPlaying()
  [ 29] getlocal 1 .............................. <bPlaying>
  [ 31] pushint8 1 .............................. <1>
  [ 33] eq ...................................... <bPlaying = 1>
  [ 34] jmpifz [ 56] ............................ if bPlaying = 1 then
  [ 37] getlocal 0 .............................. <oCdplayer>
  [ 39] pusharglist 1 ........................... <oCdplayer>
  [ 41] objcall 159 ............................. <oCdplayer.getCd()>
  [ 43] setlocal 2 .............................. oCd = oCdplayer.getCd()
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 403 ...................... <me.oInfoStand>
  [ 50] getlocal 2 .............................. <oCd>
  [ 52] pusharglistnoret 2 ...................... <me.oInfoStand, oCd>
  [ 54] objcall 4 ............................... me.oInfoStand.displayCd(oCd)
  [ 56] ret
end

on displaySongPlaying me
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getglobal 64 ............................ <oStudio>
  [ 15] getobjprop 475 .......................... <oStudio.foSongPlaying>
  [ 18] pusharglist 1 ........................... <oStudio.foSongPlaying>
  [ 20] extcall 59 .............................. <voidp(oStudio.foSongPlaying)>
  [ 22] pushzero ................................ <0>
  [ 23] eq ...................................... <voidp(oStudio.foSongPlaying) = 0>
  [ 24] jmpifz [ 54] ............................ if voidp(oStudio.foSongPlaying) = 0 then
  [ 27] getglobal 64 ............................ <oStudio>
  [ 29] getobjprop 475 .......................... <oStudio.foSongPlaying>
  [ 32] setlocal 0 .............................. oSong = oStudio.foSongPlaying
  [ 34] getglobal 64 ............................ <oStudio>
  [ 36] getobjprop 476 .......................... <oStudio.sIJsongplayer>
  [ 39] setlocal 1 .............................. sAvatar = oStudio.sIJsongplayer
  [ 41] getparam 0 .............................. <me>
  [ 43] getchainedprop 403 ...................... <me.oInfoStand>
  [ 46] getlocal 0 .............................. <oSong>
  [ 48] getlocal 1 .............................. <sAvatar>
  [ 50] pusharglistnoret 3 ...................... <me.oInfoStand, oSong, sAvatar>
  [ 52] objcall 29 .............................. me.oInfoStand.displaySong(oSong, sAvatar)
  [ 54] ret
end

on moveAvatar me, oTargetSquare
  [  0] getparam 1 .............................. <oTargetSquare>
  [  2] pusharglist 1 ........................... <oTargetSquare>
  [  4] extcall 59 .............................. <voidp(oTargetSquare)>
  [  6] jmpifz [ 16] ............................ if voidp(oTargetSquare) then
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 419 .......................... <me.oMouseSquare>
  [ 14] setparam 1 .............................. oTargetSquare = me.oMouseSquare
  [ 16] getglobal 256 ........................... <oSession>
  [ 19] pusharglist 1 ........................... <oSession>
  [ 21] extcall 59 .............................. <voidp(oSession)>
  [ 23] jmpifz [ 87] ............................ if voidp(oSession) then
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 401 ...................... <me.oAvatars>
  [ 31] pushcons 30 ............................. <"Aslan">
  [ 33] pusharglist 2 ........................... <me.oAvatars, "Aslan">
  [ 35] objcall 80 .............................. <me.oAvatars.getAvatar("Aslan")>
  [ 37] setlocal 0 .............................. oAvatar = me.oAvatars.getAvatar("Aslan")
  [ 39] getlocal 0 .............................. <oAvatar>
  [ 41] pusharglist 1 ........................... <oAvatar>
  [ 43] extcall 59 .............................. <voidp(oAvatar)>
  [ 45] not ..................................... <not voidp(oAvatar)>
  [ 46] jmpifz [ 87] ............................ if not voidp(oAvatar) then
  [ 49] getlocal 0 .............................. <oAvatar>
  [ 51] getchainedprop 478 ...................... <oAvatar.oSquare>
  [ 54] getparam 1 .............................. <oTargetSquare>
  [ 56] pusharglist 2 ........................... <oAvatar.oSquare, oTargetSquare>
  [ 58] objcall 254 ............................. <oAvatar.oSquare.equals(oTargetSquare)>
  [ 60] jmpifz [ 67] ............................ if oAvatar.oSquare.equals(oTargetSquare) then
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 52 .............................. return 
  [ 67] getlocal 0 .............................. <oAvatar>
  [ 69] getparam 1 .............................. <oTargetSquare>
  [ 71] pusharglistnoret 2 ...................... <oAvatar, oTargetSquare>
  [ 73] objcall 479 ............................. oAvatar.moveToSquare(oTargetSquare)
  [ 76] getlocal 0 .............................. <oAvatar>
  [ 78] pusharglistnoret 1 ...................... <oAvatar>
  [ 80] objcall 480 ............................. oAvatar.walk()
  [ 83] pusharglistnoret 0 ...................... <>
  [ 85] extcall 52 .............................. return 
  [ 87] getparam 1 .............................. <oTargetSquare>
  [ 89] pusharglist 1 ........................... <oTargetSquare>
  [ 91] extcall 59 .............................. <voidp(oTargetSquare)>
  [ 93] jmpifz [100] ............................ if voidp(oTargetSquare) then
  [ 96] pusharglistnoret 0 ...................... <>
  [ 98] extcall 52 .............................. return 
  [100] getparam 0 .............................. <me>
  [102] getparam 1 .............................. <oTargetSquare>
  [104] pusharglist 2 ........................... <me, oTargetSquare>
  [106] objcall 309 ............................. <me.isOverFloor(oTargetSquare)>
  [109] setlocal 1 .............................. bIsOverFloor = me.isOverFloor(oTargetSquare)
  [111] getlocal 1 .............................. <bIsOverFloor>
  [113] not ..................................... <not bIsOverFloor>
  [114] jmpifz [121] ............................ if not bIsOverFloor then
  [117] pusharglistnoret 0 ...................... <>
  [119] extcall 52 .............................. return 
  [121] getparam 0 .............................. <me>
  [123] getparam 1 .............................. <oTargetSquare>
  [125] pusharglist 2 ........................... <me, oTargetSquare>
  [127] objcall 296 ............................. <me.canMoveToSquare(oTargetSquare)>
  [130] setlocal 2 .............................. bCanMove = me.canMoveToSquare(oTargetSquare)
  [132] getparam 0 .............................. <me>
  [134] pushcons 31 ............................. <"moveAvatar() bCanMove: ">
  [136] getlocal 2 .............................. <bCanMove>
  [138] joinstr ................................. <"moveAvatar() bCanMove: " & bCanMove>
  [139] pusharglistnoret 2 ...................... <me, "moveAvatar() bCanMove: " & bCanMove>
  [141] objcall 332 ............................. me.debug("moveAvatar() bCanMove: " & bCanMove)
  [144] getlocal 2 .............................. <bCanMove>
  [146] not ..................................... <not bCanMove>
  [147] jmpifz [154] ............................ if not bCanMove then
  [150] pusharglistnoret 0 ...................... <>
  [152] extcall 52 .............................. return 
  [154] getparam 0 .............................. <me>
  [156] getchainedprop 401 ...................... <me.oAvatars>
  [159] getglobal 256 ........................... <oSession>
  [162] pusharglist 1 ........................... <oSession>
  [164] objcall 78 .............................. <oSession.getScreenName()>
  [166] pusharglist 2 ........................... <me.oAvatars, oSession.getScreenName()>
  [168] objcall 80 .............................. <me.oAvatars.getAvatar(oSession.getScreenName())>
  [170] setlocal 0 .............................. oAvatar = me.oAvatars.getAvatar(oSession.getScreenName())
  [172] getlocal 0 .............................. <oAvatar>
  [174] pusharglist 1 ........................... <oAvatar>
  [176] extcall 59 .............................. <voidp(oAvatar)>
  [178] not ..................................... <not voidp(oAvatar)>
  [179] jmpifz [232] ............................ if not voidp(oAvatar) then
  [182] getlocal 0 .............................. <oAvatar>
  [184] getchainedprop 478 ...................... <oAvatar.oSquare>
  [187] getparam 1 .............................. <oTargetSquare>
  [189] pusharglist 2 ........................... <oAvatar.oSquare, oTargetSquare>
  [191] objcall 254 ............................. <oAvatar.oSquare.equals(oTargetSquare)>
  [193] jmpifz [200] ............................ if oAvatar.oSquare.equals(oTargetSquare) then
  [196] pusharglistnoret 0 ...................... <>
  [198] extcall 52 .............................. return 
  [200] getparam 0 .............................. <me>
  [202] pushcons 32 ............................. <"moveAvatar() calling oStudio.sendFindPath()">
  [204] pusharglistnoret 2 ...................... <me, "moveAvatar() calling oStudio.sendFindPath()">
  [206] objcall 332 ............................. me.debug("moveAvatar() calling oStudio.sendFindPath()")
  [209] getglobal 64 ............................ <oStudio>
  [211] getparam 1 .............................. <oTargetSquare>
  [213] getobjprop 432 .......................... <oTargetSquare.iCol>
  [216] pushzero ................................ <0>
  [217] getparam 1 .............................. <oTargetSquare>
  [219] getobjprop 431 .......................... <oTargetSquare.iRow>
  [222] pusharglistnoret 4 ...................... <oStudio, oTargetSquare.iCol, 0, oTargetSquare.iRow>
  [224] objcall 481 ............................. oStudio.sendFindPath(oTargetSquare.iCol, 0, oTargetSquare.iRow)
  [227] pusharglistnoret 0 ...................... <>
  [229] extcall 482 ............................. dontPassEvent()
  [232] ret
end

on moveAvatarToFrontOfItem me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_oItem>
  [  4] pusharglist 2 ........................... <me, _oItem>
  [  6] objcall 304 ............................. <me.getSquareInFrontOfItem(_oItem)>
  [  9] setlocal 0 .............................. oTargetSquare = me.getSquareInFrontOfItem(_oItem)
  [ 11] getparam 0 .............................. <me>
  [ 13] getlocal 0 .............................. <oTargetSquare>
  [ 15] pusharglist 2 ........................... <me, oTargetSquare>
  [ 17] objcall 296 ............................. <me.canMoveToSquare(oTargetSquare)>
  [ 20] setlocal 1 .............................. bCanMove = me.canMoveToSquare(oTargetSquare)
  [ 22] getlocal 1 .............................. <bCanMove>
  [ 24] jmpifz [ 45] ............................ if bCanMove then / else
  [ 27] getglobal 133 ........................... <oIsoScene>
  [ 29] getlocal 0 .............................. <oTargetSquare>
  [ 31] pusharglistnoret 2 ...................... <oIsoScene, oTargetSquare>
  [ 33] objcall 301 ............................. oIsoScene.moveAvatar(oTargetSquare)
  [ 36] pushint8 1 .............................. <1>
  [ 38] pusharglistnoret 1 ...................... <1>
  [ 40] extcall 52 .............................. return 1
  [ 42] jmp [ 50]
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 1 ...................... <0>
  [ 48] extcall 52 .............................. return 0
  [ 50] ret
end

on avatarIsInFrontOfItem me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 401 ...................... <me.oAvatars>
  [  5] getglobal 77 ............................ <oDenizenManager>
  [  7] pusharglist 1 ........................... <oDenizenManager>
  [  9] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [ 11] pusharglist 2 ........................... <me.oAvatars, oDenizenManager.getScreenName()>
  [ 13] objcall 80 .............................. <me.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [ 15] setlocal 0 .............................. oAvatar = me.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [ 17] getlocal 0 .............................. <oAvatar>
  [ 19] pusharglist 1 ........................... <oAvatar>
  [ 21] extcall 59 .............................. <voidp(oAvatar)>
  [ 23] jmpifz [ 31] ............................ if voidp(oAvatar) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 52 .............................. return 0
  [ 31] getlocal 0 .............................. <oAvatar>
  [ 33] pusharglist 1 ........................... <oAvatar>
  [ 35] objcall 455 ............................. <oAvatar.getSquare()>
  [ 38] setlocal 1 .............................. oAvatarSquare = oAvatar.getSquare()
  [ 40] getlocal 1 .............................. <oAvatarSquare>
  [ 42] pusharglist 1 ........................... <oAvatarSquare>
  [ 44] extcall 59 .............................. <voidp(oAvatarSquare)>
  [ 46] jmpifz [ 54] ............................ if voidp(oAvatarSquare) then
  [ 49] pushzero ................................ <0>
  [ 50] pusharglistnoret 1 ...................... <0>
  [ 52] extcall 52 .............................. return 0
  [ 54] getparam 0 .............................. <me>
  [ 56] getparam 1 .............................. <_oItem>
  [ 58] pusharglist 2 ........................... <me, _oItem>
  [ 60] objcall 304 ............................. <me.getSquareInFrontOfItem(_oItem)>
  [ 63] setlocal 2 .............................. oTargetSquare = me.getSquareInFrontOfItem(_oItem)
  [ 65] getlocal 1 .............................. <oAvatarSquare>
  [ 67] getlocal 2 .............................. <oTargetSquare>
  [ 69] pusharglist 2 ........................... <oAvatarSquare, oTargetSquare>
  [ 71] objcall 254 ............................. <oAvatarSquare.equals(oTargetSquare)>
  [ 73] setlocal 3 .............................. bAvatarInTargetSquare = oAvatarSquare.equals(oTargetSquare)
  [ 75] getlocal 3 .............................. <bAvatarInTargetSquare>
  [ 77] pusharglistnoret 1 ...................... <bAvatarInTargetSquare>
  [ 79] extcall 52 .............................. return bAvatarInTargetSquare
  [ 81] ret
end

on getSquareInFrontOfItem me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] objcall 455 ............................. <_oItem.getSquare()>
  [  7] setlocal 0 .............................. oItemSquare = _oItem.getSquare()
  [  9] getparam 1 .............................. <_oItem>
  [ 11] pusharglist 1 ........................... <_oItem>
  [ 13] objcall 489 ............................. <_oItem.getDirection()>
  [ 16] setlocal 1 .............................. iItemDirection = _oItem.getDirection()
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 136 ...................... <me.oGrid>
  [ 22] getlocal 0 .............................. <oItemSquare>
  [ 24] getlocal 1 .............................. <iItemDirection>
  [ 26] pusharglist 3 ........................... <me.oGrid, oItemSquare, iItemDirection>
  [ 28] objcall 490 ............................. <me.oGrid.getSquareAtDirection(oItemSquare, iItemDirection)>
  [ 31] setlocal 2 .............................. oTargetSquare = me.oGrid.getSquareAtDirection(oItemSquare, iItemDirection)
  [ 33] getlocal 2 .............................. <oTargetSquare>
  [ 35] pusharglistnoret 1 ...................... <oTargetSquare>
  [ 37] extcall 52 .............................. return oTargetSquare
  [ 39] ret
end

on keyDownEvent me
  [  0] pusharglistnoret 0 ...................... <>
  [  2] extcall 493 ............................. nothing()
  [  5] pusharglist 0 ........................... <>
  [  7] thebuiltin 494 .......................... <the key>
  [ 10] peek 0 .................................. case the key of
  [ 12] pushcons 33 ............................. <"~">
  [ 14] eq
  [ 15] jmpifz [ 30] ............................ (case) "~":
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 136 ...................... <me.oGrid>
  [ 22] pusharglistnoret 1 ...................... <me.oGrid>
  [ 24] objcall 495 ............................. me.oGrid.toggleGridView()
  [ 27] jmp [283]
  [ 30] peek 0
  [ 32] pushcons 34 ............................. <"!">
  [ 34] eq
  [ 35] jmpifz [ 51] ............................ (case) "!":
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 391 ...................... <me.oBackground>
  [ 43] pusharglistnoret 1 ...................... <me.oBackground>
  [ 45] objcall 496 ............................. me.oBackground.toggleDisplay()
  [ 48] jmp [283]
  [ 51] peek 0
  [ 53] pushcons 35 ............................. <"@">
  [ 55] eq
  [ 56] jmpifz [ 72] ............................ (case) "@":
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 392 ...................... <me.oFloor>
  [ 64] pusharglistnoret 1 ...................... <me.oFloor>
  [ 66] objcall 496 ............................. me.oFloor.toggleDisplay()
  [ 69] jmp [283]
  [ 72] peek 0
  [ 74] pushcons 36 ............................. <"#">
  [ 76] eq
  [ 77] jmpifz [ 93] ............................ (case) "#":
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 394 ...................... <me.oDoor>
  [ 85] pusharglistnoret 1 ...................... <me.oDoor>
  [ 87] objcall 496 ............................. me.oDoor.toggleDisplay()
  [ 90] jmp [283]
  [ 93] peek 0
  [ 95] pushcons 37 ............................. <"$">
  [ 97] eq
  [ 98] jmpifz [114] ............................ (case) "$":
  [101] getparam 0 .............................. <me>
  [103] getchainedprop 393 ...................... <me.oWall>
  [106] pusharglistnoret 1 ...................... <me.oWall>
  [108] objcall 496 ............................. me.oWall.toggleDisplay()
  [111] jmp [283]
  [114] peek 0
  [116] pushcons 38 ............................. <"%">
  [118] eq
  [119] jmpifz [135] ............................ (case) "%":
  [122] getparam 0 .............................. <me>
  [124] getchainedprop 398 ...................... <me.oHiliter>
  [127] pusharglistnoret 1 ...................... <me.oHiliter>
  [129] objcall 496 ............................. me.oHiliter.toggleDisplay()
  [132] jmp [283]
  [135] peek 0
  [137] pushcons 39 ............................. <"^">
  [139] eq
  [140] jmpifz [156] ............................ (case) "^":
  [143] getparam 0 .............................. <me>
  [145] getchainedprop 395 ...................... <me.oWindow>
  [148] pusharglistnoret 1 ...................... <me.oWindow>
  [150] objcall 496 ............................. me.oWindow.toggleDisplay()
  [153] jmp [283]
  [156] peek 0
  [158] pushcons 40 ............................. <"&">
  [160] eq
  [161] jmpifz [177] ............................ (case) "&":
  [164] getparam 0 .............................. <me>
  [166] getchainedprop 397 ...................... <me.oRugs>
  [169] pusharglistnoret 1 ...................... <me.oRugs>
  [171] objcall 496 ............................. me.oRugs.toggleDisplay()
  [174] jmp [283]
  [177] peek 0
  [179] pushcons 41 ............................. <"*">
  [181] eq
  [182] jmpifz [198] ............................ (case) "*":
  [185] getparam 0 .............................. <me>
  [187] getchainedprop 399 ...................... <me.oFurniture>
  [190] pusharglistnoret 1 ...................... <me.oFurniture>
  [192] objcall 496 ............................. me.oFurniture.toggleDisplay()
  [195] jmp [283]
  [198] peek 0
  [200] pushcons 42 ............................. <"(">
  [202] eq
  [203] jmpifz [219] ............................ (case) "(":
  [206] getparam 0 .............................. <me>
  [208] getchainedprop 396 ...................... <me.oWallItems>
  [211] pusharglistnoret 1 ...................... <me.oWallItems>
  [213] objcall 496 ............................. me.oWallItems.toggleDisplay()
  [216] jmp [283]
  [219] peek 0
  [221] pushcons 43 ............................. <")">
  [223] eq
  [224] jmpifz [240] ............................ (case) ")":
  [227] getparam 0 .............................. <me>
  [229] getchainedprop 400 ...................... <me.oStaticItems>
  [232] pusharglistnoret 1 ...................... <me.oStaticItems>
  [234] objcall 496 ............................. me.oStaticItems.toggleDisplay()
  [237] jmp [283]
  [240] peek 0
  [242] pushcons 44 ............................. <"_">
  [244] eq
  [245] jmpifz [261] ............................ (case) "_":
  [248] getparam 0 .............................. <me>
  [250] getchainedprop 401 ...................... <me.oAvatars>
  [253] pusharglistnoret 1 ...................... <me.oAvatars>
  [255] objcall 496 ............................. me.oAvatars.toggleDisplay()
  [258] jmp [283]
  [261] peek 0
  [263] pushcons 45 ............................. <"v">
  [265] eq
  [266] jmpifz [283] ............................ (case) "v":
  [269] pusharglist 0 ........................... <>
  [271] thebuiltin 497 .......................... <the shiftDown>
  [274] jmpifz [283] ............................ if the shiftDown then
  [277] pushcons 46 ............................. <"VERSION: b0.01">
  [279] pusharglistnoret 1 ...................... <"VERSION: b0.01">
  [281] extcall 236 ............................. alert("VERSION: b0.01")
  [283] pop 1 ................................... end case
  [285] ret
end

on getSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 240 .......................... <me.oSelectedItem>
  [  4] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [  6] extcall 52 .............................. return me.oSelectedItem
  [  8] ret
end

on setSelectedItem me, oItem, bDisplayInfo
  [  0] getparam 1 .............................. <oItem>
  [  2] pusharglist 1 ........................... <oItem>
  [  4] extcall 59 .............................. <voidp(oItem)>
  [  6] jmpifz [ 13] ............................ if voidp(oItem) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] pushcons 47 ............................. <"setSelectedItem() ">
  [ 17] getparam 1 .............................. <oItem>
  [ 19] pusharglist 1 ........................... <oItem>
  [ 21] objcall 498 ............................. <oItem.toString()>
  [ 24] joinstr ................................. <"setSelectedItem() " & oItem.toString()>
  [ 25] pusharglistnoret 2 ...................... <me, "setSelectedItem() " & oItem.toString()>
  [ 27] objcall 332 ............................. me.debug("setSelectedItem() " & oItem.toString())
  [ 30] getglobal 172 ........................... <ElementMgr>
  [ 32] pusharglist 1 ........................... <ElementMgr>
  [ 34] objcall 499 ............................. <ElementMgr.getTrader()>
  [ 37] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 39] extcall 59 .............................. <voidp(ElementMgr.getTrader())>
  [ 41] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 42] setlocal 0 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 240 .......................... <me.oSelectedItem>
  [ 48] pusharglist 1 ........................... <me.oSelectedItem>
  [ 50] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [ 52] not ..................................... <not voidp(me.oSelectedItem)>
  [ 53] jmpifz [ 85] ............................ if not voidp(me.oSelectedItem) then
  [ 56] getparam 0 .............................. <me>
  [ 58] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 60] pusharglist 1 ........................... <me.oSelectedItem>
  [ 62] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [ 64] jmpifz [ 85] ............................ if me.oSelectedItem.getDrag() then
  [ 67] getparam 0 .............................. <me>
  [ 69] pusharglist 1 ........................... <me>
  [ 71] objcall 315 ............................. <me.dropSelectedItem()>
  [ 74] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [ 76] getlocal 1 .............................. <bDropped>
  [ 78] jmpifz [ 85] ............................ if bDropped then
  [ 81] pusharglistnoret 0 ...................... <>
  [ 83] extcall 52 .............................. return 
  [ 85] getparam 0 .............................. <me>
  [ 87] getparam 1 .............................. <oItem>
  [ 89] setobjprop 240 .......................... me.oSelectedItem = oItem
  [ 91] getparam 2 .............................. <bDisplayInfo>
  [ 93] pusharglist 1 ........................... <bDisplayInfo>
  [ 95] extcall 59 .............................. <voidp(bDisplayInfo)>
  [ 97] jmpifz [104] ............................ if voidp(bDisplayInfo) then
  [100] pushint8 1 .............................. <1>
  [102] setparam 2 .............................. bDisplayInfo = 1
  [104] getparam 2 .............................. <bDisplayInfo>
  [106] jmpifz [122] ............................ if bDisplayInfo then
  [109] getparam 0 .............................. <me>
  [111] getchainedprop 403 ...................... <me.oInfoStand>
  [114] getparam 0 .............................. <me>
  [116] getobjprop 240 .......................... <me.oSelectedItem>
  [118] pusharglistnoret 2 ...................... <me.oInfoStand, me.oSelectedItem>
  [120] objcall 3 ............................... me.oInfoStand.display(me.oSelectedItem)
  [122] getparam 0 .............................. <me>
  [124] getchainedprop 240 ...................... <me.oSelectedItem>
  [126] pusharglist 1 ........................... <me.oSelectedItem>
  [128] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [130] jmpifz [146] ............................ if me.oSelectedItem.getDrag() then
  [133] getparam 0 .............................. <me>
  [135] pusharglist 1 ........................... <me>
  [137] objcall 315 ............................. <me.dropSelectedItem()>
  [140] setlocal 1 .............................. bDropped = me.dropSelectedItem()
  [142] pusharglistnoret 0 ...................... <>
  [144] extcall 52 .............................. return 
  [146] getparam 0 .............................. <me>
  [148] getchainedprop 240 ...................... <me.oSelectedItem>
  [150] pusharglist 1 ........................... <me.oSelectedItem>
  [152] objcall 25 .............................. <me.oSelectedItem.isAvatar()>
  [154] not ..................................... <not me.oSelectedItem.isAvatar()>
  [155] pusharglist 0 ........................... <>
  [157] thebuiltin 500 .......................... <the optionDown>
  [160] and ..................................... <not me.oSelectedItem.isAvatar() and the optionDown>
  [161] jmpifz [225] ............................ if not me.oSelectedItem.isAvatar() and the optionDown then
  [164] getglobal 64 ............................ <oStudio>
  [166] pusharglist 1 ........................... <oStudio>
  [168] extcall 59 .............................. <voidp(oStudio)>
  [170] jmpifz [184] ............................ if voidp(oStudio) then / else
  [173] pushint8 1 .............................. <1>
  [175] setlocal 2 .............................. bIsOwner = 1
  [177] pushint8 1 .............................. <1>
  [179] setlocal 3 .............................. bIsMod = 1
  [181] jmp [206]
  [184] getglobal 64 ............................ <oStudio>
  [186] getglobal 77 ............................ <oDenizenManager>
  [188] pusharglist 1 ........................... <oDenizenManager>
  [190] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [192] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [194] objcall 22 .............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [196] setlocal 2 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [198] getglobal 77 ............................ <oDenizenManager>
  [200] pusharglist 1 ........................... <oDenizenManager>
  [202] objcall 23 .............................. <oDenizenManager.isMod()>
  [204] setlocal 3 .............................. bIsMod = oDenizenManager.isMod()
  [206] getlocal 2 .............................. <bIsOwner>
  [208] getlocal 3 .............................. <bIsMod>
  [210] or ...................................... <bIsOwner or bIsMod>
  [211] jmpifz [221] ............................ if bIsOwner or bIsMod then
  [214] getparam 0 .............................. <me>
  [216] pusharglistnoret 1 ...................... <me>
  [218] objcall 266 ............................. me.moveSelectedItem()
  [221] pusharglistnoret 0 ...................... <>
  [223] extcall 52 .............................. return 
  [225] ret
end

on createItem me, sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop
  [  0] getparam 2 .............................. <sPosId>
  [  2] pusharglist 1 ........................... <sPosId>
  [  4] extcall 59 .............................. <voidp(sPosId)>
  [  6] jmpifz [ 47] ............................ if voidp(sPosId) then
  [  9] getglobal 502 ........................... <oTempId>
  [ 12] pusharglist 1 ........................... <oTempId>
  [ 14] extcall 59 .............................. <voidp(oTempId)>
  [ 16] jmpifz [ 28] ............................ if voidp(oTempId) then / else
  [ 19] pushint16 1000 .......................... <1000>
  [ 22] setglobal 502 ........................... oTempId = 1000
  [ 25] jmp [ 37]
  [ 28] getglobal 502 ........................... <oTempId>
  [ 31] pushint8 1 .............................. <1>
  [ 33] add ..................................... <oTempId + 1>
  [ 34] setglobal 502 ........................... oTempId = oTempId + 1
  [ 37] getglobal 502 ........................... <oTempId>
  [ 40] pusharglist 1 ........................... <oTempId>
  [ 42] extcall 422 ............................. <string(oTempId)>
  [ 45] setparam 2 .............................. sPosId = string(oTempId)
  [ 47] pushcons 48 ............................. <"TYPE_">
  [ 49] getparam 4 .............................. <sType>
  [ 51] joinstr ................................. <"TYPE_" & sType>
  [ 52] setlocal 0 .............................. sTypeScript = "TYPE_" & sType
  [ 54] getlocal 0 .............................. <sTypeScript>
  [ 56] pusharglist 1 ........................... <sTypeScript>
  [ 58] extcall 194 ............................. <script(sTypeScript)>
  [ 60] getparam 1 .............................. <sProdID>
  [ 62] getparam 2 .............................. <sPosId>
  [ 64] getparam 3 .............................. <sImageBase>
  [ 66] getparam 4 .............................. <sType>
  [ 68] getparam 5 .............................. <sAction>
  [ 70] getparam 6 .............................. <iState>
  [ 72] getparam 7 .............................. <aAttributes>
  [ 74] getparam 8 .............................. <sCastLib>
  [ 76] getparam 9 .............................. <iRow>
  [ 78] getparam 10 ............................. <_iCol>
  [ 80] getparam 11 ............................. <iGridY>
  [ 82] getparam 12 ............................. <iDirection>
  [ 84] getparam 13 ............................. <iHeight>
  [ 86] getparam 14 ............................. <iHeightOffset>
  [ 88] getparam 15 ............................. <bItemsAllowedOnTop>
  [ 90] pusharglist 16 .......................... <script(sTypeScript), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop>
  [ 92] objcall 0 ............................... <script(sTypeScript).new(sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 94] setlocal 1 .............................. oItem = script(sTypeScript).new(sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, _iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)
  [ 96] getlocal 1 .............................. <oItem>
  [ 98] pusharglistnoret 1 ...................... <oItem>
  [100] objcall 503 ............................. oItem.draw()
  [103] getlocal 1 .............................. <oItem>
  [105] pusharglistnoret 1 ...................... <oItem>
  [107] extcall 52 .............................. return oItem
  [109] ret
end

on isOverFloor me, _oSquare
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 390 ...................... <oIsoScene.oMap>
  [  5] getparam 1 .............................. <_oSquare>
  [  7] getobjprop 431 .......................... <_oSquare.iRow>
  [ 10] getparam 1 .............................. <_oSquare>
  [ 12] getobjprop 432 .......................... <_oSquare.iCol>
  [ 15] pusharglist 3 ........................... <oIsoScene.oMap, _oSquare.iRow, _oSquare.iCol>
  [ 17] objcall 433 ............................. <oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)>
  [ 20] setlocal 0 .............................. oMapNode = oIsoScene.oMap.getNode(_oSquare.iRow, _oSquare.iCol)
  [ 22] getlocal 0 .............................. <oMapNode>
  [ 24] getobjprop 434 .......................... <oMapNode.w>
  [ 27] setlocal 1 .............................. iWeight = oMapNode.w
  [ 29] getlocal 1 .............................. <iWeight>
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 390 ...................... <me.oMap>
  [ 36] getchainedprop 435 ...................... <me.oMap.oPathfinder>
  [ 39] getobjprop 436 .......................... <me.oMap.oPathfinder.W_BLOCKED>
  [ 42] eq ...................................... <iWeight = me.oMap.oPathfinder.W_BLOCKED>
  [ 43] jmpifz [ 54] ............................ if iWeight = me.oMap.oPathfinder.W_BLOCKED then / else
  [ 46] pushzero ................................ <0>
  [ 47] pusharglistnoret 1 ...................... <0>
  [ 49] extcall 52 .............................. return 0
  [ 51] jmp [ 60]
  [ 54] pushint8 1 .............................. <1>
  [ 56] pusharglistnoret 1 ...................... <1>
  [ 58] extcall 52 .............................. return 1
  [ 60] ret
end

on squaresAreOverFloor me, _aSquares
  [  0] getparam 1 .............................. <_aSquares>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 155
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 55] ............................ repeat with _oSquare in _aSquares
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 72
  [ 26] setlocal 0
  [ 28] getparam 0 .............................. <me>
  [ 30] getlocal 0 .............................. <_oSquare>
  [ 32] pusharglist 2 ........................... <me, _oSquare>
  [ 34] objcall 309 ............................. <me.isOverFloor(_oSquare)>
  [ 37] setlocal 1 .............................. bIsOverFloor = me.isOverFloor(_oSquare)
  [ 39] getlocal 1 .............................. <bIsOverFloor>
  [ 41] not ..................................... <not bIsOverFloor>
  [ 42] jmpifz [ 50] ............................ if not bIsOverFloor then
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 1 ...................... <0>
  [ 48] extcall 52 .............................. return 0
  [ 50] pushint8 1
  [ 52] add
  [ 53] endrepeat [ 10]
  [ 55] pop 3
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglistnoret 1 ...................... <1>
  [ 61] extcall 52 .............................. return 1
  [ 63] ret
end

on deleteSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 240 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 63] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 16] pusharglist 1 ........................... <me.oSelectedItem>
  [ 18] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [ 20] jmpifz [ 33] ............................ if me.oSelectedItem.getDrag() then
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 2 ...................... <me.oSelectedItem, 0>
  [ 30] objcall 514 ............................. me.oSelectedItem.setDrag(0)
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 37] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [ 39] objcall 311 ............................. me.oSelectedItem.deleteItem()
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 0 ........................... <>
  [ 46] extcall 238 ............................. <VOID>
  [ 48] setobjprop 240 .......................... me.oSelectedItem = VOID
  [ 50] getparam 0 .............................. <me>
  [ 52] getchainedprop 403 ...................... <me.oInfoStand>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 240 .......................... <me.oSelectedItem>
  [ 59] pusharglistnoret 2 ...................... <me.oInfoStand, me.oSelectedItem>
  [ 61] objcall 3 ............................... me.oInfoStand.display(me.oSelectedItem)
  [ 63] ret
end

on deleteItem me, oItem
  [  0] getparam 1 .............................. <oItem>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 240 .......................... <me.oSelectedItem>
  [  6] pusharglist 2 ........................... <oItem, me.oSelectedItem>
  [  8] objcall 254 ............................. <oItem.equals(me.oSelectedItem)>
  [ 10] jmpifz [ 27] ............................ if oItem.equals(me.oSelectedItem) then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 257 ............................. me.deleteSelectedItem()
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 52 .............................. return 
  [ 24] jmp [ 34]
  [ 27] getparam 1 .............................. <oItem>
  [ 29] pusharglistnoret 1 ...................... <oItem>
  [ 31] objcall 311 ............................. oItem.deleteItem()
  [ 34] ret
end

on rotateSelectedItem me
  [  0] getglobal 64 ............................ <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 59 .............................. <voidp(oStudio)>
  [  6] jmpifz [ 20] ............................ if voidp(oStudio) then / else
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 0 .............................. bIsOwner = 1
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 1 .............................. bIsMod = 1
  [ 17] jmp [ 42]
  [ 20] getglobal 64 ............................ <oStudio>
  [ 22] getglobal 77 ............................ <oDenizenManager>
  [ 24] pusharglist 1 ........................... <oDenizenManager>
  [ 26] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [ 28] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 30] objcall 22 .............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 32] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 34] getglobal 77 ............................ <oDenizenManager>
  [ 36] pusharglist 1 ........................... <oDenizenManager>
  [ 38] objcall 23 .............................. <oDenizenManager.isMod()>
  [ 40] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 42] getlocal 0 .............................. <bIsOwner>
  [ 44] not ..................................... <not bIsOwner>
  [ 45] getlocal 1 .............................. <bIsMod>
  [ 47] not ..................................... <not bIsMod>
  [ 48] and ..................................... <not bIsOwner and not bIsMod>
  [ 49] jmpifz [ 56] ............................ if not bIsOwner and not bIsMod then
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 52 .............................. return 
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 240 .......................... <me.oSelectedItem>
  [ 60] pusharglist 1 ........................... <me.oSelectedItem>
  [ 62] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [ 64] not ..................................... <not voidp(me.oSelectedItem)>
  [ 65] jmpifz [140] ............................ if not voidp(me.oSelectedItem) then
  [ 68] getparam 0 .............................. <me>
  [ 70] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 72] pusharglist 1 ........................... <me.oSelectedItem>
  [ 74] objcall 515 ............................. <me.oSelectedItem.rotate()>
  [ 77] setlocal 2 .............................. bSuccess = me.oSelectedItem.rotate()
  [ 79] getlocal 2 .............................. <bSuccess>
  [ 81] not ..................................... <not bSuccess>
  [ 82] jmpifz [ 98] ............................ if not bSuccess then
  [ 85] getparam 0 .............................. <me>
  [ 87] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 89] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [ 91] objcall 516 ............................. me.oSelectedItem.resetLastPosition()
  [ 94] pusharglistnoret 0 ...................... <>
  [ 96] extcall 52 .............................. return 
  [ 98] getglobal 256 ........................... <oSession>
  [101] pusharglist 1 ........................... <oSession>
  [103] extcall 59 .............................. <voidp(oSession)>
  [105] not ..................................... <not voidp(oSession)>
  [106] jmpifz [140] ............................ if not voidp(oSession) then
  [109] getglobal 256 ........................... <oSession>
  [112] getobjprop 260 .......................... <oSession.bTestMode>
  [115] not ..................................... <not oSession.bTestMode>
  [116] getglobal 258 ........................... <oPossessionStudio>
  [119] pusharglist 1 ........................... <oPossessionStudio>
  [121] extcall 59 .............................. <voidp(oPossessionStudio)>
  [123] not ..................................... <not voidp(oPossessionStudio)>
  [124] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [125] jmpifz [140] ............................ if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [128] getglobal 258 ........................... <oPossessionStudio>
  [131] getparam 0 .............................. <me>
  [133] getobjprop 240 .......................... <me.oSelectedItem>
  [135] pusharglistnoret 2 ...................... <oPossessionStudio, me.oSelectedItem>
  [137] objcall 517 ............................. oPossessionStudio.sendUpdatePossession(me.oSelectedItem)
  [140] ret
end

on useSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 240 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 12] ............................ if not voidp(me.oSelectedItem) then
  [ 12] ret
end

on itemIsInBackpack me, oItem
  [  0] getglobal 77 ............................ <oDenizenManager>
  [  2] pusharglist 1 ........................... <oDenizenManager>
  [  4] objcall 448 ............................. <oDenizenManager.getBackpack()>
  [  7] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [  9] getlocal 0 .............................. <oBackPack>
  [ 11] pusharglist 1 ........................... <oBackPack>
  [ 13] extcall 59 .............................. <voidp(oBackPack)>
  [ 15] jmpifz [ 23] ............................ if voidp(oBackPack) then
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 52 .............................. return 0
  [ 23] getlocal 0 .............................. <oBackPack>
  [ 25] getparam 1 .............................. <oItem>
  [ 27] pusharglist 1 ........................... <oItem>
  [ 29] objcall 249 ............................. <oItem.getPosId()>
  [ 31] pusharglist 2 ........................... <oBackPack, oItem.getPosId()>
  [ 33] objcall 519 ............................. <oBackPack.idExists(oItem.getPosId())>
  [ 36] setlocal 1 .............................. bExists = oBackPack.idExists(oItem.getPosId())
  [ 38] getlocal 1 .............................. <bExists>
  [ 40] pusharglistnoret 1 ...................... <bExists>
  [ 42] extcall 52 .............................. return bExists
  [ 44] ret
end

on moveSelectedItem me, bForce
  [  0] getglobal 233 ........................... <gFeatureSet>
  [  2] pushsymb 265 ............................ <#FURNITURE_MOVE>
  [  5] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_MOVE>
  [  7] objcall 235 ............................. <gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [  9] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [ 10] getparam 1 .............................. <bForce>
  [ 12] pusharglist 1 ........................... <bForce>
  [ 14] extcall 59 .............................. <voidp(bForce)>
  [ 16] and ..................................... <not gFeatureSet.isEnabled(#FURNITURE_MOVE) and voidp(bForce)>
  [ 17] jmpifz [ 24] ............................ if not gFeatureSet.isEnabled(#FURNITURE_MOVE) and voidp(bForce) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 52 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 240 .......................... <me.oSelectedItem>
  [ 28] pusharglist 1 ........................... <me.oSelectedItem>
  [ 30] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [ 32] not ..................................... <not voidp(me.oSelectedItem)>
  [ 33] jmpifz [261] ............................ if not voidp(me.oSelectedItem) then
  [ 36] getglobal 64 ............................ <oStudio>
  [ 38] pusharglist 1 ........................... <oStudio>
  [ 40] extcall 59 .............................. <voidp(oStudio)>
  [ 42] jmpifz [ 59] ............................ if voidp(oStudio) then / else
  [ 45] pushint8 1 .............................. <1>
  [ 47] setlocal 0 .............................. bIsOwner = 1
  [ 49] pushint8 1 .............................. <1>
  [ 51] setlocal 1 .............................. bIsMod = 1
  [ 53] pushzero ................................ <0>
  [ 54] setlocal 2 .............................. bTrading = 0
  [ 56] jmp [ 95]
  [ 59] getglobal 64 ............................ <oStudio>
  [ 61] getglobal 77 ............................ <oDenizenManager>
  [ 63] pusharglist 1 ........................... <oDenizenManager>
  [ 65] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [ 67] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 69] objcall 22 .............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 71] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 73] getglobal 77 ............................ <oDenizenManager>
  [ 75] pusharglist 1 ........................... <oDenizenManager>
  [ 77] objcall 23 .............................. <oDenizenManager.isMod()>
  [ 79] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 81] getglobal 172 ........................... <ElementMgr>
  [ 83] pusharglist 1 ........................... <ElementMgr>
  [ 85] objcall 499 ............................. <ElementMgr.getTrader()>
  [ 88] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 90] extcall 59 .............................. <voidp(ElementMgr.getTrader())>
  [ 92] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 93] setlocal 2 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 95] getlocal 0 .............................. <bIsOwner>
  [ 97] not ..................................... <not bIsOwner>
  [ 98] getlocal 1 .............................. <bIsMod>
  [100] not ..................................... <not bIsMod>
  [101] and ..................................... <not bIsOwner and not bIsMod>
  [102] getlocal 2 .............................. <bTrading>
  [104] not ..................................... <not bTrading>
  [105] and ..................................... <not bIsOwner and not bIsMod and not bTrading>
  [106] jmpifz [113] ............................ if not bIsOwner and not bIsMod and not bTrading then
  [109] pusharglistnoret 0 ...................... <>
  [111] extcall 52 .............................. return 
  [113] getlocal 2 .............................. <bTrading>
  [115] jmpifz [143] ............................ if bTrading then
  [118] getparam 0 .............................. <me>
  [120] getparam 0 .............................. <me>
  [122] getobjprop 240 .......................... <me.oSelectedItem>
  [124] pusharglist 2 ........................... <me, me.oSelectedItem>
  [126] objcall 314 ............................. <me.itemIsInBackpack(me.oSelectedItem)>
  [129] not ..................................... <not me.itemIsInBackpack(me.oSelectedItem)>
  [130] jmpifz [143] ............................ if not me.itemIsInBackpack(me.oSelectedItem) then
  [133] pushcons 49 ............................. <"items is in backpack can't trade it">
  [135] pusharglistnoret 1 ...................... <"items is in backpack can't trade it">
  [137] extcall 168 ............................. put "items is in backpack can't trade it"
  [139] pusharglistnoret 0 ...................... <>
  [141] extcall 52 .............................. return 
  [143] getparam 0 .............................. <me>
  [145] getchainedprop 240 ...................... <me.oSelectedItem>
  [147] pusharglist 1 ........................... <me.oSelectedItem>
  [149] objcall 454 ............................. <me.oSelectedItem.getType()>
  [152] setlocal 3 .............................. sType = me.oSelectedItem.getType()
  [154] getlocal 3 .............................. <sType>
  [156] pushcons 50 ............................. <"Wallpaper">
  [158] eq ...................................... <sType = "Wallpaper">
  [159] jmpifz [202] ............................ if sType = "Wallpaper" then
  [162] getlocal 2 .............................. <bTrading>
  [164] jmpifz [182] ............................ if bTrading then
  [167] getparam 0 .............................. <me>
  [169] getchainedprop 240 ...................... <me.oSelectedItem>
  [171] pushint8 1 .............................. <1>
  [173] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [175] objcall 514 ............................. me.oSelectedItem.setDrag(1)
  [178] pusharglistnoret 0 ...................... <>
  [180] extcall 52 .............................. return 
  [182] getparam 0 .............................. <me>
  [184] getchainedprop 240 ...................... <me.oSelectedItem>
  [186] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [188] objcall 521 ............................. me.oSelectedItem.displayWallReplace()
  [191] getparam 0 .............................. <me>
  [193] pusharglistnoret 1 ...................... <me>
  [195] objcall 257 ............................. me.deleteSelectedItem()
  [198] pusharglistnoret 0 ...................... <>
  [200] extcall 52 .............................. return 
  [202] getlocal 3 .............................. <sType>
  [204] pushcons 9 .............................. <"Floor">
  [206] eq ...................................... <sType = "Floor">
  [207] jmpifz [250] ............................ if sType = "Floor" then
  [210] getlocal 2 .............................. <bTrading>
  [212] jmpifz [230] ............................ if bTrading then
  [215] getparam 0 .............................. <me>
  [217] getchainedprop 240 ...................... <me.oSelectedItem>
  [219] pushint8 1 .............................. <1>
  [221] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [223] objcall 514 ............................. me.oSelectedItem.setDrag(1)
  [226] pusharglistnoret 0 ...................... <>
  [228] extcall 52 .............................. return 
  [230] getparam 0 .............................. <me>
  [232] getchainedprop 240 ...................... <me.oSelectedItem>
  [234] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [236] objcall 522 ............................. me.oSelectedItem.displayFloorReplace()
  [239] getparam 0 .............................. <me>
  [241] pusharglistnoret 1 ...................... <me>
  [243] objcall 257 ............................. me.deleteSelectedItem()
  [246] pusharglistnoret 0 ...................... <>
  [248] extcall 52 .............................. return 
  [250] getparam 0 .............................. <me>
  [252] getchainedprop 240 ...................... <me.oSelectedItem>
  [254] pushint8 1 .............................. <1>
  [256] pusharglistnoret 2 ...................... <me.oSelectedItem, 1>
  [258] objcall 514 ............................. me.oSelectedItem.setDrag(1)
  [261] ret
end

on dropSelectedItem me, bReset
  [  0] getparam 1 .............................. <bReset>
  [  2] pusharglist 1 ........................... <bReset>
  [  4] extcall 59 .............................. <voidp(bReset)>
  [  6] jmpifz [ 12] ............................ if voidp(bReset) then
  [  9] pushzero ................................ <0>
  [ 10] setparam 1 .............................. bReset = 0
  [ 12] pushzero ................................ <0>
  [ 13] setlocal 0 .............................. bDropped = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 240 .......................... <me.oSelectedItem>
  [ 19] pusharglist 1 ........................... <me.oSelectedItem>
  [ 21] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [ 23] not ..................................... <not voidp(me.oSelectedItem)>
  [ 24] jmpifz [235] ............................ if not voidp(me.oSelectedItem) then
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 31] pusharglist 1 ........................... <me.oSelectedItem>
  [ 33] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [ 35] jmpifz [235] ............................ if me.oSelectedItem.getDrag() then
  [ 38] getparam 1 .............................. <bReset>
  [ 40] jmpifz [ 67] ............................ if bReset then
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 47] pusharglist 1 ........................... <me.oSelectedItem>
  [ 49] objcall 516 ............................. <me.oSelectedItem.resetLastPosition()>
  [ 52] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [ 53] jmpifz [ 63] ............................ if not me.oSelectedItem.resetLastPosition() then
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglistnoret 1 ...................... <me>
  [ 60] objcall 257 ............................. me.deleteSelectedItem()
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 52 .............................. return 
  [ 67] getglobal 172 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] objcall 524 ............................. <ElementMgr.mouseIsOverBackpack()>
  [ 74] jmpifz [101] ............................ if ElementMgr.mouseIsOverBackpack() then
  [ 77] getparam 0 .............................. <me>
  [ 79] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 81] pusharglist 1 ........................... <me.oSelectedItem>
  [ 83] objcall 516 ............................. <me.oSelectedItem.resetLastPosition()>
  [ 86] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [ 87] jmpifz [ 97] ............................ if not me.oSelectedItem.resetLastPosition() then
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglistnoret 1 ...................... <me>
  [ 94] objcall 257 ............................. me.deleteSelectedItem()
  [ 97] pusharglistnoret 0 ...................... <>
  [ 99] extcall 52 .............................. return 
  [101] getglobal 64 ............................ <oStudio>
  [103] pusharglist 1 ........................... <oStudio>
  [105] extcall 59 .............................. <voidp(oStudio)>
  [107] jmpifz [121] ............................ if voidp(oStudio) then / else
  [110] pushint8 1 .............................. <1>
  [112] setlocal 1 .............................. bOwner = 1
  [114] pushint8 1 .............................. <1>
  [116] setlocal 2 .............................. bIsMod = 1
  [118] jmp [143]
  [121] getglobal 64 ............................ <oStudio>
  [123] getglobal 77 ............................ <oDenizenManager>
  [125] pusharglist 1 ........................... <oDenizenManager>
  [127] objcall 78 .............................. <oDenizenManager.getScreenName()>
  [129] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [131] objcall 22 .............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [133] setlocal 1 .............................. bOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [135] getglobal 77 ............................ <oDenizenManager>
  [137] pusharglist 1 ........................... <oDenizenManager>
  [139] objcall 23 .............................. <oDenizenManager.isMod()>
  [141] setlocal 2 .............................. bIsMod = oDenizenManager.isMod()
  [143] getlocal 1 .............................. <bOwner>
  [145] not ..................................... <not bOwner>
  [146] getlocal 2 .............................. <bIsMod>
  [148] not ..................................... <not bIsMod>
  [149] and ..................................... <not bOwner and not bIsMod>
  [150] jmpifz [177] ............................ if not bOwner and not bIsMod then
  [153] getparam 0 .............................. <me>
  [155] getchainedprop 240 ...................... <me.oSelectedItem>
  [157] pusharglist 1 ........................... <me.oSelectedItem>
  [159] objcall 516 ............................. <me.oSelectedItem.resetLastPosition()>
  [162] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [163] jmpifz [173] ............................ if not me.oSelectedItem.resetLastPosition() then
  [166] getparam 0 .............................. <me>
  [168] pusharglistnoret 1 ...................... <me>
  [170] objcall 257 ............................. me.deleteSelectedItem()
  [173] pusharglistnoret 0 ...................... <>
  [175] extcall 52 .............................. return 
  [177] getparam 0 .............................. <me>
  [179] getchainedprop 240 ...................... <me.oSelectedItem>
  [181] pusharglist 1 ........................... <me.oSelectedItem>
  [183] objcall 525 ............................. <me.oSelectedItem.drop()>
  [186] setlocal 0 .............................. bDropped = me.oSelectedItem.drop()
  [188] getlocal 0 .............................. <bDropped>
  [190] jmpifz [215] ............................ if bDropped then / else
  [193] getparam 0 .............................. <me>
  [195] getchainedprop 240 ...................... <me.oSelectedItem>
  [197] pushzero ................................ <0>
  [198] pusharglistnoret 2 ...................... <me.oSelectedItem, 0>
  [200] objcall 514 ............................. me.oSelectedItem.setDrag(0)
  [203] getparam 0 .............................. <me>
  [205] getchainedprop 240 ...................... <me.oSelectedItem>
  [207] pusharglistnoret 1 ...................... <me.oSelectedItem>
  [209] objcall 262 ............................. me.oSelectedItem.sendPutInStudio()
  [212] jmp [235]
  [215] getparam 0 .............................. <me>
  [217] getchainedprop 240 ...................... <me.oSelectedItem>
  [219] pusharglist 1 ........................... <me.oSelectedItem>
  [221] objcall 516 ............................. <me.oSelectedItem.resetLastPosition()>
  [224] not ..................................... <not me.oSelectedItem.resetLastPosition()>
  [225] jmpifz [235] ............................ if not me.oSelectedItem.resetLastPosition() then
  [228] getparam 0 .............................. <me>
  [230] pusharglistnoret 1 ...................... <me>
  [232] objcall 257 ............................. me.deleteSelectedItem()
  [235] getlocal 0 .............................. <bDropped>
  [237] pusharglistnoret 1 ...................... <bDropped>
  [239] extcall 52 .............................. return bDropped
  [241] ret
end

on updateSelectedItem me, oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 240 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [  8] not ..................................... <not voidp(me.oSelectedItem)>
  [  9] jmpifz [ 71] ............................ if not voidp(me.oSelectedItem) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 16] pusharglist 1 ........................... <me.oSelectedItem>
  [ 18] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [ 20] jmpifz [ 71] ............................ if me.oSelectedItem.getDrag() then
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 27] pusharglist 1 ........................... <me.oSelectedItem>
  [ 29] objcall 27 .............................. <me.oSelectedItem.isWallItem()>
  [ 31] jmpifz [ 38] ............................ if me.oSelectedItem.isWallItem() then
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 52 .............................. return 
  [ 38] getglobal 172 ........................... <ElementMgr>
  [ 40] pusharglist 1 ........................... <ElementMgr>
  [ 42] objcall 524 ............................. <ElementMgr.mouseIsOverBackpack()>
  [ 45] jmpifz [ 52] ............................ if ElementMgr.mouseIsOverBackpack() then
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 52 .............................. return 
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 56] getparam 1 .............................. <oSquare>
  [ 58] pusharglist 2 ........................... <me.oSelectedItem, oSquare>
  [ 60] objcall 528 ............................. <me.oSelectedItem.placeItem(oSquare)>
  [ 63] setlocal 0 .............................. bSuccess = me.oSelectedItem.placeItem(oSquare)
  [ 65] getlocal 0 .............................. <bSuccess>
  [ 67] pusharglistnoret 1 ...................... <bSuccess>
  [ 69] extcall 52 .............................. return bSuccess
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 1 ...................... <0>
  [ 74] extcall 52 .............................. return 0
  [ 76] ret
end

on getSquareOffsets me, oItem, oSquare
  [  0] getparam 1 .............................. <oItem>
  [  2] pusharglist 1 ........................... <oItem>
  [  4] objcall 529 ............................. <oItem.getOccupiedSquares()>
  [  7] setlocal 0 .............................. aOccupiedSquares = oItem.getOccupiedSquares()
  [  9] getparam 1 .............................. <oItem>
  [ 11] pusharglist 1 ........................... <oItem>
  [ 13] objcall 530 ............................. <oItem.getGridX()>
  [ 16] setlocal 1 .............................. iGridX = oItem.getGridX()
  [ 18] getparam 1 .............................. <oItem>
  [ 20] pusharglist 1 ........................... <oItem>
  [ 22] objcall 531 ............................. <oItem.getGridZ()>
  [ 25] setlocal 2 .............................. iGridZ = oItem.getGridZ()
  [ 27] getparam 2 .............................. <oSquare>
  [ 29] getobjprop 432 .......................... <oSquare.iCol>
  [ 32] getlocal 1 .............................. <iGridX>
  [ 34] sub ..................................... <oSquare.iCol - iGridX>
  [ 35] setlocal 3 .............................. iXDif = oSquare.iCol - iGridX
  [ 37] getparam 2 .............................. <oSquare>
  [ 39] getobjprop 431 .......................... <oSquare.iRow>
  [ 42] getlocal 2 .............................. <iGridZ>
  [ 44] sub ..................................... <oSquare.iRow - iGridZ>
  [ 45] setlocal 4 .............................. iZDif = oSquare.iRow - iGridZ
  [ 47] pusharglist 0 ........................... <[]>
  [ 49] pushlist ................................ <[]>
  [ 50] setlocal 5 .............................. aDifList = []
  [ 52] getlocal 0 .............................. <aOccupiedSquares>
  [ 54] peek 0
  [ 56] pusharglist 1
  [ 58] extcall 155
  [ 60] pushint8 1
  [ 62] peek 0
  [ 64] peek 2
  [ 66] lteq
  [ 67] jmpifz [142] ............................ repeat with i in aOccupiedSquares
  [ 70] peek 2
  [ 72] peek 1
  [ 74] pusharglist 2
  [ 76] extcall 72
  [ 78] setlocal 6
  [ 80] getlocal 6 .............................. <i>
  [ 82] pusharglist 1 ........................... <i>
  [ 84] extcall 59 .............................. <voidp(i)>
  [ 86] jmpifz [ 92] ............................ if voidp(i) then
  [ 89] jmp [137] ............................... next repeat
  [ 92] getparam 0 .............................. <me>
  [ 94] getchainedprop 136 ...................... <me.oGrid>
  [ 96] getlocal 6 .............................. <i>
  [ 98] getobjprop 431 .......................... <i.iRow>
  [101] getlocal 4 .............................. <iZDif>
  [103] add ..................................... <i.iRow + iZDif>
  [104] getlocal 6 .............................. <i>
  [106] getobjprop 432 .......................... <i.iCol>
  [109] getlocal 3 .............................. <iXDif>
  [111] add ..................................... <i.iCol + iXDif>
  [112] pusharglist 3 ........................... <me.oGrid, i.iRow + iZDif, i.iCol + iXDif>
  [114] objcall 532 ............................. <me.oGrid.getSquareByRowCol(i.iRow + iZDif, i.iCol + iXDif)>
  [117] setlocal 7 .............................. oDifSquare = me.oGrid.getSquareByRowCol(i.iRow + iZDif, i.iCol + iXDif)
  [119] getlocal 7 .............................. <oDifSquare>
  [121] pusharglist 1 ........................... <oDifSquare>
  [123] extcall 59 .............................. <voidp(oDifSquare)>
  [125] not ..................................... <not voidp(oDifSquare)>
  [126] jmpifz [137] ............................ if not voidp(oDifSquare) then
  [129] getlocal 5 .............................. <aDifList>
  [131] getlocal 7 .............................. <oDifSquare>
  [133] pusharglistnoret 2 ...................... <aDifList, oDifSquare>
  [135] objcall 140 ............................. aDifList.add(oDifSquare)
  [137] pushint8 1
  [139] add
  [140] endrepeat [ 62]
  [142] pop 3
  [144] getlocal 5 .............................. <aDifList>
  [146] pusharglistnoret 1 ...................... <aDifList>
  [148] extcall 52 .............................. return aDifList
  [150] ret
end

on addSelectedItemToTrade me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 240 .......................... <me.oSelectedItem>
  [  4] pusharglist 1 ........................... <me.oSelectedItem>
  [  6] extcall 59 .............................. <voidp(me.oSelectedItem)>
  [  8] jmpifz [ 21] ............................ if voidp(me.oSelectedItem) then
  [ 11] pushcons 51 ............................. <"addSelectedItemToTrade() selected item was void">
  [ 13] pusharglistnoret 1 ...................... <"addSelectedItemToTrade() selected item was void">
  [ 15] extcall 168 ............................. put "addSelectedItemToTrade() selected item was void"
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 52 .............................. return 
  [ 21] getparam 0 .............................. <me>
  [ 23] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 25] pusharglist 1 ........................... <me.oSelectedItem>
  [ 27] objcall 26 .............................. <me.oSelectedItem.isFurniItem()>
  [ 29] not ..................................... <not me.oSelectedItem.isFurniItem()>
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 34] pusharglist 1 ........................... <me.oSelectedItem>
  [ 36] objcall 27 .............................. <me.oSelectedItem.isWallItem()>
  [ 38] not ..................................... <not me.oSelectedItem.isWallItem()>
  [ 39] and ..................................... <not me.oSelectedItem.isFurniItem() and not me.oSelectedItem.isWallItem()>
  [ 40] jmpifz [ 53] ............................ if not me.oSelectedItem.isFurniItem() and not me.oSelectedItem.isWallItem() then
  [ 43] pushcons 52 ............................. <"addSelectedItemToTrade() NOT FURNI AND NOT WALL ITEM">
  [ 45] pusharglistnoret 1 ...................... <"addSelectedItemToTrade() NOT FURNI AND NOT WALL ITEM">
  [ 47] extcall 168 ............................. put "addSelectedItemToTrade() NOT FURNI AND NOT WALL ITEM"
  [ 49] pusharglistnoret 0 ...................... <>
  [ 51] extcall 52 .............................. return 
  [ 53] getparam 0 .............................. <me>
  [ 55] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 57] pusharglist 1 ........................... <me.oSelectedItem>
  [ 59] objcall 255 ............................. <me.oSelectedItem.getDrag()>
  [ 61] not ..................................... <not me.oSelectedItem.getDrag()>
  [ 62] jmpifz [ 75] ............................ if not me.oSelectedItem.getDrag() then
  [ 65] pushcons 53 ............................. <"addSelectedItemToTrade() NOT DRAG">
  [ 67] pusharglistnoret 1 ...................... <"addSelectedItemToTrade() NOT DRAG">
  [ 69] extcall 168 ............................. put "addSelectedItemToTrade() NOT DRAG"
  [ 71] pusharglistnoret 0 ...................... <>
  [ 73] extcall 52 .............................. return 
  [ 75] getparam 0 .............................. <me>
  [ 77] getchainedprop 240 ...................... <me.oSelectedItem>
  [ 79] pusharglist 1 ........................... <me.oSelectedItem>
  [ 81] objcall 249 ............................. <me.oSelectedItem.getPosId()>
  [ 83] setlocal 0 .............................. iPosId = me.oSelectedItem.getPosId()
  [ 85] getglobal 64 ............................ <oStudio>
  [ 87] getlocal 0 .............................. <iPosId>
  [ 89] pusharglistnoret 2 ...................... <oStudio, iPosId>
  [ 91] objcall 540 ............................. oStudio.sendAddToTrade(iPosId)
  [ 94] getparam 0 .............................. <me>
  [ 96] pusharglistnoret 1 ...................... <me>
  [ 98] objcall 257 ............................. me.deleteSelectedItem()
  [101] ret
end

on getItemByPossessionId me, iPosId
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 399 ...................... <me.oFurniture>
  [  5] getparam 1 .............................. <iPosId>
  [  7] pusharglist 2 ........................... <me.oFurniture, iPosId>
  [  9] objcall 319 ............................. <me.oFurniture.getItemByPossessionId(iPosId)>
  [ 12] setlocal 0 .............................. oItem = me.oFurniture.getItemByPossessionId(iPosId)
  [ 14] getlocal 0 .............................. <oItem>
  [ 16] pusharglist 1 ........................... <oItem>
  [ 18] extcall 59 .............................. <voidp(oItem)>
  [ 20] not ..................................... <not voidp(oItem)>
  [ 21] jmpifz [ 30] ............................ if not voidp(oItem) then
  [ 24] getlocal 0 .............................. <oItem>
  [ 26] pusharglistnoret 1 ...................... <oItem>
  [ 28] extcall 52 .............................. return oItem
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 396 ...................... <me.oWallItems>
  [ 35] getparam 1 .............................. <iPosId>
  [ 37] pusharglist 2 ........................... <me.oWallItems, iPosId>
  [ 39] objcall 319 ............................. <me.oWallItems.getItemByPossessionId(iPosId)>
  [ 42] setlocal 0 .............................. oItem = me.oWallItems.getItemByPossessionId(iPosId)
  [ 44] getlocal 0 .............................. <oItem>
  [ 46] pusharglist 1 ........................... <oItem>
  [ 48] extcall 59 .............................. <voidp(oItem)>
  [ 50] not ..................................... <not voidp(oItem)>
  [ 51] jmpifz [ 60] ............................ if not voidp(oItem) then
  [ 54] getlocal 0 .............................. <oItem>
  [ 56] pusharglistnoret 1 ...................... <oItem>
  [ 58] extcall 52 .............................. return oItem
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 397 ...................... <me.oRugs>
  [ 65] getparam 1 .............................. <iPosId>
  [ 67] pusharglist 2 ........................... <me.oRugs, iPosId>
  [ 69] objcall 319 ............................. <me.oRugs.getItemByPossessionId(iPosId)>
  [ 72] setlocal 0 .............................. oItem = me.oRugs.getItemByPossessionId(iPosId)
  [ 74] getlocal 0 .............................. <oItem>
  [ 76] pusharglist 1 ........................... <oItem>
  [ 78] extcall 59 .............................. <voidp(oItem)>
  [ 80] not ..................................... <not voidp(oItem)>
  [ 81] jmpifz [ 90] ............................ if not voidp(oItem) then
  [ 84] getlocal 0 .............................. <oItem>
  [ 86] pusharglistnoret 1 ...................... <oItem>
  [ 88] extcall 52 .............................. return oItem
  [ 90] pusharglist 0 ........................... <>
  [ 92] extcall 238 ............................. <VOID>
  [ 94] pusharglistnoret 1 ...................... <VOID>
  [ 96] extcall 52 .............................. return VOID
  [ 98] ret
end

on calcMouseToSquare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 321 ............................. <me.calcMouseToGridPoint()>
  [  7] setlocal 0 .............................. oGridPoint = me.calcMouseToGridPoint()
  [  9] getparam 0 .............................. <me>
  [ 11] getchainedprop 136 ...................... <me.oGrid>
  [ 13] getlocal 0 .............................. <oGridPoint>
  [ 15] getobjprop 35 ........................... <oGridPoint.x>
  [ 17] getlocal 0 .............................. <oGridPoint>
  [ 19] getobjprop 417 .......................... <oGridPoint.z>
  [ 22] pusharglist 3 ........................... <me.oGrid, oGridPoint.x, oGridPoint.z>
  [ 24] objcall 418 ............................. <me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)>
  [ 27] setlocal 1 .............................. oSquare = me.oGrid.getSquareByXZ(oGridPoint.x, oGridPoint.z)
  [ 29] getlocal 1 .............................. <oSquare>
  [ 31] pusharglistnoret 1 ...................... <oSquare>
  [ 33] extcall 52 .............................. return oSquare
  [ 35] ret
end

on calcMouseToGridPoint me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <>
  [  4] thebuiltin 542 .......................... <the mouseH>
  [  7] pusharglist 0 ........................... <>
  [  9] thebuiltin 543 .......................... <the mouseV>
  [ 12] pusharglist 2 ........................... <the mouseH, the mouseV>
  [ 14] extcall 39 .............................. <point(the mouseH, the mouseV)>
  [ 16] pusharglist 2 ........................... <me, point(the mouseH, the mouseV)>
  [ 18] objcall 322 ............................. <me.calcViewToGridPoint(point(the mouseH, the mouseV))>
  [ 21] setlocal 0 .............................. oGridPoint = me.calcViewToGridPoint(point(the mouseH, the mouseV))
  [ 23] getlocal 0 .............................. <oGridPoint>
  [ 25] pusharglistnoret 1 ...................... <oGridPoint>
  [ 27] extcall 52 .............................. return oGridPoint
  [ 29] ret
end

on calcViewToGridPoint me, oViewPoint
  [  0] getparam 1 .............................. <oViewPoint>
  [  2] getobjprop 143 .......................... <oViewPoint.locH>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 355 .......................... <me.iXOff>
  [  9] sub ..................................... <oViewPoint.locH - me.iXOff>
  [ 10] setlocal 0 .............................. iViewX = oViewPoint.locH - me.iXOff
  [ 12] getparam 1 .............................. <oViewPoint>
  [ 14] getobjprop 122 .......................... <oViewPoint.locV>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 357 .......................... <me.iYOff>
  [ 21] sub ..................................... <oViewPoint.locV - me.iYOff>
  [ 22] setlocal 1 .............................. iViewY = oViewPoint.locV - me.iYOff
  [ 24] getlocal 0 .............................. <iViewX>
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 352 .......................... <me.fCosY>
  [ 31] div ..................................... <iViewX / me.fCosY>
  [ 32] getlocal 1 .............................. <iViewY>
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 349 .......................... <me.fSinY>
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 350 .......................... <me.fSinX>
  [ 44] mul ..................................... <me.fSinY * me.fSinX>
  [ 45] div ..................................... <iViewY / (me.fSinY * me.fSinX)>
  [ 46] sub ..................................... <(iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))>
  [ 47] pushint8 1 .............................. <1>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 352 .......................... <me.fCosY>
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 349 .......................... <me.fSinY>
  [ 59] div ..................................... <me.fCosY / me.fSinY>
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 349 .......................... <me.fSinY>
  [ 65] getparam 0 .............................. <me>
  [ 67] getobjprop 352 .......................... <me.fCosY>
  [ 70] div ..................................... <me.fSinY / me.fCosY>
  [ 71] add ..................................... <(me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)>
  [ 72] div ..................................... <1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))>
  [ 73] mul ..................................... <((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)))>
  [ 74] pusharglist 1 ........................... <((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY)))>
  [ 76] extcall 387 ............................. <float(((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))))>
  [ 79] setlocal 2 .............................. iZ = float(((iViewX / me.fCosY) - (iViewY / (me.fSinY * me.fSinX))) * (1 / ((me.fCosY / me.fSinY) + (me.fSinY / me.fCosY))))
  [ 81] pushint8 1 .............................. <1>
  [ 83] getparam 0 .............................. <me>
  [ 85] getobjprop 352 .......................... <me.fCosY>
  [ 88] div ..................................... <1 / me.fCosY>
  [ 89] getlocal 0 .............................. <iViewX>
  [ 91] getlocal 2 .............................. <iZ>
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 349 .......................... <me.fSinY>
  [ 98] mul ..................................... <iZ * me.fSinY>
  [ 99] sub ..................................... <iViewX - (iZ * me.fSinY)>
  [100] mul ..................................... <1 / me.fCosY * (iViewX - (iZ * me.fSinY))>
  [101] pusharglist 1 ........................... <1 / me.fCosY * (iViewX - (iZ * me.fSinY))>
  [103] extcall 387 ............................. <float(1 / me.fCosY * (iViewX - (iZ * me.fSinY)))>
  [106] setlocal 3 .............................. iX = float(1 / me.fCosY * (iViewX - (iZ * me.fSinY)))
  [108] getlocal 3 .............................. <iX>
  [110] pushzero ................................ <0>
  [111] getlocal 2 .............................. <iZ>
  [113] pusharglist 3 ........................... <iX, 0, iZ>
  [115] extcall 544 ............................. <vector(iX, 0, iZ)>
  [118] pusharglistnoret 1 ...................... <vector(iX, 0, iZ)>
  [120] extcall 52 .............................. return vector(iX, 0, iZ)
  [122] ret
end

on calcGridToViewPoint me, oGridPoint
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 54 ............................. <"calcViewPoint()">
  [  4] pusharglistnoret 2 ...................... <me, "calcViewPoint()">
  [  6] objcall 332 ............................. me.debug("calcViewPoint()")
  [  9] getparam 0 .............................. <me>
  [ 11] getparam 1 .............................. <oGridPoint>
  [ 13] pusharglist 2 ........................... <me, oGridPoint>
  [ 15] objcall 325 ............................. <me.calcViewX(oGridPoint)>
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <oGridPoint>
  [ 22] pusharglist 2 ........................... <me, oGridPoint>
  [ 24] objcall 326 ............................. <me.calcViewY(oGridPoint)>
  [ 27] pusharglist 2 ........................... <me.calcViewX(oGridPoint), me.calcViewY(oGridPoint)>
  [ 29] extcall 39 .............................. <point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))>
  [ 31] pusharglistnoret 1 ...................... <point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))>
  [ 33] extcall 52 .............................. return point(me.calcViewX(oGridPoint), me.calcViewY(oGridPoint))
  [ 35] ret
end

on calcGridToViewPoints me, oGridPoints
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 55 ............................. <"calcViewPoints()">
  [  4] pusharglistnoret 2 ...................... <me, "calcViewPoints()">
  [  6] objcall 332 ............................. me.debug("calcViewPoints()")
  [  9] pushcons 56 ............................. <"Quad">
  [ 11] pusharglist 1 ........................... <"Quad">
  [ 13] extcall 194 ............................. <script("Quad")>
  [ 15] pusharglist 1 ........................... <script("Quad")>
  [ 17] extcall 0 ............................... <new(script("Quad"))>
  [ 19] setlocal 0 .............................. oViewPoints = new(script("Quad"))
  [ 21] getlocal 0 .............................. <oViewPoints>
  [ 23] getparam 0 .............................. <me>
  [ 25] getparam 1 .............................. <oGridPoints>
  [ 27] getobjprop 550 .......................... <oGridPoints.tl>
  [ 30] pusharglist 2 ........................... <me, oGridPoints.tl>
  [ 32] objcall 551 ............................. <me.calcViewPoint(oGridPoints.tl)>
  [ 35] setobjprop 550 .......................... oViewPoints.tl = me.calcViewPoint(oGridPoints.tl)
  [ 38] getlocal 0 .............................. <oViewPoints>
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 1 .............................. <oGridPoints>
  [ 44] getobjprop 552 .......................... <oGridPoints.tr>
  [ 47] pusharglist 2 ........................... <me, oGridPoints.tr>
  [ 49] objcall 551 ............................. <me.calcViewPoint(oGridPoints.tr)>
  [ 52] setobjprop 552 .......................... oViewPoints.tr = me.calcViewPoint(oGridPoints.tr)
  [ 55] getlocal 0 .............................. <oViewPoints>
  [ 57] getparam 0 .............................. <me>
  [ 59] getparam 1 .............................. <oGridPoints>
  [ 61] getobjprop 553 .......................... <oGridPoints.br>
  [ 64] pusharglist 2 ........................... <me, oGridPoints.br>
  [ 66] objcall 551 ............................. <me.calcViewPoint(oGridPoints.br)>
  [ 69] setobjprop 553 .......................... oViewPoints.br = me.calcViewPoint(oGridPoints.br)
  [ 72] getlocal 0 .............................. <oViewPoints>
  [ 74] getparam 0 .............................. <me>
  [ 76] getparam 1 .............................. <oGridPoints>
  [ 78] getobjprop 554 .......................... <oGridPoints.bl>
  [ 81] pusharglist 2 ........................... <me, oGridPoints.bl>
  [ 83] objcall 551 ............................. <me.calcViewPoint(oGridPoints.bl)>
  [ 86] setobjprop 554 .......................... oViewPoints.bl = me.calcViewPoint(oGridPoints.bl)
  [ 89] getlocal 0 .............................. <oViewPoints>
  [ 91] pusharglistnoret 1 ...................... <oViewPoints>
  [ 93] extcall 52 .............................. return oViewPoints
  [ 95] ret
end

on calcViewX me, o3dPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 355 .......................... <me.iXOff>
  [  5] getparam 1 .............................. <o3dPoint>
  [  7] getobjprop 417 .......................... <o3dPoint.z>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 349 .......................... <me.fSinY>
  [ 15] mul ..................................... <o3dPoint.z * me.fSinY>
  [ 16] getparam 1 .............................. <o3dPoint>
  [ 18] getobjprop 35 ........................... <o3dPoint.x>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 352 .......................... <me.fCosY>
  [ 25] mul ..................................... <o3dPoint.x * me.fCosY>
  [ 26] add ..................................... <(o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)>
  [ 27] add ..................................... <me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY))>
  [ 28] pusharglist 1 ........................... <me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY))>
  [ 30] extcall 69 .............................. <integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))>
  [ 32] pusharglistnoret 1 ...................... <integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))>
  [ 34] extcall 52 .............................. return integer(me.iXOff + ((o3dPoint.z * me.fSinY) + (o3dPoint.x * me.fCosY)))
  [ 36] ret
end

on calcViewY me, o3dPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 357 .......................... <me.iYOff>
  [  5] getparam 1 .............................. <o3dPoint>
  [  7] getobjprop 36 ........................... <o3dPoint.y>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 353 .......................... <me.fCosX>
  [ 14] mul ..................................... <o3dPoint.y * me.fCosX>
  [ 15] getparam 1 .............................. <o3dPoint>
  [ 17] getobjprop 417 .......................... <o3dPoint.z>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 352 .......................... <me.fCosY>
  [ 25] mul ..................................... <o3dPoint.z * me.fCosY>
  [ 26] getparam 1 .............................. <o3dPoint>
  [ 28] getobjprop 35 ........................... <o3dPoint.x>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 349 .......................... <me.fSinY>
  [ 35] mul ..................................... <o3dPoint.x * me.fSinY>
  [ 36] sub ..................................... <(o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)>
  [ 37] pushint8 2 .............................. <2>
  [ 39] div ..................................... <((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2>
  [ 40] sub ..................................... <(o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)>
  [ 41] add ..................................... <me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2))>
  [ 42] pusharglist 1 ........................... <me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2))>
  [ 44] extcall 69 .............................. <integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))>
  [ 46] pusharglistnoret 1 ...................... <integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))>
  [ 48] extcall 52 .............................. return integer(me.iYOff + ((o3dPoint.y * me.fCosX) - (((o3dPoint.z * me.fCosY) - (o3dPoint.x * me.fSinY)) / 2)))
  [ 50] ret
end

on initScene me, oScene
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 391 ...................... <me.oBackground>
  [  5] getparam 1 .............................. <oScene>
  [  7] pushcons 8 .............................. <"Background">
  [  9] pusharglist 2 ........................... <oScene, "Background">
  [ 11] extcall 433 ............................. <getNode(oScene, "Background")>
  [ 14] pusharglistnoret 2 ...................... <me.oBackground, getNode(oScene, "Background")>
  [ 16] objcall 1 ............................... me.oBackground.init(getNode(oScene, "Background"))
  [ 18] getparam 0 .............................. <me>
  [ 20] getchainedprop 392 ...................... <me.oFloor>
  [ 23] getparam 1 .............................. <oScene>
  [ 25] pushcons 9 .............................. <"Floor">
  [ 27] pusharglist 2 ........................... <oScene, "Floor">
  [ 29] extcall 433 ............................. <getNode(oScene, "Floor")>
  [ 32] pusharglistnoret 2 ...................... <me.oFloor, getNode(oScene, "Floor")>
  [ 34] objcall 1 ............................... me.oFloor.init(getNode(oScene, "Floor"))
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 394 ...................... <me.oDoor>
  [ 41] getparam 1 .............................. <oScene>
  [ 43] pushcons 11 ............................. <"Door">
  [ 45] pusharglist 2 ........................... <oScene, "Door">
  [ 47] extcall 433 ............................. <getNode(oScene, "Door")>
  [ 50] pusharglistnoret 2 ...................... <me.oDoor, getNode(oScene, "Door")>
  [ 52] objcall 1 ............................... me.oDoor.init(getNode(oScene, "Door"))
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 393 ...................... <me.oWall>
  [ 59] getparam 1 .............................. <oScene>
  [ 61] pushcons 57 ............................. <"WAll">
  [ 63] pusharglist 2 ........................... <oScene, "WAll">
  [ 65] extcall 433 ............................. <getNode(oScene, "WAll")>
  [ 68] pusharglistnoret 2 ...................... <me.oWall, getNode(oScene, "WAll")>
  [ 70] objcall 1 ............................... me.oWall.init(getNode(oScene, "WAll"))
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 395 ...................... <me.oWindow>
  [ 77] getparam 1 .............................. <oScene>
  [ 79] pushcons 12 ............................. <"Window">
  [ 81] pusharglist 2 ........................... <oScene, "Window">
  [ 83] extcall 433 ............................. <getNode(oScene, "Window")>
  [ 86] pusharglistnoret 2 ...................... <me.oWindow, getNode(oScene, "Window")>
  [ 88] objcall 1 ............................... me.oWindow.init(getNode(oScene, "Window"))
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 396 ...................... <me.oWallItems>
  [ 95] getparam 1 .............................. <oScene>
  [ 97] pushcons 13 ............................. <"WallItems">
  [ 99] pusharglist 2 ........................... <oScene, "WallItems">
  [101] extcall 433 ............................. <getNode(oScene, "WallItems")>
  [104] pusharglistnoret 2 ...................... <me.oWallItems, getNode(oScene, "WallItems")>
  [106] objcall 1 ............................... me.oWallItems.init(getNode(oScene, "WallItems"))
  [108] getparam 0 .............................. <me>
  [110] getchainedprop 397 ...................... <me.oRugs>
  [113] getparam 1 .............................. <oScene>
  [115] pushcons 14 ............................. <"Rugs">
  [117] pusharglist 2 ........................... <oScene, "Rugs">
  [119] extcall 433 ............................. <getNode(oScene, "Rugs")>
  [122] pusharglistnoret 2 ...................... <me.oRugs, getNode(oScene, "Rugs")>
  [124] objcall 1 ............................... me.oRugs.init(getNode(oScene, "Rugs"))
  [126] getparam 0 .............................. <me>
  [128] getchainedprop 398 ...................... <me.oHiliter>
  [131] getparam 1 .............................. <oScene>
  [133] pushcons 15 ............................. <"Hiliter">
  [135] pusharglist 2 ........................... <oScene, "Hiliter">
  [137] extcall 433 ............................. <getNode(oScene, "Hiliter")>
  [140] pusharglistnoret 2 ...................... <me.oHiliter, getNode(oScene, "Hiliter")>
  [142] objcall 1 ............................... me.oHiliter.init(getNode(oScene, "Hiliter"))
  [144] getparam 0 .............................. <me>
  [146] getchainedprop 399 ...................... <me.oFurniture>
  [149] getparam 1 .............................. <oScene>
  [151] pushcons 16 ............................. <"Furniture">
  [153] pusharglist 2 ........................... <oScene, "Furniture">
  [155] extcall 433 ............................. <getNode(oScene, "Furniture")>
  [158] pusharglistnoret 2 ...................... <me.oFurniture, getNode(oScene, "Furniture")>
  [160] objcall 1 ............................... me.oFurniture.init(getNode(oScene, "Furniture"))
  [162] getparam 0 .............................. <me>
  [164] getchainedprop 400 ...................... <me.oStaticItems>
  [167] getparam 1 .............................. <oScene>
  [169] pushcons 17 ............................. <"StaticItems">
  [171] pusharglist 2 ........................... <oScene, "StaticItems">
  [173] extcall 433 ............................. <getNode(oScene, "StaticItems")>
  [176] pusharglistnoret 2 ...................... <me.oStaticItems, getNode(oScene, "StaticItems")>
  [178] objcall 1 ............................... me.oStaticItems.init(getNode(oScene, "StaticItems"))
  [180] getparam 0 .............................. <me>
  [182] getchainedprop 401 ...................... <me.oAvatars>
  [185] getparam 1 .............................. <oScene>
  [187] pushcons 18 ............................. <"Avatars">
  [189] pusharglist 2 ........................... <oScene, "Avatars">
  [191] extcall 433 ............................. <getNode(oScene, "Avatars")>
  [194] pusharglistnoret 2 ...................... <me.oAvatars, getNode(oScene, "Avatars")>
  [196] objcall 1 ............................... me.oAvatars.init(getNode(oScene, "Avatars"))
  [198] getparam 0 .............................. <me>
  [200] getchainedprop 404 ...................... <me.oVoteItems>
  [203] pusharglistnoret 1 ...................... <me.oVoteItems>
  [205] objcall 1 ............................... me.oVoteItems.init()
  [207] getglobal 60 ............................ <oStudioMap>
  [209] pusharglist 1 ........................... <oStudioMap>
  [211] objcall 558 ............................. <oStudioMap.isWayneEnt()>
  [214] jmpifz [227] ............................ if oStudioMap.isWayneEnt() then
  [217] getparam 0 .............................. <me>
  [219] getchainedprop 393 ...................... <me.oWall>
  [222] pusharglistnoret 1 ...................... <me.oWall>
  [224] objcall 559 ............................. me.oWall.hideDisplay()
  [227] getglobal 60 ............................ <oStudioMap>
  [229] pusharglist 1 ........................... <oStudioMap>
  [231] objcall 61 .............................. <oStudioMap.isPrivate()>
  [233] jmpifz [254] ............................ if oStudioMap.isPrivate() then
  [236] getparam 0 .............................. <me>
  [238] getchainedprop 402 ...................... <me.oStudioInfo>
  [241] pusharglistnoret 1 ...................... <me.oStudioInfo>
  [243] objcall 1 ............................... me.oStudioInfo.init()
  [245] getparam 0 .............................. <me>
  [247] getchainedprop 403 ...................... <me.oInfoStand>
  [250] pusharglistnoret 1 ...................... <me.oInfoStand>
  [252] objcall 1 ............................... me.oInfoStand.init()
  [254] ret
end

on generateXml me
  [  0] pushcons 58 ............................. <"XML">
  [  2] pusharglist 1 ........................... <"XML">
  [  4] extcall 341 ............................. <newObject("XML")>
  [  7] setlocal 0 .............................. oNewXml = newObject("XML")
  [  9] getparam 0 .............................. <me>
  [ 11] getchainedprop 381 ...................... <me.oSceneXml>
  [ 14] getobjprop 384 .......................... <me.oSceneXml.firstChild>
  [ 17] setlocal 1 .............................. oRoot = me.oSceneXml.firstChild
  [ 19] getlocal 0 .............................. <oNewXml>
  [ 21] pushcons 59 ............................. <"Studio">
  [ 23] pusharglist 2 ........................... <oNewXml, "Studio">
  [ 25] objcall 560 ............................. <oNewXml.createElement("Studio")>
  [ 28] setlocal 2 .............................. oNewRoot = oNewXml.createElement("Studio")
  [ 30] getlocal 2 .............................. <oNewRoot>
  [ 32] getlocal 1 .............................. <oRoot>
  [ 34] getobjprop 385 .......................... <oRoot.attributes>
  [ 37] setobjprop 385 .......................... oNewRoot.attributes = oRoot.attributes
  [ 40] getlocal 1 .............................. <oRoot>
  [ 42] getobjprop 561 .......................... <oRoot.childNodes>
  [ 45] setlocal 3 .............................. aNodes = oRoot.childNodes
  [ 47] pushzero ................................ <0>
  [ 48] setlocal 4
  [ 50] getlocal 4
  [ 52] getlocal 3 .............................. <aNodes>
  [ 54] getobjprop 208 .......................... <aNodes.length>
  [ 56] pushint8 1 .............................. <1>
  [ 58] sub ..................................... <aNodes.length - 1>
  [ 59] lteq
  [ 60] jmpifz [137] ............................ repeat with i = 0 to aNodes.length - 1
  [ 63] getlocal 3 .............................. <aNodes>
  [ 65] getlocal 4 .............................. <i>
  [ 67] pusharglist 2 ........................... <aNodes, i>
  [ 69] objcall 72 .............................. <aNodes[i]>
  [ 71] setlocal 5 .............................. oNode = aNodes[i]
  [ 73] getlocal 5 .............................. <oNode>
  [ 75] getobjprop 562 .......................... <oNode.nodeName>
  [ 78] peek 0 .................................. case oNode.nodeName of
  [ 80] pushcons 16 ............................. <"Furniture">
  [ 82] eq
  [ 83] jmpifz [110] ............................ (case) "Furniture":
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 399 ...................... <me.oFurniture>
  [ 91] pusharglist 1 ........................... <me.oFurniture>
  [ 93] objcall 328 ............................. <me.oFurniture.generateXml()>
  [ 96] setlocal 6 .............................. oNewNode = me.oFurniture.generateXml()
  [ 98] getlocal 2 .............................. <oNewRoot>
  [100] getlocal 6 .............................. <oNewNode>
  [102] pusharglistnoret 2 ...................... <oNewRoot, oNewNode>
  [104] objcall 563 ............................. oNewRoot.appendChild(oNewNode)
  [107] jmp [126] ............................... (case) otherwise:
  [110] getlocal 2 .............................. <oNewRoot>
  [112] getlocal 5 .............................. <oNode>
  [114] pushint8 1 .............................. <1>
  [116] pusharglist 2 ........................... <oNode, 1>
  [118] objcall 564 ............................. <oNode.cloneNode(1)>
  [121] pusharglistnoret 2 ...................... <oNewRoot, oNode.cloneNode(1)>
  [123] objcall 563 ............................. oNewRoot.appendChild(oNode.cloneNode(1))
  [126] pop 1 ................................... end case
  [128] pushint8 1
  [130] getlocal 4
  [132] add
  [133] setlocal 4
  [135] endrepeat [ 50]
  [137] getlocal 0 .............................. <oNewXml>
  [139] getlocal 2 .............................. <oNewRoot>
  [141] pusharglistnoret 2 ...................... <oNewXml, oNewRoot>
  [143] objcall 563 ............................. oNewXml.appendChild(oNewRoot)
  [146] getlocal 0 .............................. <oNewXml>
  [148] pusharglistnoret 1 ...................... <oNewXml>
  [150] extcall 52 .............................. return oNewXml
  [152] ret
end

on destroyScene me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 330 ............................. me.destroyObjects()
  [  7] getmovieprop 406 ........................ <the actorList>
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglistnoret 2 ...................... <the actorList, me>
  [ 14] objcall 571 ............................. (the actorList).deleteOne(me)
  [ 17] pusharglist 0 ........................... <>
  [ 19] extcall 238 ............................. <VOID>
  [ 21] setglobal 133 ........................... oIsoScene = VOID
  [ 23] ret
end

on destroyObjects me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 391 .......................... <me.oBackground>
  [  5] pusharglist 1 ........................... <me.oBackground>
  [  7] extcall 59 .............................. <voidp(me.oBackground)>
  [  9] not ..................................... <not voidp(me.oBackground)>
  [ 10] jmpifz [ 22] ............................ if not voidp(me.oBackground) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 391 ...................... <me.oBackground>
  [ 18] pusharglistnoret 1 ...................... <me.oBackground>
  [ 20] objcall 11 .............................. me.oBackground.destroy()
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 392 .......................... <me.oFloor>
  [ 27] pusharglist 1 ........................... <me.oFloor>
  [ 29] extcall 59 .............................. <voidp(me.oFloor)>
  [ 31] not ..................................... <not voidp(me.oFloor)>
  [ 32] jmpifz [ 44] ............................ if not voidp(me.oFloor) then
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 392 ...................... <me.oFloor>
  [ 40] pusharglistnoret 1 ...................... <me.oFloor>
  [ 42] objcall 11 .............................. me.oFloor.destroy()
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 393 .......................... <me.oWall>
  [ 49] pusharglist 1 ........................... <me.oWall>
  [ 51] extcall 59 .............................. <voidp(me.oWall)>
  [ 53] not ..................................... <not voidp(me.oWall)>
  [ 54] jmpifz [ 66] ............................ if not voidp(me.oWall) then
  [ 57] getparam 0 .............................. <me>
  [ 59] getchainedprop 393 ...................... <me.oWall>
  [ 62] pusharglistnoret 1 ...................... <me.oWall>
  [ 64] objcall 11 .............................. me.oWall.destroy()
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 394 .......................... <me.oDoor>
  [ 71] pusharglist 1 ........................... <me.oDoor>
  [ 73] extcall 59 .............................. <voidp(me.oDoor)>
  [ 75] not ..................................... <not voidp(me.oDoor)>
  [ 76] jmpifz [ 88] ............................ if not voidp(me.oDoor) then
  [ 79] getparam 0 .............................. <me>
  [ 81] getchainedprop 394 ...................... <me.oDoor>
  [ 84] pusharglistnoret 1 ...................... <me.oDoor>
  [ 86] objcall 11 .............................. me.oDoor.destroy()
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 398 .......................... <me.oHiliter>
  [ 93] pusharglist 1 ........................... <me.oHiliter>
  [ 95] extcall 59 .............................. <voidp(me.oHiliter)>
  [ 97] not ..................................... <not voidp(me.oHiliter)>
  [ 98] jmpifz [110] ............................ if not voidp(me.oHiliter) then
  [101] getparam 0 .............................. <me>
  [103] getchainedprop 398 ...................... <me.oHiliter>
  [106] pusharglistnoret 1 ...................... <me.oHiliter>
  [108] objcall 11 .............................. me.oHiliter.destroy()
  [110] getparam 0 .............................. <me>
  [112] getobjprop 395 .......................... <me.oWindow>
  [115] pusharglist 1 ........................... <me.oWindow>
  [117] extcall 59 .............................. <voidp(me.oWindow)>
  [119] not ..................................... <not voidp(me.oWindow)>
  [120] jmpifz [132] ............................ if not voidp(me.oWindow) then
  [123] getparam 0 .............................. <me>
  [125] getchainedprop 395 ...................... <me.oWindow>
  [128] pusharglistnoret 1 ...................... <me.oWindow>
  [130] objcall 11 .............................. me.oWindow.destroy()
  [132] getparam 0 .............................. <me>
  [134] getobjprop 397 .......................... <me.oRugs>
  [137] pusharglist 1 ........................... <me.oRugs>
  [139] extcall 59 .............................. <voidp(me.oRugs)>
  [141] not ..................................... <not voidp(me.oRugs)>
  [142] jmpifz [154] ............................ if not voidp(me.oRugs) then
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 397 ...................... <me.oRugs>
  [150] pusharglistnoret 1 ...................... <me.oRugs>
  [152] objcall 11 .............................. me.oRugs.destroy()
  [154] getparam 0 .............................. <me>
  [156] getobjprop 399 .......................... <me.oFurniture>
  [159] pusharglist 1 ........................... <me.oFurniture>
  [161] extcall 59 .............................. <voidp(me.oFurniture)>
  [163] not ..................................... <not voidp(me.oFurniture)>
  [164] jmpifz [176] ............................ if not voidp(me.oFurniture) then
  [167] getparam 0 .............................. <me>
  [169] getchainedprop 399 ...................... <me.oFurniture>
  [172] pusharglistnoret 1 ...................... <me.oFurniture>
  [174] objcall 11 .............................. me.oFurniture.destroy()
  [176] getparam 0 .............................. <me>
  [178] getobjprop 396 .......................... <me.oWallItems>
  [181] pusharglist 1 ........................... <me.oWallItems>
  [183] extcall 59 .............................. <voidp(me.oWallItems)>
  [185] not ..................................... <not voidp(me.oWallItems)>
  [186] jmpifz [198] ............................ if not voidp(me.oWallItems) then
  [189] getparam 0 .............................. <me>
  [191] getchainedprop 396 ...................... <me.oWallItems>
  [194] pusharglistnoret 1 ...................... <me.oWallItems>
  [196] objcall 11 .............................. me.oWallItems.destroy()
  [198] getparam 0 .............................. <me>
  [200] getobjprop 400 .......................... <me.oStaticItems>
  [203] pusharglist 1 ........................... <me.oStaticItems>
  [205] extcall 59 .............................. <voidp(me.oStaticItems)>
  [207] not ..................................... <not voidp(me.oStaticItems)>
  [208] jmpifz [220] ............................ if not voidp(me.oStaticItems) then
  [211] getparam 0 .............................. <me>
  [213] getchainedprop 400 ...................... <me.oStaticItems>
  [216] pusharglistnoret 1 ...................... <me.oStaticItems>
  [218] objcall 11 .............................. me.oStaticItems.destroy()
  [220] getparam 0 .............................. <me>
  [222] getobjprop 401 .......................... <me.oAvatars>
  [225] pusharglist 1 ........................... <me.oAvatars>
  [227] extcall 59 .............................. <voidp(me.oAvatars)>
  [229] not ..................................... <not voidp(me.oAvatars)>
  [230] jmpifz [242] ............................ if not voidp(me.oAvatars) then
  [233] getparam 0 .............................. <me>
  [235] getchainedprop 401 ...................... <me.oAvatars>
  [238] pusharglistnoret 1 ...................... <me.oAvatars>
  [240] objcall 11 .............................. me.oAvatars.destroy()
  [242] getparam 0 .............................. <me>
  [244] getobjprop 136 .......................... <me.oGrid>
  [246] pusharglist 1 ........................... <me.oGrid>
  [248] extcall 59 .............................. <voidp(me.oGrid)>
  [250] not ..................................... <not voidp(me.oGrid)>
  [251] jmpifz [262] ............................ if not voidp(me.oGrid) then
  [254] getparam 0 .............................. <me>
  [256] getchainedprop 136 ...................... <me.oGrid>
  [258] pusharglistnoret 1 ...................... <me.oGrid>
  [260] objcall 11 .............................. me.oGrid.destroy()
  [262] getparam 0 .............................. <me>
  [264] getobjprop 134 .......................... <me.oSpriteManager>
  [266] pusharglist 1 ........................... <me.oSpriteManager>
  [268] extcall 59 .............................. <voidp(me.oSpriteManager)>
  [270] not ..................................... <not voidp(me.oSpriteManager)>
  [271] jmpifz [282] ............................ if not voidp(me.oSpriteManager) then
  [274] getparam 0 .............................. <me>
  [276] getchainedprop 134 ...................... <me.oSpriteManager>
  [278] pusharglistnoret 1 ...................... <me.oSpriteManager>
  [280] objcall 11 .............................. me.oSpriteManager.destroy()
  [282] getparam 0 .............................. <me>
  [284] getobjprop 402 .......................... <me.oStudioInfo>
  [287] pusharglist 1 ........................... <me.oStudioInfo>
  [289] extcall 59 .............................. <voidp(me.oStudioInfo)>
  [291] not ..................................... <not voidp(me.oStudioInfo)>
  [292] jmpifz [304] ............................ if not voidp(me.oStudioInfo) then
  [295] getparam 0 .............................. <me>
  [297] getchainedprop 402 ...................... <me.oStudioInfo>
  [300] pusharglistnoret 1 ...................... <me.oStudioInfo>
  [302] objcall 11 .............................. me.oStudioInfo.destroy()
  [304] getparam 0 .............................. <me>
  [306] getobjprop 403 .......................... <me.oInfoStand>
  [309] pusharglist 1 ........................... <me.oInfoStand>
  [311] extcall 59 .............................. <voidp(me.oInfoStand)>
  [313] not ..................................... <not voidp(me.oInfoStand)>
  [314] jmpifz [326] ............................ if not voidp(me.oInfoStand) then
  [317] getparam 0 .............................. <me>
  [319] getchainedprop 403 ...................... <me.oInfoStand>
  [322] pusharglistnoret 1 ...................... <me.oInfoStand>
  [324] objcall 11 .............................. me.oInfoStand.destroy()
  [326] getparam 0 .............................. <me>
  [328] getobjprop 404 .......................... <me.oVoteItems>
  [331] pusharglist 1 ........................... <me.oVoteItems>
  [333] extcall 59 .............................. <voidp(me.oVoteItems)>
  [335] not ..................................... <not voidp(me.oVoteItems)>
  [336] jmpifz [348] ............................ if not voidp(me.oVoteItems) then
  [339] getparam 0 .............................. <me>
  [341] getchainedprop 404 ...................... <me.oVoteItems>
  [344] pusharglistnoret 1 ...................... <me.oVoteItems>
  [346] objcall 11 .............................. me.oVoteItems.destroy()
  [348] getparam 0 .............................. <me>
  [350] getobjprop 465 .......................... <me.oAvatarIndicator>
  [353] pusharglist 1 ........................... <me.oAvatarIndicator>
  [355] extcall 59 .............................. <voidp(me.oAvatarIndicator)>
  [357] not ..................................... <not voidp(me.oAvatarIndicator)>
  [358] jmpifz [371] ............................ if not voidp(me.oAvatarIndicator) then
  [361] getparam 0 .............................. <me>
  [363] getchainedprop 465 ...................... <me.oAvatarIndicator>
  [366] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [368] objcall 466 ............................. me.oAvatarIndicator.destroyItem()
  [371] getparam 0 .............................. <me>
  [373] getobjprop 405 .......................... <me.oTrivia>
  [376] pusharglist 1 ........................... <me.oTrivia>
  [378] extcall 59 .............................. <voidp(me.oTrivia)>
  [380] not ..................................... <not voidp(me.oTrivia)>
  [381] jmpifz [393] ............................ if not voidp(me.oTrivia) then
  [384] getparam 0 .............................. <me>
  [386] getchainedprop 405 ...................... <me.oTrivia>
  [389] pusharglistnoret 1 ...................... <me.oTrivia>
  [391] objcall 11 .............................. me.oTrivia.destroy()
  [393] getparam 0 .............................. <me>
  [395] pusharglist 0 ........................... <>
  [397] extcall 238 ............................. <VOID>
  [399] setobjprop 240 .......................... me.oSelectedItem = VOID
  [401] ret
end

on createAvatarIndicator me, oAvatar
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 465 .......................... <me.oAvatarIndicator>
  [  5] pusharglist 1 ........................... <me.oAvatarIndicator>
  [  7] extcall 59 .............................. <voidp(me.oAvatarIndicator)>
  [  9] not ..................................... <not voidp(me.oAvatarIndicator)>
  [ 10] jmpifz [ 32] ............................ if not voidp(me.oAvatarIndicator) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 465 ...................... <me.oAvatarIndicator>
  [ 18] pusharglistnoret 1 ...................... <me.oAvatarIndicator>
  [ 20] objcall 466 ............................. me.oAvatarIndicator.destroyItem()
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglist 0 ........................... <>
  [ 27] extcall 238 ............................. <VOID>
  [ 29] setobjprop 465 .......................... me.oAvatarIndicator = VOID
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 60 ............................. <"AvatarIndicator">
  [ 36] pusharglist 1 ........................... <"AvatarIndicator">
  [ 38] extcall 194 ............................. <script("AvatarIndicator")>
  [ 40] getparam 1 .............................. <oAvatar>
  [ 42] pusharglist 2 ........................... <script("AvatarIndicator"), oAvatar>
  [ 44] objcall 0 ............................... <script("AvatarIndicator").new(oAvatar)>
  [ 46] setobjprop 465 .......................... me.oAvatarIndicator = script("AvatarIndicator").new(oAvatar)
  [ 49] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 338 .......................... <me.bDebug>
  [  5] getparam 2 .............................. <bForce>
  [  7] or ...................................... <me.bDebug or bForce>
  [  8] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 11] pushcons 61 ............................. <"IsoScene: ">
  [ 13] getparam 1 .............................. <sMessage>
  [ 15] joinstr ................................. <"IsoScene: " & sMessage>
  [ 16] pusharglistnoret 1 ...................... <"IsoScene: " & sMessage>
  [ 18] extcall 168 ............................. put "IsoScene: " & sMessage
  [ 20] ret
end

on getItemsUnderMouse me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aItemsUnderMouse = []
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 399 ...................... <me.oFurniture>
  [ 10] getlocal 0 .............................. <aItemsUnderMouse>
  [ 12] pusharglist 2 ........................... <me.oFurniture, aItemsUnderMouse>
  [ 14] objcall 333 ............................. <me.oFurniture.getItemsUnderMouse(aItemsUnderMouse)>
  [ 17] setlocal 0 .............................. aItemsUnderMouse = me.oFurniture.getItemsUnderMouse(aItemsUnderMouse)
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 401 ...................... <me.oAvatars>
  [ 24] getlocal 0 .............................. <aItemsUnderMouse>
  [ 26] pusharglist 2 ........................... <me.oAvatars, aItemsUnderMouse>
  [ 28] objcall 333 ............................. <me.oAvatars.getItemsUnderMouse(aItemsUnderMouse)>
  [ 31] setlocal 0 .............................. aItemsUnderMouse = me.oAvatars.getItemsUnderMouse(aItemsUnderMouse)
  [ 33] getlocal 0 .............................. <aItemsUnderMouse>
  [ 35] pusharglistnoret 1 ...................... <aItemsUnderMouse>
  [ 37] extcall 52 .............................. return aItemsUnderMouse
  [ 39] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 399 ...................... <me.oFurniture>
  [ 10] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 12] pusharglist 2 ........................... <me.oFurniture, aSpritesUnderMouse>
  [ 14] objcall 334 ............................. <me.oFurniture.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 17] setlocal 0 .............................. aSpritesUnderMouse = me.oFurniture.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 401 ...................... <me.oAvatars>
  [ 24] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 26] pusharglist 2 ........................... <me.oAvatars, aSpritesUnderMouse>
  [ 28] objcall 334 ............................. <me.oAvatars.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 31] setlocal 0 .............................. aSpritesUnderMouse = me.oAvatars.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 396 ...................... <me.oWallItems>
  [ 38] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 40] pusharglist 2 ........................... <me.oWallItems, aSpritesUnderMouse>
  [ 42] objcall 334 ............................. <me.oWallItems.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 45] setlocal 0 .............................. aSpritesUnderMouse = me.oWallItems.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 397 ...................... <me.oRugs>
  [ 52] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 54] pusharglist 2 ........................... <me.oRugs, aSpritesUnderMouse>
  [ 56] objcall 334 ............................. <me.oRugs.getSpritesUnderMouse(aSpritesUnderMouse)>
  [ 59] setlocal 0 .............................. aSpritesUnderMouse = me.oRugs.getSpritesUnderMouse(aSpritesUnderMouse)
  [ 61] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 63] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 65] objcall 574 ............................. aSpritesUnderMouse.sort()
  [ 68] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 70] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 72] extcall 52 .............................. return aSpritesUnderMouse
  [ 74] ret
end

on getObjectsUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aObjectsUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 399 ...................... <me.oFurniture>
  [ 10] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 12] pusharglistnoret 2 ...................... <me.oFurniture, aObjectsUnderMouse>
  [ 14] objcall 335 ............................. me.oFurniture.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 401 ...................... <me.oAvatars>
  [ 22] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 24] pusharglistnoret 2 ...................... <me.oAvatars, aObjectsUnderMouse>
  [ 26] objcall 335 ............................. me.oAvatars.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 396 ...................... <me.oWallItems>
  [ 34] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 36] pusharglistnoret 2 ...................... <me.oWallItems, aObjectsUnderMouse>
  [ 38] objcall 335 ............................. me.oWallItems.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 41] getparam 0 .............................. <me>
  [ 43] getchainedprop 397 ...................... <me.oRugs>
  [ 46] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 48] pusharglistnoret 2 ...................... <me.oRugs, aObjectsUnderMouse>
  [ 50] objcall 335 ............................. me.oRugs.getObjectsUnderMouse(aObjectsUnderMouse)
  [ 53] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 55] pusharglistnoret 1 ...................... <aObjectsUnderMouse>
  [ 57] objcall 574 ............................. aObjectsUnderMouse.sort()
  [ 60] getlocal 0 .............................. <aObjectsUnderMouse>
  [ 62] pusharglistnoret 1 ...................... <aObjectsUnderMouse>
  [ 64] extcall 52 .............................. return aObjectsUnderMouse
  [ 66] ret
end

on getTotalItems me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iTotalItems = 0
  [  3] getlocal 0 .............................. <iTotalItems>
  [  5] getparam 0 .............................. <me>
  [  7] getchainedprop 396 ...................... <me.oWallItems>
  [ 10] pusharglist 1 ........................... <me.oWallItems>
  [ 12] objcall 336 ............................. <me.oWallItems.getTotalItems()>
  [ 15] add ..................................... <iTotalItems + me.oWallItems.getTotalItems()>
  [ 16] setlocal 0 .............................. iTotalItems = iTotalItems + me.oWallItems.getTotalItems()
  [ 18] getlocal 0 .............................. <iTotalItems>
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 399 ...................... <me.oFurniture>
  [ 25] pusharglist 1 ........................... <me.oFurniture>
  [ 27] objcall 336 ............................. <me.oFurniture.getTotalItems()>
  [ 30] add ..................................... <iTotalItems + me.oFurniture.getTotalItems()>
  [ 31] setlocal 0 .............................. iTotalItems = iTotalItems + me.oFurniture.getTotalItems()
  [ 33] getlocal 0 .............................. <iTotalItems>
  [ 35] pusharglistnoret 1 ...................... <iTotalItems>
  [ 37] extcall 52 .............................. return iTotalItems
  [ 39] ret
end

on checkMaxItemsExceeded me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 336 ............................. <me.getTotalItems()>
  [  7] setlocal 0 .............................. iTotalItems = me.getTotalItems()
  [  9] getlocal 0 .............................. <iTotalItems>
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 339 ...................... <me.oIsoConstants>
  [ 16] getobjprop 577 .......................... <me.oIsoConstants.DEFAULT_MAX_ITEMS>
  [ 19] gteq .................................... <iTotalItems >= me.oIsoConstants.DEFAULT_MAX_ITEMS>
  [ 20] jmpifz [ 36] ............................ if iTotalItems >= me.oIsoConstants.DEFAULT_MAX_ITEMS then
  [ 23] getglobal 172 ........................... <ElementMgr>
  [ 25] pushcons 62 ............................. <"ALERT_MAX_ITEMS_EXCEEDED">
  [ 27] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_MAX_ITEMS_EXCEEDED">
  [ 29] objcall 236 ............................. ElementMgr.alert("ALERT_MAX_ITEMS_EXCEEDED")
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 52 .............................. return 0
  [ 36] pushint8 1 .............................. <1>
  [ 38] pusharglistnoret 1 ...................... <1>
  [ 40] extcall 52 .............................. return 1
  [ 42] ret
end
