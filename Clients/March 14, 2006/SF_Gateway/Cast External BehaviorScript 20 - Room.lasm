property bDebug, foRoom, bInARoom
global oSession, oRoom, oStudio, ElementMgr, oDenizenManager

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 85 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushzero ................................ <0>
  [  8] setobjprop 738 .......................... me.bInARoom = 0
  [ 11] getparam 0 .............................. <me>
  [ 13] setglobal 718 ........................... oRoom = me
  [ 16] ret
end

on setRoomObject me, _foRoom
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"setRoomObject() ">
  [  4] getparam 1 .............................. <_foRoom>
  [  6] joinstr ................................. <"setRoomObject() " & _foRoom>
  [  7] pusharglistnoret 2 ...................... <me, "setRoomObject() " & _foRoom>
  [  9] objcall 4 ............................... me.debug("setRoomObject() " & _foRoom)
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 1 .............................. <_foRoom>
  [ 15] setobjprop 721 .......................... me.foRoom = _foRoom
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 2 ............................... me.setCallbacks()
  [ 24] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 721 .......................... <me.foRoom>
  [ 13] pushcons 1 .............................. <"roomEntered">
  [ 15] pushsymb 729 ............................ <#roomEntered>
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "roomEntered", #roomEntered, me>
  [ 22] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "roomEntered", #roomEntered, me)
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 104 .......................... <me.spriteNum>
  [ 28] pusharglist 1 ........................... <me.spriteNum>
  [ 30] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 721 .......................... <me.foRoom>
  [ 37] pushcons 2 .............................. <"roomEnterFailed">
  [ 39] pushsymb 730 ............................ <#roomEnterFailed>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "roomEnterFailed", #roomEnterFailed, me>
  [ 46] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "roomEnterFailed", #roomEnterFailed, me)
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 104 .......................... <me.spriteNum>
  [ 52] pusharglist 1 ........................... <me.spriteNum>
  [ 54] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 721 .......................... <me.foRoom>
  [ 61] pushcons 3 .............................. <"roomExited">
  [ 63] pushsymb 731 ............................ <#roomExited>
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "roomExited", #roomExited, me>
  [ 70] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "roomExited", #roomExited, me)
  [ 72] getparam 0 .............................. <me>
  [ 74] getobjprop 104 .......................... <me.spriteNum>
  [ 76] pusharglist 1 ........................... <me.spriteNum>
  [ 78] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 721 .......................... <me.foRoom>
  [ 85] pushcons 4 .............................. <"exception">
  [ 87] pushsymb 676 ............................ <#exception>
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "exception", #exception, me>
  [ 94] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "exception", #exception, me)
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 104 .......................... <me.spriteNum>
  [100] pusharglist 1 ........................... <me.spriteNum>
  [102] extcall 103 ............................. <sprite(me.spriteNum)>
  [104] getparam 0 .............................. <me>
  [106] getobjprop 721 .......................... <me.foRoom>
  [109] pushcons 5 .............................. <"participantEntered">
  [111] pushsymb 732 ............................ <#participantEntered>
  [114] getparam 0 .............................. <me>
  [116] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "participantEntered", #participantEntered, me>
  [118] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "participantEntered", #participantEntered, me)
  [120] getparam 0 .............................. <me>
  [122] getobjprop 104 .......................... <me.spriteNum>
  [124] pusharglist 1 ........................... <me.spriteNum>
  [126] extcall 103 ............................. <sprite(me.spriteNum)>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 721 .......................... <me.foRoom>
  [133] pushcons 6 .............................. <"participantExited">
  [135] pushsymb 733 ............................ <#participantExited>
  [138] getparam 0 .............................. <me>
  [140] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "participantExited", #participantExited, me>
  [142] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "participantExited", #participantExited, me)
  [144] getparam 0 .............................. <me>
  [146] getobjprop 104 .......................... <me.spriteNum>
  [148] pusharglist 1 ........................... <me.spriteNum>
  [150] extcall 103 ............................. <sprite(me.spriteNum)>
  [152] getparam 0 .............................. <me>
  [154] getobjprop 721 .......................... <me.foRoom>
  [157] pushcons 7 .............................. <"participantEjected">
  [159] pushsymb 734 ............................ <#participantEjected>
  [162] getparam 0 .............................. <me>
  [164] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "participantEjected", #participantEjected, me>
  [166] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "participantEjected", #participantEjected, me)
  [168] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 85 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 8 .............................. <"Room: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"Room: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"Room: " & sMessage>
  [ 17] extcall 118 ............................. put "Room: " & sMessage
  [ 19] ret
end

on setInARoom me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 738 .......................... me.bInARoom = bState
  [  7] ret
end

on getInARoom me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 738 .......................... <me.bInARoom>
  [  5] pusharglistnoret 1 ...................... <me.bInARoom>
  [  7] extcall 121 ............................. return me.bInARoom
  [  9] ret
end

on getRoomID me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 721 .......................... <me.foRoom>
  [  5] pusharglist 1 ........................... <me.foRoom>
  [  7] extcall 135 ............................. <voidp(me.foRoom)>
  [  9] not ..................................... <not voidp(me.foRoom)>
  [ 10] jmpifz [ 27] ............................ if not voidp(me.foRoom) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 721 ...................... <me.foRoom>
  [ 18] pusharglist 1 ........................... <me.foRoom>
  [ 20] objcall 726 ............................. <me.foRoom.getRoomID()>
  [ 23] pusharglistnoret 1 ...................... <me.foRoom.getRoomID()>
  [ 25] extcall 121 ............................. return me.foRoom.getRoomID()
  [ 27] ret
end

on sendEnterRoom me, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 9 .............................. <"sendEnterRoom() ">
  [  4] getparam 1 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"sendEnterRoom() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "sendEnterRoom() " && sRoomId>
  [  9] objcall 4 ............................... me.debug("sendEnterRoom() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglist 1 ........................... <me>
  [ 15] objcall 725 ............................. <me.getInARoom()>
  [ 18] jmpifz [ 26] ............................ if me.getInARoom() then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 121 ............................. return 0
  [ 26] getglobal 451 ........................... <oSession>
  [ 29] getparam 1 .............................. <sRoomId>
  [ 31] pusharglist 2 ........................... <oSession, sRoomId>
  [ 33] objcall 393 ............................. <oSession.createStudio(sRoomId)>
  [ 36] setlocal 0 .............................. _foRoom = oSession.createStudio(sRoomId)
  [ 38] getlocal 0 .............................. <_foRoom>
  [ 40] pusharglist 1 ........................... <_foRoom>
  [ 42] extcall 135 ............................. <voidp(_foRoom)>
  [ 44] jmpifz [ 52] ............................ if voidp(_foRoom) then
  [ 47] pushzero ................................ <0>
  [ 48] pusharglistnoret 1 ...................... <0>
  [ 50] extcall 121 ............................. return 0
  [ 52] getglobal 451 ........................... <oSession>
  [ 55] getobjprop 110 .......................... <oSession.bTestMode>
  [ 57] jmpifz [ 64] ............................ if oSession.bTestMode then
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 721 ...................... <me.foRoom>
  [ 69] pusharglistnoret 1 ...................... <me.foRoom>
  [ 71] objcall 727 ............................. me.foRoom.sendEnterRoom()
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglistnoret 1 ...................... <1>
  [ 78] extcall 121 ............................. return 1
  [ 80] ret
end

on sendExitRoom me, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 10 ............................. <"sendExitRoom() ">
  [  4] getparam 1 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"sendExitRoom() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "sendExitRoom() " && sRoomId>
  [  9] objcall 4 ............................... me.debug("sendExitRoom() " && sRoomId)
  [ 11] getglobal 451 ........................... <oSession>
  [ 14] getobjprop 110 .......................... <oSession.bTestMode>
  [ 16] jmpifz [ 23] ............................ if oSession.bTestMode then
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 121 ............................. return 
  [ 23] getglobal 146 ........................... <ElementMgr>
  [ 25] pusharglist 1 ........................... <ElementMgr>
  [ 27] objcall 741 ............................. <ElementMgr.getSequencer()>
  [ 30] setlocal 0 .............................. oSequencer = ElementMgr.getSequencer()
  [ 32] getlocal 0 .............................. <oSequencer>
  [ 34] pusharglist 1 ........................... <oSequencer>
  [ 36] extcall 135 ............................. <voidp(oSequencer)>
  [ 38] not ..................................... <not voidp(oSequencer)>
  [ 39] jmpifz [ 49] ............................ if not voidp(oSequencer) then
  [ 42] getlocal 0 .............................. <oSequencer>
  [ 44] pusharglistnoret 1 ...................... <oSequencer>
  [ 46] objcall 742 ............................. oSequencer.stop()
  [ 49] getglobal 184 ........................... <oStudio>
  [ 51] pusharglist 1 ........................... <oStudio>
  [ 53] objcall 743 ............................. <oStudio.getcdplayer()>
  [ 56] pusharglistnoret 1 ...................... <oStudio.getcdplayer()>
  [ 58] objcall 744 ............................. oStudio.getcdplayer().reset()
  [ 61] getparam 0 .............................. <me>
  [ 63] pusharglistnoret 1 ...................... <me>
  [ 65] objcall 736 ............................. me.stopjukebox()
  [ 68] getparam 0 .............................. <me>
  [ 70] getchainedprop 721 ...................... <me.foRoom>
  [ 73] pusharglistnoret 1 ...................... <me.foRoom>
  [ 75] objcall 728 ............................. me.foRoom.sendExitRoom()
  [ 78] ret
end

on roomEntered me, oCaller, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 11 ............................. <"roomEntered() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomEntered() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "roomEntered() " && sRoomId>
  [  9] objcall 4 ............................... me.debug("roomEntered() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 2 ...................... <me, 1>
  [ 17] objcall 724 ............................. me.setInARoom(1)
  [ 20] pushsymb 746 ............................ <#initRoomEntered>
  [ 23] getparam 2 .............................. <sRoomId>
  [ 25] pusharglistnoret 2 ...................... <#initRoomEntered, sRoomId>
  [ 27] extcall 203 ............................. sendAllSprites(#initRoomEntered, sRoomId)
  [ 29] ret
end

on roomEnterFailed me, oCaller, sRoomId, iReasonId, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"roomEnterFailed() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomEnterFailed() " && sRoomId>
  [  7] getparam 3 .............................. <iReasonId>
  [  9] pusharglist 1 ........................... <iReasonId>
  [ 11] extcall 558 ............................. <string(iReasonId)>
  [ 14] joinpadstr .............................. <"roomEnterFailed() " && sRoomId && string(iReasonId)>
  [ 15] getparam 4 .............................. <sReason>
  [ 17] joinpadstr .............................. <"roomEnterFailed() " && sRoomId && string(iReasonId) && sReason>
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 3 ...................... <me, "roomEnterFailed() " && sRoomId && string(iReasonId) && sReason, 1>
  [ 22] objcall 4 ............................... me.debug("roomEnterFailed() " && sRoomId && string(iReasonId) && sReason, 1)
  [ 24] getparam 3 .............................. <iReasonId>
  [ 26] pusharglist 1 ........................... <iReasonId>
  [ 28] extcall 238 ............................. <integer(iReasonId)>
  [ 30] setparam 3 .............................. iReasonId = integer(iReasonId)
  [ 32] getparam 0 .............................. <me>
  [ 34] pushzero ................................ <0>
  [ 35] pusharglistnoret 2 ...................... <me, 0>
  [ 37] objcall 724 ............................. me.setInARoom(0)
  [ 40] getglobal 146 ........................... <ElementMgr>
  [ 42] pusharglist 1 ........................... <ElementMgr>
  [ 44] extcall 135 ............................. <voidp(ElementMgr)>
  [ 46] not ..................................... <not voidp(ElementMgr)>
  [ 47] jmpifz [ 61] ............................ if not voidp(ElementMgr) then
  [ 50] getglobal 146 ........................... <ElementMgr>
  [ 52] getparam 2 .............................. <sRoomId>
  [ 54] getparam 3 .............................. <iReasonId>
  [ 56] pusharglistnoret 3 ...................... <ElementMgr, sRoomId, iReasonId>
  [ 58] objcall 730 ............................. ElementMgr.roomEnterFailed(sRoomId, iReasonId)
  [ 61] ret
end

on roomExited me, oCaller, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 13 ............................. <"roomExited() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomExited() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "roomExited() " && sRoomId>
  [  9] objcall 4 ............................... me.debug("roomExited() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 2 ...................... <me, 0>
  [ 16] objcall 724 ............................. me.setInARoom(0)
  [ 19] pushsymb 747 ............................ <#initRoomExited>
  [ 22] getparam 2 .............................. <sRoomId>
  [ 24] pusharglistnoret 2 ...................... <#initRoomExited, sRoomId>
  [ 26] extcall 203 ............................. sendAllSprites(#initRoomExited, sRoomId)
  [ 28] ret
end

on exception me, oCaller, iReasonId, sReason, sMsgId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 14 ............................. <"exception() ">
  [  4] getparam 3 .............................. <sReason>
  [  6] joinstr ................................. <"exception() " & sReason>
  [  7] pusharglistnoret 2 ...................... <me, "exception() " & sReason>
  [  9] objcall 4 ............................... me.debug("exception() " & sReason)
  [ 11] ret
end

on participantEntered me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 15 ............................. <"participantEntered() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantEntered() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantEntered() " & sName>
  [  9] objcall 4 ............................... me.debug("participantEntered() " & sName)
  [ 11] ret
end

on participantExited me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 16 ............................. <"participantExited() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantExited() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantExited() " & sName>
  [  9] objcall 4 ............................... me.debug("participantExited() " & sName)
  [ 11] ret
end

on participantEjected me, oCaller, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 17 ............................. <"participantEjected() ">
  [  4] getparam 2 .............................. <sReason>
  [  6] joinstr ................................. <"participantEjected() " & sReason>
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 3 ...................... <me, "participantEjected() " & sReason, 1>
  [ 11] objcall 4 ............................... me.debug("participantEjected() " & sReason, 1)
  [ 13] getparam 0 .............................. <me>
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 2 ...................... <me, 0>
  [ 18] objcall 724 ............................. me.setInARoom(0)
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglistnoret 1 ...................... <me>
  [ 25] objcall 735 ............................. me.stopSequencer()
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglistnoret 1 ...................... <me>
  [ 32] objcall 736 ............................. me.stopjukebox()
  [ 35] getparam 2 .............................. <sReason>
  [ 37] pushcons 18 ............................. <"duplicateLogin">
  [ 39] eq ...................................... <sReason = "duplicateLogin">
  [ 40] jmpifz [ 67] ............................ if sReason = "duplicateLogin" then
  [ 43] pushint8 1 .............................. <1>
  [ 45] setglobal 206 ........................... gCLOSING = 1
  [ 47] getglobal 146 ........................... <ElementMgr>
  [ 49] pushcons 19 ............................. <"ALERT_DUPLICATE_LOGIN">
  [ 51] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_DUPLICATE_LOGIN">
  [ 53] objcall 191 ............................. ElementMgr.alert("ALERT_DUPLICATE_LOGIN")
  [ 55] getglobal 451 ........................... <oSession>
  [ 58] pusharglistnoret 1 ...................... <oSession>
  [ 60] objcall 669 ............................. oSession.disconnect()
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 121 ............................. return 
  [ 67] getparam 2 .............................. <sReason>
  [ 69] pushcons 20 ............................. <"ban">
  [ 71] eq ...................................... <sReason = "ban">
  [ 72] jmpifz [ 79] ............................ if sReason = "ban" then
  [ 75] pushint8 1 .............................. <1>
  [ 77] setglobal 206 ........................... gCLOSING = 1
  [ 79] getparam 2 .............................. <sReason>
  [ 81] pushcons 21 ............................. <"entry">
  [ 83] eq ...................................... <sReason = "entry">
  [ 84] jmpifz [102] ............................ if sReason = "entry" then
  [ 87] pushcons 22 ............................. <"EJECTED FROM STUDIO, GOING TO ENTRY ">
  [ 89] pusharglistnoret 1 ...................... <"EJECTED FROM STUDIO, GOING TO ENTRY ">
  [ 91] extcall 118 ............................. put "EJECTED FROM STUDIO, GOING TO ENTRY "
  [ 93] pusharglistnoret 0 ...................... <>
  [ 95] extcall 469 ............................. gotoEntry()
  [ 98] pusharglistnoret 0 ...................... <>
  [100] extcall 121 ............................. return 
  [102] getparam 0 .............................. <me>
  [104] pusharglistnoret 1 ...................... <me>
  [106] objcall 737 ............................. me.eject()
  [109] ret
end

on stopSequencer me
  [  0] getglobal 146 ........................... <ElementMgr>
  [  2] pusharglist 1 ........................... <ElementMgr>
  [  4] objcall 741 ............................. <ElementMgr.getSequencer()>
  [  7] setlocal 0 .............................. oSequencer = ElementMgr.getSequencer()
  [  9] getlocal 0 .............................. <oSequencer>
  [ 11] pusharglist 1 ........................... <oSequencer>
  [ 13] extcall 135 ............................. <voidp(oSequencer)>
  [ 15] not ..................................... <not voidp(oSequencer)>
  [ 16] jmpifz [ 26] ............................ if not voidp(oSequencer) then
  [ 19] getlocal 0 .............................. <oSequencer>
  [ 21] pusharglistnoret 1 ...................... <oSequencer>
  [ 23] objcall 742 ............................. oSequencer.stop()
  [ 26] ret
end

on stopjukebox me
  [  0] pushsymb 749 ............................ <#getheadlessplayer>
  [  3] pusharglist 1 ........................... <#getheadlessplayer>
  [  5] extcall 203 ............................. <sendAllSprites(#getheadlessplayer)>
  [  7] setlocal 0 .............................. myheadlessplayer = sendAllSprites(#getheadlessplayer)
  [  9] getlocal 0 .............................. <myheadlessplayer>
  [ 11] pusharglist 1 ........................... <myheadlessplayer>
  [ 13] extcall 135 ............................. <voidp(myheadlessplayer)>
  [ 15] pushzero ................................ <0>
  [ 16] eq ...................................... <voidp(myheadlessplayer) = 0>
  [ 17] jmpifz [ 31] ............................ if voidp(myheadlessplayer) = 0 then
  [ 20] getlocal 0 .............................. <myheadlessplayer>
  [ 22] pusharglist 1 ........................... <myheadlessplayer>
  [ 24] extcall 103 ............................. <sprite(myheadlessplayer)>
  [ 26] pusharglistnoret 1 ...................... <sprite(myheadlessplayer)>
  [ 28] objcall 750 ............................. sprite(myheadlessplayer).stopSong()
  [ 31] ret
end

on eject me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 23 ............................. <"eject() ">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "eject() ", 1>
  [  8] objcall 4 ............................... me.debug("eject() ", 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushzero ................................ <0>
  [ 13] pusharglistnoret 2 ...................... <me, 0>
  [ 15] objcall 724 ............................. me.setInARoom(0)
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 735 ............................. me.stopSequencer()
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglistnoret 1 ...................... <me>
  [ 29] objcall 736 ............................. me.stopjukebox()
  [ 32] pushsymb 747 ............................ <#initRoomExited>
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglist 1 ........................... <me>
  [ 39] objcall 726 ............................. <me.getRoomID()>
  [ 42] pusharglistnoret 2 ...................... <#initRoomExited, me.getRoomID()>
  [ 44] extcall 203 ............................. sendAllSprites(#initRoomExited, me.getRoomID())
  [ 46] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 121 ............................. return sprite(me.spriteNum)
  [ 12] ret
end
