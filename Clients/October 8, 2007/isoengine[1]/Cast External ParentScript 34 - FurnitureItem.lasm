property sProdID, sPosId, sImageBase, aAttributes, sType, sAction, iState, sCastLib, iWidth, iHeight, iDepth, iHeightOffset, bItemsAllowedOnTop, iDirection, aDirections, iDirectionIndex, iFrame, iNumFrames, aDrawOrder, iRow, iCol, iGridX, iGridZ, iGridY, bDragging, bAnimate, aAssets, aAlias, ORDER, height, width, depth, direction, frame, iFPS, iTimer, bDebug, oAction, bVisible, bBlocksPath, bSeatable, oPreviewMember, iPreviewSprite, bHasPreview, iLastRow, iLastCol, iLastGridY, iLastHeightOffset, iLastDirectionIndex, oHitTestColor8, oHitTestColor16
global oIsoScene, oPossessionStudio, oStudioMap, oStudio, oRoom, oDenizenManager, oSession, ElementMgr, gFeatureSet

on new me, _sProdId, _sPosId, _sImageBase, _sType, _sAction, _iState, _aAttributes, _sCastLib, _iRow, _iCol, _iGridY, _iDirection, _iHeight, _iHeightOffset, _bItemsAllowedOnTop
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 56 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushcons 0 .............................. <"new( ) _sProdId: ">
  [  9] getparam 1 .............................. <_sProdId>
  [ 11] joinstr ................................. <"new( ) _sProdId: " & _sProdId>
  [ 12] pushcons 1 .............................. <", _sPosId: ">
  [ 14] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: ">
  [ 15] getparam 2 .............................. <_sPosId>
  [ 17] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId>
  [ 18] pushcons 2 .............................. <", _sImageBase: ">
  [ 20] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: ">
  [ 21] getparam 3 .............................. <_sImageBase>
  [ 23] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase>
  [ 24] pushcons 3 .............................. <", _sType: ">
  [ 26] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: ">
  [ 27] getparam 4 .............................. <_sType>
  [ 29] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType>
  [ 30] pushcons 4 .............................. <", _sAction: ">
  [ 32] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: ">
  [ 33] getparam 5 .............................. <_sAction>
  [ 35] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: " & _sAction>
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 3 ...................... <me, "new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: " & _sAction, 0>
  [ 39] objcall 50 .............................. me.debug("new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: " & _sAction, 0)
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 5 .............................. <"new FurniITem() 1">
  [ 45] pusharglistnoret 2 ...................... <me, "new FurniITem() 1">
  [ 47] objcall 50 .............................. me.debug("new FurniITem() 1")
  [ 49] getparam 0 .............................. <me>
  [ 51] getparam 1 .............................. <_sProdId>
  [ 53] setobjprop 279 .......................... me.sProdID = _sProdId
  [ 56] getparam 0 .............................. <me>
  [ 58] getparam 2 .............................. <_sPosId>
  [ 60] setobjprop 285 .......................... me.sPosId = _sPosId
  [ 63] getparam 0 .............................. <me>
  [ 65] getparam 3 .............................. <_sImageBase>
  [ 67] setobjprop 280 .......................... me.sImageBase = _sImageBase
  [ 70] getparam 0 .............................. <me>
  [ 72] getparam 4 .............................. <_sType>
  [ 74] setobjprop 287 .......................... me.sType = _sType
  [ 77] getparam 5 .............................. <_sAction>
  [ 79] pusharglist 1 ........................... <_sAction>
  [ 81] extcall 106 ............................. <voidp(_sAction)>
  [ 83] getparam 5 .............................. <_sAction>
  [ 85] pushcons 6 .............................. <EMPTY>
  [ 87] eq ...................................... <_sAction = EMPTY>
  [ 88] or ...................................... <voidp(_sAction) or (_sAction = EMPTY)>
  [ 89] jmpifz [102] ............................ if voidp(_sAction) or (_sAction = EMPTY) then / else
  [ 92] getparam 0 .............................. <me>
  [ 94] pushcons 7 .............................. <"Default">
  [ 96] setobjprop 288 .......................... me.sAction = "Default"
  [ 99] jmp [109]
  [102] getparam 0 .............................. <me>
  [104] getparam 5 .............................. <_sAction>
  [106] setobjprop 288 .......................... me.sAction = _sAction
  [109] getparam 6 .............................. <_iState>
  [111] pusharglist 1 ........................... <_iState>
  [113] extcall 106 ............................. <voidp(_iState)>
  [115] jmpifz [127] ............................ if voidp(_iState) then / else
  [118] getparam 0 .............................. <me>
  [120] pushzero ................................ <0>
  [121] setobjprop 278 .......................... me.iState = 0
  [124] jmp [134]
  [127] getparam 0 .............................. <me>
  [129] getparam 6 .............................. <_iState>
  [131] setobjprop 278 .......................... me.iState = _iState
  [134] getparam 7 .............................. <_aAttributes>
  [136] pusharglist 1 ........................... <_aAttributes>
  [138] extcall 106 ............................. <voidp(_aAttributes)>
  [140] getparam 7 .............................. <_aAttributes>
  [142] pushcons 6 .............................. <EMPTY>
  [144] eq ...................................... <_aAttributes = EMPTY>
  [145] or ...................................... <voidp(_aAttributes) or (_aAttributes = EMPTY)>
  [146] jmpifz [160] ............................ if voidp(_aAttributes) or (_aAttributes = EMPTY) then / else
  [149] getparam 0 .............................. <me>
  [151] pusharglist 0 ........................... <[:]>
  [153] pushproplist ............................ <[:]>
  [154] setobjprop 289 .......................... me.aAttributes = [:]
  [157] jmp [167]
  [160] getparam 0 .............................. <me>
  [162] getparam 7 .............................. <_aAttributes>
  [164] setobjprop 289 .......................... me.aAttributes = _aAttributes
  [167] getparam 9 .............................. <_iRow>
  [169] pusharglist 1 ........................... <_iRow>
  [171] extcall 106 ............................. <voidp(_iRow)>
  [173] jmpifz [185] ............................ if voidp(_iRow) then / else
  [176] getparam 0 .............................. <me>
  [178] pushint8 1 .............................. <1>
  [180] setobjprop 178 .......................... me.iRow = 1
  [182] jmp [191]
  [185] getparam 0 .............................. <me>
  [187] getparam 9 .............................. <_iRow>
  [189] setobjprop 178 .......................... me.iRow = _iRow
  [191] getparam 10 ............................. <_iCol>
  [193] pusharglist 1 ........................... <_iCol>
  [195] extcall 106 ............................. <voidp(_iCol)>
  [197] jmpifz [209] ............................ if voidp(_iCol) then / else
  [200] getparam 0 .............................. <me>
  [202] pushint8 1 .............................. <1>
  [204] setobjprop 179 .......................... me.iCol = 1
  [206] jmp [215]
  [209] getparam 0 .............................. <me>
  [211] getparam 10 ............................. <_iCol>
  [213] setobjprop 179 .......................... me.iCol = _iCol
  [215] getparam 11 ............................. <_iGridY>
  [217] pusharglist 1 ........................... <_iGridY>
  [219] extcall 106 ............................. <voidp(_iGridY)>
  [221] jmpifz [233] ............................ if voidp(_iGridY) then / else
  [224] getparam 0 .............................. <me>
  [226] pushzero ................................ <0>
  [227] setobjprop 277 .......................... me.iGridY = 0
  [230] jmp [240]
  [233] getparam 0 .............................. <me>
  [235] getparam 11 ............................. <_iGridY>
  [237] setobjprop 277 .......................... me.iGridY = _iGridY
  [240] getparam 12 ............................. <_iDirection>
  [242] pusharglist 1 ........................... <_iDirection>
  [244] extcall 106 ............................. <voidp(_iDirection)>
  [246] jmpifz [259] ............................ if voidp(_iDirection) then / else
  [249] getparam 0 .............................. <me>
  [251] pushint8 2 .............................. <2>
  [253] setobjprop 281 .......................... me.iDirection = 2
  [256] jmp [266]
  [259] getparam 0 .............................. <me>
  [261] getparam 12 ............................. <_iDirection>
  [263] setobjprop 281 .......................... me.iDirection = _iDirection
  [266] getparam 8 .............................. <_sCastLib>
  [268] pusharglist 1 ........................... <_sCastLib>
  [270] extcall 106 ............................. <voidp(_sCastLib)>
  [272] jmpifz [285] ............................ if voidp(_sCastLib) then / else
  [275] getparam 0 .............................. <me>
  [277] pushcons 8 .............................. <"Furniture">
  [279] setobjprop 284 .......................... me.sCastLib = "Furniture"
  [282] jmp [292]
  [285] getparam 0 .............................. <me>
  [287] getparam 8 .............................. <_sCastLib>
  [289] setobjprop 284 .......................... me.sCastLib = _sCastLib
  [292] getparam 0 .............................. <me>
  [294] pushint8 1 .............................. <1>
  [296] setobjprop 472 .......................... me.iWidth = 1
  [299] getparam 0 .............................. <me>
  [301] pushint8 1 .............................. <1>
  [303] setobjprop 501 .......................... me.iDepth = 1
  [306] getparam 13 ............................. <_iHeight>
  [308] pusharglist 1 ........................... <_iHeight>
  [310] extcall 106 ............................. <voidp(_iHeight)>
  [312] not ..................................... <not voidp(_iHeight)>
  [313] jmpifz [323] ............................ if not voidp(_iHeight) then
  [316] getparam 0 .............................. <me>
  [318] getparam 13 ............................. <_iHeight>
  [320] setobjprop 283 .......................... me.iHeight = _iHeight
  [323] getparam 14 ............................. <_iHeightOffset>
  [325] pusharglist 1 ........................... <_iHeightOffset>
  [327] extcall 106 ............................. <voidp(_iHeightOffset)>
  [329] jmpifz [341] ............................ if voidp(_iHeightOffset) then / else
  [332] getparam 0 .............................. <me>
  [334] pushzero ................................ <0>
  [335] setobjprop 282 .......................... me.iHeightOffset = 0
  [338] jmp [348]
  [341] getparam 0 .............................. <me>
  [343] getparam 14 ............................. <_iHeightOffset>
  [345] setobjprop 282 .......................... me.iHeightOffset = _iHeightOffset
  [348] getparam 15 ............................. <_bItemsAllowedOnTop>
  [350] pusharglist 1 ........................... <_bItemsAllowedOnTop>
  [352] extcall 106 ............................. <voidp(_bItemsAllowedOnTop)>
  [354] jmpifz [367] ............................ if voidp(_bItemsAllowedOnTop) then / else
  [357] getparam 0 .............................. <me>
  [359] pushint8 1 .............................. <1>
  [361] setobjprop 276 .......................... me.bItemsAllowedOnTop = 1
  [364] jmp [374]
  [367] getparam 0 .............................. <me>
  [369] getparam 15 ............................. <_bItemsAllowedOnTop>
  [371] setobjprop 276 .......................... me.bItemsAllowedOnTop = _bItemsAllowedOnTop
  [374] getparam 0 .............................. <me>
  [376] pushint8 1 .............................. <1>
  [378] setobjprop 721 .......................... me.iNumFrames = 1
  [381] getparam 0 .............................. <me>
  [383] pusharglist 0 ........................... <[:]>
  [385] pushproplist ............................ <[:]>
  [386] setobjprop 1264 ......................... me.aAssets = [:]
  [389] getparam 0 .............................. <me>
  [391] pushint8 1 .............................. <1>
  [393] setobjprop 1265 ......................... me.ORDER = 1
  [396] getparam 0 .............................. <me>
  [398] pushint8 2 .............................. <2>
  [400] setobjprop 486 .......................... me.height = 2
  [403] getparam 0 .............................. <me>
  [405] pushint8 3 .............................. <3>
  [407] setobjprop 485 .......................... me.width = 3
  [410] getparam 0 .............................. <me>
  [412] pushint8 4 .............................. <4>
  [414] setobjprop 1266 ......................... me.depth = 4
  [417] getparam 0 .............................. <me>
  [419] pushint8 5 .............................. <5>
  [421] setobjprop 394 .......................... me.direction = 5
  [424] getparam 0 .............................. <me>
  [426] pushint8 6 .............................. <6>
  [428] setobjprop 1267 ......................... me.frame = 6
  [431] getparam 0 .............................. <me>
  [433] pushcons 9 .............................. <"new FurniITem() 2">
  [435] pusharglistnoret 2 ...................... <me, "new FurniITem() 2">
  [437] objcall 50 .............................. me.debug("new FurniITem() 2")
  [439] getparam 0 .............................. <me>
  [441] pusharglistnoret 1 ...................... <me>
  [443] objcall 1257 ............................ me.loadAlias()
  [446] getparam 0 .............................. <me>
  [448] pushcons 10 ............................. <"new FurniITem() 3">
  [450] pusharglistnoret 2 ...................... <me, "new FurniITem() 3">
  [452] objcall 50 .............................. me.debug("new FurniITem() 3")
  [454] getparam 0 .............................. <me>
  [456] pusharglistnoret 1 ...................... <me>
  [458] objcall 1256 ............................ me.loadAssets()
  [461] getparam 0 .............................. <me>
  [463] pushcons 11 ............................. <"new FurniITem() 4">
  [465] pusharglistnoret 2 ...................... <me, "new FurniITem() 4">
  [467] objcall 50 .............................. me.debug("new FurniITem() 4")
  [469] getparam 0 .............................. <me>
  [471] pusharglistnoret 1 ...................... <me>
  [473] objcall 1243 ............................ me.SetWidth()
  [476] getparam 0 .............................. <me>
  [478] pushcons 12 ............................. <"new FurniITem() 5">
  [480] pusharglistnoret 2 ...................... <me, "new FurniITem() 5">
  [482] objcall 50 .............................. me.debug("new FurniITem() 5")
  [484] getparam 0 .............................. <me>
  [486] pusharglistnoret 1 ...................... <me>
  [488] objcall 815 ............................. me.setDepth()
  [491] getparam 0 .............................. <me>
  [493] pushcons 13 ............................. <"new FurniITem() 6">
  [495] pusharglistnoret 2 ...................... <me, "new FurniITem() 6">
  [497] objcall 50 .............................. me.debug("new FurniITem() 6")
  [499] getparam 0 .............................. <me>
  [501] pusharglistnoret 1 ...................... <me>
  [503] objcall 1244 ............................ me.setNumFrames()
  [506] getparam 0 .............................. <me>
  [508] pushcons 14 ............................. <"new FurniITem() 7">
  [510] pusharglistnoret 2 ...................... <me, "new FurniITem() 7">
  [512] objcall 50 .............................. me.debug("new FurniITem() 7")
  [514] getparam 0 .............................. <me>
  [516] pusharglistnoret 1 ...................... <me>
  [518] objcall 1258 ............................ me.setDirections()
  [521] getparam 0 .............................. <me>
  [523] pushcons 15 ............................. <"new FurniITem() 8">
  [525] pusharglistnoret 2 ...................... <me, "new FurniITem() 8">
  [527] objcall 50 .............................. me.debug("new FurniITem() 8")
  [529] getparam 0 .............................. <me>
  [531] pusharglistnoret 1 ...................... <me>
  [533] objcall 1250 ............................ me.setDirectionIndex()
  [536] getparam 0 .............................. <me>
  [538] pushcons 16 ............................. <"new FurniITem() 9">
  [540] pusharglistnoret 2 ...................... <me, "new FurniITem() 9">
  [542] objcall 50 .............................. me.debug("new FurniITem() 9")
  [544] getparam 0 .............................. <me>
  [546] getparam 0 .............................. <me>
  [548] getobjprop 281 .......................... <me.iDirection>
  [551] pusharglistnoret 2 ...................... <me, me.iDirection>
  [553] objcall 1186 ............................ me.setDirection(me.iDirection)
  [556] getparam 0 .............................. <me>
  [558] pushcons 17 ............................. <"new FurniITem() 10">
  [560] pusharglistnoret 2 ...................... <me, "new FurniITem() 10">
  [562] objcall 50 .............................. me.debug("new FurniITem() 10")
  [564] getparam 0 .............................. <me>
  [566] pusharglistnoret 1 ...................... <me>
  [568] objcall 1251 ............................ me.setDrawOrder()
  [571] getparam 0 .............................. <me>
  [573] pushcons 18 ............................. <"new FurniITem() 11">
  [575] pusharglistnoret 2 ...................... <me, "new FurniITem() 11">
  [577] objcall 50 .............................. me.debug("new FurniITem() 11")
  [579] getparam 0 .............................. <me>
  [581] pushzero ................................ <0>
  [582] setobjprop 1191 ......................... me.bDragging = 0
  [585] getparam 0 .............................. <me>
  [587] pushzero ................................ <0>
  [588] setobjprop 1268 ......................... me.bAnimate = 0
  [591] getparam 0 .............................. <me>
  [593] pushzero ................................ <0>
  [594] setobjprop 1269 ......................... me.iFrame = 0
  [597] getparam 0 .............................. <me>
  [599] pushint8 8 .............................. <8>
  [601] setobjprop 84 ........................... me.iFPS = 8
  [603] getparam 0 .............................. <me>
  [605] getmovieprop 89 ......................... <the milliSeconds>
  [607] setobjprop 1192 ......................... me.iTimer = the milliSeconds
  [610] getparam 0 .............................. <me>
  [612] pushint8 1 .............................. <1>
  [614] setobjprop 1270 ......................... me.bBlocksPath = 1
  [617] getparam 0 .............................. <me>
  [619] pushzero ................................ <0>
  [620] setobjprop 1271 ......................... me.bSeatable = 0
  [623] getparam 0 .............................. <me>
  [625] pushint8 1 .............................. <1>
  [627] setobjprop 1167 ......................... me.bVisible = 1
  [630] getparam 0 .............................. <me>
  [632] getobjprop 280 .......................... <me.sImageBase>
  [635] pushcons 19 ............................. <"_small">
  [637] joinstr ................................. <me.sImageBase & "_small">
  [638] setlocal 0 .............................. sPreviewName = me.sImageBase & "_small"
  [640] getparam 0 .............................. <me>
  [642] getlocal 0 .............................. <sPreviewName>
  [644] pusharglist 1 ........................... <sPreviewName>
  [646] extcall 163 ............................. <member(sPreviewName)>
  [648] setobjprop 854 .......................... me.oPreviewMember = member(sPreviewName)
  [651] getparam 0 .............................. <me>
  [653] getparam 0 .............................. <me>
  [655] getchainedprop 854 ...................... <me.oPreviewMember>
  [658] getobjprop 1272 ......................... <me.oPreviewMember.number>
  [661] pushzero ................................ <0>
  [662] gt ...................................... <me.oPreviewMember.number > 0>
  [663] setobjprop 1273 ......................... me.bHasPreview = me.oPreviewMember.number > 0
  [666] getparam 0 .............................. <me>
  [668] getparam 0 .............................. <me>
  [670] getobjprop 854 .......................... <me.oPreviewMember>
  [673] pusharglistnoret 2 ...................... <me, me.oPreviewMember>
  [675] objcall 1231 ............................ me.createPreviewSprite(me.oPreviewMember)
  [678] getparam 0 .............................. <me>
  [680] getparam 0 .............................. <me>
  [682] getobjprop 1274 ......................... <me.iDirectionIndex>
  [685] setobjprop 1275 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [688] getparam 0 .............................. <me>
  [690] pushzero ................................ <0>
  [691] pusharglist 1 ........................... <0>
  [693] extcall 1048 ............................ <paletteIndex(0)>
  [696] setobjprop 1276 ......................... me.oHitTestColor8 = paletteIndex(0)
  [699] getparam 0 .............................. <me>
  [701] pushint16 255 ........................... <255>
  [704] pushint16 255 ........................... <255>
  [707] pushint16 255 ........................... <255>
  [710] pusharglist 3 ........................... <255, 255, 255>
  [712] extcall 507 ............................. <rgb(255, 255, 255)>
  [715] setobjprop 1277 ......................... me.oHitTestColor16 = rgb(255, 255, 255)
  [718] getparam 0 .............................. <me>
  [720] pushcons 20 ............................. <"new FurniITem() 12">
  [722] pusharglistnoret 2 ...................... <me, "new FurniITem() 12">
  [724] objcall 50 .............................. me.debug("new FurniITem() 12")
  [726] getparam 0 .............................. <me>
  [728] pusharglistnoret 1 ...................... <me>
  [730] extcall 93 .............................. return me
  [732] ret
end

on duplicate me
  [  0] pushcons 21 ............................. <"FurnitureItem">
  [  2] pusharglist 1 ........................... <"FurnitureItem">
  [  4] extcall 57 .............................. <script("FurnitureItem")>
  [  6] getprop 279 ............................. <sProdID>
  [  9] getprop 285 ............................. <sPosId>
  [ 12] getprop 280 ............................. <sImageBase>
  [ 15] getprop 287 ............................. <sType>
  [ 18] getprop 288 ............................. <sAction>
  [ 21] getprop 278 ............................. <iState>
  [ 24] getprop 289 ............................. <aAttributes>
  [ 27] getprop 284 ............................. <sCastLib>
  [ 30] getprop 178 ............................. <iRow>
  [ 32] getprop 179 ............................. <iCol>
  [ 34] getprop 277 ............................. <iGridY>
  [ 37] getprop 281 ............................. <iDirection>
  [ 40] getprop 283 ............................. <iHeight>
  [ 43] getprop 282 ............................. <iHeightOffset>
  [ 46] getprop 276 ............................. <bItemsAllowedOnTop>
  [ 49] pusharglist 16 .......................... <script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop>
  [ 51] extcall 0 ............................... <new(script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 53] pusharglistnoret 1 ...................... <new(script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 55] extcall 93 .............................. return new(script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)
  [ 57] ret
end

on sendPutInStudio me
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 88 ............................ <oIsoScene>
  [  4] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [  6] pusharglist 2 ........................... <me, oIsoScene.oSelectedItem>
  [  8] objcall 243 ............................. <me.equals(oIsoScene.oSelectedItem)>
  [ 10] not ..................................... <not me.equals(oIsoScene.oSelectedItem)>
  [ 11] jmpifz [ 18] ............................ if not me.equals(oIsoScene.oSelectedItem) then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 93 .............................. return 
  [ 18] getglobal 241 ........................... <oSession>
  [ 20] pusharglist 1 ........................... <oSession>
  [ 22] extcall 106 ............................. <voidp(oSession)>
  [ 24] not ..................................... <not voidp(oSession)>
  [ 25] jmpifz [ 56] ............................ if not voidp(oSession) then
  [ 28] getglobal 241 ........................... <oSession>
  [ 30] getobjprop 295 .......................... <oSession.bTestMode>
  [ 33] not ..................................... <not oSession.bTestMode>
  [ 34] getglobal 296 ........................... <oPossessionStudio>
  [ 37] pusharglist 1 ........................... <oPossessionStudio>
  [ 39] extcall 106 ............................. <voidp(oPossessionStudio)>
  [ 41] not ..................................... <not voidp(oPossessionStudio)>
  [ 42] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [ 43] jmpifz [ 56] ............................ if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [ 46] getglobal 296 ........................... <oPossessionStudio>
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglistnoret 2 ...................... <oPossessionStudio, me>
  [ 53] objcall 307 ............................. oPossessionStudio.sendPutInStudio(me)
  [ 56] ret
end

on createPreviewSprite me, _oPreviewMember
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 88 ............................ <oIsoScene>
  [  4] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [  6] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [  8] objcall 482 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 11] setobjprop 1279 ......................... me.iPreviewSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 1273 ......................... <me.bHasPreview>
  [ 19] not ..................................... <not me.bHasPreview>
  [ 20] jmpifz [ 34] ............................ if not me.bHasPreview then
  [ 23] pushcons 22 ............................. <"has no preview!! exiting">
  [ 25] pusharglistnoret 1 ...................... <"has no preview!! exiting">
  [ 27] extcall 274 ............................. put "has no preview!! exiting"
  [ 30] pusharglistnoret 0 ...................... <>
  [ 32] extcall 93 .............................. return 
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 39] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 41] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 44] getparam 1 .............................. <_oPreviewMember>
  [ 46] setobjprop 163 .......................... sprite(me.iPreviewSprite).member = _oPreviewMember
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 53] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 55] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 58] pushint8 36 ............................. <36>
  [ 60] setobjprop 491 .......................... sprite(me.iPreviewSprite).ink = 36
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 68] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 70] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 73] pushint16 200 ........................... <200>
  [ 76] setobjprop 492 .......................... sprite(me.iPreviewSprite).blend = 200
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 84] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 86] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 89] pusharglist 0 ........................... <>
  [ 91] thebuiltin 510 .......................... <the maxinteger>
  [ 94] setobjprop 511 .......................... sprite(me.iPreviewSprite).locZ = the maxinteger
  [ 97] getparam 0 .............................. <me>
  [ 99] getobjprop 1279 ......................... <me.iPreviewSprite>
  [102] pusharglist 1 ........................... <me.iPreviewSprite>
  [104] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [107] getchainedprop 635 ...................... <sprite(me.iPreviewSprite).scriptInstanceList>
  [110] pushcons 23 ............................. <"DragPreviewScript">
  [112] pusharglist 1 ........................... <"DragPreviewScript">
  [114] extcall 57 .............................. <script("DragPreviewScript")>
  [116] getparam 0 .............................. <me>
  [118] pusharglist 2 ........................... <script("DragPreviewScript"), me>
  [120] objcall 0 ............................... <script("DragPreviewScript").new(me)>
  [122] pusharglistnoret 2 ...................... <sprite(me.iPreviewSprite).scriptInstanceList, script("DragPreviewScript").new(me)>
  [124] objcall 135 ............................. sprite(me.iPreviewSprite).scriptInstanceList.add(script("DragPreviewScript").new(me))
  [126] getparam 0 .............................. <me>
  [128] pusharglistnoret 1 ...................... <me>
  [130] objcall 1232 ............................ me.HidePreview()
  [133] ret
end

on updatePreview me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1273 ......................... <me.bHasPreview>
  [  5] not ..................................... <not me.bHasPreview>
  [  6] jmpifz [ 13] ............................ if not me.bHasPreview then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 18] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 20] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 23] pusharglist 0 ........................... <>
  [ 25] thebuiltin 326 .......................... <the mouseH>
  [ 28] setobjprop 328 .......................... sprite(me.iPreviewSprite).locH = the mouseH
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 36] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 38] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 41] pusharglist 0 ........................... <>
  [ 43] thebuiltin 327 .......................... <the mouseV>
  [ 46] setobjprop 329 .......................... sprite(me.iPreviewSprite).locV = the mouseV
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 54] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 56] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 59] pushint8 1 .............................. <1>
  [ 61] setobjprop 493 .......................... sprite(me.iPreviewSprite).visible = 1
  [ 64] getparam 0 .............................. <me>
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 2 ...................... <me, 0>
  [ 69] objcall 1238 ............................ me.setVisible(0)
  [ 72] ret
end

on HidePreview me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1273 ......................... <me.bHasPreview>
  [  5] not ..................................... <not me.bHasPreview>
  [  6] jmpifz [ 13] ............................ if not me.bHasPreview then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 18] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 20] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 23] pushzero ................................ <0>
  [ 24] setobjprop 493 .......................... sprite(me.iPreviewSprite).visible = 0
  [ 27] getparam 0 .............................. <me>
  [ 29] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 32] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 34] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 37] pushint8 100 ............................ <100>
  [ 39] inv ..................................... <-100>
  [ 40] setobjprop 328 .......................... sprite(me.iPreviewSprite).locH = -100
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 48] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 50] extcall 481 ............................. <sprite(me.iPreviewSprite)>
  [ 53] pushzero ................................ <0>
  [ 54] setobjprop 329 .......................... sprite(me.iPreviewSprite).locV = 0
  [ 57] getparam 0 .............................. <me>
  [ 59] pushint8 1 .............................. <1>
  [ 61] pusharglistnoret 2 ...................... <me, 1>
  [ 63] objcall 1238 ............................ me.setVisible(1)
  [ 66] ret
end

on getProdId me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 279 .......................... <me.sProdID>
  [  5] pusharglistnoret 1 ...................... <me.sProdID>
  [  7] extcall 93 .............................. return me.sProdID
  [  9] ret
end

on getAction me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 821 .......................... <me.oAction>
  [  5] pusharglistnoret 1 ...................... <me.oAction>
  [  7] extcall 93 .............................. return me.oAction
  [  9] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 854 .......................... <me.oPreviewMember>
  [  5] pusharglistnoret 1 ...................... <me.oPreviewMember>
  [  7] extcall 93 .............................. return me.oPreviewMember
  [  9] ret
end

on equals me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] extcall 106 ............................. <voidp(_oItem)>
  [  6] jmpifz [ 14] ............................ if voidp(_oItem) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 93 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 285 .......................... <me.sPosId>
  [ 19] getparam 1 .............................. <_oItem>
  [ 21] getobjprop 285 .......................... <_oItem.sPosId>
  [ 24] eq ...................................... <me.sPosId = _oItem.sPosId>
  [ 25] jmpifz [ 37] ............................ if me.sPosId = _oItem.sPosId then / else
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 93 .............................. return 1
  [ 34] jmp [ 42]
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 93 .............................. return 0
  [ 42] ret
end

on getPosId me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 285 .......................... <me.sPosId>
  [  5] pusharglistnoret 1 ...................... <me.sPosId>
  [  7] extcall 93 .............................. return me.sPosId
  [  9] ret
end

on getType me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 287 .......................... <me.sType>
  [  5] pusharglistnoret 1 ...................... <me.sType>
  [  7] extcall 93 .............................. return me.sType
  [  9] ret
end

on getGridX me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 179 .......................... <me.iCol>
  [  4] pusharglistnoret 1 ...................... <me.iCol>
  [  6] extcall 93 .............................. return me.iCol
  [  8] ret
end

on getGridY me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 277 .......................... <me.iGridY>
  [  5] pusharglistnoret 1 ...................... <me.iGridY>
  [  7] extcall 93 .............................. return me.iGridY
  [  9] ret
end

on getHeight me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 283 .......................... <me.iHeight>
  [  5] pusharglistnoret 1 ...................... <me.iHeight>
  [  7] extcall 93 .............................. return me.iHeight
  [  9] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeightOffset>
  [  4] setobjprop 282 .......................... me.iHeightOffset = _iHeightOffset
  [  7] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 282 .......................... <me.iHeightOffset>
  [  5] pusharglistnoret 1 ...................... <me.iHeightOffset>
  [  7] extcall 93 .............................. return me.iHeightOffset
  [  9] ret
end

on setItemsAllowedOnTop me, _bItemsAllowedOnTop
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bItemsAllowedOnTop>
  [  4] setobjprop 276 .......................... me.bItemsAllowedOnTop = _bItemsAllowedOnTop
  [  7] ret
end

on getItemsAllowedOnTop me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 276 .......................... <me.bItemsAllowedOnTop>
  [  5] pusharglistnoret 1 ...................... <me.bItemsAllowedOnTop>
  [  7] extcall 93 .............................. return me.bItemsAllowedOnTop
  [  9] ret
end

on getGridZ me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 178 .......................... <me.iRow>
  [  4] pusharglistnoret 1 ...................... <me.iRow>
  [  6] extcall 93 .............................. return me.iRow
  [  8] ret
end

on setXPos me, iXPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iXPos>
  [  4] setobjprop 316 .......................... me.iGridX = iXPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iXPos>
  [ 11] setobjprop 179 .......................... me.iCol = iXPos
  [ 13] ret
end

on setYPos me, iYPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iYPos>
  [  4] setobjprop 277 .......................... me.iGridY = iYPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iYPos>
  [ 11] pusharglistnoret 2 ...................... <me, iYPos>
  [ 13] objcall 761 ............................. me.setGridY(iYPos)
  [ 16] ret
end

on setZPos me, iZPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iZPos>
  [  4] setobjprop 320 .......................... me.iGridZ = iZPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iZPos>
  [ 11] setobjprop 178 .......................... me.iRow = iZPos
  [ 13] ret
end

on setAttributes me, _aAttributes
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_aAttributes>
  [  4] setobjprop 289 .......................... me.aAttributes = _aAttributes
  [  7] ret
end

on getDirection me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 281 .......................... <me.iDirection>
  [  5] pusharglistnoret 1 ...................... <me.iDirection>
  [  7] extcall 93 .............................. return me.iDirection
  [  9] ret
end

on setGridY me, _iGridY
  [  0] getparam 1 .............................. <_iGridY>
  [  2] pushzero ................................ <0>
  [  3] lt ...................................... <_iGridY < 0>
  [  4] jmpifz [ 11] ............................ if _iGridY < 0 then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 93 .............................. return 
  [ 11] getparam 1 .............................. <_iGridY>
  [ 13] getglobal 88 ............................ <oIsoScene>
  [ 15] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [ 17] getobjprop 377 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [ 20] gt ...................................... <_iGridY > oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [ 21] jmpifz [ 29] ............................ if _iGridY > oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 93 .............................. return 0
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 1 .............................. <_iGridY>
  [ 33] setobjprop 277 .......................... me.iGridY = _iGridY
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 275 ............................. me.draw()
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 93 .............................. return 1
  [ 49] ret
end

on changeGridY me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 277 .......................... <me.iGridY>
  [  7] getparam 1 .............................. <iDir>
  [  9] add ..................................... <me.iGridY + iDir>
  [ 10] pusharglist 2 ........................... <me, me.iGridY + iDir>
  [ 12] objcall 761 ............................. <me.setGridY(me.iGridY + iDir)>
  [ 15] pusharglistnoret 1 ...................... <me.setGridY(me.iGridY + iDir)>
  [ 17] extcall 93 .............................. return me.setGridY(me.iGridY + iDir)
  [ 19] ret
end

on setState me, _iState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iState>
  [  4] setobjprop 278 .......................... me.iState = _iState
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 821 ...................... <me.oAction>
  [ 12] pusharglistnoret 1 ...................... <me.oAction>
  [ 14] objcall 1281 ............................ me.oAction.displayState()
  [ 17] ret
end

on getState me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 278 .......................... <me.iState>
  [  5] pusharglistnoret 1 ...................... <me.iState>
  [  7] extcall 93 .............................. return me.iState
  [  9] ret
end

on getAttributes me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 289 .......................... <me.aAttributes>
  [  5] pusharglistnoret 1 ...................... <me.aAttributes>
  [  7] extcall 93 .............................. return me.aAttributes
  [  9] ret
end

on setAttribute me, sProp, sState
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 289 ...................... <me.aAttributes>
  [  5] getparam 1 .............................. <sProp>
  [  7] pusharglist 1 ........................... <sProp>
  [  9] extcall 652 ............................. <symbol(sProp)>
  [ 12] getparam 2 .............................. <sState>
  [ 14] pusharglistnoret 3 ...................... <me.aAttributes, symbol(sProp), sState>
  [ 16] objcall 1216 ............................ me.aAttributes.setaProp(symbol(sProp), sState)
  [ 19] ret
end

on deleteItem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 221 ............................. <me.isRugITem()>
  [  6] jmpifz [ 23] ............................ if me.isRugITem() then / else
  [  9] getglobal 88 ............................ <oIsoScene>
  [ 11] getchainedprop 123 ...................... <oIsoScene.oRugs>
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 2 ...................... <oIsoScene.oRugs, me>
  [ 17] objcall 809 ............................. oIsoScene.oRugs.removeItem(me)
  [ 20] jmp [ 34]
  [ 23] getglobal 88 ............................ <oIsoScene>
  [ 25] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 2 ...................... <oIsoScene.oFurniture, me>
  [ 31] objcall 809 ............................. oIsoScene.oFurniture.removeItem(me)
  [ 34] ret
end

on mouseIsOverITem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 150
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 151
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <_iSprite>
  [ 41] pusharglist 2 ........................... <me, _iSprite>
  [ 43] objcall 731 ............................. <me.hitTest(_iSprite)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(_iSprite) then
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 93 .............................. return 1
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 728 ............................. <me.getSprites()>
  [ 12] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 14] getlocal 1 .............................. <_aSprites>
  [ 16] peek 0
  [ 18] pusharglist 1
  [ 20] extcall 150
  [ 22] pushint8 1
  [ 24] peek 0
  [ 26] peek 2
  [ 28] lteq
  [ 29] jmpifz [ 88] ............................ repeat with _iSprite in _aSprites
  [ 32] peek 2
  [ 34] peek 1
  [ 36] pusharglist 2
  [ 38] extcall 151
  [ 40] setlocal 2
  [ 42] getlocal 2 .............................. <_iSprite>
  [ 44] pusharglist 1 ........................... <_iSprite>
  [ 46] extcall 799 ............................. <rollover(_iSprite)>
  [ 49] jmpifz [ 83] ............................ if rollover(_iSprite) then
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 2 .............................. <_iSprite>
  [ 56] pusharglist 2 ........................... <me, _iSprite>
  [ 58] objcall 731 ............................. <me.hitTest(_iSprite)>
  [ 61] jmpifz [ 83] ............................ if me.hitTest(_iSprite) then
  [ 64] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 66] getlocal 2 .............................. <_iSprite>
  [ 68] pusharglist 1 ........................... <_iSprite>
  [ 70] extcall 481 ............................. <sprite(_iSprite)>
  [ 73] getobjprop 511 .......................... <sprite(_iSprite).locZ>
  [ 76] getlocal 2 .............................. <_iSprite>
  [ 78] pusharglistnoret 3 ...................... <aSpritesUnderMouse, sprite(_iSprite).locZ, _iSprite>
  [ 80] objcall 388 ............................. aSpritesUnderMouse.addProp(sprite(_iSprite).locZ, _iSprite)
  [ 83] pushint8 1
  [ 85] add
  [ 86] endrepeat [ 24]
  [ 88] pop 3
  [ 90] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 92] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 94] extcall 93 .............................. return aSpritesUnderMouse
  [ 96] ret
end

on rolloverObject me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 150
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 58] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 151
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <_iSprite>
  [ 39] pusharglist 1 ........................... <_iSprite>
  [ 41] extcall 799 ............................. <rollover(_iSprite)>
  [ 44] jmpifz [ 53] ............................ if rollover(_iSprite) then
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 93 .............................. return 1
  [ 53] pushint8 1
  [ 55] add
  [ 56] endrepeat [ 19]
  [ 58] pop 3
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 93 .............................. return 0
  [ 65] ret
end

on getHighestDepth me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iHighestDepth = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 728 ............................. <me.getSprites()>
  [ 10] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 12] getlocal 1 .............................. <_aSprites>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 150
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 73] ............................ repeat with _iSprite in _aSprites
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 151
  [ 38] setlocal 2
  [ 40] getlocal 2 .............................. <_iSprite>
  [ 42] pusharglist 1 ........................... <_iSprite>
  [ 44] extcall 481 ............................. <sprite(_iSprite)>
  [ 47] getobjprop 511 .......................... <sprite(_iSprite).locZ>
  [ 50] getlocal 0 .............................. <iHighestDepth>
  [ 52] gt ...................................... <sprite(_iSprite).locZ > iHighestDepth>
  [ 53] jmpifz [ 68] ............................ if sprite(_iSprite).locZ > iHighestDepth then
  [ 56] getlocal 2 .............................. <_iSprite>
  [ 58] pusharglist 1 ........................... <_iSprite>
  [ 60] extcall 481 ............................. <sprite(_iSprite)>
  [ 63] getobjprop 511 .......................... <sprite(_iSprite).locZ>
  [ 66] setlocal 0 .............................. iHighestDepth = sprite(_iSprite).locZ
  [ 68] pushint8 1
  [ 70] add
  [ 71] endrepeat [ 22]
  [ 73] pop 3
  [ 75] getlocal 0 .............................. <iHighestDepth>
  [ 77] pusharglistnoret 1 ...................... <iHighestDepth>
  [ 79] extcall 93 .............................. return iHighestDepth
  [ 81] ret
end

on hitTestAll me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 150
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 151
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <i>
  [ 41] pusharglist 2 ........................... <me, i>
  [ 43] objcall 731 ............................. <me.hitTest(i)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(i) then
  [ 49] getlocal 1 .............................. <i>
  [ 51] pusharglistnoret 1 ...................... <i>
  [ 53] extcall 93 .............................. return i
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] pusharglist 0 ........................... <>
  [ 64] extcall 132 ............................. <VOID>
  [ 66] pusharglistnoret 1 ...................... <VOID>
  [ 68] extcall 93 .............................. return VOID
  [ 70] ret
end

on hitTest me, iSpriteNum
  [  0] getparam 1 .............................. <iSpriteNum>
  [  2] pusharglist 1 ........................... <iSpriteNum>
  [  4] extcall 481 ............................. <sprite(iSpriteNum)>
  [  7] setlocal 0 .............................. _oSprite = sprite(iSpriteNum)
  [  9] getlocal 0 .............................. <_oSprite>
  [ 11] pusharglist 1 ........................... <_oSprite>
  [ 13] extcall 106 ............................. <voidp(_oSprite)>
  [ 15] jmpifz [ 23] ............................ if voidp(_oSprite) then
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 93 .............................. return 0
  [ 23] getlocal 0 .............................. <_oSprite>
  [ 25] getobjprop 163 .......................... <_oSprite.member>
  [ 27] setlocal 1 .............................. _oMember = _oSprite.member
  [ 29] getlocal 1 .............................. <_oMember>
  [ 31] pusharglist 1 ........................... <_oMember>
  [ 33] extcall 106 ............................. <voidp(_oMember)>
  [ 35] jmpifz [ 43] ............................ if voidp(_oMember) then
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 93 .............................. return 0
  [ 43] getlocal 1 .............................. <_oMember>
  [ 45] getobjprop 639 .......................... <_oMember.memberNum>
  [ 48] pushzero ................................ <0>
  [ 49] lteq .................................... <_oMember.memberNum <= 0>
  [ 50] jmpifz [ 58] ............................ if _oMember.memberNum <= 0 then
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 1 ...................... <0>
  [ 56] extcall 93 .............................. return 0
  [ 58] getlocal 0 .............................. <_oSprite>
  [ 60] getmovieprop 802 ........................ <the mouseLoc>
  [ 63] pusharglist 2 ........................... <_oSprite, the mouseLoc>
  [ 65] objcall 803 ............................. <_oSprite.mapStageToMember(the mouseLoc)>
  [ 68] setlocal 2 .............................. _oMemberLoc = _oSprite.mapStageToMember(the mouseLoc)
  [ 70] getlocal 2 .............................. <_oMemberLoc>
  [ 72] pusharglist 1 ........................... <_oMemberLoc>
  [ 74] extcall 106 ............................. <voidp(_oMemberLoc)>
  [ 76] jmpifz [ 84] ............................ if voidp(_oMemberLoc) then
  [ 79] pushzero ................................ <0>
  [ 80] pusharglistnoret 1 ...................... <0>
  [ 82] extcall 93 .............................. return 0
  [ 84] getlocal 1 .............................. <_oMember>
  [ 86] getobjprop 505 .......................... <_oMember.image>
  [ 89] setlocal 3 .............................. _oImage = _oMember.image
  [ 91] getlocal 3 .............................. <_oImage>
  [ 93] getlocal 2 .............................. <_oMemberLoc>
  [ 95] pusharglist 2 ........................... <_oImage, _oMemberLoc>
  [ 97] objcall 804 ............................. <_oImage.getPixel(_oMemberLoc)>
  [100] setlocal 4 .............................. _oPixelColor = _oImage.getPixel(_oMemberLoc)
  [102] getlocal 3 .............................. <_oImage>
  [104] getobjprop 1266 ......................... <_oImage.depth>
  [107] setlocal 5 .............................. iBitDepth = _oImage.depth
  [109] pushzero ................................ <0>
  [110] setlocal 6 .............................. bHitTest = 0
  [112] getlocal 5 .............................. <iBitDepth>
  [114] pushint8 8 .............................. <8>
  [116] eq ...................................... <iBitDepth = 8>
  [117] jmpifz [137] ............................ if iBitDepth = 8 then
  [120] getlocal 4 .............................. <_oPixelColor>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 1276 ......................... <me.oHitTestColor8>
  [127] nteq .................................... <_oPixelColor <> me.oHitTestColor8>
  [128] jmpifz [137] ............................ if _oPixelColor <> me.oHitTestColor8 then
  [131] pushint8 1 .............................. <1>
  [133] pusharglistnoret 1 ...................... <1>
  [135] extcall 93 .............................. return 1
  [137] getlocal 5 .............................. <iBitDepth>
  [139] pushint8 8 .............................. <8>
  [141] gt ...................................... <iBitDepth > 8>
  [142] getlocal 5 .............................. <iBitDepth>
  [144] pushint8 32 ............................. <32>
  [146] lt ...................................... <iBitDepth < 32>
  [147] and ..................................... <(iBitDepth > 8) and (iBitDepth < 32)>
  [148] jmpifz [168] ............................ if (iBitDepth > 8) and (iBitDepth < 32) then
  [151] getlocal 4 .............................. <_oPixelColor>
  [153] getparam 0 .............................. <me>
  [155] getobjprop 1277 ......................... <me.oHitTestColor16>
  [158] nteq .................................... <_oPixelColor <> me.oHitTestColor16>
  [159] jmpifz [168] ............................ if _oPixelColor <> me.oHitTestColor16 then
  [162] pushint8 1 .............................. <1>
  [164] pusharglistnoret 1 ...................... <1>
  [166] extcall 93 .............................. return 1
  [168] pushzero ................................ <0>
  [169] pusharglistnoret 1 ...................... <0>
  [171] extcall 93 .............................. return 0
  [173] ret
end

on mouseDownEvent me, iSpriteNum, bDoubleClick
  [  0] pushcons 24 ............................. <"sprite">
  [  2] getparam 1 .............................. <iSpriteNum>
  [  4] joinpadstr .............................. <"sprite" && iSpriteNum>
  [  5] pushcons 25 ............................. <"received a mousedown event">
  [  7] joinpadstr .............................. <"sprite" && iSpriteNum && "received a mousedown event">
  [  8] pusharglistnoret 1 ...................... <"sprite" && iSpriteNum && "received a mousedown event">
  [ 10] extcall 274 ............................. put "sprite" && iSpriteNum && "received a mousedown event"
  [ 13] getparam 0 .............................. <me>
  [ 15] pushcons 26 ............................. <"FURNI MOUSE DOWN: ">
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 285 .......................... <me.sPosId>
  [ 22] joinstr ................................. <"FURNI MOUSE DOWN: " & me.sPosId>
  [ 23] pusharglistnoret 2 ...................... <me, "FURNI MOUSE DOWN: " & me.sPosId>
  [ 25] objcall 50 .............................. me.debug("FURNI MOUSE DOWN: " & me.sPosId)
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglist 1 ........................... <me>
  [ 31] objcall 764 ............................. <me.hitTestAll()>
  [ 34] setparam 1 .............................. iSpriteNum = me.hitTestAll()
  [ 36] getparam 1 .............................. <iSpriteNum>
  [ 38] pusharglist 1 ........................... <iSpriteNum>
  [ 40] extcall 106 ............................. <voidp(iSpriteNum)>
  [ 42] not ..................................... <not voidp(iSpriteNum)>
  [ 43] setlocal 0 .............................. bHitTest = not voidp(iSpriteNum)
  [ 45] getparam 0 .............................. <me>
  [ 47] pushcons 27 ............................. <"*** FURNITURE ITEM: MOUSEDOWN: ">
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 280 .......................... <me.sImageBase>
  [ 54] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase>
  [ 55] pushcons 28 ............................. <" HIT TEST: ">
  [ 57] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: ">
  [ 58] getlocal 0 .............................. <bHitTest>
  [ 60] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest>
  [ 61] pushcons 29 ............................. <" ***">
  [ 63] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest & " ***">
  [ 64] pusharglistnoret 2 ...................... <me, "*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest & " ***">
  [ 66] objcall 50 .............................. me.debug("*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest & " ***")
  [ 68] getlocal 0 .............................. <bHitTest>
  [ 70] not ..................................... <not bHitTest>
  [ 71] jmpifz [ 79] ............................ if not bHitTest then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 93 .............................. return 0
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 171 ............................. <me.getDrag()>
  [ 85] jmpifz [ 93] ............................ if me.getDrag() then
  [ 88] pushzero ................................ <0>
  [ 89] pusharglistnoret 1 ...................... <0>
  [ 91] extcall 93 .............................. return 0
  [ 93] getglobal 174 ........................... <ElementMgr>
  [ 95] pusharglist 1 ........................... <ElementMgr>
  [ 97] objcall 264 ............................. <ElementMgr.getTrader()>
  [100] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [102] extcall 106 ............................. <voidp(ElementMgr.getTrader())>
  [104] not ..................................... <not voidp(ElementMgr.getTrader())>
  [105] setlocal 1 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [107] getlocal 1 .............................. <bTrading>
  [109] jmpifz [118] ............................ if bTrading then
  [112] pushint8 1 .............................. <1>
  [114] pusharglistnoret 1 ...................... <1>
  [116] extcall 93 .............................. return 1
  [118] getparam 0 .............................. <me>
  [120] getchainedprop 821 ...................... <me.oAction>
  [123] getparam 2 .............................. <bDoubleClick>
  [125] pusharglist 2 ........................... <me.oAction, bDoubleClick>
  [127] objcall 10 .............................. <me.oAction.mouseDownEvent(bDoubleClick)>
  [129] setlocal 2 .............................. bPass = me.oAction.mouseDownEvent(bDoubleClick)
  [131] getlocal 2 .............................. <bPass>
  [133] pusharglist 1 ........................... <bPass>
  [135] extcall 106 ............................. <voidp(bPass)>
  [137] not ..................................... <not voidp(bPass)>
  [138] jmpifz [153] ............................ if not voidp(bPass) then
  [141] getlocal 2 .............................. <bPass>
  [143] not ..................................... <not bPass>
  [144] jmpifz [153] ............................ if not bPass then
  [147] pushint8 1 .............................. <1>
  [149] pusharglistnoret 1 ...................... <1>
  [151] extcall 93 .............................. return 1
  [153] getglobal 156 ........................... <oStudioMap>
  [155] pusharglist 1 ........................... <oStudioMap>
  [157] objcall 157 ............................. <oStudioMap.isPrivate()>
  [159] not ..................................... <not oStudioMap.isPrivate()>
  [160] jmpifz [168] ............................ if not oStudioMap.isPrivate() then
  [163] pushzero ................................ <0>
  [164] pusharglistnoret 1 ...................... <0>
  [166] extcall 93 .............................. return 0
  [168] getlocal 2 .............................. <bPass>
  [170] pusharglist 1 ........................... <bPass>
  [172] extcall 106 ............................. <voidp(bPass)>
  [174] getlocal 2 .............................. <bPass>
  [176] getparam 0 .............................. <me>
  [178] pusharglist 1 ........................... <me>
  [180] objcall 171 ............................. <me.getDrag()>
  [182] not ..................................... <not me.getDrag()>
  [183] and ..................................... <bPass and not me.getDrag()>
  [184] or ...................................... <voidp(bPass) or (bPass and not me.getDrag())>
  [185] jmpifz [194] ............................ if voidp(bPass) or (bPass and not me.getDrag()) then
  [188] getglobal 88 ............................ <oIsoScene>
  [190] pusharglistnoret 1 ...................... <oIsoScene>
  [192] objcall 17 .............................. oIsoScene.moveAvatar()
  [194] pushint8 1 .............................. <1>
  [196] pusharglistnoret 1 ...................... <1>
  [198] extcall 93 .............................. return 1
  [200] ret
end

on putInBackPack me
  [  0] ret
end

on placeItem me, oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"####### BEGIN PLACE ITEM ########: ">
  [  4] getparam 1 .............................. <oSquare>
  [  6] pusharglist 1 ........................... <oSquare>
  [  8] objcall 263 ............................. <oSquare.toString()>
  [ 11] joinstr ................................. <"####### BEGIN PLACE ITEM ########: " & oSquare.toString()>
  [ 12] pusharglistnoret 2 ...................... <me, "####### BEGIN PLACE ITEM ########: " & oSquare.toString()>
  [ 14] objcall 50 .............................. me.debug("####### BEGIN PLACE ITEM ########: " & oSquare.toString())
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 1 ........................... <me>
  [ 20] objcall 221 ............................. <me.isRugITem()>
  [ 22] jmpifz [ 38] ............................ if me.isRugITem() then
  [ 25] getparam 0 .............................. <me>
  [ 27] getparam 1 .............................. <oSquare>
  [ 29] pusharglist 2 ........................... <me, oSquare>
  [ 31] objcall 1234 ............................ <me.placeRugItem(oSquare)>
  [ 34] pusharglistnoret 1 ...................... <me.placeRugItem(oSquare)>
  [ 36] extcall 93 .............................. return me.placeRugItem(oSquare)
  [ 38] getglobal 88 ............................ <oIsoScene>
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 1 .............................. <oSquare>
  [ 44] pusharglist 3 ........................... <oIsoScene, me, oSquare>
  [ 46] objcall 35 .............................. <oIsoScene.getSquareOffsets(me, oSquare)>
  [ 48] setlocal 0 .............................. aDifList = oIsoScene.getSquareOffsets(me, oSquare)
  [ 50] getglobal 88 ............................ <oIsoScene>
  [ 52] getlocal 0 .............................. <aDifList>
  [ 54] pusharglist 2 ........................... <oIsoScene, aDifList>
  [ 56] objcall 26 .............................. <oIsoScene.squaresAreOverFloor(aDifList)>
  [ 58] setlocal 1 .............................. bOverFloor = oIsoScene.squaresAreOverFloor(aDifList)
  [ 60] getlocal 1 .............................. <bOverFloor>
  [ 62] not ..................................... <not bOverFloor>
  [ 63] jmpifz [ 71] ............................ if not bOverFloor then
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 1 ...................... <0>
  [ 69] extcall 93 .............................. return 0
  [ 71] getglobal 88 ............................ <oIsoScene>
  [ 73] getchainedprop 116 ...................... <oIsoScene.oMap>
  [ 75] getparam 1 .............................. <oSquare>
  [ 77] getobjprop 178 .......................... <oSquare.iRow>
  [ 79] getparam 1 .............................. <oSquare>
  [ 81] getobjprop 179 .......................... <oSquare.iCol>
  [ 83] pusharglist 3 ........................... <oIsoScene.oMap, oSquare.iRow, oSquare.iCol>
  [ 85] objcall 180 ............................. <oIsoScene.oMap.getNode(oSquare.iRow, oSquare.iCol)>
  [ 87] setlocal 2 .............................. oMapNode = oIsoScene.oMap.getNode(oSquare.iRow, oSquare.iCol)
  [ 89] getlocal 2 .............................. <oMapNode>
  [ 91] getobjprop 181 .......................... <oMapNode.w>
  [ 93] setlocal 3 .............................. iWeight = oMapNode.w
  [ 95] getlocal 3 .............................. <iWeight>
  [ 97] getglobal 88 ............................ <oIsoScene>
  [ 99] getchainedprop 116 ...................... <oIsoScene.oMap>
  [101] getchainedprop 182 ...................... <oIsoScene.oMap.oPathfinder>
  [103] getobjprop 183 .......................... <oIsoScene.oMap.oPathfinder.W_BLOCKED>
  [105] eq ...................................... <iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED>
  [106] getlocal 3 .............................. <iWeight>
  [108] getglobal 88 ............................ <oIsoScene>
  [110] getchainedprop 116 ...................... <oIsoScene.oMap>
  [112] getchainedprop 182 ...................... <oIsoScene.oMap.oPathfinder>
  [114] getobjprop 184 .......................... <oIsoScene.oMap.oPathfinder.W_ENTER>
  [116] eq ...................................... <iWeight = oIsoScene.oMap.oPathfinder.W_ENTER>
  [117] or ...................................... <(iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED) or (iWeight = oIsoScene.oMap.oPathfinder.W_ENTER)>
  [118] jmpifz [126] ............................ if (iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED) or (iWeight = oIsoScene.oMap.oPathfinder.W_ENTER) then
  [121] pushzero ................................ <0>
  [122] pusharglistnoret 1 ...................... <0>
  [124] extcall 93 .............................. return 0
  [126] getglobal 88 ............................ <oIsoScene>
  [128] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [130] getparam 0 .............................. <me>
  [132] pusharglist 2 ........................... <oIsoScene.oFurniture, me>
  [134] objcall 202 ............................. <oIsoScene.oFurniture.isSeatableItem(me)>
  [136] setlocal 4 .............................. bIsSeatableItem = oIsoScene.oFurniture.isSeatableItem(me)
  [138] getglobal 88 ............................ <oIsoScene>
  [140] getchainedprop 127 ...................... <oIsoScene.oAvatars>
  [142] getlocal 0 .............................. <aDifList>
  [144] pusharglist 2 ........................... <oIsoScene.oAvatars, aDifList>
  [146] objcall 954 ............................. <oIsoScene.oAvatars.getItemsAtSquares(aDifList)>
  [149] setlocal 5 .............................. aAvatars = oIsoScene.oAvatars.getItemsAtSquares(aDifList)
  [151] getlocal 5 .............................. <aAvatars>
  [153] getobjprop 150 .......................... <aAvatars.count>
  [155] pushzero ................................ <0>
  [156] gt ...................................... <aAvatars.count > 0>
  [157] getlocal 4 .............................. <bIsSeatableItem>
  [159] not ..................................... <not bIsSeatableItem>
  [160] and ..................................... <(aAvatars.count > 0) and not bIsSeatableItem>
  [161] jmpifz [169] ............................ if (aAvatars.count > 0) and not bIsSeatableItem then
  [164] pushzero ................................ <0>
  [165] pusharglistnoret 1 ...................... <0>
  [167] extcall 93 .............................. return 0
  [169] getparam 0 .............................. <me>
  [171] pushcons 31 ............................. <"NO AVATARS IN WAY:">
  [173] pusharglistnoret 2 ...................... <me, "NO AVATARS IN WAY:">
  [175] objcall 50 .............................. me.debug("NO AVATARS IN WAY:")
  [177] getlocal 0 .............................. <aDifList>
  [179] peek 0
  [181] pusharglist 1
  [183] extcall 150
  [185] pushint8 1
  [187] peek 0
  [189] peek 2
  [191] lteq
  [192] jmpifz [226] ............................ repeat with s in aDifList
  [195] peek 2
  [197] peek 1
  [199] pusharglist 2
  [201] extcall 151
  [203] setlocal 6
  [205] getparam 0 .............................. <me>
  [207] pushcons 32 ............................. <"s: ">
  [209] getlocal 6 .............................. <s>
  [211] pusharglist 1 ........................... <s>
  [213] objcall 263 ............................. <s.toString()>
  [216] joinstr ................................. <"s: " & s.toString()>
  [217] pusharglistnoret 2 ...................... <me, "s: " & s.toString()>
  [219] objcall 50 .............................. me.debug("s: " & s.toString())
  [221] pushint8 1
  [223] add
  [224] endrepeat [187]
  [226] pop 3
  [228] getlocal 4 .............................. <bIsSeatableItem>
  [230] jmpifz [271] ............................ if bIsSeatableItem then
  [233] getglobal 88 ............................ <oIsoScene>
  [235] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [237] getlocal 0 .............................. <aDifList>
  [239] getparam 0 .............................. <me>
  [241] pusharglist 3 ........................... <oIsoScene.oFurniture, aDifList, me>
  [243] objcall 1064 ............................ <oIsoScene.oFurniture.getItemsAtSquaresExcept(aDifList, me)>
  [246] setlocal 7 .............................. aItemsAtSquares = oIsoScene.oFurniture.getItemsAtSquaresExcept(aDifList, me)
  [248] getglobal 88 ............................ <oIsoScene>
  [250] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [252] getlocal 7 .............................. <aItemsAtSquares>
  [254] pusharglist 2 ........................... <oIsoScene.oFurniture, aItemsAtSquares>
  [256] objcall 1063 ............................ <oIsoScene.oFurniture.containsSeatableItems(aItemsAtSquares)>
  [259] setlocal 8 .............................. bContainsSeatableItems = oIsoScene.oFurniture.containsSeatableItems(aItemsAtSquares)
  [261] getlocal 8 .............................. <bContainsSeatableItems>
  [263] jmpifz [271] ............................ if bContainsSeatableItems then
  [266] pushzero ................................ <0>
  [267] pusharglistnoret 1 ...................... <0>
  [269] extcall 93 .............................. return 0
  [271] pushzero ................................ <0>
  [272] setprop 277 ............................. iGridY = 0
  [275] pushzero ................................ <0>
  [276] setlocal 9 .............................. iTestLow = 0
  [278] getparam 0 .............................. <me>
  [280] pusharglist 1 ........................... <me>
  [282] objcall 1095 ............................ <me.getHeight()>
  [285] setlocal 10 ............................. iTestHi = me.getHeight()
  [287] pushint8 1 .............................. <1>
  [289] setlocal 11
  [291] getlocal 11
  [293] getglobal 88 ............................ <oIsoScene>
  [295] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [297] getobjprop 377 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [300] lteq
  [301] jmpifz [468] ............................ repeat with i = 1 to oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT
  [304] getglobal 88 ............................ <oIsoScene>
  [306] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [308] getlocal 0 .............................. <aDifList>
  [310] getparam 0 .............................. <me>
  [312] getlocal 9 .............................. <iTestLow>
  [314] getlocal 10 ............................. <iTestHi>
  [316] pusharglist 5 ........................... <oIsoScene.oFurniture, aDifList, me, iTestLow, iTestHi>
  [318] objcall 1074 ............................ <oIsoScene.oFurniture.getItemsAtSquaresInHeightRangeExcept(aDifList, me, iTestLow, iTestHi)>
  [321] setlocal 12 ............................. aItemsInRange = oIsoScene.oFurniture.getItemsAtSquaresInHeightRangeExcept(aDifList, me, iTestLow, iTestHi)
  [323] getlocal 12 ............................. <aItemsInRange>
  [325] pusharglist 1 ........................... <aItemsInRange>
  [327] objcall 150 ............................. <aItemsInRange.count()>
  [329] setlocal 13 ............................. iCount = aItemsInRange.count()
  [331] getlocal 13 ............................. <iCount>
  [333] pushzero ................................ <0>
  [334] gt ...................................... <iCount > 0>
  [335] jmpifz [433] ............................ if iCount > 0 then
  [338] getglobal 88 ............................ <oIsoScene>
  [340] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [342] getlocal 12 ............................. <aItemsInRange>
  [344] pusharglist 2 ........................... <oIsoScene.oFurniture, aItemsInRange>
  [346] objcall 1077 ............................ <oIsoScene.oFurniture.getItemWithGreatestHeightOffset(aItemsInRange)>
  [349] setlocal 14 ............................. oItemInWay = oIsoScene.oFurniture.getItemWithGreatestHeightOffset(aItemsInRange)
  [351] getlocal 14 ............................. <oItemInWay>
  [353] pusharglist 1 ........................... <oItemInWay>
  [355] objcall 736 ............................. <oItemInWay.getItemsAllowedOnTop()>
  [358] setlocal 15 ............................. bAllowItemsOnTop = oItemInWay.getItemsAllowedOnTop()
  [360] getlocal 15 ............................. <bAllowItemsOnTop>
  [362] not ..................................... <not bAllowItemsOnTop>
  [363] jmpifz [371] ............................ if not bAllowItemsOnTop then
  [366] pushzero ................................ <0>
  [367] pusharglistnoret 1 ...................... <0>
  [369] extcall 93 .............................. return 0
  [371] getlocal 14 ............................. <oItemInWay>
  [373] pusharglist 1 ........................... <oItemInWay>
  [375] objcall 204 ............................. <oItemInWay.getHeightOffset()>
  [377] getlocal 14 ............................. <oItemInWay>
  [379] pusharglist 1 ........................... <oItemInWay>
  [381] objcall 1095 ............................ <oItemInWay.getHeight()>
  [384] add ..................................... <oItemInWay.getHeightOffset() + oItemInWay.getHeight()>
  [385] setlocal 9 .............................. iTestLow = oItemInWay.getHeightOffset() + oItemInWay.getHeight()
  [387] getlocal 9 .............................. <iTestLow>
  [389] getglobal 88 ............................ <oIsoScene>
  [391] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [393] getobjprop 378 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET>
  [396] gteq .................................... <iTestLow >= oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET>
  [397] jmpifz [405] ............................ if iTestLow >= oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET then
  [400] pushzero ................................ <0>
  [401] pusharglistnoret 1 ...................... <0>
  [403] extcall 93 .............................. return 0
  [405] getlocal 9 .............................. <iTestLow>
  [407] getlocal 14 ............................. <oItemInWay>
  [409] pusharglist 1 ........................... <oItemInWay>
  [411] objcall 1095 ............................ <oItemInWay.getHeight()>
  [414] add ..................................... <iTestLow + oItemInWay.getHeight()>
  [415] setlocal 10 ............................. iTestHi = iTestLow + oItemInWay.getHeight()
  [417] getlocal 14 ............................. <oItemInWay>
  [419] pusharglist 1 ........................... <oItemInWay>
  [421] objcall 760 ............................. <oItemInWay.getGridY()>
  [424] pushint8 1 .............................. <1>
  [426] add ..................................... <oItemInWay.getGridY() + 1>
  [427] setprop 277 ............................. iGridY = oItemInWay.getGridY() + 1
  [430] jmp [459] ............................... next repeat
  [433] getparam 0 .............................. <me>
  [435] getparam 1 .............................. <oSquare>
  [437] getobjprop 178 .......................... <oSquare.iRow>
  [439] getparam 1 .............................. <oSquare>
  [441] getobjprop 179 .......................... <oSquare.iCol>
  [443] getprop 277 ............................. <iGridY>
  [446] getlocal 9 .............................. <iTestLow>
  [448] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, iGridY, iTestLow>
  [450] objcall 1184 ............................ me.setDragPosition(oSquare.iRow, oSquare.iCol, iGridY, iTestLow)
  [453] pushint8 1 .............................. <1>
  [455] pusharglistnoret 1 ...................... <1>
  [457] extcall 93 .............................. return 1
  [459] pushint8 1
  [461] getlocal 11
  [463] add
  [464] setlocal 11
  [466] endrepeat [291]
  [468] pushzero ................................ <0>
  [469] pusharglistnoret 1 ...................... <0>
  [471] extcall 93 .............................. return 0
  [473] ret
end

on placeRugItem me, oSquare
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getparam 0 .............................. <me>
  [  4] getparam 1 .............................. <oSquare>
  [  6] pusharglist 3 ........................... <oIsoScene, me, oSquare>
  [  8] objcall 35 .............................. <oIsoScene.getSquareOffsets(me, oSquare)>
  [ 10] setlocal 0 .............................. aDifList = oIsoScene.getSquareOffsets(me, oSquare)
  [ 12] getglobal 88 ............................ <oIsoScene>
  [ 14] getlocal 0 .............................. <aDifList>
  [ 16] pusharglist 2 ........................... <oIsoScene, aDifList>
  [ 18] objcall 26 .............................. <oIsoScene.squaresAreOverFloor(aDifList)>
  [ 20] setlocal 1 .............................. bOverFloor = oIsoScene.squaresAreOverFloor(aDifList)
  [ 22] getlocal 1 .............................. <bOverFloor>
  [ 24] not ..................................... <not bOverFloor>
  [ 25] jmpifz [ 33] ............................ if not bOverFloor then
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 93 .............................. return 0
  [ 33] getglobal 88 ............................ <oIsoScene>
  [ 35] getchainedprop 123 ...................... <oIsoScene.oRugs>
  [ 37] pusharglist 1 ........................... <oIsoScene.oRugs>
  [ 39] objcall 1109 ............................ <oIsoScene.oRugs.getNextHighestDepth()>
  [ 42] setlocal 2 .............................. _iGridY = oIsoScene.oRugs.getNextHighestDepth()
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 1 .............................. <oSquare>
  [ 48] getobjprop 178 .......................... <oSquare.iRow>
  [ 50] getparam 1 .............................. <oSquare>
  [ 52] getobjprop 179 .......................... <oSquare.iCol>
  [ 54] getlocal 2 .............................. <_iGridY>
  [ 56] pushzero ................................ <0>
  [ 57] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, _iGridY, 0>
  [ 59] objcall 1184 ............................ me.setDragPosition(oSquare.iRow, oSquare.iCol, _iGridY, 0)
  [ 62] pushint8 1 .............................. <1>
  [ 64] pusharglistnoret 1 ...................... <1>
  [ 66] extcall 93 .............................. return 1
  [ 68] ret
end

on rotateItem me
  [  0] getglobal 194 ........................... <gFeatureSet>
  [  2] pushsymb 1293 ........................... <#FURNITURE_ROTATE>
  [  5] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_ROTATE>
  [  7] objcall 196 ............................. <gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [  9] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [ 10] jmpifz [ 17] ............................ if not gFeatureSet.isEnabled(#FURNITURE_ROTATE) then
  [ 13] pusharglistnoret 0 ...................... <>
  [ 15] extcall 93 .............................. return 
  [ 17] getglobal 88 ............................ <oIsoScene>
  [ 19] getchainedprop 133 ...................... <oIsoScene.oSelectedItem>
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me>
  [ 25] objcall 243 ............................. <oIsoScene.oSelectedItem.equals(me)>
  [ 27] jmpifz [ 36] ............................ if oIsoScene.oSelectedItem.equals(me) then
  [ 30] getglobal 88 ............................ <oIsoScene>
  [ 32] pusharglistnoret 1 ...................... <oIsoScene>
  [ 34] objcall 29 .............................. oIsoScene.rotateSelectedItem()
  [ 36] ret
end

on setGridPosition me, _iRow, _iCol, _iGridY, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1232 ............................ me.HidePreview()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_iRow>
  [ 11] setobjprop 178 .......................... me.iRow = _iRow
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 2 .............................. <_iCol>
  [ 17] setobjprop 179 .......................... me.iCol = _iCol
  [ 19] getparam 3 .............................. <_iGridY>
  [ 21] pusharglist 1 ........................... <_iGridY>
  [ 23] extcall 106 ............................. <voidp(_iGridY)>
  [ 25] not ..................................... <not voidp(_iGridY)>
  [ 26] jmpifz [ 36] ............................ if not voidp(_iGridY) then
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 3 .............................. <_iGridY>
  [ 33] setobjprop 277 .......................... me.iGridY = _iGridY
  [ 36] getparam 4 .............................. <_iHeightOffset>
  [ 38] pusharglist 1 ........................... <_iHeightOffset>
  [ 40] extcall 106 ............................. <voidp(_iHeightOffset)>
  [ 42] not ..................................... <not voidp(_iHeightOffset)>
  [ 43] jmpifz [ 53] ............................ if not voidp(_iHeightOffset) then
  [ 46] getparam 0 .............................. <me>
  [ 48] getparam 4 .............................. <_iHeightOffset>
  [ 50] setobjprop 282 .......................... me.iHeightOffset = _iHeightOffset
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglistnoret 1 ...................... <me>
  [ 57] objcall 275 ............................. me.draw()
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 178 .......................... <me.iRow>
  [ 66] setobjprop 1294 ......................... me.iLastRow = me.iRow
  [ 69] getparam 0 .............................. <me>
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 179 .......................... <me.iCol>
  [ 75] setobjprop 1295 ......................... me.iLastCol = me.iCol
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 277 .......................... <me.iGridY>
  [ 85] setobjprop 1296 ......................... me.iLastGridY = me.iGridY
  [ 88] getparam 0 .............................. <me>
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 282 .......................... <me.iHeightOffset>
  [ 95] setobjprop 1297 ......................... me.iLastHeightOffset = me.iHeightOffset
  [ 98] getglobal 88 ............................ <oIsoScene>
  [100] getchainedprop 127 ...................... <oIsoScene.oAvatars>
  [102] pusharglistnoret 1 ...................... <oIsoScene.oAvatars>
  [104] objcall 952 ............................. oIsoScene.oAvatars.updateAll()
  [107] ret
end

on setDragPosition me, _iRow, _iCol, _iGridY, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1232 ............................ me.HidePreview()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_iRow>
  [ 11] setobjprop 178 .......................... me.iRow = _iRow
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 2 .............................. <_iCol>
  [ 17] setobjprop 179 .......................... me.iCol = _iCol
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 4 .............................. <_iHeightOffset>
  [ 23] setobjprop 282 .......................... me.iHeightOffset = _iHeightOffset
  [ 26] getparam 0 .............................. <me>
  [ 28] getparam 3 .............................. <_iGridY>
  [ 30] setobjprop 277 .......................... me.iGridY = _iGridY
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 275 ............................. me.draw()
  [ 40] ret
end

on resetLastPosition me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1294 ......................... <me.iLastRow>
  [  5] pusharglist 1 ........................... <me.iLastRow>
  [  7] extcall 106 ............................. <voidp(me.iLastRow)>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 1295 ......................... <me.iLastCol>
  [ 14] pusharglist 1 ........................... <me.iLastCol>
  [ 16] extcall 106 ............................. <voidp(me.iLastCol)>
  [ 18] or ...................................... <voidp(me.iLastRow) or voidp(me.iLastCol)>
  [ 19] jmpifz [ 27] ............................ if voidp(me.iLastRow) or voidp(me.iLastCol) then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 93 .............................. return 0
  [ 27] getglobal 88 ............................ <oIsoScene>
  [ 29] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1294 ......................... <me.iLastRow>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 1295 ......................... <me.iLastCol>
  [ 41] pusharglist 3 ........................... <oIsoScene.oGrid, me.iLastRow, me.iLastCol>
  [ 43] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iLastRow, me.iLastCol)>
  [ 46] setlocal 0 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iLastRow, me.iLastCol)
  [ 48] getglobal 88 ............................ <oIsoScene>
  [ 50] getlocal 0 .............................. <oSquare>
  [ 52] pusharglist 2 ........................... <oIsoScene, oSquare>
  [ 54] objcall 25 .............................. <oIsoScene.isOverFloor(oSquare)>
  [ 56] not ..................................... <not oIsoScene.isOverFloor(oSquare)>
  [ 57] jmpifz [ 65] ............................ if not oIsoScene.isOverFloor(oSquare) then
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 93 .............................. return 0
  [ 65] getparam 0 .............................. <me>
  [ 67] getparam 0 .............................. <me>
  [ 69] getobjprop 1275 ......................... <me.iLastDirectionIndex>
  [ 72] setobjprop 1274 ......................... me.iDirectionIndex = me.iLastDirectionIndex
  [ 75] getparam 0 .............................. <me>
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 702 ............................ <#aDirections>
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 1274 ......................... <me.iDirectionIndex>
  [ 87] pusharglist 3 ........................... <me, #aDirections, me.iDirectionIndex>
  [ 89] objcall 611 ............................. <me.aDirections[me.iDirectionIndex]>
  [ 92] pusharglistnoret 2 ...................... <me, me.aDirections[me.iDirectionIndex]>
  [ 94] objcall 1186 ............................ me.setDirection(me.aDirections[me.iDirectionIndex])
  [ 97] getparam 0 .............................. <me>
  [ 99] pushzero ................................ <0>
  [100] setobjprop 1269 ......................... me.iFrame = 0
  [103] getparam 0 .............................. <me>
  [105] pushzero ................................ <0>
  [106] pusharglistnoret 2 ...................... <me, 0>
  [108] objcall 292 ............................. me.setDrag(0)
  [111] getparam 0 .............................. <me>
  [113] getparam 0 .............................. <me>
  [115] getobjprop 1294 ......................... <me.iLastRow>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 1295 ......................... <me.iLastCol>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 1296 ......................... <me.iLastGridY>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 1297 ......................... <me.iLastHeightOffset>
  [133] pusharglistnoret 5 ...................... <me, me.iLastRow, me.iLastCol, me.iLastGridY, me.iLastHeightOffset>
  [135] objcall 1185 ............................ me.setGridPosition(me.iLastRow, me.iLastCol, me.iLastGridY, me.iLastHeightOffset)
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 93 .............................. return 1
  [144] ret
end

on existsAtSquare me, oSquare
  [  0] getparam 1 .............................. <oSquare>
  [  2] pusharglist 1 ........................... <oSquare>
  [  4] extcall 106 ............................. <voidp(oSquare)>
  [  6] jmpifz [ 13] ............................ if voidp(oSquare) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 311 ............................. <me.getOccupiedSquares()>
  [ 20] setlocal 0 .............................. aList = me.getOccupiedSquares()
  [ 22] pushint8 1 .............................. <1>
  [ 24] setlocal 1
  [ 26] getlocal 1
  [ 28] getlocal 0 .............................. <aList>
  [ 30] getobjprop 150 .......................... <aList.count>
  [ 32] lteq
  [ 33] jmpifz [ 68] ............................ repeat with i = 1 to aList.count
  [ 36] getparam 1 .............................. <oSquare>
  [ 38] getlocal 0 .............................. <aList>
  [ 40] getlocal 1 .............................. <i>
  [ 42] pusharglist 2 ........................... <aList, i>
  [ 44] objcall 151 ............................. <aList[i]>
  [ 46] pusharglist 2 ........................... <oSquare, aList[i]>
  [ 48] objcall 243 ............................. <oSquare.equals(aList[i])>
  [ 50] jmpifz [ 59] ............................ if oSquare.equals(aList[i]) then
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 1 ...................... <1>
  [ 57] extcall 93 .............................. return 1
  [ 59] pushint8 1
  [ 61] getlocal 1
  [ 63] add
  [ 64] setlocal 1
  [ 66] endrepeat [ 26]
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 93 .............................. return 0
  [ 73] ret
end

on setDrag me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1191 ......................... <me.bDragging>
  [  5] not ..................................... <not me.bDragging>
  [  6] getparam 1 .............................. <bState>
  [  8] and ..................................... <not me.bDragging and bState>
  [  9] jmpifz [ 50] ............................ if not me.bDragging and bState then
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 178 .......................... <me.iRow>
  [ 18] setobjprop 1294 ......................... me.iLastRow = me.iRow
  [ 21] getparam 0 .............................. <me>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 179 .......................... <me.iCol>
  [ 27] setobjprop 1295 ......................... me.iLastCol = me.iCol
  [ 30] getparam 0 .............................. <me>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 277 .......................... <me.iGridY>
  [ 37] setobjprop 1296 ......................... me.iLastGridY = me.iGridY
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 282 .......................... <me.iHeightOffset>
  [ 47] setobjprop 1297 ......................... me.iLastHeightOffset = me.iHeightOffset
  [ 50] getparam 0 .............................. <me>
  [ 52] getparam 1 .............................. <bState>
  [ 54] setobjprop 1191 ......................... me.bDragging = bState
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 1191 ......................... <me.bDragging>
  [ 62] jmpifz [ 71] ............................ if me.bDragging then
  [ 65] getparam 0 .............................. <me>
  [ 67] pushzero ................................ <0>
  [ 68] setobjprop 1269 ......................... me.iFrame = 0
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 1191 ......................... <me.bDragging>
  [ 76] not ..................................... <not me.bDragging>
  [ 77] jmpifz [ 86] ............................ if not me.bDragging then
  [ 80] getparam 0 .............................. <me>
  [ 82] pushzero ................................ <0>
  [ 83] setobjprop 1269 ......................... me.iFrame = 0
  [ 86] ret
end

on getDrag me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1191 ......................... <me.bDragging>
  [  5] pusharglistnoret 1 ...................... <me.bDragging>
  [  7] extcall 93 .............................. return me.bDragging
  [  9] ret
end

on drop me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"drop()">
  [  4] pusharglistnoret 2 ...................... <me, "drop()">
  [  6] objcall 50 .............................. me.debug("drop()")
  [  8] getglobal 174 ........................... <ElementMgr>
  [ 10] pusharglist 1 ........................... <ElementMgr>
  [ 12] objcall 264 ............................. <ElementMgr.getTrader()>
  [ 15] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 17] extcall 106 ............................. <voidp(ElementMgr.getTrader())>
  [ 19] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 20] jmpifz [ 28] ............................ if not voidp(ElementMgr.getTrader()) then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 93 .............................. return 0
  [ 28] getglobal 88 ............................ <oIsoScene>
  [ 30] getobjprop 149 .......................... <oIsoScene.oMouseSquare>
  [ 32] setlocal 0 .............................. oSquare = oIsoScene.oMouseSquare
  [ 34] getlocal 0 .............................. <oSquare>
  [ 36] pusharglist 1 ........................... <oSquare>
  [ 38] extcall 106 ............................. <voidp(oSquare)>
  [ 40] jmpifz [ 48] ............................ if voidp(oSquare) then
  [ 43] pushzero ................................ <0>
  [ 44] pusharglistnoret 1 ...................... <0>
  [ 46] extcall 93 .............................. return 0
  [ 48] getglobal 88 ............................ <oIsoScene>
  [ 50] getlocal 0 .............................. <oSquare>
  [ 52] pusharglist 2 ........................... <oIsoScene, oSquare>
  [ 54] objcall 25 .............................. <oIsoScene.isOverFloor(oSquare)>
  [ 56] not ..................................... <not oIsoScene.isOverFloor(oSquare)>
  [ 57] jmpifz [ 65] ............................ if not oIsoScene.isOverFloor(oSquare) then
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 93 .............................. return 0
  [ 65] getparam 0 .............................. <me>
  [ 67] getlocal 0 .............................. <oSquare>
  [ 69] pusharglist 2 ........................... <me, oSquare>
  [ 71] objcall 310 ............................. <me.placeItem(oSquare)>
  [ 74] setlocal 1 .............................. bSuccess = me.placeItem(oSquare)
  [ 76] getlocal 1 .............................. <bSuccess>
  [ 78] jmpifz [116] ............................ if bSuccess then
  [ 81] getparam 0 .............................. <me>
  [ 83] getparam 0 .............................. <me>
  [ 85] getobjprop 1274 ......................... <me.iDirectionIndex>
  [ 88] setobjprop 1275 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [ 91] getparam 0 .............................. <me>
  [ 93] getlocal 0 .............................. <oSquare>
  [ 95] getobjprop 178 .......................... <oSquare.iRow>
  [ 97] getlocal 0 .............................. <oSquare>
  [ 99] getobjprop 179 .......................... <oSquare.iCol>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 277 .......................... <me.iGridY>
  [106] getparam 0 .............................. <me>
  [108] getobjprop 282 .......................... <me.iHeightOffset>
  [111] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, me.iGridY, me.iHeightOffset>
  [113] objcall 1185 ............................ me.setGridPosition(oSquare.iRow, oSquare.iCol, me.iGridY, me.iHeightOffset)
  [116] getlocal 1 .............................. <bSuccess>
  [118] pusharglistnoret 1 ...................... <bSuccess>
  [120] extcall 93 .............................. return bSuccess
  [122] ret
end

on destroy me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 1279 ......................... <me.iPreviewSprite>
  [ 16] pusharglistnoret 2 ...................... <_aSprites, me.iPreviewSprite>
  [ 18] objcall 135 ............................. _aSprites.add(me.iPreviewSprite)
  [ 20] getglobal 88 ............................ <oIsoScene>
  [ 22] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 24] getlocal 0 .............................. <_aSprites>
  [ 26] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, _aSprites>
  [ 28] objcall 620 ............................. oIsoScene.oSpriteManager.returnPooledSprites(_aSprites)
  [ 31] getmovieprop 134 ........................ <the actorList>
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 2 ...................... <the actorList, me>
  [ 37] objcall 359 ............................. (the actorList).deleteOne(me)
  [ 40] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 150
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 63] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 151
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <i>
  [ 39] pusharglist 1 ........................... <i>
  [ 41] extcall 481 ............................. <sprite(i)>
  [ 44] getlocal 1 .............................. <i>
  [ 46] pusharglist 1 ........................... <i>
  [ 48] extcall 481 ............................. <sprite(i)>
  [ 51] getobjprop 493 .......................... <sprite(i).visible>
  [ 54] not ..................................... <not sprite(i).visible>
  [ 55] setobjprop 493 .......................... sprite(i).visible = not sprite(i).visible
  [ 58] pushint8 1
  [ 60] add
  [ 61] endrepeat [ 19]
  [ 63] pop 3
  [ 65] ret
end

on getSprites me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aSprites = []
  [  5] getparam 0 .............................. <me>
  [  7] pushsymb 1298 ........................... <#aDrawOrder>
  [ 10] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 12] objcall 150 ............................. <me.aDrawOrder.count>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] pushint8 1 .............................. <1>
  [ 20] gteq
  [ 21] jmpifz [ 76] ............................ repeat with i = me.aDrawOrder.count down to 1
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 1298 ..................... <me.aDrawOrder>
  [ 29] getlocal 1 .............................. <i>
  [ 31] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 33] objcall 957 ............................. <me.aDrawOrder.getPropAt(i)>
  [ 36] setlocal 2 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 38] getparam 0 .............................. <me>
  [ 40] pushsymb 1298 ........................... <#aDrawOrder>
  [ 43] getlocal 1 .............................. <i>
  [ 45] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 47] objcall 611 ............................. <me.aDrawOrder[i]>
  [ 50] setlocal 3 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 52] getlocal 3 .............................. <aOrderAttributes>
  [ 54] getobjprop 481 .......................... <aOrderAttributes.sprite>
  [ 57] setlocal 4 .............................. iSprite = aOrderAttributes.sprite
  [ 59] getlocal 0 .............................. <_aSprites>
  [ 61] getlocal 4 .............................. <iSprite>
  [ 63] pusharglistnoret 2 ...................... <_aSprites, iSprite>
  [ 65] objcall 135 ............................. _aSprites.add(iSprite)
  [ 67] pushint8 -1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 16]
  [ 76] getlocal 0 .............................. <_aSprites>
  [ 78] pusharglistnoret 1 ...................... <_aSprites>
  [ 80] extcall 93 .............................. return _aSprites
  [ 82] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 821 .......................... <me.oAction>
  [  5] pusharglist 1 ........................... <me.oAction>
  [  7] extcall 106 ............................. <voidp(me.oAction)>
  [  9] not ..................................... <not voidp(me.oAction)>
  [ 10] jmpifz [ 22] ............................ if not voidp(me.oAction) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 821 ...................... <me.oAction>
  [ 18] pusharglistnoret 1 ...................... <me.oAction>
  [ 20] objcall 7 ............................... me.oAction.stepFrame()
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 1268 ......................... <me.bAnimate>
  [ 27] not ..................................... <not me.bAnimate>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 1191 ......................... <me.bDragging>
  [ 33] not ..................................... <not me.bDragging>
  [ 34] and ..................................... <not me.bAnimate and not me.bDragging>
  [ 35] jmpifz [ 42] ............................ if not me.bAnimate and not me.bDragging then
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 93 .............................. return 
  [ 42] getmovieprop 89 ......................... <the milliSeconds>
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 1192 ......................... <me.iTimer>
  [ 49] sub ..................................... <the milliSeconds - me.iTimer>
  [ 50] pushint16 1000 .......................... <1000>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 84 ........................... <me.iFPS>
  [ 57] div ..................................... <1000 / me.iFPS>
  [ 58] gteq .................................... <(the milliSeconds - me.iTimer) >= (1000 / me.iFPS)>
  [ 59] jmpifz [ 84] ............................ if (the milliSeconds - me.iTimer) >= (1000 / me.iFPS) then
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 1268 ......................... <me.bAnimate>
  [ 67] jmpifz [ 77] ............................ if me.bAnimate then
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglistnoret 1 ...................... <me>
  [ 74] objcall 1236 ............................ me.animate()
  [ 77] getparam 0 .............................. <me>
  [ 79] getmovieprop 89 ......................... <the milliSeconds>
  [ 81] setobjprop 1192 ......................... me.iTimer = the milliSeconds
  [ 84] ret
end

on animate me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 1245 ............................ me.nextFrame(1)
  [  9] ret
end

on getHeightSquare me, oBaseSquare
  [  0] getparam 1 .............................. <oBaseSquare>
  [  2] getobjprop 178 .......................... <oBaseSquare.iRow>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 277 .......................... <me.iGridY>
  [  9] sub ..................................... <oBaseSquare.iRow - me.iGridY>
  [ 10] setlocal 0 .............................. _iRow = oBaseSquare.iRow - me.iGridY
  [ 12] getparam 1 .............................. <oBaseSquare>
  [ 14] getobjprop 179 .......................... <oBaseSquare.iCol>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 277 .......................... <me.iGridY>
  [ 21] sub ..................................... <oBaseSquare.iCol - me.iGridY>
  [ 22] setlocal 1 .............................. _iCol = oBaseSquare.iCol - me.iGridY
  [ 24] getglobal 88 ............................ <oIsoScene>
  [ 26] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 28] getlocal 0 .............................. <_iRow>
  [ 30] getlocal 1 .............................. <_iCol>
  [ 32] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 34] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 37] setlocal 2 .............................. oHeightSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 39] getlocal 2 .............................. <oHeightSquare>
  [ 41] pusharglist 1 ........................... <oHeightSquare>
  [ 43] extcall 106 ............................. <voidp(oHeightSquare)>
  [ 45] jmpifz [ 57] ............................ if voidp(oHeightSquare) then / else
  [ 48] getparam 1 .............................. <oBaseSquare>
  [ 50] pusharglistnoret 1 ...................... <oBaseSquare>
  [ 52] extcall 93 .............................. return oBaseSquare
  [ 54] jmp [ 63]
  [ 57] getlocal 2 .............................. <oHeightSquare>
  [ 59] pusharglistnoret 1 ...................... <oHeightSquare>
  [ 61] extcall 93 .............................. return oHeightSquare
  [ 63] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 275 ............................. me.draw()
  [  7] ret
end

on getSquare me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 178 .......................... <me.iRow>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 179 .......................... <me.iCol>
  [ 12] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [ 14] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [ 17] pusharglistnoret 1 ...................... <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [ 19] extcall 93 .............................. return oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [ 21] ret
end

on draw me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 207 ............................. <me.getSquare()>
  [  6] setlocal 0 .............................. oSquare = me.getSquare()
  [  8] getlocal 0 .............................. <oSquare>
  [ 10] pusharglist 1 ........................... <oSquare>
  [ 12] extcall 106 ............................. <voidp(oSquare)>
  [ 14] jmpifz [ 21] ............................ if voidp(oSquare) then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 93 .............................. return 
  [ 21] getlocal 0 .............................. <oSquare>
  [ 23] setlocal 1 .............................. oHeightSquare = oSquare
  [ 25] getlocal 1 .............................. <oHeightSquare>
  [ 27] pusharglist 1 ........................... <oHeightSquare>
  [ 29] objcall 582 ............................. <oHeightSquare.getViewLeft()>
  [ 32] setlocal 2 .............................. oLeft = oHeightSquare.getViewLeft()
  [ 34] getlocal 1 .............................. <oHeightSquare>
  [ 36] pusharglist 1 ........................... <oHeightSquare>
  [ 38] objcall 583 ............................. <oHeightSquare.getViewRight()>
  [ 41] setlocal 3 .............................. oRight = oHeightSquare.getViewRight()
  [ 43] pushint8 1 .............................. <1>
  [ 45] setlocal 4
  [ 47] getlocal 4
  [ 49] getparam 0 .............................. <me>
  [ 51] pushsymb 1298 ........................... <#aDrawOrder>
  [ 54] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 56] objcall 150 ............................. <me.aDrawOrder.count>
  [ 58] lteq
  [ 59] jmpifz [449] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 62] getparam 0 .............................. <me>
  [ 64] getchainedprop 1298 ..................... <me.aDrawOrder>
  [ 67] getlocal 4 .............................. <i>
  [ 69] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 71] objcall 957 ............................. <me.aDrawOrder.getPropAt(i)>
  [ 74] setlocal 5 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 76] getparam 0 .............................. <me>
  [ 78] pushsymb 1298 ........................... <#aDrawOrder>
  [ 81] getlocal 4 .............................. <i>
  [ 83] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 85] objcall 611 ............................. <me.aDrawOrder[i]>
  [ 88] setlocal 6 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 90] getlocal 6 .............................. <aOrderAttributes>
  [ 92] getobjprop 481 .......................... <aOrderAttributes.sprite>
  [ 95] setlocal 7 .............................. iSprite = aOrderAttributes.sprite
  [ 97] getlocal 7 .............................. <iSprite>
  [ 99] pusharglist 1 ........................... <iSprite>
  [101] extcall 481 ............................. <sprite(iSprite)>
  [104] pushzero ................................ <0>
  [105] setobjprop 493 .......................... sprite(iSprite).visible = 0
  [108] getlocal 5 .............................. <sOrder>
  [110] pushcons 34 ............................. <"sd">
  [112] eq ...................................... <sOrder = "sd">
  [113] getparam 0 .............................. <me>
  [115] getobjprop 282 .......................... <me.iHeightOffset>
  [118] pushzero ................................ <0>
  [119] gt ...................................... <me.iHeightOffset > 0>
  [120] and ..................................... <(sOrder = "sd") and (me.iHeightOffset > 0)>
  [121] jmpifz [127] ............................ if (sOrder = "sd") and (me.iHeightOffset > 0) then
  [124] jmp [439] ............................... next repeat
  [127] getlocal 6 .............................. <aOrderAttributes>
  [129] getobjprop 493 .......................... <aOrderAttributes.visible>
  [132] pushzero ................................ <0>
  [133] eq ...................................... <aOrderAttributes.visible = 0>
  [134] jmpifz [140] ............................ if aOrderAttributes.visible = 0 then
  [137] jmp [439] ............................... next repeat
  [140] getparam 0 .............................. <me>
  [142] getlocal 5 .............................. <sOrder>
  [144] getparam 0 .............................. <me>
  [146] getobjprop 281 .......................... <me.iDirection>
  [149] pusharglist 3 ........................... <me, sOrder, me.iDirection>
  [151] objcall 1240 ............................ <me.getMemberDrawProps(sOrder, me.iDirection)>
  [154] setlocal 8 .............................. aMemberProps = me.getMemberDrawProps(sOrder, me.iDirection)
  [156] getparam 0 .............................. <me>
  [158] getlocal 5 .............................. <sOrder>
  [160] getlocal 0 .............................. <oSquare>
  [162] pusharglist 3 ........................... <me, sOrder, oSquare>
  [164] objcall 762 ............................. <me.calculateZOrder(sOrder, oSquare)>
  [167] setlocal 9 .............................. iZ = me.calculateZOrder(sOrder, oSquare)
  [169] getlocal 7 .............................. <iSprite>
  [171] pusharglist 1 ........................... <iSprite>
  [173] extcall 481 ............................. <sprite(iSprite)>
  [176] getlocal 9 .............................. <iZ>
  [178] setobjprop 511 .......................... sprite(iSprite).locZ = iZ
  [181] getlocal 2 .............................. <oLeft>
  [183] getobjprop 329 .......................... <oLeft.locV>
  [186] getparam 0 .............................. <me>
  [188] getobjprop 282 .......................... <me.iHeightOffset>
  [191] sub ..................................... <oLeft.locV - me.iHeightOffset>
  [192] getlocal 6 .............................. <aOrderAttributes>
  [194] getobjprop 1302 ......................... <aOrderAttributes.vShift>
  [197] sub ..................................... <oLeft.locV - me.iHeightOffset - aOrderAttributes.vShift>
  [198] setlocal 10 ............................. iLocV = oLeft.locV - me.iHeightOffset - aOrderAttributes.vShift
  [200] getlocal 8 .............................. <aMemberProps>
  [202] getobjprop 163 .......................... <aMemberProps.member>
  [204] setlocal 11 ............................. oMember = aMemberProps.member
  [206] getlocal 11 ............................. <oMember>
  [208] pusharglist 1 ........................... <oMember>
  [210] extcall 106 ............................. <voidp(oMember)>
  [212] jmpifz [291] ............................ if voidp(oMember) then
  [215] getlocal 7 .............................. <iSprite>
  [217] pusharglist 1 ........................... <iSprite>
  [219] extcall 481 ............................. <sprite(iSprite)>
  [222] getobjprop 642 .......................... <sprite(iSprite).flipH>
  [225] jmpifz [246] ............................ if sprite(iSprite).flipH then / else
  [228] getlocal 7 .............................. <iSprite>
  [230] pusharglist 1 ........................... <iSprite>
  [232] extcall 481 ............................. <sprite(iSprite)>
  [235] getlocal 3 .............................. <oRight>
  [237] getobjprop 328 .......................... <oRight.locH>
  [240] setobjprop 328 .......................... sprite(iSprite).locH = oRight.locH
  [243] jmp [261]
  [246] getlocal 7 .............................. <iSprite>
  [248] pusharglist 1 ........................... <iSprite>
  [250] extcall 481 ............................. <sprite(iSprite)>
  [253] getlocal 2 .............................. <oLeft>
  [255] getobjprop 328 .......................... <oLeft.locH>
  [258] setobjprop 328 .......................... sprite(iSprite).locH = oLeft.locH
  [261] getlocal 7 .............................. <iSprite>
  [263] pusharglist 1 ........................... <iSprite>
  [265] extcall 481 ............................. <sprite(iSprite)>
  [268] getlocal 10 ............................. <iLocV>
  [270] setobjprop 329 .......................... sprite(iSprite).locV = iLocV
  [273] getlocal 7 .............................. <iSprite>
  [275] pusharglist 1 ........................... <iSprite>
  [277] extcall 481 ............................. <sprite(iSprite)>
  [280] getparam 0 .............................. <me>
  [282] getobjprop 1167 ......................... <me.bVisible>
  [285] setobjprop 493 .......................... sprite(iSprite).visible = me.bVisible
  [288] jmp [439] ............................... next repeat
  [291] getlocal 8 .............................. <aMemberProps>
  [293] getobjprop 1303 ......................... <aMemberProps.flip>
  [296] setlocal 12 ............................. bFlip = aMemberProps.flip
  [298] getlocal 7 .............................. <iSprite>
  [300] pusharglist 1 ........................... <iSprite>
  [302] extcall 481 ............................. <sprite(iSprite)>
  [305] getlocal 11 ............................. <oMember>
  [307] setobjprop 163 .......................... sprite(iSprite).member = oMember
  [309] getlocal 7 .............................. <iSprite>
  [311] pusharglist 1 ........................... <iSprite>
  [313] extcall 481 ............................. <sprite(iSprite)>
  [316] getlocal 2 .............................. <oLeft>
  [318] getobjprop 328 .......................... <oLeft.locH>
  [321] setobjprop 328 .......................... sprite(iSprite).locH = oLeft.locH
  [324] getlocal 7 .............................. <iSprite>
  [326] pusharglist 1 ........................... <iSprite>
  [328] extcall 481 ............................. <sprite(iSprite)>
  [331] getlocal 10 ............................. <iLocV>
  [333] setobjprop 329 .......................... sprite(iSprite).locV = iLocV
  [336] getlocal 7 .............................. <iSprite>
  [338] pusharglist 1 ........................... <iSprite>
  [340] extcall 481 ............................. <sprite(iSprite)>
  [343] pushzero ................................ <0>
  [344] setobjprop 642 .......................... sprite(iSprite).flipH = 0
  [347] getlocal 7 .............................. <iSprite>
  [349] pusharglist 1 ........................... <iSprite>
  [351] extcall 481 ............................. <sprite(iSprite)>
  [354] getlocal 6 .............................. <aOrderAttributes>
  [356] getobjprop 491 .......................... <aOrderAttributes.ink>
  [359] setobjprop 491 .......................... sprite(iSprite).ink = aOrderAttributes.ink
  [362] getlocal 7 .............................. <iSprite>
  [364] pusharglist 1 ........................... <iSprite>
  [366] extcall 481 ............................. <sprite(iSprite)>
  [369] getlocal 6 .............................. <aOrderAttributes>
  [371] getobjprop 492 .......................... <aOrderAttributes.blend>
  [374] setobjprop 492 .......................... sprite(iSprite).blend = aOrderAttributes.blend
  [377] getlocal 7 .............................. <iSprite>
  [379] pusharglist 1 ........................... <iSprite>
  [381] extcall 481 ............................. <sprite(iSprite)>
  [384] getlocal 6 .............................. <aOrderAttributes>
  [386] getobjprop 1039 ......................... <aOrderAttributes.bgColor>
  [389] setobjprop 1039 ......................... sprite(iSprite).bgColor = aOrderAttributes.bgColor
  [392] getlocal 12 ............................. <bFlip>
  [394] jmpifz [424] ............................ if bFlip then
  [397] getlocal 7 .............................. <iSprite>
  [399] pusharglist 1 ........................... <iSprite>
  [401] extcall 481 ............................. <sprite(iSprite)>
  [404] pushint8 1 .............................. <1>
  [406] setobjprop 642 .......................... sprite(iSprite).flipH = 1
  [409] getlocal 7 .............................. <iSprite>
  [411] pusharglist 1 ........................... <iSprite>
  [413] extcall 481 ............................. <sprite(iSprite)>
  [416] getlocal 3 .............................. <oRight>
  [418] getobjprop 328 .......................... <oRight.locH>
  [421] setobjprop 328 .......................... sprite(iSprite).locH = oRight.locH
  [424] getlocal 7 .............................. <iSprite>
  [426] pusharglist 1 ........................... <iSprite>
  [428] extcall 481 ............................. <sprite(iSprite)>
  [431] getparam 0 .............................. <me>
  [433] getobjprop 1167 ......................... <me.bVisible>
  [436] setobjprop 493 .......................... sprite(iSprite).visible = me.bVisible
  [439] pushint8 1
  [441] getlocal 4
  [443] add
  [444] setlocal 4
  [446] endrepeat [ 47]
  [449] ret
end

on setVisible me, _bVisible
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDraw = 0
  [  3] getparam 0 .............................. <me>
  [  5] getobjprop 1167 ......................... <me.bVisible>
  [  8] getparam 1 .............................. <_bVisible>
  [ 10] nteq .................................... <me.bVisible <> _bVisible>
  [ 11] jmpifz [ 18] ............................ if me.bVisible <> _bVisible then
  [ 14] pushint8 1 .............................. <1>
  [ 16] setlocal 0 .............................. bDraw = 1
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <_bVisible>
  [ 22] setobjprop 1167 ......................... me.bVisible = _bVisible
  [ 25] getlocal 0 .............................. <bDraw>
  [ 27] jmpifz [ 37] ............................ if bDraw then
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 1 ...................... <me>
  [ 34] objcall 275 ............................. me.draw()
  [ 37] ret
end

on getVisible me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1167 ......................... <me.bVisible>
  [  5] pusharglistnoret 1 ...................... <me.bVisible>
  [  7] extcall 93 .............................. return me.bVisible
  [  9] ret
end

on getMemberDrawProps me, sOrder, iDir
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 132 ............................. <VOID>
  [  4] setlocal 0 .............................. oMember = VOID
  [  6] getparam 0 .............................. <me>
  [  8] getparam 1 .............................. <sOrder>
  [ 10] getparam 2 .............................. <iDir>
  [ 12] pusharglist 3 ........................... <me, sOrder, iDir>
  [ 14] objcall 1241 ............................ <me.buildImageName(sOrder, iDir)>
  [ 17] setlocal 1 .............................. sName = me.buildImageName(sOrder, iDir)
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 2 .............................. bFlip = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 1310 ........................... <#aAlias>
  [ 27] getlocal 1 .............................. <sName>
  [ 29] pusharglist 3 ........................... <me, #aAlias, sName>
  [ 31] objcall 611 ............................. <me.aAlias[sName]>
  [ 34] setlocal 3 .............................. aMemberAlias = me.aAlias[sName]
  [ 36] getlocal 3 .............................. <aMemberAlias>
  [ 38] pusharglist 1 ........................... <aMemberAlias>
  [ 40] extcall 106 ............................. <voidp(aMemberAlias)>
  [ 42] not ..................................... <not voidp(aMemberAlias)>
  [ 43] jmpifz [ 69] ............................ if not voidp(aMemberAlias) then
  [ 46] getlocal 3 .............................. <aMemberAlias>
  [ 48] getobjprop 1311 ......................... <aMemberAlias.asset>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 284 .......................... <me.sCastLib>
  [ 56] pusharglist 2 ........................... <aMemberAlias.asset, me.sCastLib>
  [ 58] extcall 163 ............................. <member(aMemberAlias.asset, me.sCastLib)>
  [ 60] setlocal 0 .............................. oMember = member(aMemberAlias.asset, me.sCastLib)
  [ 62] getlocal 3 .............................. <aMemberAlias>
  [ 64] getobjprop 1303 ......................... <aMemberAlias.flip>
  [ 67] setlocal 2 .............................. bFlip = aMemberAlias.flip
  [ 69] getlocal 0 .............................. <oMember>
  [ 71] pusharglist 1 ........................... <oMember>
  [ 73] extcall 106 ............................. <voidp(oMember)>
  [ 75] getparam 1 .............................. <sOrder>
  [ 77] pushcons 34 ............................. <"sd">
  [ 79] eq ...................................... <sOrder = "sd">
  [ 80] and ..................................... <voidp(oMember) and (sOrder = "sd")>
  [ 81] jmpifz [144] ............................ if voidp(oMember) and (sOrder = "sd") then
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 280 .......................... <me.sImageBase>
  [ 89] pushcons 35 ............................. <"_sd_">
  [ 91] joinstr ................................. <me.sImageBase & "_sd_">
  [ 92] getparam 2 .............................. <iDir>
  [ 94] joinstr ................................. <me.sImageBase & "_sd_" & iDir>
  [ 95] setlocal 4 .............................. sShadowName = me.sImageBase & "_sd_" & iDir
  [ 97] getparam 0 .............................. <me>
  [ 99] pushsymb 1310 ........................... <#aAlias>
  [102] getlocal 4 .............................. <sShadowName>
  [104] pusharglist 3 ........................... <me, #aAlias, sShadowName>
  [106] objcall 611 ............................. <me.aAlias[sShadowName]>
  [109] setlocal 3 .............................. aMemberAlias = me.aAlias[sShadowName]
  [111] getlocal 3 .............................. <aMemberAlias>
  [113] pusharglist 1 ........................... <aMemberAlias>
  [115] extcall 106 ............................. <voidp(aMemberAlias)>
  [117] not ..................................... <not voidp(aMemberAlias)>
  [118] jmpifz [144] ............................ if not voidp(aMemberAlias) then
  [121] getlocal 3 .............................. <aMemberAlias>
  [123] getobjprop 1311 ......................... <aMemberAlias.asset>
  [126] getparam 0 .............................. <me>
  [128] getobjprop 284 .......................... <me.sCastLib>
  [131] pusharglist 2 ........................... <aMemberAlias.asset, me.sCastLib>
  [133] extcall 163 ............................. <member(aMemberAlias.asset, me.sCastLib)>
  [135] setlocal 0 .............................. oMember = member(aMemberAlias.asset, me.sCastLib)
  [137] getlocal 3 .............................. <aMemberAlias>
  [139] getobjprop 1303 ......................... <aMemberAlias.flip>
  [142] setlocal 2 .............................. bFlip = aMemberAlias.flip
  [144] getlocal 0 .............................. <oMember>
  [146] pusharglist 1 ........................... <oMember>
  [148] extcall 106 ............................. <voidp(oMember)>
  [150] jmpifz [167] ............................ if voidp(oMember) then
  [153] getparam 0 .............................. <me>
  [155] pushsymb 1264 ........................... <#aAssets>
  [158] getlocal 1 .............................. <sName>
  [160] pusharglist 3 ........................... <me, #aAssets, sName>
  [162] objcall 611 ............................. <me.aAssets[sName]>
  [165] setlocal 0 .............................. oMember = me.aAssets[sName]
  [167] pushsymb 163 ............................ <#member>
  [169] getlocal 0 .............................. <oMember>
  [171] pushsymb 1303 ........................... <#flip>
  [174] getlocal 2 .............................. <bFlip>
  [176] pusharglist 4 ........................... <[#member: oMember, #flip: bFlip]>
  [178] pushproplist ............................ <[#member: oMember, #flip: bFlip]>
  [179] setlocal 5 .............................. aProps = [#member: oMember, #flip: bFlip]
  [181] getlocal 5 .............................. <aProps>
  [183] pusharglistnoret 1 ...................... <aProps>
  [185] extcall 93 .............................. return aProps
  [187] ret
end

on buildImageName me, sOrder, iDir
  [  0] getparam 1 .............................. <sOrder>
  [  2] pushcons 34 ............................. <"sd">
  [  4] eq ...................................... <sOrder = "sd">
  [  5] jmpifz [ 23] ............................ if sOrder = "sd" then
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 280 .......................... <me.sImageBase>
  [ 13] pushcons 36 ............................. <"_">
  [ 15] joinstr ................................. <me.sImageBase & "_">
  [ 16] getparam 1 .............................. <sOrder>
  [ 18] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 19] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder>
  [ 21] extcall 93 .............................. return me.sImageBase & "_" & sOrder
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 284 .......................... <me.sCastLib>
  [ 28] pushcons 6 .............................. <EMPTY>
  [ 30] eq ...................................... <me.sCastLib = EMPTY>
  [ 31] jmpifz [ 81] ............................ if me.sCastLib = EMPTY then / else
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 280 .......................... <me.sImageBase>
  [ 39] pushcons 36 ............................. <"_">
  [ 41] joinstr ................................. <me.sImageBase & "_">
  [ 42] getparam 1 .............................. <sOrder>
  [ 44] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 45] pushcons 36 ............................. <"_">
  [ 47] joinstr ................................. <me.sImageBase & "_" & sOrder & "_">
  [ 48] pushcons 37 ............................. <"0">
  [ 50] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0">
  [ 51] pushcons 36 ............................. <"_">
  [ 53] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_">
  [ 54] getparam 2 .............................. <iDir>
  [ 56] pusharglist 1 ........................... <iDir>
  [ 58] extcall 162 ............................. <string(iDir)>
  [ 60] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir)>
  [ 61] pushcons 36 ............................. <"_">
  [ 63] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_">
  [ 64] getparam 0 .............................. <me>
  [ 66] getobjprop 1269 ......................... <me.iFrame>
  [ 69] pusharglist 1 ........................... <me.iFrame>
  [ 71] extcall 162 ............................. <string(me.iFrame)>
  [ 73] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)>
  [ 74] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)>
  [ 76] extcall 93 .............................. return me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)
  [ 78] jmp [151]
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 280 .......................... <me.sImageBase>
  [ 86] pushcons 36 ............................. <"_">
  [ 88] joinstr ................................. <me.sImageBase & "_">
  [ 89] getparam 1 .............................. <sOrder>
  [ 91] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 92] pushcons 36 ............................. <"_">
  [ 94] joinstr ................................. <me.sImageBase & "_" & sOrder & "_">
  [ 95] pushcons 37 ............................. <"0">
  [ 97] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0">
  [ 98] pushcons 36 ............................. <"_">
  [100] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_">
  [101] getparam 0 .............................. <me>
  [103] getobjprop 472 .......................... <me.iWidth>
  [106] pusharglist 1 ........................... <me.iWidth>
  [108] extcall 162 ............................. <string(me.iWidth)>
  [110] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth)>
  [111] pushcons 36 ............................. <"_">
  [113] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_">
  [114] getparam 0 .............................. <me>
  [116] getobjprop 501 .......................... <me.iDepth>
  [119] pusharglist 1 ........................... <me.iDepth>
  [121] extcall 162 ............................. <string(me.iDepth)>
  [123] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth)>
  [124] pushcons 36 ............................. <"_">
  [126] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_">
  [127] getparam 2 .............................. <iDir>
  [129] pusharglist 1 ........................... <iDir>
  [131] extcall 162 ............................. <string(iDir)>
  [133] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir)>
  [134] pushcons 36 ............................. <"_">
  [136] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_">
  [137] getparam 0 .............................. <me>
  [139] getobjprop 1269 ......................... <me.iFrame>
  [142] pusharglist 1 ........................... <me.iFrame>
  [144] extcall 162 ............................. <string(me.iFrame)>
  [146] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)>
  [147] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)>
  [149] extcall 93 .............................. return me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)
  [151] ret
end

on SetHeight me, _iHeight
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeight>
  [  4] setobjprop 283 .......................... me.iHeight = _iHeight
  [  7] ret
end

on SetWidth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 485 .......................... <me.width>
  [  5] pushint8 1 .............................. <1>
  [  7] inv ..................................... <-1>
  [  8] eq ...................................... <me.width = -1>
  [  9] jmpifz [ 23] ............................ if me.width = -1 then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 472 .......................... me.iWidth = 1
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 93 .............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 1264 ........................... <#aAssets>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 3 ........................... <me, #aAssets, 1>
  [ 32] objcall 611 ............................. <me.aAssets[1]>
  [ 35] setlocal 0 .............................. oMember = me.aAssets[1]
  [ 37] getlocal 0 .............................. <oMember>
  [ 39] getobjprop 161 .......................... <oMember.name>
  [ 41] setlocal 1 .............................. sName = oMember.name
  [ 43] getparam 0 .............................. <me>
  [ 45] getparam 0 .............................. <me>
  [ 47] getlocal 1 .............................. <sName>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 485 .......................... <me.width>
  [ 54] pusharglist 3 ........................... <me, sName, me.width>
  [ 56] objcall 1255 ............................ <me.getParamFromName(sName, me.width)>
  [ 59] pusharglist 1 ........................... <me.getParamFromName(sName, me.width)>
  [ 61] extcall 108 ............................. <integer(me.getParamFromName(sName, me.width))>
  [ 63] setobjprop 472 .......................... me.iWidth = integer(me.getParamFromName(sName, me.width))
  [ 66] ret
end

on setDepth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1266 ......................... <me.depth>
  [  5] pushint8 1 .............................. <1>
  [  7] inv ..................................... <-1>
  [  8] eq ...................................... <me.depth = -1>
  [  9] jmpifz [ 23] ............................ if me.depth = -1 then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 501 .......................... me.iDepth = 1
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 93 .............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 1264 ........................... <#aAssets>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 3 ........................... <me, #aAssets, 1>
  [ 32] objcall 611 ............................. <me.aAssets[1]>
  [ 35] setlocal 0 .............................. oMember = me.aAssets[1]
  [ 37] getlocal 0 .............................. <oMember>
  [ 39] getobjprop 161 .......................... <oMember.name>
  [ 41] setlocal 1 .............................. sName = oMember.name
  [ 43] getparam 0 .............................. <me>
  [ 45] getparam 0 .............................. <me>
  [ 47] getlocal 1 .............................. <sName>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 1266 ......................... <me.depth>
  [ 54] pusharglist 3 ........................... <me, sName, me.depth>
  [ 56] objcall 1255 ............................ <me.getParamFromName(sName, me.depth)>
  [ 59] pusharglist 1 ........................... <me.getParamFromName(sName, me.depth)>
  [ 61] extcall 108 ............................. <integer(me.getParamFromName(sName, me.depth))>
  [ 63] setobjprop 501 .......................... me.iDepth = integer(me.getParamFromName(sName, me.depth))
  [ 66] ret
end

on setNumFrames me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 38 ............................. <"setNumFrames() aAssets: ">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 1264 ......................... <me.aAssets>
  [  9] joinstr ................................. <"setNumFrames() aAssets: " & me.aAssets>
  [ 10] pusharglistnoret 2 ...................... <me, "setNumFrames() aAssets: " & me.aAssets>
  [ 12] objcall 50 .............................. me.debug("setNumFrames() aAssets: " & me.aAssets)
  [ 14] pushzero ................................ <0>
  [ 15] setlocal 0 .............................. iHighestFrame = 0
  [ 17] pushint8 1 .............................. <1>
  [ 19] setlocal 1
  [ 21] getlocal 1
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 1264 ........................... <#aAssets>
  [ 28] pusharglist 2 ........................... <me, #aAssets>
  [ 30] objcall 150 ............................. <me.aAssets.count>
  [ 32] lteq
  [ 33] jmpifz [ 94] ............................ repeat with i = 1 to me.aAssets.count
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 1264 ..................... <me.aAssets>
  [ 41] getlocal 1 .............................. <i>
  [ 43] pusharglist 2 ........................... <me.aAssets, i>
  [ 45] objcall 957 ............................. <me.aAssets.getPropAt(i)>
  [ 48] setlocal 2 .............................. sName = me.aAssets.getPropAt(i)
  [ 50] getparam 0 .............................. <me>
  [ 52] getlocal 2 .............................. <sName>
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 1267 ......................... <me.frame>
  [ 59] pusharglist 3 ........................... <me, sName, me.frame>
  [ 61] objcall 1255 ............................ <me.getParamFromName(sName, me.frame)>
  [ 64] pusharglist 1 ........................... <me.getParamFromName(sName, me.frame)>
  [ 66] extcall 108 ............................. <integer(me.getParamFromName(sName, me.frame))>
  [ 68] setprop 1269 ............................ iFrame = integer(me.getParamFromName(sName, me.frame))
  [ 71] getprop 1269 ............................ <iFrame>
  [ 74] getlocal 0 .............................. <iHighestFrame>
  [ 76] gt ...................................... <iFrame > iHighestFrame>
  [ 77] jmpifz [ 85] ............................ if iFrame > iHighestFrame then
  [ 80] getprop 1269 ............................ <iFrame>
  [ 83] setlocal 0 .............................. iHighestFrame = iFrame
  [ 85] pushint8 1
  [ 87] getlocal 1
  [ 89] add
  [ 90] setlocal 1
  [ 92] endrepeat [ 21]
  [ 94] getparam 0 .............................. <me>
  [ 96] getlocal 0 .............................. <iHighestFrame>
  [ 98] setobjprop 721 .......................... me.iNumFrames = iHighestFrame
  [101] ret
end

on nextFrame me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 39 ............................. <"nextFrame() iDir: ">
  [  4] getparam 1 .............................. <iDir>
  [  6] joinstr ................................. <"nextFrame() iDir: " & iDir>
  [  7] pusharglistnoret 2 ...................... <me, "nextFrame() iDir: " & iDir>
  [  9] objcall 50 .............................. me.debug("nextFrame() iDir: " & iDir)
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 1269 ......................... <me.iFrame>
  [ 16] getparam 1 .............................. <iDir>
  [ 18] add ..................................... <me.iFrame + iDir>
  [ 19] setlocal 0 .............................. iNextFrame = me.iFrame + iDir
  [ 21] getlocal 0 .............................. <iNextFrame>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 721 .......................... <me.iNumFrames>
  [ 28] gt ...................................... <iNextFrame > me.iNumFrames>
  [ 29] jmpifz [ 35] ............................ if iNextFrame > me.iNumFrames then
  [ 32] pushzero ................................ <0>
  [ 33] setlocal 0 .............................. iNextFrame = 0
  [ 35] getlocal 0 .............................. <iNextFrame>
  [ 37] pushzero ................................ <0>
  [ 38] lt ...................................... <iNextFrame < 0>
  [ 39] jmpifz [ 49] ............................ if iNextFrame < 0 then
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 721 .......................... <me.iNumFrames>
  [ 47] setlocal 0 .............................. iNextFrame = me.iNumFrames
  [ 49] getparam 0 .............................. <me>
  [ 51] getlocal 0 .............................. <iNextFrame>
  [ 53] setobjprop 1269 ......................... me.iFrame = iNextFrame
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglistnoret 1 ...................... <me>
  [ 60] objcall 275 ............................. me.draw()
  [ 63] ret
end

on setFrame me, _iFrame
  [  0] getparam 1 .............................. <_iFrame>
  [  2] pushzero ................................ <0>
  [  3] lt ...................................... <_iFrame < 0>
  [  4] getparam 1 .............................. <_iFrame>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 721 .......................... <me.iNumFrames>
  [ 11] gt ...................................... <_iFrame > me.iNumFrames>
  [ 12] or ...................................... <(_iFrame < 0) or (_iFrame > me.iNumFrames)>
  [ 13] jmpifz [ 19] ............................ if (_iFrame < 0) or (_iFrame > me.iNumFrames) then
  [ 16] pushzero ................................ <0>
  [ 17] setparam 1 .............................. _iFrame = 0
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <_iFrame>
  [ 23] setobjprop 1269 ......................... me.iFrame = _iFrame
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 40 ............................. <"setFrame() me.iFrame: ">
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 1269 ......................... <me.iFrame>
  [ 35] joinstr ................................. <"setFrame() me.iFrame: " & me.iFrame>
  [ 36] pusharglistnoret 2 ...................... <me, "setFrame() me.iFrame: " & me.iFrame>
  [ 38] objcall 50 .............................. me.debug("setFrame() me.iFrame: " & me.iFrame)
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglistnoret 1 ...................... <me>
  [ 44] objcall 275 ............................. me.draw()
  [ 47] ret
end

on getFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1269 ......................... <me.iFrame>
  [  5] pusharglistnoret 1 ...................... <me.iFrame>
  [  7] extcall 93 .............................. return me.iFrame
  [  9] ret
end

on setAnimate me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 1268 ......................... me.bAnimate = bState
  [  7] ret
end

on getAnimate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1268 ......................... <me.bAnimate>
  [  5] pusharglistnoret 1 ...................... <me.bAnimate>
  [  7] extcall 93 .............................. return me.bAnimate
  [  9] ret
end

on setDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 702 ...................... <me.aDirections>
  [  5] getparam 1 .............................. <iDir>
  [  7] pusharglist 2 ........................... <me.aDirections, iDir>
  [  9] objcall 817 ............................. <me.aDirections.getPos(iDir)>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [ 14] jmpifz [ 47] ............................ if me.aDirections.getPos(iDir) = 0 then / else
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 1 ...................... <me>
  [ 21] objcall 1250 ............................ me.setDirectionIndex()
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 702 ............................ <#aDirections>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1274 ......................... <me.iDirectionIndex>
  [ 36] pusharglist 3 ........................... <me, #aDirections, me.iDirectionIndex>
  [ 38] objcall 611 ............................. <me.aDirections[me.iDirectionIndex]>
  [ 41] setobjprop 281 .......................... me.iDirection = me.aDirections[me.iDirectionIndex]
  [ 44] jmp [ 54]
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 1 .............................. <iDir>
  [ 51] setobjprop 281 .......................... me.iDirection = iDir
  [ 54] ret
end

on setDirectionIndex me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 702 ...................... <me.aDirections>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 281 .......................... <me.iDirection>
  [ 10] pusharglist 2 ........................... <me.aDirections, me.iDirection>
  [ 12] objcall 817 ............................. <me.aDirections.getPos(me.iDirection)>
  [ 15] setlocal 0 .............................. iIndex = me.aDirections.getPos(me.iDirection)
  [ 17] getlocal 0 .............................. <iIndex>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <iIndex = 0>
  [ 21] jmpifz [ 28] ............................ if iIndex = 0 then
  [ 24] pushint8 1 .............................. <1>
  [ 26] setlocal 0 .............................. iIndex = 1
  [ 28] getparam 0 .............................. <me>
  [ 30] getlocal 0 .............................. <iIndex>
  [ 32] setobjprop 1274 ......................... me.iDirectionIndex = iIndex
  [ 35] ret
end

on rotate me, iDir
  [  0] getparam 1 .............................. <iDir>
  [  2] pusharglist 1 ........................... <iDir>
  [  4] extcall 106 ............................. <voidp(iDir)>
  [  6] jmpifz [ 13] ............................ if voidp(iDir) then
  [  9] pushint8 1 .............................. <1>
  [ 11] setparam 1 .............................. iDir = 1
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1274 ......................... <me.iDirectionIndex>
  [ 18] getparam 1 .............................. <iDir>
  [ 20] add ..................................... <me.iDirectionIndex + iDir>
  [ 21] setlocal 0 .............................. iNewDirectionIndex = me.iDirectionIndex + iDir
  [ 23] getlocal 0 .............................. <iNewDirectionIndex>
  [ 25] getparam 0 .............................. <me>
  [ 27] pushsymb 702 ............................ <#aDirections>
  [ 30] pusharglist 2 ........................... <me, #aDirections>
  [ 32] objcall 150 ............................. <me.aDirections.count>
  [ 34] gt ...................................... <iNewDirectionIndex > me.aDirections.count>
  [ 35] jmpifz [ 42] ............................ if iNewDirectionIndex > me.aDirections.count then
  [ 38] pushint8 1 .............................. <1>
  [ 40] setlocal 0 .............................. iNewDirectionIndex = 1
  [ 42] getlocal 0 .............................. <iNewDirectionIndex>
  [ 44] pushint8 1 .............................. <1>
  [ 46] lt ...................................... <iNewDirectionIndex < 1>
  [ 47] jmpifz [ 61] ............................ if iNewDirectionIndex < 1 then
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 702 ............................ <#aDirections>
  [ 55] pusharglist 2 ........................... <me, #aDirections>
  [ 57] objcall 150 ............................. <me.aDirections.count>
  [ 59] setlocal 0 .............................. iNewDirectionIndex = me.aDirections.count
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1274 ......................... <me.iDirectionIndex>
  [ 68] setobjprop 1275 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [ 71] getparam 0 .............................. <me>
  [ 73] getlocal 0 .............................. <iNewDirectionIndex>
  [ 75] setobjprop 1274 ......................... me.iDirectionIndex = iNewDirectionIndex
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 0 .............................. <me>
  [ 82] pushsymb 702 ............................ <#aDirections>
  [ 85] getprop 1274 ............................ <iDirectionIndex>
  [ 88] pusharglist 3 ........................... <me, #aDirections, iDirectionIndex>
  [ 90] objcall 611 ............................. <me.aDirections[iDirectionIndex]>
  [ 93] pusharglistnoret 2 ...................... <me, me.aDirections[iDirectionIndex]>
  [ 95] objcall 1186 ............................ me.setDirection(me.aDirections[iDirectionIndex])
  [ 98] getparam 0 .............................. <me>
  [100] getchainedprop 821 ...................... <me.oAction>
  [103] pusharglistnoret 1 ...................... <me.oAction>
  [105] objcall 1281 ............................ me.oAction.displayState()
  [108] getglobal 88 ............................ <oIsoScene>
  [110] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [112] getparam 0 .............................. <me>
  [114] getobjprop 178 .......................... <me.iRow>
  [116] getparam 0 .............................. <me>
  [118] getobjprop 179 .......................... <me.iCol>
  [120] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [122] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [125] setlocal 1 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [127] getparam 0 .............................. <me>
  [129] getlocal 1 .............................. <oSquare>
  [131] pusharglist 2 ........................... <me, oSquare>
  [133] objcall 310 ............................. <me.placeItem(oSquare)>
  [136] setlocal 2 .............................. bSuccess = me.placeItem(oSquare)
  [138] getlocal 2 .............................. <bSuccess>
  [140] getparam 0 .............................. <me>
  [142] getobjprop 288 .......................... <me.sAction>
  [145] pushcons 41 ............................. <"STAND_ON">
  [147] containsstr ............................. <me.sAction contains "STAND_ON">
  [148] or ...................................... <bSuccess or (me.sAction contains "STAND_ON")>
  [149] jmpifz [171] ............................ if bSuccess or (me.sAction contains "STAND_ON") then
  [152] getparam 0 .............................. <me>
  [154] getparam 0 .............................. <me>
  [156] getobjprop 1274 ......................... <me.iDirectionIndex>
  [159] setobjprop 1275 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [162] getglobal 88 ............................ <oIsoScene>
  [164] getchainedprop 127 ...................... <oIsoScene.oAvatars>
  [166] pusharglistnoret 1 ...................... <oIsoScene.oAvatars>
  [168] objcall 952 ............................. oIsoScene.oAvatars.updateAll()
  [171] getlocal 2 .............................. <bSuccess>
  [173] pusharglistnoret 1 ...................... <bSuccess>
  [175] extcall 93 .............................. return bSuccess
  [177] ret
end

on setDrawOrder me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aDrawOrder = []
  [  5] getlocal 0 .............................. <_aDrawOrder>
  [  7] pusharglistnoret 1 ...................... <_aDrawOrder>
  [  9] objcall 367 ............................. _aDrawOrder.sort()
  [ 12] pushint8 1 .............................. <1>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] getparam 0 .............................. <me>
  [ 20] pushsymb 1264 ........................... <#aAssets>
  [ 23] pusharglist 2 ........................... <me, #aAssets>
  [ 25] objcall 150 ............................. <me.aAssets.count>
  [ 27] lteq
  [ 28] jmpifz [107] ............................ repeat with i = 1 to me.aAssets.count
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 1264 ..................... <me.aAssets>
  [ 36] getlocal 1 .............................. <i>
  [ 38] pusharglist 2 ........................... <me.aAssets, i>
  [ 40] objcall 957 ............................. <me.aAssets.getPropAt(i)>
  [ 43] setlocal 2 .............................. sName = me.aAssets.getPropAt(i)
  [ 45] getlocal 2 .............................. <sName>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 280 .......................... <me.sImageBase>
  [ 52] contains0str ............................ <sName starts me.sImageBase>
  [ 53] not ..................................... <not (sName starts me.sImageBase)>
  [ 54] jmpifz [ 60] ............................ if not (sName starts me.sImageBase) then
  [ 57] jmp [ 98] ............................... next repeat
  [ 60] getparam 0 .............................. <me>
  [ 62] getlocal 2 .............................. <sName>
  [ 64] getparam 0 .............................. <me>
  [ 66] getobjprop 1265 ......................... <me.ORDER>
  [ 69] pusharglist 3 ........................... <me, sName, me.ORDER>
  [ 71] objcall 1255 ............................ <me.getParamFromName(sName, me.ORDER)>
  [ 74] setlocal 3 .............................. sOrder = me.getParamFromName(sName, me.ORDER)
  [ 76] getlocal 0 .............................. <_aDrawOrder>
  [ 78] getlocal 3 .............................. <sOrder>
  [ 80] pusharglist 2 ........................... <_aDrawOrder, sOrder>
  [ 82] objcall 817 ............................. <_aDrawOrder.getPos(sOrder)>
  [ 85] pushzero ................................ <0>
  [ 86] eq ...................................... <_aDrawOrder.getPos(sOrder) = 0>
  [ 87] jmpifz [ 98] ............................ if _aDrawOrder.getPos(sOrder) = 0 then
  [ 90] getlocal 0 .............................. <_aDrawOrder>
  [ 92] getlocal 3 .............................. <sOrder>
  [ 94] pusharglistnoret 2 ...................... <_aDrawOrder, sOrder>
  [ 96] objcall 135 ............................. _aDrawOrder.add(sOrder)
  [ 98] pushint8 1
  [100] getlocal 1
  [102] add
  [103] setlocal 1
  [105] endrepeat [ 16]
  [107] pushint8 1 .............................. <1>
  [109] setlocal 1
  [111] getlocal 1
  [113] getparam 0 .............................. <me>
  [115] pushsymb 1310 ........................... <#aAlias>
  [118] pusharglist 2 ........................... <me, #aAlias>
  [120] objcall 150 ............................. <me.aAlias.count>
  [122] lteq
  [123] jmpifz [202] ............................ repeat with i = 1 to me.aAlias.count
  [126] getparam 0 .............................. <me>
  [128] getchainedprop 1310 ..................... <me.aAlias>
  [131] getlocal 1 .............................. <i>
  [133] pusharglist 2 ........................... <me.aAlias, i>
  [135] objcall 957 ............................. <me.aAlias.getPropAt(i)>
  [138] setlocal 2 .............................. sName = me.aAlias.getPropAt(i)
  [140] getlocal 2 .............................. <sName>
  [142] getparam 0 .............................. <me>
  [144] getobjprop 280 .......................... <me.sImageBase>
  [147] contains0str ............................ <sName starts me.sImageBase>
  [148] not ..................................... <not (sName starts me.sImageBase)>
  [149] jmpifz [155] ............................ if not (sName starts me.sImageBase) then
  [152] jmp [193] ............................... next repeat
  [155] getparam 0 .............................. <me>
  [157] getlocal 2 .............................. <sName>
  [159] getparam 0 .............................. <me>
  [161] getobjprop 1265 ......................... <me.ORDER>
  [164] pusharglist 3 ........................... <me, sName, me.ORDER>
  [166] objcall 1255 ............................ <me.getParamFromName(sName, me.ORDER)>
  [169] setlocal 3 .............................. sOrder = me.getParamFromName(sName, me.ORDER)
  [171] getlocal 0 .............................. <_aDrawOrder>
  [173] getlocal 3 .............................. <sOrder>
  [175] pusharglist 2 ........................... <_aDrawOrder, sOrder>
  [177] objcall 817 ............................. <_aDrawOrder.getPos(sOrder)>
  [180] pushzero ................................ <0>
  [181] eq ...................................... <_aDrawOrder.getPos(sOrder) = 0>
  [182] jmpifz [193] ............................ if _aDrawOrder.getPos(sOrder) = 0 then
  [185] getlocal 0 .............................. <_aDrawOrder>
  [187] getlocal 3 .............................. <sOrder>
  [189] pusharglistnoret 2 ...................... <_aDrawOrder, sOrder>
  [191] objcall 135 ............................. _aDrawOrder.add(sOrder)
  [193] pushint8 1
  [195] getlocal 1
  [197] add
  [198] setlocal 1
  [200] endrepeat [111]
  [202] getparam 0 .............................. <me>
  [204] pusharglist 0 ........................... <[:]>
  [206] pushproplist ............................ <[:]>
  [207] setobjprop 1298 ......................... me.aDrawOrder = [:]
  [210] pushint8 1 .............................. <1>
  [212] setlocal 1
  [214] getlocal 1
  [216] getlocal 0 .............................. <_aDrawOrder>
  [218] getobjprop 150 .......................... <_aDrawOrder.count>
  [220] lteq
  [221] jmpifz [503] ............................ repeat with i = 1 to _aDrawOrder.count
  [224] getlocal 0 .............................. <_aDrawOrder>
  [226] getlocal 1 .............................. <i>
  [228] pusharglist 2 ........................... <_aDrawOrder, i>
  [230] objcall 151 ............................. <_aDrawOrder[i]>
  [232] setlocal 3 .............................. sOrder = _aDrawOrder[i]
  [234] pushint8 8 .............................. <8>
  [236] setlocal 4 .............................. iInk = 8
  [238] pushint8 100 ............................ <100>
  [240] setlocal 5 .............................. iBlend = 100
  [242] getlocal 3 .............................. <sOrder>
  [244] pushcons 34 ............................. <"sd">
  [246] eq ...................................... <sOrder = "sd">
  [247] jmpifz [254] ............................ if sOrder = "sd" then
  [250] pushint8 40 ............................. <40>
  [252] setlocal 5 .............................. iBlend = 40
  [254] getglobal 88 ............................ <oIsoScene>
  [256] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [258] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [260] objcall 482 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [263] setlocal 6 .............................. iSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [265] getlocal 3 .............................. <sOrder>
  [267] pushcons 34 ............................. <"sd">
  [269] nteq .................................... <sOrder <> "sd">
  [270] jmpifz [299] ............................ if sOrder <> "sd" then
  [273] getlocal 6 .............................. <iSprite>
  [275] pusharglist 1 ........................... <iSprite>
  [277] extcall 481 ............................. <sprite(iSprite)>
  [280] getchainedprop 635 ...................... <sprite(iSprite).scriptInstanceList>
  [283] pushcons 42 ............................. <"SceneItemScript">
  [285] pusharglist 1 ........................... <"SceneItemScript">
  [287] extcall 57 .............................. <script("SceneItemScript")>
  [289] getparam 0 .............................. <me>
  [291] pusharglist 2 ........................... <script("SceneItemScript"), me>
  [293] objcall 0 ............................... <script("SceneItemScript").new(me)>
  [295] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("SceneItemScript").new(me)>
  [297] objcall 135 ............................. sprite(iSprite).scriptInstanceList.add(script("SceneItemScript").new(me))
  [299] getparam 0 .............................. <me>
  [301] getobjprop 280 .......................... <me.sImageBase>
  [304] pushcons 36 ............................. <"_">
  [306] joinstr ................................. <me.sImageBase & "_">
  [307] getlocal 3 .............................. <sOrder>
  [309] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [310] pushcons 43 ............................. <".ink">
  [312] joinstr ................................. <me.sImageBase & "_" & sOrder & ".ink">
  [313] getparam 0 .............................. <me>
  [315] getobjprop 284 .......................... <me.sCastLib>
  [318] pusharglist 2 ........................... <me.sImageBase & "_" & sOrder & ".ink", me.sCastLib>
  [320] extcall 163 ............................. <member(me.sImageBase & "_" & sOrder & ".ink", me.sCastLib)>
  [322] setlocal 7 .............................. oInkMember = member(me.sImageBase & "_" & sOrder & ".ink", me.sCastLib)
  [324] getlocal 7 .............................. <oInkMember>
  [326] getobjprop 639 .......................... <oInkMember.memberNum>
  [329] pushint8 1 .............................. <1>
  [331] inv ..................................... <-1>
  [332] nteq .................................... <oInkMember.memberNum <> -1>
  [333] jmpifz [346] ............................ if oInkMember.memberNum <> -1 then
  [336] getlocal 7 .............................. <oInkMember>
  [338] getobjprop 164 .......................... <oInkMember.text>
  [340] pusharglist 1 ........................... <oInkMember.text>
  [342] extcall 108 ............................. <integer(oInkMember.text)>
  [344] setlocal 4 .............................. iInk = integer(oInkMember.text)
  [346] getparam 0 .............................. <me>
  [348] getobjprop 280 .......................... <me.sImageBase>
  [351] pushcons 36 ............................. <"_">
  [353] joinstr ................................. <me.sImageBase & "_">
  [354] getlocal 3 .............................. <sOrder>
  [356] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [357] pushcons 44 ............................. <".blend">
  [359] joinstr ................................. <me.sImageBase & "_" & sOrder & ".blend">
  [360] getparam 0 .............................. <me>
  [362] getobjprop 284 .......................... <me.sCastLib>
  [365] pusharglist 2 ........................... <me.sImageBase & "_" & sOrder & ".blend", me.sCastLib>
  [367] extcall 163 ............................. <member(me.sImageBase & "_" & sOrder & ".blend", me.sCastLib)>
  [369] setlocal 8 .............................. oBlendMember = member(me.sImageBase & "_" & sOrder & ".blend", me.sCastLib)
  [371] getlocal 8 .............................. <oBlendMember>
  [373] getobjprop 639 .......................... <oBlendMember.memberNum>
  [376] pushint8 1 .............................. <1>
  [378] inv ..................................... <-1>
  [379] nteq .................................... <oBlendMember.memberNum <> -1>
  [380] jmpifz [393] ............................ if oBlendMember.memberNum <> -1 then
  [383] getlocal 8 .............................. <oBlendMember>
  [385] getobjprop 164 .......................... <oBlendMember.text>
  [387] pusharglist 1 ........................... <oBlendMember.text>
  [389] extcall 108 ............................. <integer(oBlendMember.text)>
  [391] setlocal 5 .............................. iBlend = integer(oBlendMember.text)
  [393] pushint16 255 ........................... <255>
  [396] pushint16 255 ........................... <255>
  [399] pushint16 255 ........................... <255>
  [402] pusharglist 3 ........................... <255, 255, 255>
  [404] extcall 507 ............................. <rgb(255, 255, 255)>
  [407] setlocal 9 .............................. oBGColor = rgb(255, 255, 255)
  [409] pushcons 45 ............................. <"color_">
  [411] getlocal 3 .............................. <sOrder>
  [413] joinstr ................................. <"color_" & sOrder>
  [414] setlocal 10 ............................. sColorProp = "color_" & sOrder
  [416] getparam 0 .............................. <me>
  [418] pushsymb 289 ............................ <#aAttributes>
  [421] getlocal 10 ............................. <sColorProp>
  [423] pusharglist 3 ........................... <me, #aAttributes, sColorProp>
  [425] objcall 611 ............................. <me.aAttributes[sColorProp]>
  [428] setlocal 11 ............................. oColor = me.aAttributes[sColorProp]
  [430] getlocal 11 ............................. <oColor>
  [432] pusharglist 1 ........................... <oColor>
  [434] extcall 106 ............................. <voidp(oColor)>
  [436] not ..................................... <not voidp(oColor)>
  [437] jmpifz [449] ............................ if not voidp(oColor) then
  [440] getlocal 11 ............................. <oColor>
  [442] pusharglist 1 ........................... <oColor>
  [444] extcall 507 ............................. <rgb(oColor)>
  [447] setlocal 9 .............................. oBGColor = rgb(oColor)
  [449] getparam 0 .............................. <me>
  [451] getchainedprop 1298 ..................... <me.aDrawOrder>
  [454] getlocal 3 .............................. <sOrder>
  [456] pushsymb 491 ............................ <#ink>
  [459] getlocal 4 .............................. <iInk>
  [461] pushsymb 492 ............................ <#blend>
  [464] getlocal 5 .............................. <iBlend>
  [466] pushsymb 481 ............................ <#sprite>
  [469] getlocal 6 .............................. <iSprite>
  [471] pushsymb 493 ............................ <#visible>
  [474] pushint8 1 .............................. <1>
  [476] pushsymb 1039 ........................... <#bgColor>
  [479] getlocal 9 .............................. <oBGColor>
  [481] pushsymb 1302 ........................... <#vShift>
  [484] pushzero ................................ <0>
  [485] pusharglist 12 .......................... <[#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [487] pushproplist ............................ <[#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [488] pusharglistnoret 3 ...................... <me.aDrawOrder, sOrder, [#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [490] objcall 388 ............................. me.aDrawOrder.addProp(sOrder, [#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0])
  [493] pushint8 1
  [495] getlocal 1
  [497] add
  [498] setlocal 1
  [500] endrepeat [214]
  [503] ret
end

on getDrawOrderForSprite me, _iSprite
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getparam 0 .............................. <me>
  [  8] pushsymb 1298 ........................... <#aDrawOrder>
  [ 11] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 13] objcall 150 ............................. <me.aDrawOrder.count>
  [ 15] lteq
  [ 16] jmpifz [ 77] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 1298 ..................... <me.aDrawOrder>
  [ 24] getlocal 0 .............................. <i>
  [ 26] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 28] objcall 957 ............................. <me.aDrawOrder.getPropAt(i)>
  [ 31] setlocal 1 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 1298 ........................... <#aDrawOrder>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 42] objcall 611 ............................. <me.aDrawOrder[i]>
  [ 45] setlocal 2 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 47] getlocal 2 .............................. <aOrderAttributes>
  [ 49] getobjprop 481 .......................... <aOrderAttributes.sprite>
  [ 52] setlocal 3 .............................. iOrderSprite = aOrderAttributes.sprite
  [ 54] getparam 1 .............................. <_iSprite>
  [ 56] getlocal 3 .............................. <iOrderSprite>
  [ 58] eq ...................................... <_iSprite = iOrderSprite>
  [ 59] jmpifz [ 68] ............................ if _iSprite = iOrderSprite then
  [ 62] getlocal 1 .............................. <sOrder>
  [ 64] pusharglistnoret 1 ...................... <sOrder>
  [ 66] extcall 93 .............................. return sOrder
  [ 68] pushint8 1
  [ 70] getlocal 0
  [ 72] add
  [ 73] setlocal 0
  [ 75] endrepeat [  4]
  [ 77] pusharglist 0 ........................... <>
  [ 79] extcall 132 ............................. <VOID>
  [ 81] pusharglistnoret 1 ...................... <VOID>
  [ 83] extcall 93 .............................. return VOID
  [ 85] ret
end

on getDrawOrderAttribute me, sOrder, sProp
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1298 ........................... <#aDrawOrder>
  [  5] getparam 1 .............................. <sOrder>
  [  7] pusharglist 3 ........................... <me, #aDrawOrder, sOrder>
  [  9] objcall 470 ............................. <me.aDrawOrder[sOrder]>
  [ 12] getparam 2 .............................. <sProp>
  [ 14] pusharglist 2 ........................... <me.aDrawOrder[sOrder], sProp>
  [ 16] objcall 151 ............................. <me.aDrawOrder[sOrder][sProp]>
  [ 18] pusharglistnoret 1 ...................... <me.aDrawOrder[sOrder][sProp]>
  [ 20] extcall 93 .............................. return me.aDrawOrder[sOrder][sProp]
  [ 22] ret
end

on setDrawOrderAttribute me, sOrder, sProp, sValue
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1298 ........................... <#aDrawOrder>
  [  5] getparam 1 .............................. <sOrder>
  [  7] pusharglist 3 ........................... <me, #aDrawOrder, sOrder>
  [  9] objcall 470 ............................. <me.aDrawOrder[sOrder]>
  [ 12] getparam 2 .............................. <sProp>
  [ 14] getparam 3 .............................. <sValue>
  [ 16] pusharglistnoret 3 ...................... <me.aDrawOrder[sOrder], sProp, sValue>
  [ 18] objcall 919 ............................. me.aDrawOrder[sOrder][sProp] = sValue
  [ 21] ret
end

on getParamFromName me, sName, iIndex
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 280 ...................... <me.sImageBase>
  [  5] getobjprop 349 .......................... <me.sImageBase.length>
  [  8] setlocal 0 .............................. iBaseLength = me.sImageBase.length
  [ 10] getparam 1 .............................. <sName>
  [ 12] pushsymb 1328 ........................... <#char>
  [ 15] getlocal 0 .............................. <iBaseLength>
  [ 17] pushint8 2 .............................. <2>
  [ 19] add ..................................... <iBaseLength + 2>
  [ 20] getparam 1 .............................. <sName>
  [ 22] getobjprop 349 .......................... <sName.length>
  [ 25] pusharglist 4 ........................... <sName, #char, iBaseLength + 2, sName.length>
  [ 27] objcall 611 ............................. <sName.char[iBaseLength + 2..sName.length]>
  [ 30] setlocal 1 .............................. sParams = sName.char[iBaseLength + 2..sName.length]
  [ 32] getmovieprop 650 ........................ <the itemDelimiter>
  [ 35] setlocal 2 .............................. sOldDelimiter = the itemDelimiter
  [ 37] pushcons 36 ............................. <"_">
  [ 39] setmovieprop 650 ........................ the itemDelimiter = "_"
  [ 42] getlocal 1 .............................. <sParams>
  [ 44] pushsymb 651 ............................ <#item>
  [ 47] getparam 2 .............................. <iIndex>
  [ 49] pusharglist 3 ........................... <sParams, #item, iIndex>
  [ 51] objcall 611 ............................. <sParams.item[iIndex]>
  [ 54] setlocal 3 .............................. sParam = sParams.item[iIndex]
  [ 56] getlocal 2 .............................. <sOldDelimiter>
  [ 58] setmovieprop 650 ........................ the itemDelimiter = sOldDelimiter
  [ 61] getlocal 3 .............................. <sParam>
  [ 63] pusharglistnoret 1 ...................... <sParam>
  [ 65] extcall 93 .............................. return sParam
  [ 67] ret
end

on loadAssets me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1264 ......................... me.aAssets = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 284 .......................... <me.sCastLib>
  [ 13] pushint8 2 .............................. <2>
  [ 15] get 8 ................................... <the number of castMembers of castLib the sCastLib of me>
  [ 17] setlocal 0 .............................. iNumMembers = the number of castMembers of castLib the sCastLib of me
  [ 19] pushint8 1 .............................. <1>
  [ 21] setlocal 1
  [ 23] getlocal 1
  [ 25] getlocal 0 .............................. <iNumMembers>
  [ 27] lteq
  [ 28] jmpifz [155] ............................ repeat with i = 1 to iNumMembers
  [ 31] getlocal 1 .............................. <i>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 284 .......................... <me.sCastLib>
  [ 38] pusharglist 2 ........................... <i, me.sCastLib>
  [ 40] extcall 163 ............................. <member(i, me.sCastLib)>
  [ 42] setlocal 2 .............................. oMember = member(i, me.sCastLib)
  [ 44] getlocal 2 .............................. <oMember>
  [ 46] getobjprop 639 .......................... <oMember.memberNum>
  [ 49] pushint8 1 .............................. <1>
  [ 51] inv ..................................... <-1>
  [ 52] eq ...................................... <oMember.memberNum = -1>
  [ 53] jmpifz [ 59] ............................ if oMember.memberNum = -1 then
  [ 56] jmp [146] ............................... next repeat
  [ 59] getlocal 2 .............................. <oMember>
  [ 61] getobjprop 161 .......................... <oMember.name>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 280 .......................... <me.sImageBase>
  [ 68] contains0str ............................ <oMember.name starts me.sImageBase>
  [ 69] getlocal 2 .............................. <oMember>
  [ 71] getobjprop 1086 ......................... <oMember.type>
  [ 74] pushsymb 1333 ........................... <#bitmap>
  [ 77] eq ...................................... <oMember.type = #bitmap>
  [ 78] getlocal 2 .............................. <oMember>
  [ 80] getobjprop 1086 ......................... <oMember.type>
  [ 83] pushsymb 1195 ........................... <#flash>
  [ 86] eq ...................................... <oMember.type = #flash>
  [ 87] or ...................................... <(oMember.type = #bitmap) or (oMember.type = #flash)>
  [ 88] and ..................................... <(oMember.name starts me.sImageBase) and ((oMember.type = #bitmap) or (oMember.type = #flash))>
  [ 89] getlocal 2 .............................. <oMember>
  [ 91] getobjprop 161 .......................... <oMember.name>
  [ 93] pushcons 46 ............................. <".">
  [ 95] containsstr ............................. <oMember.name contains ".">
  [ 96] not ..................................... <not (oMember.name contains ".")>
  [ 97] and ..................................... <(oMember.name starts me.sImageBase) and ((oMember.type = #bitmap) or (oMember.type = #flash)) and not (oMember.name contains ".")>
  [ 98] jmpifz [146] ............................ if (oMember.name starts me.sImageBase) and ((oMember.type = #bitmap) or (oMember.type = #flash)) and not (oMember.name contains ".") then
  [101] getparam 0 .............................. <me>
  [103] getlocal 2 .............................. <oMember>
  [105] getobjprop 161 .......................... <oMember.name>
  [107] getparam 0 .............................. <me>
  [109] getobjprop 1265 ......................... <me.ORDER>
  [112] pusharglist 3 ........................... <me, oMember.name, me.ORDER>
  [114] objcall 1255 ............................ <me.getParamFromName(oMember.name, me.ORDER)>
  [117] setlocal 3 .............................. sOrder = me.getParamFromName(oMember.name, me.ORDER)
  [119] getlocal 3 .............................. <sOrder>
  [121] pushcons 6 .............................. <EMPTY>
  [123] eq ...................................... <sOrder = EMPTY>
  [124] jmpifz [130] ............................ if sOrder = EMPTY then
  [127] jmp [146] ............................... next repeat
  [130] getparam 0 .............................. <me>
  [132] getchainedprop 1264 ..................... <me.aAssets>
  [135] getlocal 2 .............................. <oMember>
  [137] getobjprop 161 .......................... <oMember.name>
  [139] getlocal 2 .............................. <oMember>
  [141] pusharglistnoret 3 ...................... <me.aAssets, oMember.name, oMember>
  [143] objcall 388 ............................. me.aAssets.addProp(oMember.name, oMember)
  [146] pushint8 1
  [148] getlocal 1
  [150] add
  [151] setlocal 1
  [153] endrepeat [ 23]
  [155] pushint8 1 .............................. <1>
  [157] setlocal 1
  [159] getlocal 1
  [161] getparam 0 .............................. <me>
  [163] pushsymb 1310 ........................... <#aAlias>
  [166] pusharglist 2 ........................... <me, #aAlias>
  [168] objcall 150 ............................. <me.aAlias.count>
  [170] lteq
  [171] jmpifz [273] ............................ repeat with i = 1 to me.aAlias.count
  [174] getparam 0 .............................. <me>
  [176] pushsymb 1310 ........................... <#aAlias>
  [179] getlocal 1 .............................. <i>
  [181] pusharglist 3 ........................... <me, #aAlias, i>
  [183] objcall 611 ............................. <me.aAlias[i]>
  [186] setlocal 4 .............................. aAliasMember = me.aAlias[i]
  [188] getlocal 4 .............................. <aAliasMember>
  [190] getobjprop 1311 ......................... <aAliasMember.asset>
  [193] setlocal 5 .............................. sAsset = aAliasMember.asset
  [195] getparam 0 .............................. <me>
  [197] getchainedprop 1264 ..................... <me.aAssets>
  [200] getlocal 5 .............................. <sAsset>
  [202] pusharglist 2 ........................... <me.aAssets, sAsset>
  [204] objcall 1334 ............................ <me.aAssets.getaProp(sAsset)>
  [207] pusharglist 1 ........................... <me.aAssets.getaProp(sAsset)>
  [209] extcall 106 ............................. <voidp(me.aAssets.getaProp(sAsset))>
  [211] not ..................................... <not voidp(me.aAssets.getaProp(sAsset))>
  [212] setlocal 6 .............................. bExists = not voidp(me.aAssets.getaProp(sAsset))
  [214] getlocal 6 .............................. <bExists>
  [216] not ..................................... <not bExists>
  [217] jmpifz [264] ............................ if not bExists then
  [220] getlocal 5 .............................. <sAsset>
  [222] getparam 0 .............................. <me>
  [224] getobjprop 284 .......................... <me.sCastLib>
  [227] pusharglist 2 ........................... <sAsset, me.sCastLib>
  [229] extcall 163 ............................. <member(sAsset, me.sCastLib)>
  [231] setlocal 2 .............................. oMember = member(sAsset, me.sCastLib)
  [233] getlocal 2 .............................. <oMember>
  [235] getobjprop 639 .......................... <oMember.memberNum>
  [238] pushint8 1 .............................. <1>
  [240] inv ..................................... <-1>
  [241] eq ...................................... <oMember.memberNum = -1>
  [242] jmpifz [248] ............................ if oMember.memberNum = -1 then
  [245] jmp [264] ............................... next repeat
  [248] getparam 0 .............................. <me>
  [250] getchainedprop 1264 ..................... <me.aAssets>
  [253] getlocal 2 .............................. <oMember>
  [255] getobjprop 161 .......................... <oMember.name>
  [257] getlocal 2 .............................. <oMember>
  [259] pusharglistnoret 3 ...................... <me.aAssets, oMember.name, oMember>
  [261] objcall 388 ............................. me.aAssets.addProp(oMember.name, oMember)
  [264] pushint8 1
  [266] getlocal 1
  [268] add
  [269] setlocal 1
  [271] endrepeat [159]
  [273] ret
end

on loadAlias me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1310 ......................... me.aAlias = [:]
  [  8] getmovieprop 650 ........................ <the itemDelimiter>
  [ 11] setlocal 0 .............................. oldDelimiter = the itemDelimiter
  [ 13] pushcons 47 ............................. <"=">
  [ 15] setmovieprop 650 ........................ the itemDelimiter = "="
  [ 18] pushcons 48 ............................. <"memberalias.index">
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 284 .......................... <me.sCastLib>
  [ 25] pusharglist 2 ........................... <"memberalias.index", me.sCastLib>
  [ 27] extcall 163 ............................. <member("memberalias.index", me.sCastLib)>
  [ 29] getobjprop 164 .......................... <member("memberalias.index", me.sCastLib).text>
  [ 31] setlocal 1 .............................. sAliasText = member("memberalias.index", me.sCastLib).text
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 2
  [ 37] getlocal 2
  [ 39] getlocal 1 .............................. <sAliasText>
  [ 41] pushsymb 997 ............................ <#lines>
  [ 44] pusharglist 2 ........................... <sAliasText, #lines>
  [ 46] objcall 150 ............................. <sAliasText.lines.count>
  [ 48] lteq
  [ 49] jmpifz [249] ............................ repeat with i = 1 to sAliasText.lines.count
  [ 52] getlocal 1 .............................. <sAliasText>
  [ 54] pushsymb 998 ............................ <#line>
  [ 57] getlocal 2 .............................. <i>
  [ 59] pusharglist 3 ........................... <sAliasText, #line, i>
  [ 61] objcall 611 ............................. <sAliasText.line[i]>
  [ 64] setlocal 3 .............................. sLine = sAliasText.line[i]
  [ 66] getlocal 3 .............................. <sLine>
  [ 68] pushcons 6 .............................. <EMPTY>
  [ 70] eq ...................................... <sLine = EMPTY>
  [ 71] jmpifz [ 77] ............................ if sLine = EMPTY then
  [ 74] jmp [240] ............................... next repeat
  [ 77] getlocal 3 .............................. <sLine>
  [ 79] pushsymb 651 ............................ <#item>
  [ 82] pushint8 1 .............................. <1>
  [ 84] pusharglist 3 ........................... <sLine, #item, 1>
  [ 86] objcall 611 ............................. <sLine.item[1]>
  [ 89] setlocal 4 .............................. sFrom = sLine.item[1]
  [ 91] getlocal 3 .............................. <sLine>
  [ 93] pushsymb 651 ............................ <#item>
  [ 96] pushint8 2 .............................. <2>
  [ 98] pusharglist 3 ........................... <sLine, #item, 2>
  [100] objcall 611 ............................. <sLine.item[2]>
  [103] setlocal 5 .............................. sTo = sLine.item[2]
  [105] getlocal 4 .............................. <sFrom>
  [107] pushcons 6 .............................. <EMPTY>
  [109] eq ...................................... <sFrom = EMPTY>
  [110] getlocal 5 .............................. <sTo>
  [112] pushcons 6 .............................. <EMPTY>
  [114] eq ...................................... <sTo = EMPTY>
  [115] or ...................................... <(sFrom = EMPTY) or (sTo = EMPTY)>
  [116] jmpifz [122] ............................ if (sFrom = EMPTY) or (sTo = EMPTY) then
  [119] jmp [240] ............................... next repeat
  [122] getlocal 4 .............................. <sFrom>
  [124] getparam 0 .............................. <me>
  [126] getobjprop 280 .......................... <me.sImageBase>
  [129] contains0str ............................ <sFrom starts me.sImageBase>
  [130] not ..................................... <not (sFrom starts me.sImageBase)>
  [131] jmpifz [137] ............................ if not (sFrom starts me.sImageBase) then
  [134] jmp [240] ............................... next repeat
  [137] pushzero ................................ <0>
  [138] setlocal 6 .............................. bFlip = 0
  [140] getlocal 5 .............................. <sTo>
  [142] pushsymb 1328 ........................... <#char>
  [145] getlocal 5 .............................. <sTo>
  [147] getobjprop 349 .......................... <sTo.length>
  [150] pusharglist 3 ........................... <sTo, #char, sTo.length>
  [152] objcall 611 ............................. <sTo.char[sTo.length]>
  [155] pushcons 49 ............................. <"*">
  [157] eq ...................................... <sTo.char[sTo.length] = "*">
  [158] jmpifz [187] ............................ if sTo.char[sTo.length] = "*" then
  [161] getlocal 5 .............................. <sTo>
  [163] pushsymb 1328 ........................... <#char>
  [166] pushint8 1 .............................. <1>
  [168] getlocal 5 .............................. <sTo>
  [170] getobjprop 349 .......................... <sTo.length>
  [173] pushint8 1 .............................. <1>
  [175] sub ..................................... <sTo.length - 1>
  [176] pusharglist 4 ........................... <sTo, #char, 1, sTo.length - 1>
  [178] objcall 611 ............................. <sTo.char[1..sTo.length - 1]>
  [181] setlocal 5 .............................. sTo = sTo.char[1..sTo.length - 1]
  [183] pushint8 1 .............................. <1>
  [185] setlocal 6 .............................. bFlip = 1
  [187] getlocal 5 .............................. <sTo>
  [189] getparam 0 .............................. <me>
  [191] getobjprop 284 .......................... <me.sCastLib>
  [194] pusharglist 2 ........................... <sTo, me.sCastLib>
  [196] extcall 163 ............................. <member(sTo, me.sCastLib)>
  [198] setlocal 7 .............................. oMember = member(sTo, me.sCastLib)
  [200] getlocal 7 .............................. <oMember>
  [202] getobjprop 639 .......................... <oMember.memberNum>
  [205] pushint8 1 .............................. <1>
  [207] inv ..................................... <-1>
  [208] eq ...................................... <oMember.memberNum = -1>
  [209] jmpifz [215] ............................ if oMember.memberNum = -1 then
  [212] jmp [240] ............................... next repeat
  [215] getparam 0 .............................. <me>
  [217] getchainedprop 1310 ..................... <me.aAlias>
  [220] getlocal 4 .............................. <sFrom>
  [222] pushsymb 1311 ........................... <#asset>
  [225] getlocal 5 .............................. <sTo>
  [227] pushsymb 1303 ........................... <#flip>
  [230] getlocal 6 .............................. <bFlip>
  [232] pusharglist 4 ........................... <[#asset: sTo, #flip: bFlip]>
  [234] pushproplist ............................ <[#asset: sTo, #flip: bFlip]>
  [235] pusharglistnoret 3 ...................... <me.aAlias, sFrom, [#asset: sTo, #flip: bFlip]>
  [237] objcall 388 ............................. me.aAlias.addProp(sFrom, [#asset: sTo, #flip: bFlip])
  [240] pushint8 1
  [242] getlocal 2
  [244] add
  [245] setlocal 2
  [247] endrepeat [ 37]
  [249] ret
end

on setDirections me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[]>
  [  4] pushlist ................................ <[]>
  [  5] setobjprop 702 .......................... me.aDirections = []
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 702 ...................... <me.aDirections>
  [ 13] pusharglistnoret 1 ...................... <me.aDirections>
  [ 15] objcall 367 ............................. me.aDirections.sort()
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 0
  [ 22] getlocal 0
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 1264 ........................... <#aAssets>
  [ 29] pusharglist 2 ........................... <me, #aAssets>
  [ 31] objcall 150 ............................. <me.aAssets.count>
  [ 33] lteq
  [ 34] jmpifz [116] ............................ repeat with i = 1 to me.aAssets.count
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 1264 ..................... <me.aAssets>
  [ 42] getlocal 0 .............................. <i>
  [ 44] pusharglist 2 ........................... <me.aAssets, i>
  [ 46] objcall 957 ............................. <me.aAssets.getPropAt(i)>
  [ 49] setlocal 1 .............................. sName = me.aAssets.getPropAt(i)
  [ 51] getparam 0 .............................. <me>
  [ 53] getlocal 1 .............................. <sName>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 394 .......................... <me.direction>
  [ 60] pusharglist 3 ........................... <me, sName, me.direction>
  [ 62] objcall 1255 ............................ <me.getParamFromName(sName, me.direction)>
  [ 65] pusharglist 1 ........................... <me.getParamFromName(sName, me.direction)>
  [ 67] extcall 108 ............................. <integer(me.getParamFromName(sName, me.direction))>
  [ 69] setlocal 2 .............................. iDir = integer(me.getParamFromName(sName, me.direction))
  [ 71] getlocal 2 .............................. <iDir>
  [ 73] pusharglist 1 ........................... <iDir>
  [ 75] extcall 106 ............................. <voidp(iDir)>
  [ 77] not ..................................... <not voidp(iDir)>
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 702 ...................... <me.aDirections>
  [ 83] getlocal 2 .............................. <iDir>
  [ 85] pusharglist 2 ........................... <me.aDirections, iDir>
  [ 87] objcall 817 ............................. <me.aDirections.getPos(iDir)>
  [ 90] pushzero ................................ <0>
  [ 91] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [ 92] and ..................................... <not voidp(iDir) and (me.aDirections.getPos(iDir) = 0)>
  [ 93] jmpifz [107] ............................ if not voidp(iDir) and (me.aDirections.getPos(iDir) = 0) then
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 702 ...................... <me.aDirections>
  [101] getlocal 2 .............................. <iDir>
  [103] pusharglistnoret 2 ...................... <me.aDirections, iDir>
  [105] objcall 135 ............................. me.aDirections.add(iDir)
  [107] pushint8 1
  [109] getlocal 0
  [111] add
  [112] setlocal 0
  [114] endrepeat [ 22]
  [116] pushint8 1 .............................. <1>
  [118] setlocal 0
  [120] getlocal 0
  [122] getparam 0 .............................. <me>
  [124] pushsymb 1310 ........................... <#aAlias>
  [127] pusharglist 2 ........................... <me, #aAlias>
  [129] objcall 150 ............................. <me.aAlias.count>
  [131] lteq
  [132] jmpifz [229] ............................ repeat with i = 1 to me.aAlias.count
  [135] getparam 0 .............................. <me>
  [137] getchainedprop 1310 ..................... <me.aAlias>
  [140] getlocal 0 .............................. <i>
  [142] pusharglist 2 ........................... <me.aAlias, i>
  [144] objcall 957 ............................. <me.aAlias.getPropAt(i)>
  [147] setlocal 1 .............................. sName = me.aAlias.getPropAt(i)
  [149] getlocal 1 .............................. <sName>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 280 .......................... <me.sImageBase>
  [156] contains0str ............................ <sName starts me.sImageBase>
  [157] not ..................................... <not (sName starts me.sImageBase)>
  [158] jmpifz [164] ............................ if not (sName starts me.sImageBase) then
  [161] jmp [220] ............................... next repeat
  [164] getparam 0 .............................. <me>
  [166] getlocal 1 .............................. <sName>
  [168] getparam 0 .............................. <me>
  [170] getobjprop 394 .......................... <me.direction>
  [173] pusharglist 3 ........................... <me, sName, me.direction>
  [175] objcall 1255 ............................ <me.getParamFromName(sName, me.direction)>
  [178] pusharglist 1 ........................... <me.getParamFromName(sName, me.direction)>
  [180] extcall 108 ............................. <integer(me.getParamFromName(sName, me.direction))>
  [182] setlocal 2 .............................. iDir = integer(me.getParamFromName(sName, me.direction))
  [184] getlocal 2 .............................. <iDir>
  [186] pusharglist 1 ........................... <iDir>
  [188] extcall 106 ............................. <voidp(iDir)>
  [190] not ..................................... <not voidp(iDir)>
  [191] getparam 0 .............................. <me>
  [193] getchainedprop 702 ...................... <me.aDirections>
  [196] getlocal 2 .............................. <iDir>
  [198] pusharglist 2 ........................... <me.aDirections, iDir>
  [200] objcall 817 ............................. <me.aDirections.getPos(iDir)>
  [203] pushzero ................................ <0>
  [204] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [205] and ..................................... <not voidp(iDir) and (me.aDirections.getPos(iDir) = 0)>
  [206] jmpifz [220] ............................ if not voidp(iDir) and (me.aDirections.getPos(iDir) = 0) then
  [209] getparam 0 .............................. <me>
  [211] getchainedprop 702 ...................... <me.aDirections>
  [214] getlocal 2 .............................. <iDir>
  [216] pusharglistnoret 2 ...................... <me.aDirections, iDir>
  [218] objcall 135 ............................. me.aDirections.add(iDir)
  [220] pushint8 1
  [222] getlocal 0
  [224] add
  [225] setlocal 0
  [227] endrepeat [120]
  [229] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 56 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 10] pushcons 50 ............................. <"FurnitureItem: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"FurnitureItem: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"FurnitureItem: " & sMessage>
  [ 17] extcall 274 ............................. put "FurnitureItem: " & sMessage
  [ 20] ret
end

on getOccupiedSquares me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aList = []
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 281 .......................... <me.iDirection>
  [ 10] peek 0 .................................. case me.iDirection of
  [ 12] pushzero ................................ <0>
  [ 13] nteq
  [ 14] jmpifz [ 25] ............................ (case) 0, ...
  [ 17] peek 0
  [ 19] pushint8 4 .............................. <4>
  [ 21] eq
  [ 22] jmpifz [123] ............................ (case) ..., 4:
  [ 25] pushint8 1 .............................. <1>
  [ 27] setlocal 1
  [ 29] getlocal 1
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 501 .......................... <me.iDepth>
  [ 36] lteq
  [ 37] jmpifz [120] ............................ repeat with i = 1 to me.iDepth
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 178 .......................... <me.iRow>
  [ 44] getlocal 1 .............................. <i>
  [ 46] pushint8 1 .............................. <1>
  [ 48] sub ..................................... <i - 1>
  [ 49] add ..................................... <me.iRow + (i - 1)>
  [ 50] setlocal 2 .............................. _iRow = me.iRow + (i - 1)
  [ 52] pushint8 1 .............................. <1>
  [ 54] setlocal 3
  [ 56] getlocal 3
  [ 58] getparam 0 .............................. <me>
  [ 60] getobjprop 472 .......................... <me.iWidth>
  [ 63] lteq
  [ 64] jmpifz [111] ............................ repeat with ii = 1 to me.iWidth
  [ 67] getparam 0 .............................. <me>
  [ 69] getobjprop 179 .......................... <me.iCol>
  [ 71] getlocal 3 .............................. <ii>
  [ 73] pushint8 1 .............................. <1>
  [ 75] sub ..................................... <ii - 1>
  [ 76] add ..................................... <me.iCol + (ii - 1)>
  [ 77] setlocal 4 .............................. _iCol = me.iCol + (ii - 1)
  [ 79] getglobal 88 ............................ <oIsoScene>
  [ 81] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 83] getlocal 2 .............................. <_iRow>
  [ 85] getlocal 4 .............................. <_iCol>
  [ 87] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 89] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 92] setlocal 5 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 94] getlocal 0 .............................. <aList>
  [ 96] getlocal 5 .............................. <oSquare>
  [ 98] pusharglistnoret 2 ...................... <aList, oSquare>
  [100] objcall 135 ............................. aList.add(oSquare)
  [102] pushint8 1
  [104] getlocal 3
  [106] add
  [107] setlocal 3
  [109] endrepeat [ 56]
  [111] pushint8 1
  [113] getlocal 1
  [115] add
  [116] setlocal 1
  [118] endrepeat [ 29]
  [120] jmp [234]
  [123] peek 0
  [125] pushint8 2 .............................. <2>
  [127] nteq
  [128] jmpifz [139] ............................ (case) 2, ...
  [131] peek 0
  [133] pushint8 6 .............................. <6>
  [135] eq
  [136] jmpifz [234] ............................ (case) ..., 6:
  [139] pushint8 1 .............................. <1>
  [141] setlocal 1
  [143] getlocal 1
  [145] getparam 0 .............................. <me>
  [147] getobjprop 501 .......................... <me.iDepth>
  [150] lteq
  [151] jmpifz [234] ............................ repeat with i = 1 to me.iDepth
  [154] getparam 0 .............................. <me>
  [156] getobjprop 179 .......................... <me.iCol>
  [158] getlocal 1 .............................. <i>
  [160] pushint8 1 .............................. <1>
  [162] sub ..................................... <i - 1>
  [163] add ..................................... <me.iCol + (i - 1)>
  [164] setlocal 4 .............................. _iCol = me.iCol + (i - 1)
  [166] pushint8 1 .............................. <1>
  [168] setlocal 3
  [170] getlocal 3
  [172] getparam 0 .............................. <me>
  [174] getobjprop 472 .......................... <me.iWidth>
  [177] lteq
  [178] jmpifz [225] ............................ repeat with ii = 1 to me.iWidth
  [181] getparam 0 .............................. <me>
  [183] getobjprop 178 .......................... <me.iRow>
  [185] getlocal 3 .............................. <ii>
  [187] pushint8 1 .............................. <1>
  [189] sub ..................................... <ii - 1>
  [190] add ..................................... <me.iRow + (ii - 1)>
  [191] setlocal 2 .............................. _iRow = me.iRow + (ii - 1)
  [193] getglobal 88 ............................ <oIsoScene>
  [195] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [197] getlocal 2 .............................. <_iRow>
  [199] getlocal 4 .............................. <_iCol>
  [201] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [203] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [206] setlocal 5 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [208] getlocal 0 .............................. <aList>
  [210] getlocal 5 .............................. <oSquare>
  [212] pusharglistnoret 2 ...................... <aList, oSquare>
  [214] objcall 135 ............................. aList.add(oSquare)
  [216] pushint8 1
  [218] getlocal 3
  [220] add
  [221] setlocal 3
  [223] endrepeat [170]
  [225] pushint8 1
  [227] getlocal 1
  [229] add
  [230] setlocal 1
  [232] endrepeat [143]
  [234] pop 1 ................................... end case
  [236] getlocal 0 .............................. <aList>
  [238] pusharglistnoret 1 ...................... <aList>
  [240] extcall 93 .............................. return aList
  [242] ret
end

on calculateZOrder me, sOrder, oDefaultSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 221 ............................. <me.isRugITem()>
  [  6] jmpifz [ 18] ............................ if me.isRugITem() then
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 277 .......................... <me.iGridY>
  [ 14] pusharglistnoret 1 ...................... <me.iGridY>
  [ 16] extcall 93 .............................. return me.iGridY
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <sOrder>
  [ 22] getparam 2 .............................. <oDefaultSquare>
  [ 24] pusharglist 3 ........................... <me, sOrder, oDefaultSquare>
  [ 26] objcall 1260 ............................ <me.calculateBaseSquare(sOrder, oDefaultSquare)>
  [ 29] setlocal 0 .............................. oSquare = me.calculateBaseSquare(sOrder, oDefaultSquare)
  [ 31] getparam 0 .............................. <me>
  [ 33] getparam 1 .............................. <sOrder>
  [ 35] pusharglist 2 ........................... <me, sOrder>
  [ 37] objcall 1259 ............................ <me.calculateLayerMap(sOrder)>
  [ 40] setlocal 1 .............................. sLayerMap = me.calculateLayerMap(sOrder)
  [ 42] getlocal 0 .............................. <oSquare>
  [ 44] getlocal 1 .............................. <sLayerMap>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 277 .......................... <me.iGridY>
  [ 51] pusharglist 3 ........................... <oSquare, sLayerMap, me.iGridY>
  [ 53] objcall 499 ............................. <oSquare.getDepthFromMap(sLayerMap, me.iGridY)>
  [ 56] setlocal 2 .............................. iZ = oSquare.getDepthFromMap(sLayerMap, me.iGridY)
  [ 58] getlocal 2 .............................. <iZ>
  [ 60] pusharglistnoret 1 ...................... <iZ>
  [ 62] extcall 93 .............................. return iZ
  [ 64] ret
end

on calculateLayerMap me, sOrder
  [  0] getparam 1 .............................. <sOrder>
  [  2] setlocal 0 .............................. sLayerMap = sOrder
  [  4] getparam 1 .............................. <sOrder>
  [  6] peek 0 .................................. case sOrder of
  [  8] pushcons 51 ............................. <"a">
  [ 10] nteq
  [ 11] jmpifz [ 22] ............................ (case) "a", ...
  [ 14] peek 0
  [ 16] pushcons 52 ............................. <"b">
  [ 18] eq
  [ 19] jmpifz [ 25] ............................ (case) ..., "b":
  [ 22] jmp [ 52]
  [ 25] peek 0
  [ 27] pushcons 53 ............................. <"c">
  [ 29] eq
  [ 30] jmpifz [ 40] ............................ (case) "c":
  [ 33] pushcons 51 ............................. <"a">
  [ 35] setlocal 0 .............................. sLayerMap = "a"
  [ 37] jmp [ 52]
  [ 40] peek 0
  [ 42] pushcons 54 ............................. <"d">
  [ 44] eq
  [ 45] jmpifz [ 52] ............................ (case) "d":
  [ 48] pushcons 52 ............................. <"b">
  [ 50] setlocal 0 .............................. sLayerMap = "b"
  [ 52] pop 1 ................................... end case
  [ 54] getlocal 0 .............................. <sLayerMap>
  [ 56] pusharglistnoret 1 ...................... <sLayerMap>
  [ 58] extcall 93 .............................. return sLayerMap
  [ 60] ret
end

on calculateBaseSquare me, sOrder, oSquare
  [  0] getparam 1 .............................. <sOrder>
  [  2] peek 0 .................................. case sOrder of
  [  4] pushcons 51 ............................. <"a">
  [  6] nteq
  [  7] jmpifz [ 18] ............................ (case) "a", ...
  [ 10] peek 0
  [ 12] pushcons 52 ............................. <"b">
  [ 14] eq
  [ 15] jmpifz [ 30] ............................ (case) ..., "b":
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 1261 ............................ <me.getSquareByGreatestDepth()>
  [ 25] setparam 2 .............................. oSquare = me.getSquareByGreatestDepth()
  [ 27] jmp [ 49]
  [ 30] peek 0
  [ 32] pushcons 53 ............................. <"c">
  [ 34] eq
  [ 35] jmpifz [ 41] ............................ (case) "c":
  [ 38] jmp [ 49]
  [ 41] peek 0
  [ 43] pushcons 54 ............................. <"d">
  [ 45] eq
  [ 46] jmpifz [ 49] ............................ (case) "d":
  [ 49] pop 1 ................................... end case
  [ 51] getparam 2 .............................. <oSquare>
  [ 53] pusharglistnoret 1 ...................... <oSquare>
  [ 55] extcall 93 .............................. return oSquare
  [ 57] ret
end

on getSquareByGreatestDepth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 178 .......................... <me.iRow>
  [  4] setlocal 0 .............................. _iRow = me.iRow
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 179 .......................... <me.iCol>
  [ 10] setlocal 1 .............................. _iCol = me.iCol
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 281 .......................... <me.iDirection>
  [ 17] peek 0 .................................. case me.iDirection of
  [ 19] pushint8 2 .............................. <2>
  [ 21] nteq
  [ 22] jmpifz [ 33] ............................ (case) 2, ...
  [ 25] peek 0
  [ 27] pushint8 6 .............................. <6>
  [ 29] eq
  [ 30] jmpifz [ 66] ............................ (case) ..., 6:
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 178 .......................... <me.iRow>
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 472 .......................... <me.iWidth>
  [ 42] pushint8 1 .............................. <1>
  [ 44] sub ..................................... <me.iWidth - 1>
  [ 45] add ..................................... <me.iRow + (me.iWidth - 1)>
  [ 46] setlocal 0 .............................. _iRow = me.iRow + (me.iWidth - 1)
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 179 .......................... <me.iCol>
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 501 .......................... <me.iDepth>
  [ 57] pushint8 1 .............................. <1>
  [ 59] sub ..................................... <me.iDepth - 1>
  [ 60] add ..................................... <me.iCol + (me.iDepth - 1)>
  [ 61] setlocal 1 .............................. _iCol = me.iCol + (me.iDepth - 1)
  [ 63] jmp [111]
  [ 66] peek 0
  [ 68] pushint8 4 .............................. <4>
  [ 70] nteq
  [ 71] jmpifz [ 81] ............................ (case) 4, ...
  [ 74] peek 0
  [ 76] pushzero ................................ <0>
  [ 77] eq
  [ 78] jmpifz [111] ............................ (case) ..., 0:
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 178 .......................... <me.iRow>
  [ 85] getparam 0 .............................. <me>
  [ 87] getobjprop 501 .......................... <me.iDepth>
  [ 90] pushint8 1 .............................. <1>
  [ 92] sub ..................................... <me.iDepth - 1>
  [ 93] add ..................................... <me.iRow + (me.iDepth - 1)>
  [ 94] setlocal 0 .............................. _iRow = me.iRow + (me.iDepth - 1)
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 179 .......................... <me.iCol>
  [100] getparam 0 .............................. <me>
  [102] getobjprop 472 .......................... <me.iWidth>
  [105] pushint8 1 .............................. <1>
  [107] sub ..................................... <me.iWidth - 1>
  [108] add ..................................... <me.iCol + (me.iWidth - 1)>
  [109] setlocal 1 .............................. _iCol = me.iCol + (me.iWidth - 1)
  [111] pop 1 ................................... end case
  [113] getglobal 88 ............................ <oIsoScene>
  [115] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [117] getlocal 0 .............................. <_iRow>
  [119] getlocal 1 .............................. <_iCol>
  [121] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [123] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [126] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [128] getlocal 2 .............................. <oSquare>
  [130] pusharglist 1 ........................... <oSquare>
  [132] extcall 106 ............................. <voidp(oSquare)>
  [134] jmpifz [156] ............................ if voidp(oSquare) then
  [137] getglobal 88 ............................ <oIsoScene>
  [139] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 178 .......................... <me.iRow>
  [145] getparam 0 .............................. <me>
  [147] getobjprop 179 .......................... <me.iCol>
  [149] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [151] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [154] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [156] getlocal 2 .............................. <oSquare>
  [158] pusharglistnoret 1 ...................... <oSquare>
  [160] extcall 93 .............................. return oSquare
  [162] ret
end

on getSquareByGreatestRightView me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 178 .......................... <me.iRow>
  [  4] setlocal 0 .............................. _iRow = me.iRow
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 179 .......................... <me.iCol>
  [ 10] setlocal 1 .............................. _iCol = me.iCol
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 281 .......................... <me.iDirection>
  [ 17] peek 0 .................................. case me.iDirection of
  [ 19] pushint8 2 .............................. <2>
  [ 21] nteq
  [ 22] jmpifz [ 33] ............................ (case) 2, ...
  [ 25] peek 0
  [ 27] pushint8 6 .............................. <6>
  [ 29] eq
  [ 30] jmpifz [ 51] ............................ (case) ..., 6:
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 179 .......................... <me.iCol>
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 501 .......................... <me.iDepth>
  [ 42] pushint8 1 .............................. <1>
  [ 44] sub ..................................... <me.iDepth - 1>
  [ 45] add ..................................... <me.iCol + (me.iDepth - 1)>
  [ 46] setlocal 1 .............................. _iCol = me.iCol + (me.iDepth - 1)
  [ 48] jmp [ 81]
  [ 51] peek 0
  [ 53] pushint8 4 .............................. <4>
  [ 55] nteq
  [ 56] jmpifz [ 66] ............................ (case) 4, ...
  [ 59] peek 0
  [ 61] pushzero ................................ <0>
  [ 62] eq
  [ 63] jmpifz [ 81] ............................ (case) ..., 0:
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 179 .......................... <me.iCol>
  [ 70] getparam 0 .............................. <me>
  [ 72] getobjprop 472 .......................... <me.iWidth>
  [ 75] pushint8 1 .............................. <1>
  [ 77] sub ..................................... <me.iWidth - 1>
  [ 78] add ..................................... <me.iCol + (me.iWidth - 1)>
  [ 79] setlocal 1 .............................. _iCol = me.iCol + (me.iWidth - 1)
  [ 81] pop 1 ................................... end case
  [ 83] getglobal 88 ............................ <oIsoScene>
  [ 85] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 87] getlocal 0 .............................. <_iRow>
  [ 89] getlocal 1 .............................. <_iCol>
  [ 91] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 93] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 96] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 98] getlocal 2 .............................. <oSquare>
  [100] pusharglist 1 ........................... <oSquare>
  [102] extcall 106 ............................. <voidp(oSquare)>
  [104] jmpifz [126] ............................ if voidp(oSquare) then
  [107] getglobal 88 ............................ <oIsoScene>
  [109] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 178 .......................... <me.iRow>
  [115] getparam 0 .............................. <me>
  [117] getobjprop 179 .......................... <me.iCol>
  [119] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [121] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [124] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [126] getlocal 2 .............................. <oSquare>
  [128] pusharglistnoret 1 ...................... <oSquare>
  [130] extcall 93 .............................. return oSquare
  [132] ret
end

on getSeatable me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1271 ......................... <me.bSeatable>
  [  5] pusharglistnoret 1 ...................... <me.bSeatable>
  [  7] extcall 93 .............................. return me.bSeatable
  [  9] ret
end

on getBlocksPath me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1270 ......................... <me.bBlocksPath>
  [  5] pusharglistnoret 1 ...................... <me.bBlocksPath>
  [  7] extcall 93 .............................. return me.bBlocksPath
  [  9] ret
end

on isRugITem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 287 .......................... <me.sType>
  [  5] pushcons 55 ............................. <"RUG">
  [  7] eq ...................................... <me.sType = "RUG">
  [  8] pusharglistnoret 1 ...................... <me.sType = "RUG">
  [ 10] extcall 93 .............................. return me.sType = "RUG"
  [ 12] ret
end

on isWallItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on isFurniItem me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 93 .............................. return 1
  [  6] ret
end

on isAvatar me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on isBurnedCd me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 279 .......................... <me.sProdID>
  [  5] pushint8 89 ............................. <89>
  [  7] eq ...................................... <me.sProdID = 89>
  [  8] pusharglistnoret 1 ...................... <me.sProdID = 89>
  [ 10] extcall 93 .............................. return me.sProdID = 89
  [ 12] ret
end

on toString me
  [  0] pushcons 56 ............................. <"[FURNI ITEM] TYPE: ">
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 287 .......................... <me.sType>
  [  7] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType>
  [  8] pushcons 57 ............................. <", CAT_ID: ">
  [ 10] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: ">
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 279 .......................... <me.sProdID>
  [ 16] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID>
  [ 17] pushcons 58 ............................. <", POS_ID: ">
  [ 19] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: ">
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 222 ............................. <me.getPosId()>
  [ 26] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()>
  [ 27] pusharglistnoret 1 ...................... <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()>
  [ 29] extcall 93 .............................. return "[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()
  [ 31] ret
end

on canDelete me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 93 .............................. return 1
  [  6] ret
end

on canUse me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on canPickup me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 93 .............................. return 1
  [  6] ret
end
