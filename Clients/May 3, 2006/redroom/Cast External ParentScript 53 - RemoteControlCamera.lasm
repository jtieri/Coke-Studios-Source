property iScreen, iInitSource, iScanlines, rScreenRect, rScreenRectOffset, pScreenLocNow, pScreenLocDest, iZoomNow, iZoomDest, iTrackingDivisor, iCrossFading, iSprite, pAvatarCameraOffset, oAvatar
global oIsoScene

on new me, _iSprite
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iSprite>
  [  4] setobjprop 8 ............................ me.iSprite = _iSprite
  [  6] getparam 0 .............................. <me>
  [  8] pushint8 7 .............................. <7>
  [ 10] setobjprop 9 ............................ me.iTrackingDivisor = 7
  [ 12] getparam 0 .............................. <me>
  [ 14] pushint8 1 .............................. <1>
  [ 16] inv ..................................... <-1>
  [ 17] setobjprop 10 ........................... me.iCrossFading = -1
  [ 19] getparam 0 .............................. <me>
  [ 21] pushzero ................................ <0>
  [ 22] pushint8 25 ............................. <25>
  [ 24] inv ..................................... <-25>
  [ 25] pusharglist 2 ........................... <0, -25>
  [ 27] extcall 46 .............................. <point(0, -25)>
  [ 29] setobjprop 77 ........................... me.pAvatarCameraOffset = point(0, -25)
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglistnoret 1 ...................... <me>
  [ 35] extcall 11 .............................. return me
  [ 37] ret
end

on Init me, initMember, drawMember
  [  0] getparam 1 .............................. <initMember>
  [  2] pusharglist 1 ........................... <initMember>
  [  4] extcall 14 .............................. <voidp(initMember)>
  [  6] jmpifz [ 24] ............................ if voidp(initMember) then / else
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 0 .............................. <"RemoteControlCameraInit">
  [ 13] pusharglist 1 ........................... <"RemoteControlCameraInit">
  [ 15] extcall 15 .............................. <member("RemoteControlCameraInit")>
  [ 17] getobjprop 16 ........................... <member("RemoteControlCameraInit").image>
  [ 19] setobjprop 17 ........................... me.iInitSource = member("RemoteControlCameraInit").image
  [ 21] jmp [ 36]
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <initMember>
  [ 28] pusharglist 1 ........................... <initMember>
  [ 30] extcall 15 .............................. <member(initMember)>
  [ 32] getobjprop 16 ........................... <member(initMember).image>
  [ 34] setobjprop 17 ........................... me.iInitSource = member(initMember).image
  [ 36] getparam 2 .............................. <drawMember>
  [ 38] pusharglist 1 ........................... <drawMember>
  [ 40] extcall 14 .............................. <voidp(drawMember)>
  [ 42] jmpifz [ 60] ............................ if voidp(drawMember) then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pushcons 1 .............................. <"RemoteControlCameraScreen">
  [ 49] pusharglist 1 ........................... <"RemoteControlCameraScreen">
  [ 51] extcall 15 .............................. <member("RemoteControlCameraScreen")>
  [ 53] getobjprop 16 ........................... <member("RemoteControlCameraScreen").image>
  [ 55] setobjprop 18 ........................... me.iScreen = member("RemoteControlCameraScreen").image
  [ 57] jmp [ 72]
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 2 .............................. <drawMember>
  [ 64] pusharglist 1 ........................... <drawMember>
  [ 66] extcall 15 .............................. <member(drawMember)>
  [ 68] getobjprop 16 ........................... <member(drawMember).image>
  [ 70] setobjprop 18 ........................... me.iScreen = member(drawMember).image
  [ 72] getparam 0 .............................. <me>
  [ 74] pushcons 2 .............................. <"RemoteControlCameraScanlines">
  [ 76] pusharglist 1 ........................... <"RemoteControlCameraScanlines">
  [ 78] extcall 15 .............................. <member("RemoteControlCameraScanlines")>
  [ 80] getobjprop 16 ........................... <member("RemoteControlCameraScanlines").image>
  [ 82] setobjprop 19 ........................... me.iScanlines = member("RemoteControlCameraScanlines").image
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglist 0 ........................... <>
  [ 88] extcall 20 .............................. <VOID>
  [ 90] setobjprop 21 ........................... me.pScreenLocNow = VOID
  [ 92] getparam 0 .............................. <me>
  [ 94] pusharglist 0 ........................... <>
  [ 96] extcall 20 .............................. <VOID>
  [ 98] setobjprop 22 ........................... me.pScreenLocDest = VOID
  [100] getparam 0 .............................. <me>
  [102] pushint8 100 ............................ <100>
  [104] setobjprop 23 ........................... me.iZoomNow = 100
  [106] getparam 0 .............................. <me>
  [108] pushint8 100 ............................ <100>
  [110] setobjprop 24 ........................... me.iZoomDest = 100
  [112] getparam 0 .............................. <me>
  [114] pushfloat32 0.0 ......................... <0.0>
  [119] pushfloat32 0.0 ......................... <0.0>
  [124] getparam 0 .............................. <me>
  [126] getchainedprop 18 ....................... <me.iScreen>
  [128] getobjprop 27 ........................... <me.iScreen.width>
  [130] pusharglist 1 ........................... <me.iScreen.width>
  [132] extcall 26 .............................. <float(me.iScreen.width)>
  [134] getparam 0 .............................. <me>
  [136] getchainedprop 18 ....................... <me.iScreen>
  [138] getobjprop 28 ........................... <me.iScreen.height>
  [140] pusharglist 1 ........................... <me.iScreen.height>
  [142] extcall 26 .............................. <float(me.iScreen.height)>
  [144] pusharglist 4 ........................... <0.0, 0.0, float(me.iScreen.width), float(me.iScreen.height)>
  [146] extcall 25 .............................. <rect(0.0, 0.0, float(me.iScreen.width), float(me.iScreen.height))>
  [148] setobjprop 29 ........................... me.rScreenRect = rect(0.0, 0.0, float(me.iScreen.width), float(me.iScreen.height))
  [150] getparam 0 .............................. <me>
  [152] getobjprop 29 ........................... <me.rScreenRect>
  [154] pusharglistnoret 1 ...................... <me.rScreenRect>
  [156] extcall 30 .............................. put me.rScreenRect
  [158] getparam 0 .............................. <me>
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 18 ....................... <me.iScreen>
  [164] getobjprop 27 ........................... <me.iScreen.width>
  [166] pushfloat32 2.0 ......................... <2.0>
  [171] div ..................................... <me.iScreen.width / 2.0>
  [172] getparam 0 .............................. <me>
  [174] getchainedprop 18 ....................... <me.iScreen>
  [176] getobjprop 28 ........................... <me.iScreen.height>
  [178] pushfloat32 2.0 ......................... <2.0>
  [183] div ..................................... <me.iScreen.height / 2.0>
  [184] getparam 0 .............................. <me>
  [186] getchainedprop 18 ....................... <me.iScreen>
  [188] getobjprop 27 ........................... <me.iScreen.width>
  [190] pushfloat32 2.0 ......................... <2.0>
  [195] div ..................................... <me.iScreen.width / 2.0>
  [196] getparam 0 .............................. <me>
  [198] getchainedprop 18 ....................... <me.iScreen>
  [200] getobjprop 28 ........................... <me.iScreen.height>
  [202] pushfloat32 2.0 ......................... <2.0>
  [207] div ..................................... <me.iScreen.height / 2.0>
  [208] pusharglist 4 ........................... <me.iScreen.width / 2.0, me.iScreen.height / 2.0, me.iScreen.width / 2.0, me.iScreen.height / 2.0>
  [210] extcall 25 .............................. <rect(me.iScreen.width / 2.0, me.iScreen.height / 2.0, me.iScreen.width / 2.0, me.iScreen.height / 2.0)>
  [212] setobjprop 31 ........................... me.rScreenRectOffset = rect(me.iScreen.width / 2.0, me.iScreen.height / 2.0, me.iScreen.width / 2.0, me.iScreen.height / 2.0)
  [214] getparam 0 .............................. <me>
  [216] getchainedprop 18 ....................... <me.iScreen>
  [218] getparam 0 .............................. <me>
  [220] getobjprop 29 ........................... <me.rScreenRect>
  [222] pushsymb 32 ............................. <#color>
  [224] pushzero ................................ <0>
  [225] pushzero ................................ <0>
  [226] pushzero ................................ <0>
  [227] pusharglist 3 ........................... <0, 0, 0>
  [229] extcall 33 .............................. <rgb(0, 0, 0)>
  [231] pushsymb 34 ............................. <#bgColor>
  [233] pushzero ................................ <0>
  [234] pushzero ................................ <0>
  [235] pushzero ................................ <0>
  [236] pusharglist 3 ........................... <0, 0, 0>
  [238] extcall 33 .............................. <rgb(0, 0, 0)>
  [240] pushsymb 35 ............................. <#lineSize>
  [242] pushzero ................................ <0>
  [243] pushsymb 36 ............................. <#shapeType>
  [245] pushsymb 25 ............................. <#rect>
  [247] pusharglist 8 ........................... <[#color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect]>
  [249] pushproplist ............................ <[#color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect]>
  [250] pusharglistnoret 3 ...................... <me.iScreen, me.rScreenRect, [#color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect]>
  [252] objcall 37 .............................. me.iScreen.fill(me.rScreenRect, [#color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect])
  [254] getparam 0 .............................. <me>
  [256] getchainedprop 18 ....................... <me.iScreen>
  [258] getprop 19 .............................. <iScanlines>
  [260] getparam 0 .............................. <me>
  [262] getobjprop 29 ........................... <me.rScreenRect>
  [264] getparam 0 .............................. <me>
  [266] getobjprop 29 ........................... <me.rScreenRect>
  [268] pushsymb 38 ............................. <#blend>
  [270] pushint8 35 ............................. <35>
  [272] pushsymb 39 ............................. <#ink>
  [274] pushint8 39 ............................. <39>
  [276] pusharglist 4 ........................... <[#blend: 35, #ink: 39]>
  [278] pushproplist ............................ <[#blend: 35, #ink: 39]>
  [279] pusharglistnoret 5 ...................... <me.iScreen, iScanlines, me.rScreenRect, me.rScreenRect, [#blend: 35, #ink: 39]>
  [281] objcall 40 .............................. me.iScreen.copyPixels(iScanlines, me.rScreenRect, me.rScreenRect, [#blend: 35, #ink: 39])
  [283] getmovieprop 41 ......................... <the actorList>
  [285] getparam 0 .............................. <me>
  [287] pusharglistnoret 2 ...................... <the actorList, me>
  [289] objcall 42 .............................. (the actorList).add(me)
  [291] getglobal 55 ............................ <oIsoScene>
  [293] pusharglist 1 ........................... <oIsoScene>
  [295] extcall 14 .............................. <voidp(oIsoScene)>
  [297] not ..................................... <not voidp(oIsoScene)>
  [298] jmpifz [313] ............................ if not voidp(oIsoScene) then
  [301] getparam 0 .............................. <me>
  [303] getglobal 55 ............................ <oIsoScene>
  [305] getchainedprop 68 ....................... <oIsoScene.oAvatars>
  [307] pusharglist 1 ........................... <oIsoScene.oAvatars>
  [309] objcall 69 .............................. <oIsoScene.oAvatars.getRandomAVatar()>
  [311] setobjprop 70 ........................... me.oAvatar = oIsoScene.oAvatars.getRandomAVatar()
  [313] ret
end

on destroy me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 18 ....................... <me.iScreen>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 29 ........................... <me.rScreenRect>
  [  8] pushsymb 39 ............................. <#ink>
  [ 10] pushint8 39 ............................. <39>
  [ 12] pushsymb 32 ............................. <#color>
  [ 14] pushzero ................................ <0>
  [ 15] pushzero ................................ <0>
  [ 16] pushzero ................................ <0>
  [ 17] pusharglist 3 ........................... <0, 0, 0>
  [ 19] extcall 33 .............................. <rgb(0, 0, 0)>
  [ 21] pushsymb 34 ............................. <#bgColor>
  [ 23] pushzero ................................ <0>
  [ 24] pushzero ................................ <0>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 3 ........................... <0, 0, 0>
  [ 28] extcall 33 .............................. <rgb(0, 0, 0)>
  [ 30] pushsymb 35 ............................. <#lineSize>
  [ 32] pushzero ................................ <0>
  [ 33] pushsymb 36 ............................. <#shapeType>
  [ 35] pushsymb 25 ............................. <#rect>
  [ 37] pusharglist 10 .......................... <[#ink: 39, #color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect]>
  [ 39] pushproplist ............................ <[#ink: 39, #color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect]>
  [ 40] pusharglistnoret 3 ...................... <me.iScreen, me.rScreenRect, [#ink: 39, #color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect]>
  [ 42] objcall 37 .............................. me.iScreen.fill(me.rScreenRect, [#ink: 39, #color: rgb(0, 0, 0), #bgColor: rgb(0, 0, 0), #lineSize: 0, #shapeType: #rect])
  [ 44] getmovieprop 41 ......................... <the actorList>
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 2 ...................... <the actorList, me>
  [ 50] objcall 45 .............................. (the actorList).deleteOne(me)
  [ 52] ret
end

on drawScreen me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 21 ........................... <me.pScreenLocNow>
  [  4] pusharglist 1 ........................... <me.pScreenLocNow>
  [  6] extcall 14 .............................. <voidp(me.pScreenLocNow)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 22 ........................... <me.pScreenLocDest>
  [ 12] pusharglist 1 ........................... <me.pScreenLocDest>
  [ 14] extcall 14 .............................. <voidp(me.pScreenLocDest)>
  [ 16] and ..................................... <voidp(me.pScreenLocNow) and voidp(me.pScreenLocDest)>
  [ 17] jmpifz [ 50] ............................ if voidp(me.pScreenLocNow) and voidp(me.pScreenLocDest) then / else
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 18 ....................... <me.iScreen>
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 17 ........................... <me.iInitSource>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 29 ........................... <me.rScreenRect>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 29 ........................... <me.rScreenRect>
  [ 36] pushsymb 38 ............................. <#blend>
  [ 38] pushint8 25 ............................. <25>
  [ 40] pusharglist 2 ........................... <[#blend: 25]>
  [ 42] pushproplist ............................ <[#blend: 25]>
  [ 43] pusharglistnoret 5 ...................... <me.iScreen, me.iInitSource, me.rScreenRect, me.rScreenRect, [#blend: 25]>
  [ 45] objcall 40 .............................. me.iScreen.copyPixels(me.iInitSource, me.rScreenRect, me.rScreenRect, [#blend: 25])
  [ 47] jmp [544]
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 21 ........................... <me.pScreenLocNow>
  [ 54] pusharglist 1 ........................... <me.pScreenLocNow>
  [ 56] extcall 14 .............................. <voidp(me.pScreenLocNow)>
  [ 58] jmpifz [ 82] ............................ if voidp(me.pScreenLocNow) then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] pushfloat32 692.0 ....................... <692.0>
  [ 68] pushfloat32 78.0 ........................ <78.0>
  [ 73] pusharglist 2 ........................... <692.0, 78.0>
  [ 75] extcall 46 .............................. <point(692.0, 78.0)>
  [ 77] setobjprop 21 ........................... me.pScreenLocNow = point(692.0, 78.0)
  [ 79] jmp [480]
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 10 ........................... <me.iCrossFading>
  [ 86] pushzero ................................ <0>
  [ 87] lt ...................................... <me.iCrossFading < 0>
  [ 88] jmpifz [209] ............................ if me.iCrossFading < 0 then / else
  [ 91] getparam 0 .............................. <me>
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 23 ........................... <me.iZoomNow>
  [ 97] getparam 0 .............................. <me>
  [ 99] getobjprop 24 ........................... <me.iZoomDest>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 23 ........................... <me.iZoomNow>
  [105] sub ..................................... <me.iZoomDest - me.iZoomNow>
  [106] getparam 0 .............................. <me>
  [108] getobjprop 9 ............................ <me.iTrackingDivisor>
  [110] div ..................................... <(me.iZoomDest - me.iZoomNow) / me.iTrackingDivisor>
  [111] add ..................................... <me.iZoomNow + ((me.iZoomDest - me.iZoomNow) / me.iTrackingDivisor)>
  [112] setobjprop 23 ........................... me.iZoomNow = me.iZoomNow + ((me.iZoomDest - me.iZoomNow) / me.iTrackingDivisor)
  [114] getparam 0 .............................. <me>
  [116] getparam 0 .............................. <me>
  [118] getobjprop 21 ........................... <me.pScreenLocNow>
  [120] getparam 0 .............................. <me>
  [122] getobjprop 22 ........................... <me.pScreenLocDest>
  [124] getparam 0 .............................. <me>
  [126] getobjprop 21 ........................... <me.pScreenLocNow>
  [128] sub ..................................... <me.pScreenLocDest - me.pScreenLocNow>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 9 ............................ <me.iTrackingDivisor>
  [133] div ..................................... <(me.pScreenLocDest - me.pScreenLocNow) / me.iTrackingDivisor>
  [134] add ..................................... <me.pScreenLocNow + ((me.pScreenLocDest - me.pScreenLocNow) / me.iTrackingDivisor)>
  [135] setobjprop 21 ........................... me.pScreenLocNow = me.pScreenLocNow + ((me.pScreenLocDest - me.pScreenLocNow) / me.iTrackingDivisor)
  [137] getparam 0 .............................. <me>
  [139] getobjprop 29 ........................... <me.rScreenRect>
  [141] pushint8 100 ............................ <100>
  [143] mul ..................................... <me.rScreenRect * 100>
  [144] getparam 0 .............................. <me>
  [146] getobjprop 23 ........................... <me.iZoomNow>
  [148] div ..................................... <me.rScreenRect * 100 / me.iZoomNow>
  [149] getparam 0 .............................. <me>
  [151] getobjprop 21 ........................... <me.pScreenLocNow>
  [153] getparam 0 .............................. <me>
  [155] getobjprop 21 ........................... <me.pScreenLocNow>
  [157] pusharglist 2 ........................... <me.pScreenLocNow, me.pScreenLocNow>
  [159] extcall 25 .............................. <rect(me.pScreenLocNow, me.pScreenLocNow)>
  [161] add ..................................... <(me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow)>
  [162] getparam 0 .............................. <me>
  [164] getobjprop 31 ........................... <me.rScreenRectOffset>
  [166] pushint8 100 ............................ <100>
  [168] mul ..................................... <me.rScreenRectOffset * 100>
  [169] getparam 0 .............................. <me>
  [171] getobjprop 23 ........................... <me.iZoomNow>
  [173] div ..................................... <me.rScreenRectOffset * 100 / me.iZoomNow>
  [174] sub ..................................... <(me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow) - (me.rScreenRectOffset * 100 / me.iZoomNow)>
  [175] setlocal 0 .............................. rZoomedRect = (me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow) - (me.rScreenRectOffset * 100 / me.iZoomNow)
  [177] getparam 0 .............................. <me>
  [179] getchainedprop 18 ....................... <me.iScreen>
  [181] getmovieprop 47 ......................... <the stage>
  [183] getobjprop 16 ........................... <(the stage).image>
  [185] getparam 0 .............................. <me>
  [187] getobjprop 29 ........................... <me.rScreenRect>
  [189] getlocal 0 .............................. <rZoomedRect>
  [191] pushsymb 38 ............................. <#blend>
  [193] pushint8 60 ............................. <60>
  [195] pushsymb 39 ............................. <#ink>
  [197] pushint8 39 ............................. <39>
  [199] pusharglist 4 ........................... <[#blend: 60, #ink: 39]>
  [201] pushproplist ............................ <[#blend: 60, #ink: 39]>
  [202] pusharglistnoret 5 ...................... <me.iScreen, (the stage).image, me.rScreenRect, rZoomedRect, [#blend: 60, #ink: 39]>
  [204] objcall 40 .............................. me.iScreen.copyPixels((the stage).image, me.rScreenRect, rZoomedRect, [#blend: 60, #ink: 39])
  [206] jmp [480]
  [209] getparam 0 .............................. <me>
  [211] getparam 0 .............................. <me>
  [213] getobjprop 23 ........................... <me.iZoomNow>
  [215] getparam 0 .............................. <me>
  [217] getobjprop 24 ........................... <me.iZoomDest>
  [219] getparam 0 .............................. <me>
  [221] getobjprop 23 ........................... <me.iZoomNow>
  [223] sub ..................................... <me.iZoomDest - me.iZoomNow>
  [224] getparam 0 .............................. <me>
  [226] getobjprop 9 ............................ <me.iTrackingDivisor>
  [228] div ..................................... <(me.iZoomDest - me.iZoomNow) / me.iTrackingDivisor>
  [229] add ..................................... <me.iZoomNow + ((me.iZoomDest - me.iZoomNow) / me.iTrackingDivisor)>
  [230] setobjprop 23 ........................... me.iZoomNow = me.iZoomNow + ((me.iZoomDest - me.iZoomNow) / me.iTrackingDivisor)
  [232] getparam 0 .............................. <me>
  [234] getparam 0 .............................. <me>
  [236] getobjprop 10 ........................... <me.iCrossFading>
  [238] pushint8 5 .............................. <5>
  [240] add ..................................... <me.iCrossFading + 5>
  [241] setobjprop 10 ........................... me.iCrossFading = me.iCrossFading + 5
  [243] getparam 0 .............................. <me>
  [245] getobjprop 10 ........................... <me.iCrossFading>
  [247] pushint8 100 ............................ <100>
  [249] gt ...................................... <me.iCrossFading > 100>
  [250] jmpifz [348] ............................ if me.iCrossFading > 100 then / else
  [253] getparam 0 .............................. <me>
  [255] pushint8 1 .............................. <1>
  [257] inv ..................................... <-1>
  [258] setobjprop 10 ........................... me.iCrossFading = -1
  [260] getparam 0 .............................. <me>
  [262] getparam 0 .............................. <me>
  [264] getobjprop 22 ........................... <me.pScreenLocDest>
  [266] setobjprop 21 ........................... me.pScreenLocNow = me.pScreenLocDest
  [268] getparam 0 .............................. <me>
  [270] getparam 0 .............................. <me>
  [272] getobjprop 24 ........................... <me.iZoomDest>
  [274] setobjprop 23 ........................... me.iZoomNow = me.iZoomDest
  [276] getparam 0 .............................. <me>
  [278] getobjprop 29 ........................... <me.rScreenRect>
  [280] pushint8 100 ............................ <100>
  [282] mul ..................................... <me.rScreenRect * 100>
  [283] getparam 0 .............................. <me>
  [285] getobjprop 23 ........................... <me.iZoomNow>
  [287] div ..................................... <me.rScreenRect * 100 / me.iZoomNow>
  [288] getparam 0 .............................. <me>
  [290] getobjprop 21 ........................... <me.pScreenLocNow>
  [292] getparam 0 .............................. <me>
  [294] getobjprop 21 ........................... <me.pScreenLocNow>
  [296] pusharglist 2 ........................... <me.pScreenLocNow, me.pScreenLocNow>
  [298] extcall 25 .............................. <rect(me.pScreenLocNow, me.pScreenLocNow)>
  [300] add ..................................... <(me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow)>
  [301] getparam 0 .............................. <me>
  [303] getobjprop 31 ........................... <me.rScreenRectOffset>
  [305] pushint8 100 ............................ <100>
  [307] mul ..................................... <me.rScreenRectOffset * 100>
  [308] getparam 0 .............................. <me>
  [310] getobjprop 23 ........................... <me.iZoomNow>
  [312] div ..................................... <me.rScreenRectOffset * 100 / me.iZoomNow>
  [313] sub ..................................... <(me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow) - (me.rScreenRectOffset * 100 / me.iZoomNow)>
  [314] setlocal 1 .............................. rZoomedRectNow = (me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow) - (me.rScreenRectOffset * 100 / me.iZoomNow)
  [316] getparam 0 .............................. <me>
  [318] getchainedprop 18 ....................... <me.iScreen>
  [320] getmovieprop 47 ......................... <the stage>
  [322] getobjprop 16 ........................... <(the stage).image>
  [324] getparam 0 .............................. <me>
  [326] getobjprop 29 ........................... <me.rScreenRect>
  [328] getlocal 1 .............................. <rZoomedRectNow>
  [330] pushsymb 38 ............................. <#blend>
  [332] pushint8 100 ............................ <100>
  [334] pushsymb 39 ............................. <#ink>
  [336] pushint8 39 ............................. <39>
  [338] pusharglist 4 ........................... <[#blend: 100, #ink: 39]>
  [340] pushproplist ............................ <[#blend: 100, #ink: 39]>
  [341] pusharglistnoret 5 ...................... <me.iScreen, (the stage).image, me.rScreenRect, rZoomedRectNow, [#blend: 100, #ink: 39]>
  [343] objcall 40 .............................. me.iScreen.copyPixels((the stage).image, me.rScreenRect, rZoomedRectNow, [#blend: 100, #ink: 39])
  [345] jmp [480]
  [348] getparam 0 .............................. <me>
  [350] getobjprop 29 ........................... <me.rScreenRect>
  [352] pushint8 100 ............................ <100>
  [354] mul ..................................... <me.rScreenRect * 100>
  [355] getparam 0 .............................. <me>
  [357] getobjprop 23 ........................... <me.iZoomNow>
  [359] div ..................................... <me.rScreenRect * 100 / me.iZoomNow>
  [360] getparam 0 .............................. <me>
  [362] getobjprop 21 ........................... <me.pScreenLocNow>
  [364] getparam 0 .............................. <me>
  [366] getobjprop 21 ........................... <me.pScreenLocNow>
  [368] pusharglist 2 ........................... <me.pScreenLocNow, me.pScreenLocNow>
  [370] extcall 25 .............................. <rect(me.pScreenLocNow, me.pScreenLocNow)>
  [372] add ..................................... <(me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow)>
  [373] getparam 0 .............................. <me>
  [375] getobjprop 31 ........................... <me.rScreenRectOffset>
  [377] pushint8 100 ............................ <100>
  [379] mul ..................................... <me.rScreenRectOffset * 100>
  [380] getparam 0 .............................. <me>
  [382] getobjprop 23 ........................... <me.iZoomNow>
  [384] div ..................................... <me.rScreenRectOffset * 100 / me.iZoomNow>
  [385] sub ..................................... <(me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow) - (me.rScreenRectOffset * 100 / me.iZoomNow)>
  [386] setlocal 1 .............................. rZoomedRectNow = (me.rScreenRect * 100 / me.iZoomNow) + rect(me.pScreenLocNow, me.pScreenLocNow) - (me.rScreenRectOffset * 100 / me.iZoomNow)
  [388] getparam 0 .............................. <me>
  [390] getobjprop 29 ........................... <me.rScreenRect>
  [392] pushint8 100 ............................ <100>
  [394] mul ..................................... <me.rScreenRect * 100>
  [395] getparam 0 .............................. <me>
  [397] getobjprop 24 ........................... <me.iZoomDest>
  [399] div ..................................... <me.rScreenRect * 100 / me.iZoomDest>
  [400] getparam 0 .............................. <me>
  [402] getobjprop 22 ........................... <me.pScreenLocDest>
  [404] getparam 0 .............................. <me>
  [406] getobjprop 22 ........................... <me.pScreenLocDest>
  [408] pusharglist 2 ........................... <me.pScreenLocDest, me.pScreenLocDest>
  [410] extcall 25 .............................. <rect(me.pScreenLocDest, me.pScreenLocDest)>
  [412] add ..................................... <(me.rScreenRect * 100 / me.iZoomDest) + rect(me.pScreenLocDest, me.pScreenLocDest)>
  [413] getparam 0 .............................. <me>
  [415] getobjprop 31 ........................... <me.rScreenRectOffset>
  [417] pushint8 100 ............................ <100>
  [419] mul ..................................... <me.rScreenRectOffset * 100>
  [420] getparam 0 .............................. <me>
  [422] getobjprop 24 ........................... <me.iZoomDest>
  [424] div ..................................... <me.rScreenRectOffset * 100 / me.iZoomDest>
  [425] sub ..................................... <(me.rScreenRect * 100 / me.iZoomDest) + rect(me.pScreenLocDest, me.pScreenLocDest) - (me.rScreenRectOffset * 100 / me.iZoomDest)>
  [426] setlocal 2 .............................. rZoomedRectDest = (me.rScreenRect * 100 / me.iZoomDest) + rect(me.pScreenLocDest, me.pScreenLocDest) - (me.rScreenRectOffset * 100 / me.iZoomDest)
  [428] getparam 0 .............................. <me>
  [430] getchainedprop 18 ....................... <me.iScreen>
  [432] getmovieprop 47 ......................... <the stage>
  [434] getobjprop 16 ........................... <(the stage).image>
  [436] getparam 0 .............................. <me>
  [438] getobjprop 29 ........................... <me.rScreenRect>
  [440] getlocal 1 .............................. <rZoomedRectNow>
  [442] pushsymb 38 ............................. <#blend>
  [444] pushint8 100 ............................ <100>
  [446] pusharglist 2 ........................... <[#blend: 100]>
  [448] pushproplist ............................ <[#blend: 100]>
  [449] pusharglistnoret 5 ...................... <me.iScreen, (the stage).image, me.rScreenRect, rZoomedRectNow, [#blend: 100]>
  [451] objcall 40 .............................. me.iScreen.copyPixels((the stage).image, me.rScreenRect, rZoomedRectNow, [#blend: 100])
  [453] getparam 0 .............................. <me>
  [455] getchainedprop 18 ....................... <me.iScreen>
  [457] getmovieprop 47 ......................... <the stage>
  [459] getobjprop 16 ........................... <(the stage).image>
  [461] getparam 0 .............................. <me>
  [463] getobjprop 29 ........................... <me.rScreenRect>
  [465] getlocal 2 .............................. <rZoomedRectDest>
  [467] pushsymb 38 ............................. <#blend>
  [469] getparam 0 .............................. <me>
  [471] getobjprop 10 ........................... <me.iCrossFading>
  [473] pusharglist 2 ........................... <[#blend: me.iCrossFading]>
  [475] pushproplist ............................ <[#blend: me.iCrossFading]>
  [476] pusharglistnoret 5 ...................... <me.iScreen, (the stage).image, me.rScreenRect, rZoomedRectDest, [#blend: me.iCrossFading]>
  [478] objcall 40 .............................. me.iScreen.copyPixels((the stage).image, me.rScreenRect, rZoomedRectDest, [#blend: me.iCrossFading])
  [480] getparam 0 .............................. <me>
  [482] getchainedprop 18 ....................... <me.iScreen>
  [484] getprop 19 .............................. <iScanlines>
  [486] getparam 0 .............................. <me>
  [488] getobjprop 29 ........................... <me.rScreenRect>
  [490] getparam 0 .............................. <me>
  [492] getobjprop 29 ........................... <me.rScreenRect>
  [494] pushsymb 38 ............................. <#blend>
  [496] pushint8 35 ............................. <35>
  [498] pushsymb 39 ............................. <#ink>
  [500] pushint8 39 ............................. <39>
  [502] pusharglist 4 ........................... <[#blend: 35, #ink: 39]>
  [504] pushproplist ............................ <[#blend: 35, #ink: 39]>
  [505] pusharglistnoret 5 ...................... <me.iScreen, iScanlines, me.rScreenRect, me.rScreenRect, [#blend: 35, #ink: 39]>
  [507] objcall 40 .............................. me.iScreen.copyPixels(iScanlines, me.rScreenRect, me.rScreenRect, [#blend: 35, #ink: 39])
  [509] getparam 0 .............................. <me>
  [511] getchainedprop 18 ....................... <me.iScreen>
  [513] getprop 19 .............................. <iScanlines>
  [515] getparam 0 .............................. <me>
  [517] getobjprop 29 ........................... <me.rScreenRect>
  [519] pushzero ................................ <0>
  [520] pushzero ................................ <0>
  [521] pushint8 1 .............................. <1>
  [523] pushint8 1 .............................. <1>
  [525] pusharglist 4 ........................... <0, 0, 1, 1>
  [527] extcall 25 .............................. <rect(0, 0, 1, 1)>
  [529] pushsymb 38 ............................. <#blend>
  [531] pushint8 10 ............................. <10>
  [533] pusharglist 1 ........................... <10>
  [535] extcall 48 .............................. <random(10)>
  [537] pusharglist 2 ........................... <[#blend: random(10)]>
  [539] pushproplist ............................ <[#blend: random(10)]>
  [540] pusharglistnoret 5 ...................... <me.iScreen, iScanlines, me.rScreenRect, rect(0, 0, 1, 1), [#blend: random(10)]>
  [542] objcall 40 .............................. me.iScreen.copyPixels(iScanlines, me.rScreenRect, rect(0, 0, 1, 1), [#blend: random(10)])
  [544] ret
end

on setNewPoint me, newPoint
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 10 ........................... <me.iCrossFading>
  [  4] pushzero ................................ <0>
  [  5] lt ...................................... <me.iCrossFading < 0>
  [  6] jmpifz [ 15] ............................ if me.iCrossFading < 0 then
  [  9] getparam 0 .............................. <me>
  [ 11] getparam 1 .............................. <newPoint>
  [ 13] setobjprop 22 ........................... me.pScreenLocDest = newPoint
  [ 15] ret
end

on setNewZoom me, newZoom
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <newZoom>
  [  4] setobjprop 24 ........................... me.iZoomDest = newZoom
  [  6] ret
end

on setNewFade me, newFade
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <newFade>
  [  4] setobjprop 22 ........................... me.pScreenLocDest = newFade
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 10 ........................... me.iCrossFading = 0
  [ 11] ret
end

on stepFrame me
  [  0] getglobal 55 ............................ <oIsoScene>
  [  2] pusharglist 1 ........................... <oIsoScene>
  [  4] extcall 14 .............................. <voidp(oIsoScene)>
  [  6] not ..................................... <not voidp(oIsoScene)>
  [  7] jmpifz [ 82] ............................ if not voidp(oIsoScene) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 70 ........................... <me.oAvatar>
  [ 14] pusharglist 1 ........................... <me.oAvatar>
  [ 16] extcall 14 .............................. <voidp(me.oAvatar)>
  [ 18] not ..................................... <not voidp(me.oAvatar)>
  [ 19] jmpifz [ 70] ............................ if not voidp(me.oAvatar) then / else
  [ 22] pushint8 60 ............................. <60>
  [ 24] pusharglist 1 ........................... <60>
  [ 26] extcall 48 .............................. <random(60)>
  [ 28] pushint8 1 .............................. <1>
  [ 30] eq ...................................... <random(60) = 1>
  [ 31] jmpifz [ 46] ............................ if random(60) = 1 then
  [ 34] getparam 0 .............................. <me>
  [ 36] getglobal 55 ............................ <oIsoScene>
  [ 38] getchainedprop 68 ....................... <oIsoScene.oAvatars>
  [ 40] pusharglist 1 ........................... <oIsoScene.oAvatars>
  [ 42] objcall 69 .............................. <oIsoScene.oAvatars.getRandomAVatar()>
  [ 44] setobjprop 70 ........................... me.oAvatar = oIsoScene.oAvatars.getRandomAVatar()
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 70 ....................... <me.oAvatar>
  [ 50] getobjprop 71 ........................... <me.oAvatar.oViewPoint>
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 77 ........................... <me.pAvatarCameraOffset>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 23 ........................... <me.iZoomNow>
  [ 60] mul ..................................... <me.pAvatarCameraOffset * me.iZoomNow>
  [ 61] pushint8 100 ............................ <100>
  [ 63] div ..................................... <me.pAvatarCameraOffset * me.iZoomNow / 100>
  [ 64] add ..................................... <me.oAvatar.oViewPoint + (me.pAvatarCameraOffset * me.iZoomNow / 100)>
  [ 65] setlocal 0 .............................. oViewPoint = me.oAvatar.oViewPoint + (me.pAvatarCameraOffset * me.iZoomNow / 100)
  [ 67] jmp [ 82]
  [ 70] getparam 0 .............................. <me>
  [ 72] getglobal 55 ............................ <oIsoScene>
  [ 74] getchainedprop 68 ....................... <oIsoScene.oAvatars>
  [ 76] pusharglist 1 ........................... <oIsoScene.oAvatars>
  [ 78] objcall 69 .............................. <oIsoScene.oAvatars.getRandomAVatar()>
  [ 80] setobjprop 70 ........................... me.oAvatar = oIsoScene.oAvatars.getRandomAVatar()
  [ 82] getlocal 0 .............................. <oViewPoint>
  [ 84] pusharglist 1 ........................... <oViewPoint>
  [ 86] extcall 14 .............................. <voidp(oViewPoint)>
  [ 88] not ..................................... <not voidp(oViewPoint)>
  [ 89] jmpifz [100] ............................ if not voidp(oViewPoint) then
  [ 92] getparam 0 .............................. <me>
  [ 94] getlocal 0 .............................. <oViewPoint>
  [ 96] pusharglistnoret 2 ...................... <me, oViewPoint>
  [ 98] objcall 4 ............................... me.setNewPoint(oViewPoint)
  [100] pushint8 60 ............................. <60>
  [102] pusharglist 1 ........................... <60>
  [104] extcall 48 .............................. <random(60)>
  [106] setlocal 1 .............................. whichProcess = random(60)
  [108] getlocal 1 .............................. <whichProcess>
  [110] pushint8 1 .............................. <1>
  [112] eq ...................................... <whichProcess = 1>
  [113] jmpifz [127] ............................ if whichProcess = 1 then / else
  [116] getparam 0 .............................. <me>
  [118] getlocal 0 .............................. <oViewPoint>
  [120] pusharglistnoret 2 ...................... <me, oViewPoint>
  [122] objcall 4 ............................... me.setNewPoint(oViewPoint)
  [124] jmp [161]
  [127] getlocal 1 .............................. <whichProcess>
  [129] pushint8 2 .............................. <2>
  [131] eq ...................................... <whichProcess = 2>
  [132] jmpifz [138] ............................ if whichProcess = 2 then / else
  [135] jmp [161]
  [138] getlocal 1 .............................. <whichProcess>
  [140] pushint8 3 .............................. <3>
  [142] eq ...................................... <whichProcess = 3>
  [143] jmpifz [161] ............................ if whichProcess = 3 then
  [146] getparam 0 .............................. <me>
  [148] pushint8 100 ............................ <100>
  [150] pushint8 100 ............................ <100>
  [152] pusharglist 1 ........................... <100>
  [154] extcall 48 .............................. <random(100)>
  [156] add ..................................... <100 + random(100)>
  [157] pusharglistnoret 2 ...................... <me, 100 + random(100)>
  [159] objcall 5 ............................... me.setNewZoom(100 + random(100))
  [161] getparam 0 .............................. <me>
  [163] pusharglistnoret 1 ...................... <me>
  [165] objcall 3 ............................... me.drawScreen()
  [167] ret
end
