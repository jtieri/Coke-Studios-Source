property bDebug, bInitialized, bReadyForuse, foStudioManager, fo_level0, aPrivateStudioData, ERROR_TYPE, ARRAY_TYPE, STUDIO_TYPE, iLastPublicStudioUpdate, iLastPrivateStudioUpdate, iCacheTimeLength, aCachedStudioData, STUDIO_TIMER_ID, STUDIO_MODE, NASCENT, PUBLIC, PRIVATE, PERSONAL, SEARCH
global sLanguageSetting, oStudioManager, oDenizenManager, oPossessionManager, oPublicstudioData, ElementMgr, gbTestMode, oSession, gFeatureSet

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 85 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushzero ................................ <0>
  [  8] setobjprop 86 ........................... me.bInitialized = 0
  [ 10] getparam 0 .............................. <me>
  [ 12] pushzero ................................ <0>
  [ 13] setobjprop 87 ........................... me.bReadyForuse = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setobjprop 324 .......................... me.aPrivateStudioData = []
  [ 23] getparam 0 .............................. <me>
  [ 25] setglobal 378 ........................... oStudioManager = me
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 0 .............................. <"FlashReturnStatusEnum">
  [ 32] setobjprop 88 ........................... me.ERROR_TYPE = "FlashReturnStatusEnum"
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 1 .............................. <"Array">
  [ 38] setobjprop 89 ........................... me.ARRAY_TYPE = "Array"
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 2 .............................. <"Studio">
  [ 44] setobjprop 90 ........................... me.STUDIO_TYPE = "Studio"
  [ 46] getparam 0 .............................. <me>
  [ 48] pushint16 10000 ......................... <10000>
  [ 51] setobjprop 425 .......................... me.iCacheTimeLength = 10000
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglist 0 ........................... <[]>
  [ 58] pushlist ................................ <[]>
  [ 59] setobjprop 426 .......................... me.aCachedStudioData = []
  [ 62] getparam 0 .............................. <me>
  [ 64] pushcons 3 .............................. <"NASCENT">
  [ 66] setobjprop 427 .......................... me.NASCENT = "NASCENT"
  [ 69] getparam 0 .............................. <me>
  [ 71] pushcons 4 .............................. <"PUBLIC">
  [ 73] setobjprop 428 .......................... me.PUBLIC = "PUBLIC"
  [ 76] getparam 0 .............................. <me>
  [ 78] pushcons 5 .............................. <"PRIVATE">
  [ 80] setobjprop 429 .......................... me.PRIVATE = "PRIVATE"
  [ 83] getparam 0 .............................. <me>
  [ 85] pushcons 6 .............................. <"PERSONAL">
  [ 87] setobjprop 430 .......................... me.PERSONAL = "PERSONAL"
  [ 90] getparam 0 .............................. <me>
  [ 92] pushcons 7 .............................. <"SEARCH">
  [ 94] setobjprop 431 .......................... me.SEARCH = "SEARCH"
  [ 97] getparam 0 .............................. <me>
  [ 99] getparam 0 .............................. <me>
  [101] getobjprop 427 .......................... <me.NASCENT>
  [104] setobjprop 432 .......................... me.STUDIO_MODE = me.NASCENT
  [107] getparam 0 .............................. <me>
  [109] pushcons 8 .............................. <"STUDIO_TIMER">
  [111] setobjprop 433 .......................... me.STUDIO_TIMER_ID = "STUDIO_TIMER"
  [114] pushcons 9 .............................. <"_TIMER_">
  [116] pusharglist 1 ........................... <"_TIMER_">
  [118] extcall 101 ............................. <script("_TIMER_")>
  [120] pushint16 400 ........................... <400>
  [123] pushsymb 1 .............................. <#init>
  [125] getparam 0 .............................. <me>
  [127] pusharglistnoret 4 ...................... <script("_TIMER_"), 400, #init, me>
  [129] objcall 99 .............................. script("_TIMER_").new(400, #init, me)
  [131] ret
end

on getStudioMode me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 432 .......................... <me.STUDIO_MODE>
  [  5] pusharglistnoret 1 ...................... <me.STUDIO_MODE>
  [  7] extcall 121 ............................. return me.STUDIO_MODE
  [  9] ret
end

on setStudioMode me, sMode
  [  0] getparam 1 .............................. <sMode>
  [  2] peek 0 .................................. case sMode of
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 427 .......................... <me.NASCENT>
  [  9] eq
  [ 10] jmpifz [ 26] ............................ (case) me.NASCENT:
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 427 .......................... <me.NASCENT>
  [ 20] setobjprop 432 .......................... me.STUDIO_MODE = me.NASCENT
  [ 23] jmp [119]
  [ 26] peek 0
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 428 .......................... <me.PUBLIC>
  [ 33] eq
  [ 34] jmpifz [ 50] ............................ (case) me.PUBLIC:
  [ 37] getparam 0 .............................. <me>
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 428 .......................... <me.PUBLIC>
  [ 44] setobjprop 432 .......................... me.STUDIO_MODE = me.PUBLIC
  [ 47] jmp [119]
  [ 50] peek 0
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 429 .......................... <me.PRIVATE>
  [ 57] eq
  [ 58] jmpifz [ 74] ............................ (case) me.PRIVATE:
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 429 .......................... <me.PRIVATE>
  [ 68] setobjprop 432 .......................... me.STUDIO_MODE = me.PRIVATE
  [ 71] jmp [119]
  [ 74] peek 0
  [ 76] getparam 0 .............................. <me>
  [ 78] getobjprop 430 .......................... <me.PERSONAL>
  [ 81] eq
  [ 82] jmpifz [ 98] ............................ (case) me.PERSONAL:
  [ 85] getparam 0 .............................. <me>
  [ 87] getparam 0 .............................. <me>
  [ 89] getobjprop 430 .......................... <me.PERSONAL>
  [ 92] setobjprop 432 .......................... me.STUDIO_MODE = me.PERSONAL
  [ 95] jmp [119]
  [ 98] peek 0
  [100] getparam 0 .............................. <me>
  [102] getobjprop 431 .......................... <me.SEARCH>
  [105] eq
  [106] jmpifz [119] ............................ (case) me.SEARCH:
  [109] getparam 0 .............................. <me>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 431 .......................... <me.SEARCH>
  [116] setobjprop 432 .......................... me.STUDIO_MODE = me.SEARCH
  [119] pop 1 ................................... end case
  [121] getparam 0 .............................. <me>
  [123] pushcons 10 ............................. <"setStudioMode() sMode: ">
  [125] getparam 1 .............................. <sMode>
  [127] joinstr ................................. <"setStudioMode() sMode: " & sMode>
  [128] pushcons 11 ............................. <", STUDIO_MODE: ">
  [130] joinstr ................................. <"setStudioMode() sMode: " & sMode & ", STUDIO_MODE: ">
  [131] getparam 0 .............................. <me>
  [133] getobjprop 432 .......................... <me.STUDIO_MODE>
  [136] joinstr ................................. <"setStudioMode() sMode: " & sMode & ", STUDIO_MODE: " & me.STUDIO_MODE>
  [137] pusharglistnoret 2 ...................... <me, "setStudioMode() sMode: " & sMode & ", STUDIO_MODE: " & me.STUDIO_MODE>
  [139] objcall 4 ............................... me.debug("setStudioMode() sMode: " & sMode & ", STUDIO_MODE: " & me.STUDIO_MODE)
  [141] ret
end

on startStudioTimer me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"startStudioTimer()">
  [  4] pusharglistnoret 2 ...................... <me, "startStudioTimer()">
  [  6] objcall 4 ............................... me.debug("startStudioTimer()")
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 1 ...................... <me>
  [ 12] objcall 382 ............................. me.stopStudioTimer()
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 433 .......................... <me.STUDIO_TIMER_ID>
  [ 20] pusharglist 1 ........................... <me.STUDIO_TIMER_ID>
  [ 22] extcall 435 ............................. <timeout(me.STUDIO_TIMER_ID)>
  [ 25] pushint16 5000 .......................... <5000>
  [ 28] pushsymb 383 ............................ <#processStudioTimer>
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglistnoret 4 ...................... <timeout(me.STUDIO_TIMER_ID), 5000, #processStudioTimer, me>
  [ 35] objcall 99 .............................. timeout(me.STUDIO_TIMER_ID).new(5000, #processStudioTimer, me)
  [ 37] ret
end

on stopStudioTimer me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 13 ............................. <"stopStudioTimer()">
  [  4] pusharglistnoret 2 ...................... <me, "stopStudioTimer()">
  [  6] objcall 4 ............................... me.debug("stopStudioTimer()")
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 433 .......................... <me.STUDIO_TIMER_ID>
  [ 13] pusharglist 1 ........................... <me.STUDIO_TIMER_ID>
  [ 15] extcall 435 ............................. <timeout(me.STUDIO_TIMER_ID)>
  [ 18] pusharglistnoret 1 ...................... <timeout(me.STUDIO_TIMER_ID)>
  [ 20] objcall 436 ............................. timeout(me.STUDIO_TIMER_ID).forget()
  [ 23] ret
end

on processStudioTimer me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 14 ............................. <"processStudioTimer() STUDIO_MODE: ">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 432 .......................... <me.STUDIO_MODE>
  [  9] joinstr ................................. <"processStudioTimer() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 10] pusharglistnoret 2 ...................... <me, "processStudioTimer() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 12] objcall 4 ............................... me.debug("processStudioTimer() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 432 .......................... <me.STUDIO_MODE>
  [ 19] peek 0 .................................. case me.STUDIO_MODE of
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 427 .......................... <me.NASCENT>
  [ 26] eq
  [ 27] jmpifz [ 33] ............................ (case) me.NASCENT:
  [ 30] jmp [150]
  [ 33] peek 0
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 428 .......................... <me.PUBLIC>
  [ 40] eq
  [ 41] jmpifz [ 79] ............................ (case) me.PUBLIC:
  [ 44] getglobal 146 ........................... <ElementMgr>
  [ 46] pusharglist 1 ........................... <ElementMgr>
  [ 48] objcall 437 ............................. <ElementMgr.isPublicStudioWindowOpen()>
  [ 51] setlocal 0 .............................. bPublicStudioWindowOpen = ElementMgr.isPublicStudioWindowOpen()
  [ 53] getlocal 0 .............................. <bPublicStudioWindowOpen>
  [ 55] jmpifz [ 68] ............................ if bPublicStudioWindowOpen then / else
  [ 58] getparam 0 .............................. <me>
  [ 60] pusharglistnoret 1 ...................... <me>
  [ 62] objcall 384 ............................. me.getAllPublicStudios()
  [ 65] jmp [ 76]
  [ 68] getparam 0 .............................. <me>
  [ 70] pushcons 15 ............................. <"processStudioTimer() PUBLIC STUDIO WINDOW NOT OPEN">
  [ 72] pusharglistnoret 2 ...................... <me, "processStudioTimer() PUBLIC STUDIO WINDOW NOT OPEN">
  [ 74] objcall 4 ............................... me.debug("processStudioTimer() PUBLIC STUDIO WINDOW NOT OPEN")
  [ 76] jmp [150]
  [ 79] peek 0
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 429 .......................... <me.PRIVATE>
  [ 86] eq
  [ 87] jmpifz [125] ............................ (case) me.PRIVATE:
  [ 90] getglobal 146 ........................... <ElementMgr>
  [ 92] pusharglist 1 ........................... <ElementMgr>
  [ 94] objcall 438 ............................. <ElementMgr.isPrivateStudioWindowOpen()>
  [ 97] setlocal 1 .............................. bPrivateStudioWindowOpen = ElementMgr.isPrivateStudioWindowOpen()
  [ 99] getlocal 1 .............................. <bPrivateStudioWindowOpen>
  [101] jmpifz [114] ............................ if bPrivateStudioWindowOpen then / else
  [104] getparam 0 .............................. <me>
  [106] pusharglistnoret 1 ...................... <me>
  [108] objcall 385 ............................. me.getAllPrivateStudios()
  [111] jmp [122]
  [114] getparam 0 .............................. <me>
  [116] pushcons 16 ............................. <"processStudioTimer() PRIVATE STUDIO WINDOW NOT OPEN">
  [118] pusharglistnoret 2 ...................... <me, "processStudioTimer() PRIVATE STUDIO WINDOW NOT OPEN">
  [120] objcall 4 ............................... me.debug("processStudioTimer() PRIVATE STUDIO WINDOW NOT OPEN")
  [122] jmp [150]
  [125] peek 0
  [127] getparam 0 .............................. <me>
  [129] getobjprop 430 .......................... <me.PERSONAL>
  [132] eq
  [133] jmpifz [139] ............................ (case) me.PERSONAL:
  [136] jmp [150]
  [139] peek 0
  [141] getparam 0 .............................. <me>
  [143] getobjprop 431 .......................... <me.SEARCH>
  [146] eq
  [147] jmpifz [150] ............................ (case) me.SEARCH:
  [150] pop 1 ................................... end case
  [152] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 441 .......................... <me.foStudioManager>
  [ 13] pushcons 17 ............................. <"beanCreated">
  [ 15] pushsymb 3 .............................. <#beanCreated>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "beanCreated", #beanCreated, me>
  [ 21] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "beanCreated", #beanCreated, me)
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 104 .......................... <me.spriteNum>
  [ 27] pusharglist 1 ........................... <me.spriteNum>
  [ 29] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 441 .......................... <me.foStudioManager>
  [ 36] pushcons 18 ............................. <"getAllPublicStudios_Result">
  [ 38] pushsymb 398 ............................ <#getAllPublicStudios_Result>
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getAllPublicStudios_Result", #getAllPublicStudios_Result, me>
  [ 45] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getAllPublicStudios_Result", #getAllPublicStudios_Result, me)
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 104 .......................... <me.spriteNum>
  [ 51] pusharglist 1 ........................... <me.spriteNum>
  [ 53] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 441 .......................... <me.foStudioManager>
  [ 60] pushcons 19 ............................. <"getAllPrivateStudios_Result">
  [ 62] pushsymb 399 ............................ <#getAllPrivateStudios_Result>
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getAllPrivateStudios_Result", #getAllPrivateStudios_Result, me>
  [ 69] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getAllPrivateStudios_Result", #getAllPrivateStudios_Result, me)
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 104 .......................... <me.spriteNum>
  [ 75] pusharglist 1 ........................... <me.spriteNum>
  [ 77] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 441 .......................... <me.foStudioManager>
  [ 84] pushcons 20 ............................. <"getByOwnerName_Result">
  [ 86] pushsymb 400 ............................ <#getByOwnerName_Result>
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getByOwnerName_Result", #getByOwnerName_Result, me>
  [ 93] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getByOwnerName_Result", #getByOwnerName_Result, me)
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 104 .......................... <me.spriteNum>
  [ 99] pusharglist 1 ........................... <me.spriteNum>
  [101] extcall 103 ............................. <sprite(me.spriteNum)>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 441 .......................... <me.foStudioManager>
  [108] pushcons 21 ............................. <"getByStudioId_Result">
  [110] pushsymb 401 ............................ <#getByStudioId_Result>
  [113] getparam 0 .............................. <me>
  [115] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getByStudioId_Result", #getByStudioId_Result, me>
  [117] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getByStudioId_Result", #getByStudioId_Result, me)
  [119] getparam 0 .............................. <me>
  [121] getobjprop 104 .......................... <me.spriteNum>
  [123] pusharglist 1 ........................... <me.spriteNum>
  [125] extcall 103 ............................. <sprite(me.spriteNum)>
  [127] getparam 0 .............................. <me>
  [129] getobjprop 441 .......................... <me.foStudioManager>
  [132] pushcons 22 ............................. <"getGameServerByStudioID_Result">
  [134] pushsymb 402 ............................ <#getGameServerByStudioID_Result>
  [137] getparam 0 .............................. <me>
  [139] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getGameServerByStudioID_Result", #getGameServerByStudioID_Result, me>
  [141] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getGameServerByStudioID_Result", #getGameServerByStudioID_Result, me)
  [143] getparam 0 .............................. <me>
  [145] getobjprop 104 .......................... <me.spriteNum>
  [147] pusharglist 1 ........................... <me.spriteNum>
  [149] extcall 103 ............................. <sprite(me.spriteNum)>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 441 .......................... <me.foStudioManager>
  [156] pushcons 23 ............................. <"getByStudioName_Result">
  [158] pushsymb 403 ............................ <#getByStudioName_Result>
  [161] getparam 0 .............................. <me>
  [163] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getByStudioName_Result", #getByStudioName_Result, me>
  [165] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getByStudioName_Result", #getByStudioName_Result, me)
  [167] getparam 0 .............................. <me>
  [169] getobjprop 104 .......................... <me.spriteNum>
  [171] pusharglist 1 ........................... <me.spriteNum>
  [173] extcall 103 ............................. <sprite(me.spriteNum)>
  [175] getparam 0 .............................. <me>
  [177] getobjprop 441 .......................... <me.foStudioManager>
  [180] pushcons 24 ............................. <"getOccupantsByStudioId_Result">
  [182] pushsymb 404 ............................ <#getOccupantsByStudioId_Result>
  [185] getparam 0 .............................. <me>
  [187] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getOccupantsByStudioId_Result", #getOccupantsByStudioId_Result, me>
  [189] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getOccupantsByStudioId_Result", #getOccupantsByStudioId_Result, me)
  [191] getparam 0 .............................. <me>
  [193] getobjprop 104 .......................... <me.spriteNum>
  [195] pusharglist 1 ........................... <me.spriteNum>
  [197] extcall 103 ............................. <sprite(me.spriteNum)>
  [199] getparam 0 .............................. <me>
  [201] getobjprop 441 .......................... <me.foStudioManager>
  [204] pushcons 25 ............................. <"createStudio_Result">
  [206] pushsymb 405 ............................ <#createStudio_Result>
  [209] getparam 0 .............................. <me>
  [211] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "createStudio_Result", #createStudio_Result, me>
  [213] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "createStudio_Result", #createStudio_Result, me)
  [215] getparam 0 .............................. <me>
  [217] getobjprop 104 .......................... <me.spriteNum>
  [219] pusharglist 1 ........................... <me.spriteNum>
  [221] extcall 103 ............................. <sprite(me.spriteNum)>
  [223] getparam 0 .............................. <me>
  [225] getobjprop 441 .......................... <me.foStudioManager>
  [228] pushcons 26 ............................. <"modifyStudio_Result">
  [230] pushsymb 406 ............................ <#modifyStudio_Result>
  [233] getparam 0 .............................. <me>
  [235] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "modifyStudio_Result", #modifyStudio_Result, me>
  [237] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "modifyStudio_Result", #modifyStudio_Result, me)
  [239] getparam 0 .............................. <me>
  [241] getobjprop 104 .......................... <me.spriteNum>
  [243] pusharglist 1 ........................... <me.spriteNum>
  [245] extcall 103 ............................. <sprite(me.spriteNum)>
  [247] getparam 0 .............................. <me>
  [249] getobjprop 441 .......................... <me.foStudioManager>
  [252] pushcons 27 ............................. <"deleteStudio_Result">
  [254] pushsymb 407 ............................ <#deleteStudio_Result>
  [257] getparam 0 .............................. <me>
  [259] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "deleteStudio_Result", #deleteStudio_Result, me>
  [261] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "deleteStudio_Result", #deleteStudio_Result, me)
  [263] getparam 0 .............................. <me>
  [265] getobjprop 104 .......................... <me.spriteNum>
  [267] pusharglist 1 ........................... <me.spriteNum>
  [269] extcall 103 ............................. <sprite(me.spriteNum)>
  [271] getparam 0 .............................. <me>
  [273] getobjprop 441 .......................... <me.foStudioManager>
  [276] pushcons 28 ............................. <"getMixerByScreenName_Result">
  [278] pushsymb 410 ............................ <#getMixerByScreenName_Result>
  [281] getparam 0 .............................. <me>
  [283] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getMixerByScreenName_Result", #getMixerByScreenName_Result, me>
  [285] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getMixerByScreenName_Result", #getMixerByScreenName_Result, me)
  [287] getparam 0 .............................. <me>
  [289] getobjprop 104 .......................... <me.spriteNum>
  [291] pusharglist 1 ........................... <me.spriteNum>
  [293] extcall 103 ............................. <sprite(me.spriteNum)>
  [295] getparam 0 .............................. <me>
  [297] getobjprop 441 .......................... <me.foStudioManager>
  [300] pushcons 29 ............................. <"burnMixToCD_Result">
  [302] pushsymb 411 ............................ <#burnMixToCD_Result>
  [305] getparam 0 .............................. <me>
  [307] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "burnMixToCD_Result", #burnMixToCD_Result, me>
  [309] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "burnMixToCD_Result", #burnMixToCD_Result, me)
  [311] ret
end

on init me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"init()">
  [  4] pusharglistnoret 2 ...................... <me, "init()">
  [  6] objcall 4 ............................... me.debug("init()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 104 .......................... <me.spriteNum>
  [ 14] pusharglist 1 ........................... <me.spriteNum>
  [ 16] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 18] pushcons 31 ............................. <"_level0.oStudioManager">
  [ 20] pushzero ................................ <0>
  [ 21] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oStudioManager", 0>
  [ 23] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0.oStudioManager", 0)>
  [ 25] setobjprop 441 .......................... me.foStudioManager = sprite(me.spriteNum).getVariable("_level0.oStudioManager", 0)
  [ 28] getparam 0 .............................. <me>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 104 .......................... <me.spriteNum>
  [ 34] pusharglist 1 ........................... <me.spriteNum>
  [ 36] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 38] pushcons 32 ............................. <"_level0">
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0", 0>
  [ 43] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0", 0)>
  [ 45] setobjprop 109 .......................... me.fo_level0 = sprite(me.spriteNum).getVariable("_level0", 0)
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglistnoret 1 ...................... <me>
  [ 51] objcall 2 ............................... me.setCallbacks()
  [ 53] getparam 0 .............................. <me>
  [ 55] getchainedprop 441 ...................... <me.foStudioManager>
  [ 58] pushzero ................................ <0>
  [ 59] setobjprop 85 ........................... me.foStudioManager.bDebug = 0
  [ 61] getparam 0 .............................. <me>
  [ 63] getchainedprop 441 ...................... <me.foStudioManager>
  [ 66] pushzero ................................ <0>
  [ 67] setobjprop 110 .......................... me.foStudioManager.bTestMode = 0
  [ 69] getmovieprop 111 ........................ <the runMode>
  [ 71] pushcons 33 ............................. <"Author">
  [ 73] eq ...................................... <the runMode = "Author">
  [ 74] jmpifz [ 86] ............................ if the runMode = "Author" then / else
  [ 77] getparam 0 .............................. <me>
  [ 79] pushint8 1 .............................. <1>
  [ 81] setobjprop 87 ........................... me.bReadyForuse = 1
  [ 83] jmp [103]
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 441 ...................... <me.foStudioManager>
  [ 91] getparam 0 .............................. <me>
  [ 93] getchainedprop 109 ...................... <me.fo_level0>
  [ 95] pusharglist 1 ........................... <me.fo_level0>
  [ 97] objcall 112 ............................. <me.fo_level0.getGatewayConnection()>
  [ 99] pusharglistnoret 2 ...................... <me.foStudioManager, me.fo_level0.getGatewayConnection()>
  [101] objcall 113 ............................. me.foStudioManager.createGateway(me.fo_level0.getGatewayConnection())
  [103] getparam 0 .............................. <me>
  [105] pushint8 1 .............................. <1>
  [107] setobjprop 86 ........................... me.bInitialized = 1
  [109] getparam 0 .............................. <me>
  [111] pusharglistnoret 1 ...................... <me>
  [113] objcall 381 ............................. me.startStudioTimer()
  [116] ret
end

on beanCreated me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 34 ............................. <"beanCreated()">
  [  4] pusharglistnoret 2 ...................... <me, "beanCreated()">
  [  6] objcall 4 ............................... me.debug("beanCreated()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 87 ........................... me.bReadyForuse = 1
  [ 14] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 85 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 35 ............................. <"StudioManager: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"StudioManager: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"StudioManager: " & sMessage>
  [ 17] extcall 118 ............................. put "StudioManager: " & sMessage
  [ 19] ret
end

on getAllPublicStudios me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 428 .......................... <me.PUBLIC>
  [  7] pusharglistnoret 2 ...................... <me, me.PUBLIC>
  [  9] objcall 380 ............................. me.setStudioMode(me.PUBLIC)
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 36 ............................. <"getAllPublicStudios() STUDIO_MODE: ">
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 432 .......................... <me.STUDIO_MODE>
  [ 21] joinstr ................................. <"getAllPublicStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 22] pusharglistnoret 2 ...................... <me, "getAllPublicStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 24] objcall 4 ............................... me.debug("getAllPublicStudios() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 26] getglobal 127 ........................... <gbTestMode>
  [ 28] jmpifz [ 73] ............................ if gbTestMode then
  [ 31] getglobal 346 ........................... <oPublicstudioData>
  [ 34] getobjprop 347 .......................... <oPublicstudioData.aStudioData>
  [ 37] setlocal 0 .............................. aStudioData = oPublicstudioData.aStudioData
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 37 ............................. <"getAllPublicStudios_Result() aStudioData: ">
  [ 43] getlocal 0 .............................. <aStudioData>
  [ 45] joinstr ................................. <"getAllPublicStudios_Result() aStudioData: " & aStudioData>
  [ 46] pusharglistnoret 2 ...................... <me, "getAllPublicStudios_Result() aStudioData: " & aStudioData>
  [ 48] objcall 4 ............................... me.debug("getAllPublicStudios_Result() aStudioData: " & aStudioData)
  [ 50] getglobal 146 ........................... <ElementMgr>
  [ 52] pusharglist 1 ........................... <ElementMgr>
  [ 54] extcall 135 ............................. <voidp(ElementMgr)>
  [ 56] not ..................................... <not voidp(ElementMgr)>
  [ 57] jmpifz [ 69] ............................ if not voidp(ElementMgr) then
  [ 60] getglobal 146 ........................... <ElementMgr>
  [ 62] getlocal 0 .............................. <aStudioData>
  [ 64] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 66] objcall 442 ............................. ElementMgr.displayPublicStudios(aStudioData)
  [ 69] pusharglistnoret 0 ...................... <>
  [ 71] extcall 121 ............................. return 
  [ 73] pushint8 1 .............................. <1>
  [ 75] setlocal 1 .............................. bUseCache = 1
  [ 77] getparam 0 .............................. <me>
  [ 79] getobjprop 443 .......................... <me.iLastPublicStudioUpdate>
  [ 82] pusharglist 1 ........................... <me.iLastPublicStudioUpdate>
  [ 84] extcall 135 ............................. <voidp(me.iLastPublicStudioUpdate)>
  [ 86] not ..................................... <not voidp(me.iLastPublicStudioUpdate)>
  [ 87] jmpifz [117] ............................ if not voidp(me.iLastPublicStudioUpdate) then / else
  [ 90] getmovieprop 128 ........................ <the milliSeconds>
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 443 .......................... <me.iLastPublicStudioUpdate>
  [ 97] sub ..................................... <the milliSeconds - me.iLastPublicStudioUpdate>
  [ 98] setlocal 2 .............................. iElapsedTime = the milliSeconds - me.iLastPublicStudioUpdate
  [100] getlocal 2 .............................. <iElapsedTime>
  [102] getparam 0 .............................. <me>
  [104] getobjprop 425 .......................... <me.iCacheTimeLength>
  [107] gteq .................................... <iElapsedTime >= me.iCacheTimeLength>
  [108] jmpifz [114] ............................ if iElapsedTime >= me.iCacheTimeLength then
  [111] pushzero ................................ <0>
  [112] setlocal 1 .............................. bUseCache = 0
  [114] jmp [120]
  [117] pushzero ................................ <0>
  [118] setlocal 1 .............................. bUseCache = 0
  [120] getlocal 1 .............................. <bUseCache>
  [122] not ..................................... <not bUseCache>
  [123] jmpifz [139] ............................ if not bUseCache then / else
  [126] getparam 0 .............................. <me>
  [128] getchainedprop 441 ...................... <me.foStudioManager>
  [131] pusharglistnoret 1 ...................... <me.foStudioManager>
  [133] objcall 384 ............................. me.foStudioManager.getAllPublicStudios()
  [136] jmp [169]
  [139] getparam 0 .............................. <me>
  [141] pushcons 38 ............................. <"*** CACHED ****: getAllPublicStudios_Result()">
  [143] pusharglistnoret 2 ...................... <me, "*** CACHED ****: getAllPublicStudios_Result()">
  [145] objcall 4 ............................... me.debug("*** CACHED ****: getAllPublicStudios_Result()")
  [147] getglobal 146 ........................... <ElementMgr>
  [149] pusharglist 1 ........................... <ElementMgr>
  [151] extcall 135 ............................. <voidp(ElementMgr)>
  [153] not ..................................... <not voidp(ElementMgr)>
  [154] jmpifz [169] ............................ if not voidp(ElementMgr) then
  [157] getglobal 146 ........................... <ElementMgr>
  [159] getparam 0 .............................. <me>
  [161] getobjprop 426 .......................... <me.aCachedStudioData>
  [164] pusharglistnoret 2 ...................... <ElementMgr, me.aCachedStudioData>
  [166] objcall 442 ............................. ElementMgr.displayPublicStudios(me.aCachedStudioData)
  [169] ret
end

on getAllPrivateStudios me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 429 .......................... <me.PRIVATE>
  [  7] pusharglistnoret 2 ...................... <me, me.PRIVATE>
  [  9] objcall 380 ............................. me.setStudioMode(me.PRIVATE)
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 39 ............................. <"getAllPrivateStudios() STUDIO_MODE: ">
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 432 .......................... <me.STUDIO_MODE>
  [ 21] joinstr ................................. <"getAllPrivateStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 22] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 24] objcall 4 ............................... me.debug("getAllPrivateStudios() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 26] getglobal 127 ........................... <gbTestMode>
  [ 28] jmpifz [ 81] ............................ if gbTestMode then
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 422 ............................. <me.getTestStudios()>
  [ 38] setlocal 0 .............................. aStudioData = me.getTestStudios()
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 0 .............................. <aStudioData>
  [ 44] setobjprop 324 .......................... me.aPrivateStudioData = aStudioData
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 40 ............................. <"getAllPrivateStudios_Result() aStudioData: ">
  [ 51] getlocal 0 .............................. <aStudioData>
  [ 53] joinstr ................................. <"getAllPrivateStudios_Result() aStudioData: " & aStudioData>
  [ 54] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() aStudioData: " & aStudioData>
  [ 56] objcall 4 ............................... me.debug("getAllPrivateStudios_Result() aStudioData: " & aStudioData)
  [ 58] getglobal 146 ........................... <ElementMgr>
  [ 60] pusharglist 1 ........................... <ElementMgr>
  [ 62] extcall 135 ............................. <voidp(ElementMgr)>
  [ 64] not ..................................... <not voidp(ElementMgr)>
  [ 65] jmpifz [ 77] ............................ if not voidp(ElementMgr) then
  [ 68] getglobal 146 ........................... <ElementMgr>
  [ 70] getlocal 0 .............................. <aStudioData>
  [ 72] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 74] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 77] pusharglistnoret 0 ...................... <>
  [ 79] extcall 121 ............................. return 
  [ 81] pushint8 1 .............................. <1>
  [ 83] setlocal 1 .............................. bUseCache = 1
  [ 85] getparam 0 .............................. <me>
  [ 87] getobjprop 447 .......................... <me.iLastPrivateStudioUpdate>
  [ 90] pusharglist 1 ........................... <me.iLastPrivateStudioUpdate>
  [ 92] extcall 135 ............................. <voidp(me.iLastPrivateStudioUpdate)>
  [ 94] not ..................................... <not voidp(me.iLastPrivateStudioUpdate)>
  [ 95] jmpifz [136] ............................ if not voidp(me.iLastPrivateStudioUpdate) then / else
  [ 98] getmovieprop 128 ........................ <the milliSeconds>
  [100] getparam 0 .............................. <me>
  [102] getobjprop 447 .......................... <me.iLastPrivateStudioUpdate>
  [105] sub ..................................... <the milliSeconds - me.iLastPrivateStudioUpdate>
  [106] setlocal 2 .............................. iElapsedTime = the milliSeconds - me.iLastPrivateStudioUpdate
  [108] getparam 0 .............................. <me>
  [110] pushcons 41 ............................. <"iElapsedTime: ">
  [112] getlocal 2 .............................. <iElapsedTime>
  [114] joinstr ................................. <"iElapsedTime: " & iElapsedTime>
  [115] pusharglistnoret 2 ...................... <me, "iElapsedTime: " & iElapsedTime>
  [117] objcall 4 ............................... me.debug("iElapsedTime: " & iElapsedTime)
  [119] getlocal 2 .............................. <iElapsedTime>
  [121] getparam 0 .............................. <me>
  [123] getobjprop 425 .......................... <me.iCacheTimeLength>
  [126] gteq .................................... <iElapsedTime >= me.iCacheTimeLength>
  [127] jmpifz [133] ............................ if iElapsedTime >= me.iCacheTimeLength then
  [130] pushzero ................................ <0>
  [131] setlocal 1 .............................. bUseCache = 0
  [133] jmp [139]
  [136] pushzero ................................ <0>
  [137] setlocal 1 .............................. bUseCache = 0
  [139] getlocal 1 .............................. <bUseCache>
  [141] not ..................................... <not bUseCache>
  [142] jmpifz [158] ............................ if not bUseCache then / else
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 441 ...................... <me.foStudioManager>
  [150] pusharglistnoret 1 ...................... <me.foStudioManager>
  [152] objcall 385 ............................. me.foStudioManager.getAllPrivateStudios()
  [155] jmp [192]
  [158] getparam 0 .............................. <me>
  [160] getobjprop 324 .......................... <me.aPrivateStudioData>
  [163] setlocal 0 .............................. aStudioData = me.aPrivateStudioData
  [165] getparam 0 .............................. <me>
  [167] pushcons 42 ............................. <"**** CACHED ****: getAllPrivateStudios_Result()">
  [169] pusharglistnoret 2 ...................... <me, "**** CACHED ****: getAllPrivateStudios_Result()">
  [171] objcall 4 ............................... me.debug("**** CACHED ****: getAllPrivateStudios_Result()")
  [173] getglobal 146 ........................... <ElementMgr>
  [175] pusharglist 1 ........................... <ElementMgr>
  [177] extcall 135 ............................. <voidp(ElementMgr)>
  [179] not ..................................... <not voidp(ElementMgr)>
  [180] jmpifz [192] ............................ if not voidp(ElementMgr) then
  [183] getglobal 146 ........................... <ElementMgr>
  [185] getlocal 0 .............................. <aStudioData>
  [187] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [189] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [192] ret
end

on getByOwnerName me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 430 .......................... <me.PERSONAL>
  [  7] pusharglistnoret 2 ...................... <me, me.PERSONAL>
  [  9] objcall 380 ............................. me.setStudioMode(me.PERSONAL)
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 43 ............................. <"getByOwnerName() STUDIO_MODE: ">
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 432 .......................... <me.STUDIO_MODE>
  [ 21] joinstr ................................. <"getByOwnerName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 22] pusharglistnoret 2 ...................... <me, "getByOwnerName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 24] objcall 4 ............................... me.debug("getByOwnerName() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 26] getglobal 127 ........................... <gbTestMode>
  [ 28] jmpifz [ 81] ............................ if gbTestMode then
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 422 ............................. <me.getTestStudios()>
  [ 38] setlocal 0 .............................. aStudioData = me.getTestStudios()
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 0 .............................. <aStudioData>
  [ 44] setobjprop 324 .......................... me.aPrivateStudioData = aStudioData
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 44 ............................. <"getByOwnerName_Result() aStudioData: ">
  [ 51] getlocal 0 .............................. <aStudioData>
  [ 53] joinstr ................................. <"getByOwnerName_Result() aStudioData: " & aStudioData>
  [ 54] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result() aStudioData: " & aStudioData>
  [ 56] objcall 4 ............................... me.debug("getByOwnerName_Result() aStudioData: " & aStudioData)
  [ 58] getglobal 146 ........................... <ElementMgr>
  [ 60] pusharglist 1 ........................... <ElementMgr>
  [ 62] extcall 135 ............................. <voidp(ElementMgr)>
  [ 64] not ..................................... <not voidp(ElementMgr)>
  [ 65] jmpifz [ 77] ............................ if not voidp(ElementMgr) then
  [ 68] getglobal 146 ........................... <ElementMgr>
  [ 70] getlocal 0 .............................. <aStudioData>
  [ 72] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 74] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 77] pusharglistnoret 0 ...................... <>
  [ 79] extcall 121 ............................. return 
  [ 81] getparam 1 .............................. <sScreenName>
  [ 83] pusharglist 1 ........................... <sScreenName>
  [ 85] extcall 135 ............................. <voidp(sScreenName)>
  [ 87] jmpifz [ 94] ............................ if voidp(sScreenName) then
  [ 90] pushcons 45 ............................. <EMPTY>
  [ 92] setparam 1 .............................. sScreenName = EMPTY
  [ 94] getparam 0 .............................. <me>
  [ 96] pushzero ................................ <0>
  [ 97] setobjprop 447 .......................... me.iLastPrivateStudioUpdate = 0
  [100] getparam 0 .............................. <me>
  [102] getchainedprop 441 ...................... <me.foStudioManager>
  [105] getparam 1 .............................. <sScreenName>
  [107] pusharglistnoret 2 ...................... <me.foStudioManager, sScreenName>
  [109] objcall 386 ............................. me.foStudioManager.getByOwnerName(sScreenName)
  [112] ret
end

on getByStudioID me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 46 ............................. <"getByStudioID() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getByStudioID() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getByStudioID() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("getByStudioID() " & sStudioID)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 40] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 109 ...................... <me.fo_level0>
  [ 20] pusharglist 1 ........................... <me.fo_level0>
  [ 22] objcall 448 ............................. <me.fo_level0.getTestGameServerObject()>
  [ 25] setlocal 0 .............................. foGameServer = me.fo_level0.getTestGameServerObject()
  [ 27] pushsymb 449 ............................ <#initGetGameServerResult>
  [ 30] getlocal 0 .............................. <foGameServer>
  [ 32] pusharglistnoret 2 ...................... <#initGetGameServerResult, foGameServer>
  [ 34] extcall 203 ............................. sendAllSprites(#initGetGameServerResult, foGameServer)
  [ 36] pusharglistnoret 0 ...................... <>
  [ 38] extcall 121 ............................. return 
  [ 40] getparam 0 .............................. <me>
  [ 42] getchainedprop 441 ...................... <me.foStudioManager>
  [ 45] getparam 1 .............................. <sStudioID>
  [ 47] pusharglistnoret 2 ...................... <me.foStudioManager, sStudioID>
  [ 49] objcall 387 ............................. me.foStudioManager.getByStudioID(sStudioID)
  [ 52] ret
end

on getGameServerByStudioID me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 47 ............................. <"getGameServerByStudioID() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getGameServerByStudioID() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getGameServerByStudioID() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("getGameServerByStudioID() " & sStudioID)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 40] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 109 ...................... <me.fo_level0>
  [ 20] pusharglist 1 ........................... <me.fo_level0>
  [ 22] objcall 448 ............................. <me.fo_level0.getTestGameServerObject()>
  [ 25] setlocal 0 .............................. foGameServer = me.fo_level0.getTestGameServerObject()
  [ 27] pushsymb 449 ............................ <#initGetGameServerResult>
  [ 30] getlocal 0 .............................. <foGameServer>
  [ 32] pusharglistnoret 2 ...................... <#initGetGameServerResult, foGameServer>
  [ 34] extcall 203 ............................. sendAllSprites(#initGetGameServerResult, foGameServer)
  [ 36] pusharglistnoret 0 ...................... <>
  [ 38] extcall 121 ............................. return 
  [ 40] pushcons 45 ............................. <EMPTY>
  [ 42] setlocal 1 .............................. sDNSAndPort = EMPTY
  [ 44] getglobal 451 ........................... <oSession>
  [ 47] pusharglist 1 ........................... <oSession>
  [ 49] extcall 135 ............................. <voidp(oSession)>
  [ 51] not ..................................... <not voidp(oSession)>
  [ 52] jmpifz [102] ............................ if not voidp(oSession) then
  [ 55] getglobal 451 ........................... <oSession>
  [ 58] pusharglist 1 ........................... <oSession>
  [ 60] objcall 452 ............................. <oSession.getConnected()>
  [ 63] jmpifz [102] ............................ if oSession.getConnected() then
  [ 66] getglobal 451 ........................... <oSession>
  [ 69] pusharglist 1 ........................... <oSession>
  [ 71] objcall 453 ............................. <oSession.getServer()>
  [ 74] pushcons 48 ............................. <":">
  [ 76] joinstr ................................. <oSession.getServer() & ":">
  [ 77] getglobal 451 ........................... <oSession>
  [ 80] pusharglist 1 ........................... <oSession>
  [ 82] objcall 454 ............................. <oSession.getPort()>
  [ 85] joinstr ................................. <oSession.getServer() & ":" & oSession.getPort()>
  [ 86] setlocal 1 .............................. sDNSAndPort = oSession.getServer() & ":" & oSession.getPort()
  [ 88] getlocal 1 .............................. <sDNSAndPort>
  [ 90] getobjprop 240 .......................... <sDNSAndPort.length>
  [ 92] pushint8 1 .............................. <1>
  [ 94] eq ...................................... <sDNSAndPort.length = 1>
  [ 95] jmpifz [102] ............................ if sDNSAndPort.length = 1 then
  [ 98] pushcons 45 ............................. <EMPTY>
  [100] setlocal 1 .............................. sDNSAndPort = EMPTY
  [102] getparam 0 .............................. <me>
  [104] getchainedprop 441 ...................... <me.foStudioManager>
  [107] getparam 1 .............................. <sStudioID>
  [109] getlocal 1 .............................. <sDNSAndPort>
  [111] pusharglistnoret 3 ...................... <me.foStudioManager, sStudioID, sDNSAndPort>
  [113] objcall 388 ............................. me.foStudioManager.getGameServerByStudioID(sStudioID, sDNSAndPort)
  [116] getmovieprop 455 ........................ <the debugPlaybackEnabled>
  [119] jmpifz [156] ............................ if the debugPlaybackEnabled then
  [122] pushcons 49 ............................. <"sStudioID:">
  [124] getparam 1 .............................. <sStudioID>
  [126] joinpadstr .............................. <"sStudioID:" && sStudioID>
  [127] getparam 1 .............................. <sStudioID>
  [129] pusharglist 1 ........................... <sStudioID>
  [131] extcall 456 ............................. <ilk(sStudioID)>
  [134] joinpadstr .............................. <"sStudioID:" && sStudioID && ilk(sStudioID)>
  [135] pushcons 50 ............................. <RETURN>
  [137] joinstr ................................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN>
  [138] pushcons 51 ............................. <"sDNSAndPort:">
  [140] joinstr ................................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:">
  [141] getlocal 1 .............................. <sDNSAndPort>
  [143] joinpadstr .............................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort>
  [144] getlocal 1 .............................. <sDNSAndPort>
  [146] pusharglist 1 ........................... <sDNSAndPort>
  [148] extcall 456 ............................. <ilk(sDNSAndPort)>
  [151] joinpadstr .............................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort && ilk(sDNSAndPort)>
  [152] pusharglistnoret 1 ...................... <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort && ilk(sDNSAndPort)>
  [154] extcall 118 ............................. put "sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort && ilk(sDNSAndPort)
  [156] ret
end

on getByStudioName me, sSearchText
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 431 .......................... <me.SEARCH>
  [  7] pusharglistnoret 2 ...................... <me, me.SEARCH>
  [  9] objcall 380 ............................. me.setStudioMode(me.SEARCH)
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 52 ............................. <"getByStudioName() STUDIO_MODE: ">
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 432 .......................... <me.STUDIO_MODE>
  [ 21] joinstr ................................. <"getByStudioName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 22] pusharglistnoret 2 ...................... <me, "getByStudioName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 24] objcall 4 ............................... me.debug("getByStudioName() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 26] getglobal 127 ........................... <gbTestMode>
  [ 28] jmpifz [ 81] ............................ if gbTestMode then
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 422 ............................. <me.getTestStudios()>
  [ 38] setlocal 0 .............................. aStudioData = me.getTestStudios()
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 0 .............................. <aStudioData>
  [ 44] setobjprop 324 .......................... me.aPrivateStudioData = aStudioData
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 53 ............................. <"getByStudioName_Result() aStudioData: ">
  [ 51] getlocal 0 .............................. <aStudioData>
  [ 53] joinstr ................................. <"getByStudioName_Result() aStudioData: " & aStudioData>
  [ 54] pusharglistnoret 2 ...................... <me, "getByStudioName_Result() aStudioData: " & aStudioData>
  [ 56] objcall 4 ............................... me.debug("getByStudioName_Result() aStudioData: " & aStudioData)
  [ 58] getglobal 146 ........................... <ElementMgr>
  [ 60] pusharglist 1 ........................... <ElementMgr>
  [ 62] extcall 135 ............................. <voidp(ElementMgr)>
  [ 64] not ..................................... <not voidp(ElementMgr)>
  [ 65] jmpifz [ 77] ............................ if not voidp(ElementMgr) then
  [ 68] getglobal 146 ........................... <ElementMgr>
  [ 70] getlocal 0 .............................. <aStudioData>
  [ 72] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 74] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 77] pusharglistnoret 0 ...................... <>
  [ 79] extcall 121 ............................. return 
  [ 81] getparam 1 .............................. <sSearchText>
  [ 83] pusharglist 1 ........................... <sSearchText>
  [ 85] extcall 135 ............................. <voidp(sSearchText)>
  [ 87] jmpifz [ 94] ............................ if voidp(sSearchText) then
  [ 90] pushcons 45 ............................. <EMPTY>
  [ 92] setparam 1 .............................. sSearchText = EMPTY
  [ 94] getparam 0 .............................. <me>
  [ 96] pushzero ................................ <0>
  [ 97] setobjprop 447 .......................... me.iLastPrivateStudioUpdate = 0
  [100] getparam 0 .............................. <me>
  [102] getchainedprop 441 ...................... <me.foStudioManager>
  [105] getparam 1 .............................. <sSearchText>
  [107] pusharglistnoret 2 ...................... <me.foStudioManager, sSearchText>
  [109] objcall 389 ............................. me.foStudioManager.getByStudioName(sSearchText)
  [112] ret
end

on getOccupantsByStudioId me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 54 ............................. <"getOccupantsByStudioId() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getOccupantsByStudioId() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("getOccupantsByStudioId() " & sStudioID)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 67] ............................ if gbTestMode then
  [ 16] pushcons 55 ............................. <"Alan">
  [ 18] pushcons 56 ............................. <"Jarod">
  [ 20] pushcons 57 ............................. <"Jeff">
  [ 22] pushcons 58 ............................. <"Paul">
  [ 24] pushcons 59 ............................. <"George">
  [ 26] pushcons 60 ............................. <"Nonoche">
  [ 28] pusharglist 6 ........................... <["Alan", "Jarod", "Jeff", "Paul", "George", "Nonoche"]>
  [ 30] pushlist ................................ <["Alan", "Jarod", "Jeff", "Paul", "George", "Nonoche"]>
  [ 31] setlocal 0 .............................. aPeople = ["Alan", "Jarod", "Jeff", "Paul", "George", "Nonoche"]
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 61 ............................. <"getOccupantsByStudioId_Result() ">
  [ 37] getlocal 0 .............................. <aPeople>
  [ 39] joinpadstr .............................. <"getOccupantsByStudioId_Result() " && aPeople>
  [ 40] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result() " && aPeople>
  [ 42] objcall 4 ............................... me.debug("getOccupantsByStudioId_Result() " && aPeople)
  [ 44] getglobal 146 ........................... <ElementMgr>
  [ 46] pusharglist 1 ........................... <ElementMgr>
  [ 48] extcall 135 ............................. <voidp(ElementMgr)>
  [ 50] not ..................................... <not voidp(ElementMgr)>
  [ 51] jmpifz [ 63] ............................ if not voidp(ElementMgr) then
  [ 54] getglobal 146 ........................... <ElementMgr>
  [ 56] getlocal 0 .............................. <aPeople>
  [ 58] pusharglistnoret 2 ...................... <ElementMgr, aPeople>
  [ 60] objcall 459 ............................. ElementMgr.displayStudioPeople(aPeople)
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 121 ............................. return 
  [ 67] getparam 1 .............................. <sStudioID>
  [ 69] pusharglist 1 ........................... <sStudioID>
  [ 71] extcall 135 ............................. <voidp(sStudioID)>
  [ 73] jmpifz [ 80] ............................ if voidp(sStudioID) then
  [ 76] pushcons 45 ............................. <EMPTY>
  [ 78] setparam 1 .............................. sStudioID = EMPTY
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 441 ...................... <me.foStudioManager>
  [ 85] getparam 1 .............................. <sStudioID>
  [ 87] pusharglistnoret 2 ...................... <me.foStudioManager, sStudioID>
  [ 89] objcall 390 ............................. me.foStudioManager.getOccupantsByStudioId(sStudioID)
  [ 92] ret
end

on getPublicStudioDetail me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 62 ............................. <"getPublicStudioDetail() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getPublicStudioDetail() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getPublicStudioDetail() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("getPublicStudioDetail() " & sStudioID)
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 91 .............................. <VOID>
  [ 15] setlocal 0 .............................. aDetail = VOID
  [ 17] getglobal 346 ........................... <oPublicstudioData>
  [ 20] pushsymb 347 ............................ <#aStudioData>
  [ 23] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 25] objcall 162 ............................. <oPublicstudioData.aStudioData.count>
  [ 27] setlocal 1 .............................. iLength = oPublicstudioData.aStudioData.count
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 2
  [ 33] getlocal 2
  [ 35] getlocal 1 .............................. <iLength>
  [ 37] lteq
  [ 38] jmpifz [ 87] ............................ repeat with i = 1 to iLength
  [ 41] getglobal 346 ........................... <oPublicstudioData>
  [ 44] pushsymb 347 ............................ <#aStudioData>
  [ 47] getlocal 2 .............................. <i>
  [ 49] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 51] objcall 375 ............................. <oPublicstudioData.aStudioData[i]>
  [ 54] setlocal 3 .............................. aStudio = oPublicstudioData.aStudioData[i]
  [ 56] getlocal 3 .............................. <aStudio>
  [ 58] pushsymb 354 ............................ <#studioId>
  [ 61] pusharglist 2 ........................... <aStudio, #studioId>
  [ 63] objcall 163 ............................. <aStudio[#studioId]>
  [ 65] getparam 1 .............................. <sStudioID>
  [ 67] eq ...................................... <aStudio[#studioId] = sStudioID>
  [ 68] jmpifz [ 78] ............................ if aStudio[#studioId] = sStudioID then
  [ 71] getlocal 3 .............................. <aStudio>
  [ 73] setlocal 0 .............................. aDetail = aStudio
  [ 75] jmp [ 87] ............................... exit repeat
  [ 78] pushint8 1
  [ 80] getlocal 2
  [ 82] add
  [ 83] setlocal 2
  [ 85] endrepeat [ 33]
  [ 87] getparam 0 .............................. <me>
  [ 89] pushcons 62 ............................. <"getPublicStudioDetail() ">
  [ 91] getlocal 0 .............................. <aDetail>
  [ 93] joinstr ................................. <"getPublicStudioDetail() " & aDetail>
  [ 94] pusharglistnoret 2 ...................... <me, "getPublicStudioDetail() " & aDetail>
  [ 96] objcall 4 ............................... me.debug("getPublicStudioDetail() " & aDetail)
  [ 98] getglobal 146 ........................... <ElementMgr>
  [100] pusharglist 1 ........................... <ElementMgr>
  [102] extcall 135 ............................. <voidp(ElementMgr)>
  [104] not ..................................... <not voidp(ElementMgr)>
  [105] jmpifz [117] ............................ if not voidp(ElementMgr) then
  [108] getglobal 146 ........................... <ElementMgr>
  [110] getlocal 0 .............................. <aDetail>
  [112] pusharglistnoret 2 ...................... <ElementMgr, aDetail>
  [114] objcall 461 ............................. ElementMgr.displayStudioDetail(aDetail)
  [117] ret
end

on getPrivateStudioDetail me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 63 ............................. <"getPrivateStudioDetail() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getPrivateStudioDetail() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getPrivateStudioDetail() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("getPrivateStudioDetail() " & sStudioID)
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 91 .............................. <VOID>
  [ 15] setlocal 0 .............................. aDetail = VOID
  [ 17] getprop 324 ............................. <aPrivateStudioData>
  [ 20] getobjprop 162 .......................... <aPrivateStudioData.count>
  [ 22] setlocal 1 .............................. iLength = aPrivateStudioData.count
  [ 24] pushint8 1 .............................. <1>
  [ 26] setlocal 2
  [ 28] getlocal 2
  [ 30] getlocal 1 .............................. <iLength>
  [ 32] lteq
  [ 33] jmpifz [ 78] ............................ repeat with i = 1 to iLength
  [ 36] getprop 324 ............................. <aPrivateStudioData>
  [ 39] getlocal 2 .............................. <i>
  [ 41] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 43] objcall 163 ............................. <aPrivateStudioData[i]>
  [ 45] setlocal 3 .............................. aStudio = aPrivateStudioData[i]
  [ 47] getlocal 3 .............................. <aStudio>
  [ 49] pushsymb 354 ............................ <#studioId>
  [ 52] pusharglist 2 ........................... <aStudio, #studioId>
  [ 54] objcall 163 ............................. <aStudio[#studioId]>
  [ 56] getparam 1 .............................. <sStudioID>
  [ 58] eq ...................................... <aStudio[#studioId] = sStudioID>
  [ 59] jmpifz [ 69] ............................ if aStudio[#studioId] = sStudioID then
  [ 62] getlocal 3 .............................. <aStudio>
  [ 64] setlocal 0 .............................. aDetail = aStudio
  [ 66] jmp [ 78] ............................... exit repeat
  [ 69] pushint8 1
  [ 71] getlocal 2
  [ 73] add
  [ 74] setlocal 2
  [ 76] endrepeat [ 28]
  [ 78] getparam 0 .............................. <me>
  [ 80] pushcons 63 ............................. <"getPrivateStudioDetail() ">
  [ 82] getlocal 0 .............................. <aDetail>
  [ 84] joinstr ................................. <"getPrivateStudioDetail() " & aDetail>
  [ 85] pusharglistnoret 2 ...................... <me, "getPrivateStudioDetail() " & aDetail>
  [ 87] objcall 4 ............................... me.debug("getPrivateStudioDetail() " & aDetail)
  [ 89] getglobal 146 ........................... <ElementMgr>
  [ 91] pusharglist 1 ........................... <ElementMgr>
  [ 93] extcall 135 ............................. <voidp(ElementMgr)>
  [ 95] not ..................................... <not voidp(ElementMgr)>
  [ 96] jmpifz [108] ............................ if not voidp(ElementMgr) then
  [ 99] getglobal 146 ........................... <ElementMgr>
  [101] getlocal 0 .............................. <aDetail>
  [103] pusharglistnoret 2 ...................... <ElementMgr, aDetail>
  [105] objcall 461 ............................. ElementMgr.displayStudioDetail(aDetail)
  [108] ret
end

on createStudio me, sScreenName, sStudioName, sDescription, iLayout, iLocation
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 64 ............................. <"createStudio() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"createStudio() " & sScreenName>
  [  7] getparam 2 .............................. <sStudioName>
  [  9] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName>
  [ 10] getparam 3 .............................. <sDescription>
  [ 12] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName && sDescription>
  [ 13] getparam 4 .............................. <iLayout>
  [ 15] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName && sDescription && iLayout>
  [ 16] getparam 5 .............................. <iLocation>
  [ 18] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName && sDescription && iLayout && iLocation>
  [ 19] pusharglistnoret 2 ...................... <me, "createStudio() " & sScreenName && sStudioName && sDescription && iLayout && iLocation>
  [ 21] objcall 4 ............................... me.debug("createStudio() " & sScreenName && sStudioName && sDescription && iLayout && iLocation)
  [ 23] getparam 4 .............................. <iLayout>
  [ 25] pusharglist 1 ........................... <iLayout>
  [ 27] extcall 135 ............................. <voidp(iLayout)>
  [ 29] jmpifz [ 36] ............................ if voidp(iLayout) then
  [ 32] pushint8 1 .............................. <1>
  [ 34] setparam 4 .............................. iLayout = 1
  [ 36] getparam 5 .............................. <iLocation>
  [ 38] pusharglist 1 ........................... <iLocation>
  [ 40] extcall 135 ............................. <voidp(iLocation)>
  [ 42] jmpifz [ 49] ............................ if voidp(iLocation) then
  [ 45] pushint8 1 .............................. <1>
  [ 47] setparam 5 .............................. iLocation = 1
  [ 49] getglobal 127 ........................... <gbTestMode>
  [ 51] jmpifz [106] ............................ if gbTestMode then
  [ 54] pushzero ................................ <0>
  [ 55] setlocal 0 .............................. iError = 0
  [ 57] pushcons 65 ............................. <"Test">
  [ 59] setparam 2 .............................. sStudioName = "Test"
  [ 61] pushcons 66 ............................. <"Test1">
  [ 63] setlocal 1 .............................. sStudioID = "Test1"
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 67 ............................. <"createStudio_Result()">
  [ 69] getparam 2 .............................. <sStudioName>
  [ 71] joinpadstr .............................. <"createStudio_Result()" && sStudioName>
  [ 72] getlocal 1 .............................. <sStudioID>
  [ 74] joinpadstr .............................. <"createStudio_Result()" && sStudioName && sStudioID>
  [ 75] pusharglistnoret 2 ...................... <me, "createStudio_Result()" && sStudioName && sStudioID>
  [ 77] objcall 4 ............................... me.debug("createStudio_Result()" && sStudioName && sStudioID)
  [ 79] getglobal 146 ........................... <ElementMgr>
  [ 81] pusharglist 1 ........................... <ElementMgr>
  [ 83] extcall 135 ............................. <voidp(ElementMgr)>
  [ 85] not ..................................... <not voidp(ElementMgr)>
  [ 86] jmpifz [102] ............................ if not voidp(ElementMgr) then
  [ 89] getglobal 146 ........................... <ElementMgr>
  [ 91] getlocal 0 .............................. <iError>
  [ 93] getparam 2 .............................. <sStudioName>
  [ 95] getlocal 1 .............................. <sStudioID>
  [ 97] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sStudioID>
  [ 99] objcall 405 ............................. ElementMgr.createStudio_Result(iError, sStudioName, sStudioID)
  [102] pusharglistnoret 0 ...................... <>
  [104] extcall 121 ............................. return 
  [106] getparam 0 .............................. <me>
  [108] getchainedprop 441 ...................... <me.foStudioManager>
  [111] getparam 1 .............................. <sScreenName>
  [113] getglobal 97 ............................ <oDenizenManager>
  [115] pusharglist 1 ........................... <oDenizenManager>
  [117] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [119] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [121] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [123] getparam 2 .............................. <sStudioName>
  [125] getparam 3 .............................. <sDescription>
  [127] getparam 4 .............................. <iLayout>
  [129] getparam 5 .............................. <iLocation>
  [131] pusharglistnoret 7 ...................... <me.foStudioManager, sScreenName, oDenizenManager.getDenizen().getSecret(), sStudioName, sDescription, iLayout, iLocation>
  [133] objcall 393 ............................. me.foStudioManager.createStudio(sScreenName, oDenizenManager.getDenizen().getSecret(), sStudioName, sDescription, iLayout, iLocation)
  [136] ret
end

on modifyStudio me, sStudioID, sStudioName, sDescription
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 68 ............................. <"modifyStudio() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"modifyStudio() " & sStudioID>
  [  7] getparam 2 .............................. <sStudioName>
  [  9] joinpadstr .............................. <"modifyStudio() " & sStudioID && sStudioName>
  [ 10] getparam 3 .............................. <sDescription>
  [ 12] joinpadstr .............................. <"modifyStudio() " & sStudioID && sStudioName && sDescription>
  [ 13] pusharglistnoret 2 ...................... <me, "modifyStudio() " & sStudioID && sStudioName && sDescription>
  [ 15] objcall 4 ............................... me.debug("modifyStudio() " & sStudioID && sStudioName && sDescription)
  [ 17] getglobal 127 ........................... <gbTestMode>
  [ 19] jmpifz [ 74] ............................ if gbTestMode then
  [ 22] pushzero ................................ <0>
  [ 23] setlocal 0 .............................. iError = 0
  [ 25] pushcons 69 ............................. <"Test Name">
  [ 27] setparam 2 .............................. sStudioName = "Test Name"
  [ 29] pushcons 70 ............................. <"Test Description">
  [ 31] setparam 3 .............................. sDescription = "Test Description"
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 71 ............................. <"modifyStudio_Result() ">
  [ 37] getparam 2 .............................. <sStudioName>
  [ 39] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName>
  [ 40] getparam 3 .............................. <sDescription>
  [ 42] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName && sDescription>
  [ 43] pusharglistnoret 2 ...................... <me, "modifyStudio_Result() " && sStudioName && sDescription>
  [ 45] objcall 4 ............................... me.debug("modifyStudio_Result() " && sStudioName && sDescription)
  [ 47] getglobal 146 ........................... <ElementMgr>
  [ 49] pusharglist 1 ........................... <ElementMgr>
  [ 51] extcall 135 ............................. <voidp(ElementMgr)>
  [ 53] not ..................................... <not voidp(ElementMgr)>
  [ 54] jmpifz [ 70] ............................ if not voidp(ElementMgr) then
  [ 57] getglobal 146 ........................... <ElementMgr>
  [ 59] getlocal 0 .............................. <iError>
  [ 61] getparam 2 .............................. <sStudioName>
  [ 63] getparam 3 .............................. <sDescription>
  [ 65] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sDescription>
  [ 67] objcall 406 ............................. ElementMgr.modifyStudio_Result(iError, sStudioName, sDescription)
  [ 70] pusharglistnoret 0 ...................... <>
  [ 72] extcall 121 ............................. return 
  [ 74] getparam 0 .............................. <me>
  [ 76] getchainedprop 441 ...................... <me.foStudioManager>
  [ 79] getglobal 97 ............................ <oDenizenManager>
  [ 81] pusharglist 1 ........................... <oDenizenManager>
  [ 83] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 85] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 87] objcall 52 .............................. <oDenizenManager.getDenizen().getScreenName()>
  [ 89] getglobal 97 ............................ <oDenizenManager>
  [ 91] pusharglist 1 ........................... <oDenizenManager>
  [ 93] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 95] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 97] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 99] getparam 1 .............................. <sStudioID>
  [101] getparam 2 .............................. <sStudioName>
  [103] getparam 3 .............................. <sDescription>
  [105] pusharglistnoret 6 ...................... <me.foStudioManager, oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID, sStudioName, sDescription>
  [107] objcall 394 ............................. me.foStudioManager.modifyStudio(oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID, sStudioName, sDescription)
  [110] ret
end

on deleteStudio me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 72 ............................. <"deleteStudio() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"deleteStudio() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "deleteStudio() " & sStudioID>
  [  9] objcall 4 ............................... me.debug("deleteStudio() " & sStudioID)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 46] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 73 ............................. <"deleteStudio_Result() OK">
  [ 20] pusharglistnoret 2 ...................... <me, "deleteStudio_Result() OK">
  [ 22] objcall 4 ............................... me.debug("deleteStudio_Result() OK")
  [ 24] getglobal 146 ........................... <ElementMgr>
  [ 26] pusharglist 1 ........................... <ElementMgr>
  [ 28] extcall 135 ............................. <voidp(ElementMgr)>
  [ 30] not ..................................... <not voidp(ElementMgr)>
  [ 31] jmpifz [ 42] ............................ if not voidp(ElementMgr) then
  [ 34] getglobal 146 ........................... <ElementMgr>
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 39] objcall 407 ............................. ElementMgr.deleteStudio_Result(0)
  [ 42] pusharglistnoret 0 ...................... <>
  [ 44] extcall 121 ............................. return 
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 441 ...................... <me.foStudioManager>
  [ 51] getglobal 97 ............................ <oDenizenManager>
  [ 53] pusharglist 1 ........................... <oDenizenManager>
  [ 55] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 57] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 59] objcall 52 .............................. <oDenizenManager.getDenizen().getScreenName()>
  [ 61] getglobal 97 ............................ <oDenizenManager>
  [ 63] pusharglist 1 ........................... <oDenizenManager>
  [ 65] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 67] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 69] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 71] getparam 1 .............................. <sStudioID>
  [ 73] pusharglistnoret 4 ...................... <me.foStudioManager, oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID>
  [ 75] objcall 395 ............................. me.foStudioManager.deleteStudio(oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID)
  [ 78] ret
end

on getMixerByScreenName me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 74 ............................. <"getMixerByScreenName() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"getMixerByScreenName() " && sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getMixerByScreenName() " && sScreenName>
  [  9] objcall 4 ............................... me.debug("getMixerByScreenName() " && sScreenName)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 66] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <sScreenName>
  [ 20] pusharglist 2 ........................... <me, sScreenName>
  [ 22] objcall 415 ............................. <me.getTestRemoteMixer(sScreenName)>
  [ 25] setlocal 0 .............................. aRemoteMixer = me.getTestRemoteMixer(sScreenName)
  [ 27] getparam 0 .............................. <me>
  [ 29] pushcons 74 ............................. <"getMixerByScreenName() ">
  [ 31] getlocal 0 .............................. <aRemoteMixer>
  [ 33] joinpadstr .............................. <"getMixerByScreenName() " && aRemoteMixer>
  [ 34] pusharglistnoret 2 ...................... <me, "getMixerByScreenName() " && aRemoteMixer>
  [ 36] objcall 4 ............................... me.debug("getMixerByScreenName() " && aRemoteMixer)
  [ 38] pushzero ................................ <0>
  [ 39] setlocal 1 .............................. iError = 0
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 62] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 1 .............................. <iError>
  [ 55] getlocal 0 .............................. <aRemoteMixer>
  [ 57] pusharglistnoret 3 ...................... <ElementMgr, iError, aRemoteMixer>
  [ 59] objcall 410 ............................. ElementMgr.getMixerByScreenName_Result(iError, aRemoteMixer)
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 121 ............................. return 
  [ 66] getparam 0 .............................. <me>
  [ 68] getchainedprop 441 ...................... <me.foStudioManager>
  [ 71] getparam 1 .............................. <sScreenName>
  [ 73] getglobal 97 ............................ <oDenizenManager>
  [ 75] pusharglist 1 ........................... <oDenizenManager>
  [ 77] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 79] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 81] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 83] pusharglistnoret 3 ...................... <me.foStudioManager, sScreenName, oDenizenManager.getDenizen().getSecret()>
  [ 85] objcall 396 ............................. me.foStudioManager.getMixerByScreenName(sScreenName, oDenizenManager.getDenizen().getSecret())
  [ 88] ret
end

on burnMixToCD me, sScreenName, iMixNumber
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 75 ............................. <"burnMixToCD() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"burnMixToCD() " && sScreenName>
  [  7] getparam 2 .............................. <iMixNumber>
  [  9] joinpadstr .............................. <"burnMixToCD() " && sScreenName && iMixNumber>
  [ 10] pusharglistnoret 2 ...................... <me, "burnMixToCD() " && sScreenName && iMixNumber>
  [ 12] objcall 4 ............................... me.debug("burnMixToCD() " && sScreenName && iMixNumber)
  [ 14] getparam 1 .............................. <sScreenName>
  [ 16] pusharglist 1 ........................... <sScreenName>
  [ 18] extcall 135 ............................. <voidp(sScreenName)>
  [ 20] jmpifz [ 31] ............................ if voidp(sScreenName) then
  [ 23] getglobal 97 ............................ <oDenizenManager>
  [ 25] pusharglist 1 ........................... <oDenizenManager>
  [ 27] objcall 52 .............................. <oDenizenManager.getScreenName()>
  [ 29] setparam 1 .............................. sScreenName = oDenizenManager.getScreenName()
  [ 31] getparam 2 .............................. <iMixNumber>
  [ 33] pusharglist 1 ........................... <iMixNumber>
  [ 35] extcall 135 ............................. <voidp(iMixNumber)>
  [ 37] jmpifz [ 44] ............................ if voidp(iMixNumber) then
  [ 40] pushint8 1 .............................. <1>
  [ 42] setparam 2 .............................. iMixNumber = 1
  [ 44] getglobal 127 ........................... <gbTestMode>
  [ 46] jmpifz [ 86] ............................ if gbTestMode then
  [ 49] pushzero ................................ <0>
  [ 50] setlocal 0 .............................. iError = 0
  [ 52] getparam 0 .............................. <me>
  [ 54] pushcons 76 ............................. <"burnMixToCD_Result() ">
  [ 56] getlocal 0 .............................. <iError>
  [ 58] joinstr ................................. <"burnMixToCD_Result() " & iError>
  [ 59] pusharglistnoret 2 ...................... <me, "burnMixToCD_Result() " & iError>
  [ 61] objcall 4 ............................... me.debug("burnMixToCD_Result() " & iError)
  [ 63] getglobal 146 ........................... <ElementMgr>
  [ 65] pusharglist 1 ........................... <ElementMgr>
  [ 67] extcall 135 ............................. <voidp(ElementMgr)>
  [ 69] not ..................................... <not voidp(ElementMgr)>
  [ 70] jmpifz [ 82] ............................ if not voidp(ElementMgr) then
  [ 73] getglobal 146 ........................... <ElementMgr>
  [ 75] getlocal 0 .............................. <iError>
  [ 77] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 79] objcall 411 ............................. ElementMgr.burnMixToCD_Result(iError)
  [ 82] pusharglistnoret 0 ...................... <>
  [ 84] extcall 121 ............................. return 
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 441 ...................... <me.foStudioManager>
  [ 91] getparam 1 .............................. <sScreenName>
  [ 93] getglobal 97 ............................ <oDenizenManager>
  [ 95] pusharglist 1 ........................... <oDenizenManager>
  [ 97] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 99] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [101] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [103] getparam 2 .............................. <iMixNumber>
  [105] pusharglistnoret 4 ...................... <me.foStudioManager, sScreenName, oDenizenManager.getDenizen().getSecret(), iMixNumber>
  [107] objcall 397 ............................. me.foStudioManager.burnMixToCD(sScreenName, oDenizenManager.getDenizen().getSecret(), iMixNumber)
  [110] ret
end

on getAllPublicStudios_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 77 ............................. <"getAllPublicStudios_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getAllPublicStudios_Result()">
  [  6] objcall 4 ............................... me.debug("getAllPublicStudios_Result()")
  [  8] getparam 0 .............................. <me>
  [ 10] getmovieprop 128 ........................ <the milliSeconds>
  [ 12] setobjprop 443 .......................... me.iLastPublicStudioUpdate = the milliSeconds
  [ 15] getparam 2 .............................. <oResult>
  [ 17] pusharglist 1 ........................... <oResult>
  [ 19] objcall 223 ............................. <oResult.getTypeOf()>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 25] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 26] jmpifz [ 52] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 29] getparam 2 .............................. <oResult>
  [ 31] pusharglist 1 ........................... <oResult>
  [ 33] objcall 224 ............................. <oResult.getOrdinal()>
  [ 35] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 78 ............................. <"getAllPublicStudios_Result() ERROR ">
  [ 41] getlocal 0 .............................. <iError>
  [ 43] joinstr ................................. <"getAllPublicStudios_Result() ERROR " & iError>
  [ 44] pusharglistnoret 2 ...................... <me, "getAllPublicStudios_Result() ERROR " & iError>
  [ 46] objcall 4 ............................... me.debug("getAllPublicStudios_Result() ERROR " & iError)
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 121 ............................. return 
  [ 52] getparam 2 .............................. <oResult>
  [ 54] getobjprop 240 .......................... <oResult.length>
  [ 56] setlocal 1 .............................. iLength = oResult.length
  [ 58] pushzero ................................ <0>
  [ 59] setlocal 2
  [ 61] getlocal 2
  [ 63] getlocal 1 .............................. <iLength>
  [ 65] pushint8 1 .............................. <1>
  [ 67] sub ..................................... <iLength - 1>
  [ 68] lteq
  [ 69] jmpifz [157] ............................ repeat with i = 0 to iLength - 1
  [ 72] getparam 2 .............................. <oResult>
  [ 74] getlocal 2 .............................. <i>
  [ 76] pusharglist 2 ........................... <oResult, i>
  [ 78] objcall 163 ............................. <oResult[i]>
  [ 80] setlocal 3 .............................. oStudio = oResult[i]
  [ 82] getlocal 3 .............................. <oStudio>
  [ 84] pusharglist 1 ........................... <oStudio>
  [ 86] objcall 376 ............................. <oStudio.getStudioID()>
  [ 89] setlocal 4 .............................. sStudioID = oStudio.getStudioID()
  [ 91] getlocal 3 .............................. <oStudio>
  [ 93] pusharglist 1 ........................... <oStudio>
  [ 95] objcall 466 ............................. <oStudio.getCurrentOccupancy()>
  [ 98] pusharglist 1 ........................... <oStudio.getCurrentOccupancy()>
  [100] extcall 238 ............................. <integer(oStudio.getCurrentOccupancy())>
  [102] setlocal 5 .............................. iUserCount = integer(oStudio.getCurrentOccupancy())
  [104] getlocal 3 .............................. <oStudio>
  [106] pusharglist 1 ........................... <oStudio>
  [108] objcall 467 ............................. <oStudio.getMaxOccupancy()>
  [111] pusharglist 1 ........................... <oStudio.getMaxOccupancy()>
  [113] extcall 238 ............................. <integer(oStudio.getMaxOccupancy())>
  [115] setlocal 6 .............................. iCapacity = integer(oStudio.getMaxOccupancy())
  [117] getlocal 3 .............................. <oStudio>
  [119] pusharglist 1 ........................... <oStudio>
  [121] objcall 468 ............................. <oStudio.getLocation()>
  [124] pusharglist 1 ........................... <oStudio.getLocation()>
  [126] extcall 238 ............................. <integer(oStudio.getLocation())>
  [128] setlocal 7 .............................. iLocation = integer(oStudio.getLocation())
  [130] getglobal 346 ........................... <oPublicstudioData>
  [133] getlocal 4 .............................. <sStudioID>
  [135] getlocal 5 .............................. <iUserCount>
  [137] getlocal 6 .............................. <iCapacity>
  [139] getlocal 7 .............................. <iLocation>
  [141] pushcons 45 ............................. <EMPTY>
  [143] pusharglistnoret 6 ...................... <oPublicstudioData, sStudioID, iUserCount, iCapacity, iLocation, EMPTY>
  [145] objcall 341 ............................. oPublicstudioData.updateStudio(sStudioID, iUserCount, iCapacity, iLocation, EMPTY)
  [148] pushint8 1
  [150] getlocal 2
  [152] add
  [153] setlocal 2
  [155] endrepeat [ 61]
  [157] getparam 0 .............................. <me>
  [159] getglobal 346 ........................... <oPublicstudioData>
  [162] getparam 2 .............................. <oResult>
  [164] pusharglist 2 ........................... <oPublicstudioData, oResult>
  [166] objcall 344 ............................. <oPublicstudioData.syncWithServer(oResult)>
  [169] setobjprop 426 .......................... me.aCachedStudioData = oPublicstudioData.syncWithServer(oResult)
  [172] getglobal 146 ........................... <ElementMgr>
  [174] pusharglist 1 ........................... <ElementMgr>
  [176] extcall 135 ............................. <voidp(ElementMgr)>
  [178] not ..................................... <not voidp(ElementMgr)>
  [179] jmpifz [194] ............................ if not voidp(ElementMgr) then
  [182] getglobal 146 ........................... <ElementMgr>
  [184] getparam 0 .............................. <me>
  [186] getobjprop 426 .......................... <me.aCachedStudioData>
  [189] pusharglistnoret 2 ...................... <ElementMgr, me.aCachedStudioData>
  [191] objcall 442 ............................. ElementMgr.displayPublicStudios(me.aCachedStudioData)
  [194] ret
end

on getAllPrivateStudios_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 79 ............................. <"getAllPrivateStudios_Result() length: ">
  [  4] getparam 2 .............................. <oResult>
  [  6] getobjprop 240 .......................... <oResult.length>
  [  8] joinstr ................................. <"getAllPrivateStudios_Result() length: " & oResult.length>
  [  9] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() length: " & oResult.length>
  [ 11] objcall 4 ............................... me.debug("getAllPrivateStudios_Result() length: " & oResult.length)
  [ 13] getparam 0 .............................. <me>
  [ 15] getmovieprop 128 ........................ <the milliSeconds>
  [ 17] setobjprop 447 .......................... me.iLastPrivateStudioUpdate = the milliSeconds
  [ 20] getparam 2 .............................. <oResult>
  [ 22] pusharglist 1 ........................... <oResult>
  [ 24] objcall 223 ............................. <oResult.getTypeOf()>
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 30] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 31] jmpifz [ 57] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 34] getparam 2 .............................. <oResult>
  [ 36] pusharglist 1 ........................... <oResult>
  [ 38] objcall 224 ............................. <oResult.getOrdinal()>
  [ 40] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 80 ............................. <"getAllPrivateStudios_Result() ERROR ">
  [ 46] getlocal 0 .............................. <iError>
  [ 48] joinstr ................................. <"getAllPrivateStudios_Result() ERROR " & iError>
  [ 49] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() ERROR " & iError>
  [ 51] objcall 4 ............................... me.debug("getAllPrivateStudios_Result() ERROR " & iError)
  [ 53] pusharglistnoret 0 ...................... <>
  [ 55] extcall 121 ............................. return 
  [ 57] getparam 0 .............................. <me>
  [ 59] getparam 2 .............................. <oResult>
  [ 61] pusharglist 2 ........................... <me, oResult>
  [ 63] objcall 417 ............................. <me.getStudiosFromResult(oResult)>
  [ 66] setlocal 1 .............................. aStudioData = me.getStudiosFromResult(oResult)
  [ 68] getparam 0 .............................. <me>
  [ 70] pushcons 81 ............................. <"getAllPrivateStudios_Result() Result length: ">
  [ 72] getlocal 1 .............................. <aStudioData>
  [ 74] getobjprop 162 .......................... <aStudioData.count>
  [ 76] joinstr ................................. <"getAllPrivateStudios_Result() Result length: " & aStudioData.count>
  [ 77] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() Result length: " & aStudioData.count>
  [ 79] objcall 4 ............................... me.debug("getAllPrivateStudios_Result() Result length: " & aStudioData.count)
  [ 81] getparam 0 .............................. <me>
  [ 83] getlocal 1 .............................. <aStudioData>
  [ 85] setobjprop 324 .......................... me.aPrivateStudioData = aStudioData
  [ 88] getglobal 146 ........................... <ElementMgr>
  [ 90] pusharglist 1 ........................... <ElementMgr>
  [ 92] extcall 135 ............................. <voidp(ElementMgr)>
  [ 94] not ..................................... <not voidp(ElementMgr)>
  [ 95] jmpifz [107] ............................ if not voidp(ElementMgr) then
  [ 98] getglobal 146 ........................... <ElementMgr>
  [100] getlocal 1 .............................. <aStudioData>
  [102] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [104] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [107] ret
end

on getByOwnerName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 82 ............................. <"getByOwnerName_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result()">
  [  6] objcall 4 ............................... me.debug("getByOwnerName_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 45] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 83 ............................. <"getByOwnerName_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getByOwnerName_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("getByOwnerName_Result() ERROR " & iError)
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 121 ............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getparam 2 .............................. <oResult>
  [ 49] pusharglist 2 ........................... <me, oResult>
  [ 51] objcall 417 ............................. <me.getStudiosFromResult(oResult)>
  [ 54] setlocal 1 .............................. aStudioData = me.getStudiosFromResult(oResult)
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 84 ............................. <"getByOwnerName_Result() ">
  [ 60] getlocal 1 .............................. <aStudioData>
  [ 62] joinstr ................................. <"getByOwnerName_Result() " & aStudioData>
  [ 63] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result() " & aStudioData>
  [ 65] objcall 4 ............................... me.debug("getByOwnerName_Result() " & aStudioData)
  [ 67] getparam 0 .............................. <me>
  [ 69] getlocal 1 .............................. <aStudioData>
  [ 71] setobjprop 324 .......................... me.aPrivateStudioData = aStudioData
  [ 74] getglobal 146 ........................... <ElementMgr>
  [ 76] pusharglist 1 ........................... <ElementMgr>
  [ 78] extcall 135 ............................. <voidp(ElementMgr)>
  [ 80] not ..................................... <not voidp(ElementMgr)>
  [ 81] jmpifz [ 93] ............................ if not voidp(ElementMgr) then
  [ 84] getglobal 146 ........................... <ElementMgr>
  [ 86] getlocal 1 .............................. <aStudioData>
  [ 88] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 90] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 93] ret
end

on getByStudioId_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 85 ............................. <"getByStudioID_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getByStudioID_Result()">
  [  6] objcall 4 ............................... me.debug("getByStudioID_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 56] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 86 ............................. <"getByStudioID_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getByStudioID_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getByStudioID_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("getByStudioID_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] getlocal 0 .............................. <iError>
  [ 45] getparam 2 .............................. <oResult>
  [ 47] pusharglistnoret 3 ...................... <ElementMgr, iError, oResult>
  [ 49] objcall 401 ............................. ElementMgr.getByStudioId_Result(iError, oResult)
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 121 ............................. return 
  [ 56] getglobal 146 ........................... <ElementMgr>
  [ 58] pushzero ................................ <0>
  [ 59] getparam 2 .............................. <oResult>
  [ 61] pusharglistnoret 3 ...................... <ElementMgr, 0, oResult>
  [ 63] objcall 401 ............................. ElementMgr.getByStudioId_Result(0, oResult)
  [ 66] ret
end

on getGameServerByStudioID_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 87 ............................. <"getGameServerByStudioID_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getGameServerByStudioID_Result()">
  [  6] objcall 4 ............................... me.debug("getGameServerByStudioID_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 60] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 88 ............................. <"getGameServerByStudioID_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getGameServerByStudioID_Result() ERROR " & iError>
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 3 ...................... <me, "getGameServerByStudioID_Result() ERROR " & iError, 1>
  [ 41] objcall 4 ............................... me.debug("getGameServerByStudioID_Result() ERROR " & iError, 1)
  [ 43] getglobal 146 ........................... <ElementMgr>
  [ 45] pushcons 89 ............................. <"ALERT_NO_SERVER_AVAILABLE">
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_NO_SERVER_AVAILABLE">
  [ 49] objcall 191 ............................. ElementMgr.alert("ALERT_NO_SERVER_AVAILABLE")
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 469 ............................. gotoEntry()
  [ 56] pusharglistnoret 0 ...................... <>
  [ 58] extcall 121 ............................. return 
  [ 60] getparam 2 .............................. <oResult>
  [ 62] setlocal 1 .............................. oGameServer = oResult
  [ 64] getparam 0 .............................. <me>
  [ 66] pushcons 90 ............................. <"getGameServerByStudioID_Result() ">
  [ 68] getlocal 1 .............................. <oGameServer>
  [ 70] pusharglist 1 ........................... <oGameServer>
  [ 72] objcall 202 ............................. <oGameServer.toString()>
  [ 74] joinstr ................................. <"getGameServerByStudioID_Result() " & oGameServer.toString()>
  [ 75] pusharglistnoret 2 ...................... <me, "getGameServerByStudioID_Result() " & oGameServer.toString()>
  [ 77] objcall 4 ............................... me.debug("getGameServerByStudioID_Result() " & oGameServer.toString())
  [ 79] pushsymb 449 ............................ <#initGetGameServerResult>
  [ 82] getlocal 1 .............................. <oGameServer>
  [ 84] pusharglistnoret 2 ...................... <#initGetGameServerResult, oGameServer>
  [ 86] extcall 203 ............................. sendAllSprites(#initGetGameServerResult, oGameServer)
  [ 88] ret
end

on getByStudioName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 91 ............................. <"getByStudioName_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getByStudioName_Result()">
  [  6] objcall 4 ............................... me.debug("getByStudioName_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 45] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 92 ............................. <"getByStudioName_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getByStudioName_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getByStudioName_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("getByStudioName_Result() ERROR " & iError)
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 121 ............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getparam 2 .............................. <oResult>
  [ 49] pusharglist 2 ........................... <me, oResult>
  [ 51] objcall 417 ............................. <me.getStudiosFromResult(oResult)>
  [ 54] setlocal 1 .............................. aStudioData = me.getStudiosFromResult(oResult)
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 93 ............................. <"getByStudioName_Result() ">
  [ 60] getlocal 1 .............................. <aStudioData>
  [ 62] joinstr ................................. <"getByStudioName_Result() " & aStudioData>
  [ 63] pusharglistnoret 2 ...................... <me, "getByStudioName_Result() " & aStudioData>
  [ 65] objcall 4 ............................... me.debug("getByStudioName_Result() " & aStudioData)
  [ 67] getparam 0 .............................. <me>
  [ 69] getlocal 1 .............................. <aStudioData>
  [ 71] setobjprop 324 .......................... me.aPrivateStudioData = aStudioData
  [ 74] getglobal 146 ........................... <ElementMgr>
  [ 76] pusharglist 1 ........................... <ElementMgr>
  [ 78] extcall 135 ............................. <voidp(ElementMgr)>
  [ 80] not ..................................... <not voidp(ElementMgr)>
  [ 81] jmpifz [ 93] ............................ if not voidp(ElementMgr) then
  [ 84] getglobal 146 ........................... <ElementMgr>
  [ 86] getlocal 1 .............................. <aStudioData>
  [ 88] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 90] objcall 446 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 93] ret
end

on getOccupantsByStudioId_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 94 ............................. <"getOccupantsByStudioId_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result()">
  [  6] objcall 4 ............................... me.debug("getOccupantsByStudioId_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sTypeOf = oResult.getTypeOf()
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 95 ............................. <"sTypeOf: ">
  [ 20] getlocal 0 .............................. <sTypeOf>
  [ 22] joinstr ................................. <"sTypeOf: " & sTypeOf>
  [ 23] pusharglistnoret 2 ...................... <me, "sTypeOf: " & sTypeOf>
  [ 25] objcall 4 ............................... me.debug("sTypeOf: " & sTypeOf)
  [ 27] getparam 2 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 223 ............................. <oResult.getTypeOf()>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 37] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 38] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 41] getparam 2 .............................. <oResult>
  [ 43] pusharglist 1 ........................... <oResult>
  [ 45] objcall 224 ............................. <oResult.getOrdinal()>
  [ 47] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 49] getparam 0 .............................. <me>
  [ 51] pushcons 96 ............................. <"getOccupantsByStudioId_Result() ERROR ">
  [ 53] getlocal 1 .............................. <iError>
  [ 55] joinstr ................................. <"getOccupantsByStudioId_Result() ERROR " & iError>
  [ 56] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result() ERROR " & iError>
  [ 58] objcall 4 ............................... me.debug("getOccupantsByStudioId_Result() ERROR " & iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 121 ............................. return 
  [ 64] pusharglist 0 ........................... <[]>
  [ 66] pushlist ................................ <[]>
  [ 67] setlocal 2 .............................. aPeople = []
  [ 69] getparam 2 .............................. <oResult>
  [ 71] getobjprop 240 .......................... <oResult.length>
  [ 73] setlocal 3 .............................. iLength = oResult.length
  [ 75] pushzero ................................ <0>
  [ 76] setlocal 4
  [ 78] getlocal 4
  [ 80] getlocal 3 .............................. <iLength>
  [ 82] pushint8 1 .............................. <1>
  [ 84] sub ..................................... <iLength - 1>
  [ 85] lteq
  [ 86] jmpifz [116] ............................ repeat with i = 0 to iLength - 1
  [ 89] getparam 2 .............................. <oResult>
  [ 91] getlocal 4 .............................. <i>
  [ 93] pusharglist 2 ........................... <oResult, i>
  [ 95] objcall 163 ............................. <oResult[i]>
  [ 97] setlocal 5 .............................. sName = oResult[i]
  [ 99] getlocal 2 .............................. <aPeople>
  [101] getlocal 5 .............................. <sName>
  [103] pusharglistnoret 2 ...................... <aPeople, sName>
  [105] objcall 241 ............................. aPeople.add(sName)
  [107] pushint8 1
  [109] getlocal 4
  [111] add
  [112] setlocal 4
  [114] endrepeat [ 78]
  [116] getparam 0 .............................. <me>
  [118] pushcons 61 ............................. <"getOccupantsByStudioId_Result() ">
  [120] getlocal 2 .............................. <aPeople>
  [122] joinpadstr .............................. <"getOccupantsByStudioId_Result() " && aPeople>
  [123] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result() " && aPeople>
  [125] objcall 4 ............................... me.debug("getOccupantsByStudioId_Result() " && aPeople)
  [127] getglobal 146 ........................... <ElementMgr>
  [129] pusharglist 1 ........................... <ElementMgr>
  [131] extcall 135 ............................. <voidp(ElementMgr)>
  [133] not ..................................... <not voidp(ElementMgr)>
  [134] jmpifz [146] ............................ if not voidp(ElementMgr) then
  [137] getglobal 146 ........................... <ElementMgr>
  [139] getlocal 2 .............................. <aPeople>
  [141] pusharglistnoret 2 ...................... <ElementMgr, aPeople>
  [143] objcall 459 ............................. ElementMgr.displayStudioPeople(aPeople)
  [146] ret
end

on createStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 67 ............................. <"createStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "createStudio_Result()">
  [  6] objcall 4 ............................... me.debug("createStudio_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 68] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 30] extcall 238 ............................. <integer(oResult.getOrdinal())>
  [ 32] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 97 ............................. <"createStudio_Result() ERROR: ">
  [ 38] getlocal 0 .............................. <iError>
  [ 40] joinstr ................................. <"createStudio_Result() ERROR: " & iError>
  [ 41] pusharglistnoret 2 ...................... <me, "createStudio_Result() ERROR: " & iError>
  [ 43] objcall 4 ............................... me.debug("createStudio_Result() ERROR: " & iError)
  [ 45] getglobal 146 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 135 ............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 64] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 146 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 61] objcall 405 ............................. ElementMgr.createStudio_Result(iError)
  [ 64] pusharglistnoret 0 ...................... <>
  [ 66] extcall 121 ............................. return 
  [ 68] pushzero ................................ <0>
  [ 69] setlocal 0 .............................. iError = 0
  [ 71] getparam 2 .............................. <oResult>
  [ 73] pusharglist 1 ........................... <oResult>
  [ 75] objcall 472 ............................. <oResult.getName()>
  [ 78] setlocal 1 .............................. sStudioName = oResult.getName()
  [ 80] getparam 2 .............................. <oResult>
  [ 82] pusharglist 1 ........................... <oResult>
  [ 84] objcall 376 ............................. <oResult.getStudioID()>
  [ 87] setlocal 2 .............................. sStudioID = oResult.getStudioID()
  [ 89] getparam 0 .............................. <me>
  [ 91] pushcons 67 ............................. <"createStudio_Result()">
  [ 93] getlocal 1 .............................. <sStudioName>
  [ 95] joinpadstr .............................. <"createStudio_Result()" && sStudioName>
  [ 96] getlocal 2 .............................. <sStudioID>
  [ 98] joinpadstr .............................. <"createStudio_Result()" && sStudioName && sStudioID>
  [ 99] pusharglistnoret 2 ...................... <me, "createStudio_Result()" && sStudioName && sStudioID>
  [101] objcall 4 ............................... me.debug("createStudio_Result()" && sStudioName && sStudioID)
  [103] getglobal 146 ........................... <ElementMgr>
  [105] pusharglist 1 ........................... <ElementMgr>
  [107] extcall 135 ............................. <voidp(ElementMgr)>
  [109] not ..................................... <not voidp(ElementMgr)>
  [110] jmpifz [126] ............................ if not voidp(ElementMgr) then
  [113] getglobal 146 ........................... <ElementMgr>
  [115] getlocal 0 .............................. <iError>
  [117] getlocal 1 .............................. <sStudioName>
  [119] getlocal 2 .............................. <sStudioID>
  [121] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sStudioID>
  [123] objcall 405 ............................. ElementMgr.createStudio_Result(iError, sStudioName, sStudioID)
  [126] ret
end

on modifyStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 98 ............................. <"modifyStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "modifyStudio_Result()">
  [  6] objcall 4 ............................... me.debug("modifyStudio_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 68] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 30] extcall 238 ............................. <integer(oResult.getOrdinal())>
  [ 32] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 99 ............................. <"modifyStudio_Result() ERROR: ">
  [ 38] getlocal 0 .............................. <iError>
  [ 40] joinstr ................................. <"modifyStudio_Result() ERROR: " & iError>
  [ 41] pusharglistnoret 2 ...................... <me, "modifyStudio_Result() ERROR: " & iError>
  [ 43] objcall 4 ............................... me.debug("modifyStudio_Result() ERROR: " & iError)
  [ 45] getglobal 146 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 135 ............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 64] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 146 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 61] objcall 406 ............................. ElementMgr.modifyStudio_Result(iError)
  [ 64] pusharglistnoret 0 ...................... <>
  [ 66] extcall 121 ............................. return 
  [ 68] pushzero ................................ <0>
  [ 69] setlocal 0 .............................. iError = 0
  [ 71] getparam 2 .............................. <oResult>
  [ 73] pusharglist 1 ........................... <oResult>
  [ 75] objcall 472 ............................. <oResult.getName()>
  [ 78] setlocal 1 .............................. sStudioName = oResult.getName()
  [ 80] getparam 2 .............................. <oResult>
  [ 82] pusharglist 1 ........................... <oResult>
  [ 84] objcall 473 ............................. <oResult.getDescription()>
  [ 87] setlocal 2 .............................. sDescription = oResult.getDescription()
  [ 89] getparam 0 .............................. <me>
  [ 91] pushcons 71 ............................. <"modifyStudio_Result() ">
  [ 93] getlocal 1 .............................. <sStudioName>
  [ 95] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName>
  [ 96] getlocal 2 .............................. <sDescription>
  [ 98] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName && sDescription>
  [ 99] pusharglistnoret 2 ...................... <me, "modifyStudio_Result() " && sStudioName && sDescription>
  [101] objcall 4 ............................... me.debug("modifyStudio_Result() " && sStudioName && sDescription)
  [103] getglobal 146 ........................... <ElementMgr>
  [105] pusharglist 1 ........................... <ElementMgr>
  [107] extcall 135 ............................. <voidp(ElementMgr)>
  [109] not ..................................... <not voidp(ElementMgr)>
  [110] jmpifz [126] ............................ if not voidp(ElementMgr) then
  [113] getglobal 146 ........................... <ElementMgr>
  [115] getlocal 0 .............................. <iError>
  [117] getlocal 1 .............................. <sStudioName>
  [119] getlocal 2 .............................. <sDescription>
  [121] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sDescription>
  [123] objcall 406 ............................. ElementMgr.modifyStudio_Result(iError, sStudioName, sDescription)
  [126] ret
end

on deleteStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 100 ............................ <"deleteStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "deleteStudio_Result()">
  [  6] objcall 4 ............................... me.debug("deleteStudio_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 89] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 30] extcall 238 ............................. <integer(oResult.getOrdinal())>
  [ 32] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 101 ............................ <"deleteStudio_Result() ERROR: ">
  [ 38] getlocal 0 .............................. <iError>
  [ 40] joinstr ................................. <"deleteStudio_Result() ERROR: " & iError>
  [ 41] pusharglistnoret 2 ...................... <me, "deleteStudio_Result() ERROR: " & iError>
  [ 43] objcall 4 ............................... me.debug("deleteStudio_Result() ERROR: " & iError)
  [ 45] getglobal 146 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 135 ............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 64] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 146 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 61] objcall 407 ............................. ElementMgr.deleteStudio_Result(iError)
  [ 64] getlocal 0 .............................. <iError>
  [ 66] pushzero ................................ <0>
  [ 67] eq ...................................... <iError = 0>
  [ 68] jmpifz [ 85] ............................ if iError = 0 then
  [ 71] getparam 0 .............................. <me>
  [ 73] pushcons 73 ............................. <"deleteStudio_Result() OK">
  [ 75] pusharglistnoret 2 ...................... <me, "deleteStudio_Result() OK">
  [ 77] objcall 4 ............................... me.debug("deleteStudio_Result() OK")
  [ 79] getglobal 227 ........................... <oPossessionManager>
  [ 81] pusharglistnoret 1 ...................... <oPossessionManager>
  [ 83] objcall 65 .............................. oPossessionManager.getBackpack()
  [ 85] pusharglistnoret 0 ...................... <>
  [ 87] extcall 121 ............................. return 
  [ 89] ret
end

on startCreateStudio me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 102 ............................ <"startCreateStudio() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"startCreateStudio() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "startCreateStudio() " & sScreenName>
  [  9] objcall 4 ............................... me.debug("startCreateStudio() " & sScreenName)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] pusharglist 1 ........................... <ElementMgr>
  [ 15] extcall 135 ............................. <voidp(ElementMgr)>
  [ 17] not ..................................... <not voidp(ElementMgr)>
  [ 18] jmpifz [ 29] ............................ if not voidp(ElementMgr) then
  [ 21] getglobal 146 ........................... <ElementMgr>
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 26] objcall 474 ............................. ElementMgr.startCreateStudio_Result(0)
  [ 29] ret
end

on startModifyStudio me, sScreenName, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 103 ............................ <"startModifyStudio() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"startModifyStudio() " & sScreenName>
  [  7] getparam 2 .............................. <sStudioID>
  [  9] joinpadstr .............................. <"startModifyStudio() " & sScreenName && sStudioID>
  [ 10] pusharglistnoret 2 ...................... <me, "startModifyStudio() " & sScreenName && sStudioID>
  [ 12] objcall 4 ............................... me.debug("startModifyStudio() " & sScreenName && sStudioID)
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 91 .............................. <VOID>
  [ 18] setlocal 0 .............................. aStudioData = VOID
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 324 .......................... <me.aPrivateStudioData>
  [ 25] pusharglist 1 ........................... <me.aPrivateStudioData>
  [ 27] extcall 135 ............................. <voidp(me.aPrivateStudioData)>
  [ 29] jmpifz [ 36] ............................ if voidp(me.aPrivateStudioData) then
  [ 32] pusharglistnoret 0 ...................... <>
  [ 34] extcall 121 ............................. return 
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 324 ............................ <#aPrivateStudioData>
  [ 41] pusharglist 2 ........................... <me, #aPrivateStudioData>
  [ 43] objcall 162 ............................. <me.aPrivateStudioData.count>
  [ 45] setlocal 1 .............................. iLength = me.aPrivateStudioData.count
  [ 47] pushint8 1 .............................. <1>
  [ 49] setlocal 2
  [ 51] getlocal 2
  [ 53] getlocal 1 .............................. <iLength>
  [ 55] lteq
  [ 56] jmpifz [104] ............................ repeat with i = 1 to iLength
  [ 59] getparam 0 .............................. <me>
  [ 61] pushsymb 324 ............................ <#aPrivateStudioData>
  [ 64] getlocal 2 .............................. <i>
  [ 66] pusharglist 3 ........................... <me, #aPrivateStudioData, i>
  [ 68] objcall 375 ............................. <me.aPrivateStudioData[i]>
  [ 71] setlocal 3 .............................. aStudio = me.aPrivateStudioData[i]
  [ 73] getlocal 3 .............................. <aStudio>
  [ 75] pushsymb 354 ............................ <#studioId>
  [ 78] pusharglist 2 ........................... <aStudio, #studioId>
  [ 80] objcall 163 ............................. <aStudio[#studioId]>
  [ 82] getparam 2 .............................. <sStudioID>
  [ 84] eq ...................................... <aStudio[#studioId] = sStudioID>
  [ 85] jmpifz [ 95] ............................ if aStudio[#studioId] = sStudioID then
  [ 88] getlocal 3 .............................. <aStudio>
  [ 90] setlocal 0 .............................. aStudioData = aStudio
  [ 92] jmp [104] ............................... exit repeat
  [ 95] pushint8 1
  [ 97] getlocal 2
  [ 99] add
  [100] setlocal 2
  [102] endrepeat [ 51]
  [104] getlocal 0 .............................. <aStudioData>
  [106] pusharglist 1 ........................... <aStudioData>
  [108] extcall 135 ............................. <voidp(aStudioData)>
  [110] not ..................................... <not voidp(aStudioData)>
  [111] jmpifz [158] ............................ if not voidp(aStudioData) then
  [114] getlocal 0 .............................. <aStudioData>
  [116] pushsymb 355 ............................ <#name>
  [119] pusharglist 2 ........................... <aStudioData, #name>
  [121] objcall 163 ............................. <aStudioData[#name]>
  [123] setlocal 4 .............................. sName = aStudioData[#name]
  [125] getlocal 0 .............................. <aStudioData>
  [127] pushsymb 356 ............................ <#description>
  [130] pusharglist 2 ........................... <aStudioData, #description>
  [132] objcall 163 ............................. <aStudioData[#description]>
  [134] setlocal 5 .............................. sDescription = aStudioData[#description]
  [136] getglobal 146 ........................... <ElementMgr>
  [138] pusharglist 1 ........................... <ElementMgr>
  [140] extcall 135 ............................. <voidp(ElementMgr)>
  [142] not ..................................... <not voidp(ElementMgr)>
  [143] jmpifz [158] ............................ if not voidp(ElementMgr) then
  [146] getglobal 146 ........................... <ElementMgr>
  [148] pushzero ................................ <0>
  [149] getlocal 4 .............................. <sName>
  [151] getlocal 5 .............................. <sDescription>
  [153] pusharglistnoret 4 ...................... <ElementMgr, 0, sName, sDescription>
  [155] objcall 475 ............................. ElementMgr.startModifyStudio_Result(0, sName, sDescription)
  [158] ret
end

on getMixerByScreenName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 104 ............................ <"getMixerByScreenName_Result() ">
  [  4] getparam 2 .............................. <oResult>
  [  6] pusharglist 1 ........................... <oResult>
  [  8] objcall 202 ............................. <oResult.toString()>
  [ 10] joinstr ................................. <"getMixerByScreenName_Result() " & oResult.toString()>
  [ 11] pusharglistnoret 2 ...................... <me, "getMixerByScreenName_Result() " & oResult.toString()>
  [ 13] objcall 4 ............................... me.debug("getMixerByScreenName_Result() " & oResult.toString())
  [ 15] getparam 2 .............................. <oResult>
  [ 17] pusharglist 1 ........................... <oResult>
  [ 19] objcall 223 ............................. <oResult.getTypeOf()>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 25] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 26] jmpifz [ 75] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 29] getparam 2 .............................. <oResult>
  [ 31] pusharglist 1 ........................... <oResult>
  [ 33] objcall 224 ............................. <oResult.getOrdinal()>
  [ 35] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 37] extcall 238 ............................. <integer(oResult.getOrdinal())>
  [ 39] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 105 ............................ <"getMixerByScreenName_Result() ERROR: ">
  [ 45] getlocal 0 .............................. <iError>
  [ 47] joinstr ................................. <"getMixerByScreenName_Result() ERROR: " & iError>
  [ 48] pusharglistnoret 2 ...................... <me, "getMixerByScreenName_Result() ERROR: " & iError>
  [ 50] objcall 4 ............................... me.debug("getMixerByScreenName_Result() ERROR: " & iError)
  [ 52] getglobal 146 ........................... <ElementMgr>
  [ 54] pusharglist 1 ........................... <ElementMgr>
  [ 56] extcall 135 ............................. <voidp(ElementMgr)>
  [ 58] not ..................................... <not voidp(ElementMgr)>
  [ 59] jmpifz [ 71] ............................ if not voidp(ElementMgr) then
  [ 62] getglobal 146 ........................... <ElementMgr>
  [ 64] getlocal 0 .............................. <iError>
  [ 66] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 68] objcall 410 ............................. ElementMgr.getMixerByScreenName_Result(iError)
  [ 71] pusharglistnoret 0 ...................... <>
  [ 73] extcall 121 ............................. return 
  [ 75] pushzero ................................ <0>
  [ 76] setlocal 0 .............................. iError = 0
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 2 .............................. <oResult>
  [ 82] pusharglist 2 ........................... <me, oResult>
  [ 84] objcall 412 ............................. <me.createRemoteMixer(oResult)>
  [ 87] setlocal 1 .............................. aRemoteMixer = me.createRemoteMixer(oResult)
  [ 89] getparam 0 .............................. <me>
  [ 91] pushcons 104 ............................ <"getMixerByScreenName_Result() ">
  [ 93] getlocal 1 .............................. <aRemoteMixer>
  [ 95] joinstr ................................. <"getMixerByScreenName_Result() " & aRemoteMixer>
  [ 96] pusharglistnoret 2 ...................... <me, "getMixerByScreenName_Result() " & aRemoteMixer>
  [ 98] objcall 4 ............................... me.debug("getMixerByScreenName_Result() " & aRemoteMixer)
  [100] getglobal 146 ........................... <ElementMgr>
  [102] pusharglist 1 ........................... <ElementMgr>
  [104] extcall 135 ............................. <voidp(ElementMgr)>
  [106] not ..................................... <not voidp(ElementMgr)>
  [107] jmpifz [121] ............................ if not voidp(ElementMgr) then
  [110] getglobal 146 ........................... <ElementMgr>
  [112] getlocal 0 .............................. <iError>
  [114] getlocal 1 .............................. <aRemoteMixer>
  [116] pusharglistnoret 3 ...................... <ElementMgr, iError, aRemoteMixer>
  [118] objcall 410 ............................. ElementMgr.getMixerByScreenName_Result(iError, aRemoteMixer)
  [121] ret
end

on burnMixToCD_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 106 ............................ <"burnMixToCD_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "burnMixToCD_Result()">
  [  6] objcall 4 ............................... me.debug("burnMixToCD_Result()")
  [  8] pushzero ................................ <0>
  [  9] setlocal 0 .............................. iError = 0
  [ 11] getparam 2 .............................. <oResult>
  [ 13] pusharglist 1 ........................... <oResult>
  [ 15] extcall 135 ............................. <voidp(oResult)>
  [ 17] getparam 2 .............................. <oResult>
  [ 19] pusharglist 0 ........................... <>
  [ 21] extcall 91 .............................. <VOID>
  [ 23] eq ...................................... <oResult = VOID>
  [ 24] or ...................................... <voidp(oResult) or (oResult = VOID)>
  [ 25] jmpifz [ 32] ............................ if voidp(oResult) or (oResult = VOID) then
  [ 28] pushint8 1 .............................. <1>
  [ 30] setlocal 0 .............................. iError = 1
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 76 ............................. <"burnMixToCD_Result() ">
  [ 36] getlocal 0 .............................. <iError>
  [ 38] joinstr ................................. <"burnMixToCD_Result() " & iError>
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 3 ...................... <me, "burnMixToCD_Result() " & iError, 1>
  [ 43] objcall 4 ............................... me.debug("burnMixToCD_Result() " & iError, 1)
  [ 45] getglobal 146 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 135 ............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 66] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 146 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] getparam 2 .............................. <oResult>
  [ 61] pusharglistnoret 3 ...................... <ElementMgr, iError, oResult>
  [ 63] objcall 411 ............................. ElementMgr.burnMixToCD_Result(iError, oResult)
  [ 66] ret
end

on createRemoteMixer me, oResult
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aRemoteMixer = [:]
  [  5] getlocal 0 .............................. <aRemoteMixer>
  [  7] pushsymb 476 ............................ <#blankCDCount>
  [ 10] getparam 1 .............................. <oResult>
  [ 12] pusharglist 1 ........................... <oResult>
  [ 14] objcall 477 ............................. <oResult.getBlankCDCount()>
  [ 17] pusharglistnoret 3 ...................... <aRemoteMixer, #blankCDCount, oResult.getBlankCDCount()>
  [ 19] objcall 249 ............................. aRemoteMixer[#blankCDCount] = oResult.getBlankCDCount()
  [ 21] getlocal 0 .............................. <aRemoteMixer>
  [ 23] pushsymb 478 ............................ <#sessionId>
  [ 26] getparam 1 .............................. <oResult>
  [ 28] pusharglist 1 ........................... <oResult>
  [ 30] objcall 479 ............................. <oResult.getSessionId()>
  [ 33] pusharglistnoret 3 ...................... <aRemoteMixer, #sessionId, oResult.getSessionId()>
  [ 35] objcall 249 ............................. aRemoteMixer[#sessionId] = oResult.getSessionId()
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] setlocal 1 .............................. aMixes = []
  [ 42] getparam 1 .............................. <oResult>
  [ 44] pusharglist 1 ........................... <oResult>
  [ 46] objcall 480 ............................. <oResult.getMixes()>
  [ 49] setlocal 2 .............................. faMixes = oResult.getMixes()
  [ 51] pushzero ................................ <0>
  [ 52] setlocal 3
  [ 54] getlocal 3
  [ 56] getlocal 2 .............................. <faMixes>
  [ 58] getobjprop 240 .......................... <faMixes.length>
  [ 60] pushint8 1 .............................. <1>
  [ 62] sub ..................................... <faMixes.length - 1>
  [ 63] lteq
  [ 64] jmpifz [105] ............................ repeat with i = 0 to faMixes.length - 1
  [ 67] getlocal 2 .............................. <faMixes>
  [ 69] getlocal 3 .............................. <i>
  [ 71] pusharglist 2 ........................... <faMixes, i>
  [ 73] objcall 163 ............................. <faMixes[i]>
  [ 75] setlocal 4 .............................. foMix = faMixes[i]
  [ 77] getparam 0 .............................. <me>
  [ 79] getlocal 4 .............................. <foMix>
  [ 81] pusharglist 2 ........................... <me, foMix>
  [ 83] objcall 413 ............................. <me.createMix(foMix)>
  [ 86] setlocal 5 .............................. aMix = me.createMix(foMix)
  [ 88] getlocal 1 .............................. <aMixes>
  [ 90] getlocal 5 .............................. <aMix>
  [ 92] pusharglistnoret 2 ...................... <aMixes, aMix>
  [ 94] objcall 241 ............................. aMixes.add(aMix)
  [ 96] pushint8 1
  [ 98] getlocal 3
  [100] add
  [101] setlocal 3
  [103] endrepeat [ 54]
  [105] getlocal 0 .............................. <aRemoteMixer>
  [107] pushsymb 481 ............................ <#mixes>
  [110] getlocal 1 .............................. <aMixes>
  [112] pusharglistnoret 3 ...................... <aRemoteMixer, #mixes, aMixes>
  [114] objcall 249 ............................. aRemoteMixer[#mixes] = aMixes
  [116] getlocal 0 .............................. <aRemoteMixer>
  [118] pusharglistnoret 1 ...................... <aRemoteMixer>
  [120] extcall 121 ............................. return aRemoteMixer
  [122] ret
end

on createMix me, foMix
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aMix = [:]
  [  5] getlocal 0 .............................. <aMix>
  [  7] pushsymb 486 ............................ <#mixid>
  [ 10] getparam 1 .............................. <foMix>
  [ 12] pusharglist 1 ........................... <foMix>
  [ 14] objcall 487 ............................. <foMix.getMixId()>
  [ 17] pusharglist 1 ........................... <foMix.getMixId()>
  [ 19] extcall 238 ............................. <integer(foMix.getMixId())>
  [ 21] pusharglistnoret 3 ...................... <aMix, #mixid, integer(foMix.getMixId())>
  [ 23] objcall 249 ............................. aMix[#mixid] = integer(foMix.getMixId())
  [ 25] getlocal 0 .............................. <aMix>
  [ 27] pushsymb 488 ............................ <#mixNumber>
  [ 30] getparam 1 .............................. <foMix>
  [ 32] pusharglist 1 ........................... <foMix>
  [ 34] objcall 489 ............................. <foMix.getMixNumber()>
  [ 37] pusharglist 1 ........................... <foMix.getMixNumber()>
  [ 39] extcall 238 ............................. <integer(foMix.getMixNumber())>
  [ 41] pusharglistnoret 3 ...................... <aMix, #mixNumber, integer(foMix.getMixNumber())>
  [ 43] objcall 249 ............................. aMix[#mixNumber] = integer(foMix.getMixNumber())
  [ 45] getlocal 0 .............................. <aMix>
  [ 47] pushsymb 490 ............................ <#authorScreenName>
  [ 50] getparam 1 .............................. <foMix>
  [ 52] pusharglist 1 ........................... <foMix>
  [ 54] objcall 491 ............................. <foMix.getOwnerScreenName()>
  [ 57] pusharglistnoret 3 ...................... <aMix, #authorScreenName, foMix.getOwnerScreenName()>
  [ 59] objcall 249 ............................. aMix[#authorScreenName] = foMix.getOwnerScreenName()
  [ 61] getlocal 0 .............................. <aMix>
  [ 63] pushsymb 355 ............................ <#name>
  [ 66] getparam 1 .............................. <foMix>
  [ 68] pusharglist 1 ........................... <foMix>
  [ 70] objcall 492 ............................. <foMix.getMixName()>
  [ 73] pusharglistnoret 3 ...................... <aMix, #name, foMix.getMixName()>
  [ 75] objcall 249 ............................. aMix[#name] = foMix.getMixName()
  [ 77] getparam 1 .............................. <foMix>
  [ 79] pusharglist 1 ........................... <foMix>
  [ 81] objcall 493 ............................. <foMix.getSong()>
  [ 84] setlocal 1 .............................. sSong = foMix.getSong()
  [ 86] getlocal 0 .............................. <aMix>
  [ 88] pushsymb 494 ............................ <#song>
  [ 91] getlocal 1 .............................. <sSong>
  [ 93] pusharglistnoret 3 ...................... <aMix, #song, sSong>
  [ 95] objcall 249 ............................. aMix[#song] = sSong
  [ 97] getlocal 0 .............................. <aMix>
  [ 99] pusharglistnoret 1 ...................... <aMix>
  [101] extcall 121 ............................. return aMix
  [103] ret
end

on replaceChar me, sString, sCharToReplace, sReplacementChar
  [  0] pushcons 45 ............................. <EMPTY>
  [  2] setlocal 0 .............................. sNewString = EMPTY
  [  4] getparam 1 .............................. <sString>
  [  6] pushsymb 496 ............................ <#chars>
  [  9] pusharglist 2 ........................... <sString, #chars>
  [ 11] objcall 162 ............................. <sString.chars.count>
  [ 13] setlocal 1 .............................. iCharCount = sString.chars.count
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 2
  [ 19] getlocal 2
  [ 21] getlocal 1 .............................. <iCharCount>
  [ 23] lteq
  [ 24] jmpifz [ 76] ............................ repeat with i = 1 to iCharCount
  [ 27] getparam 1 .............................. <sString>
  [ 29] pushsymb 497 ............................ <#char>
  [ 32] getlocal 2 .............................. <i>
  [ 34] pusharglist 3 ........................... <sString, #char, i>
  [ 36] objcall 375 ............................. <sString.char[i]>
  [ 39] setlocal 3 .............................. sChar = sString.char[i]
  [ 41] getlocal 3 .............................. <sChar>
  [ 43] getparam 2 .............................. <sCharToReplace>
  [ 45] eq ...................................... <sChar = sCharToReplace>
  [ 46] jmpifz [ 56] ............................ if sChar = sCharToReplace then / else
  [ 49] getparam 3 .............................. <sReplacementChar>
  [ 51] setlocal 4 .............................. sNewChar = sReplacementChar
  [ 53] jmp [ 60]
  [ 56] getlocal 3 .............................. <sChar>
  [ 58] setlocal 4 .............................. sNewChar = sChar
  [ 60] getlocal 0 .............................. <sNewString>
  [ 62] getlocal 4 .............................. <sNewChar>
  [ 64] joinstr ................................. <sNewString & sNewChar>
  [ 65] setlocal 0 .............................. sNewString = sNewString & sNewChar
  [ 67] pushint8 1
  [ 69] getlocal 2
  [ 71] add
  [ 72] setlocal 2
  [ 74] endrepeat [ 19]
  [ 76] getlocal 0 .............................. <sNewString>
  [ 78] pusharglistnoret 1 ...................... <sNewString>
  [ 80] extcall 121 ............................. return sNewString
  [ 82] ret
end

on getTestRemoteMixer me, sScreenName
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aRemoteMixer = [:]
  [  5] getlocal 0 .............................. <aRemoteMixer>
  [  7] pushsymb 476 ............................ <#blankCDCount>
  [ 10] pushint8 30 ............................. <30>
  [ 12] pusharglistnoret 3 ...................... <aRemoteMixer, #blankCDCount, 30>
  [ 14] objcall 249 ............................. aRemoteMixer[#blankCDCount] = 30
  [ 16] pusharglist 0 ........................... <[]>
  [ 18] pushlist ................................ <[]>
  [ 19] setlocal 1 .............................. aMixes = []
  [ 21] pushint8 1 .............................. <1>
  [ 23] setlocal 2
  [ 25] getlocal 2
  [ 27] pushint8 2 .............................. <2>
  [ 29] lteq
  [ 30] jmpifz [ 59] ............................ repeat with i = 1 to 2
  [ 33] getlocal 1 .............................. <aMixes>
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <sScreenName>
  [ 39] getlocal 2 .............................. <i>
  [ 41] pusharglist 3 ........................... <me, sScreenName, i>
  [ 43] objcall 416 ............................. <me.createTestMix(sScreenName, i)>
  [ 46] pusharglistnoret 2 ...................... <aMixes, me.createTestMix(sScreenName, i)>
  [ 48] objcall 241 ............................. aMixes.add(me.createTestMix(sScreenName, i))
  [ 50] pushint8 1
  [ 52] getlocal 2
  [ 54] add
  [ 55] setlocal 2
  [ 57] endrepeat [ 25]
  [ 59] getlocal 0 .............................. <aRemoteMixer>
  [ 61] pushsymb 481 ............................ <#mixes>
  [ 64] getlocal 1 .............................. <aMixes>
  [ 66] pusharglistnoret 3 ...................... <aRemoteMixer, #mixes, aMixes>
  [ 68] objcall 249 ............................. aRemoteMixer[#mixes] = aMixes
  [ 70] getlocal 0 .............................. <aRemoteMixer>
  [ 72] pusharglistnoret 1 ...................... <aRemoteMixer>
  [ 74] extcall 121 ............................. return aRemoteMixer
  [ 76] ret
end

on createTestMix me, sScreenName, iMixNumber
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aTestMix = [:]
  [  5] getlocal 0 .............................. <aTestMix>
  [  7] pushsymb 486 ............................ <#mixid>
  [ 10] pushint16 1000 .......................... <1000>
  [ 13] pusharglist 1 ........................... <1000>
  [ 15] extcall 160 ............................. <random(1000)>
  [ 17] pusharglistnoret 3 ...................... <aTestMix, #mixid, random(1000)>
  [ 19] objcall 249 ............................. aTestMix[#mixid] = random(1000)
  [ 21] getlocal 0 .............................. <aTestMix>
  [ 23] pushsymb 488 ............................ <#mixNumber>
  [ 26] getparam 2 .............................. <iMixNumber>
  [ 28] pusharglistnoret 3 ...................... <aTestMix, #mixNumber, iMixNumber>
  [ 30] objcall 249 ............................. aTestMix[#mixNumber] = iMixNumber
  [ 32] getlocal 0 .............................. <aTestMix>
  [ 34] pushsymb 490 ............................ <#authorScreenName>
  [ 37] getparam 1 .............................. <sScreenName>
  [ 39] pusharglistnoret 3 ...................... <aTestMix, #authorScreenName, sScreenName>
  [ 41] objcall 249 ............................. aTestMix[#authorScreenName] = sScreenName
  [ 43] getlocal 0 .............................. <aTestMix>
  [ 45] pushsymb 355 ............................ <#name>
  [ 48] pushcons 107 ............................ <"Test Mix: ">
  [ 50] getparam 1 .............................. <sScreenName>
  [ 52] joinstr ................................. <"Test Mix: " & sScreenName>
  [ 53] pushcons 108 ............................ <": ">
  [ 55] joinstr ................................. <"Test Mix: " & sScreenName & ": ">
  [ 56] getparam 2 .............................. <iMixNumber>
  [ 58] joinstr ................................. <"Test Mix: " & sScreenName & ": " & iMixNumber>
  [ 59] pusharglistnoret 3 ...................... <aTestMix, #name, "Test Mix: " & sScreenName & ": " & iMixNumber>
  [ 61] objcall 249 ............................. aTestMix[#name] = "Test Mix: " & sScreenName & ": " & iMixNumber
  [ 63] getlocal 0 .............................. <aTestMix>
  [ 65] pushsymb 494 ............................ <#song>
  [ 68] pushcons 109 ............................ <"jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^">
  [ 70] pusharglistnoret 3 ...................... <aTestMix, #song, "jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^">
  [ 72] objcall 249 ............................. aTestMix[#song] = "jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^"
  [ 74] getlocal 0 .............................. <aTestMix>
  [ 76] pusharglistnoret 1 ...................... <aTestMix>
  [ 78] extcall 121 ............................. return aTestMix
  [ 80] ret
end

on onStatus me, oCaller, oXml
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 110 ............................ <"onStatus()">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "onStatus()", 1>
  [  8] objcall 4 ............................... me.debug("onStatus()", 1)
  [ 10] ret
end

on getStudiosFromResult me, oResult
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aStudioData = []
  [  5] getparam 1 .............................. <oResult>
  [  7] getobjprop 240 .......................... <oResult.length>
  [  9] setlocal 1 .............................. iLength = oResult.length
  [ 11] pushzero ................................ <0>
  [ 12] setlocal 2
  [ 14] getlocal 2
  [ 16] getlocal 1 .............................. <iLength>
  [ 18] pushint8 1 .............................. <1>
  [ 20] sub ..................................... <iLength - 1>
  [ 21] lteq
  [ 22] jmpifz [ 63] ............................ repeat with i = 0 to iLength - 1
  [ 25] getparam 1 .............................. <oResult>
  [ 27] getlocal 2 .............................. <i>
  [ 29] pusharglist 2 ........................... <oResult, i>
  [ 31] objcall 163 ............................. <oResult[i]>
  [ 33] setlocal 3 .............................. oStudio = oResult[i]
  [ 35] getparam 0 .............................. <me>
  [ 37] getlocal 3 .............................. <oStudio>
  [ 39] pusharglist 2 ........................... <me, oStudio>
  [ 41] objcall 418 ............................. <me.getStudioFromresult(oStudio)>
  [ 44] setlocal 4 .............................. aStudio = me.getStudioFromresult(oStudio)
  [ 46] getlocal 0 .............................. <aStudioData>
  [ 48] getlocal 4 .............................. <aStudio>
  [ 50] pusharglistnoret 2 ...................... <aStudioData, aStudio>
  [ 52] objcall 241 ............................. aStudioData.add(aStudio)
  [ 54] pushint8 1
  [ 56] getlocal 2
  [ 58] add
  [ 59] setlocal 2
  [ 61] endrepeat [ 14]
  [ 63] getlocal 0 .............................. <aStudioData>
  [ 65] pusharglistnoret 1 ...................... <aStudioData>
  [ 67] extcall 121 ............................. return aStudioData
  [ 69] ret
end

on getStudioFromresult me, oResult
  [  0] getparam 1 .............................. <oResult>
  [  2] pusharglist 1 ........................... <oResult>
  [  4] objcall 376 ............................. <oResult.getStudioID()>
  [  7] setlocal 0 .............................. sStudioID = oResult.getStudioID()
  [  9] getparam 1 .............................. <oResult>
  [ 11] pusharglist 1 ........................... <oResult>
  [ 13] objcall 472 ............................. <oResult.getName()>
  [ 16] setlocal 1 .............................. sName = oResult.getName()
  [ 18] getparam 1 .............................. <oResult>
  [ 20] pusharglist 1 ........................... <oResult>
  [ 22] objcall 473 ............................. <oResult.getDescription()>
  [ 25] setlocal 2 .............................. sDescription = oResult.getDescription()
  [ 27] getparam 1 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 466 ............................. <oResult.getCurrentOccupancy()>
  [ 34] pusharglist 1 ........................... <oResult.getCurrentOccupancy()>
  [ 36] extcall 238 ............................. <integer(oResult.getCurrentOccupancy())>
  [ 38] setlocal 3 .............................. iUserCount = integer(oResult.getCurrentOccupancy())
  [ 40] getparam 1 .............................. <oResult>
  [ 42] pusharglist 1 ........................... <oResult>
  [ 44] objcall 467 ............................. <oResult.getMaxOccupancy()>
  [ 47] pusharglist 1 ........................... <oResult.getMaxOccupancy()>
  [ 49] extcall 238 ............................. <integer(oResult.getMaxOccupancy())>
  [ 51] setlocal 4 .............................. iCapacity = integer(oResult.getMaxOccupancy())
  [ 53] getparam 1 .............................. <oResult>
  [ 55] pusharglist 1 ........................... <oResult>
  [ 57] objcall 468 ............................. <oResult.getLocation()>
  [ 60] pusharglist 1 ........................... <oResult.getLocation()>
  [ 62] extcall 238 ............................. <integer(oResult.getLocation())>
  [ 64] setlocal 5 .............................. iLocation = integer(oResult.getLocation())
  [ 66] getparam 1 .............................. <oResult>
  [ 68] pusharglist 1 ........................... <oResult>
  [ 70] objcall 506 ............................. <oResult.getLayout()>
  [ 73] pusharglist 1 ........................... <oResult.getLayout()>
  [ 75] extcall 238 ............................. <integer(oResult.getLayout())>
  [ 77] setlocal 6 .............................. iLayout = integer(oResult.getLayout())
  [ 79] getparam 1 .............................. <oResult>
  [ 81] pusharglist 1 ........................... <oResult>
  [ 83] objcall 507 ............................. <oResult.getOwnerName()>
  [ 86] setlocal 7 .............................. sOwner = oResult.getOwnerName()
  [ 88] pusharglist 0 ........................... <[:]>
  [ 90] pushproplist ............................ <[:]>
  [ 91] setlocal 8 .............................. aStudio = [:]
  [ 93] getlocal 8 .............................. <aStudio>
  [ 95] pushsymb 354 ............................ <#studioId>
  [ 98] getlocal 0 .............................. <sStudioID>
  [100] pusharglistnoret 3 ...................... <aStudio, #studioId, sStudioID>
  [102] objcall 249 ............................. aStudio[#studioId] = sStudioID
  [104] getlocal 8 .............................. <aStudio>
  [106] pushsymb 355 ............................ <#name>
  [109] getlocal 1 .............................. <sName>
  [111] pusharglistnoret 3 ...................... <aStudio, #name, sName>
  [113] objcall 249 ............................. aStudio[#name] = sName
  [115] getlocal 8 .............................. <aStudio>
  [117] pushsymb 356 ............................ <#description>
  [120] getlocal 2 .............................. <sDescription>
  [122] pusharglistnoret 3 ...................... <aStudio, #description, sDescription>
  [124] objcall 249 ............................. aStudio[#description] = sDescription
  [126] getlocal 8 .............................. <aStudio>
  [128] pushsymb 357 ............................ <#userCount>
  [131] getlocal 3 .............................. <iUserCount>
  [133] pusharglistnoret 3 ...................... <aStudio, #userCount, iUserCount>
  [135] objcall 249 ............................. aStudio[#userCount] = iUserCount
  [137] getlocal 8 .............................. <aStudio>
  [139] pushsymb 358 ............................ <#capacity>
  [142] getlocal 4 .............................. <iCapacity>
  [144] pusharglistnoret 3 ...................... <aStudio, #capacity, iCapacity>
  [146] objcall 249 ............................. aStudio[#capacity] = iCapacity
  [148] getlocal 8 .............................. <aStudio>
  [150] pushsymb 359 ............................ <#location>
  [153] getlocal 5 .............................. <iLocation>
  [155] pusharglistnoret 3 ...................... <aStudio, #location, iLocation>
  [157] objcall 249 ............................. aStudio[#location] = iLocation
  [159] getlocal 8 .............................. <aStudio>
  [161] pushsymb 360 ............................ <#layout>
  [164] getlocal 6 .............................. <iLayout>
  [166] pusharglistnoret 3 ...................... <aStudio, #layout, iLayout>
  [168] objcall 249 ............................. aStudio[#layout] = iLayout
  [170] getlocal 8 .............................. <aStudio>
  [172] pushsymb 361 ............................ <#owner>
  [175] getlocal 7 .............................. <sOwner>
  [177] pusharglistnoret 3 ...................... <aStudio, #owner, sOwner>
  [179] objcall 249 ............................. aStudio[#owner] = sOwner
  [181] getlocal 8 .............................. <aStudio>
  [183] pusharglistnoret 1 ...................... <aStudio>
  [185] extcall 121 ............................. return aStudio
  [187] ret
end

on getStudioLocation me, sStudioID
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 324 ............................. <aPrivateStudioData>
  [  9] getobjprop 162 .......................... <aPrivateStudioData.count>
  [ 11] lteq
  [ 12] jmpifz [ 67] ............................ repeat with i = 1 to aPrivateStudioData.count
  [ 15] getprop 324 ............................. <aPrivateStudioData>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 22] objcall 163 ............................. <aPrivateStudioData[i]>
  [ 24] setlocal 1 .............................. aStudioData = aPrivateStudioData[i]
  [ 26] getlocal 1 .............................. <aStudioData>
  [ 28] pushsymb 354 ............................ <#studioId>
  [ 31] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 33] objcall 163 ............................. <aStudioData[#studioId]>
  [ 35] getparam 1 .............................. <sStudioID>
  [ 37] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [ 38] jmpifz [ 58] ............................ if aStudioData[#studioId] = sStudioID then
  [ 41] getlocal 1 .............................. <aStudioData>
  [ 43] pushsymb 359 ............................ <#location>
  [ 46] pusharglist 2 ........................... <aStudioData, #location>
  [ 48] objcall 163 ............................. <aStudioData[#location]>
  [ 50] setlocal 2 .............................. iLocation = aStudioData[#location]
  [ 52] getlocal 2 .............................. <iLocation>
  [ 54] pusharglistnoret 1 ...................... <iLocation>
  [ 56] extcall 121 ............................. return iLocation
  [ 58] pushint8 1
  [ 60] getlocal 0
  [ 62] add
  [ 63] setlocal 0
  [ 65] endrepeat [  4]
  [ 67] pushint8 1 .............................. <1>
  [ 69] setlocal 0
  [ 71] getlocal 0
  [ 73] getglobal 346 ........................... <oPublicstudioData>
  [ 76] pushsymb 347 ............................ <#aStudioData>
  [ 79] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 81] objcall 162 ............................. <oPublicstudioData.aStudioData.count>
  [ 83] lteq
  [ 84] jmpifz [143] ............................ repeat with i = 1 to oPublicstudioData.aStudioData.count
  [ 87] getglobal 346 ........................... <oPublicstudioData>
  [ 90] pushsymb 347 ............................ <#aStudioData>
  [ 93] getlocal 0 .............................. <i>
  [ 95] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 97] objcall 375 ............................. <oPublicstudioData.aStudioData[i]>
  [100] setlocal 1 .............................. aStudioData = oPublicstudioData.aStudioData[i]
  [102] getlocal 1 .............................. <aStudioData>
  [104] pushsymb 354 ............................ <#studioId>
  [107] pusharglist 2 ........................... <aStudioData, #studioId>
  [109] objcall 163 ............................. <aStudioData[#studioId]>
  [111] getparam 1 .............................. <sStudioID>
  [113] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [114] jmpifz [134] ............................ if aStudioData[#studioId] = sStudioID then
  [117] getlocal 1 .............................. <aStudioData>
  [119] pushsymb 359 ............................ <#location>
  [122] pusharglist 2 ........................... <aStudioData, #location>
  [124] objcall 163 ............................. <aStudioData[#location]>
  [126] setlocal 2 .............................. iLocation = aStudioData[#location]
  [128] getlocal 2 .............................. <iLocation>
  [130] pusharglistnoret 1 ...................... <iLocation>
  [132] extcall 121 ............................. return iLocation
  [134] pushint8 1
  [136] getlocal 0
  [138] add
  [139] setlocal 0
  [141] endrepeat [ 71]
  [143] ret
end

on getStudioLayout me, sStudioID, iLocation
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 324 ............................. <aPrivateStudioData>
  [  9] getobjprop 162 .......................... <aPrivateStudioData.count>
  [ 11] lteq
  [ 12] jmpifz [ 67] ............................ repeat with i = 1 to aPrivateStudioData.count
  [ 15] getprop 324 ............................. <aPrivateStudioData>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 22] objcall 163 ............................. <aPrivateStudioData[i]>
  [ 24] setlocal 1 .............................. aStudioData = aPrivateStudioData[i]
  [ 26] getlocal 1 .............................. <aStudioData>
  [ 28] pushsymb 354 ............................ <#studioId>
  [ 31] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 33] objcall 163 ............................. <aStudioData[#studioId]>
  [ 35] getparam 1 .............................. <sStudioID>
  [ 37] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [ 38] jmpifz [ 58] ............................ if aStudioData[#studioId] = sStudioID then
  [ 41] getlocal 1 .............................. <aStudioData>
  [ 43] pushsymb 360 ............................ <#layout>
  [ 46] pusharglist 2 ........................... <aStudioData, #layout>
  [ 48] objcall 163 ............................. <aStudioData[#layout]>
  [ 50] setlocal 2 .............................. iLayout = aStudioData[#layout]
  [ 52] getlocal 2 .............................. <iLayout>
  [ 54] pusharglistnoret 1 ...................... <iLayout>
  [ 56] extcall 121 ............................. return iLayout
  [ 58] pushint8 1
  [ 60] getlocal 0
  [ 62] add
  [ 63] setlocal 0
  [ 65] endrepeat [  4]
  [ 67] pushint8 1 .............................. <1>
  [ 69] setlocal 0
  [ 71] getlocal 0
  [ 73] getglobal 346 ........................... <oPublicstudioData>
  [ 76] pushsymb 347 ............................ <#aStudioData>
  [ 79] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 81] objcall 162 ............................. <oPublicstudioData.aStudioData.count>
  [ 83] lteq
  [ 84] jmpifz [143] ............................ repeat with i = 1 to oPublicstudioData.aStudioData.count
  [ 87] getglobal 346 ........................... <oPublicstudioData>
  [ 90] pushsymb 347 ............................ <#aStudioData>
  [ 93] getlocal 0 .............................. <i>
  [ 95] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 97] objcall 375 ............................. <oPublicstudioData.aStudioData[i]>
  [100] setlocal 1 .............................. aStudioData = oPublicstudioData.aStudioData[i]
  [102] getlocal 1 .............................. <aStudioData>
  [104] pushsymb 354 ............................ <#studioId>
  [107] pusharglist 2 ........................... <aStudioData, #studioId>
  [109] objcall 163 ............................. <aStudioData[#studioId]>
  [111] getparam 1 .............................. <sStudioID>
  [113] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [114] jmpifz [134] ............................ if aStudioData[#studioId] = sStudioID then
  [117] getlocal 1 .............................. <aStudioData>
  [119] pushsymb 360 ............................ <#layout>
  [122] pusharglist 2 ........................... <aStudioData, #layout>
  [124] objcall 163 ............................. <aStudioData[#layout]>
  [126] setlocal 2 .............................. iLayout = aStudioData[#layout]
  [128] getlocal 2 .............................. <iLayout>
  [130] pusharglistnoret 1 ...................... <iLayout>
  [132] extcall 121 ............................. return iLayout
  [134] pushint8 1
  [136] getlocal 0
  [138] add
  [139] setlocal 0
  [141] endrepeat [ 71]
  [143] ret
end

on getStudioName me, sStudioID
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 324 ............................. <aPrivateStudioData>
  [  9] getobjprop 162 .......................... <aPrivateStudioData.count>
  [ 11] lteq
  [ 12] jmpifz [ 63] ............................ repeat with i = 1 to aPrivateStudioData.count
  [ 15] getprop 324 ............................. <aPrivateStudioData>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 22] objcall 163 ............................. <aPrivateStudioData[i]>
  [ 24] setlocal 1 .............................. aStudioData = aPrivateStudioData[i]
  [ 26] getlocal 1 .............................. <aStudioData>
  [ 28] pushsymb 354 ............................ <#studioId>
  [ 31] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 33] objcall 163 ............................. <aStudioData[#studioId]>
  [ 35] getparam 1 .............................. <sStudioID>
  [ 37] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [ 38] jmpifz [ 54] ............................ if aStudioData[#studioId] = sStudioID then
  [ 41] getlocal 1 .............................. <aStudioData>
  [ 43] pushsymb 355 ............................ <#name>
  [ 46] pusharglist 2 ........................... <aStudioData, #name>
  [ 48] objcall 163 ............................. <aStudioData[#name]>
  [ 50] pusharglistnoret 1 ...................... <aStudioData[#name]>
  [ 52] extcall 121 ............................. return aStudioData[#name]
  [ 54] pushint8 1
  [ 56] getlocal 0
  [ 58] add
  [ 59] setlocal 0
  [ 61] endrepeat [  4]
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 0
  [ 67] getlocal 0
  [ 69] getglobal 346 ........................... <oPublicstudioData>
  [ 72] pushsymb 347 ............................ <#aStudioData>
  [ 75] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 77] objcall 162 ............................. <oPublicstudioData.aStudioData.count>
  [ 79] lteq
  [ 80] jmpifz [135] ............................ repeat with i = 1 to oPublicstudioData.aStudioData.count
  [ 83] getglobal 346 ........................... <oPublicstudioData>
  [ 86] pushsymb 347 ............................ <#aStudioData>
  [ 89] getlocal 0 .............................. <i>
  [ 91] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 93] objcall 375 ............................. <oPublicstudioData.aStudioData[i]>
  [ 96] setlocal 1 .............................. aStudioData = oPublicstudioData.aStudioData[i]
  [ 98] getlocal 1 .............................. <aStudioData>
  [100] pushsymb 354 ............................ <#studioId>
  [103] pusharglist 2 ........................... <aStudioData, #studioId>
  [105] objcall 163 ............................. <aStudioData[#studioId]>
  [107] getparam 1 .............................. <sStudioID>
  [109] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [110] jmpifz [126] ............................ if aStudioData[#studioId] = sStudioID then
  [113] getlocal 1 .............................. <aStudioData>
  [115] pushsymb 355 ............................ <#name>
  [118] pusharglist 2 ........................... <aStudioData, #name>
  [120] objcall 163 ............................. <aStudioData[#name]>
  [122] pusharglistnoret 1 ...................... <aStudioData[#name]>
  [124] extcall 121 ............................. return aStudioData[#name]
  [126] pushint8 1
  [128] getlocal 0
  [130] add
  [131] setlocal 0
  [133] endrepeat [ 67]
  [135] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 121 ............................. return sprite(me.spriteNum)
  [ 12] ret
end

on getTestStudios me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aStudioData = []
  [  5] getlocal 0 .............................. <aStudioData>
  [  7] pushsymb 354 ............................ <#studioId>
  [ 10] pushcons 111 ............................ <"Aslan$1">
  [ 12] pushsymb 355 ............................ <#name>
  [ 15] pushcons 112 ............................ <"1">
  [ 17] pushsymb 356 ............................ <#description>
  [ 20] pushcons 113 ............................ <"test">
  [ 22] pushsymb 357 ............................ <#userCount>
  [ 25] pushzero ................................ <0>
  [ 26] pushsymb 358 ............................ <#capacity>
  [ 29] pushint8 25 ............................. <25>
  [ 31] pushsymb 359 ............................ <#location>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pushsymb 360 ............................ <#layout>
  [ 39] pushint8 1 .............................. <1>
  [ 41] pushsymb 362 ............................ <#server>
  [ 44] pushcons 114 ............................ <"sfdev1.cokemusi">
  [ 46] pushsymb 361 ............................ <#owner>
  [ 49] pushcons 115 ............................ <"aslan">
  [ 51] pusharglist 18 .......................... <[#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 53] pushproplist ............................ <[#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 54] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 56] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [ 58] getlocal 0 .............................. <aStudioData>
  [ 60] pushsymb 354 ............................ <#studioId>
  [ 63] pushcons 116 ............................ <"Aslan$2">
  [ 65] pushsymb 355 ............................ <#name>
  [ 68] pushcons 117 ............................ <"2">
  [ 70] pushsymb 356 ............................ <#description>
  [ 73] pushcons 118 ............................ <"test description">
  [ 75] pushsymb 357 ............................ <#userCount>
  [ 78] pushzero ................................ <0>
  [ 79] pushsymb 358 ............................ <#capacity>
  [ 82] pushint8 25 ............................. <25>
  [ 84] pushsymb 359 ............................ <#location>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pushsymb 360 ............................ <#layout>
  [ 92] pushint8 2 .............................. <2>
  [ 94] pushsymb 362 ............................ <#server>
  [ 97] pushcons 114 ............................ <"sfdev1.cokemusi">
  [ 99] pushsymb 361 ............................ <#owner>
  [102] pushcons 115 ............................ <"aslan">
  [104] pusharglist 18 .......................... <[#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [106] pushproplist ............................ <[#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [107] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [109] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [111] getlocal 0 .............................. <aStudioData>
  [113] pushsymb 354 ............................ <#studioId>
  [116] pushcons 119 ............................ <"Aslan$3">
  [118] pushsymb 355 ............................ <#name>
  [121] pushcons 120 ............................ <"3">
  [123] pushsymb 356 ............................ <#description>
  [126] pushcons 121 ............................ <"blah">
  [128] pushsymb 357 ............................ <#userCount>
  [131] pushzero ................................ <0>
  [132] pushsymb 358 ............................ <#capacity>
  [135] pushint8 25 ............................. <25>
  [137] pushsymb 359 ............................ <#location>
  [140] pushint8 1 .............................. <1>
  [142] pushsymb 360 ............................ <#layout>
  [145] pushint8 3 .............................. <3>
  [147] pushsymb 362 ............................ <#server>
  [150] pushcons 114 ............................ <"sfdev1.cokemusi">
  [152] pushsymb 361 ............................ <#owner>
  [155] pushcons 115 ............................ <"aslan">
  [157] pusharglist 18 .......................... <[#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [159] pushproplist ............................ <[#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [160] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [162] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [164] getlocal 0 .............................. <aStudioData>
  [166] pushsymb 354 ............................ <#studioId>
  [169] pushcons 122 ............................ <"Aslan$4">
  [171] pushsymb 355 ............................ <#name>
  [174] pushcons 123 ............................ <"4">
  [176] pushsymb 356 ............................ <#description>
  [179] pusharglist 0 ........................... <>
  [181] extcall 91 .............................. <VOID>
  [183] pushsymb 357 ............................ <#userCount>
  [186] pushzero ................................ <0>
  [187] pushsymb 358 ............................ <#capacity>
  [190] pushint8 25 ............................. <25>
  [192] pushsymb 359 ............................ <#location>
  [195] pushint8 1 .............................. <1>
  [197] pushsymb 360 ............................ <#layout>
  [200] pushint8 4 .............................. <4>
  [202] pushsymb 362 ............................ <#server>
  [205] pushcons 114 ............................ <"sfdev1.cokemusi">
  [207] pushsymb 361 ............................ <#owner>
  [210] pushcons 115 ............................ <"aslan">
  [212] pusharglist 18 .......................... <[#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [214] pushproplist ............................ <[#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [215] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [217] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [219] getlocal 0 .............................. <aStudioData>
  [221] pushsymb 354 ............................ <#studioId>
  [224] pushcons 124 ............................ <"Aslan$5">
  [226] pushsymb 355 ............................ <#name>
  [229] pushcons 125 ............................ <"5">
  [231] pushsymb 356 ............................ <#description>
  [234] pusharglist 0 ........................... <>
  [236] extcall 91 .............................. <VOID>
  [238] pushsymb 357 ............................ <#userCount>
  [241] pushzero ................................ <0>
  [242] pushsymb 358 ............................ <#capacity>
  [245] pushint8 25 ............................. <25>
  [247] pushsymb 359 ............................ <#location>
  [250] pushint8 1 .............................. <1>
  [252] pushsymb 360 ............................ <#layout>
  [255] pushint8 4 .............................. <4>
  [257] pushsymb 362 ............................ <#server>
  [260] pushcons 114 ............................ <"sfdev1.cokemusi">
  [262] pushsymb 361 ............................ <#owner>
  [265] pushcons 115 ............................ <"aslan">
  [267] pusharglist 18 .......................... <[#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [269] pushproplist ............................ <[#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [270] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [272] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [274] getlocal 0 .............................. <aStudioData>
  [276] pushsymb 354 ............................ <#studioId>
  [279] pushcons 126 ............................ <"Aslan$6">
  [281] pushsymb 355 ............................ <#name>
  [284] pushcons 127 ............................ <"6">
  [286] pushsymb 356 ............................ <#description>
  [289] pusharglist 0 ........................... <>
  [291] extcall 91 .............................. <VOID>
  [293] pushsymb 357 ............................ <#userCount>
  [296] pushzero ................................ <0>
  [297] pushsymb 358 ............................ <#capacity>
  [300] pushint8 25 ............................. <25>
  [302] pushsymb 359 ............................ <#location>
  [305] pushint8 1 .............................. <1>
  [307] pushsymb 360 ............................ <#layout>
  [310] pushint8 4 .............................. <4>
  [312] pushsymb 362 ............................ <#server>
  [315] pushcons 114 ............................ <"sfdev1.cokemusi">
  [317] pushsymb 361 ............................ <#owner>
  [320] pushcons 115 ............................ <"aslan">
  [322] pusharglist 18 .......................... <[#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [324] pushproplist ............................ <[#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [325] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [327] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [329] getlocal 0 .............................. <aStudioData>
  [331] pushsymb 354 ............................ <#studioId>
  [334] pushcons 128 ............................ <"Aslan$7">
  [336] pushsymb 355 ............................ <#name>
  [339] pushcons 129 ............................ <"7">
  [341] pushsymb 356 ............................ <#description>
  [344] pusharglist 0 ........................... <>
  [346] extcall 91 .............................. <VOID>
  [348] pushsymb 357 ............................ <#userCount>
  [351] pushzero ................................ <0>
  [352] pushsymb 358 ............................ <#capacity>
  [355] pushint8 25 ............................. <25>
  [357] pushsymb 359 ............................ <#location>
  [360] pushint8 1 .............................. <1>
  [362] pushsymb 360 ............................ <#layout>
  [365] pushint8 4 .............................. <4>
  [367] pushsymb 362 ............................ <#server>
  [370] pushcons 114 ............................ <"sfdev1.cokemusi">
  [372] pushsymb 361 ............................ <#owner>
  [375] pushcons 115 ............................ <"aslan">
  [377] pusharglist 18 .......................... <[#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [379] pushproplist ............................ <[#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [380] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [382] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [384] getlocal 0 .............................. <aStudioData>
  [386] pushsymb 354 ............................ <#studioId>
  [389] pushcons 130 ............................ <"Aslan$8">
  [391] pushsymb 355 ............................ <#name>
  [394] pushcons 131 ............................ <"8">
  [396] pushsymb 356 ............................ <#description>
  [399] pusharglist 0 ........................... <>
  [401] extcall 91 .............................. <VOID>
  [403] pushsymb 357 ............................ <#userCount>
  [406] pushzero ................................ <0>
  [407] pushsymb 358 ............................ <#capacity>
  [410] pushint8 25 ............................. <25>
  [412] pushsymb 359 ............................ <#location>
  [415] pushint8 1 .............................. <1>
  [417] pushsymb 360 ............................ <#layout>
  [420] pushint8 4 .............................. <4>
  [422] pushsymb 362 ............................ <#server>
  [425] pushcons 114 ............................ <"sfdev1.cokemusi">
  [427] pushsymb 361 ............................ <#owner>
  [430] pushcons 115 ............................ <"aslan">
  [432] pusharglist 18 .......................... <[#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [434] pushproplist ............................ <[#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [435] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [437] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [439] getlocal 0 .............................. <aStudioData>
  [441] pushsymb 354 ............................ <#studioId>
  [444] pushcons 132 ............................ <"Aslan$9">
  [446] pushsymb 355 ............................ <#name>
  [449] pushcons 133 ............................ <"9">
  [451] pushsymb 356 ............................ <#description>
  [454] pusharglist 0 ........................... <>
  [456] extcall 91 .............................. <VOID>
  [458] pushsymb 357 ............................ <#userCount>
  [461] pushzero ................................ <0>
  [462] pushsymb 358 ............................ <#capacity>
  [465] pushint8 25 ............................. <25>
  [467] pushsymb 359 ............................ <#location>
  [470] pushint8 1 .............................. <1>
  [472] pushsymb 360 ............................ <#layout>
  [475] pushint8 4 .............................. <4>
  [477] pushsymb 362 ............................ <#server>
  [480] pushcons 114 ............................ <"sfdev1.cokemusi">
  [482] pushsymb 361 ............................ <#owner>
  [485] pushcons 115 ............................ <"aslan">
  [487] pusharglist 18 .......................... <[#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [489] pushproplist ............................ <[#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [490] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [492] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [494] getlocal 0 .............................. <aStudioData>
  [496] pushsymb 354 ............................ <#studioId>
  [499] pushcons 134 ............................ <"Aslan$10">
  [501] pushsymb 355 ............................ <#name>
  [504] pushcons 135 ............................ <"10">
  [506] pushsymb 356 ............................ <#description>
  [509] pusharglist 0 ........................... <>
  [511] extcall 91 .............................. <VOID>
  [513] pushsymb 357 ............................ <#userCount>
  [516] pushzero ................................ <0>
  [517] pushsymb 358 ............................ <#capacity>
  [520] pushint8 25 ............................. <25>
  [522] pushsymb 359 ............................ <#location>
  [525] pushint8 1 .............................. <1>
  [527] pushsymb 360 ............................ <#layout>
  [530] pushint8 4 .............................. <4>
  [532] pushsymb 362 ............................ <#server>
  [535] pushcons 114 ............................ <"sfdev1.cokemusi">
  [537] pushsymb 361 ............................ <#owner>
  [540] pushcons 115 ............................ <"aslan">
  [542] pusharglist 18 .......................... <[#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [544] pushproplist ............................ <[#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [545] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [547] objcall 241 ............................. aStudioData.add([#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [549] getlocal 0 .............................. <aStudioData>
  [551] pushsymb 354 ............................ <#studioId>
  [554] pushcons 136 ............................ <"freeble$1">
  [556] pushsymb 355 ............................ <#name>
  [559] pushcons 137 ............................ <"Studio E">
  [561] pushsymb 356 ............................ <#description>
  [564] pushcons 138 ............................ <"crib">
  [566] pushsymb 357 ............................ <#userCount>
  [569] pushzero ................................ <0>
  [570] pushsymb 358 ............................ <#capacity>
  [573] pushint8 25 ............................. <25>
  [575] pushsymb 359 ............................ <#location>
  [578] pushint8 1 .............................. <1>
  [580] pushsymb 360 ............................ <#layout>
  [583] pushint8 1 .............................. <1>
  [585] pushsymb 362 ............................ <#server>
  [588] pushcons 114 ............................ <"sfdev1.cokemusi">
  [590] pushsymb 361 ............................ <#owner>
  [593] pushcons 139 ............................ <"freeble">
  [595] pusharglist 18 .......................... <[#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [597] pushproplist ............................ <[#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [598] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [600] objcall 241 ............................. aStudioData.add([#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [602] getlocal 0 .............................. <aStudioData>
  [604] pushsymb 354 ............................ <#studioId>
  [607] pushcons 140 ............................ <"freeble$2">
  [609] pushsymb 355 ............................ <#name>
  [612] pushcons 141 ............................ <"Studio F">
  [614] pushsymb 356 ............................ <#description>
  [617] pushcons 142 ............................ <"basement tapes">
  [619] pushsymb 357 ............................ <#userCount>
  [622] pushzero ................................ <0>
  [623] pushsymb 358 ............................ <#capacity>
  [626] pushint8 25 ............................. <25>
  [628] pushsymb 359 ............................ <#location>
  [631] pushint8 2 .............................. <2>
  [633] pushsymb 360 ............................ <#layout>
  [636] pushint8 2 .............................. <2>
  [638] pushsymb 362 ............................ <#server>
  [641] pushcons 114 ............................ <"sfdev1.cokemusi">
  [643] pushsymb 361 ............................ <#owner>
  [646] pushcons 139 ............................ <"freeble">
  [648] pusharglist 18 .......................... <[#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [650] pushproplist ............................ <[#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [651] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [653] objcall 241 ............................. aStudioData.add([#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [655] getlocal 0 .............................. <aStudioData>
  [657] pushsymb 354 ............................ <#studioId>
  [660] pushcons 143 ............................ <"freeble$3">
  [662] pushsymb 355 ............................ <#name>
  [665] pushcons 144 ............................ <"Studio G">
  [667] pushsymb 356 ............................ <#description>
  [670] pushcons 145 ............................ <"loft experience">
  [672] pushsymb 357 ............................ <#userCount>
  [675] pushzero ................................ <0>
  [676] pushsymb 358 ............................ <#capacity>
  [679] pushint8 25 ............................. <25>
  [681] pushsymb 359 ............................ <#location>
  [684] pushint8 1 .............................. <1>
  [686] pushsymb 360 ............................ <#layout>
  [689] pushint8 3 .............................. <3>
  [691] pushsymb 362 ............................ <#server>
  [694] pushcons 114 ............................ <"sfdev1.cokemusi">
  [696] pushsymb 361 ............................ <#owner>
  [699] pushcons 139 ............................ <"freeble">
  [701] pusharglist 18 .......................... <[#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [703] pushproplist ............................ <[#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [704] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [706] objcall 241 ............................. aStudioData.add([#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [708] getlocal 0 .............................. <aStudioData>
  [710] pushsymb 354 ............................ <#studioId>
  [713] pushcons 146 ............................ <"freeble$4">
  [715] pushsymb 355 ............................ <#name>
  [718] pushcons 147 ............................ <"Studio H">
  [720] pushsymb 356 ............................ <#description>
  [723] pushcons 148 ............................ <"toys in the attic">
  [725] pushsymb 357 ............................ <#userCount>
  [728] pushzero ................................ <0>
  [729] pushsymb 358 ............................ <#capacity>
  [732] pushint8 25 ............................. <25>
  [734] pushsymb 359 ............................ <#location>
  [737] pushint8 1 .............................. <1>
  [739] pushsymb 360 ............................ <#layout>
  [742] pushint8 4 .............................. <4>
  [744] pushsymb 362 ............................ <#server>
  [747] pushcons 114 ............................ <"sfdev1.cokemusi">
  [749] pushsymb 361 ............................ <#owner>
  [752] pushcons 139 ............................ <"freeble">
  [754] pusharglist 18 .......................... <[#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [756] pushproplist ............................ <[#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [757] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [759] objcall 241 ............................. aStudioData.add([#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [761] getlocal 0 .............................. <aStudioData>
  [763] pusharglistnoret 1 ...................... <aStudioData>
  [765] extcall 121 ............................. return aStudioData
  [767] ret
end

on getTestStudio me
  [  0] pushsymb 354 ............................ <#studioId>
  [  3] pushcons 149 ............................ <"aslan2">
  [  5] pushsymb 355 ............................ <#name>
  [  8] pushcons 113 ............................ <"test">
  [ 10] pushsymb 356 ............................ <#description>
  [ 13] pushcons 113 ............................ <"test">
  [ 15] pushsymb 357 ............................ <#userCount>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 358 ............................ <#capacity>
  [ 22] pushint8 25 ............................. <25>
  [ 24] pushsymb 359 ............................ <#location>
  [ 27] pushint8 1 .............................. <1>
  [ 29] pushsymb 360 ............................ <#layout>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pushsymb 362 ............................ <#server>
  [ 37] pushcons 114 ............................ <"sfdev1.cokemusi">
  [ 39] pushsymb 361 ............................ <#owner>
  [ 42] pushcons 115 ............................ <"aslan">
  [ 44] pusharglist 18 .......................... <[#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 46] pushproplist ............................ <[#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 47] pusharglistnoret 1 ...................... <[#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 49] extcall 121 ............................. return [#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]
  [ 51] ret
end

on getDefaultGameServer me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 109 ...................... <me.fo_level0>
  [  4] pusharglist 1 ........................... <me.fo_level0>
  [  6] objcall 424 ............................. <me.fo_level0.getDefaultGameServer()>
  [  9] pusharglistnoret 1 ...................... <me.fo_level0.getDefaultGameServer()>
  [ 11] extcall 121 ............................. return me.fo_level0.getDefaultGameServer()
  [ 13] ret
end
