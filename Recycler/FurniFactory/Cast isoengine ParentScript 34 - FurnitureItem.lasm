property sProdID, sPosId, sImageBase, aAttributes, sType, sAction, iState, sCastLib, iWidth, iHeight, iDepth, iHeightOffset, bItemsAllowedOnTop, iDirection, aDirections, iDirectionIndex, iFrame, iNumFrames, aDrawOrder, iRow, iCol, iGridX, iGridZ, iGridY, bDragging, bAnimate, aAssets, aAlias, ORDER, height, width, depth, direction, frame, iFPS, iTimer, bDebug, oAction, bVisible, bBlocksPath, bSeatable, oPreviewMember, iPreviewSprite, bHasPreview, iLastRow, iLastCol, iLastGridY, iLastHeightOffset, iLastDirectionIndex, oHitTestColor8, oHitTestColor16
global oIsoScene, oPossessionStudio, oStudioMap, oStudio, oRoom, oDenizenManager, oSession, ElementMgr

on new me, _sProdId, _sPosId, _sImageBase, _sType, _sAction, _iState, _aAttributes, _sCastLib, _iRow, _iCol, _iGridY, _iDirection, _iHeight, _iHeightOffset, _bItemsAllowedOnTop
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 56 ........................... me.bDebug = 1
  [  6] getparam 0 .............................. <me>
  [  8] getparam 1 .............................. <_sProdId>
  [ 10] setobjprop 261 .......................... me.sProdID = _sProdId
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 2 .............................. <_sPosId>
  [ 17] setobjprop 258 .......................... me.sPosId = _sPosId
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 3 .............................. <_sImageBase>
  [ 24] setobjprop 252 .......................... me.sImageBase = _sImageBase
  [ 26] getparam 0 .............................. <me>
  [ 28] getparam 4 .............................. <_sType>
  [ 30] setobjprop 260 .......................... me.sType = _sType
  [ 33] getparam 5 .............................. <_sAction>
  [ 35] pusharglist 1 ........................... <_sAction>
  [ 37] extcall 105 ............................. <voidp(_sAction)>
  [ 39] getparam 5 .............................. <_sAction>
  [ 41] pushcons 0 .............................. <EMPTY>
  [ 43] eq ...................................... <_sAction = EMPTY>
  [ 44] or ...................................... <voidp(_sAction) or (_sAction = EMPTY)>
  [ 45] jmpifz [ 57] ............................ if voidp(_sAction) or (_sAction = EMPTY) then / else
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 1 .............................. <"Default">
  [ 52] setobjprop 255 .......................... me.sAction = "Default"
  [ 54] jmp [ 63]
  [ 57] getparam 0 .............................. <me>
  [ 59] getparam 5 .............................. <_sAction>
  [ 61] setobjprop 255 .......................... me.sAction = _sAction
  [ 63] getparam 6 .............................. <_iState>
  [ 65] pusharglist 1 ........................... <_iState>
  [ 67] extcall 105 ............................. <voidp(_iState)>
  [ 69] jmpifz [ 81] ............................ if voidp(_iState) then / else
  [ 72] getparam 0 .............................. <me>
  [ 74] pushzero ................................ <0>
  [ 75] setobjprop 259 .......................... me.iState = 0
  [ 78] jmp [ 88]
  [ 81] getparam 0 .............................. <me>
  [ 83] getparam 6 .............................. <_iState>
  [ 85] setobjprop 259 .......................... me.iState = _iState
  [ 88] getparam 7 .............................. <_aAttributes>
  [ 90] pusharglist 1 ........................... <_aAttributes>
  [ 92] extcall 105 ............................. <voidp(_aAttributes)>
  [ 94] getparam 7 .............................. <_aAttributes>
  [ 96] pushcons 0 .............................. <EMPTY>
  [ 98] eq ...................................... <_aAttributes = EMPTY>
  [ 99] or ...................................... <voidp(_aAttributes) or (_aAttributes = EMPTY)>
  [100] jmpifz [113] ............................ if voidp(_aAttributes) or (_aAttributes = EMPTY) then / else
  [103] getparam 0 .............................. <me>
  [105] pusharglist 0 ........................... <[:]>
  [107] pushproplist ............................ <[:]>
  [108] setobjprop 251 .......................... me.aAttributes = [:]
  [110] jmp [119]
  [113] getparam 0 .............................. <me>
  [115] getparam 7 .............................. <_aAttributes>
  [117] setobjprop 251 .......................... me.aAttributes = _aAttributes
  [119] getparam 9 .............................. <_iRow>
  [121] pusharglist 1 ........................... <_iRow>
  [123] extcall 105 ............................. <voidp(_iRow)>
  [125] jmpifz [137] ............................ if voidp(_iRow) then / else
  [128] getparam 0 .............................. <me>
  [130] pushint8 1 .............................. <1>
  [132] setobjprop 154 .......................... me.iRow = 1
  [134] jmp [143]
  [137] getparam 0 .............................. <me>
  [139] getparam 9 .............................. <_iRow>
  [141] setobjprop 154 .......................... me.iRow = _iRow
  [143] getparam 10 ............................. <_iCol>
  [145] pusharglist 1 ........................... <_iCol>
  [147] extcall 105 ............................. <voidp(_iCol)>
  [149] jmpifz [161] ............................ if voidp(_iCol) then / else
  [152] getparam 0 .............................. <me>
  [154] pushint8 1 .............................. <1>
  [156] setobjprop 155 .......................... me.iCol = 1
  [158] jmp [167]
  [161] getparam 0 .............................. <me>
  [163] getparam 10 ............................. <_iCol>
  [165] setobjprop 155 .......................... me.iCol = _iCol
  [167] getparam 11 ............................. <_iGridY>
  [169] pusharglist 1 ........................... <_iGridY>
  [171] extcall 105 ............................. <voidp(_iGridY)>
  [173] jmpifz [185] ............................ if voidp(_iGridY) then / else
  [176] getparam 0 .............................. <me>
  [178] pushzero ................................ <0>
  [179] setobjprop 257 .......................... me.iGridY = 0
  [182] jmp [192]
  [185] getparam 0 .............................. <me>
  [187] getparam 11 ............................. <_iGridY>
  [189] setobjprop 257 .......................... me.iGridY = _iGridY
  [192] getparam 12 ............................. <_iDirection>
  [194] pusharglist 1 ........................... <_iDirection>
  [196] extcall 105 ............................. <voidp(_iDirection)>
  [198] jmpifz [210] ............................ if voidp(_iDirection) then / else
  [201] getparam 0 .............................. <me>
  [203] pushint8 2 .............................. <2>
  [205] setobjprop 249 .......................... me.iDirection = 2
  [207] jmp [216]
  [210] getparam 0 .............................. <me>
  [212] getparam 12 ............................. <_iDirection>
  [214] setobjprop 249 .......................... me.iDirection = _iDirection
  [216] getparam 8 .............................. <_sCastLib>
  [218] pusharglist 1 ........................... <_sCastLib>
  [220] extcall 105 ............................. <voidp(_sCastLib)>
  [222] jmpifz [234] ............................ if voidp(_sCastLib) then / else
  [225] getparam 0 .............................. <me>
  [227] pushcons 2 .............................. <"Furniture">
  [229] setobjprop 253 .......................... me.sCastLib = "Furniture"
  [231] jmp [240]
  [234] getparam 0 .............................. <me>
  [236] getparam 8 .............................. <_sCastLib>
  [238] setobjprop 253 .......................... me.sCastLib = _sCastLib
  [240] getparam 0 .............................. <me>
  [242] pushint8 1 .............................. <1>
  [244] setobjprop 442 .......................... me.iWidth = 1
  [247] getparam 0 .............................. <me>
  [249] pushint8 1 .............................. <1>
  [251] setobjprop 472 .......................... me.iDepth = 1
  [254] getparam 13 ............................. <_iHeight>
  [256] pusharglist 1 ........................... <_iHeight>
  [258] extcall 105 ............................. <voidp(_iHeight)>
  [260] not ..................................... <not voidp(_iHeight)>
  [261] jmpifz [270] ............................ if not voidp(_iHeight) then
  [264] getparam 0 .............................. <me>
  [266] getparam 13 ............................. <_iHeight>
  [268] setobjprop 248 .......................... me.iHeight = _iHeight
  [270] getparam 14 ............................. <_iHeightOffset>
  [272] pusharglist 1 ........................... <_iHeightOffset>
  [274] extcall 105 ............................. <voidp(_iHeightOffset)>
  [276] jmpifz [288] ............................ if voidp(_iHeightOffset) then / else
  [279] getparam 0 .............................. <me>
  [281] pushzero ................................ <0>
  [282] setobjprop 256 .......................... me.iHeightOffset = 0
  [285] jmp [295]
  [288] getparam 0 .............................. <me>
  [290] getparam 14 ............................. <_iHeightOffset>
  [292] setobjprop 256 .......................... me.iHeightOffset = _iHeightOffset
  [295] getparam 15 ............................. <_bItemsAllowedOnTop>
  [297] pusharglist 1 ........................... <_bItemsAllowedOnTop>
  [299] extcall 105 ............................. <voidp(_bItemsAllowedOnTop)>
  [301] jmpifz [313] ............................ if voidp(_bItemsAllowedOnTop) then / else
  [304] getparam 0 .............................. <me>
  [306] pushint8 1 .............................. <1>
  [308] setobjprop 254 .......................... me.bItemsAllowedOnTop = 1
  [310] jmp [319]
  [313] getparam 0 .............................. <me>
  [315] getparam 15 ............................. <_bItemsAllowedOnTop>
  [317] setobjprop 254 .......................... me.bItemsAllowedOnTop = _bItemsAllowedOnTop
  [319] getparam 0 .............................. <me>
  [321] pushint8 1 .............................. <1>
  [323] setobjprop 684 .......................... me.iNumFrames = 1
  [326] getparam 0 .............................. <me>
  [328] pusharglist 0 ........................... <[:]>
  [330] pushproplist ............................ <[:]>
  [331] setobjprop 1197 ......................... me.aAssets = [:]
  [334] getparam 0 .............................. <me>
  [336] pushint8 1 .............................. <1>
  [338] setobjprop 1198 ......................... me.ORDER = 1
  [341] getparam 0 .............................. <me>
  [343] pushint8 2 .............................. <2>
  [345] setobjprop 457 .......................... me.height = 2
  [348] getparam 0 .............................. <me>
  [350] pushint8 3 .............................. <3>
  [352] setobjprop 456 .......................... me.width = 3
  [355] getparam 0 .............................. <me>
  [357] pushint8 4 .............................. <4>
  [359] setobjprop 1199 ......................... me.depth = 4
  [362] getparam 0 .............................. <me>
  [364] pushint8 5 .............................. <5>
  [366] setobjprop 363 .......................... me.direction = 5
  [369] getparam 0 .............................. <me>
  [371] pushint8 6 .............................. <6>
  [373] setobjprop 1200 ......................... me.frame = 6
  [376] getparam 0 .............................. <me>
  [378] pusharglistnoret 1 ...................... <me>
  [380] objcall 1190 ............................ me.loadAlias()
  [383] getparam 0 .............................. <me>
  [385] pusharglistnoret 1 ...................... <me>
  [387] objcall 1189 ............................ me.loadAssets()
  [390] getparam 0 .............................. <me>
  [392] pusharglistnoret 1 ...................... <me>
  [394] objcall 1178 ............................ me.setWidth()
  [397] getparam 0 .............................. <me>
  [399] pusharglistnoret 1 ...................... <me>
  [401] objcall 772 ............................. me.setDepth()
  [404] getparam 0 .............................. <me>
  [406] pusharglistnoret 1 ...................... <me>
  [408] objcall 1179 ............................ me.setNumFrames()
  [411] getparam 0 .............................. <me>
  [413] pusharglistnoret 1 ...................... <me>
  [415] objcall 1191 ............................ me.setDirections()
  [418] getparam 0 .............................. <me>
  [420] pusharglistnoret 1 ...................... <me>
  [422] objcall 1183 ............................ me.setDirectionIndex()
  [425] getparam 0 .............................. <me>
  [427] getparam 0 .............................. <me>
  [429] getobjprop 249 .......................... <me.iDirection>
  [431] pusharglistnoret 2 ...................... <me, me.iDirection>
  [433] objcall 1125 ............................ me.setDirection(me.iDirection)
  [436] getparam 0 .............................. <me>
  [438] pusharglistnoret 1 ...................... <me>
  [440] objcall 1184 ............................ me.setDrawOrder()
  [443] getparam 0 .............................. <me>
  [445] pushzero ................................ <0>
  [446] setobjprop 1130 ......................... me.bDragging = 0
  [449] getparam 0 .............................. <me>
  [451] pushzero ................................ <0>
  [452] setobjprop 1201 ......................... me.bAnimate = 0
  [455] getparam 0 .............................. <me>
  [457] pushzero ................................ <0>
  [458] setobjprop 1202 ......................... me.iFrame = 0
  [461] getparam 0 .............................. <me>
  [463] pushint8 8 .............................. <8>
  [465] setobjprop 84 ........................... me.iFPS = 8
  [467] getparam 0 .............................. <me>
  [469] getmovieprop 89 ......................... <the milliSeconds>
  [471] setobjprop 1131 ......................... me.iTimer = the milliSeconds
  [474] getparam 0 .............................. <me>
  [476] pushint8 1 .............................. <1>
  [478] setobjprop 1203 ......................... me.bBlocksPath = 1
  [481] getparam 0 .............................. <me>
  [483] pushzero ................................ <0>
  [484] setobjprop 1204 ......................... me.bSeatable = 0
  [487] getparam 0 .............................. <me>
  [489] pushint8 1 .............................. <1>
  [491] setobjprop 1106 ......................... me.bVisible = 1
  [494] getparam 0 .............................. <me>
  [496] getobjprop 252 .......................... <me.sImageBase>
  [498] pushcons 3 .............................. <"_small">
  [500] joinstr ................................. <me.sImageBase & "_small">
  [501] setlocal 0 .............................. sPreviewName = me.sImageBase & "_small"
  [503] getparam 0 .............................. <me>
  [505] getlocal 0 .............................. <sPreviewName>
  [507] pusharglist 1 ........................... <sPreviewName>
  [509] extcall 454 ............................. <member(sPreviewName)>
  [512] setobjprop 795 .......................... me.oPreviewMember = member(sPreviewName)
  [515] getparam 0 .............................. <me>
  [517] getparam 0 .............................. <me>
  [519] getchainedprop 795 ...................... <me.oPreviewMember>
  [522] getobjprop 1205 ......................... <me.oPreviewMember.number>
  [525] pushzero ................................ <0>
  [526] gt ...................................... <me.oPreviewMember.number > 0>
  [527] setobjprop 1206 ......................... me.bHasPreview = me.oPreviewMember.number > 0
  [530] getparam 0 .............................. <me>
  [532] getparam 0 .............................. <me>
  [534] getobjprop 795 .......................... <me.oPreviewMember>
  [537] pusharglistnoret 2 ...................... <me, me.oPreviewMember>
  [539] objcall 1166 ............................ me.createPreviewSprite(me.oPreviewMember)
  [542] getparam 0 .............................. <me>
  [544] getparam 0 .............................. <me>
  [546] getobjprop 1207 ......................... <me.iDirectionIndex>
  [549] setobjprop 1208 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [552] getparam 0 .............................. <me>
  [554] pushzero ................................ <0>
  [555] pusharglist 1 ........................... <0>
  [557] extcall 990 ............................. <paletteIndex(0)>
  [560] setobjprop 1209 ......................... me.oHitTestColor8 = paletteIndex(0)
  [563] getparam 0 .............................. <me>
  [565] pushint16 255 ........................... <255>
  [568] pushint16 255 ........................... <255>
  [571] pushint16 255 ........................... <255>
  [574] pusharglist 3 ........................... <255, 255, 255>
  [576] extcall 478 ............................. <rgb(255, 255, 255)>
  [579] setobjprop 1210 ......................... me.oHitTestColor16 = rgb(255, 255, 255)
  [582] getparam 0 .............................. <me>
  [584] pusharglistnoret 1 ...................... <me>
  [586] extcall 92 .............................. return me
  [588] ret
end

on sendPutInStudio me
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 88 ............................ <oIsoScene>
  [  4] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [  6] pusharglist 2 ........................... <me, oIsoScene.oSelectedItem>
  [  8] objcall 221 ............................. <me.equals(oIsoScene.oSelectedItem)>
  [ 10] not ..................................... <not me.equals(oIsoScene.oSelectedItem)>
  [ 11] jmpifz [ 18] ............................ if not me.equals(oIsoScene.oSelectedItem) then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 92 .............................. return 
  [ 18] getglobal 224 ........................... <oSession>
  [ 20] pusharglist 1 ........................... <oSession>
  [ 22] extcall 105 ............................. <voidp(oSession)>
  [ 24] not ..................................... <not voidp(oSession)>
  [ 25] jmpifz [ 56] ............................ if not voidp(oSession) then
  [ 28] getglobal 224 ........................... <oSession>
  [ 30] getobjprop 267 .......................... <oSession.bTestMode>
  [ 33] not ..................................... <not oSession.bTestMode>
  [ 34] getglobal 268 ........................... <oPossessionStudio>
  [ 37] pusharglist 1 ........................... <oPossessionStudio>
  [ 39] extcall 105 ............................. <voidp(oPossessionStudio)>
  [ 41] not ..................................... <not voidp(oPossessionStudio)>
  [ 42] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [ 43] jmpifz [ 56] ............................ if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [ 46] getglobal 268 ........................... <oPossessionStudio>
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglistnoret 2 ...................... <oPossessionStudio, me>
  [ 53] objcall 277 ............................. oPossessionStudio.sendPutInStudio(me)
  [ 56] ret
end

on createPreviewSprite me, _oPreviewMember
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 88 ............................ <oIsoScene>
  [  4] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [  6] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [  8] objcall 452 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 11] setobjprop 1212 ......................... me.iPreviewSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 1206 ......................... <me.bHasPreview>
  [ 19] not ..................................... <not me.bHasPreview>
  [ 20] jmpifz [ 27] ............................ if not me.bHasPreview then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 92 .............................. return 
  [ 27] getparam 0 .............................. <me>
  [ 29] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 32] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 34] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 37] getparam 1 .............................. <_oPreviewMember>
  [ 39] setobjprop 454 .......................... sprite(me.iPreviewSprite).member = _oPreviewMember
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 47] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 49] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 52] pushint8 36 ............................. <36>
  [ 54] setobjprop 462 .......................... sprite(me.iPreviewSprite).ink = 36
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 62] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 64] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 67] pushint16 200 ........................... <200>
  [ 70] setobjprop 463 .......................... sprite(me.iPreviewSprite).blend = 200
  [ 73] getparam 0 .............................. <me>
  [ 75] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 78] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 80] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 83] pusharglist 0 ........................... <>
  [ 85] thebuiltin 481 .......................... <the maxinteger>
  [ 88] setobjprop 482 .......................... sprite(me.iPreviewSprite).locZ = the maxinteger
  [ 91] getparam 0 .............................. <me>
  [ 93] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 96] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 98] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [101] getchainedprop 602 ...................... <sprite(me.iPreviewSprite).scriptInstanceList>
  [104] pushcons 4 .............................. <"DragPreviewScript">
  [106] pusharglist 1 ........................... <"DragPreviewScript">
  [108] extcall 57 .............................. <script("DragPreviewScript")>
  [110] getparam 0 .............................. <me>
  [112] pusharglist 2 ........................... <script("DragPreviewScript"), me>
  [114] objcall 0 ............................... <script("DragPreviewScript").new(me)>
  [116] pusharglistnoret 2 ...................... <sprite(me.iPreviewSprite).scriptInstanceList, script("DragPreviewScript").new(me)>
  [118] objcall 133 ............................. sprite(me.iPreviewSprite).scriptInstanceList.add(script("DragPreviewScript").new(me))
  [120] getparam 0 .............................. <me>
  [122] pusharglistnoret 1 ...................... <me>
  [124] objcall 1167 ............................ me.hidePreview()
  [127] ret
end

on updatePreview me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1206 ......................... <me.bHasPreview>
  [  5] not ..................................... <not me.bHasPreview>
  [  6] jmpifz [ 13] ............................ if not me.bHasPreview then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 92 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 18] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 20] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 23] pusharglist 0 ........................... <>
  [ 25] thebuiltin 296 .......................... <the mouseH>
  [ 28] setobjprop 299 .......................... sprite(me.iPreviewSprite).locH = the mouseH
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 36] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 38] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 41] pusharglist 0 ........................... <>
  [ 43] thebuiltin 297 .......................... <the mouseV>
  [ 46] setobjprop 300 .......................... sprite(me.iPreviewSprite).locV = the mouseV
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 54] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 56] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 59] pushint8 1 .............................. <1>
  [ 61] setobjprop 464 .......................... sprite(me.iPreviewSprite).visible = 1
  [ 64] getparam 0 .............................. <me>
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 2 ...................... <me, 0>
  [ 69] objcall 1173 ............................ me.setVisible(0)
  [ 72] ret
end

on hidePreview me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1206 ......................... <me.bHasPreview>
  [  5] not ..................................... <not me.bHasPreview>
  [  6] jmpifz [ 13] ............................ if not me.bHasPreview then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 92 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 18] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 20] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 23] pushzero ................................ <0>
  [ 24] setobjprop 464 .......................... sprite(me.iPreviewSprite).visible = 0
  [ 27] getparam 0 .............................. <me>
  [ 29] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 32] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 34] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 37] pushint8 100 ............................ <100>
  [ 39] inv ..................................... <-100>
  [ 40] setobjprop 299 .......................... sprite(me.iPreviewSprite).locH = -100
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 48] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 50] extcall 451 ............................. <sprite(me.iPreviewSprite)>
  [ 53] pushzero ................................ <0>
  [ 54] setobjprop 300 .......................... sprite(me.iPreviewSprite).locV = 0
  [ 57] getparam 0 .............................. <me>
  [ 59] pushint8 1 .............................. <1>
  [ 61] pusharglistnoret 2 ...................... <me, 1>
  [ 63] objcall 1173 ............................ me.setVisible(1)
  [ 66] ret
end

on getProdId me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 261 .......................... <me.sProdID>
  [  5] pusharglistnoret 1 ...................... <me.sProdID>
  [  7] extcall 92 .............................. return me.sProdID
  [  9] ret
end

on getAction me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 777 .......................... <me.oAction>
  [  5] pusharglistnoret 1 ...................... <me.oAction>
  [  7] extcall 92 .............................. return me.oAction
  [  9] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 795 .......................... <me.oPreviewMember>
  [  5] pusharglistnoret 1 ...................... <me.oPreviewMember>
  [  7] extcall 92 .............................. return me.oPreviewMember
  [  9] ret
end

on equals me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] extcall 105 ............................. <voidp(_oItem)>
  [  6] jmpifz [ 14] ............................ if voidp(_oItem) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 92 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 258 .......................... <me.sPosId>
  [ 19] getparam 1 .............................. <_oItem>
  [ 21] getobjprop 258 .......................... <_oItem.sPosId>
  [ 24] eq ...................................... <me.sPosId = _oItem.sPosId>
  [ 25] jmpifz [ 37] ............................ if me.sPosId = _oItem.sPosId then / else
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 92 .............................. return 1
  [ 34] jmp [ 42]
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 92 .............................. return 0
  [ 42] ret
end

on getPosId me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 258 .......................... <me.sPosId>
  [  5] pusharglistnoret 1 ...................... <me.sPosId>
  [  7] extcall 92 .............................. return me.sPosId
  [  9] ret
end

on getType me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 260 .......................... <me.sType>
  [  5] pusharglistnoret 1 ...................... <me.sType>
  [  7] extcall 92 .............................. return me.sType
  [  9] ret
end

on getGridX me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 155 .......................... <me.iCol>
  [  4] pusharglistnoret 1 ...................... <me.iCol>
  [  6] extcall 92 .............................. return me.iCol
  [  8] ret
end

on getGridY me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 257 .......................... <me.iGridY>
  [  5] pusharglistnoret 1 ...................... <me.iGridY>
  [  7] extcall 92 .............................. return me.iGridY
  [  9] ret
end

on getHeight me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 248 .......................... <me.iHeight>
  [  4] pusharglistnoret 1 ...................... <me.iHeight>
  [  6] extcall 92 .............................. return me.iHeight
  [  8] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeightOffset>
  [  4] setobjprop 256 .......................... me.iHeightOffset = _iHeightOffset
  [  7] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 256 .......................... <me.iHeightOffset>
  [  5] pusharglistnoret 1 ...................... <me.iHeightOffset>
  [  7] extcall 92 .............................. return me.iHeightOffset
  [  9] ret
end

on setItemsAllowedOnTop me, _bItemsAllowedOnTop
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bItemsAllowedOnTop>
  [  4] setobjprop 254 .......................... me.bItemsAllowedOnTop = _bItemsAllowedOnTop
  [  6] ret
end

on getItemsAllowedOnTop me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 254 .......................... <me.bItemsAllowedOnTop>
  [  4] pusharglistnoret 1 ...................... <me.bItemsAllowedOnTop>
  [  6] extcall 92 .............................. return me.bItemsAllowedOnTop
  [  8] ret
end

on getGridZ me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 154 .......................... <me.iRow>
  [  4] pusharglistnoret 1 ...................... <me.iRow>
  [  6] extcall 92 .............................. return me.iRow
  [  8] ret
end

on setXPos me, iXPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iXPos>
  [  4] setobjprop 286 .......................... me.iGridX = iXPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iXPos>
  [ 11] setobjprop 155 .......................... me.iCol = iXPos
  [ 13] ret
end

on setYPos me, iYPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iYPos>
  [  4] setobjprop 257 .......................... me.iGridY = iYPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iYPos>
  [ 11] pusharglistnoret 2 ...................... <me, iYPos>
  [ 13] objcall 730 ............................. me.setGridY(iYPos)
  [ 16] ret
end

on setZPos me, iZPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iZPos>
  [  4] setobjprop 284 .......................... me.iGridZ = iZPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iZPos>
  [ 11] setobjprop 154 .......................... me.iRow = iZPos
  [ 13] ret
end

on setAttributes me, _aAttributes
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_aAttributes>
  [  4] setobjprop 251 .......................... me.aAttributes = _aAttributes
  [  6] ret
end

on getDirection me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 249 .......................... <me.iDirection>
  [  4] pusharglistnoret 1 ...................... <me.iDirection>
  [  6] extcall 92 .............................. return me.iDirection
  [  8] ret
end

on setGridY me, _iGridY
  [  0] getparam 1 .............................. <_iGridY>
  [  2] pushzero ................................ <0>
  [  3] lt ...................................... <_iGridY < 0>
  [  4] jmpifz [ 11] ............................ if _iGridY < 0 then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 92 .............................. return 
  [ 11] getparam 1 .............................. <_iGridY>
  [ 13] getglobal 88 ............................ <oIsoScene>
  [ 15] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [ 17] getobjprop 346 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [ 20] gt ...................................... <_iGridY > oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [ 21] jmpifz [ 29] ............................ if _iGridY > oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 92 .............................. return 0
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 1 .............................. <_iGridY>
  [ 33] setobjprop 257 .......................... me.iGridY = _iGridY
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 247 ............................. me.draw()
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglistnoret 1 ...................... <1>
  [ 46] extcall 92 .............................. return 1
  [ 48] ret
end

on changeGridY me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 257 .......................... <me.iGridY>
  [  7] getparam 1 .............................. <iDir>
  [  9] add ..................................... <me.iGridY + iDir>
  [ 10] pusharglist 2 ........................... <me, me.iGridY + iDir>
  [ 12] objcall 730 ............................. <me.setGridY(me.iGridY + iDir)>
  [ 15] pusharglistnoret 1 ...................... <me.setGridY(me.iGridY + iDir)>
  [ 17] extcall 92 .............................. return me.setGridY(me.iGridY + iDir)
  [ 19] ret
end

on setState me, _iState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iState>
  [  4] setobjprop 259 .......................... me.iState = _iState
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 777 ...................... <me.oAction>
  [ 12] pusharglistnoret 1 ...................... <me.oAction>
  [ 14] objcall 1214 ............................ me.oAction.displayState()
  [ 17] ret
end

on getState me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 259 .......................... <me.iState>
  [  5] pusharglistnoret 1 ...................... <me.iState>
  [  7] extcall 92 .............................. return me.iState
  [  9] ret
end

on getAttributes me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 251 .......................... <me.aAttributes>
  [  4] pusharglistnoret 1 ...................... <me.aAttributes>
  [  6] extcall 92 .............................. return me.aAttributes
  [  8] ret
end

on setAttribute me, sProp, sState
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 251 ...................... <me.aAttributes>
  [  4] getparam 1 .............................. <sProp>
  [  6] pusharglist 1 ........................... <sProp>
  [  8] extcall 619 ............................. <symbol(sProp)>
  [ 11] getparam 2 .............................. <sState>
  [ 13] pusharglistnoret 3 ...................... <me.aAttributes, symbol(sProp), sState>
  [ 15] objcall 1154 ............................ me.aAttributes.setaProp(symbol(sProp), sState)
  [ 18] ret
end

on deleteItem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 201 ............................. <me.isRugITem()>
  [  6] jmpifz [ 23] ............................ if me.isRugITem() then / else
  [  9] getglobal 88 ............................ <oIsoScene>
  [ 11] getchainedprop 122 ...................... <oIsoScene.oRugs>
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 2 ...................... <oIsoScene.oRugs, me>
  [ 17] objcall 767 ............................. oIsoScene.oRugs.removeItem(me)
  [ 20] jmp [ 34]
  [ 23] getglobal 88 ............................ <oIsoScene>
  [ 25] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 2 ...................... <oIsoScene.oFurniture, me>
  [ 31] objcall 767 ............................. oIsoScene.oFurniture.removeItem(me)
  [ 34] ret
end

on mouseIsOverITem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 169
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 196
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <_iSprite>
  [ 41] pusharglist 2 ........................... <me, _iSprite>
  [ 43] objcall 699 ............................. <me.hitTest(_iSprite)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(_iSprite) then
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 92 .............................. return 1
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 697 ............................. <me.getSprites()>
  [ 12] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 14] getlocal 1 .............................. <_aSprites>
  [ 16] peek 0
  [ 18] pusharglist 1
  [ 20] extcall 169
  [ 22] pushint8 1
  [ 24] peek 0
  [ 26] peek 2
  [ 28] lteq
  [ 29] jmpifz [ 88] ............................ repeat with _iSprite in _aSprites
  [ 32] peek 2
  [ 34] peek 1
  [ 36] pusharglist 2
  [ 38] extcall 196
  [ 40] setlocal 2
  [ 42] getlocal 2 .............................. <_iSprite>
  [ 44] pusharglist 1 ........................... <_iSprite>
  [ 46] extcall 757 ............................. <rollover(_iSprite)>
  [ 49] jmpifz [ 83] ............................ if rollover(_iSprite) then
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 2 .............................. <_iSprite>
  [ 56] pusharglist 2 ........................... <me, _iSprite>
  [ 58] objcall 699 ............................. <me.hitTest(_iSprite)>
  [ 61] jmpifz [ 83] ............................ if me.hitTest(_iSprite) then
  [ 64] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 66] getlocal 2 .............................. <_iSprite>
  [ 68] pusharglist 1 ........................... <_iSprite>
  [ 70] extcall 451 ............................. <sprite(_iSprite)>
  [ 73] getobjprop 482 .......................... <sprite(_iSprite).locZ>
  [ 76] getlocal 2 .............................. <_iSprite>
  [ 78] pusharglistnoret 3 ...................... <aSpritesUnderMouse, sprite(_iSprite).locZ, _iSprite>
  [ 80] objcall 357 ............................. aSpritesUnderMouse.addProp(sprite(_iSprite).locZ, _iSprite)
  [ 83] pushint8 1
  [ 85] add
  [ 86] endrepeat [ 24]
  [ 88] pop 3
  [ 90] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 92] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 94] extcall 92 .............................. return aSpritesUnderMouse
  [ 96] ret
end

on rolloverObject me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 169
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 58] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 196
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <_iSprite>
  [ 39] pusharglist 1 ........................... <_iSprite>
  [ 41] extcall 757 ............................. <rollover(_iSprite)>
  [ 44] jmpifz [ 53] ............................ if rollover(_iSprite) then
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 92 .............................. return 1
  [ 53] pushint8 1
  [ 55] add
  [ 56] endrepeat [ 19]
  [ 58] pop 3
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 92 .............................. return 0
  [ 65] ret
end

on getHighestDepth me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iHighestDepth = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 697 ............................. <me.getSprites()>
  [ 10] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 12] getlocal 1 .............................. <_aSprites>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 169
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 73] ............................ repeat with _iSprite in _aSprites
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 196
  [ 38] setlocal 2
  [ 40] getlocal 2 .............................. <_iSprite>
  [ 42] pusharglist 1 ........................... <_iSprite>
  [ 44] extcall 451 ............................. <sprite(_iSprite)>
  [ 47] getobjprop 482 .......................... <sprite(_iSprite).locZ>
  [ 50] getlocal 0 .............................. <iHighestDepth>
  [ 52] gt ...................................... <sprite(_iSprite).locZ > iHighestDepth>
  [ 53] jmpifz [ 68] ............................ if sprite(_iSprite).locZ > iHighestDepth then
  [ 56] getlocal 2 .............................. <_iSprite>
  [ 58] pusharglist 1 ........................... <_iSprite>
  [ 60] extcall 451 ............................. <sprite(_iSprite)>
  [ 63] getobjprop 482 .......................... <sprite(_iSprite).locZ>
  [ 66] setlocal 0 .............................. iHighestDepth = sprite(_iSprite).locZ
  [ 68] pushint8 1
  [ 70] add
  [ 71] endrepeat [ 22]
  [ 73] pop 3
  [ 75] getlocal 0 .............................. <iHighestDepth>
  [ 77] pusharglistnoret 1 ...................... <iHighestDepth>
  [ 79] extcall 92 .............................. return iHighestDepth
  [ 81] ret
end

on hitTestAll me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 169
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 196
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <i>
  [ 41] pusharglist 2 ........................... <me, i>
  [ 43] objcall 699 ............................. <me.hitTest(i)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(i) then
  [ 49] getlocal 1 .............................. <i>
  [ 51] pusharglistnoret 1 ...................... <i>
  [ 53] extcall 92 .............................. return i
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] pusharglist 0 ........................... <>
  [ 64] extcall 130 ............................. <VOID>
  [ 66] pusharglistnoret 1 ...................... <VOID>
  [ 68] extcall 92 .............................. return VOID
  [ 70] ret
end

on hitTest me, iSpriteNum
  [  0] getparam 1 .............................. <iSpriteNum>
  [  2] pusharglist 1 ........................... <iSpriteNum>
  [  4] extcall 451 ............................. <sprite(iSpriteNum)>
  [  7] setlocal 0 .............................. _oSprite = sprite(iSpriteNum)
  [  9] getlocal 0 .............................. <_oSprite>
  [ 11] pusharglist 1 ........................... <_oSprite>
  [ 13] extcall 105 ............................. <voidp(_oSprite)>
  [ 15] jmpifz [ 23] ............................ if voidp(_oSprite) then
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 92 .............................. return 0
  [ 23] getlocal 0 .............................. <_oSprite>
  [ 25] getobjprop 454 .......................... <_oSprite.member>
  [ 28] setlocal 1 .............................. _oMember = _oSprite.member
  [ 30] getlocal 1 .............................. <_oMember>
  [ 32] pusharglist 1 ........................... <_oMember>
  [ 34] extcall 105 ............................. <voidp(_oMember)>
  [ 36] jmpifz [ 44] ............................ if voidp(_oMember) then
  [ 39] pushzero ................................ <0>
  [ 40] pusharglistnoret 1 ...................... <0>
  [ 42] extcall 92 .............................. return 0
  [ 44] getlocal 1 .............................. <_oMember>
  [ 46] getobjprop 606 .......................... <_oMember.memberNum>
  [ 49] pushzero ................................ <0>
  [ 50] lteq .................................... <_oMember.memberNum <= 0>
  [ 51] jmpifz [ 59] ............................ if _oMember.memberNum <= 0 then
  [ 54] pushzero ................................ <0>
  [ 55] pusharglistnoret 1 ...................... <0>
  [ 57] extcall 92 .............................. return 0
  [ 59] getlocal 0 .............................. <_oSprite>
  [ 61] getmovieprop 760 ........................ <the mouseLoc>
  [ 64] pusharglist 2 ........................... <_oSprite, the mouseLoc>
  [ 66] objcall 761 ............................. <_oSprite.mapStageToMember(the mouseLoc)>
  [ 69] setlocal 2 .............................. _oMemberLoc = _oSprite.mapStageToMember(the mouseLoc)
  [ 71] getlocal 2 .............................. <_oMemberLoc>
  [ 73] pusharglist 1 ........................... <_oMemberLoc>
  [ 75] extcall 105 ............................. <voidp(_oMemberLoc)>
  [ 77] jmpifz [ 85] ............................ if voidp(_oMemberLoc) then
  [ 80] pushzero ................................ <0>
  [ 81] pusharglistnoret 1 ...................... <0>
  [ 83] extcall 92 .............................. return 0
  [ 85] getlocal 1 .............................. <_oMember>
  [ 87] getobjprop 476 .......................... <_oMember.image>
  [ 90] setlocal 3 .............................. _oImage = _oMember.image
  [ 92] getlocal 3 .............................. <_oImage>
  [ 94] getlocal 2 .............................. <_oMemberLoc>
  [ 96] pusharglist 2 ........................... <_oImage, _oMemberLoc>
  [ 98] objcall 762 ............................. <_oImage.getPixel(_oMemberLoc)>
  [101] setlocal 4 .............................. _oPixelColor = _oImage.getPixel(_oMemberLoc)
  [103] getlocal 3 .............................. <_oImage>
  [105] getobjprop 1199 ......................... <_oImage.depth>
  [108] setlocal 5 .............................. iBitDepth = _oImage.depth
  [110] pushzero ................................ <0>
  [111] setlocal 6 .............................. bHitTest = 0
  [113] getlocal 5 .............................. <iBitDepth>
  [115] pushint8 8 .............................. <8>
  [117] eq ...................................... <iBitDepth = 8>
  [118] jmpifz [138] ............................ if iBitDepth = 8 then
  [121] getlocal 4 .............................. <_oPixelColor>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 1209 ......................... <me.oHitTestColor8>
  [128] nteq .................................... <_oPixelColor <> me.oHitTestColor8>
  [129] jmpifz [138] ............................ if _oPixelColor <> me.oHitTestColor8 then
  [132] pushint8 1 .............................. <1>
  [134] pusharglistnoret 1 ...................... <1>
  [136] extcall 92 .............................. return 1
  [138] getlocal 5 .............................. <iBitDepth>
  [140] pushint8 8 .............................. <8>
  [142] gt ...................................... <iBitDepth > 8>
  [143] getlocal 5 .............................. <iBitDepth>
  [145] pushint8 32 ............................. <32>
  [147] lt ...................................... <iBitDepth < 32>
  [148] and ..................................... <(iBitDepth > 8) and (iBitDepth < 32)>
  [149] jmpifz [169] ............................ if (iBitDepth > 8) and (iBitDepth < 32) then
  [152] getlocal 4 .............................. <_oPixelColor>
  [154] getparam 0 .............................. <me>
  [156] getobjprop 1210 ......................... <me.oHitTestColor16>
  [159] nteq .................................... <_oPixelColor <> me.oHitTestColor16>
  [160] jmpifz [169] ............................ if _oPixelColor <> me.oHitTestColor16 then
  [163] pushint8 1 .............................. <1>
  [165] pusharglistnoret 1 ...................... <1>
  [167] extcall 92 .............................. return 1
  [169] pushzero ................................ <0>
  [170] pusharglistnoret 1 ...................... <0>
  [172] extcall 92 .............................. return 0
  [174] ret
end

on mouseDownEvent me, iSpriteNum, bDoubleClick
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 5 .............................. <"FURNI MOUSE DOWN: ">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 258 .......................... <me.sPosId>
  [  9] joinstr ................................. <"FURNI MOUSE DOWN: " & me.sPosId>
  [ 10] pusharglistnoret 2 ...................... <me, "FURNI MOUSE DOWN: " & me.sPosId>
  [ 12] objcall 50 .............................. me.debug("FURNI MOUSE DOWN: " & me.sPosId)
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 733 ............................. <me.hitTestAll()>
  [ 21] setparam 1 .............................. iSpriteNum = me.hitTestAll()
  [ 23] getparam 1 .............................. <iSpriteNum>
  [ 25] pusharglist 1 ........................... <iSpriteNum>
  [ 27] extcall 105 ............................. <voidp(iSpriteNum)>
  [ 29] not ..................................... <not voidp(iSpriteNum)>
  [ 30] setlocal 0 .............................. bHitTest = not voidp(iSpriteNum)
  [ 32] getlocal 0 .............................. <bHitTest>
  [ 34] not ..................................... <not bHitTest>
  [ 35] jmpifz [ 43] ............................ if not bHitTest then
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 92 .............................. return 0
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglist 1 ........................... <me>
  [ 47] objcall 149 ............................. <me.getDrag()>
  [ 49] jmpifz [ 57] ............................ if me.getDrag() then
  [ 52] pushzero ................................ <0>
  [ 53] pusharglistnoret 1 ...................... <0>
  [ 55] extcall 92 .............................. return 0
  [ 57] getglobal 150 ........................... <ElementMgr>
  [ 59] pusharglist 1 ........................... <ElementMgr>
  [ 61] objcall 271 ............................. <ElementMgr.getTrader()>
  [ 64] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 66] extcall 105 ............................. <voidp(ElementMgr.getTrader())>
  [ 68] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 69] setlocal 1 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 71] getlocal 1 .............................. <bTrading>
  [ 73] jmpifz [ 82] ............................ if bTrading then
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 92 .............................. return 1
  [ 82] getparam 0 .............................. <me>
  [ 84] getchainedprop 777 ...................... <me.oAction>
  [ 87] getparam 2 .............................. <bDoubleClick>
  [ 89] pusharglist 2 ........................... <me.oAction, bDoubleClick>
  [ 91] objcall 9 ............................... <me.oAction.mouseDownEvent(bDoubleClick)>
  [ 93] setlocal 2 .............................. bPass = me.oAction.mouseDownEvent(bDoubleClick)
  [ 95] getlocal 2 .............................. <bPass>
  [ 97] pusharglist 1 ........................... <bPass>
  [ 99] extcall 105 ............................. <voidp(bPass)>
  [101] not ..................................... <not voidp(bPass)>
  [102] jmpifz [117] ............................ if not voidp(bPass) then
  [105] getlocal 2 .............................. <bPass>
  [107] not ..................................... <not bPass>
  [108] jmpifz [117] ............................ if not bPass then
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 1 ...................... <1>
  [115] extcall 92 .............................. return 1
  [117] getglobal 316 ........................... <oStudioMap>
  [120] pusharglist 1 ........................... <oStudioMap>
  [122] objcall 317 ............................. <oStudioMap.isPrivate()>
  [125] not ..................................... <not oStudioMap.isPrivate()>
  [126] jmpifz [134] ............................ if not oStudioMap.isPrivate() then
  [129] pushzero ................................ <0>
  [130] pusharglistnoret 1 ...................... <0>
  [132] extcall 92 .............................. return 0
  [134] getlocal 2 .............................. <bPass>
  [136] pusharglist 1 ........................... <bPass>
  [138] extcall 105 ............................. <voidp(bPass)>
  [140] getlocal 2 .............................. <bPass>
  [142] getparam 0 .............................. <me>
  [144] pusharglist 1 ........................... <me>
  [146] objcall 149 ............................. <me.getDrag()>
  [148] not ..................................... <not me.getDrag()>
  [149] and ..................................... <bPass and not me.getDrag()>
  [150] or ...................................... <voidp(bPass) or (bPass and not me.getDrag())>
  [151] jmpifz [160] ............................ if voidp(bPass) or (bPass and not me.getDrag()) then
  [154] getglobal 88 ............................ <oIsoScene>
  [156] pusharglistnoret 1 ...................... <oIsoScene>
  [158] objcall 15 .............................. oIsoScene.moveAvatar()
  [160] pushint8 1 .............................. <1>
  [162] pusharglistnoret 1 ...................... <1>
  [164] extcall 92 .............................. return 1
  [166] ret
end

on putInBackPack me
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 20] ............................ if voidp(oStudio) then / else
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 0 .............................. bIsOwner = 1
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 1 .............................. bIsMod = 1
  [ 17] jmp [ 42]
  [ 20] getglobal 211 ........................... <oStudio>
  [ 22] getglobal 171 ........................... <oDenizenManager>
  [ 24] pusharglist 1 ........................... <oDenizenManager>
  [ 26] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 28] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 30] objcall 240 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 32] setlocal 0 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [ 34] getglobal 171 ........................... <oDenizenManager>
  [ 36] pusharglist 1 ........................... <oDenizenManager>
  [ 38] objcall 241 ............................. <oDenizenManager.isMod()>
  [ 40] setlocal 1 .............................. bIsMod = oDenizenManager.isMod()
  [ 42] getlocal 0 .............................. <bIsOwner>
  [ 44] not ..................................... <not bIsOwner>
  [ 45] getlocal 1 .............................. <bIsMod>
  [ 47] not ..................................... <not bIsMod>
  [ 48] and ..................................... <not bIsOwner and not bIsMod>
  [ 49] jmpifz [ 56] ............................ if not bIsOwner and not bIsMod then
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 92 .............................. return 
  [ 56] getglobal 88 ............................ <oIsoScene>
  [ 58] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 60] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 62] extcall 105 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 64] not ..................................... <not voidp(oIsoScene.oSelectedItem)>
  [ 65] getglobal 88 ............................ <oIsoScene>
  [ 67] getchainedprop 131 ...................... <oIsoScene.oSelectedItem>
  [ 69] getparam 0 .............................. <me>
  [ 71] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me>
  [ 73] objcall 221 ............................. <oIsoScene.oSelectedItem.equals(me)>
  [ 75] and ..................................... <not voidp(oIsoScene.oSelectedItem) and oIsoScene.oSelectedItem.equals(me)>
  [ 76] jmpifz [117] ............................ if not voidp(oIsoScene.oSelectedItem) and oIsoScene.oSelectedItem.equals(me) then
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 149 ............................. <me.getDrag()>
  [ 85] not ..................................... <not me.getDrag()>
  [ 86] jmpifz [117] ............................ if not me.getDrag() then
  [ 89] getglobal 224 ........................... <oSession>
  [ 91] pusharglist 1 ........................... <oSession>
  [ 93] extcall 105 ............................. <voidp(oSession)>
  [ 95] jmpifz [107] ............................ if voidp(oSession) then / else
  [ 98] getglobal 88 ............................ <oIsoScene>
  [100] pusharglistnoret 1 ...................... <oIsoScene>
  [102] objcall 25 .............................. oIsoScene.deleteSelectedItem()
  [104] jmp [117]
  [107] getglobal 268 ........................... <oPossessionStudio>
  [110] getparam 0 .............................. <me>
  [112] pusharglistnoret 2 ...................... <oPossessionStudio, me>
  [114] objcall 1148 ............................ oPossessionStudio.sendPutInBackpack(me)
  [117] ret
end

on placeItem me, oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 6 .............................. <"####### BEGIN PLACE ITEM ########: ">
  [  4] getparam 1 .............................. <oSquare>
  [  6] pusharglist 1 ........................... <oSquare>
  [  8] objcall 405 ............................. <oSquare.toString()>
  [ 11] joinstr ................................. <"####### BEGIN PLACE ITEM ########: " & oSquare.toString()>
  [ 12] pusharglistnoret 2 ...................... <me, "####### BEGIN PLACE ITEM ########: " & oSquare.toString()>
  [ 14] objcall 50 .............................. me.debug("####### BEGIN PLACE ITEM ########: " & oSquare.toString())
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 1 ........................... <me>
  [ 20] objcall 201 ............................. <me.isRugITem()>
  [ 22] jmpifz [ 38] ............................ if me.isRugITem() then
  [ 25] getparam 0 .............................. <me>
  [ 27] getparam 1 .............................. <oSquare>
  [ 29] pusharglist 2 ........................... <me, oSquare>
  [ 31] objcall 1169 ............................ <me.placeRugItem(oSquare)>
  [ 34] pusharglistnoret 1 ...................... <me.placeRugItem(oSquare)>
  [ 36] extcall 92 .............................. return me.placeRugItem(oSquare)
  [ 38] getglobal 88 ............................ <oIsoScene>
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 1 .............................. <oSquare>
  [ 44] pusharglist 3 ........................... <oIsoScene, me, oSquare>
  [ 46] objcall 32 .............................. <oIsoScene.getSquareOffsets(me, oSquare)>
  [ 48] setlocal 0 .............................. aDifList = oIsoScene.getSquareOffsets(me, oSquare)
  [ 50] getglobal 88 ............................ <oIsoScene>
  [ 52] getlocal 0 .............................. <aDifList>
  [ 54] pusharglist 2 ........................... <oIsoScene, aDifList>
  [ 56] objcall 24 .............................. <oIsoScene.squaresAreOverFloor(aDifList)>
  [ 58] setlocal 1 .............................. bOverFloor = oIsoScene.squaresAreOverFloor(aDifList)
  [ 60] getlocal 1 .............................. <bOverFloor>
  [ 62] not ..................................... <not bOverFloor>
  [ 63] jmpifz [ 71] ............................ if not bOverFloor then
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 1 ...................... <0>
  [ 69] extcall 92 .............................. return 0
  [ 71] getglobal 88 ............................ <oIsoScene>
  [ 73] getchainedprop 115 ...................... <oIsoScene.oMap>
  [ 75] getparam 1 .............................. <oSquare>
  [ 77] getobjprop 154 .......................... <oSquare.iRow>
  [ 79] getparam 1 .............................. <oSquare>
  [ 81] getobjprop 155 .......................... <oSquare.iCol>
  [ 83] pusharglist 3 ........................... <oIsoScene.oMap, oSquare.iRow, oSquare.iCol>
  [ 85] objcall 156 ............................. <oIsoScene.oMap.getNode(oSquare.iRow, oSquare.iCol)>
  [ 87] setlocal 2 .............................. oMapNode = oIsoScene.oMap.getNode(oSquare.iRow, oSquare.iCol)
  [ 89] getlocal 2 .............................. <oMapNode>
  [ 91] getobjprop 157 .......................... <oMapNode.w>
  [ 93] setlocal 3 .............................. iWeight = oMapNode.w
  [ 95] getlocal 3 .............................. <iWeight>
  [ 97] getglobal 88 ............................ <oIsoScene>
  [ 99] getchainedprop 115 ...................... <oIsoScene.oMap>
  [101] getchainedprop 158 ...................... <oIsoScene.oMap.oPathfinder>
  [103] getobjprop 159 .......................... <oIsoScene.oMap.oPathfinder.W_BLOCKED>
  [105] eq ...................................... <iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED>
  [106] getlocal 3 .............................. <iWeight>
  [108] getglobal 88 ............................ <oIsoScene>
  [110] getchainedprop 115 ...................... <oIsoScene.oMap>
  [112] getchainedprop 158 ...................... <oIsoScene.oMap.oPathfinder>
  [114] getobjprop 160 .......................... <oIsoScene.oMap.oPathfinder.W_ENTER>
  [116] eq ...................................... <iWeight = oIsoScene.oMap.oPathfinder.W_ENTER>
  [117] or ...................................... <(iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED) or (iWeight = oIsoScene.oMap.oPathfinder.W_ENTER)>
  [118] jmpifz [126] ............................ if (iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED) or (iWeight = oIsoScene.oMap.oPathfinder.W_ENTER) then
  [121] pushzero ................................ <0>
  [122] pusharglistnoret 1 ...................... <0>
  [124] extcall 92 .............................. return 0
  [126] getglobal 88 ............................ <oIsoScene>
  [128] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [130] getparam 0 .............................. <me>
  [132] pusharglist 2 ........................... <oIsoScene.oFurniture, me>
  [134] objcall 176 ............................. <oIsoScene.oFurniture.isSeatableItem(me)>
  [136] setlocal 4 .............................. bIsSeatableItem = oIsoScene.oFurniture.isSeatableItem(me)
  [138] getglobal 88 ............................ <oIsoScene>
  [140] getchainedprop 126 ...................... <oIsoScene.oAvatars>
  [142] getlocal 0 .............................. <aDifList>
  [144] pusharglist 2 ........................... <oIsoScene.oAvatars, aDifList>
  [146] objcall 896 ............................. <oIsoScene.oAvatars.getItemsAtSquares(aDifList)>
  [149] setlocal 5 .............................. aAvatars = oIsoScene.oAvatars.getItemsAtSquares(aDifList)
  [151] getlocal 5 .............................. <aAvatars>
  [153] getobjprop 169 .......................... <aAvatars.count>
  [155] pushzero ................................ <0>
  [156] gt ...................................... <aAvatars.count > 0>
  [157] jmpifz [165] ............................ if aAvatars.count > 0 then
  [160] pushzero ................................ <0>
  [161] pusharglistnoret 1 ...................... <0>
  [163] extcall 92 .............................. return 0
  [165] getparam 0 .............................. <me>
  [167] pushcons 7 .............................. <"NO AVATARS IN WAY:">
  [169] pusharglistnoret 2 ...................... <me, "NO AVATARS IN WAY:">
  [171] objcall 50 .............................. me.debug("NO AVATARS IN WAY:")
  [173] getlocal 0 .............................. <aDifList>
  [175] peek 0
  [177] pusharglist 1
  [179] extcall 169
  [181] pushint8 1
  [183] peek 0
  [185] peek 2
  [187] lteq
  [188] jmpifz [222] ............................ repeat with s in aDifList
  [191] peek 2
  [193] peek 1
  [195] pusharglist 2
  [197] extcall 196
  [199] setlocal 6
  [201] getparam 0 .............................. <me>
  [203] pushcons 8 .............................. <"s: ">
  [205] getlocal 6 .............................. <s>
  [207] pusharglist 1 ........................... <s>
  [209] objcall 405 ............................. <s.toString()>
  [212] joinstr ................................. <"s: " & s.toString()>
  [213] pusharglistnoret 2 ...................... <me, "s: " & s.toString()>
  [215] objcall 50 .............................. me.debug("s: " & s.toString())
  [217] pushint8 1
  [219] add
  [220] endrepeat [183]
  [222] pop 3
  [224] getlocal 4 .............................. <bIsSeatableItem>
  [226] jmpifz [267] ............................ if bIsSeatableItem then
  [229] getglobal 88 ............................ <oIsoScene>
  [231] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [233] getlocal 0 .............................. <aDifList>
  [235] getparam 0 .............................. <me>
  [237] pusharglist 3 ........................... <oIsoScene.oFurniture, aDifList, me>
  [239] objcall 1006 ............................ <oIsoScene.oFurniture.getItemsAtSquaresExcept(aDifList, me)>
  [242] setlocal 7 .............................. aItemsAtSquares = oIsoScene.oFurniture.getItemsAtSquaresExcept(aDifList, me)
  [244] getglobal 88 ............................ <oIsoScene>
  [246] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [248] getlocal 7 .............................. <aItemsAtSquares>
  [250] pusharglist 2 ........................... <oIsoScene.oFurniture, aItemsAtSquares>
  [252] objcall 1005 ............................ <oIsoScene.oFurniture.containsSeatableItems(aItemsAtSquares)>
  [255] setlocal 8 .............................. bContainsSeatableItems = oIsoScene.oFurniture.containsSeatableItems(aItemsAtSquares)
  [257] getlocal 8 .............................. <bContainsSeatableItems>
  [259] jmpifz [267] ............................ if bContainsSeatableItems then
  [262] pushzero ................................ <0>
  [263] pusharglistnoret 1 ...................... <0>
  [265] extcall 92 .............................. return 0
  [267] pushzero ................................ <0>
  [268] setprop 257 ............................. iGridY = 0
  [271] pushzero ................................ <0>
  [272] setlocal 9 .............................. iTestLow = 0
  [274] getparam 0 .............................. <me>
  [276] pusharglist 1 ........................... <me>
  [278] objcall 1037 ............................ <me.getHeight()>
  [281] setlocal 10 ............................. iTestHi = me.getHeight()
  [283] pushint8 1 .............................. <1>
  [285] setlocal 11
  [287] getlocal 11
  [289] getglobal 88 ............................ <oIsoScene>
  [291] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [293] getobjprop 346 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [296] lteq
  [297] jmpifz [464] ............................ repeat with i = 1 to oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT
  [300] getglobal 88 ............................ <oIsoScene>
  [302] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [304] getlocal 0 .............................. <aDifList>
  [306] getparam 0 .............................. <me>
  [308] getlocal 9 .............................. <iTestLow>
  [310] getlocal 10 ............................. <iTestHi>
  [312] pusharglist 5 ........................... <oIsoScene.oFurniture, aDifList, me, iTestLow, iTestHi>
  [314] objcall 1016 ............................ <oIsoScene.oFurniture.getItemsAtSquaresInHeightRangeExcept(aDifList, me, iTestLow, iTestHi)>
  [317] setlocal 12 ............................. aItemsInRange = oIsoScene.oFurniture.getItemsAtSquaresInHeightRangeExcept(aDifList, me, iTestLow, iTestHi)
  [319] getlocal 12 ............................. <aItemsInRange>
  [321] pusharglist 1 ........................... <aItemsInRange>
  [323] objcall 169 ............................. <aItemsInRange.count()>
  [325] setlocal 13 ............................. iCount = aItemsInRange.count()
  [327] getlocal 13 ............................. <iCount>
  [329] pushzero ................................ <0>
  [330] gt ...................................... <iCount > 0>
  [331] jmpifz [429] ............................ if iCount > 0 then
  [334] getglobal 88 ............................ <oIsoScene>
  [336] getchainedprop 124 ...................... <oIsoScene.oFurniture>
  [338] getlocal 12 ............................. <aItemsInRange>
  [340] pusharglist 2 ........................... <oIsoScene.oFurniture, aItemsInRange>
  [342] objcall 1019 ............................ <oIsoScene.oFurniture.getItemWithGreatestHeightOffset(aItemsInRange)>
  [345] setlocal 14 ............................. oItemInWay = oIsoScene.oFurniture.getItemWithGreatestHeightOffset(aItemsInRange)
  [347] getlocal 14 ............................. <oItemInWay>
  [349] pusharglist 1 ........................... <oItemInWay>
  [351] objcall 704 ............................. <oItemInWay.getItemsAllowedOnTop()>
  [354] setlocal 15 ............................. bAllowItemsOnTop = oItemInWay.getItemsAllowedOnTop()
  [356] getlocal 15 ............................. <bAllowItemsOnTop>
  [358] not ..................................... <not bAllowItemsOnTop>
  [359] jmpifz [367] ............................ if not bAllowItemsOnTop then
  [362] pushzero ................................ <0>
  [363] pusharglistnoret 1 ...................... <0>
  [365] extcall 92 .............................. return 0
  [367] getlocal 14 ............................. <oItemInWay>
  [369] pusharglist 1 ........................... <oItemInWay>
  [371] objcall 179 ............................. <oItemInWay.getHeightOffset()>
  [373] getlocal 14 ............................. <oItemInWay>
  [375] pusharglist 1 ........................... <oItemInWay>
  [377] objcall 1037 ............................ <oItemInWay.getHeight()>
  [380] add ..................................... <oItemInWay.getHeightOffset() + oItemInWay.getHeight()>
  [381] setlocal 9 .............................. iTestLow = oItemInWay.getHeightOffset() + oItemInWay.getHeight()
  [383] getlocal 9 .............................. <iTestLow>
  [385] getglobal 88 ............................ <oIsoScene>
  [387] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [389] getobjprop 347 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET>
  [392] gteq .................................... <iTestLow >= oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET>
  [393] jmpifz [401] ............................ if iTestLow >= oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET then
  [396] pushzero ................................ <0>
  [397] pusharglistnoret 1 ...................... <0>
  [399] extcall 92 .............................. return 0
  [401] getlocal 9 .............................. <iTestLow>
  [403] getlocal 14 ............................. <oItemInWay>
  [405] pusharglist 1 ........................... <oItemInWay>
  [407] objcall 1037 ............................ <oItemInWay.getHeight()>
  [410] add ..................................... <iTestLow + oItemInWay.getHeight()>
  [411] setlocal 10 ............................. iTestHi = iTestLow + oItemInWay.getHeight()
  [413] getlocal 14 ............................. <oItemInWay>
  [415] pusharglist 1 ........................... <oItemInWay>
  [417] objcall 729 ............................. <oItemInWay.getGridY()>
  [420] pushint8 1 .............................. <1>
  [422] add ..................................... <oItemInWay.getGridY() + 1>
  [423] setprop 257 ............................. iGridY = oItemInWay.getGridY() + 1
  [426] jmp [455] ............................... next repeat
  [429] getparam 0 .............................. <me>
  [431] getparam 1 .............................. <oSquare>
  [433] getobjprop 154 .......................... <oSquare.iRow>
  [435] getparam 1 .............................. <oSquare>
  [437] getobjprop 155 .......................... <oSquare.iCol>
  [439] getprop 257 ............................. <iGridY>
  [442] getlocal 9 .............................. <iTestLow>
  [444] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, iGridY, iTestLow>
  [446] objcall 1123 ............................ me.setDragPosition(oSquare.iRow, oSquare.iCol, iGridY, iTestLow)
  [449] pushint8 1 .............................. <1>
  [451] pusharglistnoret 1 ...................... <1>
  [453] extcall 92 .............................. return 1
  [455] pushint8 1
  [457] getlocal 11
  [459] add
  [460] setlocal 11
  [462] endrepeat [287]
  [464] pushzero ................................ <0>
  [465] pusharglistnoret 1 ...................... <0>
  [467] extcall 92 .............................. return 0
  [469] ret
end

on placeRugItem me, oSquare
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getparam 0 .............................. <me>
  [  4] getparam 1 .............................. <oSquare>
  [  6] pusharglist 3 ........................... <oIsoScene, me, oSquare>
  [  8] objcall 32 .............................. <oIsoScene.getSquareOffsets(me, oSquare)>
  [ 10] setlocal 0 .............................. aDifList = oIsoScene.getSquareOffsets(me, oSquare)
  [ 12] getglobal 88 ............................ <oIsoScene>
  [ 14] getlocal 0 .............................. <aDifList>
  [ 16] pusharglist 2 ........................... <oIsoScene, aDifList>
  [ 18] objcall 24 .............................. <oIsoScene.squaresAreOverFloor(aDifList)>
  [ 20] setlocal 1 .............................. bOverFloor = oIsoScene.squaresAreOverFloor(aDifList)
  [ 22] getlocal 1 .............................. <bOverFloor>
  [ 24] not ..................................... <not bOverFloor>
  [ 25] jmpifz [ 33] ............................ if not bOverFloor then
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 92 .............................. return 0
  [ 33] getglobal 88 ............................ <oIsoScene>
  [ 35] getchainedprop 122 ...................... <oIsoScene.oRugs>
  [ 37] pusharglist 1 ........................... <oIsoScene.oRugs>
  [ 39] objcall 1051 ............................ <oIsoScene.oRugs.getNextHighestDepth()>
  [ 42] setlocal 2 .............................. _iGridY = oIsoScene.oRugs.getNextHighestDepth()
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 1 .............................. <oSquare>
  [ 48] getobjprop 154 .......................... <oSquare.iRow>
  [ 50] getparam 1 .............................. <oSquare>
  [ 52] getobjprop 155 .......................... <oSquare.iCol>
  [ 54] getlocal 2 .............................. <_iGridY>
  [ 56] pushzero ................................ <0>
  [ 57] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, _iGridY, 0>
  [ 59] objcall 1123 ............................ me.setDragPosition(oSquare.iRow, oSquare.iCol, _iGridY, 0)
  [ 62] pushint8 1 .............................. <1>
  [ 64] pusharglistnoret 1 ...................... <1>
  [ 66] extcall 92 .............................. return 1
  [ 68] ret
end

on rotateItem me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 131 ...................... <oIsoScene.oSelectedItem>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me>
  [  8] objcall 221 ............................. <oIsoScene.oSelectedItem.equals(me)>
  [ 10] jmpifz [ 19] ............................ if oIsoScene.oSelectedItem.equals(me) then
  [ 13] getglobal 88 ............................ <oIsoScene>
  [ 15] pusharglistnoret 1 ...................... <oIsoScene>
  [ 17] objcall 27 .............................. oIsoScene.rotateSelectedItem()
  [ 19] ret
end

on setGridPosition me, _iRow, _iCol, _iGridY, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1167 ............................ me.hidePreview()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_iRow>
  [ 11] setobjprop 154 .......................... me.iRow = _iRow
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 2 .............................. <_iCol>
  [ 17] setobjprop 155 .......................... me.iCol = _iCol
  [ 19] getparam 3 .............................. <_iGridY>
  [ 21] pusharglist 1 ........................... <_iGridY>
  [ 23] extcall 105 ............................. <voidp(_iGridY)>
  [ 25] not ..................................... <not voidp(_iGridY)>
  [ 26] jmpifz [ 36] ............................ if not voidp(_iGridY) then
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 3 .............................. <_iGridY>
  [ 33] setobjprop 257 .......................... me.iGridY = _iGridY
  [ 36] getparam 4 .............................. <_iHeightOffset>
  [ 38] pusharglist 1 ........................... <_iHeightOffset>
  [ 40] extcall 105 ............................. <voidp(_iHeightOffset)>
  [ 42] not ..................................... <not voidp(_iHeightOffset)>
  [ 43] jmpifz [ 53] ............................ if not voidp(_iHeightOffset) then
  [ 46] getparam 0 .............................. <me>
  [ 48] getparam 4 .............................. <_iHeightOffset>
  [ 50] setobjprop 256 .......................... me.iHeightOffset = _iHeightOffset
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglistnoret 1 ...................... <me>
  [ 57] objcall 247 ............................. me.draw()
  [ 59] getparam 0 .............................. <me>
  [ 61] getparam 0 .............................. <me>
  [ 63] getobjprop 154 .......................... <me.iRow>
  [ 65] setobjprop 1225 ......................... me.iLastRow = me.iRow
  [ 68] getparam 0 .............................. <me>
  [ 70] getparam 0 .............................. <me>
  [ 72] getobjprop 155 .......................... <me.iCol>
  [ 74] setobjprop 1226 ......................... me.iLastCol = me.iCol
  [ 77] getparam 0 .............................. <me>
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 257 .......................... <me.iGridY>
  [ 84] setobjprop 1227 ......................... me.iLastGridY = me.iGridY
  [ 87] getparam 0 .............................. <me>
  [ 89] getparam 0 .............................. <me>
  [ 91] getobjprop 256 .......................... <me.iHeightOffset>
  [ 94] setobjprop 1228 ......................... me.iLastHeightOffset = me.iHeightOffset
  [ 97] getglobal 88 ............................ <oIsoScene>
  [ 99] getchainedprop 126 ...................... <oIsoScene.oAvatars>
  [101] pusharglistnoret 1 ...................... <oIsoScene.oAvatars>
  [103] objcall 894 ............................. oIsoScene.oAvatars.updateAll()
  [106] ret
end

on setDragPosition me, _iRow, _iCol, _iGridY, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1167 ............................ me.hidePreview()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_iRow>
  [ 11] setobjprop 154 .......................... me.iRow = _iRow
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 2 .............................. <_iCol>
  [ 17] setobjprop 155 .......................... me.iCol = _iCol
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 4 .............................. <_iHeightOffset>
  [ 23] setobjprop 256 .......................... me.iHeightOffset = _iHeightOffset
  [ 26] getparam 0 .............................. <me>
  [ 28] getparam 3 .............................. <_iGridY>
  [ 30] setobjprop 257 .......................... me.iGridY = _iGridY
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 247 ............................. me.draw()
  [ 39] ret
end

on resetLastPosition me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1225 ......................... <me.iLastRow>
  [  5] pusharglist 1 ........................... <me.iLastRow>
  [  7] extcall 105 ............................. <voidp(me.iLastRow)>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 1226 ......................... <me.iLastCol>
  [ 14] pusharglist 1 ........................... <me.iLastCol>
  [ 16] extcall 105 ............................. <voidp(me.iLastCol)>
  [ 18] or ...................................... <voidp(me.iLastRow) or voidp(me.iLastCol)>
  [ 19] jmpifz [ 27] ............................ if voidp(me.iLastRow) or voidp(me.iLastCol) then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 92 .............................. return 0
  [ 27] getglobal 88 ............................ <oIsoScene>
  [ 29] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1225 ......................... <me.iLastRow>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 1226 ......................... <me.iLastCol>
  [ 41] pusharglist 3 ........................... <oIsoScene.oGrid, me.iLastRow, me.iLastCol>
  [ 43] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iLastRow, me.iLastCol)>
  [ 46] setlocal 0 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iLastRow, me.iLastCol)
  [ 48] getglobal 88 ............................ <oIsoScene>
  [ 50] getlocal 0 .............................. <oSquare>
  [ 52] pusharglist 2 ........................... <oIsoScene, oSquare>
  [ 54] objcall 23 .............................. <oIsoScene.isOverFloor(oSquare)>
  [ 56] not ..................................... <not oIsoScene.isOverFloor(oSquare)>
  [ 57] jmpifz [ 65] ............................ if not oIsoScene.isOverFloor(oSquare) then
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 92 .............................. return 0
  [ 65] getparam 0 .............................. <me>
  [ 67] getparam 0 .............................. <me>
  [ 69] getobjprop 1208 ......................... <me.iLastDirectionIndex>
  [ 72] setobjprop 1207 ......................... me.iDirectionIndex = me.iLastDirectionIndex
  [ 75] getparam 0 .............................. <me>
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 671 ............................ <#aDirections>
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 1207 ......................... <me.iDirectionIndex>
  [ 87] pusharglist 3 ........................... <me, #aDirections, me.iDirectionIndex>
  [ 89] objcall 577 ............................. <me.aDirections[me.iDirectionIndex]>
  [ 92] pusharglistnoret 2 ...................... <me, me.aDirections[me.iDirectionIndex]>
  [ 94] objcall 1125 ............................ me.setDirection(me.aDirections[me.iDirectionIndex])
  [ 97] getparam 0 .............................. <me>
  [ 99] pushzero ................................ <0>
  [100] setobjprop 1202 ......................... me.iFrame = 0
  [103] getparam 0 .............................. <me>
  [105] pushzero ................................ <0>
  [106] pusharglistnoret 2 ...................... <me, 0>
  [108] objcall 264 ............................. me.setDrag(0)
  [111] getparam 0 .............................. <me>
  [113] getparam 0 .............................. <me>
  [115] getobjprop 1225 ......................... <me.iLastRow>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 1226 ......................... <me.iLastCol>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 1227 ......................... <me.iLastGridY>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 1228 ......................... <me.iLastHeightOffset>
  [133] pusharglistnoret 5 ...................... <me, me.iLastRow, me.iLastCol, me.iLastGridY, me.iLastHeightOffset>
  [135] objcall 1124 ............................ me.setGridPosition(me.iLastRow, me.iLastCol, me.iLastGridY, me.iLastHeightOffset)
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 92 .............................. return 1
  [144] ret
end

on existsAtSquare me, oSquare
  [  0] getparam 1 .............................. <oSquare>
  [  2] pusharglist 1 ........................... <oSquare>
  [  4] extcall 105 ............................. <voidp(oSquare)>
  [  6] jmpifz [ 13] ............................ if voidp(oSquare) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 92 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 280 ............................. <me.getOccupiedSquares()>
  [ 20] setlocal 0 .............................. aList = me.getOccupiedSquares()
  [ 22] pushint8 1 .............................. <1>
  [ 24] setlocal 1
  [ 26] getlocal 1
  [ 28] getlocal 0 .............................. <aList>
  [ 30] getobjprop 169 .......................... <aList.count>
  [ 32] lteq
  [ 33] jmpifz [ 68] ............................ repeat with i = 1 to aList.count
  [ 36] getparam 1 .............................. <oSquare>
  [ 38] getlocal 0 .............................. <aList>
  [ 40] getlocal 1 .............................. <i>
  [ 42] pusharglist 2 ........................... <aList, i>
  [ 44] objcall 196 ............................. <aList[i]>
  [ 46] pusharglist 2 ........................... <oSquare, aList[i]>
  [ 48] objcall 221 ............................. <oSquare.equals(aList[i])>
  [ 50] jmpifz [ 59] ............................ if oSquare.equals(aList[i]) then
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 1 ...................... <1>
  [ 57] extcall 92 .............................. return 1
  [ 59] pushint8 1
  [ 61] getlocal 1
  [ 63] add
  [ 64] setlocal 1
  [ 66] endrepeat [ 26]
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 92 .............................. return 0
  [ 73] ret
end

on setDrag me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1130 ......................... <me.bDragging>
  [  5] not ..................................... <not me.bDragging>
  [  6] getparam 1 .............................. <bState>
  [  8] and ..................................... <not me.bDragging and bState>
  [  9] jmpifz [ 50] ............................ if not me.bDragging and bState then
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 154 .......................... <me.iRow>
  [ 18] setobjprop 1225 ......................... me.iLastRow = me.iRow
  [ 21] getparam 0 .............................. <me>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 155 .......................... <me.iCol>
  [ 27] setobjprop 1226 ......................... me.iLastCol = me.iCol
  [ 30] getparam 0 .............................. <me>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 257 .......................... <me.iGridY>
  [ 37] setobjprop 1227 ......................... me.iLastGridY = me.iGridY
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 256 .......................... <me.iHeightOffset>
  [ 47] setobjprop 1228 ......................... me.iLastHeightOffset = me.iHeightOffset
  [ 50] getparam 0 .............................. <me>
  [ 52] getparam 1 .............................. <bState>
  [ 54] setobjprop 1130 ......................... me.bDragging = bState
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 1130 ......................... <me.bDragging>
  [ 62] jmpifz [ 71] ............................ if me.bDragging then
  [ 65] getparam 0 .............................. <me>
  [ 67] pushzero ................................ <0>
  [ 68] setobjprop 1202 ......................... me.iFrame = 0
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 1130 ......................... <me.bDragging>
  [ 76] not ..................................... <not me.bDragging>
  [ 77] jmpifz [ 86] ............................ if not me.bDragging then
  [ 80] getparam 0 .............................. <me>
  [ 82] pushzero ................................ <0>
  [ 83] setobjprop 1202 ......................... me.iFrame = 0
  [ 86] ret
end

on getDrag me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1130 ......................... <me.bDragging>
  [  5] pusharglistnoret 1 ...................... <me.bDragging>
  [  7] extcall 92 .............................. return me.bDragging
  [  9] ret
end

on drop me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 9 .............................. <"drop()">
  [  4] pusharglistnoret 2 ...................... <me, "drop()">
  [  6] objcall 50 .............................. me.debug("drop()")
  [  8] getglobal 88 ............................ <oIsoScene>
  [ 10] getobjprop 147 .......................... <oIsoScene.oMouseSquare>
  [ 12] setlocal 0 .............................. oSquare = oIsoScene.oMouseSquare
  [ 14] getlocal 0 .............................. <oSquare>
  [ 16] pusharglist 1 ........................... <oSquare>
  [ 18] extcall 105 ............................. <voidp(oSquare)>
  [ 20] jmpifz [ 28] ............................ if voidp(oSquare) then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 92 .............................. return 0
  [ 28] getglobal 88 ............................ <oIsoScene>
  [ 30] getlocal 0 .............................. <oSquare>
  [ 32] pusharglist 2 ........................... <oIsoScene, oSquare>
  [ 34] objcall 23 .............................. <oIsoScene.isOverFloor(oSquare)>
  [ 36] not ..................................... <not oIsoScene.isOverFloor(oSquare)>
  [ 37] jmpifz [ 45] ............................ if not oIsoScene.isOverFloor(oSquare) then
  [ 40] pushzero ................................ <0>
  [ 41] pusharglistnoret 1 ...................... <0>
  [ 43] extcall 92 .............................. return 0
  [ 45] getparam 0 .............................. <me>
  [ 47] getlocal 0 .............................. <oSquare>
  [ 49] pusharglist 2 ........................... <me, oSquare>
  [ 51] objcall 279 ............................. <me.placeItem(oSquare)>
  [ 54] setlocal 1 .............................. bSuccess = me.placeItem(oSquare)
  [ 56] getlocal 1 .............................. <bSuccess>
  [ 58] jmpifz [ 96] ............................ if bSuccess then
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1207 ......................... <me.iDirectionIndex>
  [ 68] setobjprop 1208 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [ 71] getparam 0 .............................. <me>
  [ 73] getlocal 0 .............................. <oSquare>
  [ 75] getobjprop 154 .......................... <oSquare.iRow>
  [ 77] getlocal 0 .............................. <oSquare>
  [ 79] getobjprop 155 .......................... <oSquare.iCol>
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 257 .......................... <me.iGridY>
  [ 86] getparam 0 .............................. <me>
  [ 88] getobjprop 256 .......................... <me.iHeightOffset>
  [ 91] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, me.iGridY, me.iHeightOffset>
  [ 93] objcall 1124 ............................ me.setGridPosition(oSquare.iRow, oSquare.iCol, me.iGridY, me.iHeightOffset)
  [ 96] getlocal 1 .............................. <bSuccess>
  [ 98] pusharglistnoret 1 ...................... <bSuccess>
  [100] extcall 92 .............................. return bSuccess
  [102] ret
end

on destroy me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 1212 ......................... <me.iPreviewSprite>
  [ 16] pusharglistnoret 2 ...................... <_aSprites, me.iPreviewSprite>
  [ 18] objcall 133 ............................. _aSprites.add(me.iPreviewSprite)
  [ 20] getglobal 88 ............................ <oIsoScene>
  [ 22] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [ 24] getlocal 0 .............................. <_aSprites>
  [ 26] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, _aSprites>
  [ 28] objcall 586 ............................. oIsoScene.oSpriteManager.returnPooledSprites(_aSprites)
  [ 31] getmovieprop 132 ........................ <the actorList>
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 2 ...................... <the actorList, me>
  [ 37] objcall 330 ............................. (the actorList).deleteOne(me)
  [ 40] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 697 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 169
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 63] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 196
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <i>
  [ 39] pusharglist 1 ........................... <i>
  [ 41] extcall 451 ............................. <sprite(i)>
  [ 44] getlocal 1 .............................. <i>
  [ 46] pusharglist 1 ........................... <i>
  [ 48] extcall 451 ............................. <sprite(i)>
  [ 51] getobjprop 464 .......................... <sprite(i).visible>
  [ 54] not ..................................... <not sprite(i).visible>
  [ 55] setobjprop 464 .......................... sprite(i).visible = not sprite(i).visible
  [ 58] pushint8 1
  [ 60] add
  [ 61] endrepeat [ 19]
  [ 63] pop 3
  [ 65] ret
end

on getSprites me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aSprites = []
  [  5] getparam 0 .............................. <me>
  [  7] pushsymb 1229 ........................... <#aDrawOrder>
  [ 10] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 12] objcall 169 ............................. <me.aDrawOrder.count>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] pushint8 1 .............................. <1>
  [ 20] gteq
  [ 21] jmpifz [ 76] ............................ repeat with i = me.aDrawOrder.count down to 1
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 1229 ..................... <me.aDrawOrder>
  [ 29] getlocal 1 .............................. <i>
  [ 31] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 33] objcall 899 ............................. <me.aDrawOrder.getPropAt(i)>
  [ 36] setlocal 2 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 38] getparam 0 .............................. <me>
  [ 40] pushsymb 1229 ........................... <#aDrawOrder>
  [ 43] getlocal 1 .............................. <i>
  [ 45] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 47] objcall 577 ............................. <me.aDrawOrder[i]>
  [ 50] setlocal 3 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 52] getlocal 3 .............................. <aOrderAttributes>
  [ 54] getobjprop 451 .......................... <aOrderAttributes.sprite>
  [ 57] setlocal 4 .............................. iSprite = aOrderAttributes.sprite
  [ 59] getlocal 0 .............................. <_aSprites>
  [ 61] getlocal 4 .............................. <iSprite>
  [ 63] pusharglistnoret 2 ...................... <_aSprites, iSprite>
  [ 65] objcall 133 ............................. _aSprites.add(iSprite)
  [ 67] pushint8 -1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 16]
  [ 76] getlocal 0 .............................. <_aSprites>
  [ 78] pusharglistnoret 1 ...................... <_aSprites>
  [ 80] extcall 92 .............................. return _aSprites
  [ 82] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 777 .......................... <me.oAction>
  [  5] pusharglist 1 ........................... <me.oAction>
  [  7] extcall 105 ............................. <voidp(me.oAction)>
  [  9] not ..................................... <not voidp(me.oAction)>
  [ 10] jmpifz [ 22] ............................ if not voidp(me.oAction) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 777 ...................... <me.oAction>
  [ 18] pusharglistnoret 1 ...................... <me.oAction>
  [ 20] objcall 7 ............................... me.oAction.stepFrame()
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 1201 ......................... <me.bAnimate>
  [ 27] not ..................................... <not me.bAnimate>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 1130 ......................... <me.bDragging>
  [ 33] not ..................................... <not me.bDragging>
  [ 34] and ..................................... <not me.bAnimate and not me.bDragging>
  [ 35] jmpifz [ 42] ............................ if not me.bAnimate and not me.bDragging then
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 92 .............................. return 
  [ 42] getmovieprop 89 ......................... <the milliSeconds>
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 1131 ......................... <me.iTimer>
  [ 49] sub ..................................... <the milliSeconds - me.iTimer>
  [ 50] pushint16 1000 .......................... <1000>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 84 ........................... <me.iFPS>
  [ 57] div ..................................... <1000 / me.iFPS>
  [ 58] gteq .................................... <(the milliSeconds - me.iTimer) >= (1000 / me.iFPS)>
  [ 59] jmpifz [ 84] ............................ if (the milliSeconds - me.iTimer) >= (1000 / me.iFPS) then
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 1201 ......................... <me.bAnimate>
  [ 67] jmpifz [ 77] ............................ if me.bAnimate then
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglistnoret 1 ...................... <me>
  [ 74] objcall 1171 ............................ me.animate()
  [ 77] getparam 0 .............................. <me>
  [ 79] getmovieprop 89 ......................... <the milliSeconds>
  [ 81] setobjprop 1131 ......................... me.iTimer = the milliSeconds
  [ 84] ret
end

on animate me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 1180 ............................ me.nextFrame(1)
  [  9] ret
end

on getHeightSquare me, oBaseSquare
  [  0] getparam 1 .............................. <oBaseSquare>
  [  2] getobjprop 154 .......................... <oBaseSquare.iRow>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 257 .......................... <me.iGridY>
  [  9] sub ..................................... <oBaseSquare.iRow - me.iGridY>
  [ 10] setlocal 0 .............................. _iRow = oBaseSquare.iRow - me.iGridY
  [ 12] getparam 1 .............................. <oBaseSquare>
  [ 14] getobjprop 155 .......................... <oBaseSquare.iCol>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 257 .......................... <me.iGridY>
  [ 21] sub ..................................... <oBaseSquare.iCol - me.iGridY>
  [ 22] setlocal 1 .............................. _iCol = oBaseSquare.iCol - me.iGridY
  [ 24] getglobal 88 ............................ <oIsoScene>
  [ 26] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 28] getlocal 0 .............................. <_iRow>
  [ 30] getlocal 1 .............................. <_iCol>
  [ 32] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 34] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 37] setlocal 2 .............................. oHeightSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 39] getlocal 2 .............................. <oHeightSquare>
  [ 41] pusharglist 1 ........................... <oHeightSquare>
  [ 43] extcall 105 ............................. <voidp(oHeightSquare)>
  [ 45] jmpifz [ 57] ............................ if voidp(oHeightSquare) then / else
  [ 48] getparam 1 .............................. <oBaseSquare>
  [ 50] pusharglistnoret 1 ...................... <oBaseSquare>
  [ 52] extcall 92 .............................. return oBaseSquare
  [ 54] jmp [ 63]
  [ 57] getlocal 2 .............................. <oHeightSquare>
  [ 59] pusharglistnoret 1 ...................... <oHeightSquare>
  [ 61] extcall 92 .............................. return oHeightSquare
  [ 63] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 247 ............................. me.draw()
  [  6] ret
end

on getSquare me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 154 .......................... <me.iRow>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 155 .......................... <me.iCol>
  [ 12] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [ 14] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [ 17] pusharglistnoret 1 ...................... <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [ 19] extcall 92 .............................. return oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [ 21] ret
end

on draw me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 183 ............................. <me.getSquare()>
  [  6] setlocal 0 .............................. oSquare = me.getSquare()
  [  8] getlocal 0 .............................. <oSquare>
  [ 10] pusharglist 1 ........................... <oSquare>
  [ 12] extcall 105 ............................. <voidp(oSquare)>
  [ 14] jmpifz [ 21] ............................ if voidp(oSquare) then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 92 .............................. return 
  [ 21] getlocal 0 .............................. <oSquare>
  [ 23] setlocal 1 .............................. oHeightSquare = oSquare
  [ 25] getlocal 1 .............................. <oHeightSquare>
  [ 27] pusharglist 1 ........................... <oHeightSquare>
  [ 29] objcall 548 ............................. <oHeightSquare.getViewLeft()>
  [ 32] setlocal 2 .............................. oLeft = oHeightSquare.getViewLeft()
  [ 34] getlocal 1 .............................. <oHeightSquare>
  [ 36] pusharglist 1 ........................... <oHeightSquare>
  [ 38] objcall 549 ............................. <oHeightSquare.getViewRight()>
  [ 41] setlocal 3 .............................. oRight = oHeightSquare.getViewRight()
  [ 43] pushint8 1 .............................. <1>
  [ 45] setlocal 4
  [ 47] getlocal 4
  [ 49] getparam 0 .............................. <me>
  [ 51] pushsymb 1229 ........................... <#aDrawOrder>
  [ 54] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 56] objcall 169 ............................. <me.aDrawOrder.count>
  [ 58] lteq
  [ 59] jmpifz [450] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 62] getparam 0 .............................. <me>
  [ 64] getchainedprop 1229 ..................... <me.aDrawOrder>
  [ 67] getlocal 4 .............................. <i>
  [ 69] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 71] objcall 899 ............................. <me.aDrawOrder.getPropAt(i)>
  [ 74] setlocal 5 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 76] getparam 0 .............................. <me>
  [ 78] pushsymb 1229 ........................... <#aDrawOrder>
  [ 81] getlocal 4 .............................. <i>
  [ 83] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 85] objcall 577 ............................. <me.aDrawOrder[i]>
  [ 88] setlocal 6 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 90] getlocal 6 .............................. <aOrderAttributes>
  [ 92] getobjprop 451 .......................... <aOrderAttributes.sprite>
  [ 95] setlocal 7 .............................. iSprite = aOrderAttributes.sprite
  [ 97] getlocal 7 .............................. <iSprite>
  [ 99] pusharglist 1 ........................... <iSprite>
  [101] extcall 451 ............................. <sprite(iSprite)>
  [104] pushzero ................................ <0>
  [105] setobjprop 464 .......................... sprite(iSprite).visible = 0
  [108] getlocal 5 .............................. <sOrder>
  [110] pushcons 10 ............................. <"sd">
  [112] eq ...................................... <sOrder = "sd">
  [113] getparam 0 .............................. <me>
  [115] getobjprop 256 .......................... <me.iHeightOffset>
  [118] pushzero ................................ <0>
  [119] gt ...................................... <me.iHeightOffset > 0>
  [120] and ..................................... <(sOrder = "sd") and (me.iHeightOffset > 0)>
  [121] jmpifz [127] ............................ if (sOrder = "sd") and (me.iHeightOffset > 0) then
  [124] jmp [440] ............................... next repeat
  [127] getlocal 6 .............................. <aOrderAttributes>
  [129] getobjprop 464 .......................... <aOrderAttributes.visible>
  [132] pushzero ................................ <0>
  [133] eq ...................................... <aOrderAttributes.visible = 0>
  [134] jmpifz [140] ............................ if aOrderAttributes.visible = 0 then
  [137] jmp [440] ............................... next repeat
  [140] getparam 0 .............................. <me>
  [142] getlocal 5 .............................. <sOrder>
  [144] getparam 0 .............................. <me>
  [146] getobjprop 249 .......................... <me.iDirection>
  [148] pusharglist 3 ........................... <me, sOrder, me.iDirection>
  [150] objcall 1175 ............................ <me.getMemberDrawProps(sOrder, me.iDirection)>
  [153] setlocal 8 .............................. aMemberProps = me.getMemberDrawProps(sOrder, me.iDirection)
  [155] getparam 0 .............................. <me>
  [157] getlocal 5 .............................. <sOrder>
  [159] getlocal 0 .............................. <oSquare>
  [161] pusharglist 3 ........................... <me, sOrder, oSquare>
  [163] objcall 731 ............................. <me.calculateZOrder(sOrder, oSquare)>
  [166] setlocal 9 .............................. iZ = me.calculateZOrder(sOrder, oSquare)
  [168] getlocal 7 .............................. <iSprite>
  [170] pusharglist 1 ........................... <iSprite>
  [172] extcall 451 ............................. <sprite(iSprite)>
  [175] getlocal 9 .............................. <iZ>
  [177] setobjprop 482 .......................... sprite(iSprite).locZ = iZ
  [180] getlocal 2 .............................. <oLeft>
  [182] getobjprop 300 .......................... <oLeft.locV>
  [185] getparam 0 .............................. <me>
  [187] getobjprop 256 .......................... <me.iHeightOffset>
  [190] sub ..................................... <oLeft.locV - me.iHeightOffset>
  [191] getlocal 6 .............................. <aOrderAttributes>
  [193] getobjprop 1233 ......................... <aOrderAttributes.vShift>
  [196] sub ..................................... <oLeft.locV - me.iHeightOffset - aOrderAttributes.vShift>
  [197] setlocal 10 ............................. iLocV = oLeft.locV - me.iHeightOffset - aOrderAttributes.vShift
  [199] getlocal 8 .............................. <aMemberProps>
  [201] getobjprop 454 .......................... <aMemberProps.member>
  [204] setlocal 11 ............................. oMember = aMemberProps.member
  [206] getlocal 11 ............................. <oMember>
  [208] pusharglist 1 ........................... <oMember>
  [210] extcall 105 ............................. <voidp(oMember)>
  [212] jmpifz [291] ............................ if voidp(oMember) then
  [215] getlocal 7 .............................. <iSprite>
  [217] pusharglist 1 ........................... <iSprite>
  [219] extcall 451 ............................. <sprite(iSprite)>
  [222] getobjprop 609 .......................... <sprite(iSprite).flipH>
  [225] jmpifz [246] ............................ if sprite(iSprite).flipH then / else
  [228] getlocal 7 .............................. <iSprite>
  [230] pusharglist 1 ........................... <iSprite>
  [232] extcall 451 ............................. <sprite(iSprite)>
  [235] getlocal 3 .............................. <oRight>
  [237] getobjprop 299 .......................... <oRight.locH>
  [240] setobjprop 299 .......................... sprite(iSprite).locH = oRight.locH
  [243] jmp [261]
  [246] getlocal 7 .............................. <iSprite>
  [248] pusharglist 1 ........................... <iSprite>
  [250] extcall 451 ............................. <sprite(iSprite)>
  [253] getlocal 2 .............................. <oLeft>
  [255] getobjprop 299 .......................... <oLeft.locH>
  [258] setobjprop 299 .......................... sprite(iSprite).locH = oLeft.locH
  [261] getlocal 7 .............................. <iSprite>
  [263] pusharglist 1 ........................... <iSprite>
  [265] extcall 451 ............................. <sprite(iSprite)>
  [268] getlocal 10 ............................. <iLocV>
  [270] setobjprop 300 .......................... sprite(iSprite).locV = iLocV
  [273] getlocal 7 .............................. <iSprite>
  [275] pusharglist 1 ........................... <iSprite>
  [277] extcall 451 ............................. <sprite(iSprite)>
  [280] getparam 0 .............................. <me>
  [282] getobjprop 1106 ......................... <me.bVisible>
  [285] setobjprop 464 .......................... sprite(iSprite).visible = me.bVisible
  [288] jmp [440] ............................... next repeat
  [291] getlocal 8 .............................. <aMemberProps>
  [293] getobjprop 1234 ......................... <aMemberProps.flip>
  [296] setlocal 12 ............................. bFlip = aMemberProps.flip
  [298] getlocal 7 .............................. <iSprite>
  [300] pusharglist 1 ........................... <iSprite>
  [302] extcall 451 ............................. <sprite(iSprite)>
  [305] getlocal 11 ............................. <oMember>
  [307] setobjprop 454 .......................... sprite(iSprite).member = oMember
  [310] getlocal 7 .............................. <iSprite>
  [312] pusharglist 1 ........................... <iSprite>
  [314] extcall 451 ............................. <sprite(iSprite)>
  [317] getlocal 2 .............................. <oLeft>
  [319] getobjprop 299 .......................... <oLeft.locH>
  [322] setobjprop 299 .......................... sprite(iSprite).locH = oLeft.locH
  [325] getlocal 7 .............................. <iSprite>
  [327] pusharglist 1 ........................... <iSprite>
  [329] extcall 451 ............................. <sprite(iSprite)>
  [332] getlocal 10 ............................. <iLocV>
  [334] setobjprop 300 .......................... sprite(iSprite).locV = iLocV
  [337] getlocal 7 .............................. <iSprite>
  [339] pusharglist 1 ........................... <iSprite>
  [341] extcall 451 ............................. <sprite(iSprite)>
  [344] pushzero ................................ <0>
  [345] setobjprop 609 .......................... sprite(iSprite).flipH = 0
  [348] getlocal 7 .............................. <iSprite>
  [350] pusharglist 1 ........................... <iSprite>
  [352] extcall 451 ............................. <sprite(iSprite)>
  [355] getlocal 6 .............................. <aOrderAttributes>
  [357] getobjprop 462 .......................... <aOrderAttributes.ink>
  [360] setobjprop 462 .......................... sprite(iSprite).ink = aOrderAttributes.ink
  [363] getlocal 7 .............................. <iSprite>
  [365] pusharglist 1 ........................... <iSprite>
  [367] extcall 451 ............................. <sprite(iSprite)>
  [370] getlocal 6 .............................. <aOrderAttributes>
  [372] getobjprop 463 .......................... <aOrderAttributes.blend>
  [375] setobjprop 463 .......................... sprite(iSprite).blend = aOrderAttributes.blend
  [378] getlocal 7 .............................. <iSprite>
  [380] pusharglist 1 ........................... <iSprite>
  [382] extcall 451 ............................. <sprite(iSprite)>
  [385] getlocal 6 .............................. <aOrderAttributes>
  [387] getobjprop 981 .......................... <aOrderAttributes.bgColor>
  [390] setobjprop 981 .......................... sprite(iSprite).bgColor = aOrderAttributes.bgColor
  [393] getlocal 12 ............................. <bFlip>
  [395] jmpifz [425] ............................ if bFlip then
  [398] getlocal 7 .............................. <iSprite>
  [400] pusharglist 1 ........................... <iSprite>
  [402] extcall 451 ............................. <sprite(iSprite)>
  [405] pushint8 1 .............................. <1>
  [407] setobjprop 609 .......................... sprite(iSprite).flipH = 1
  [410] getlocal 7 .............................. <iSprite>
  [412] pusharglist 1 ........................... <iSprite>
  [414] extcall 451 ............................. <sprite(iSprite)>
  [417] getlocal 3 .............................. <oRight>
  [419] getobjprop 299 .......................... <oRight.locH>
  [422] setobjprop 299 .......................... sprite(iSprite).locH = oRight.locH
  [425] getlocal 7 .............................. <iSprite>
  [427] pusharglist 1 ........................... <iSprite>
  [429] extcall 451 ............................. <sprite(iSprite)>
  [432] getparam 0 .............................. <me>
  [434] getobjprop 1106 ......................... <me.bVisible>
  [437] setobjprop 464 .......................... sprite(iSprite).visible = me.bVisible
  [440] pushint8 1
  [442] getlocal 4
  [444] add
  [445] setlocal 4
  [447] endrepeat [ 47]
  [450] ret
end

on setVisible me, _bVisible
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDraw = 0
  [  3] getparam 0 .............................. <me>
  [  5] getobjprop 1106 ......................... <me.bVisible>
  [  8] getparam 1 .............................. <_bVisible>
  [ 10] nteq .................................... <me.bVisible <> _bVisible>
  [ 11] jmpifz [ 18] ............................ if me.bVisible <> _bVisible then
  [ 14] pushint8 1 .............................. <1>
  [ 16] setlocal 0 .............................. bDraw = 1
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <_bVisible>
  [ 22] setobjprop 1106 ......................... me.bVisible = _bVisible
  [ 25] getlocal 0 .............................. <bDraw>
  [ 27] jmpifz [ 36] ............................ if bDraw then
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 1 ...................... <me>
  [ 34] objcall 247 ............................. me.draw()
  [ 36] ret
end

on getVisible me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1106 ......................... <me.bVisible>
  [  5] pusharglistnoret 1 ...................... <me.bVisible>
  [  7] extcall 92 .............................. return me.bVisible
  [  9] ret
end

on getMemberDrawProps me, sOrder, iDir
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 130 ............................. <VOID>
  [  4] setlocal 0 .............................. oMember = VOID
  [  6] getparam 0 .............................. <me>
  [  8] getparam 1 .............................. <sOrder>
  [ 10] getparam 2 .............................. <iDir>
  [ 12] pusharglist 3 ........................... <me, sOrder, iDir>
  [ 14] objcall 1176 ............................ <me.buildImageName(sOrder, iDir)>
  [ 17] setlocal 1 .............................. sName = me.buildImageName(sOrder, iDir)
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 2 .............................. bFlip = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 1241 ........................... <#aAlias>
  [ 27] getlocal 1 .............................. <sName>
  [ 29] pusharglist 3 ........................... <me, #aAlias, sName>
  [ 31] objcall 577 ............................. <me.aAlias[sName]>
  [ 34] setlocal 3 .............................. aMemberAlias = me.aAlias[sName]
  [ 36] getlocal 3 .............................. <aMemberAlias>
  [ 38] pusharglist 1 ........................... <aMemberAlias>
  [ 40] extcall 105 ............................. <voidp(aMemberAlias)>
  [ 42] not ..................................... <not voidp(aMemberAlias)>
  [ 43] jmpifz [ 69] ............................ if not voidp(aMemberAlias) then
  [ 46] getlocal 3 .............................. <aMemberAlias>
  [ 48] getobjprop 1242 ......................... <aMemberAlias.asset>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 253 .......................... <me.sCastLib>
  [ 55] pusharglist 2 ........................... <aMemberAlias.asset, me.sCastLib>
  [ 57] extcall 454 ............................. <member(aMemberAlias.asset, me.sCastLib)>
  [ 60] setlocal 0 .............................. oMember = member(aMemberAlias.asset, me.sCastLib)
  [ 62] getlocal 3 .............................. <aMemberAlias>
  [ 64] getobjprop 1234 ......................... <aMemberAlias.flip>
  [ 67] setlocal 2 .............................. bFlip = aMemberAlias.flip
  [ 69] getlocal 0 .............................. <oMember>
  [ 71] pusharglist 1 ........................... <oMember>
  [ 73] extcall 105 ............................. <voidp(oMember)>
  [ 75] getparam 1 .............................. <sOrder>
  [ 77] pushcons 10 ............................. <"sd">
  [ 79] eq ...................................... <sOrder = "sd">
  [ 80] and ..................................... <voidp(oMember) and (sOrder = "sd")>
  [ 81] jmpifz [143] ............................ if voidp(oMember) and (sOrder = "sd") then
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 252 .......................... <me.sImageBase>
  [ 88] pushcons 11 ............................. <"_sd_">
  [ 90] joinstr ................................. <me.sImageBase & "_sd_">
  [ 91] getparam 2 .............................. <iDir>
  [ 93] joinstr ................................. <me.sImageBase & "_sd_" & iDir>
  [ 94] setlocal 4 .............................. sShadowName = me.sImageBase & "_sd_" & iDir
  [ 96] getparam 0 .............................. <me>
  [ 98] pushsymb 1241 ........................... <#aAlias>
  [101] getlocal 4 .............................. <sShadowName>
  [103] pusharglist 3 ........................... <me, #aAlias, sShadowName>
  [105] objcall 577 ............................. <me.aAlias[sShadowName]>
  [108] setlocal 3 .............................. aMemberAlias = me.aAlias[sShadowName]
  [110] getlocal 3 .............................. <aMemberAlias>
  [112] pusharglist 1 ........................... <aMemberAlias>
  [114] extcall 105 ............................. <voidp(aMemberAlias)>
  [116] not ..................................... <not voidp(aMemberAlias)>
  [117] jmpifz [143] ............................ if not voidp(aMemberAlias) then
  [120] getlocal 3 .............................. <aMemberAlias>
  [122] getobjprop 1242 ......................... <aMemberAlias.asset>
  [125] getparam 0 .............................. <me>
  [127] getobjprop 253 .......................... <me.sCastLib>
  [129] pusharglist 2 ........................... <aMemberAlias.asset, me.sCastLib>
  [131] extcall 454 ............................. <member(aMemberAlias.asset, me.sCastLib)>
  [134] setlocal 0 .............................. oMember = member(aMemberAlias.asset, me.sCastLib)
  [136] getlocal 3 .............................. <aMemberAlias>
  [138] getobjprop 1234 ......................... <aMemberAlias.flip>
  [141] setlocal 2 .............................. bFlip = aMemberAlias.flip
  [143] getlocal 0 .............................. <oMember>
  [145] pusharglist 1 ........................... <oMember>
  [147] extcall 105 ............................. <voidp(oMember)>
  [149] jmpifz [166] ............................ if voidp(oMember) then
  [152] getparam 0 .............................. <me>
  [154] pushsymb 1197 ........................... <#aAssets>
  [157] getlocal 1 .............................. <sName>
  [159] pusharglist 3 ........................... <me, #aAssets, sName>
  [161] objcall 577 ............................. <me.aAssets[sName]>
  [164] setlocal 0 .............................. oMember = me.aAssets[sName]
  [166] pushsymb 454 ............................ <#member>
  [169] getlocal 0 .............................. <oMember>
  [171] pushsymb 1234 ........................... <#flip>
  [174] getlocal 2 .............................. <bFlip>
  [176] pusharglist 4 ........................... <[#member: oMember, #flip: bFlip]>
  [178] pushproplist ............................ <[#member: oMember, #flip: bFlip]>
  [179] setlocal 5 .............................. aProps = [#member: oMember, #flip: bFlip]
  [181] getlocal 5 .............................. <aProps>
  [183] pusharglistnoret 1 ...................... <aProps>
  [185] extcall 92 .............................. return aProps
  [187] ret
end

on buildImageName me, sOrder, iDir
  [  0] getparam 1 .............................. <sOrder>
  [  2] pushcons 10 ............................. <"sd">
  [  4] eq ...................................... <sOrder = "sd">
  [  5] jmpifz [ 22] ............................ if sOrder = "sd" then
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 252 .......................... <me.sImageBase>
  [ 12] pushcons 12 ............................. <"_">
  [ 14] joinstr ................................. <me.sImageBase & "_">
  [ 15] getparam 1 .............................. <sOrder>
  [ 17] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 18] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder>
  [ 20] extcall 92 .............................. return me.sImageBase & "_" & sOrder
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 253 .......................... <me.sCastLib>
  [ 26] pushcons 0 .............................. <EMPTY>
  [ 28] eq ...................................... <me.sCastLib = EMPTY>
  [ 29] jmpifz [ 78] ............................ if me.sCastLib = EMPTY then / else
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 252 .......................... <me.sImageBase>
  [ 36] pushcons 12 ............................. <"_">
  [ 38] joinstr ................................. <me.sImageBase & "_">
  [ 39] getparam 1 .............................. <sOrder>
  [ 41] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 42] pushcons 12 ............................. <"_">
  [ 44] joinstr ................................. <me.sImageBase & "_" & sOrder & "_">
  [ 45] pushcons 13 ............................. <"0">
  [ 47] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0">
  [ 48] pushcons 12 ............................. <"_">
  [ 50] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_">
  [ 51] getparam 2 .............................. <iDir>
  [ 53] pusharglist 1 ........................... <iDir>
  [ 55] extcall 246 ............................. <string(iDir)>
  [ 57] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir)>
  [ 58] pushcons 12 ............................. <"_">
  [ 60] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_">
  [ 61] getparam 0 .............................. <me>
  [ 63] getobjprop 1202 ......................... <me.iFrame>
  [ 66] pusharglist 1 ........................... <me.iFrame>
  [ 68] extcall 246 ............................. <string(me.iFrame)>
  [ 70] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)>
  [ 71] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)>
  [ 73] extcall 92 .............................. return me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)
  [ 75] jmp [147]
  [ 78] getparam 0 .............................. <me>
  [ 80] getobjprop 252 .......................... <me.sImageBase>
  [ 82] pushcons 12 ............................. <"_">
  [ 84] joinstr ................................. <me.sImageBase & "_">
  [ 85] getparam 1 .............................. <sOrder>
  [ 87] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 88] pushcons 12 ............................. <"_">
  [ 90] joinstr ................................. <me.sImageBase & "_" & sOrder & "_">
  [ 91] pushcons 13 ............................. <"0">
  [ 93] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0">
  [ 94] pushcons 12 ............................. <"_">
  [ 96] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_">
  [ 97] getparam 0 .............................. <me>
  [ 99] getobjprop 442 .......................... <me.iWidth>
  [102] pusharglist 1 ........................... <me.iWidth>
  [104] extcall 246 ............................. <string(me.iWidth)>
  [106] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth)>
  [107] pushcons 12 ............................. <"_">
  [109] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_">
  [110] getparam 0 .............................. <me>
  [112] getobjprop 472 .......................... <me.iDepth>
  [115] pusharglist 1 ........................... <me.iDepth>
  [117] extcall 246 ............................. <string(me.iDepth)>
  [119] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth)>
  [120] pushcons 12 ............................. <"_">
  [122] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_">
  [123] getparam 2 .............................. <iDir>
  [125] pusharglist 1 ........................... <iDir>
  [127] extcall 246 ............................. <string(iDir)>
  [129] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir)>
  [130] pushcons 12 ............................. <"_">
  [132] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_">
  [133] getparam 0 .............................. <me>
  [135] getobjprop 1202 ......................... <me.iFrame>
  [138] pusharglist 1 ........................... <me.iFrame>
  [140] extcall 246 ............................. <string(me.iFrame)>
  [142] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)>
  [143] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)>
  [145] extcall 92 .............................. return me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)
  [147] ret
end

on setHeight me, _iHeight
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeight>
  [  4] setobjprop 248 .......................... me.iHeight = _iHeight
  [  6] ret
end

on setWidth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 456 .......................... <me.width>
  [  5] pushint8 1 .............................. <1>
  [  7] inv ..................................... <-1>
  [  8] eq ...................................... <me.width = -1>
  [  9] jmpifz [ 23] ............................ if me.width = -1 then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 442 .......................... me.iWidth = 1
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 92 .............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 1197 ........................... <#aAssets>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 3 ........................... <me, #aAssets, 1>
  [ 32] objcall 577 ............................. <me.aAssets[1]>
  [ 35] setlocal 0 .............................. oMember = me.aAssets[1]
  [ 37] getlocal 0 .............................. <oMember>
  [ 39] getobjprop 625 .......................... <oMember.name>
  [ 42] setlocal 1 .............................. sName = oMember.name
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 0 .............................. <me>
  [ 48] getlocal 1 .............................. <sName>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 456 .......................... <me.width>
  [ 55] pusharglist 3 ........................... <me, sName, me.width>
  [ 57] objcall 1188 ............................ <me.getParamFromName(sName, me.width)>
  [ 60] pusharglist 1 ........................... <me.getParamFromName(sName, me.width)>
  [ 62] extcall 107 ............................. <integer(me.getParamFromName(sName, me.width))>
  [ 64] setobjprop 442 .......................... me.iWidth = integer(me.getParamFromName(sName, me.width))
  [ 67] ret
end

on setDepth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1199 ......................... <me.depth>
  [  5] pushint8 1 .............................. <1>
  [  7] inv ..................................... <-1>
  [  8] eq ...................................... <me.depth = -1>
  [  9] jmpifz [ 23] ............................ if me.depth = -1 then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 472 .......................... me.iDepth = 1
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 92 .............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 1197 ........................... <#aAssets>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 3 ........................... <me, #aAssets, 1>
  [ 32] objcall 577 ............................. <me.aAssets[1]>
  [ 35] setlocal 0 .............................. oMember = me.aAssets[1]
  [ 37] getlocal 0 .............................. <oMember>
  [ 39] getobjprop 625 .......................... <oMember.name>
  [ 42] setlocal 1 .............................. sName = oMember.name
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 0 .............................. <me>
  [ 48] getlocal 1 .............................. <sName>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 1199 ......................... <me.depth>
  [ 55] pusharglist 3 ........................... <me, sName, me.depth>
  [ 57] objcall 1188 ............................ <me.getParamFromName(sName, me.depth)>
  [ 60] pusharglist 1 ........................... <me.getParamFromName(sName, me.depth)>
  [ 62] extcall 107 ............................. <integer(me.getParamFromName(sName, me.depth))>
  [ 64] setobjprop 472 .......................... me.iDepth = integer(me.getParamFromName(sName, me.depth))
  [ 67] ret
end

on setNumFrames me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iHighestFrame = 0
  [  3] pushint8 1 .............................. <1>
  [  5] setlocal 1
  [  7] getlocal 1
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 1197 ........................... <#aAssets>
  [ 14] pusharglist 2 ........................... <me, #aAssets>
  [ 16] objcall 169 ............................. <me.aAssets.count>
  [ 18] lteq
  [ 19] jmpifz [ 80] ............................ repeat with i = 1 to me.aAssets.count
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 1197 ..................... <me.aAssets>
  [ 27] getlocal 1 .............................. <i>
  [ 29] pusharglist 2 ........................... <me.aAssets, i>
  [ 31] objcall 899 ............................. <me.aAssets.getPropAt(i)>
  [ 34] setlocal 2 .............................. sName = me.aAssets.getPropAt(i)
  [ 36] getparam 0 .............................. <me>
  [ 38] getlocal 2 .............................. <sName>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 1200 ......................... <me.frame>
  [ 45] pusharglist 3 ........................... <me, sName, me.frame>
  [ 47] objcall 1188 ............................ <me.getParamFromName(sName, me.frame)>
  [ 50] pusharglist 1 ........................... <me.getParamFromName(sName, me.frame)>
  [ 52] extcall 107 ............................. <integer(me.getParamFromName(sName, me.frame))>
  [ 54] setprop 1202 ............................ iFrame = integer(me.getParamFromName(sName, me.frame))
  [ 57] getprop 1202 ............................ <iFrame>
  [ 60] getlocal 0 .............................. <iHighestFrame>
  [ 62] gt ...................................... <iFrame > iHighestFrame>
  [ 63] jmpifz [ 71] ............................ if iFrame > iHighestFrame then
  [ 66] getprop 1202 ............................ <iFrame>
  [ 69] setlocal 0 .............................. iHighestFrame = iFrame
  [ 71] pushint8 1
  [ 73] getlocal 1
  [ 75] add
  [ 76] setlocal 1
  [ 78] endrepeat [  7]
  [ 80] getparam 0 .............................. <me>
  [ 82] getlocal 0 .............................. <iHighestFrame>
  [ 84] setobjprop 684 .......................... me.iNumFrames = iHighestFrame
  [ 87] ret
end

on nextFrame me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1202 ......................... <me.iFrame>
  [  5] getparam 1 .............................. <iDir>
  [  7] add ..................................... <me.iFrame + iDir>
  [  8] setlocal 0 .............................. iNextFrame = me.iFrame + iDir
  [ 10] getlocal 0 .............................. <iNextFrame>
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 684 .......................... <me.iNumFrames>
  [ 17] gt ...................................... <iNextFrame > me.iNumFrames>
  [ 18] jmpifz [ 24] ............................ if iNextFrame > me.iNumFrames then
  [ 21] pushzero ................................ <0>
  [ 22] setlocal 0 .............................. iNextFrame = 0
  [ 24] getlocal 0 .............................. <iNextFrame>
  [ 26] pushzero ................................ <0>
  [ 27] lt ...................................... <iNextFrame < 0>
  [ 28] jmpifz [ 38] ............................ if iNextFrame < 0 then
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 684 .......................... <me.iNumFrames>
  [ 36] setlocal 0 .............................. iNextFrame = me.iNumFrames
  [ 38] getparam 0 .............................. <me>
  [ 40] getlocal 0 .............................. <iNextFrame>
  [ 42] setobjprop 1202 ......................... me.iFrame = iNextFrame
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglistnoret 1 ...................... <me>
  [ 49] objcall 247 ............................. me.draw()
  [ 51] ret
end

on setFrame me, _iFrame
  [  0] getparam 1 .............................. <_iFrame>
  [  2] pushzero ................................ <0>
  [  3] lt ...................................... <_iFrame < 0>
  [  4] getparam 1 .............................. <_iFrame>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 684 .......................... <me.iNumFrames>
  [ 11] gt ...................................... <_iFrame > me.iNumFrames>
  [ 12] or ...................................... <(_iFrame < 0) or (_iFrame > me.iNumFrames)>
  [ 13] jmpifz [ 19] ............................ if (_iFrame < 0) or (_iFrame > me.iNumFrames) then
  [ 16] pushzero ................................ <0>
  [ 17] setparam 1 .............................. _iFrame = 0
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <_iFrame>
  [ 23] setobjprop 1202 ......................... me.iFrame = _iFrame
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] objcall 247 ............................. me.draw()
  [ 32] ret
end

on setAnimate me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 1201 ......................... me.bAnimate = bState
  [  7] ret
end

on setDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 671 ...................... <me.aDirections>
  [  5] getparam 1 .............................. <iDir>
  [  7] pusharglist 2 ........................... <me.aDirections, iDir>
  [  9] objcall 774 ............................. <me.aDirections.getPos(iDir)>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [ 14] jmpifz [ 46] ............................ if me.aDirections.getPos(iDir) = 0 then / else
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 1 ...................... <me>
  [ 21] objcall 1183 ............................ me.setDirectionIndex()
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 671 ............................ <#aDirections>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1207 ......................... <me.iDirectionIndex>
  [ 36] pusharglist 3 ........................... <me, #aDirections, me.iDirectionIndex>
  [ 38] objcall 577 ............................. <me.aDirections[me.iDirectionIndex]>
  [ 41] setobjprop 249 .......................... me.iDirection = me.aDirections[me.iDirectionIndex]
  [ 43] jmp [ 52]
  [ 46] getparam 0 .............................. <me>
  [ 48] getparam 1 .............................. <iDir>
  [ 50] setobjprop 249 .......................... me.iDirection = iDir
  [ 52] ret
end

on setDirectionIndex me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 671 ...................... <me.aDirections>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 249 .......................... <me.iDirection>
  [  9] pusharglist 2 ........................... <me.aDirections, me.iDirection>
  [ 11] objcall 774 ............................. <me.aDirections.getPos(me.iDirection)>
  [ 14] setlocal 0 .............................. iIndex = me.aDirections.getPos(me.iDirection)
  [ 16] getlocal 0 .............................. <iIndex>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <iIndex = 0>
  [ 20] jmpifz [ 27] ............................ if iIndex = 0 then
  [ 23] pushint8 1 .............................. <1>
  [ 25] setlocal 0 .............................. iIndex = 1
  [ 27] getparam 0 .............................. <me>
  [ 29] getlocal 0 .............................. <iIndex>
  [ 31] setobjprop 1207 ......................... me.iDirectionIndex = iIndex
  [ 34] ret
end

on rotate me, iDir
  [  0] getparam 1 .............................. <iDir>
  [  2] pusharglist 1 ........................... <iDir>
  [  4] extcall 105 ............................. <voidp(iDir)>
  [  6] jmpifz [ 13] ............................ if voidp(iDir) then
  [  9] pushint8 1 .............................. <1>
  [ 11] setparam 1 .............................. iDir = 1
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1207 ......................... <me.iDirectionIndex>
  [ 18] getparam 1 .............................. <iDir>
  [ 20] add ..................................... <me.iDirectionIndex + iDir>
  [ 21] setlocal 0 .............................. iNewDirectionIndex = me.iDirectionIndex + iDir
  [ 23] getlocal 0 .............................. <iNewDirectionIndex>
  [ 25] getparam 0 .............................. <me>
  [ 27] pushsymb 671 ............................ <#aDirections>
  [ 30] pusharglist 2 ........................... <me, #aDirections>
  [ 32] objcall 169 ............................. <me.aDirections.count>
  [ 34] gt ...................................... <iNewDirectionIndex > me.aDirections.count>
  [ 35] jmpifz [ 42] ............................ if iNewDirectionIndex > me.aDirections.count then
  [ 38] pushint8 1 .............................. <1>
  [ 40] setlocal 0 .............................. iNewDirectionIndex = 1
  [ 42] getlocal 0 .............................. <iNewDirectionIndex>
  [ 44] pushint8 1 .............................. <1>
  [ 46] lt ...................................... <iNewDirectionIndex < 1>
  [ 47] jmpifz [ 61] ............................ if iNewDirectionIndex < 1 then
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 671 ............................ <#aDirections>
  [ 55] pusharglist 2 ........................... <me, #aDirections>
  [ 57] objcall 169 ............................. <me.aDirections.count>
  [ 59] setlocal 0 .............................. iNewDirectionIndex = me.aDirections.count
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1207 ......................... <me.iDirectionIndex>
  [ 68] setobjprop 1208 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [ 71] getparam 0 .............................. <me>
  [ 73] getlocal 0 .............................. <iNewDirectionIndex>
  [ 75] setobjprop 1207 ......................... me.iDirectionIndex = iNewDirectionIndex
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 0 .............................. <me>
  [ 82] pushsymb 671 ............................ <#aDirections>
  [ 85] getprop 1207 ............................ <iDirectionIndex>
  [ 88] pusharglist 3 ........................... <me, #aDirections, iDirectionIndex>
  [ 90] objcall 577 ............................. <me.aDirections[iDirectionIndex]>
  [ 93] pusharglistnoret 2 ...................... <me, me.aDirections[iDirectionIndex]>
  [ 95] objcall 1125 ............................ me.setDirection(me.aDirections[iDirectionIndex])
  [ 98] getparam 0 .............................. <me>
  [100] pushzero ................................ <0>
  [101] setobjprop 1202 ......................... me.iFrame = 0
  [104] getglobal 88 ............................ <oIsoScene>
  [106] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [108] getparam 0 .............................. <me>
  [110] getobjprop 154 .......................... <me.iRow>
  [112] getparam 0 .............................. <me>
  [114] getobjprop 155 .......................... <me.iCol>
  [116] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [118] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [121] setlocal 1 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [123] getparam 0 .............................. <me>
  [125] getlocal 1 .............................. <oSquare>
  [127] pusharglist 2 ........................... <me, oSquare>
  [129] objcall 279 ............................. <me.placeItem(oSquare)>
  [132] setlocal 2 .............................. bSuccess = me.placeItem(oSquare)
  [134] getlocal 2 .............................. <bSuccess>
  [136] jmpifz [158] ............................ if bSuccess then
  [139] getparam 0 .............................. <me>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 1207 ......................... <me.iDirectionIndex>
  [146] setobjprop 1208 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [149] getglobal 88 ............................ <oIsoScene>
  [151] getchainedprop 126 ...................... <oIsoScene.oAvatars>
  [153] pusharglistnoret 1 ...................... <oIsoScene.oAvatars>
  [155] objcall 894 ............................. oIsoScene.oAvatars.updateAll()
  [158] getlocal 2 .............................. <bSuccess>
  [160] pusharglistnoret 1 ...................... <bSuccess>
  [162] extcall 92 .............................. return bSuccess
  [164] ret
end

on setDrawOrder me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aDrawOrder = []
  [  5] getlocal 0 .............................. <_aDrawOrder>
  [  7] pusharglistnoret 1 ...................... <_aDrawOrder>
  [  9] objcall 336 ............................. _aDrawOrder.sort()
  [ 12] pushint8 1 .............................. <1>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] getparam 0 .............................. <me>
  [ 20] pushsymb 1197 ........................... <#aAssets>
  [ 23] pusharglist 2 ........................... <me, #aAssets>
  [ 25] objcall 169 ............................. <me.aAssets.count>
  [ 27] lteq
  [ 28] jmpifz [106] ............................ repeat with i = 1 to me.aAssets.count
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 1197 ..................... <me.aAssets>
  [ 36] getlocal 1 .............................. <i>
  [ 38] pusharglist 2 ........................... <me.aAssets, i>
  [ 40] objcall 899 ............................. <me.aAssets.getPropAt(i)>
  [ 43] setlocal 2 .............................. sName = me.aAssets.getPropAt(i)
  [ 45] getlocal 2 .............................. <sName>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 252 .......................... <me.sImageBase>
  [ 51] contains0str ............................ <sName starts me.sImageBase>
  [ 52] not ..................................... <not (sName starts me.sImageBase)>
  [ 53] jmpifz [ 59] ............................ if not (sName starts me.sImageBase) then
  [ 56] jmp [ 97] ............................... next repeat
  [ 59] getparam 0 .............................. <me>
  [ 61] getlocal 2 .............................. <sName>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1198 ......................... <me.ORDER>
  [ 68] pusharglist 3 ........................... <me, sName, me.ORDER>
  [ 70] objcall 1188 ............................ <me.getParamFromName(sName, me.ORDER)>
  [ 73] setlocal 3 .............................. sOrder = me.getParamFromName(sName, me.ORDER)
  [ 75] getlocal 0 .............................. <_aDrawOrder>
  [ 77] getlocal 3 .............................. <sOrder>
  [ 79] pusharglist 2 ........................... <_aDrawOrder, sOrder>
  [ 81] objcall 774 ............................. <_aDrawOrder.getPos(sOrder)>
  [ 84] pushzero ................................ <0>
  [ 85] eq ...................................... <_aDrawOrder.getPos(sOrder) = 0>
  [ 86] jmpifz [ 97] ............................ if _aDrawOrder.getPos(sOrder) = 0 then
  [ 89] getlocal 0 .............................. <_aDrawOrder>
  [ 91] getlocal 3 .............................. <sOrder>
  [ 93] pusharglistnoret 2 ...................... <_aDrawOrder, sOrder>
  [ 95] objcall 133 ............................. _aDrawOrder.add(sOrder)
  [ 97] pushint8 1
  [ 99] getlocal 1
  [101] add
  [102] setlocal 1
  [104] endrepeat [ 16]
  [106] pushint8 1 .............................. <1>
  [108] setlocal 1
  [110] getlocal 1
  [112] getparam 0 .............................. <me>
  [114] pushsymb 1241 ........................... <#aAlias>
  [117] pusharglist 2 ........................... <me, #aAlias>
  [119] objcall 169 ............................. <me.aAlias.count>
  [121] lteq
  [122] jmpifz [200] ............................ repeat with i = 1 to me.aAlias.count
  [125] getparam 0 .............................. <me>
  [127] getchainedprop 1241 ..................... <me.aAlias>
  [130] getlocal 1 .............................. <i>
  [132] pusharglist 2 ........................... <me.aAlias, i>
  [134] objcall 899 ............................. <me.aAlias.getPropAt(i)>
  [137] setlocal 2 .............................. sName = me.aAlias.getPropAt(i)
  [139] getlocal 2 .............................. <sName>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 252 .......................... <me.sImageBase>
  [145] contains0str ............................ <sName starts me.sImageBase>
  [146] not ..................................... <not (sName starts me.sImageBase)>
  [147] jmpifz [153] ............................ if not (sName starts me.sImageBase) then
  [150] jmp [191] ............................... next repeat
  [153] getparam 0 .............................. <me>
  [155] getlocal 2 .............................. <sName>
  [157] getparam 0 .............................. <me>
  [159] getobjprop 1198 ......................... <me.ORDER>
  [162] pusharglist 3 ........................... <me, sName, me.ORDER>
  [164] objcall 1188 ............................ <me.getParamFromName(sName, me.ORDER)>
  [167] setlocal 3 .............................. sOrder = me.getParamFromName(sName, me.ORDER)
  [169] getlocal 0 .............................. <_aDrawOrder>
  [171] getlocal 3 .............................. <sOrder>
  [173] pusharglist 2 ........................... <_aDrawOrder, sOrder>
  [175] objcall 774 ............................. <_aDrawOrder.getPos(sOrder)>
  [178] pushzero ................................ <0>
  [179] eq ...................................... <_aDrawOrder.getPos(sOrder) = 0>
  [180] jmpifz [191] ............................ if _aDrawOrder.getPos(sOrder) = 0 then
  [183] getlocal 0 .............................. <_aDrawOrder>
  [185] getlocal 3 .............................. <sOrder>
  [187] pusharglistnoret 2 ...................... <_aDrawOrder, sOrder>
  [189] objcall 133 ............................. _aDrawOrder.add(sOrder)
  [191] pushint8 1
  [193] getlocal 1
  [195] add
  [196] setlocal 1
  [198] endrepeat [110]
  [200] getparam 0 .............................. <me>
  [202] pusharglist 0 ........................... <[:]>
  [204] pushproplist ............................ <[:]>
  [205] setobjprop 1229 ......................... me.aDrawOrder = [:]
  [208] pushint8 1 .............................. <1>
  [210] setlocal 1
  [212] getlocal 1
  [214] getlocal 0 .............................. <_aDrawOrder>
  [216] getobjprop 169 .......................... <_aDrawOrder.count>
  [218] lteq
  [219] jmpifz [500] ............................ repeat with i = 1 to _aDrawOrder.count
  [222] getlocal 0 .............................. <_aDrawOrder>
  [224] getlocal 1 .............................. <i>
  [226] pusharglist 2 ........................... <_aDrawOrder, i>
  [228] objcall 196 ............................. <_aDrawOrder[i]>
  [230] setlocal 3 .............................. sOrder = _aDrawOrder[i]
  [232] pushint8 8 .............................. <8>
  [234] setlocal 4 .............................. iInk = 8
  [236] pushint8 100 ............................ <100>
  [238] setlocal 5 .............................. iBlend = 100
  [240] getlocal 3 .............................. <sOrder>
  [242] pushcons 10 ............................. <"sd">
  [244] eq ...................................... <sOrder = "sd">
  [245] jmpifz [252] ............................ if sOrder = "sd" then
  [248] pushint8 40 ............................. <40>
  [250] setlocal 5 .............................. iBlend = 40
  [252] getglobal 88 ............................ <oIsoScene>
  [254] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [256] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [258] objcall 452 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [261] setlocal 6 .............................. iSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [263] getlocal 3 .............................. <sOrder>
  [265] pushcons 10 ............................. <"sd">
  [267] nteq .................................... <sOrder <> "sd">
  [268] jmpifz [297] ............................ if sOrder <> "sd" then
  [271] getlocal 6 .............................. <iSprite>
  [273] pusharglist 1 ........................... <iSprite>
  [275] extcall 451 ............................. <sprite(iSprite)>
  [278] getchainedprop 602 ...................... <sprite(iSprite).scriptInstanceList>
  [281] pushcons 14 ............................. <"SceneItemScript">
  [283] pusharglist 1 ........................... <"SceneItemScript">
  [285] extcall 57 .............................. <script("SceneItemScript")>
  [287] getparam 0 .............................. <me>
  [289] pusharglist 2 ........................... <script("SceneItemScript"), me>
  [291] objcall 0 ............................... <script("SceneItemScript").new(me)>
  [293] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("SceneItemScript").new(me)>
  [295] objcall 133 ............................. sprite(iSprite).scriptInstanceList.add(script("SceneItemScript").new(me))
  [297] getparam 0 .............................. <me>
  [299] getobjprop 252 .......................... <me.sImageBase>
  [301] pushcons 12 ............................. <"_">
  [303] joinstr ................................. <me.sImageBase & "_">
  [304] getlocal 3 .............................. <sOrder>
  [306] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [307] pushcons 15 ............................. <".ink">
  [309] joinstr ................................. <me.sImageBase & "_" & sOrder & ".ink">
  [310] getparam 0 .............................. <me>
  [312] getobjprop 253 .......................... <me.sCastLib>
  [314] pusharglist 2 ........................... <me.sImageBase & "_" & sOrder & ".ink", me.sCastLib>
  [316] extcall 454 ............................. <member(me.sImageBase & "_" & sOrder & ".ink", me.sCastLib)>
  [319] setlocal 7 .............................. oInkMember = member(me.sImageBase & "_" & sOrder & ".ink", me.sCastLib)
  [321] getlocal 7 .............................. <oInkMember>
  [323] getobjprop 606 .......................... <oInkMember.memberNum>
  [326] pushint8 1 .............................. <1>
  [328] inv ..................................... <-1>
  [329] nteq .................................... <oInkMember.memberNum <> -1>
  [330] jmpifz [344] ............................ if oInkMember.memberNum <> -1 then
  [333] getlocal 7 .............................. <oInkMember>
  [335] getobjprop 497 .......................... <oInkMember.text>
  [338] pusharglist 1 ........................... <oInkMember.text>
  [340] extcall 107 ............................. <integer(oInkMember.text)>
  [342] setlocal 4 .............................. iInk = integer(oInkMember.text)
  [344] getparam 0 .............................. <me>
  [346] getobjprop 252 .......................... <me.sImageBase>
  [348] pushcons 12 ............................. <"_">
  [350] joinstr ................................. <me.sImageBase & "_">
  [351] getlocal 3 .............................. <sOrder>
  [353] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [354] pushcons 16 ............................. <".blend">
  [356] joinstr ................................. <me.sImageBase & "_" & sOrder & ".blend">
  [357] getparam 0 .............................. <me>
  [359] getobjprop 253 .......................... <me.sCastLib>
  [361] pusharglist 2 ........................... <me.sImageBase & "_" & sOrder & ".blend", me.sCastLib>
  [363] extcall 454 ............................. <member(me.sImageBase & "_" & sOrder & ".blend", me.sCastLib)>
  [366] setlocal 8 .............................. oBlendMember = member(me.sImageBase & "_" & sOrder & ".blend", me.sCastLib)
  [368] getlocal 8 .............................. <oBlendMember>
  [370] getobjprop 606 .......................... <oBlendMember.memberNum>
  [373] pushint8 1 .............................. <1>
  [375] inv ..................................... <-1>
  [376] nteq .................................... <oBlendMember.memberNum <> -1>
  [377] jmpifz [391] ............................ if oBlendMember.memberNum <> -1 then
  [380] getlocal 8 .............................. <oBlendMember>
  [382] getobjprop 497 .......................... <oBlendMember.text>
  [385] pusharglist 1 ........................... <oBlendMember.text>
  [387] extcall 107 ............................. <integer(oBlendMember.text)>
  [389] setlocal 5 .............................. iBlend = integer(oBlendMember.text)
  [391] pushint16 255 ........................... <255>
  [394] pushint16 255 ........................... <255>
  [397] pushint16 255 ........................... <255>
  [400] pusharglist 3 ........................... <255, 255, 255>
  [402] extcall 478 ............................. <rgb(255, 255, 255)>
  [405] setlocal 9 .............................. oBGColor = rgb(255, 255, 255)
  [407] pushcons 17 ............................. <"color_">
  [409] getlocal 3 .............................. <sOrder>
  [411] joinstr ................................. <"color_" & sOrder>
  [412] setlocal 10 ............................. sColorProp = "color_" & sOrder
  [414] getparam 0 .............................. <me>
  [416] pushsymb 251 ............................ <#aAttributes>
  [418] getlocal 10 ............................. <sColorProp>
  [420] pusharglist 3 ........................... <me, #aAttributes, sColorProp>
  [422] objcall 577 ............................. <me.aAttributes[sColorProp]>
  [425] setlocal 11 ............................. oColor = me.aAttributes[sColorProp]
  [427] getlocal 11 ............................. <oColor>
  [429] pusharglist 1 ........................... <oColor>
  [431] extcall 105 ............................. <voidp(oColor)>
  [433] not ..................................... <not voidp(oColor)>
  [434] jmpifz [446] ............................ if not voidp(oColor) then
  [437] getlocal 11 ............................. <oColor>
  [439] pusharglist 1 ........................... <oColor>
  [441] extcall 478 ............................. <rgb(oColor)>
  [444] setlocal 9 .............................. oBGColor = rgb(oColor)
  [446] getparam 0 .............................. <me>
  [448] getchainedprop 1229 ..................... <me.aDrawOrder>
  [451] getlocal 3 .............................. <sOrder>
  [453] pushsymb 462 ............................ <#ink>
  [456] getlocal 4 .............................. <iInk>
  [458] pushsymb 463 ............................ <#blend>
  [461] getlocal 5 .............................. <iBlend>
  [463] pushsymb 451 ............................ <#sprite>
  [466] getlocal 6 .............................. <iSprite>
  [468] pushsymb 464 ............................ <#visible>
  [471] pushint8 1 .............................. <1>
  [473] pushsymb 981 ............................ <#bgColor>
  [476] getlocal 9 .............................. <oBGColor>
  [478] pushsymb 1233 ........................... <#vShift>
  [481] pushzero ................................ <0>
  [482] pusharglist 12 .......................... <[#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [484] pushproplist ............................ <[#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [485] pusharglistnoret 3 ...................... <me.aDrawOrder, sOrder, [#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [487] objcall 357 ............................. me.aDrawOrder.addProp(sOrder, [#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0])
  [490] pushint8 1
  [492] getlocal 1
  [494] add
  [495] setlocal 1
  [497] endrepeat [212]
  [500] ret
end

on getDrawOrderForSprite me, _iSprite
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getparam 0 .............................. <me>
  [  8] pushsymb 1229 ........................... <#aDrawOrder>
  [ 11] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 13] objcall 169 ............................. <me.aDrawOrder.count>
  [ 15] lteq
  [ 16] jmpifz [ 77] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 1229 ..................... <me.aDrawOrder>
  [ 24] getlocal 0 .............................. <i>
  [ 26] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 28] objcall 899 ............................. <me.aDrawOrder.getPropAt(i)>
  [ 31] setlocal 1 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 1229 ........................... <#aDrawOrder>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 42] objcall 577 ............................. <me.aDrawOrder[i]>
  [ 45] setlocal 2 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 47] getlocal 2 .............................. <aOrderAttributes>
  [ 49] getobjprop 451 .......................... <aOrderAttributes.sprite>
  [ 52] setlocal 3 .............................. iOrderSprite = aOrderAttributes.sprite
  [ 54] getparam 1 .............................. <_iSprite>
  [ 56] getlocal 3 .............................. <iOrderSprite>
  [ 58] eq ...................................... <_iSprite = iOrderSprite>
  [ 59] jmpifz [ 68] ............................ if _iSprite = iOrderSprite then
  [ 62] getlocal 1 .............................. <sOrder>
  [ 64] pusharglistnoret 1 ...................... <sOrder>
  [ 66] extcall 92 .............................. return sOrder
  [ 68] pushint8 1
  [ 70] getlocal 0
  [ 72] add
  [ 73] setlocal 0
  [ 75] endrepeat [  4]
  [ 77] pusharglist 0 ........................... <>
  [ 79] extcall 130 ............................. <VOID>
  [ 81] pusharglistnoret 1 ...................... <VOID>
  [ 83] extcall 92 .............................. return VOID
  [ 85] ret
end

on getDrawOrderAttribute me, sOrder, sProp
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1229 ........................... <#aDrawOrder>
  [  5] getparam 1 .............................. <sOrder>
  [  7] pusharglist 3 ........................... <me, #aDrawOrder, sOrder>
  [  9] objcall 440 ............................. <me.aDrawOrder[sOrder]>
  [ 12] getparam 2 .............................. <sProp>
  [ 14] pusharglist 2 ........................... <me.aDrawOrder[sOrder], sProp>
  [ 16] objcall 196 ............................. <me.aDrawOrder[sOrder][sProp]>
  [ 18] pusharglistnoret 1 ...................... <me.aDrawOrder[sOrder][sProp]>
  [ 20] extcall 92 .............................. return me.aDrawOrder[sOrder][sProp]
  [ 22] ret
end

on setDrawOrderAttribute me, sOrder, sProp, sValue
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1229 ........................... <#aDrawOrder>
  [  5] getparam 1 .............................. <sOrder>
  [  7] pusharglist 3 ........................... <me, #aDrawOrder, sOrder>
  [  9] objcall 440 ............................. <me.aDrawOrder[sOrder]>
  [ 12] getparam 2 .............................. <sProp>
  [ 14] getparam 3 .............................. <sValue>
  [ 16] pusharglistnoret 3 ...................... <me.aDrawOrder[sOrder], sProp, sValue>
  [ 18] objcall 861 ............................. me.aDrawOrder[sOrder][sProp] = sValue
  [ 21] ret
end

on getParamFromName me, sName, iIndex
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 252 ...................... <me.sImageBase>
  [  4] getobjprop 320 .......................... <me.sImageBase.length>
  [  7] setlocal 0 .............................. iBaseLength = me.sImageBase.length
  [  9] getparam 1 .............................. <sName>
  [ 11] pushsymb 1259 ........................... <#char>
  [ 14] getlocal 0 .............................. <iBaseLength>
  [ 16] pushint8 2 .............................. <2>
  [ 18] add ..................................... <iBaseLength + 2>
  [ 19] getparam 1 .............................. <sName>
  [ 21] getobjprop 320 .......................... <sName.length>
  [ 24] pusharglist 4 ........................... <sName, #char, iBaseLength + 2, sName.length>
  [ 26] objcall 577 ............................. <sName.char[iBaseLength + 2..sName.length]>
  [ 29] setlocal 1 .............................. sParams = sName.char[iBaseLength + 2..sName.length]
  [ 31] getmovieprop 617 ........................ <the itemDelimiter>
  [ 34] setlocal 2 .............................. sOldDelimiter = the itemDelimiter
  [ 36] pushcons 12 ............................. <"_">
  [ 38] setmovieprop 617 ........................ the itemDelimiter = "_"
  [ 41] getlocal 1 .............................. <sParams>
  [ 43] pushsymb 618 ............................ <#item>
  [ 46] getparam 2 .............................. <iIndex>
  [ 48] pusharglist 3 ........................... <sParams, #item, iIndex>
  [ 50] objcall 577 ............................. <sParams.item[iIndex]>
  [ 53] setlocal 3 .............................. sParam = sParams.item[iIndex]
  [ 55] getlocal 2 .............................. <sOldDelimiter>
  [ 57] setmovieprop 617 ........................ the itemDelimiter = sOldDelimiter
  [ 60] getlocal 3 .............................. <sParam>
  [ 62] pusharglistnoret 1 ...................... <sParam>
  [ 64] extcall 92 .............................. return sParam
  [ 66] ret
end

on loadAssets me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1197 ......................... me.aAssets = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 253 .......................... <me.sCastLib>
  [ 12] pushint8 2 .............................. <2>
  [ 14] get 8 ................................... <the number of castMembers of castLib the sCastLib of me>
  [ 16] setlocal 0 .............................. iNumMembers = the number of castMembers of castLib the sCastLib of me
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 1
  [ 22] getlocal 1
  [ 24] getlocal 0 .............................. <iNumMembers>
  [ 26] lteq
  [ 27] jmpifz [147] ............................ repeat with i = 1 to iNumMembers
  [ 30] getlocal 1 .............................. <i>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 253 .......................... <me.sCastLib>
  [ 36] pusharglist 2 ........................... <i, me.sCastLib>
  [ 38] extcall 454 ............................. <member(i, me.sCastLib)>
  [ 41] setlocal 2 .............................. oMember = member(i, me.sCastLib)
  [ 43] getlocal 2 .............................. <oMember>
  [ 45] getobjprop 606 .......................... <oMember.memberNum>
  [ 48] pushint8 1 .............................. <1>
  [ 50] inv ..................................... <-1>
  [ 51] eq ...................................... <oMember.memberNum = -1>
  [ 52] jmpifz [ 58] ............................ if oMember.memberNum = -1 then
  [ 55] jmp [138] ............................... next repeat
  [ 58] getlocal 2 .............................. <oMember>
  [ 60] getobjprop 625 .......................... <oMember.name>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 252 .......................... <me.sImageBase>
  [ 67] contains0str ............................ <oMember.name starts me.sImageBase>
  [ 68] getlocal 2 .............................. <oMember>
  [ 70] getobjprop 1028 ......................... <oMember.type>
  [ 73] pushsymb 1264 ........................... <#bitmap>
  [ 76] eq ...................................... <oMember.type = #bitmap>
  [ 77] and ..................................... <(oMember.name starts me.sImageBase) and (oMember.type = #bitmap)>
  [ 78] getlocal 2 .............................. <oMember>
  [ 80] getobjprop 625 .......................... <oMember.name>
  [ 83] pushcons 18 ............................. <".">
  [ 85] containsstr ............................. <oMember.name contains ".">
  [ 86] not ..................................... <not (oMember.name contains ".")>
  [ 87] and ..................................... <(oMember.name starts me.sImageBase) and (oMember.type = #bitmap) and not (oMember.name contains ".")>
  [ 88] jmpifz [138] ............................ if (oMember.name starts me.sImageBase) and (oMember.type = #bitmap) and not (oMember.name contains ".") then
  [ 91] getparam 0 .............................. <me>
  [ 93] getlocal 2 .............................. <oMember>
  [ 95] getobjprop 625 .......................... <oMember.name>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 1198 ......................... <me.ORDER>
  [103] pusharglist 3 ........................... <me, oMember.name, me.ORDER>
  [105] objcall 1188 ............................ <me.getParamFromName(oMember.name, me.ORDER)>
  [108] setlocal 3 .............................. sOrder = me.getParamFromName(oMember.name, me.ORDER)
  [110] getlocal 3 .............................. <sOrder>
  [112] pushcons 0 .............................. <EMPTY>
  [114] eq ...................................... <sOrder = EMPTY>
  [115] jmpifz [121] ............................ if sOrder = EMPTY then
  [118] jmp [138] ............................... next repeat
  [121] getparam 0 .............................. <me>
  [123] getchainedprop 1197 ..................... <me.aAssets>
  [126] getlocal 2 .............................. <oMember>
  [128] getobjprop 625 .......................... <oMember.name>
  [131] getlocal 2 .............................. <oMember>
  [133] pusharglistnoret 3 ...................... <me.aAssets, oMember.name, oMember>
  [135] objcall 357 ............................. me.aAssets.addProp(oMember.name, oMember)
  [138] pushint8 1
  [140] getlocal 1
  [142] add
  [143] setlocal 1
  [145] endrepeat [ 22]
  [147] pushint8 1 .............................. <1>
  [149] setlocal 1
  [151] getlocal 1
  [153] getparam 0 .............................. <me>
  [155] pushsymb 1241 ........................... <#aAlias>
  [158] pusharglist 2 ........................... <me, #aAlias>
  [160] objcall 169 ............................. <me.aAlias.count>
  [162] lteq
  [163] jmpifz [266] ............................ repeat with i = 1 to me.aAlias.count
  [166] getparam 0 .............................. <me>
  [168] pushsymb 1241 ........................... <#aAlias>
  [171] getlocal 1 .............................. <i>
  [173] pusharglist 3 ........................... <me, #aAlias, i>
  [175] objcall 577 ............................. <me.aAlias[i]>
  [178] setlocal 4 .............................. aAliasMember = me.aAlias[i]
  [180] getlocal 4 .............................. <aAliasMember>
  [182] getobjprop 1242 ......................... <aAliasMember.asset>
  [185] setlocal 5 .............................. sAsset = aAliasMember.asset
  [187] getparam 0 .............................. <me>
  [189] getchainedprop 1197 ..................... <me.aAssets>
  [192] getlocal 5 .............................. <sAsset>
  [194] pusharglist 2 ........................... <me.aAssets, sAsset>
  [196] objcall 1265 ............................ <me.aAssets.getaProp(sAsset)>
  [199] pusharglist 1 ........................... <me.aAssets.getaProp(sAsset)>
  [201] extcall 105 ............................. <voidp(me.aAssets.getaProp(sAsset))>
  [203] not ..................................... <not voidp(me.aAssets.getaProp(sAsset))>
  [204] setlocal 6 .............................. bExists = not voidp(me.aAssets.getaProp(sAsset))
  [206] getlocal 6 .............................. <bExists>
  [208] not ..................................... <not bExists>
  [209] jmpifz [257] ............................ if not bExists then
  [212] getlocal 5 .............................. <sAsset>
  [214] getparam 0 .............................. <me>
  [216] getobjprop 253 .......................... <me.sCastLib>
  [218] pusharglist 2 ........................... <sAsset, me.sCastLib>
  [220] extcall 454 ............................. <member(sAsset, me.sCastLib)>
  [223] setlocal 2 .............................. oMember = member(sAsset, me.sCastLib)
  [225] getlocal 2 .............................. <oMember>
  [227] getobjprop 606 .......................... <oMember.memberNum>
  [230] pushint8 1 .............................. <1>
  [232] inv ..................................... <-1>
  [233] eq ...................................... <oMember.memberNum = -1>
  [234] jmpifz [240] ............................ if oMember.memberNum = -1 then
  [237] jmp [257] ............................... next repeat
  [240] getparam 0 .............................. <me>
  [242] getchainedprop 1197 ..................... <me.aAssets>
  [245] getlocal 2 .............................. <oMember>
  [247] getobjprop 625 .......................... <oMember.name>
  [250] getlocal 2 .............................. <oMember>
  [252] pusharglistnoret 3 ...................... <me.aAssets, oMember.name, oMember>
  [254] objcall 357 ............................. me.aAssets.addProp(oMember.name, oMember)
  [257] pushint8 1
  [259] getlocal 1
  [261] add
  [262] setlocal 1
  [264] endrepeat [151]
  [266] ret
end

on loadAlias me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1241 ......................... me.aAlias = [:]
  [  8] getmovieprop 617 ........................ <the itemDelimiter>
  [ 11] setlocal 0 .............................. oldDelimiter = the itemDelimiter
  [ 13] pushcons 19 ............................. <"=">
  [ 15] setmovieprop 617 ........................ the itemDelimiter = "="
  [ 18] pushcons 20 ............................. <"memberalias.index">
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 253 .......................... <me.sCastLib>
  [ 24] pusharglist 2 ........................... <"memberalias.index", me.sCastLib>
  [ 26] extcall 454 ............................. <member("memberalias.index", me.sCastLib)>
  [ 29] getobjprop 497 .......................... <member("memberalias.index", me.sCastLib).text>
  [ 32] setlocal 1 .............................. sAliasText = member("memberalias.index", me.sCastLib).text
  [ 34] pushint8 1 .............................. <1>
  [ 36] setlocal 2
  [ 38] getlocal 2
  [ 40] getlocal 1 .............................. <sAliasText>
  [ 42] pushsymb 939 ............................ <#lines>
  [ 45] pusharglist 2 ........................... <sAliasText, #lines>
  [ 47] objcall 169 ............................. <sAliasText.lines.count>
  [ 49] lteq
  [ 50] jmpifz [249] ............................ repeat with i = 1 to sAliasText.lines.count
  [ 53] getlocal 1 .............................. <sAliasText>
  [ 55] pushsymb 940 ............................ <#line>
  [ 58] getlocal 2 .............................. <i>
  [ 60] pusharglist 3 ........................... <sAliasText, #line, i>
  [ 62] objcall 577 ............................. <sAliasText.line[i]>
  [ 65] setlocal 3 .............................. sLine = sAliasText.line[i]
  [ 67] getlocal 3 .............................. <sLine>
  [ 69] pushcons 0 .............................. <EMPTY>
  [ 71] eq ...................................... <sLine = EMPTY>
  [ 72] jmpifz [ 78] ............................ if sLine = EMPTY then
  [ 75] jmp [240] ............................... next repeat
  [ 78] getlocal 3 .............................. <sLine>
  [ 80] pushsymb 618 ............................ <#item>
  [ 83] pushint8 1 .............................. <1>
  [ 85] pusharglist 3 ........................... <sLine, #item, 1>
  [ 87] objcall 577 ............................. <sLine.item[1]>
  [ 90] setlocal 4 .............................. sFrom = sLine.item[1]
  [ 92] getlocal 3 .............................. <sLine>
  [ 94] pushsymb 618 ............................ <#item>
  [ 97] pushint8 2 .............................. <2>
  [ 99] pusharglist 3 ........................... <sLine, #item, 2>
  [101] objcall 577 ............................. <sLine.item[2]>
  [104] setlocal 5 .............................. sTo = sLine.item[2]
  [106] getlocal 4 .............................. <sFrom>
  [108] pushcons 0 .............................. <EMPTY>
  [110] eq ...................................... <sFrom = EMPTY>
  [111] getlocal 5 .............................. <sTo>
  [113] pushcons 0 .............................. <EMPTY>
  [115] eq ...................................... <sTo = EMPTY>
  [116] or ...................................... <(sFrom = EMPTY) or (sTo = EMPTY)>
  [117] jmpifz [123] ............................ if (sFrom = EMPTY) or (sTo = EMPTY) then
  [120] jmp [240] ............................... next repeat
  [123] getlocal 4 .............................. <sFrom>
  [125] getparam 0 .............................. <me>
  [127] getobjprop 252 .......................... <me.sImageBase>
  [129] contains0str ............................ <sFrom starts me.sImageBase>
  [130] not ..................................... <not (sFrom starts me.sImageBase)>
  [131] jmpifz [137] ............................ if not (sFrom starts me.sImageBase) then
  [134] jmp [240] ............................... next repeat
  [137] pushzero ................................ <0>
  [138] setlocal 6 .............................. bFlip = 0
  [140] getlocal 5 .............................. <sTo>
  [142] pushsymb 1259 ........................... <#char>
  [145] getlocal 5 .............................. <sTo>
  [147] getobjprop 320 .......................... <sTo.length>
  [150] pusharglist 3 ........................... <sTo, #char, sTo.length>
  [152] objcall 577 ............................. <sTo.char[sTo.length]>
  [155] pushcons 21 ............................. <"*">
  [157] eq ...................................... <sTo.char[sTo.length] = "*">
  [158] jmpifz [187] ............................ if sTo.char[sTo.length] = "*" then
  [161] getlocal 5 .............................. <sTo>
  [163] pushsymb 1259 ........................... <#char>
  [166] pushint8 1 .............................. <1>
  [168] getlocal 5 .............................. <sTo>
  [170] getobjprop 320 .......................... <sTo.length>
  [173] pushint8 1 .............................. <1>
  [175] sub ..................................... <sTo.length - 1>
  [176] pusharglist 4 ........................... <sTo, #char, 1, sTo.length - 1>
  [178] objcall 577 ............................. <sTo.char[1..sTo.length - 1]>
  [181] setlocal 5 .............................. sTo = sTo.char[1..sTo.length - 1]
  [183] pushint8 1 .............................. <1>
  [185] setlocal 6 .............................. bFlip = 1
  [187] getlocal 5 .............................. <sTo>
  [189] getparam 0 .............................. <me>
  [191] getobjprop 253 .......................... <me.sCastLib>
  [193] pusharglist 2 ........................... <sTo, me.sCastLib>
  [195] extcall 454 ............................. <member(sTo, me.sCastLib)>
  [198] setlocal 7 .............................. oMember = member(sTo, me.sCastLib)
  [200] getlocal 7 .............................. <oMember>
  [202] getobjprop 606 .......................... <oMember.memberNum>
  [205] pushint8 1 .............................. <1>
  [207] inv ..................................... <-1>
  [208] eq ...................................... <oMember.memberNum = -1>
  [209] jmpifz [215] ............................ if oMember.memberNum = -1 then
  [212] jmp [240] ............................... next repeat
  [215] getparam 0 .............................. <me>
  [217] getchainedprop 1241 ..................... <me.aAlias>
  [220] getlocal 4 .............................. <sFrom>
  [222] pushsymb 1242 ........................... <#asset>
  [225] getlocal 5 .............................. <sTo>
  [227] pushsymb 1234 ........................... <#flip>
  [230] getlocal 6 .............................. <bFlip>
  [232] pusharglist 4 ........................... <[#asset: sTo, #flip: bFlip]>
  [234] pushproplist ............................ <[#asset: sTo, #flip: bFlip]>
  [235] pusharglistnoret 3 ...................... <me.aAlias, sFrom, [#asset: sTo, #flip: bFlip]>
  [237] objcall 357 ............................. me.aAlias.addProp(sFrom, [#asset: sTo, #flip: bFlip])
  [240] pushint8 1
  [242] getlocal 2
  [244] add
  [245] setlocal 2
  [247] endrepeat [ 38]
  [249] ret
end

on setDirections me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[]>
  [  4] pushlist ................................ <[]>
  [  5] setobjprop 671 .......................... me.aDirections = []
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 671 ...................... <me.aDirections>
  [ 13] pusharglistnoret 1 ...................... <me.aDirections>
  [ 15] objcall 336 ............................. me.aDirections.sort()
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 0
  [ 22] getlocal 0
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 1197 ........................... <#aAssets>
  [ 29] pusharglist 2 ........................... <me, #aAssets>
  [ 31] objcall 169 ............................. <me.aAssets.count>
  [ 33] lteq
  [ 34] jmpifz [116] ............................ repeat with i = 1 to me.aAssets.count
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 1197 ..................... <me.aAssets>
  [ 42] getlocal 0 .............................. <i>
  [ 44] pusharglist 2 ........................... <me.aAssets, i>
  [ 46] objcall 899 ............................. <me.aAssets.getPropAt(i)>
  [ 49] setlocal 1 .............................. sName = me.aAssets.getPropAt(i)
  [ 51] getparam 0 .............................. <me>
  [ 53] getlocal 1 .............................. <sName>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 363 .......................... <me.direction>
  [ 60] pusharglist 3 ........................... <me, sName, me.direction>
  [ 62] objcall 1188 ............................ <me.getParamFromName(sName, me.direction)>
  [ 65] pusharglist 1 ........................... <me.getParamFromName(sName, me.direction)>
  [ 67] extcall 107 ............................. <integer(me.getParamFromName(sName, me.direction))>
  [ 69] setlocal 2 .............................. iDir = integer(me.getParamFromName(sName, me.direction))
  [ 71] getlocal 2 .............................. <iDir>
  [ 73] pusharglist 1 ........................... <iDir>
  [ 75] extcall 105 ............................. <voidp(iDir)>
  [ 77] not ..................................... <not voidp(iDir)>
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 671 ...................... <me.aDirections>
  [ 83] getlocal 2 .............................. <iDir>
  [ 85] pusharglist 2 ........................... <me.aDirections, iDir>
  [ 87] objcall 774 ............................. <me.aDirections.getPos(iDir)>
  [ 90] pushzero ................................ <0>
  [ 91] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [ 92] and ..................................... <not voidp(iDir) and (me.aDirections.getPos(iDir) = 0)>
  [ 93] jmpifz [107] ............................ if not voidp(iDir) and (me.aDirections.getPos(iDir) = 0) then
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 671 ...................... <me.aDirections>
  [101] getlocal 2 .............................. <iDir>
  [103] pusharglistnoret 2 ...................... <me.aDirections, iDir>
  [105] objcall 133 ............................. me.aDirections.add(iDir)
  [107] pushint8 1
  [109] getlocal 0
  [111] add
  [112] setlocal 0
  [114] endrepeat [ 22]
  [116] pushint8 1 .............................. <1>
  [118] setlocal 0
  [120] getlocal 0
  [122] getparam 0 .............................. <me>
  [124] pushsymb 1241 ........................... <#aAlias>
  [127] pusharglist 2 ........................... <me, #aAlias>
  [129] objcall 169 ............................. <me.aAlias.count>
  [131] lteq
  [132] jmpifz [228] ............................ repeat with i = 1 to me.aAlias.count
  [135] getparam 0 .............................. <me>
  [137] getchainedprop 1241 ..................... <me.aAlias>
  [140] getlocal 0 .............................. <i>
  [142] pusharglist 2 ........................... <me.aAlias, i>
  [144] objcall 899 ............................. <me.aAlias.getPropAt(i)>
  [147] setlocal 1 .............................. sName = me.aAlias.getPropAt(i)
  [149] getlocal 1 .............................. <sName>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 252 .......................... <me.sImageBase>
  [155] contains0str ............................ <sName starts me.sImageBase>
  [156] not ..................................... <not (sName starts me.sImageBase)>
  [157] jmpifz [163] ............................ if not (sName starts me.sImageBase) then
  [160] jmp [219] ............................... next repeat
  [163] getparam 0 .............................. <me>
  [165] getlocal 1 .............................. <sName>
  [167] getparam 0 .............................. <me>
  [169] getobjprop 363 .......................... <me.direction>
  [172] pusharglist 3 ........................... <me, sName, me.direction>
  [174] objcall 1188 ............................ <me.getParamFromName(sName, me.direction)>
  [177] pusharglist 1 ........................... <me.getParamFromName(sName, me.direction)>
  [179] extcall 107 ............................. <integer(me.getParamFromName(sName, me.direction))>
  [181] setlocal 2 .............................. iDir = integer(me.getParamFromName(sName, me.direction))
  [183] getlocal 2 .............................. <iDir>
  [185] pusharglist 1 ........................... <iDir>
  [187] extcall 105 ............................. <voidp(iDir)>
  [189] not ..................................... <not voidp(iDir)>
  [190] getparam 0 .............................. <me>
  [192] getchainedprop 671 ...................... <me.aDirections>
  [195] getlocal 2 .............................. <iDir>
  [197] pusharglist 2 ........................... <me.aDirections, iDir>
  [199] objcall 774 ............................. <me.aDirections.getPos(iDir)>
  [202] pushzero ................................ <0>
  [203] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [204] and ..................................... <not voidp(iDir) and (me.aDirections.getPos(iDir) = 0)>
  [205] jmpifz [219] ............................ if not voidp(iDir) and (me.aDirections.getPos(iDir) = 0) then
  [208] getparam 0 .............................. <me>
  [210] getchainedprop 671 ...................... <me.aDirections>
  [213] getlocal 2 .............................. <iDir>
  [215] pusharglistnoret 2 ...................... <me.aDirections, iDir>
  [217] objcall 133 ............................. me.aDirections.add(iDir)
  [219] pushint8 1
  [221] getlocal 0
  [223] add
  [224] setlocal 0
  [226] endrepeat [120]
  [228] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 56 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 10] pushcons 22 ............................. <"FurnitureItem: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"FurnitureItem: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"FurnitureItem: " & sMessage>
  [ 17] extcall 332 ............................. put "FurnitureItem: " & sMessage
  [ 20] ret
end

on getOccupiedSquares me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aList = []
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 249 .......................... <me.iDirection>
  [  9] peek 0 .................................. case me.iDirection of
  [ 11] pushzero ................................ <0>
  [ 12] nteq
  [ 13] jmpifz [ 24] ............................ (case) 0, ...
  [ 16] peek 0
  [ 18] pushint8 4 .............................. <4>
  [ 20] eq
  [ 21] jmpifz [122] ............................ (case) ..., 4:
  [ 24] pushint8 1 .............................. <1>
  [ 26] setlocal 1
  [ 28] getlocal 1
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 472 .......................... <me.iDepth>
  [ 35] lteq
  [ 36] jmpifz [119] ............................ repeat with i = 1 to me.iDepth
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 154 .......................... <me.iRow>
  [ 43] getlocal 1 .............................. <i>
  [ 45] pushint8 1 .............................. <1>
  [ 47] sub ..................................... <i - 1>
  [ 48] add ..................................... <me.iRow + (i - 1)>
  [ 49] setlocal 2 .............................. _iRow = me.iRow + (i - 1)
  [ 51] pushint8 1 .............................. <1>
  [ 53] setlocal 3
  [ 55] getlocal 3
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 442 .......................... <me.iWidth>
  [ 62] lteq
  [ 63] jmpifz [110] ............................ repeat with ii = 1 to me.iWidth
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 155 .......................... <me.iCol>
  [ 70] getlocal 3 .............................. <ii>
  [ 72] pushint8 1 .............................. <1>
  [ 74] sub ..................................... <ii - 1>
  [ 75] add ..................................... <me.iCol + (ii - 1)>
  [ 76] setlocal 4 .............................. _iCol = me.iCol + (ii - 1)
  [ 78] getglobal 88 ............................ <oIsoScene>
  [ 80] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 82] getlocal 2 .............................. <_iRow>
  [ 84] getlocal 4 .............................. <_iCol>
  [ 86] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 88] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 91] setlocal 5 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 93] getlocal 0 .............................. <aList>
  [ 95] getlocal 5 .............................. <oSquare>
  [ 97] pusharglistnoret 2 ...................... <aList, oSquare>
  [ 99] objcall 133 ............................. aList.add(oSquare)
  [101] pushint8 1
  [103] getlocal 3
  [105] add
  [106] setlocal 3
  [108] endrepeat [ 55]
  [110] pushint8 1
  [112] getlocal 1
  [114] add
  [115] setlocal 1
  [117] endrepeat [ 28]
  [119] jmp [233]
  [122] peek 0
  [124] pushint8 2 .............................. <2>
  [126] nteq
  [127] jmpifz [138] ............................ (case) 2, ...
  [130] peek 0
  [132] pushint8 6 .............................. <6>
  [134] eq
  [135] jmpifz [233] ............................ (case) ..., 6:
  [138] pushint8 1 .............................. <1>
  [140] setlocal 1
  [142] getlocal 1
  [144] getparam 0 .............................. <me>
  [146] getobjprop 472 .......................... <me.iDepth>
  [149] lteq
  [150] jmpifz [233] ............................ repeat with i = 1 to me.iDepth
  [153] getparam 0 .............................. <me>
  [155] getobjprop 155 .......................... <me.iCol>
  [157] getlocal 1 .............................. <i>
  [159] pushint8 1 .............................. <1>
  [161] sub ..................................... <i - 1>
  [162] add ..................................... <me.iCol + (i - 1)>
  [163] setlocal 4 .............................. _iCol = me.iCol + (i - 1)
  [165] pushint8 1 .............................. <1>
  [167] setlocal 3
  [169] getlocal 3
  [171] getparam 0 .............................. <me>
  [173] getobjprop 442 .......................... <me.iWidth>
  [176] lteq
  [177] jmpifz [224] ............................ repeat with ii = 1 to me.iWidth
  [180] getparam 0 .............................. <me>
  [182] getobjprop 154 .......................... <me.iRow>
  [184] getlocal 3 .............................. <ii>
  [186] pushint8 1 .............................. <1>
  [188] sub ..................................... <ii - 1>
  [189] add ..................................... <me.iRow + (ii - 1)>
  [190] setlocal 2 .............................. _iRow = me.iRow + (ii - 1)
  [192] getglobal 88 ............................ <oIsoScene>
  [194] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [196] getlocal 2 .............................. <_iRow>
  [198] getlocal 4 .............................. <_iCol>
  [200] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [202] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [205] setlocal 5 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [207] getlocal 0 .............................. <aList>
  [209] getlocal 5 .............................. <oSquare>
  [211] pusharglistnoret 2 ...................... <aList, oSquare>
  [213] objcall 133 ............................. aList.add(oSquare)
  [215] pushint8 1
  [217] getlocal 3
  [219] add
  [220] setlocal 3
  [222] endrepeat [169]
  [224] pushint8 1
  [226] getlocal 1
  [228] add
  [229] setlocal 1
  [231] endrepeat [142]
  [233] pop 1 ................................... end case
  [235] getlocal 0 .............................. <aList>
  [237] pusharglistnoret 1 ...................... <aList>
  [239] extcall 92 .............................. return aList
  [241] ret
end

on calculateZOrder me, sOrder, oDefaultSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 201 ............................. <me.isRugITem()>
  [  6] jmpifz [ 18] ............................ if me.isRugITem() then
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 257 .......................... <me.iGridY>
  [ 14] pusharglistnoret 1 ...................... <me.iGridY>
  [ 16] extcall 92 .............................. return me.iGridY
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <sOrder>
  [ 22] getparam 2 .............................. <oDefaultSquare>
  [ 24] pusharglist 3 ........................... <me, sOrder, oDefaultSquare>
  [ 26] objcall 1193 ............................ <me.calculateBaseSquare(sOrder, oDefaultSquare)>
  [ 29] setlocal 0 .............................. oSquare = me.calculateBaseSquare(sOrder, oDefaultSquare)
  [ 31] getparam 0 .............................. <me>
  [ 33] getparam 1 .............................. <sOrder>
  [ 35] pusharglist 2 ........................... <me, sOrder>
  [ 37] objcall 1192 ............................ <me.calculateLayerMap(sOrder)>
  [ 40] setlocal 1 .............................. sLayerMap = me.calculateLayerMap(sOrder)
  [ 42] getlocal 0 .............................. <oSquare>
  [ 44] getlocal 1 .............................. <sLayerMap>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 257 .......................... <me.iGridY>
  [ 51] pusharglist 3 ........................... <oSquare, sLayerMap, me.iGridY>
  [ 53] objcall 470 ............................. <oSquare.getDepthFromMap(sLayerMap, me.iGridY)>
  [ 56] setlocal 2 .............................. iZ = oSquare.getDepthFromMap(sLayerMap, me.iGridY)
  [ 58] getlocal 2 .............................. <iZ>
  [ 60] pusharglistnoret 1 ...................... <iZ>
  [ 62] extcall 92 .............................. return iZ
  [ 64] ret
end

on calculateLayerMap me, sOrder
  [  0] getparam 1 .............................. <sOrder>
  [  2] setlocal 0 .............................. sLayerMap = sOrder
  [  4] getparam 1 .............................. <sOrder>
  [  6] peek 0 .................................. case sOrder of
  [  8] pushcons 23 ............................. <"a">
  [ 10] nteq
  [ 11] jmpifz [ 22] ............................ (case) "a", ...
  [ 14] peek 0
  [ 16] pushcons 24 ............................. <"b">
  [ 18] eq
  [ 19] jmpifz [ 25] ............................ (case) ..., "b":
  [ 22] jmp [ 52]
  [ 25] peek 0
  [ 27] pushcons 25 ............................. <"c">
  [ 29] eq
  [ 30] jmpifz [ 40] ............................ (case) "c":
  [ 33] pushcons 23 ............................. <"a">
  [ 35] setlocal 0 .............................. sLayerMap = "a"
  [ 37] jmp [ 52]
  [ 40] peek 0
  [ 42] pushcons 26 ............................. <"d">
  [ 44] eq
  [ 45] jmpifz [ 52] ............................ (case) "d":
  [ 48] pushcons 24 ............................. <"b">
  [ 50] setlocal 0 .............................. sLayerMap = "b"
  [ 52] pop 1 ................................... end case
  [ 54] getlocal 0 .............................. <sLayerMap>
  [ 56] pusharglistnoret 1 ...................... <sLayerMap>
  [ 58] extcall 92 .............................. return sLayerMap
  [ 60] ret
end

on calculateBaseSquare me, sOrder, oSquare
  [  0] getparam 1 .............................. <sOrder>
  [  2] peek 0 .................................. case sOrder of
  [  4] pushcons 23 ............................. <"a">
  [  6] nteq
  [  7] jmpifz [ 18] ............................ (case) "a", ...
  [ 10] peek 0
  [ 12] pushcons 24 ............................. <"b">
  [ 14] eq
  [ 15] jmpifz [ 30] ............................ (case) ..., "b":
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 1194 ............................ <me.getSquareByGreatestDepth()>
  [ 25] setparam 2 .............................. oSquare = me.getSquareByGreatestDepth()
  [ 27] jmp [ 49]
  [ 30] peek 0
  [ 32] pushcons 25 ............................. <"c">
  [ 34] eq
  [ 35] jmpifz [ 41] ............................ (case) "c":
  [ 38] jmp [ 49]
  [ 41] peek 0
  [ 43] pushcons 26 ............................. <"d">
  [ 45] eq
  [ 46] jmpifz [ 49] ............................ (case) "d":
  [ 49] pop 1 ................................... end case
  [ 51] getparam 2 .............................. <oSquare>
  [ 53] pusharglistnoret 1 ...................... <oSquare>
  [ 55] extcall 92 .............................. return oSquare
  [ 57] ret
end

on getSquareByGreatestDepth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 154 .......................... <me.iRow>
  [  4] setlocal 0 .............................. _iRow = me.iRow
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 155 .......................... <me.iCol>
  [ 10] setlocal 1 .............................. _iCol = me.iCol
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 249 .......................... <me.iDirection>
  [ 16] peek 0 .................................. case me.iDirection of
  [ 18] pushint8 2 .............................. <2>
  [ 20] nteq
  [ 21] jmpifz [ 32] ............................ (case) 2, ...
  [ 24] peek 0
  [ 26] pushint8 6 .............................. <6>
  [ 28] eq
  [ 29] jmpifz [ 65] ............................ (case) ..., 6:
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 154 .......................... <me.iRow>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 442 .......................... <me.iWidth>
  [ 41] pushint8 1 .............................. <1>
  [ 43] sub ..................................... <me.iWidth - 1>
  [ 44] add ..................................... <me.iRow + (me.iWidth - 1)>
  [ 45] setlocal 0 .............................. _iRow = me.iRow + (me.iWidth - 1)
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 155 .......................... <me.iCol>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 472 .......................... <me.iDepth>
  [ 56] pushint8 1 .............................. <1>
  [ 58] sub ..................................... <me.iDepth - 1>
  [ 59] add ..................................... <me.iCol + (me.iDepth - 1)>
  [ 60] setlocal 1 .............................. _iCol = me.iCol + (me.iDepth - 1)
  [ 62] jmp [110]
  [ 65] peek 0
  [ 67] pushint8 4 .............................. <4>
  [ 69] nteq
  [ 70] jmpifz [ 80] ............................ (case) 4, ...
  [ 73] peek 0
  [ 75] pushzero ................................ <0>
  [ 76] eq
  [ 77] jmpifz [110] ............................ (case) ..., 0:
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 154 .......................... <me.iRow>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 472 .......................... <me.iDepth>
  [ 89] pushint8 1 .............................. <1>
  [ 91] sub ..................................... <me.iDepth - 1>
  [ 92] add ..................................... <me.iRow + (me.iDepth - 1)>
  [ 93] setlocal 0 .............................. _iRow = me.iRow + (me.iDepth - 1)
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 155 .......................... <me.iCol>
  [ 99] getparam 0 .............................. <me>
  [101] getobjprop 442 .......................... <me.iWidth>
  [104] pushint8 1 .............................. <1>
  [106] sub ..................................... <me.iWidth - 1>
  [107] add ..................................... <me.iCol + (me.iWidth - 1)>
  [108] setlocal 1 .............................. _iCol = me.iCol + (me.iWidth - 1)
  [110] pop 1 ................................... end case
  [112] getglobal 88 ............................ <oIsoScene>
  [114] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [116] getlocal 0 .............................. <_iRow>
  [118] getlocal 1 .............................. <_iCol>
  [120] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [122] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [125] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [127] getlocal 2 .............................. <oSquare>
  [129] pusharglist 1 ........................... <oSquare>
  [131] extcall 105 ............................. <voidp(oSquare)>
  [133] jmpifz [155] ............................ if voidp(oSquare) then
  [136] getglobal 88 ............................ <oIsoScene>
  [138] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [140] getparam 0 .............................. <me>
  [142] getobjprop 154 .......................... <me.iRow>
  [144] getparam 0 .............................. <me>
  [146] getobjprop 155 .......................... <me.iCol>
  [148] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [150] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [153] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [155] getlocal 2 .............................. <oSquare>
  [157] pusharglistnoret 1 ...................... <oSquare>
  [159] extcall 92 .............................. return oSquare
  [161] ret
end

on getSquareByGreatestRightView me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 154 .......................... <me.iRow>
  [  4] setlocal 0 .............................. _iRow = me.iRow
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 155 .......................... <me.iCol>
  [ 10] setlocal 1 .............................. _iCol = me.iCol
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 249 .......................... <me.iDirection>
  [ 16] peek 0 .................................. case me.iDirection of
  [ 18] pushint8 2 .............................. <2>
  [ 20] nteq
  [ 21] jmpifz [ 32] ............................ (case) 2, ...
  [ 24] peek 0
  [ 26] pushint8 6 .............................. <6>
  [ 28] eq
  [ 29] jmpifz [ 50] ............................ (case) ..., 6:
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 155 .......................... <me.iCol>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 472 .......................... <me.iDepth>
  [ 41] pushint8 1 .............................. <1>
  [ 43] sub ..................................... <me.iDepth - 1>
  [ 44] add ..................................... <me.iCol + (me.iDepth - 1)>
  [ 45] setlocal 1 .............................. _iCol = me.iCol + (me.iDepth - 1)
  [ 47] jmp [ 80]
  [ 50] peek 0
  [ 52] pushint8 4 .............................. <4>
  [ 54] nteq
  [ 55] jmpifz [ 65] ............................ (case) 4, ...
  [ 58] peek 0
  [ 60] pushzero ................................ <0>
  [ 61] eq
  [ 62] jmpifz [ 80] ............................ (case) ..., 0:
  [ 65] getparam 0 .............................. <me>
  [ 67] getobjprop 155 .......................... <me.iCol>
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 442 .......................... <me.iWidth>
  [ 74] pushint8 1 .............................. <1>
  [ 76] sub ..................................... <me.iWidth - 1>
  [ 77] add ..................................... <me.iCol + (me.iWidth - 1)>
  [ 78] setlocal 1 .............................. _iCol = me.iCol + (me.iWidth - 1)
  [ 80] pop 1 ................................... end case
  [ 82] getglobal 88 ............................ <oIsoScene>
  [ 84] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 86] getlocal 0 .............................. <_iRow>
  [ 88] getlocal 1 .............................. <_iCol>
  [ 90] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 92] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 95] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 97] getlocal 2 .............................. <oSquare>
  [ 99] pusharglist 1 ........................... <oSquare>
  [101] extcall 105 ............................. <voidp(oSquare)>
  [103] jmpifz [125] ............................ if voidp(oSquare) then
  [106] getglobal 88 ............................ <oIsoScene>
  [108] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [110] getparam 0 .............................. <me>
  [112] getobjprop 154 .......................... <me.iRow>
  [114] getparam 0 .............................. <me>
  [116] getobjprop 155 .......................... <me.iCol>
  [118] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [120] objcall 283 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [123] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [125] getlocal 2 .............................. <oSquare>
  [127] pusharglistnoret 1 ...................... <oSquare>
  [129] extcall 92 .............................. return oSquare
  [131] ret
end

on getSeatable me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1204 ......................... <me.bSeatable>
  [  5] pusharglistnoret 1 ...................... <me.bSeatable>
  [  7] extcall 92 .............................. return me.bSeatable
  [  9] ret
end

on getBlocksPath me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1203 ......................... <me.bBlocksPath>
  [  5] pusharglistnoret 1 ...................... <me.bBlocksPath>
  [  7] extcall 92 .............................. return me.bBlocksPath
  [  9] ret
end

on isRugITem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 260 .......................... <me.sType>
  [  5] pushcons 27 ............................. <"RUG">
  [  7] eq ...................................... <me.sType = "RUG">
  [  8] pusharglistnoret 1 ...................... <me.sType = "RUG">
  [ 10] extcall 92 .............................. return me.sType = "RUG"
  [ 12] ret
end

on isWallItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on isFurniItem me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 92 .............................. return 1
  [  6] ret
end

on isAvatar me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on isBurnedCd me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 261 .......................... <me.sProdID>
  [  5] pushint8 89 ............................. <89>
  [  7] eq ...................................... <me.sProdID = 89>
  [  8] pusharglistnoret 1 ...................... <me.sProdID = 89>
  [ 10] extcall 92 .............................. return me.sProdID = 89
  [ 12] ret
end

on toString me
  [  0] pushcons 28 ............................. <"[FURNI ITEM] TYPE: ">
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 260 .......................... <me.sType>
  [  7] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType>
  [  8] pushcons 29 ............................. <", CAT_ID: ">
  [ 10] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: ">
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 261 .......................... <me.sProdID>
  [ 16] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID>
  [ 17] pushcons 30 ............................. <", POS_ID: ">
  [ 19] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: ">
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 202 ............................. <me.getPosId()>
  [ 26] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()>
  [ 27] pusharglistnoret 1 ...................... <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()>
  [ 29] extcall 92 .............................. return "[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()
  [ 31] ret
end

on canDelete me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 92 .............................. return 1
  [  6] ret
end

on canUse me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 92 .............................. return 0
  [  5] ret
end

on canPickup me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 92 .............................. return 1
  [  6] ret
end
