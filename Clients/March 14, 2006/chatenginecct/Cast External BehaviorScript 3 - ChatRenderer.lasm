property pChatSprite, pMargin, pMaxBubbles, pBubblesMargin, pOffscreenImg, pLastUpdate, pNoChatDistance, pFilterChatDistance, pTimeoutobject, UNDEFINED, speak, shout, sing, SWEAR, MUTED
global gFeatureSet

on new me, numSprite, spriteLocz
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 8 ............................ me.UNDEFINED = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushint8 1 .............................. <1>
  [  9] setobjprop 9 ............................ me.speak = 1
  [ 11] getparam 0 .............................. <me>
  [ 13] pushint8 2 .............................. <2>
  [ 15] setobjprop 10 ........................... me.shout = 2
  [ 17] getparam 0 .............................. <me>
  [ 19] pushint8 3 .............................. <3>
  [ 21] setobjprop 11 ........................... me.sing = 3
  [ 23] getparam 0 .............................. <me>
  [ 25] pushint8 4 .............................. <4>
  [ 27] setobjprop 12 ........................... me.SWEAR = 4
  [ 29] getparam 0 .............................. <me>
  [ 31] pushint8 5 .............................. <5>
  [ 33] setobjprop 13 ........................... me.MUTED = 5
  [ 35] getparam 0 .............................. <me>
  [ 37] pushint8 9 .............................. <9>
  [ 39] setobjprop 14 ........................... me.pNoChatDistance = 9
  [ 41] getparam 0 .............................. <me>
  [ 43] pushint8 6 .............................. <6>
  [ 45] setobjprop 15 ........................... me.pFilterChatDistance = 6
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 1 .............................. <numSprite>
  [ 51] setobjprop 16 ........................... me.pChatSprite = numSprite
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 16 ........................... <me.pChatSprite>
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglistnoret 2 ...................... <me.pChatSprite, 1>
  [ 61] extcall 17 .............................. puppetSprite(me.pChatSprite, 1)
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 16 ........................... <me.pChatSprite>
  [ 67] pusharglist 1 ........................... <me.pChatSprite>
  [ 69] extcall 18 .............................. <sprite(me.pChatSprite)>
  [ 71] pushcons 0 .............................. <"chatimg">
  [ 73] pusharglist 1 ........................... <"chatimg">
  [ 75] extcall 19 .............................. <member("chatimg")>
  [ 77] setobjprop 19 ........................... sprite(me.pChatSprite).member = member("chatimg")
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 16 ........................... <me.pChatSprite>
  [ 83] pusharglist 1 ........................... <me.pChatSprite>
  [ 85] extcall 18 .............................. <sprite(me.pChatSprite)>
  [ 87] pushint8 8 .............................. <8>
  [ 89] setobjprop 20 ........................... sprite(me.pChatSprite).ink = 8
  [ 91] getparam 0 .............................. <me>
  [ 93] getobjprop 16 ........................... <me.pChatSprite>
  [ 95] pusharglist 1 ........................... <me.pChatSprite>
  [ 97] extcall 18 .............................. <sprite(me.pChatSprite)>
  [ 99] getparam 2 .............................. <spriteLocz>
  [101] setobjprop 21 ........................... sprite(me.pChatSprite).locZ = spriteLocz
  [103] getparam 0 .............................. <me>
  [105] getobjprop 16 ........................... <me.pChatSprite>
  [107] pusharglist 1 ........................... <me.pChatSprite>
  [109] extcall 18 .............................. <sprite(me.pChatSprite)>
  [111] pushcons 0 .............................. <"chatimg">
  [113] pusharglist 1 ........................... <"chatimg">
  [115] extcall 19 .............................. <member("chatimg")>
  [117] getobjprop 22 ........................... <member("chatimg").rect>
  [119] setobjprop 22 ........................... sprite(me.pChatSprite).rect = member("chatimg").rect
  [121] pushint8 10 ............................. <10>
  [123] setprop 23 .............................. pMargin = 10
  [125] pushint8 5 .............................. <5>
  [127] setprop 24 .............................. pMaxBubbles = 5
  [129] pushint8 5 .............................. <5>
  [131] setprop 25 .............................. pBubblesMargin = 5
  [133] getparam 0 .............................. <me>
  [135] pusharglistnoret 1 ...................... <me>
  [137] objcall 1 ............................... me.showChat()
  [139] getparam 0 .............................. <me>
  [141] pusharglistnoret 1 ...................... <me>
  [143] extcall 26 .............................. return me
  [145] ret
end

on showChat me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 7 ............................... me.reset()
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 16 ........................... <me.pChatSprite>
  [ 10] pusharglist 1 ........................... <me.pChatSprite>
  [ 12] extcall 18 .............................. <sprite(me.pChatSprite)>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 30 ........................... sprite(me.pChatSprite).visible = 1
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 31 .............................. updateStage()
  [ 22] getglobal 32 ............................ <gFeatureSet>
  [ 24] pushsymb 33 ............................. <#BETA>
  [ 26] pusharglist 2 ........................... <gFeatureSet, #BETA>
  [ 28] objcall 34 .............................. <gFeatureSet.isEnabled(#BETA)>
  [ 30] jmpifz [148] ............................ if gFeatureSet.isEnabled(#BETA) then
  [ 33] pushcons 1 .............................. <"_BETA_">
  [ 35] pusharglist 1 ........................... <"_BETA_">
  [ 37] extcall 19 .............................. <member("_BETA_")>
  [ 39] setlocal 0 .............................. oBetaMember = member("_BETA_")
  [ 41] getmovieprop 35 ......................... <the lastChannel>
  [ 43] pushint8 2 .............................. <2>
  [ 45] sub ..................................... <the lastChannel - 2>
  [ 46] setlocal 1 .............................. iBetaSprite = the lastChannel - 2
  [ 48] getlocal 1 .............................. <iBetaSprite>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglistnoret 2 ...................... <iBetaSprite, 1>
  [ 54] extcall 17 .............................. puppetSprite(iBetaSprite, 1)
  [ 56] getlocal 1 .............................. <iBetaSprite>
  [ 58] pusharglist 1 ........................... <iBetaSprite>
  [ 60] extcall 18 .............................. <sprite(iBetaSprite)>
  [ 62] getlocal 0 .............................. <oBetaMember>
  [ 64] setobjprop 19 ........................... sprite(iBetaSprite).member = oBetaMember
  [ 66] getlocal 1 .............................. <iBetaSprite>
  [ 68] pusharglist 1 ........................... <iBetaSprite>
  [ 70] extcall 18 .............................. <sprite(iBetaSprite)>
  [ 72] pushint16 622 ........................... <622>
  [ 75] setobjprop 36 ........................... sprite(iBetaSprite).locH = 622
  [ 77] getlocal 1 .............................. <iBetaSprite>
  [ 79] pusharglist 1 ........................... <iBetaSprite>
  [ 81] extcall 18 .............................. <sprite(iBetaSprite)>
  [ 83] pushint16 506 ........................... <506>
  [ 86] setobjprop 37 ........................... sprite(iBetaSprite).locV = 506
  [ 88] getlocal 1 .............................. <iBetaSprite>
  [ 90] pusharglist 1 ........................... <iBetaSprite>
  [ 92] extcall 18 .............................. <sprite(iBetaSprite)>
  [ 94] getlocal 0 .............................. <oBetaMember>
  [ 96] getobjprop 38 ........................... <oBetaMember.width>
  [ 98] setobjprop 38 ........................... sprite(iBetaSprite).width = oBetaMember.width
  [100] getlocal 1 .............................. <iBetaSprite>
  [102] pusharglist 1 ........................... <iBetaSprite>
  [104] extcall 18 .............................. <sprite(iBetaSprite)>
  [106] getlocal 0 .............................. <oBetaMember>
  [108] getobjprop 39 ........................... <oBetaMember.height>
  [110] setobjprop 39 ........................... sprite(iBetaSprite).height = oBetaMember.height
  [112] getlocal 1 .............................. <iBetaSprite>
  [114] pusharglist 1 ........................... <iBetaSprite>
  [116] extcall 18 .............................. <sprite(iBetaSprite)>
  [118] pushint8 36 ............................. <36>
  [120] setobjprop 20 ........................... sprite(iBetaSprite).ink = 36
  [122] getlocal 1 .............................. <iBetaSprite>
  [124] pusharglist 1 ........................... <iBetaSprite>
  [126] extcall 18 .............................. <sprite(iBetaSprite)>
  [128] pusharglist 0 ........................... <>
  [130] thebuiltin 40 ........................... <the maxinteger>
  [132] setobjprop 21 ........................... sprite(iBetaSprite).locZ = the maxinteger
  [134] getlocal 1 .............................. <iBetaSprite>
  [136] pusharglist 1 ........................... <iBetaSprite>
  [138] extcall 18 .............................. <sprite(iBetaSprite)>
  [140] pushint8 1 .............................. <1>
  [142] setobjprop 30 ........................... sprite(iBetaSprite).visible = 1
  [144] pusharglistnoret 0 ...................... <>
  [146] extcall 31 .............................. updateStage()
  [148] ret
end

on hideChat me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 16 ........................... <me.pChatSprite>
  [  4] pusharglist 1 ........................... <me.pChatSprite>
  [  6] extcall 18 .............................. <sprite(me.pChatSprite)>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 30 ........................... sprite(me.pChatSprite).visible = 0
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 43 ....................... <me.pTimeoutobject>
  [ 15] pusharglistnoret 1 ...................... <me.pTimeoutobject>
  [ 17] objcall 44 .............................. me.pTimeoutobject.forget()
  [ 19] getglobal 32 ............................ <gFeatureSet>
  [ 21] pushsymb 33 ............................. <#BETA>
  [ 23] pusharglist 2 ........................... <gFeatureSet, #BETA>
  [ 25] objcall 34 .............................. <gFeatureSet.isEnabled(#BETA)>
  [ 27] jmpifz [ 65] ............................ if gFeatureSet.isEnabled(#BETA) then
  [ 30] pushcons 1 .............................. <"_BETA_">
  [ 32] pusharglist 1 ........................... <"_BETA_">
  [ 34] extcall 19 .............................. <member("_BETA_")>
  [ 36] setlocal 0 .............................. oBetaMember = member("_BETA_")
  [ 38] getmovieprop 35 ......................... <the lastChannel>
  [ 40] pushint8 2 .............................. <2>
  [ 42] sub ..................................... <the lastChannel - 2>
  [ 43] setlocal 1 .............................. iBetaSprite = the lastChannel - 2
  [ 45] getlocal 1 .............................. <iBetaSprite>
  [ 47] pushzero ................................ <0>
  [ 48] pusharglistnoret 2 ...................... <iBetaSprite, 0>
  [ 50] extcall 17 .............................. puppetSprite(iBetaSprite, 0)
  [ 52] getlocal 1 .............................. <iBetaSprite>
  [ 54] pusharglist 1 ........................... <iBetaSprite>
  [ 56] extcall 18 .............................. <sprite(iBetaSprite)>
  [ 58] pushzero ................................ <0>
  [ 59] setobjprop 30 ........................... sprite(iBetaSprite).visible = 0
  [ 61] pusharglistnoret 0 ...................... <>
  [ 63] extcall 31 .............................. updateStage()
  [ 65] ret
end

on displaychat me, sName, sMessage, cColor, pOrigin, iStrength, iDistance
  [  0] getparam 1 .............................. <sName>
  [  2] pusharglist 1 ........................... <sName>
  [  4] extcall 45 .............................. <stringp(sName)>
  [  6] pushzero ................................ <0>
  [  7] eq ...................................... <stringp(sName) = 0>
  [  8] jmpifz [ 18] ............................ if stringp(sName) = 0 then
  [ 11] pushint8 1 .............................. <1>
  [ 13] inv ..................................... <-1>
  [ 14] pusharglistnoret 1 ...................... <-1>
  [ 16] extcall 26 .............................. return -1
  [ 18] getparam 2 .............................. <sMessage>
  [ 20] pusharglist 1 ........................... <sMessage>
  [ 22] extcall 45 .............................. <stringp(sMessage)>
  [ 24] pushzero ................................ <0>
  [ 25] eq ...................................... <stringp(sMessage) = 0>
  [ 26] jmpifz [ 36] ............................ if stringp(sMessage) = 0 then
  [ 29] pushint8 2 .............................. <2>
  [ 31] inv ..................................... <-2>
  [ 32] pusharglistnoret 1 ...................... <-2>
  [ 34] extcall 26 .............................. return -2
  [ 36] getparam 3 .............................. <cColor>
  [ 38] pusharglist 1 ........................... <cColor>
  [ 40] extcall 46 .............................. <ilk(cColor)>
  [ 42] pushsymb 47 ............................. <#color>
  [ 44] nteq .................................... <ilk(cColor) <> #color>
  [ 45] jmpifz [ 55] ............................ if ilk(cColor) <> #color then
  [ 48] pushint8 3 .............................. <3>
  [ 50] inv ..................................... <-3>
  [ 51] pusharglistnoret 1 ...................... <-3>
  [ 53] extcall 26 .............................. return -3
  [ 55] getparam 4 .............................. <pOrigin>
  [ 57] pusharglist 1 ........................... <pOrigin>
  [ 59] extcall 46 .............................. <ilk(pOrigin)>
  [ 61] pushsymb 48 ............................. <#point>
  [ 63] nteq .................................... <ilk(pOrigin) <> #point>
  [ 64] jmpifz [ 74] ............................ if ilk(pOrigin) <> #point then
  [ 67] pushint8 4 .............................. <4>
  [ 69] inv ..................................... <-4>
  [ 70] pusharglistnoret 1 ...................... <-4>
  [ 72] extcall 26 .............................. return -4
  [ 74] getparam 5 .............................. <iStrength>
  [ 76] getparam 0 .............................. <me>
  [ 78] getobjprop 8 ............................ <me.UNDEFINED>
  [ 80] eq ...................................... <iStrength = me.UNDEFINED>
  [ 81] jmpifz [ 91] ............................ if iStrength = me.UNDEFINED then
  [ 84] pushint8 5 .............................. <5>
  [ 86] inv ..................................... <-5>
  [ 87] pusharglistnoret 1 ...................... <-5>
  [ 89] extcall 26 .............................. return -5
  [ 91] getparam 6 .............................. <iDistance>
  [ 93] pusharglist 1 ........................... <iDistance>
  [ 95] extcall 49 .............................. <integerp(iDistance)>
  [ 97] pushzero ................................ <0>
  [ 98] eq ...................................... <integerp(iDistance) = 0>
  [ 99] jmpifz [109] ............................ if integerp(iDistance) = 0 then
  [102] pushint8 6 .............................. <6>
  [104] inv ..................................... <-6>
  [105] pusharglistnoret 1 ...................... <-6>
  [107] extcall 26 .............................. return -6
  [109] getparam 5 .............................. <iStrength>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 11 ........................... <me.sing>
  [115] nteq .................................... <iStrength <> me.sing>
  [116] getparam 5 .............................. <iStrength>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 10 ........................... <me.shout>
  [122] nteq .................................... <iStrength <> me.shout>
  [123] and ..................................... <(iStrength <> me.sing) and (iStrength <> me.shout)>
  [124] jmpifz [164] ............................ if (iStrength <> me.sing) and (iStrength <> me.shout) then
  [127] getparam 6 .............................. <iDistance>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 14 ........................... <me.pNoChatDistance>
  [133] gteq .................................... <iDistance >= me.pNoChatDistance>
  [134] jmpifz [144] ............................ if iDistance >= me.pNoChatDistance then
  [137] pushint8 7 .............................. <7>
  [139] inv ..................................... <-7>
  [140] pusharglistnoret 1 ...................... <-7>
  [142] extcall 26 .............................. return -7
  [144] getparam 6 .............................. <iDistance>
  [146] getparam 0 .............................. <me>
  [148] getobjprop 15 ........................... <me.pFilterChatDistance>
  [150] gteq .................................... <iDistance >= me.pFilterChatDistance>
  [151] jmpifz [164] ............................ if iDistance >= me.pFilterChatDistance then
  [154] getparam 0 .............................. <me>
  [156] getparam 2 .............................. <sMessage>
  [158] pusharglist 2 ........................... <me, sMessage>
  [160] objcall 4 ............................... <me.filterChat(sMessage)>
  [162] setparam 2 .............................. sMessage = me.filterChat(sMessage)
  [164] pushcons 2 .............................. <"CHATobject.textholder">
  [166] pusharglist 1 ........................... <"CHATobject.textholder">
  [168] extcall 19 .............................. <member("CHATobject.textholder")>
  [170] getparam 1 .............................. <sName>
  [172] pushcons 3 .............................. <" ">
  [174] joinstr ................................. <sName & " ">
  [175] setobjprop 50 ........................... member("CHATobject.textholder").text = sName & " "
  [177] pushcons 2 .............................. <"CHATobject.textholder">
  [179] pusharglist 1 ........................... <"CHATobject.textholder">
  [181] extcall 19 .............................. <member("CHATobject.textholder")>
  [183] pushsymb 51 ............................. <#bold>
  [185] pusharglist 1 ........................... <[#bold]>
  [187] pushlist ................................ <[#bold]>
  [188] setobjprop 52 ........................... member("CHATobject.textholder").fontStyle = [#bold]
  [190] pushcons 2 .............................. <"CHATobject.textholder">
  [192] pusharglist 1 ........................... <"CHATobject.textholder">
  [194] extcall 19 .............................. <member("CHATobject.textholder")>
  [196] pushint8 10 ............................. <10>
  [198] setobjprop 53 ........................... member("CHATobject.textholder").fontSize = 10
  [200] pushcons 2 .............................. <"CHATobject.textholder">
  [202] pusharglist 1 ........................... <"CHATobject.textholder">
  [204] extcall 19 .............................. <member("CHATobject.textholder")>
  [206] pushcons 4 .............................. <"Verdana">
  [208] setobjprop 54 ........................... member("CHATobject.textholder").font = "Verdana"
  [210] pushcons 2 .............................. <"CHATobject.textholder">
  [212] pusharglist 1 ........................... <"CHATobject.textholder">
  [214] extcall 19 .............................. <member("CHATobject.textholder")>
  [216] getobjprop 55 ........................... <member("CHATobject.textholder").image>
  [218] setlocal 0 .............................. nameTempImage = member("CHATobject.textholder").image
  [220] pushcons 2 .............................. <"CHATobject.textholder">
  [222] pusharglist 1 ........................... <"CHATobject.textholder">
  [224] extcall 19 .............................. <member("CHATobject.textholder")>
  [226] getparam 1 .............................. <sName>
  [228] pusharglist 1 ........................... <sName>
  [230] extcall 57 .............................. <length(sName)>
  [232] pushint8 1 .............................. <1>
  [234] add ..................................... <length(sName) + 1>
  [235] pusharglist 2 ........................... <member("CHATobject.textholder"), length(sName) + 1>
  [237] extcall 56 .............................. <charPosToLoc(member("CHATobject.textholder"), length(sName) + 1)>
  [239] getobjprop 36 ........................... <charPosToLoc(member("CHATobject.textholder"), length(sName) + 1).locH>
  [241] setlocal 1 .............................. nameWidth = charPosToLoc(member("CHATobject.textholder"), length(sName) + 1).locH
  [243] pushcons 2 .............................. <"CHATobject.textholder">
  [245] pusharglist 1 ........................... <"CHATobject.textholder">
  [247] extcall 19 .............................. <member("CHATobject.textholder")>
  [249] getobjprop 39 ........................... <member("CHATobject.textholder").height>
  [251] setlocal 2 .............................. nameHeight = member("CHATobject.textholder").height
  [253] getlocal 1 .............................. <nameWidth>
  [255] getlocal 2 .............................. <nameHeight>
  [257] pushint8 32 ............................. <32>
  [259] pusharglist 3 ........................... <nameWidth, nameHeight, 32>
  [261] extcall 55 .............................. <image(nameWidth, nameHeight, 32)>
  [263] setlocal 3 .............................. nameImage = image(nameWidth, nameHeight, 32)
  [265] getlocal 3 .............................. <nameImage>
  [267] getlocal 0 .............................. <nameTempImage>
  [269] getlocal 3 .............................. <nameImage>
  [271] getobjprop 22 ........................... <nameImage.rect>
  [273] getlocal 3 .............................. <nameImage>
  [275] getobjprop 22 ........................... <nameImage.rect>
  [277] pusharglistnoret 4 ...................... <nameImage, nameTempImage, nameImage.rect, nameImage.rect>
  [279] objcall 58 .............................. nameImage.copyPixels(nameTempImage, nameImage.rect, nameImage.rect)
  [281] pushcons 2 .............................. <"CHATobject.textholder">
  [283] pusharglist 1 ........................... <"CHATobject.textholder">
  [285] extcall 19 .............................. <member("CHATobject.textholder")>
  [287] getparam 2 .............................. <sMessage>
  [289] pushcons 3 .............................. <" ">
  [291] joinstr ................................. <sMessage & " ">
  [292] setobjprop 50 ........................... member("CHATobject.textholder").text = sMessage & " "
  [294] getparam 5 .............................. <iStrength>
  [296] peek 0 .................................. case iStrength of
  [298] getparam 0 .............................. <me>
  [300] getobjprop 9 ............................ <me.speak>
  [302] eq
  [303] jmpifz [332] ............................ (case) me.speak:
  [306] pushcons 2 .............................. <"CHATobject.textholder">
  [308] pusharglist 1 ........................... <"CHATobject.textholder">
  [310] extcall 19 .............................. <member("CHATobject.textholder")>
  [312] pushsymb 59 ............................. <#plain>
  [314] pusharglist 1 ........................... <[#plain]>
  [316] pushlist ................................ <[#plain]>
  [317] setobjprop 52 ........................... member("CHATobject.textholder").fontStyle = [#plain]
  [319] pushcons 2 .............................. <"CHATobject.textholder">
  [321] pusharglist 1 ........................... <"CHATobject.textholder">
  [323] extcall 19 .............................. <member("CHATobject.textholder")>
  [325] pushint8 10 ............................. <10>
  [327] setobjprop 53 ........................... member("CHATobject.textholder").fontSize = 10
  [329] jmp [451]
  [332] peek 0
  [334] getparam 0 .............................. <me>
  [336] getobjprop 10 ........................... <me.shout>
  [338] eq
  [339] jmpifz [368] ............................ (case) me.shout:
  [342] pushcons 2 .............................. <"CHATobject.textholder">
  [344] pusharglist 1 ........................... <"CHATobject.textholder">
  [346] extcall 19 .............................. <member("CHATobject.textholder")>
  [348] pushsymb 51 ............................. <#bold>
  [350] pusharglist 1 ........................... <[#bold]>
  [352] pushlist ................................ <[#bold]>
  [353] setobjprop 52 ........................... member("CHATobject.textholder").fontStyle = [#bold]
  [355] pushcons 2 .............................. <"CHATobject.textholder">
  [357] pusharglist 1 ........................... <"CHATobject.textholder">
  [359] extcall 19 .............................. <member("CHATobject.textholder")>
  [361] pushint8 10 ............................. <10>
  [363] setobjprop 53 ........................... member("CHATobject.textholder").fontSize = 10
  [365] jmp [451]
  [368] peek 0
  [370] getparam 0 .............................. <me>
  [372] getobjprop 11 ........................... <me.sing>
  [374] eq
  [375] jmpifz [406] ............................ (case) me.sing:
  [378] pushcons 2 .............................. <"CHATobject.textholder">
  [380] pusharglist 1 ........................... <"CHATobject.textholder">
  [382] extcall 19 .............................. <member("CHATobject.textholder")>
  [384] pushsymb 51 ............................. <#bold>
  [386] pushsymb 60 ............................. <#italic>
  [388] pusharglist 2 ........................... <[#bold, #italic]>
  [390] pushlist ................................ <[#bold, #italic]>
  [391] setobjprop 52 ........................... member("CHATobject.textholder").fontStyle = [#bold, #italic]
  [393] pushcons 2 .............................. <"CHATobject.textholder">
  [395] pusharglist 1 ........................... <"CHATobject.textholder">
  [397] extcall 19 .............................. <member("CHATobject.textholder")>
  [399] pushint8 11 ............................. <11>
  [401] setobjprop 53 ........................... member("CHATobject.textholder").fontSize = 11
  [403] jmp [451]
  [406] peek 0
  [408] getparam 0 .............................. <me>
  [410] getobjprop 61 ........................... <me.WHISPER>
  [412] eq
  [413] jmpifz [442] ............................ (case) me.WHISPER:
  [416] pushcons 2 .............................. <"CHATobject.textholder">
  [418] pusharglist 1 ........................... <"CHATobject.textholder">
  [420] extcall 19 .............................. <member("CHATobject.textholder")>
  [422] pushsymb 59 ............................. <#plain>
  [424] pusharglist 1 ........................... <[#plain]>
  [426] pushlist ................................ <[#plain]>
  [427] setobjprop 52 ........................... member("CHATobject.textholder").fontStyle = [#plain]
  [429] pushcons 2 .............................. <"CHATobject.textholder">
  [431] pusharglist 1 ........................... <"CHATobject.textholder">
  [433] extcall 19 .............................. <member("CHATobject.textholder")>
  [435] pushint8 9 .............................. <9>
  [437] setobjprop 53 ........................... member("CHATobject.textholder").fontSize = 9
  [439] jmp [451] ............................... (case) otherwise:
  [442] pop 1
  [444] pushint8 5 .............................. <5>
  [446] inv ..................................... <-5>
  [447] pusharglistnoret 1 ...................... <-5>
  [449] extcall 26 .............................. return -5
  [451] pop 1 ................................... end case
  [453] pushcons 2 .............................. <"CHATobject.textholder">
  [455] pusharglist 1 ........................... <"CHATobject.textholder">
  [457] extcall 19 .............................. <member("CHATobject.textholder")>
  [459] pushcons 4 .............................. <"Verdana">
  [461] setobjprop 54 ........................... member("CHATobject.textholder").font = "Verdana"
  [463] pushcons 2 .............................. <"CHATobject.textholder">
  [465] pusharglist 1 ........................... <"CHATobject.textholder">
  [467] extcall 19 .............................. <member("CHATobject.textholder")>
  [469] pushint16 255 ........................... <255>
  [472] pushint16 255 ........................... <255>
  [475] pushint16 255 ........................... <255>
  [478] pusharglist 3 ........................... <255, 255, 255>
  [480] extcall 62 .............................. <rgb(255, 255, 255)>
  [482] setobjprop 63 ........................... member("CHATobject.textholder").bgColor = rgb(255, 255, 255)
  [484] pushcons 2 .............................. <"CHATobject.textholder">
  [486] pusharglist 1 ........................... <"CHATobject.textholder">
  [488] extcall 19 .............................. <member("CHATobject.textholder")>
  [490] getobjprop 55 ........................... <member("CHATobject.textholder").image>
  [492] setlocal 4 .............................. msgTempImage = member("CHATobject.textholder").image
  [494] pushcons 2 .............................. <"CHATobject.textholder">
  [496] pusharglist 1 ........................... <"CHATobject.textholder">
  [498] extcall 19 .............................. <member("CHATobject.textholder")>
  [500] getparam 2 .............................. <sMessage>
  [502] pusharglist 1 ........................... <sMessage>
  [504] extcall 57 .............................. <length(sMessage)>
  [506] pushint8 1 .............................. <1>
  [508] add ..................................... <length(sMessage) + 1>
  [509] pusharglist 2 ........................... <member("CHATobject.textholder"), length(sMessage) + 1>
  [511] extcall 56 .............................. <charPosToLoc(member("CHATobject.textholder"), length(sMessage) + 1)>
  [513] getobjprop 36 ........................... <charPosToLoc(member("CHATobject.textholder"), length(sMessage) + 1).locH>
  [515] setlocal 5 .............................. msgWidth = charPosToLoc(member("CHATobject.textholder"), length(sMessage) + 1).locH
  [517] pushcons 2 .............................. <"CHATobject.textholder">
  [519] pusharglist 1 ........................... <"CHATobject.textholder">
  [521] extcall 19 .............................. <member("CHATobject.textholder")>
  [523] getobjprop 39 ........................... <member("CHATobject.textholder").height>
  [525] setlocal 6 .............................. msgHeight = member("CHATobject.textholder").height
  [527] getlocal 5 .............................. <msgWidth>
  [529] getlocal 6 .............................. <msgHeight>
  [531] pushint8 32 ............................. <32>
  [533] pusharglist 3 ........................... <msgWidth, msgHeight, 32>
  [535] extcall 55 .............................. <image(msgWidth, msgHeight, 32)>
  [537] setlocal 7 .............................. msgImage = image(msgWidth, msgHeight, 32)
  [539] getlocal 7 .............................. <msgImage>
  [541] getlocal 4 .............................. <msgTempImage>
  [543] getlocal 7 .............................. <msgImage>
  [545] getobjprop 22 ........................... <msgImage.rect>
  [547] getlocal 7 .............................. <msgImage>
  [549] getobjprop 22 ........................... <msgImage.rect>
  [551] pusharglistnoret 4 ...................... <msgImage, msgTempImage, msgImage.rect, msgImage.rect>
  [553] objcall 58 .............................. msgImage.copyPixels(msgTempImage, msgImage.rect, msgImage.rect)
  [555] pushcons 5 .............................. <"cc.bubble.left">
  [557] pusharglist 1 ........................... <"cc.bubble.left">
  [559] extcall 19 .............................. <member("cc.bubble.left")>
  [561] getchainedprop 55 ....................... <member("cc.bubble.left").image>
  [563] pusharglist 1 ........................... <member("cc.bubble.left").image>
  [565] objcall 64 .............................. <member("cc.bubble.left").image.duplicate()>
  [567] setlocal 8 .............................. sourceimg = member("cc.bubble.left").image.duplicate()
  [569] getlocal 3 .............................. <nameImage>
  [571] getobjprop 38 ........................... <nameImage.width>
  [573] getprop 23 .............................. <pMargin>
  [575] pushint8 2 .............................. <2>
  [577] mul ..................................... <pMargin * 2>
  [578] add ..................................... <nameImage.width + (pMargin * 2)>
  [579] getlocal 8 .............................. <sourceimg>
  [581] getobjprop 39 ........................... <sourceimg.height>
  [583] pushint8 32 ............................. <32>
  [585] pusharglist 3 ........................... <nameImage.width + (pMargin * 2), sourceimg.height, 32>
  [587] extcall 55 .............................. <image(nameImage.width + (pMargin * 2), sourceimg.height, 32)>
  [589] setlocal 9 .............................. bubblename = image(nameImage.width + (pMargin * 2), sourceimg.height, 32)
  [591] getlocal 9 .............................. <bubblename>
  [593] pushint8 1 .............................. <1>
  [595] setobjprop 65 ........................... bubblename.useAlpha = 1
  [597] getlocal 9 .............................. <bubblename>
  [599] getlocal 8 .............................. <sourceimg>
  [601] getlocal 9 .............................. <bubblename>
  [603] getobjprop 22 ........................... <bubblename.rect>
  [605] getlocal 8 .............................. <sourceimg>
  [607] getobjprop 22 ........................... <sourceimg.rect>
  [609] pushsymb 63 ............................. <#bgColor>
  [611] getparam 3 .............................. <cColor>
  [613] pusharglist 2 ........................... <[#bgColor: cColor]>
  [615] pushproplist ............................ <[#bgColor: cColor]>
  [616] pusharglistnoret 5 ...................... <bubblename, sourceimg, bubblename.rect, sourceimg.rect, [#bgColor: cColor]>
  [618] objcall 58 .............................. bubblename.copyPixels(sourceimg, bubblename.rect, sourceimg.rect, [#bgColor: cColor])
  [620] getprop 23 .............................. <pMargin>
  [622] getlocal 9 .............................. <bubblename>
  [624] getobjprop 39 ........................... <bubblename.height>
  [626] getlocal 3 .............................. <nameImage>
  [628] getobjprop 39 ........................... <nameImage.height>
  [630] sub ..................................... <bubblename.height - nameImage.height>
  [631] pushint8 2 .............................. <2>
  [633] div ..................................... <(bubblename.height - nameImage.height) / 2>
  [634] getprop 23 .............................. <pMargin>
  [636] getlocal 9 .............................. <bubblename>
  [638] getobjprop 39 ........................... <bubblename.height>
  [640] getlocal 3 .............................. <nameImage>
  [642] getobjprop 39 ........................... <nameImage.height>
  [644] sub ..................................... <bubblename.height - nameImage.height>
  [645] pushint8 2 .............................. <2>
  [647] div ..................................... <(bubblename.height - nameImage.height) / 2>
  [648] pusharglist 4 ........................... <pMargin, (bubblename.height - nameImage.height) / 2, pMargin, (bubblename.height - nameImage.height) / 2>
  [650] extcall 22 .............................. <rect(pMargin, (bubblename.height - nameImage.height) / 2, pMargin, (bubblename.height - nameImage.height) / 2)>
  [652] setlocal 10 ............................. namedisplacementrect = rect(pMargin, (bubblename.height - nameImage.height) / 2, pMargin, (bubblename.height - nameImage.height) / 2)
  [654] getlocal 9 .............................. <bubblename>
  [656] getlocal 3 .............................. <nameImage>
  [658] getlocal 3 .............................. <nameImage>
  [660] getobjprop 22 ........................... <nameImage.rect>
  [662] getlocal 10 ............................. <namedisplacementrect>
  [664] add ..................................... <nameImage.rect + namedisplacementrect>
  [665] getlocal 3 .............................. <nameImage>
  [667] getobjprop 22 ........................... <nameImage.rect>
  [669] pushsymb 20 ............................. <#ink>
  [671] pushint8 36 ............................. <36>
  [673] pusharglist 2 ........................... <[#ink: 36]>
  [675] pushproplist ............................ <[#ink: 36]>
  [676] pusharglistnoret 5 ...................... <bubblename, nameImage, nameImage.rect + namedisplacementrect, nameImage.rect, [#ink: 36]>
  [678] objcall 58 .............................. bubblename.copyPixels(nameImage, nameImage.rect + namedisplacementrect, nameImage.rect, [#ink: 36])
  [680] pushcons 6 .............................. <"cc.bubble.right">
  [682] pusharglist 1 ........................... <"cc.bubble.right">
  [684] extcall 19 .............................. <member("cc.bubble.right")>
  [686] getchainedprop 55 ....................... <member("cc.bubble.right").image>
  [688] pusharglist 1 ........................... <member("cc.bubble.right").image>
  [690] objcall 64 .............................. <member("cc.bubble.right").image.duplicate()>
  [692] setlocal 8 .............................. sourceimg = member("cc.bubble.right").image.duplicate()
  [694] getlocal 7 .............................. <msgImage>
  [696] getobjprop 38 ........................... <msgImage.width>
  [698] getprop 23 .............................. <pMargin>
  [700] pushint8 2 .............................. <2>
  [702] mul ..................................... <pMargin * 2>
  [703] add ..................................... <msgImage.width + (pMargin * 2)>
  [704] getlocal 8 .............................. <sourceimg>
  [706] getobjprop 39 ........................... <sourceimg.height>
  [708] pushint8 32 ............................. <32>
  [710] pusharglist 3 ........................... <msgImage.width + (pMargin * 2), sourceimg.height, 32>
  [712] extcall 55 .............................. <image(msgImage.width + (pMargin * 2), sourceimg.height, 32)>
  [714] setlocal 11 ............................. bubblemsg = image(msgImage.width + (pMargin * 2), sourceimg.height, 32)
  [716] getlocal 11 ............................. <bubblemsg>
  [718] pushint8 1 .............................. <1>
  [720] setobjprop 65 ........................... bubblemsg.useAlpha = 1
  [722] getlocal 11 ............................. <bubblemsg>
  [724] getlocal 8 .............................. <sourceimg>
  [726] getlocal 11 ............................. <bubblemsg>
  [728] getobjprop 22 ........................... <bubblemsg.rect>
  [730] getlocal 8 .............................. <sourceimg>
  [732] getobjprop 22 ........................... <sourceimg.rect>
  [734] pusharglistnoret 4 ...................... <bubblemsg, sourceimg, bubblemsg.rect, sourceimg.rect>
  [736] objcall 58 .............................. bubblemsg.copyPixels(sourceimg, bubblemsg.rect, sourceimg.rect)
  [738] getprop 23 .............................. <pMargin>
  [740] getlocal 11 ............................. <bubblemsg>
  [742] getobjprop 39 ........................... <bubblemsg.height>
  [744] getlocal 7 .............................. <msgImage>
  [746] getobjprop 39 ........................... <msgImage.height>
  [748] sub ..................................... <bubblemsg.height - msgImage.height>
  [749] pushint8 2 .............................. <2>
  [751] div ..................................... <(bubblemsg.height - msgImage.height) / 2>
  [752] getprop 23 .............................. <pMargin>
  [754] getlocal 11 ............................. <bubblemsg>
  [756] getobjprop 39 ........................... <bubblemsg.height>
  [758] getlocal 7 .............................. <msgImage>
  [760] getobjprop 39 ........................... <msgImage.height>
  [762] sub ..................................... <bubblemsg.height - msgImage.height>
  [763] pushint8 2 .............................. <2>
  [765] div ..................................... <(bubblemsg.height - msgImage.height) / 2>
  [766] pusharglist 4 ........................... <pMargin, (bubblemsg.height - msgImage.height) / 2, pMargin, (bubblemsg.height - msgImage.height) / 2>
  [768] extcall 22 .............................. <rect(pMargin, (bubblemsg.height - msgImage.height) / 2, pMargin, (bubblemsg.height - msgImage.height) / 2)>
  [770] setlocal 12 ............................. msgdisplacementrect = rect(pMargin, (bubblemsg.height - msgImage.height) / 2, pMargin, (bubblemsg.height - msgImage.height) / 2)
  [772] getlocal 11 ............................. <bubblemsg>
  [774] getlocal 7 .............................. <msgImage>
  [776] getlocal 7 .............................. <msgImage>
  [778] getobjprop 22 ........................... <msgImage.rect>
  [780] getlocal 12 ............................. <msgdisplacementrect>
  [782] add ..................................... <msgImage.rect + msgdisplacementrect>
  [783] getlocal 7 .............................. <msgImage>
  [785] getobjprop 22 ........................... <msgImage.rect>
  [787] pushsymb 20 ............................. <#ink>
  [789] pushint8 36 ............................. <36>
  [791] pusharglist 2 ........................... <[#ink: 36]>
  [793] pushproplist ............................ <[#ink: 36]>
  [794] pusharglistnoret 5 ...................... <bubblemsg, msgImage, msgImage.rect + msgdisplacementrect, msgImage.rect, [#ink: 36]>
  [796] objcall 58 .............................. bubblemsg.copyPixels(msgImage, msgImage.rect + msgdisplacementrect, msgImage.rect, [#ink: 36])
  [798] getlocal 9 .............................. <bubblename>
  [800] getobjprop 38 ........................... <bubblename.width>
  [802] getlocal 11 ............................. <bubblemsg>
  [804] getobjprop 38 ........................... <bubblemsg.width>
  [806] add ..................................... <bubblename.width + bubblemsg.width>
  [807] getlocal 11 ............................. <bubblemsg>
  [809] getobjprop 39 ........................... <bubblemsg.height>
  [811] pushint8 32 ............................. <32>
  [813] pusharglist 3 ........................... <bubblename.width + bubblemsg.width, bubblemsg.height, 32>
  [815] extcall 55 .............................. <image(bubblename.width + bubblemsg.width, bubblemsg.height, 32)>
  [817] setlocal 13 ............................. bubble = image(bubblename.width + bubblemsg.width, bubblemsg.height, 32)
  [819] getlocal 13 ............................. <bubble>
  [821] pushint8 1 .............................. <1>
  [823] setobjprop 65 ........................... bubble.useAlpha = 1
  [825] getlocal 13 ............................. <bubble>
  [827] getlocal 9 .............................. <bubblename>
  [829] getlocal 9 .............................. <bubblename>
  [831] getobjprop 22 ........................... <bubblename.rect>
  [833] getlocal 9 .............................. <bubblename>
  [835] getobjprop 22 ........................... <bubblename.rect>
  [837] pusharglistnoret 4 ...................... <bubble, bubblename, bubblename.rect, bubblename.rect>
  [839] objcall 58 .............................. bubble.copyPixels(bubblename, bubblename.rect, bubblename.rect)
  [841] getlocal 13 ............................. <bubble>
  [843] getlocal 11 ............................. <bubblemsg>
  [845] getlocal 9 .............................. <bubblename>
  [847] getobjprop 38 ........................... <bubblename.width>
  [849] pushzero ................................ <0>
  [850] getlocal 13 ............................. <bubble>
  [852] getobjprop 38 ........................... <bubble.width>
  [854] getlocal 13 ............................. <bubble>
  [856] getobjprop 39 ........................... <bubble.height>
  [858] pusharglist 4 ........................... <bubblename.width, 0, bubble.width, bubble.height>
  [860] extcall 22 .............................. <rect(bubblename.width, 0, bubble.width, bubble.height)>
  [862] getlocal 11 ............................. <bubblemsg>
  [864] getobjprop 22 ........................... <bubblemsg.rect>
  [866] pusharglistnoret 4 ...................... <bubble, bubblemsg, rect(bubblename.width, 0, bubble.width, bubble.height), bubblemsg.rect>
  [868] objcall 58 .............................. bubble.copyPixels(bubblemsg, rect(bubblename.width, 0, bubble.width, bubble.height), bubblemsg.rect)
  [870] getprop 66 .............................. <pOffscreenImg>
  [872] getobjprop 38 ........................... <pOffscreenImg.width>
  [874] getprop 66 .............................. <pOffscreenImg>
  [876] getobjprop 39 ........................... <pOffscreenImg.height>
  [878] getprop 25 .............................. <pBubblesMargin>
  [880] add ..................................... <pOffscreenImg.height + pBubblesMargin>
  [881] getlocal 13 ............................. <bubble>
  [883] getobjprop 39 ........................... <bubble.height>
  [885] add ..................................... <pOffscreenImg.height + pBubblesMargin + bubble.height>
  [886] pushint8 32 ............................. <32>
  [888] pusharglist 3 ........................... <pOffscreenImg.width, pOffscreenImg.height + pBubblesMargin + bubble.height, 32>
  [890] extcall 55 .............................. <image(pOffscreenImg.width, pOffscreenImg.height + pBubblesMargin + bubble.height, 32)>
  [892] setlocal 14 ............................. tempOffscreenImg = image(pOffscreenImg.width, pOffscreenImg.height + pBubblesMargin + bubble.height, 32)
  [894] getlocal 14 ............................. <tempOffscreenImg>
  [896] pushint8 1 .............................. <1>
  [898] setobjprop 65 ........................... tempOffscreenImg.useAlpha = 1
  [900] getlocal 14 ............................. <tempOffscreenImg>
  [902] pushzero ................................ <0>
  [903] pusharglistnoret 2 ...................... <tempOffscreenImg, 0>
  [905] objcall 67 .............................. tempOffscreenImg.setAlpha(0)
  [907] getparam 4 .............................. <pOrigin>
  [909] getobjprop 36 ........................... <pOrigin.locH>
  [911] getlocal 13 ............................. <bubble>
  [913] getobjprop 38 ........................... <bubble.width>
  [915] pushint8 2 .............................. <2>
  [917] div ..................................... <bubble.width / 2>
  [918] sub ..................................... <pOrigin.locH - (bubble.width / 2)>
  [919] pushzero ................................ <0>
  [920] lt ...................................... <(pOrigin.locH - (bubble.width / 2)) < 0>
  [921] jmpifz [951] ............................ if (pOrigin.locH - (bubble.width / 2)) < 0 then / else
  [924] pushzero ................................ <0>
  [925] getlocal 14 ............................. <tempOffscreenImg>
  [927] getobjprop 39 ........................... <tempOffscreenImg.height>
  [929] getlocal 13 ............................. <bubble>
  [931] getobjprop 39 ........................... <bubble.height>
  [933] sub ..................................... <tempOffscreenImg.height - bubble.height>
  [934] getlocal 13 ............................. <bubble>
  [936] getobjprop 38 ........................... <bubble.width>
  [938] getlocal 14 ............................. <tempOffscreenImg>
  [940] getobjprop 39 ........................... <tempOffscreenImg.height>
  [942] pusharglist 4 ........................... <0, tempOffscreenImg.height - bubble.height, bubble.width, tempOffscreenImg.height>
  [944] extcall 22 .............................. <rect(0, tempOffscreenImg.height - bubble.height, bubble.width, tempOffscreenImg.height)>
  [946] setlocal 15 ............................. myRect = rect(0, tempOffscreenImg.height - bubble.height, bubble.width, tempOffscreenImg.height)
  [948] jmp [1051]
  [951] getparam 4 .............................. <pOrigin>
  [953] getobjprop 36 ........................... <pOrigin.locH>
  [955] getlocal 13 ............................. <bubble>
  [957] getobjprop 38 ........................... <bubble.width>
  [959] pushint8 2 .............................. <2>
  [961] div ..................................... <bubble.width / 2>
  [962] add ..................................... <pOrigin.locH + (bubble.width / 2)>
  [963] getmovieprop 68 ......................... <the stage>
  [965] getchainedprop 22 ....................... <(the stage).rect>
  [967] getobjprop 38 ........................... <(the stage).rect.width>
  [969] gt ...................................... <(pOrigin.locH + (bubble.width / 2)) > (the stage).rect.width>
  [970] jmpifz [1008] ........................... if (pOrigin.locH + (bubble.width / 2)) > (the stage).rect.width then / else
  [973] getlocal 14 ............................. <tempOffscreenImg>
  [975] getobjprop 38 ........................... <tempOffscreenImg.width>
  [977] getlocal 13 ............................. <bubble>
  [979] getobjprop 38 ........................... <bubble.width>
  [981] sub ..................................... <tempOffscreenImg.width - bubble.width>
  [982] getlocal 14 ............................. <tempOffscreenImg>
  [984] getobjprop 39 ........................... <tempOffscreenImg.height>
  [986] getlocal 13 ............................. <bubble>
  [988] getobjprop 39 ........................... <bubble.height>
  [990] sub ..................................... <tempOffscreenImg.height - bubble.height>
  [991] getlocal 14 ............................. <tempOffscreenImg>
  [993] getobjprop 38 ........................... <tempOffscreenImg.width>
  [995] getlocal 14 ............................. <tempOffscreenImg>
  [997] getobjprop 39 ........................... <tempOffscreenImg.height>
  [999] pusharglist 4 ........................... <tempOffscreenImg.width - bubble.width, tempOffscreenImg.height - bubble.height, tempOffscreenImg.width, tempOffscreenImg.height>
  [1001] extcall 22 ............................. <rect(tempOffscreenImg.width - bubble.width, tempOffscreenImg.height - bubble.height, tempOffscreenImg.width, tempOffscreenImg.height)>
  [1003] setlocal 15 ............................ myRect = rect(tempOffscreenImg.width - bubble.width, tempOffscreenImg.height - bubble.height, tempOffscreenImg.width, tempOffscreenImg.height)
  [1005] jmp [1051]
  [1008] getparam 4 ............................. <pOrigin>
  [1010] getobjprop 36 .......................... <pOrigin.locH>
  [1012] getlocal 13 ............................ <bubble>
  [1014] getobjprop 38 .......................... <bubble.width>
  [1016] pushint8 2 ............................. <2>
  [1018] div .................................... <bubble.width / 2>
  [1019] sub .................................... <pOrigin.locH - (bubble.width / 2)>
  [1020] getlocal 14 ............................ <tempOffscreenImg>
  [1022] getobjprop 39 .......................... <tempOffscreenImg.height>
  [1024] getlocal 13 ............................ <bubble>
  [1026] getobjprop 39 .......................... <bubble.height>
  [1028] sub .................................... <tempOffscreenImg.height - bubble.height>
  [1029] getparam 4 ............................. <pOrigin>
  [1031] getobjprop 36 .......................... <pOrigin.locH>
  [1033] getlocal 13 ............................ <bubble>
  [1035] getobjprop 38 .......................... <bubble.width>
  [1037] pushint8 2 ............................. <2>
  [1039] div .................................... <bubble.width / 2>
  [1040] add .................................... <pOrigin.locH + (bubble.width / 2)>
  [1041] getlocal 14 ............................ <tempOffscreenImg>
  [1043] getobjprop 39 .......................... <tempOffscreenImg.height>
  [1045] pusharglist 4 .......................... <pOrigin.locH - (bubble.width / 2), tempOffscreenImg.height - bubble.height, pOrigin.locH + (bubble.width / 2), tempOffscreenImg.height>
  [1047] extcall 22 ............................. <rect(pOrigin.locH - (bubble.width / 2), tempOffscreenImg.height - bubble.height, pOrigin.locH + (bubble.width / 2), tempOffscreenImg.height)>
  [1049] setlocal 15 ............................ myRect = rect(pOrigin.locH - (bubble.width / 2), tempOffscreenImg.height - bubble.height, pOrigin.locH + (bubble.width / 2), tempOffscreenImg.height)
  [1051] getlocal 14 ............................ <tempOffscreenImg>
  [1053] getprop 66 ............................. <pOffscreenImg>
  [1055] getprop 66 ............................. <pOffscreenImg>
  [1057] getobjprop 22 .......................... <pOffscreenImg.rect>
  [1059] getprop 66 ............................. <pOffscreenImg>
  [1061] getobjprop 22 .......................... <pOffscreenImg.rect>
  [1063] pusharglistnoret 4 ..................... <tempOffscreenImg, pOffscreenImg, pOffscreenImg.rect, pOffscreenImg.rect>
  [1065] objcall 58 ............................. tempOffscreenImg.copyPixels(pOffscreenImg, pOffscreenImg.rect, pOffscreenImg.rect)
  [1067] getlocal 14 ............................ <tempOffscreenImg>
  [1069] getlocal 13 ............................ <bubble>
  [1071] getlocal 15 ............................ <myRect>
  [1073] getlocal 13 ............................ <bubble>
  [1075] getobjprop 22 .......................... <bubble.rect>
  [1077] pusharglistnoret 4 ..................... <tempOffscreenImg, bubble, myRect, bubble.rect>
  [1079] objcall 58 ............................. tempOffscreenImg.copyPixels(bubble, myRect, bubble.rect)
  [1081] getlocal 14 ............................ <tempOffscreenImg>
  [1083] pusharglist 1 .......................... <tempOffscreenImg>
  [1085] objcall 64 ............................. <tempOffscreenImg.duplicate()>
  [1087] setprop 66 ............................. pOffscreenImg = tempOffscreenImg.duplicate()
  [1089] getmovieprop 70 ........................ <the milliSeconds>
  [1091] setprop 69 ............................. pLastUpdate = the milliSeconds
  [1093] pushzero ............................... <0>
  [1094] pusharglistnoret 1 ..................... <0>
  [1096] extcall 26 ............................. return 0
  [1098] ret
end

on filterChat me, sMessage
  [  0] pushint8 1 .............................. <1>
  [  2] pushzero ................................ <0>
  [  3] pushint8 1 .............................. <1>
  [  5] pushzero ................................ <0>
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglist 5 ........................... <[1, 0, 1, 0, 1]>
  [ 10] pushlist ................................ <[1, 0, 1, 0, 1]>
  [ 11] setlocal 0 .............................. aFilter = [1, 0, 1, 0, 1]
  [ 13] pushcons 7 .............................. <EMPTY>
  [ 15] setlocal 1 .............................. sNewMessage = EMPTY
  [ 17] getparam 1 .............................. <sMessage>
  [ 19] pushsymb 93 ............................. <#chars>
  [ 21] pusharglist 2 ........................... <sMessage, #chars>
  [ 23] objcall 94 .............................. <sMessage.chars.count>
  [ 25] setlocal 2 .............................. iCount = sMessage.chars.count
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 3
  [ 31] getlocal 3
  [ 33] getlocal 2 .............................. <iCount>
  [ 35] lteq
  [ 36] jmpifz [ 98] ............................ repeat with i = 1 to iCount
  [ 39] getparam 1 .............................. <sMessage>
  [ 41] pushsymb 95 ............................. <#char>
  [ 43] getlocal 3 .............................. <i>
  [ 45] pusharglist 3 ........................... <sMessage, #char, i>
  [ 47] objcall 96 .............................. <sMessage.char[i]>
  [ 49] setlocal 4 .............................. sChar = sMessage.char[i]
  [ 51] getlocal 0 .............................. <aFilter>
  [ 53] getlocal 0 .............................. <aFilter>
  [ 55] getobjprop 94 ........................... <aFilter.count>
  [ 57] pusharglist 1 ........................... <aFilter.count>
  [ 59] extcall 97 .............................. <random(aFilter.count)>
  [ 61] pusharglist 2 ........................... <aFilter, random(aFilter.count)>
  [ 63] objcall 98 .............................. <aFilter[random(aFilter.count)]>
  [ 65] setlocal 5 .............................. bFilter = aFilter[random(aFilter.count)]
  [ 67] getlocal 5 .............................. <bFilter>
  [ 69] jmpifz [ 82] ............................ if bFilter then
  [ 72] getlocal 1 .............................. <sNewMessage>
  [ 74] pushcons 8 .............................. <".">
  [ 76] joinstr ................................. <sNewMessage & ".">
  [ 77] setlocal 1 .............................. sNewMessage = sNewMessage & "."
  [ 79] jmp [ 89] ............................... next repeat
  [ 82] getlocal 1 .............................. <sNewMessage>
  [ 84] getlocal 4 .............................. <sChar>
  [ 86] joinstr ................................. <sNewMessage & sChar>
  [ 87] setlocal 1 .............................. sNewMessage = sNewMessage & sChar
  [ 89] pushint8 1
  [ 91] getlocal 3
  [ 93] add
  [ 94] setlocal 3
  [ 96] endrepeat [ 31]
  [ 98] getlocal 1 .............................. <sNewMessage>
  [100] pusharglistnoret 1 ...................... <sNewMessage>
  [102] extcall 26 .............................. return sNewMessage
  [104] ret
end

on errormessage errornum
  [  0] getparam 0 .............................. <errornum>
  [  2] peek 0 .................................. case errornum of
  [  4] pushzero ................................ <0>
  [  5] eq
  [  6] jmpifz [ 20] ............................ (case) 0:
  [  9] pop 1
  [ 11] pushcons 9 .............................. <"OK">
  [ 13] pusharglistnoret 1 ...................... <"OK">
  [ 15] extcall 26 .............................. return "OK"
  [ 17] jmp [148]
  [ 20] peek 0
  [ 22] pushint8 1 .............................. <1>
  [ 24] inv ..................................... <-1>
  [ 25] eq
  [ 26] jmpifz [ 40] ............................ (case) (-1):
  [ 29] pop 1
  [ 31] pushcons 10 ............................. <"Name string invalid">
  [ 33] pusharglistnoret 1 ...................... <"Name string invalid">
  [ 35] extcall 26 .............................. return "Name string invalid"
  [ 37] jmp [148]
  [ 40] peek 0
  [ 42] pushint8 2 .............................. <2>
  [ 44] inv ..................................... <-2>
  [ 45] eq
  [ 46] jmpifz [ 60] ............................ (case) (-2):
  [ 49] pop 1
  [ 51] pushcons 11 ............................. <"Message string invalid">
  [ 53] pusharglistnoret 1 ...................... <"Message string invalid">
  [ 55] extcall 26 .............................. return "Message string invalid"
  [ 57] jmp [148]
  [ 60] peek 0
  [ 62] pushint8 3 .............................. <3>
  [ 64] inv ..................................... <-3>
  [ 65] eq
  [ 66] jmpifz [ 80] ............................ (case) (-3):
  [ 69] pop 1
  [ 71] pushcons 12 ............................. <"Color value invalid">
  [ 73] pusharglistnoret 1 ...................... <"Color value invalid">
  [ 75] extcall 26 .............................. return "Color value invalid"
  [ 77] jmp [148]
  [ 80] peek 0
  [ 82] pushint8 4 .............................. <4>
  [ 84] inv ..................................... <-4>
  [ 85] eq
  [ 86] jmpifz [100] ............................ (case) (-4):
  [ 89] pop 1
  [ 91] pushcons 13 ............................. <"Origin point invalid">
  [ 93] pusharglistnoret 1 ...................... <"Origin point invalid">
  [ 95] extcall 26 .............................. return "Origin point invalid"
  [ 97] jmp [148]
  [100] peek 0
  [102] pushint8 5 .............................. <5>
  [104] inv ..................................... <-5>
  [105] eq
  [106] jmpifz [120] ............................ (case) (-5):
  [109] pop 1
  [111] pushcons 14 ............................. <"Strength string invalid">
  [113] pusharglistnoret 1 ...................... <"Strength string invalid">
  [115] extcall 26 .............................. return "Strength string invalid"
  [117] jmp [148]
  [120] peek 0
  [122] pushint8 6 .............................. <6>
  [124] inv ..................................... <-6>
  [125] eq
  [126] jmpifz [140] ............................ (case) (-6):
  [129] pop 1
  [131] pushcons 15 ............................. <"Distance integer invalid">
  [133] pusharglistnoret 1 ...................... <"Distance integer invalid">
  [135] extcall 26 .............................. return "Distance integer invalid"
  [137] jmp [148] ............................... (case) otherwise:
  [140] pop 1
  [142] pushcons 16 ............................. <"unknown error">
  [144] pusharglistnoret 1 ...................... <"unknown error">
  [146] extcall 26 .............................. return "unknown error"
  [148] pop 1 ................................... end case
  [150] ret
end

on update me
  [  0] getprop 66 .............................. <pOffscreenImg>
  [  2] pushcons 0 .............................. <"chatimg">
  [  4] pusharglist 1 ........................... <"chatimg">
  [  6] extcall 19 .............................. <member("chatimg")>
  [  8] getobjprop 55 ........................... <member("chatimg").image>
  [ 10] nteq .................................... <pOffscreenImg <> member("chatimg").image>
  [ 11] jmpifz [100] ............................ if pOffscreenImg <> member("chatimg").image then
  [ 14] getprop 66 .............................. <pOffscreenImg>
  [ 16] getobjprop 38 ........................... <pOffscreenImg.width>
  [ 18] getprop 66 .............................. <pOffscreenImg>
  [ 20] getobjprop 39 ........................... <pOffscreenImg.height>
  [ 22] pushint8 28 ............................. <28>
  [ 24] sub ..................................... <pOffscreenImg.height - 28>
  [ 25] pushint8 32 ............................. <32>
  [ 27] pusharglist 3 ........................... <pOffscreenImg.width, pOffscreenImg.height - 28, 32>
  [ 29] extcall 55 .............................. <image(pOffscreenImg.width, pOffscreenImg.height - 28, 32)>
  [ 31] setlocal 0 .............................. tempbuffer = image(pOffscreenImg.width, pOffscreenImg.height - 28, 32)
  [ 33] getlocal 0 .............................. <tempbuffer>
  [ 35] pushint8 1 .............................. <1>
  [ 37] setobjprop 65 ........................... tempbuffer.useAlpha = 1
  [ 39] getlocal 0 .............................. <tempbuffer>
  [ 41] getprop 66 .............................. <pOffscreenImg>
  [ 43] getlocal 0 .............................. <tempbuffer>
  [ 45] getobjprop 22 ........................... <tempbuffer.rect>
  [ 47] getlocal 0 .............................. <tempbuffer>
  [ 49] getobjprop 22 ........................... <tempbuffer.rect>
  [ 51] pushzero ................................ <0>
  [ 52] pushint8 28 ............................. <28>
  [ 54] pushzero ................................ <0>
  [ 55] pushint8 28 ............................. <28>
  [ 57] pusharglist 4 ........................... <0, 28, 0, 28>
  [ 59] extcall 22 .............................. <rect(0, 28, 0, 28)>
  [ 61] add ..................................... <tempbuffer.rect + rect(0, 28, 0, 28)>
  [ 62] pusharglistnoret 4 ...................... <tempbuffer, pOffscreenImg, tempbuffer.rect, tempbuffer.rect + rect(0, 28, 0, 28)>
  [ 64] objcall 58 .............................. tempbuffer.copyPixels(pOffscreenImg, tempbuffer.rect, tempbuffer.rect + rect(0, 28, 0, 28))
  [ 66] getlocal 0 .............................. <tempbuffer>
  [ 68] pusharglist 1 ........................... <tempbuffer>
  [ 70] objcall 64 .............................. <tempbuffer.duplicate()>
  [ 72] setprop 66 .............................. pOffscreenImg = tempbuffer.duplicate()
  [ 74] pushcons 0 .............................. <"chatimg">
  [ 76] pusharglist 1 ........................... <"chatimg">
  [ 78] extcall 19 .............................. <member("chatimg")>
  [ 80] getobjprop 55 ........................... <member("chatimg").image>
  [ 82] setlocal 1 .............................. destimg = member("chatimg").image
  [ 84] getlocal 1 .............................. <destimg>
  [ 86] getprop 66 .............................. <pOffscreenImg>
  [ 88] getlocal 1 .............................. <destimg>
  [ 90] getobjprop 22 ........................... <destimg.rect>
  [ 92] getlocal 1 .............................. <destimg>
  [ 94] getobjprop 22 ........................... <destimg.rect>
  [ 96] pusharglistnoret 4 ...................... <destimg, pOffscreenImg, destimg.rect, destimg.rect>
  [ 98] objcall 58 .............................. destimg.copyPixels(pOffscreenImg, destimg.rect, destimg.rect)
  [100] getmovieprop 70 ......................... <the milliSeconds>
  [102] getprop 69 .............................. <pLastUpdate>
  [104] sub ..................................... <the milliSeconds - pLastUpdate>
  [105] pushint32 60000 ......................... <60000>
  [110] gteq .................................... <(the milliSeconds - pLastUpdate) >= 60000>
  [111] jmpifz [183] ............................ if (the milliSeconds - pLastUpdate) >= 60000 then
  [114] getprop 66 .............................. <pOffscreenImg>
  [116] getobjprop 38 ........................... <pOffscreenImg.width>
  [118] getprop 66 .............................. <pOffscreenImg>
  [120] getobjprop 39 ........................... <pOffscreenImg.height>
  [122] getprop 25 .............................. <pBubblesMargin>
  [124] add ..................................... <pOffscreenImg.height + pBubblesMargin>
  [125] pushcons 6 .............................. <"cc.bubble.right">
  [127] pusharglist 1 ........................... <"cc.bubble.right">
  [129] extcall 19 .............................. <member("cc.bubble.right")>
  [131] getobjprop 39 ........................... <member("cc.bubble.right").height>
  [133] add ..................................... <pOffscreenImg.height + pBubblesMargin + member("cc.bubble.right").height>
  [134] pushint8 32 ............................. <32>
  [136] pusharglist 3 ........................... <pOffscreenImg.width, pOffscreenImg.height + pBubblesMargin + member("cc.bubble.right").height, 32>
  [138] extcall 55 .............................. <image(pOffscreenImg.width, pOffscreenImg.height + pBubblesMargin + member("cc.bubble.right").height, 32)>
  [140] setlocal 2 .............................. tempOffscreenImg = image(pOffscreenImg.width, pOffscreenImg.height + pBubblesMargin + member("cc.bubble.right").height, 32)
  [142] getlocal 2 .............................. <tempOffscreenImg>
  [144] pushint8 1 .............................. <1>
  [146] setobjprop 65 ........................... tempOffscreenImg.useAlpha = 1
  [148] getlocal 2 .............................. <tempOffscreenImg>
  [150] pushzero ................................ <0>
  [151] pusharglistnoret 2 ...................... <tempOffscreenImg, 0>
  [153] objcall 67 .............................. tempOffscreenImg.setAlpha(0)
  [155] getlocal 2 .............................. <tempOffscreenImg>
  [157] getprop 66 .............................. <pOffscreenImg>
  [159] getprop 66 .............................. <pOffscreenImg>
  [161] getobjprop 22 ........................... <pOffscreenImg.rect>
  [163] getprop 66 .............................. <pOffscreenImg>
  [165] getobjprop 22 ........................... <pOffscreenImg.rect>
  [167] pusharglistnoret 4 ...................... <tempOffscreenImg, pOffscreenImg, pOffscreenImg.rect, pOffscreenImg.rect>
  [169] objcall 58 .............................. tempOffscreenImg.copyPixels(pOffscreenImg, pOffscreenImg.rect, pOffscreenImg.rect)
  [171] getlocal 2 .............................. <tempOffscreenImg>
  [173] pusharglist 1 ........................... <tempOffscreenImg>
  [175] objcall 64 .............................. <tempOffscreenImg.duplicate()>
  [177] setprop 66 .............................. pOffscreenImg = tempOffscreenImg.duplicate()
  [179] getmovieprop 70 ......................... <the milliSeconds>
  [181] setprop 69 .............................. pLastUpdate = the milliSeconds
  [183] ret
end

on reset me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 17 ............................. <"intervalTimer">
  [  4] pusharglist 1 ........................... <"intervalTimer">
  [  6] extcall 108 ............................. <timeout("intervalTimer")>
  [  8] pushint8 33 ............................. <33>
  [ 10] pushsymb 6 .............................. <#update>
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglist 4 ........................... <timeout("intervalTimer"), 33, #update, me>
  [ 16] objcall 0 ............................... <timeout("intervalTimer").new(33, #update, me)>
  [ 18] setobjprop 43 ........................... me.pTimeoutobject = timeout("intervalTimer").new(33, #update, me)
  [ 20] getmovieprop 70 ......................... <the milliSeconds>
  [ 22] setprop 69 .............................. pLastUpdate = the milliSeconds
  [ 24] getmovieprop 68 ......................... <the stage>
  [ 26] getchainedprop 22 ....................... <(the stage).rect>
  [ 28] getobjprop 38 ........................... <(the stage).rect.width>
  [ 30] getprop 24 .............................. <pMaxBubbles>
  [ 32] pushcons 6 .............................. <"cc.bubble.right">
  [ 34] pusharglist 1 ........................... <"cc.bubble.right">
  [ 36] extcall 19 .............................. <member("cc.bubble.right")>
  [ 38] getobjprop 39 ........................... <member("cc.bubble.right").height>
  [ 40] mul ..................................... <pMaxBubbles * member("cc.bubble.right").height>
  [ 41] getprop 24 .............................. <pMaxBubbles>
  [ 43] pushint8 1 .............................. <1>
  [ 45] sub ..................................... <pMaxBubbles - 1>
  [ 46] getprop 25 .............................. <pBubblesMargin>
  [ 48] mul ..................................... <(pMaxBubbles - 1) * pBubblesMargin>
  [ 49] add ..................................... <(pMaxBubbles * member("cc.bubble.right").height) + ((pMaxBubbles - 1) * pBubblesMargin)>
  [ 50] pushint8 32 ............................. <32>
  [ 52] pusharglist 3 ........................... <(the stage).rect.width, (pMaxBubbles * member("cc.bubble.right").height) + ((pMaxBubbles - 1) * pBubblesMargin), 32>
  [ 54] extcall 55 .............................. <image((the stage).rect.width, (pMaxBubbles * member("cc.bubble.right").height) + ((pMaxBubbles - 1) * pBubblesMargin), 32)>
  [ 56] setlocal 0 .............................. defaultchatimg = image((the stage).rect.width, (pMaxBubbles * member("cc.bubble.right").height) + ((pMaxBubbles - 1) * pBubblesMargin), 32)
  [ 58] getlocal 0 .............................. <defaultchatimg>
  [ 60] pushint8 1 .............................. <1>
  [ 62] setobjprop 65 ........................... defaultchatimg.useAlpha = 1
  [ 64] getlocal 0 .............................. <defaultchatimg>
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 2 ...................... <defaultchatimg, 0>
  [ 69] objcall 67 .............................. defaultchatimg.setAlpha(0)
  [ 71] pushcons 0 .............................. <"chatimg">
  [ 73] pusharglist 1 ........................... <"chatimg">
  [ 75] extcall 19 .............................. <member("chatimg")>
  [ 77] getlocal 0 .............................. <defaultchatimg>
  [ 79] setobjprop 55 ........................... member("chatimg").image = defaultchatimg
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 16 ........................... <me.pChatSprite>
  [ 85] pusharglist 1 ........................... <me.pChatSprite>
  [ 87] extcall 18 .............................. <sprite(me.pChatSprite)>
  [ 89] getmovieprop 68 ......................... <the stage>
  [ 91] getchainedprop 22 ....................... <(the stage).rect>
  [ 93] getobjprop 38 ........................... <(the stage).rect.width>
  [ 95] pushint8 2 .............................. <2>
  [ 97] div ..................................... <(the stage).rect.width / 2>
  [ 98] getlocal 0 .............................. <defaultchatimg>
  [100] getobjprop 39 ........................... <defaultchatimg.height>
  [102] pushint8 2 .............................. <2>
  [104] div ..................................... <defaultchatimg.height / 2>
  [105] pusharglist 2 ........................... <(the stage).rect.width / 2, defaultchatimg.height / 2>
  [107] extcall 48 .............................. <point((the stage).rect.width / 2, defaultchatimg.height / 2)>
  [109] setobjprop 109 .......................... sprite(me.pChatSprite).loc = point((the stage).rect.width / 2, defaultchatimg.height / 2)
  [111] getlocal 0 .............................. <defaultchatimg>
  [113] pusharglist 1 ........................... <defaultchatimg>
  [115] objcall 64 .............................. <defaultchatimg.duplicate()>
  [117] setprop 66 .............................. pOffscreenImg = defaultchatimg.duplicate()
  [119] ret
end
