on new me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] extcall 23 .............................. return me
  [  6] ret
end

on mouseUp me
  [  0] getglobal 309 ........................... <gFeatureSet>
  [  3] pushsymb 894 ............................ <#BACKPACK>
  [  6] pusharglist 2 ........................... <gFeatureSet, #BACKPACK>
  [  8] objcall 311 ............................. <gFeatureSet.isEnabled(#BACKPACK)>
  [ 11] not ..................................... <not gFeatureSet.isEnabled(#BACKPACK)>
  [ 12] jmpifz [ 27] ............................ if not gFeatureSet.isEnabled(#BACKPACK) then
  [ 15] getglobal 30 ............................ <ElementMgr>
  [ 17] pushcons 0 .............................. <"FEATURE_DISABLED">
  [ 19] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 21] objcall 245 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 23 .............................. return 
  [ 27] getglobal 79 ............................ <oDenizenManager>
  [ 29] pusharglist 1 ........................... <oDenizenManager>
  [ 31] objcall 455 ............................. <oDenizenManager.getBackpack()>
  [ 34] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 36] getlocal 0 .............................. <oBackPack>
  [ 38] pusharglist 1 ........................... <oBackPack>
  [ 40] extcall 12 .............................. <voidp(oBackPack)>
  [ 42] jmpifz [ 49] ............................ if voidp(oBackPack) then
  [ 45] pusharglistnoret 0 ...................... <>
  [ 47] extcall 23 .............................. return 
  [ 49] pushint8 1 .............................. <1>
  [ 51] setlocal 1
  [ 53] getlocal 1
  [ 55] getglobal 30 ............................ <ElementMgr>
  [ 57] getobjprop 31 ........................... <ElementMgr.pOpenWindows>
  [ 59] pusharglist 1 ........................... <ElementMgr.pOpenWindows>
  [ 61] extcall 29 .............................. <count(ElementMgr.pOpenWindows)>
  [ 63] lteq
  [ 64] jmpifz [150] ............................ repeat with n = 1 to count(ElementMgr.pOpenWindows)
  [ 67] getglobal 30 ............................ <ElementMgr>
  [ 69] getobjprop 31 ........................... <ElementMgr.pOpenWindows>
  [ 71] getlocal 1 .............................. <n>
  [ 73] pusharglist 2 ........................... <ElementMgr.pOpenWindows, n>
  [ 75] extcall 32 .............................. <getPropAt(ElementMgr.pOpenWindows, n)>
  [ 77] pushcons 1 .............................. <"cc_backpack">
  [ 79] eq ...................................... <getPropAt(ElementMgr.pOpenWindows, n) = "cc_backpack">
  [ 80] jmpifz [116] ............................ if getPropAt(ElementMgr.pOpenWindows, n) = "cc_backpack" then
  [ 83] getglobal 30 ............................ <ElementMgr>
  [ 85] pushsymb 31 ............................. <#pOpenWindows>
  [ 87] getlocal 1 .............................. <n>
  [ 89] pusharglist 3 ........................... <ElementMgr, #pOpenWindows, n>
  [ 91] objcall 98 .............................. <ElementMgr.pOpenWindows[n]>
  [ 93] pushsymb 11 ............................. <#pSpritelist>
  [ 95] pushint8 2 .............................. <2>
  [ 97] pusharglist 3 ........................... <ElementMgr.pOpenWindows[n], #pSpritelist, 2>
  [ 99] objcall 149 ............................. <ElementMgr.pOpenWindows[n].pSpritelist[2]>
  [101] pusharglist 1 ........................... <ElementMgr.pOpenWindows[n].pSpritelist[2]>
  [103] extcall 36 .............................. <sprite(ElementMgr.pOpenWindows[n].pSpritelist[2])>
  [105] pushsymb 876 ............................ <#popdown>
  [108] setobjprop 225 .......................... sprite(ElementMgr.pOpenWindows[n].pSpritelist[2]).pStatus = #popdown
  [110] jmp [150] ............................... exit repeat
  [113] jmp [141] ............................... next repeat
  [116] getlocal 1 .............................. <n>
  [118] getglobal 30 ............................ <ElementMgr>
  [120] getobjprop 31 ........................... <ElementMgr.pOpenWindows>
  [122] pusharglist 1 ........................... <ElementMgr.pOpenWindows>
  [124] extcall 29 .............................. <count(ElementMgr.pOpenWindows)>
  [126] eq ...................................... <n = count(ElementMgr.pOpenWindows)>
  [127] jmpifz [141] ............................ if n = count(ElementMgr.pOpenWindows) then
  [130] getglobal 30 ............................ <ElementMgr>
  [132] pushcons 2 .............................. <"cc.backpack.window">
  [134] pusharglistnoret 2 ...................... <ElementMgr, "cc.backpack.window">
  [136] objcall 239 ............................. ElementMgr.newwindow("cc.backpack.window")
  [138] jmp [150] ............................... exit repeat
  [141] pushint8 1
  [143] getlocal 1
  [145] add
  [146] setlocal 1
  [148] endrepeat [ 53]
  [150] ret
end
