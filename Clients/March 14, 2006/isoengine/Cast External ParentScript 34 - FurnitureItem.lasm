property sProdID, sPosId, sImageBase, aAttributes, sType, sAction, iState, sCastLib, iWidth, iHeight, iDepth, iHeightOffset, bItemsAllowedOnTop, iDirection, aDirections, iDirectionIndex, iFrame, iNumFrames, aDrawOrder, iRow, iCol, iGridX, iGridZ, iGridY, bDragging, bAnimate, aAssets, aAlias, ORDER, height, width, depth, direction, frame, iFPS, iTimer, bDebug, oAction, bVisible, bBlocksPath, bSeatable, oPreviewMember, iPreviewSprite, bHasPreview, iLastRow, iLastCol, iLastGridY, iLastHeightOffset, iLastDirectionIndex, oHitTestColor8, oHitTestColor16
global oIsoScene, oPossessionStudio, oStudioMap, oStudio, oRoom, oDenizenManager, oSession, ElementMgr, gFeatureSet

on new me, _sProdId, _sPosId, _sImageBase, _sType, _sAction, _iState, _aAttributes, _sCastLib, _iRow, _iCol, _iGridY, _iDirection, _iHeight, _iHeightOffset, _bItemsAllowedOnTop
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 338 .......................... me.bDebug = 0
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 0 .............................. <"new( ) _sProdId: ">
  [ 10] getparam 1 .............................. <_sProdId>
  [ 12] joinstr ................................. <"new( ) _sProdId: " & _sProdId>
  [ 13] pushcons 1 .............................. <", _sPosId: ">
  [ 15] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: ">
  [ 16] getparam 2 .............................. <_sPosId>
  [ 18] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId>
  [ 19] pushcons 2 .............................. <", _sImageBase: ">
  [ 21] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: ">
  [ 22] getparam 3 .............................. <_sImageBase>
  [ 24] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase>
  [ 25] pushcons 3 .............................. <", _sType: ">
  [ 27] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: ">
  [ 28] getparam 4 .............................. <_sType>
  [ 30] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType>
  [ 31] pushcons 4 .............................. <", _sAction: ">
  [ 33] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: ">
  [ 34] getparam 5 .............................. <_sAction>
  [ 36] joinstr ................................. <"new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: " & _sAction>
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 3 ...................... <me, "new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: " & _sAction, 0>
  [ 40] objcall 332 ............................. me.debug("new( ) _sProdId: " & _sProdId & ", _sPosId: " & _sPosId & ", _sImageBase: " & _sImageBase & ", _sType: " & _sType & ", _sAction: " & _sAction, 0)
  [ 43] getparam 0 .............................. <me>
  [ 45] pushcons 5 .............................. <"new FurniITem() 1">
  [ 47] pusharglistnoret 2 ...................... <me, "new FurniITem() 1">
  [ 49] objcall 332 ............................. me.debug("new FurniITem() 1")
  [ 52] getparam 0 .............................. <me>
  [ 54] getparam 1 .............................. <_sProdId>
  [ 56] setobjprop 161 .......................... me.sProdID = _sProdId
  [ 58] getparam 0 .............................. <me>
  [ 60] getparam 2 .............................. <_sPosId>
  [ 62] setobjprop 511 .......................... me.sPosId = _sPosId
  [ 65] getparam 0 .............................. <me>
  [ 67] getparam 3 .............................. <_sImageBase>
  [ 69] setobjprop 94 ........................... me.sImageBase = _sImageBase
  [ 71] getparam 0 .............................. <me>
  [ 73] getparam 4 .............................. <_sType>
  [ 75] setobjprop 510 .......................... me.sType = _sType
  [ 78] getparam 5 .............................. <_sAction>
  [ 80] pusharglist 1 ........................... <_sAction>
  [ 82] extcall 59 .............................. <voidp(_sAction)>
  [ 84] getparam 5 .............................. <_sAction>
  [ 86] pushcons 6 .............................. <EMPTY>
  [ 88] eq ...................................... <_sAction = EMPTY>
  [ 89] or ...................................... <voidp(_sAction) or (_sAction = EMPTY)>
  [ 90] jmpifz [102] ............................ if voidp(_sAction) or (_sAction = EMPTY) then / else
  [ 93] getparam 0 .............................. <me>
  [ 95] pushcons 7 .............................. <"Default">
  [ 97] setobjprop 101 .......................... me.sAction = "Default"
  [ 99] jmp [108]
  [102] getparam 0 .............................. <me>
  [104] getparam 5 .............................. <_sAction>
  [106] setobjprop 101 .......................... me.sAction = _sAction
  [108] getparam 6 .............................. <_iState>
  [110] pusharglist 1 ........................... <_iState>
  [112] extcall 59 .............................. <voidp(_iState)>
  [114] jmpifz [126] ............................ if voidp(_iState) then / else
  [117] getparam 0 .............................. <me>
  [119] pushzero ................................ <0>
  [120] setobjprop 509 .......................... me.iState = 0
  [123] jmp [133]
  [126] getparam 0 .............................. <me>
  [128] getparam 6 .............................. <_iState>
  [130] setobjprop 509 .......................... me.iState = _iState
  [133] getparam 7 .............................. <_aAttributes>
  [135] pusharglist 1 ........................... <_aAttributes>
  [137] extcall 59 .............................. <voidp(_aAttributes)>
  [139] getparam 7 .............................. <_aAttributes>
  [141] pushcons 6 .............................. <EMPTY>
  [143] eq ...................................... <_aAttributes = EMPTY>
  [144] or ...................................... <voidp(_aAttributes) or (_aAttributes = EMPTY)>
  [145] jmpifz [158] ............................ if voidp(_aAttributes) or (_aAttributes = EMPTY) then / else
  [148] getparam 0 .............................. <me>
  [150] pusharglist 0 ........................... <[:]>
  [152] pushproplist ............................ <[:]>
  [153] setobjprop 102 .......................... me.aAttributes = [:]
  [155] jmp [164]
  [158] getparam 0 .............................. <me>
  [160] getparam 7 .............................. <_aAttributes>
  [162] setobjprop 102 .......................... me.aAttributes = _aAttributes
  [164] getparam 9 .............................. <_iRow>
  [166] pusharglist 1 ........................... <_iRow>
  [168] extcall 59 .............................. <voidp(_iRow)>
  [170] jmpifz [183] ............................ if voidp(_iRow) then / else
  [173] getparam 0 .............................. <me>
  [175] pushint8 1 .............................. <1>
  [177] setobjprop 431 .......................... me.iRow = 1
  [180] jmp [190]
  [183] getparam 0 .............................. <me>
  [185] getparam 9 .............................. <_iRow>
  [187] setobjprop 431 .......................... me.iRow = _iRow
  [190] getparam 10 ............................. <_iCol>
  [192] pusharglist 1 ........................... <_iCol>
  [194] extcall 59 .............................. <voidp(_iCol)>
  [196] jmpifz [209] ............................ if voidp(_iCol) then / else
  [199] getparam 0 .............................. <me>
  [201] pushint8 1 .............................. <1>
  [203] setobjprop 432 .......................... me.iCol = 1
  [206] jmp [216]
  [209] getparam 0 .............................. <me>
  [211] getparam 10 ............................. <_iCol>
  [213] setobjprop 432 .......................... me.iCol = _iCol
  [216] getparam 11 ............................. <_iGridY>
  [218] pusharglist 1 ........................... <_iGridY>
  [220] extcall 59 .............................. <voidp(_iGridY)>
  [222] jmpifz [234] ............................ if voidp(_iGridY) then / else
  [225] getparam 0 .............................. <me>
  [227] pushzero ................................ <0>
  [228] setobjprop 508 .......................... me.iGridY = 0
  [231] jmp [241]
  [234] getparam 0 .............................. <me>
  [236] getparam 11 ............................. <_iGridY>
  [238] setobjprop 508 .......................... me.iGridY = _iGridY
  [241] getparam 12 ............................. <_iDirection>
  [243] pusharglist 1 ........................... <_iDirection>
  [245] extcall 59 .............................. <voidp(_iDirection)>
  [247] jmpifz [260] ............................ if voidp(_iDirection) then / else
  [250] getparam 0 .............................. <me>
  [252] pushint8 2 .............................. <2>
  [254] setobjprop 507 .......................... me.iDirection = 2
  [257] jmp [267]
  [260] getparam 0 .............................. <me>
  [262] getparam 12 ............................. <_iDirection>
  [264] setobjprop 507 .......................... me.iDirection = _iDirection
  [267] getparam 8 .............................. <_sCastLib>
  [269] pusharglist 1 ........................... <_sCastLib>
  [271] extcall 59 .............................. <voidp(_sCastLib)>
  [273] jmpifz [285] ............................ if voidp(_sCastLib) then / else
  [276] getparam 0 .............................. <me>
  [278] pushcons 8 .............................. <"Furniture">
  [280] setobjprop 48 ........................... me.sCastLib = "Furniture"
  [282] jmp [291]
  [285] getparam 0 .............................. <me>
  [287] getparam 8 .............................. <_sCastLib>
  [289] setobjprop 48 ........................... me.sCastLib = _sCastLib
  [291] getparam 0 .............................. <me>
  [293] pushint8 1 .............................. <1>
  [295] setobjprop 147 .......................... me.iWidth = 1
  [297] getparam 0 .............................. <me>
  [299] pushint8 1 .............................. <1>
  [301] setobjprop 703 .......................... me.iDepth = 1
  [304] getparam 13 ............................. <_iHeight>
  [306] pusharglist 1 ........................... <_iHeight>
  [308] extcall 59 .............................. <voidp(_iHeight)>
  [310] not ..................................... <not voidp(_iHeight)>
  [311] jmpifz [320] ............................ if not voidp(_iHeight) then
  [314] getparam 0 .............................. <me>
  [316] getparam 13 ............................. <_iHeight>
  [318] setobjprop 146 .......................... me.iHeight = _iHeight
  [320] getparam 14 ............................. <_iHeightOffset>
  [322] pusharglist 1 ........................... <_iHeightOffset>
  [324] extcall 59 .............................. <voidp(_iHeightOffset)>
  [326] jmpifz [338] ............................ if voidp(_iHeightOffset) then / else
  [329] getparam 0 .............................. <me>
  [331] pushzero ................................ <0>
  [332] setobjprop 505 .......................... me.iHeightOffset = 0
  [335] jmp [345]
  [338] getparam 0 .............................. <me>
  [340] getparam 14 ............................. <_iHeightOffset>
  [342] setobjprop 505 .......................... me.iHeightOffset = _iHeightOffset
  [345] getparam 15 ............................. <_bItemsAllowedOnTop>
  [347] pusharglist 1 ........................... <_bItemsAllowedOnTop>
  [349] extcall 59 .............................. <voidp(_bItemsAllowedOnTop)>
  [351] jmpifz [364] ............................ if voidp(_bItemsAllowedOnTop) then / else
  [354] getparam 0 .............................. <me>
  [356] pushint8 1 .............................. <1>
  [358] setobjprop 504 .......................... me.bItemsAllowedOnTop = 1
  [361] jmp [371]
  [364] getparam 0 .............................. <me>
  [366] getparam 15 ............................. <_bItemsAllowedOnTop>
  [368] setobjprop 504 .......................... me.bItemsAllowedOnTop = _bItemsAllowedOnTop
  [371] getparam 0 .............................. <me>
  [373] pushint8 1 .............................. <1>
  [375] setobjprop 903 .......................... me.iNumFrames = 1
  [378] getparam 0 .............................. <me>
  [380] pusharglist 0 ........................... <[:]>
  [382] pushproplist ............................ <[:]>
  [383] setobjprop 1410 ......................... me.aAssets = [:]
  [386] getparam 0 .............................. <me>
  [388] pushint8 1 .............................. <1>
  [390] setobjprop 1411 ......................... me.ORDER = 1
  [393] getparam 0 .............................. <me>
  [395] pushint8 2 .............................. <2>
  [397] setobjprop 142 .......................... me.height = 2
  [399] getparam 0 .............................. <me>
  [401] pushint8 3 .............................. <3>
  [403] setobjprop 141 .......................... me.width = 3
  [405] getparam 0 .............................. <me>
  [407] pushint8 4 .............................. <4>
  [409] setobjprop 1412 ......................... me.depth = 4
  [412] getparam 0 .............................. <me>
  [414] pushint8 5 .............................. <5>
  [416] setobjprop 603 .......................... me.direction = 5
  [419] getparam 0 .............................. <me>
  [421] pushint8 6 .............................. <6>
  [423] setobjprop 1413 ......................... me.frame = 6
  [426] getparam 0 .............................. <me>
  [428] pushcons 9 .............................. <"new FurniITem() 2">
  [430] pusharglistnoret 2 ...................... <me, "new FurniITem() 2">
  [432] objcall 332 ............................. me.debug("new FurniITem() 2")
  [435] getparam 0 .............................. <me>
  [437] pusharglistnoret 1 ...................... <me>
  [439] objcall 1403 ............................ me.loadAlias()
  [442] getparam 0 .............................. <me>
  [444] pushcons 10 ............................. <"new FurniITem() 3">
  [446] pusharglistnoret 2 ...................... <me, "new FurniITem() 3">
  [448] objcall 332 ............................. me.debug("new FurniITem() 3")
  [451] getparam 0 .............................. <me>
  [453] pusharglistnoret 1 ...................... <me>
  [455] objcall 1402 ............................ me.loadAssets()
  [458] getparam 0 .............................. <me>
  [460] pushcons 11 ............................. <"new FurniITem() 4">
  [462] pusharglistnoret 2 ...................... <me, "new FurniITem() 4">
  [464] objcall 332 ............................. me.debug("new FurniITem() 4")
  [467] getparam 0 .............................. <me>
  [469] pusharglistnoret 1 ...................... <me>
  [471] objcall 1389 ............................ me.setWidth()
  [474] getparam 0 .............................. <me>
  [476] pushcons 12 ............................. <"new FurniITem() 5">
  [478] pusharglistnoret 2 ...................... <me, "new FurniITem() 5">
  [480] objcall 332 ............................. me.debug("new FurniITem() 5")
  [483] getparam 0 .............................. <me>
  [485] pusharglistnoret 1 ...................... <me>
  [487] objcall 983 ............................. me.setDepth()
  [490] getparam 0 .............................. <me>
  [492] pushcons 13 ............................. <"new FurniITem() 6">
  [494] pusharglistnoret 2 ...................... <me, "new FurniITem() 6">
  [496] objcall 332 ............................. me.debug("new FurniITem() 6")
  [499] getparam 0 .............................. <me>
  [501] pusharglistnoret 1 ...................... <me>
  [503] objcall 1390 ............................ me.setNumFrames()
  [506] getparam 0 .............................. <me>
  [508] pushcons 14 ............................. <"new FurniITem() 7">
  [510] pusharglistnoret 2 ...................... <me, "new FurniITem() 7">
  [512] objcall 332 ............................. me.debug("new FurniITem() 7")
  [515] getparam 0 .............................. <me>
  [517] pusharglistnoret 1 ...................... <me>
  [519] objcall 1404 ............................ me.setDirections()
  [522] getparam 0 .............................. <me>
  [524] pushcons 15 ............................. <"new FurniITem() 8">
  [526] pusharglistnoret 2 ...................... <me, "new FurniITem() 8">
  [528] objcall 332 ............................. me.debug("new FurniITem() 8")
  [531] getparam 0 .............................. <me>
  [533] pusharglistnoret 1 ...................... <me>
  [535] objcall 1396 ............................ me.setDirectionIndex()
  [538] getparam 0 .............................. <me>
  [540] pushcons 16 ............................. <"new FurniITem() 9">
  [542] pusharglistnoret 2 ...................... <me, "new FurniITem() 9">
  [544] objcall 332 ............................. me.debug("new FurniITem() 9")
  [547] getparam 0 .............................. <me>
  [549] getparam 0 .............................. <me>
  [551] getobjprop 507 .......................... <me.iDirection>
  [554] pusharglistnoret 2 ...................... <me, me.iDirection>
  [556] objcall 1341 ............................ me.setDirection(me.iDirection)
  [559] getparam 0 .............................. <me>
  [561] pushcons 17 ............................. <"new FurniITem() 10">
  [563] pusharglistnoret 2 ...................... <me, "new FurniITem() 10">
  [565] objcall 332 ............................. me.debug("new FurniITem() 10")
  [568] getparam 0 .............................. <me>
  [570] pusharglistnoret 1 ...................... <me>
  [572] objcall 1397 ............................ me.setDrawOrder()
  [575] getparam 0 .............................. <me>
  [577] pushcons 18 ............................. <"new FurniITem() 11">
  [579] pusharglistnoret 2 ...................... <me, "new FurniITem() 11">
  [581] objcall 332 ............................. me.debug("new FurniITem() 11")
  [584] getparam 0 .............................. <me>
  [586] pushzero ................................ <0>
  [587] setobjprop 1343 ......................... me.bDragging = 0
  [590] getparam 0 .............................. <me>
  [592] pushzero ................................ <0>
  [593] setobjprop 1414 ......................... me.bAnimate = 0
  [596] getparam 0 .............................. <me>
  [598] pushzero ................................ <0>
  [599] setobjprop 1415 ......................... me.iFrame = 0
  [602] getparam 0 .............................. <me>
  [604] pushint8 8 .............................. <8>
  [606] setobjprop 365 .......................... me.iFPS = 8
  [609] getparam 0 .............................. <me>
  [611] getmovieprop 369 ........................ <the milliSeconds>
  [614] setobjprop 1344 ......................... me.iTimer = the milliSeconds
  [617] getparam 0 .............................. <me>
  [619] pushint8 1 .............................. <1>
  [621] setobjprop 1416 ......................... me.bBlocksPath = 1
  [624] getparam 0 .............................. <me>
  [626] pushzero ................................ <0>
  [627] setobjprop 1417 ......................... me.bSeatable = 0
  [630] getparam 0 .............................. <me>
  [632] pushint8 1 .............................. <1>
  [634] setobjprop 1326 ......................... me.bVisible = 1
  [637] getparam 0 .............................. <me>
  [639] getobjprop 94 ........................... <me.sImageBase>
  [641] pushcons 19 ............................. <"_small">
  [643] joinstr ................................. <me.sImageBase & "_small">
  [644] setlocal 0 .............................. sPreviewName = me.sImageBase & "_small"
  [646] getparam 0 .............................. <me>
  [648] getlocal 0 .............................. <sPreviewName>
  [650] pusharglist 1 ........................... <sPreviewName>
  [652] extcall 30 .............................. <member(sPreviewName)>
  [654] setobjprop 127 .......................... me.oPreviewMember = member(sPreviewName)
  [656] getparam 0 .............................. <me>
  [658] getparam 0 .............................. <me>
  [660] getchainedprop 127 ...................... <me.oPreviewMember>
  [662] getobjprop 1418 ......................... <me.oPreviewMember.number>
  [665] pushzero ................................ <0>
  [666] gt ...................................... <me.oPreviewMember.number > 0>
  [667] setobjprop 62 ........................... me.bHasPreview = me.oPreviewMember.number > 0
  [669] getparam 0 .............................. <me>
  [671] getparam 0 .............................. <me>
  [673] getobjprop 127 .......................... <me.oPreviewMember>
  [675] pusharglistnoret 2 ...................... <me, me.oPreviewMember>
  [677] objcall 1378 ............................ me.createPreviewSprite(me.oPreviewMember)
  [680] getparam 0 .............................. <me>
  [682] getparam 0 .............................. <me>
  [684] getobjprop 1419 ......................... <me.iDirectionIndex>
  [687] setobjprop 1420 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [690] getparam 0 .............................. <me>
  [692] pushzero ................................ <0>
  [693] pusharglist 1 ........................... <0>
  [695] extcall 1211 ............................ <paletteIndex(0)>
  [698] setobjprop 1421 ......................... me.oHitTestColor8 = paletteIndex(0)
  [701] getparam 0 .............................. <me>
  [703] pushint16 255 ........................... <255>
  [706] pushint16 255 ........................... <255>
  [709] pushint16 255 ........................... <255>
  [712] pusharglist 3 ........................... <255, 255, 255>
  [714] extcall 120 ............................. <rgb(255, 255, 255)>
  [716] setobjprop 1422 ......................... me.oHitTestColor16 = rgb(255, 255, 255)
  [719] getparam 0 .............................. <me>
  [721] pushcons 20 ............................. <"new FurniITem() 12">
  [723] pusharglistnoret 2 ...................... <me, "new FurniITem() 12">
  [725] objcall 332 ............................. me.debug("new FurniITem() 12")
  [728] getparam 0 .............................. <me>
  [730] pusharglistnoret 1 ...................... <me>
  [732] extcall 52 .............................. return me
  [734] ret
end

on duplicate me
  [  0] pushcons 21 ............................. <"FurnitureItem">
  [  2] pusharglist 1 ........................... <"FurnitureItem">
  [  4] extcall 194 ............................. <script("FurnitureItem")>
  [  6] getprop 161 ............................. <sProdID>
  [  8] getprop 511 ............................. <sPosId>
  [ 11] getprop 94 .............................. <sImageBase>
  [ 13] getprop 510 ............................. <sType>
  [ 16] getprop 101 ............................. <sAction>
  [ 18] getprop 509 ............................. <iState>
  [ 21] getprop 102 ............................. <aAttributes>
  [ 23] getprop 48 .............................. <sCastLib>
  [ 25] getprop 431 ............................. <iRow>
  [ 28] getprop 432 ............................. <iCol>
  [ 31] getprop 508 ............................. <iGridY>
  [ 34] getprop 507 ............................. <iDirection>
  [ 37] getprop 146 ............................. <iHeight>
  [ 39] getprop 505 ............................. <iHeightOffset>
  [ 42] getprop 504 ............................. <bItemsAllowedOnTop>
  [ 45] pusharglist 16 .......................... <script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop>
  [ 47] extcall 0 ............................... <new(script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 49] pusharglistnoret 1 ...................... <new(script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)>
  [ 51] extcall 52 .............................. return new(script("FurnitureItem"), sProdID, sPosId, sImageBase, sType, sAction, iState, aAttributes, sCastLib, iRow, iCol, iGridY, iDirection, iHeight, iHeightOffset, bItemsAllowedOnTop)
  [ 53] ret
end

on sendPutInStudio me
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 133 ........................... <oIsoScene>
  [  4] getobjprop 240 .......................... <oIsoScene.oSelectedItem>
  [  6] pusharglist 2 ........................... <me, oIsoScene.oSelectedItem>
  [  8] objcall 254 ............................. <me.equals(oIsoScene.oSelectedItem)>
  [ 10] not ..................................... <not me.equals(oIsoScene.oSelectedItem)>
  [ 11] jmpifz [ 18] ............................ if not me.equals(oIsoScene.oSelectedItem) then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 52 .............................. return 
  [ 18] getglobal 256 ........................... <oSession>
  [ 21] pusharglist 1 ........................... <oSession>
  [ 23] extcall 59 .............................. <voidp(oSession)>
  [ 25] not ..................................... <not voidp(oSession)>
  [ 26] jmpifz [ 58] ............................ if not voidp(oSession) then
  [ 29] getglobal 256 ........................... <oSession>
  [ 32] getobjprop 260 .......................... <oSession.bTestMode>
  [ 35] not ..................................... <not oSession.bTestMode>
  [ 36] getglobal 258 ........................... <oPossessionStudio>
  [ 39] pusharglist 1 ........................... <oPossessionStudio>
  [ 41] extcall 59 .............................. <voidp(oPossessionStudio)>
  [ 43] not ..................................... <not voidp(oPossessionStudio)>
  [ 44] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [ 45] jmpifz [ 58] ............................ if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [ 48] getglobal 258 ........................... <oPossessionStudio>
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglistnoret 2 ...................... <oPossessionStudio, me>
  [ 55] objcall 262 ............................. oPossessionStudio.sendPutInStudio(me)
  [ 58] ret
end

on createPreviewSprite me, _oPreviewMember
  [  0] getparam 0 .............................. <me>
  [  2] getglobal 133 ........................... <oIsoScene>
  [  4] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [  6] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [  8] objcall 688 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 11] setobjprop 1424 ......................... me.iPreviewSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 62 ........................... <me.bHasPreview>
  [ 18] not ..................................... <not me.bHasPreview>
  [ 19] jmpifz [ 26] ............................ if not me.bHasPreview then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 52 .............................. return 
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 31] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 33] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 35] getparam 1 .............................. <_oPreviewMember>
  [ 37] setobjprop 30 ........................... sprite(me.iPreviewSprite).member = _oPreviewMember
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 44] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 46] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 48] pushint8 36 ............................. <36>
  [ 50] setobjprop 37 ........................... sprite(me.iPreviewSprite).ink = 36
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 57] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 59] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 61] pushint16 200 ........................... <200>
  [ 64] setobjprop 694 .......................... sprite(me.iPreviewSprite).blend = 200
  [ 67] getparam 0 .............................. <me>
  [ 69] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 72] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 74] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 76] pusharglist 0 ........................... <>
  [ 78] thebuiltin 708 .......................... <the maxinteger>
  [ 81] setobjprop 138 .......................... sprite(me.iPreviewSprite).locZ = the maxinteger
  [ 83] getparam 0 .............................. <me>
  [ 85] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 88] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 90] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 92] getchainedprop 193 ...................... <sprite(me.iPreviewSprite).scriptInstanceList>
  [ 94] pushcons 22 ............................. <"DragPreviewScript">
  [ 96] pusharglist 1 ........................... <"DragPreviewScript">
  [ 98] extcall 194 ............................. <script("DragPreviewScript")>
  [100] getparam 0 .............................. <me>
  [102] pusharglist 2 ........................... <script("DragPreviewScript"), me>
  [104] objcall 0 ............................... <script("DragPreviewScript").new(me)>
  [106] pusharglistnoret 2 ...................... <sprite(me.iPreviewSprite).scriptInstanceList, script("DragPreviewScript").new(me)>
  [108] objcall 140 ............................. sprite(me.iPreviewSprite).scriptInstanceList.add(script("DragPreviewScript").new(me))
  [110] getparam 0 .............................. <me>
  [112] pusharglistnoret 1 ...................... <me>
  [114] objcall 1379 ............................ me.hidePreview()
  [117] ret
end

on updatePreview me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 62 ........................... <me.bHasPreview>
  [  4] not ..................................... <not me.bHasPreview>
  [  5] jmpifz [ 12] ............................ if not me.bHasPreview then
  [  8] pusharglistnoret 0 ...................... <>
  [ 10] extcall 52 .............................. return 
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 17] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 19] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 21] pusharglist 0 ........................... <>
  [ 23] thebuiltin 542 .......................... <the mouseH>
  [ 26] setobjprop 143 .......................... sprite(me.iPreviewSprite).locH = the mouseH
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 33] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 35] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 37] pusharglist 0 ........................... <>
  [ 39] thebuiltin 543 .......................... <the mouseV>
  [ 42] setobjprop 122 .......................... sprite(me.iPreviewSprite).locV = the mouseV
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 49] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 51] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 53] pushint8 1 .............................. <1>
  [ 55] setobjprop 695 .......................... sprite(me.iPreviewSprite).visible = 1
  [ 58] getparam 0 .............................. <me>
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 2 ...................... <me, 0>
  [ 63] objcall 1384 ............................ me.setVisible(0)
  [ 66] ret
end

on hidePreview me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 62 ........................... <me.bHasPreview>
  [  4] not ..................................... <not me.bHasPreview>
  [  5] jmpifz [ 12] ............................ if not me.bHasPreview then
  [  8] pusharglistnoret 0 ...................... <>
  [ 10] extcall 52 .............................. return 
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 17] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 19] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 21] pushzero ................................ <0>
  [ 22] setobjprop 695 .......................... sprite(me.iPreviewSprite).visible = 0
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 30] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 32] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 34] pushint8 100 ............................ <100>
  [ 36] inv ..................................... <-100>
  [ 37] setobjprop 143 .......................... sprite(me.iPreviewSprite).locH = -100
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 44] pusharglist 1 ........................... <me.iPreviewSprite>
  [ 46] extcall 119 ............................. <sprite(me.iPreviewSprite)>
  [ 48] pushzero ................................ <0>
  [ 49] setobjprop 122 .......................... sprite(me.iPreviewSprite).locV = 0
  [ 51] getparam 0 .............................. <me>
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 2 ...................... <me, 1>
  [ 57] objcall 1384 ............................ me.setVisible(1)
  [ 60] ret
end

on getProdId me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 161 .......................... <me.sProdID>
  [  4] pusharglistnoret 1 ...................... <me.sProdID>
  [  6] extcall 52 .............................. return me.sProdID
  [  8] ret
end

on getAction me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 268 .......................... <me.oAction>
  [  5] pusharglistnoret 1 ...................... <me.oAction>
  [  7] extcall 52 .............................. return me.oAction
  [  9] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.oPreviewMember>
  [  4] pusharglistnoret 1 ...................... <me.oPreviewMember>
  [  6] extcall 52 .............................. return me.oPreviewMember
  [  8] ret
end

on equals me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] extcall 59 .............................. <voidp(_oItem)>
  [  6] jmpifz [ 14] ............................ if voidp(_oItem) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 52 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 511 .......................... <me.sPosId>
  [ 19] getparam 1 .............................. <_oItem>
  [ 21] getobjprop 511 .......................... <_oItem.sPosId>
  [ 24] eq ...................................... <me.sPosId = _oItem.sPosId>
  [ 25] jmpifz [ 37] ............................ if me.sPosId = _oItem.sPosId then / else
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 52 .............................. return 1
  [ 34] jmp [ 42]
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 52 .............................. return 0
  [ 42] ret
end

on getPosId me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 511 .......................... <me.sPosId>
  [  5] pusharglistnoret 1 ...................... <me.sPosId>
  [  7] extcall 52 .............................. return me.sPosId
  [  9] ret
end

on getType me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 510 .......................... <me.sType>
  [  5] pusharglistnoret 1 ...................... <me.sType>
  [  7] extcall 52 .............................. return me.sType
  [  9] ret
end

on getGridX me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 432 .......................... <me.iCol>
  [  5] pusharglistnoret 1 ...................... <me.iCol>
  [  7] extcall 52 .............................. return me.iCol
  [  9] ret
end

on getGridY me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 508 .......................... <me.iGridY>
  [  5] pusharglistnoret 1 ...................... <me.iGridY>
  [  7] extcall 52 .............................. return me.iGridY
  [  9] ret
end

on getHeight me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 146 .......................... <me.iHeight>
  [  4] pusharglistnoret 1 ...................... <me.iHeight>
  [  6] extcall 52 .............................. return me.iHeight
  [  8] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeightOffset>
  [  4] setobjprop 505 .......................... me.iHeightOffset = _iHeightOffset
  [  7] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 505 .......................... <me.iHeightOffset>
  [  5] pusharglistnoret 1 ...................... <me.iHeightOffset>
  [  7] extcall 52 .............................. return me.iHeightOffset
  [  9] ret
end

on setItemsAllowedOnTop me, _bItemsAllowedOnTop
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bItemsAllowedOnTop>
  [  4] setobjprop 504 .......................... me.bItemsAllowedOnTop = _bItemsAllowedOnTop
  [  7] ret
end

on getItemsAllowedOnTop me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 504 .......................... <me.bItemsAllowedOnTop>
  [  5] pusharglistnoret 1 ...................... <me.bItemsAllowedOnTop>
  [  7] extcall 52 .............................. return me.bItemsAllowedOnTop
  [  9] ret
end

on getGridZ me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 431 .......................... <me.iRow>
  [  5] pusharglistnoret 1 ...................... <me.iRow>
  [  7] extcall 52 .............................. return me.iRow
  [  9] ret
end

on setXPos me, iXPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iXPos>
  [  4] setobjprop 536 .......................... me.iGridX = iXPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iXPos>
  [ 11] setobjprop 432 .......................... me.iCol = iXPos
  [ 14] ret
end

on setYPos me, iYPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iYPos>
  [  4] setobjprop 508 .......................... me.iGridY = iYPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iYPos>
  [ 11] pusharglistnoret 2 ...................... <me, iYPos>
  [ 13] objcall 935 ............................. me.setGridY(iYPos)
  [ 16] ret
end

on setZPos me, iZPos
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iZPos>
  [  4] setobjprop 539 .......................... me.iGridZ = iZPos
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <iZPos>
  [ 11] setobjprop 431 .......................... me.iRow = iZPos
  [ 14] ret
end

on setAttributes me, _aAttributes
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_aAttributes>
  [  4] setobjprop 102 .......................... me.aAttributes = _aAttributes
  [  6] ret
end

on getDirection me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 507 .......................... <me.iDirection>
  [  5] pusharglistnoret 1 ...................... <me.iDirection>
  [  7] extcall 52 .............................. return me.iDirection
  [  9] ret
end

on setGridY me, _iGridY
  [  0] getparam 1 .............................. <_iGridY>
  [  2] pushzero ................................ <0>
  [  3] lt ...................................... <_iGridY < 0>
  [  4] jmpifz [ 11] ............................ if _iGridY < 0 then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 52 .............................. return 
  [ 11] getparam 1 .............................. <_iGridY>
  [ 13] getglobal 133 ........................... <oIsoScene>
  [ 15] getchainedprop 339 ...................... <oIsoScene.oIsoConstants>
  [ 18] getobjprop 584 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [ 21] gt ...................................... <_iGridY > oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [ 22] jmpifz [ 30] ............................ if _iGridY > oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 52 .............................. return 0
  [ 30] getparam 0 .............................. <me>
  [ 32] getparam 1 .............................. <_iGridY>
  [ 34] setobjprop 508 .......................... me.iGridY = _iGridY
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglistnoret 1 ...................... <me>
  [ 41] objcall 503 ............................. me.draw()
  [ 44] pushint8 1 .............................. <1>
  [ 46] pusharglistnoret 1 ...................... <1>
  [ 48] extcall 52 .............................. return 1
  [ 50] ret
end

on changeGridY me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 508 .......................... <me.iGridY>
  [  7] getparam 1 .............................. <iDir>
  [  9] add ..................................... <me.iGridY + iDir>
  [ 10] pusharglist 2 ........................... <me, me.iGridY + iDir>
  [ 12] objcall 935 ............................. <me.setGridY(me.iGridY + iDir)>
  [ 15] pusharglistnoret 1 ...................... <me.setGridY(me.iGridY + iDir)>
  [ 17] extcall 52 .............................. return me.setGridY(me.iGridY + iDir)
  [ 19] ret
end

on setState me, _iState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iState>
  [  4] setobjprop 509 .......................... me.iState = _iState
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 268 ...................... <me.oAction>
  [ 12] pusharglistnoret 1 ...................... <me.oAction>
  [ 14] objcall 1426 ............................ me.oAction.displayState()
  [ 17] ret
end

on getState me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 509 .......................... <me.iState>
  [  5] pusharglistnoret 1 ...................... <me.iState>
  [  7] extcall 52 .............................. return me.iState
  [  9] ret
end

on getAttributes me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 102 .......................... <me.aAttributes>
  [  4] pusharglistnoret 1 ...................... <me.aAttributes>
  [  6] extcall 52 .............................. return me.aAttributes
  [  8] ret
end

on setAttribute me, sProp, sState
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 102 ...................... <me.aAttributes>
  [  4] getparam 1 .............................. <sProp>
  [  6] pusharglist 1 ........................... <sProp>
  [  8] extcall 837 ............................. <symbol(sProp)>
  [ 11] getparam 2 .............................. <sState>
  [ 13] pusharglistnoret 3 ...................... <me.aAttributes, symbol(sProp), sState>
  [ 15] objcall 1366 ............................ me.aAttributes.setaProp(symbol(sProp), sState)
  [ 18] ret
end

on deleteItem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 467 ............................. <me.isRugITem()>
  [  7] jmpifz [ 25] ............................ if me.isRugITem() then / else
  [ 10] getglobal 133 ........................... <oIsoScene>
  [ 12] getchainedprop 397 ...................... <oIsoScene.oRugs>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 2 ...................... <oIsoScene.oRugs, me>
  [ 19] objcall 977 ............................. oIsoScene.oRugs.removeItem(me)
  [ 22] jmp [ 37]
  [ 25] getglobal 133 ........................... <oIsoScene>
  [ 27] getchainedprop 399 ...................... <oIsoScene.oFurniture>
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 2 ...................... <oIsoScene.oFurniture, me>
  [ 34] objcall 977 ............................. oIsoScene.oFurniture.removeItem(me)
  [ 37] ret
end

on mouseIsOverITem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 910 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 155
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 72
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <_iSprite>
  [ 41] pusharglist 2 ........................... <me, _iSprite>
  [ 43] objcall 913 ............................. <me.hitTest(_iSprite)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(_iSprite) then
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 52 .............................. return 1
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 910 ............................. <me.getSprites()>
  [ 12] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 14] getlocal 1 .............................. <_aSprites>
  [ 16] peek 0
  [ 18] pusharglist 1
  [ 20] extcall 155
  [ 22] pushint8 1
  [ 24] peek 0
  [ 26] peek 2
  [ 28] lteq
  [ 29] jmpifz [ 86] ............................ repeat with _iSprite in _aSprites
  [ 32] peek 2
  [ 34] peek 1
  [ 36] pusharglist 2
  [ 38] extcall 72
  [ 40] setlocal 2
  [ 42] getlocal 2 .............................. <_iSprite>
  [ 44] pusharglist 1 ........................... <_iSprite>
  [ 46] extcall 967 ............................. <rollover(_iSprite)>
  [ 49] jmpifz [ 81] ............................ if rollover(_iSprite) then
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 2 .............................. <_iSprite>
  [ 56] pusharglist 2 ........................... <me, _iSprite>
  [ 58] objcall 913 ............................. <me.hitTest(_iSprite)>
  [ 61] jmpifz [ 81] ............................ if me.hitTest(_iSprite) then
  [ 64] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 66] getlocal 2 .............................. <_iSprite>
  [ 68] pusharglist 1 ........................... <_iSprite>
  [ 70] extcall 119 ............................. <sprite(_iSprite)>
  [ 72] getobjprop 138 .......................... <sprite(_iSprite).locZ>
  [ 74] getlocal 2 .............................. <_iSprite>
  [ 76] pusharglistnoret 3 ...................... <aSpritesUnderMouse, sprite(_iSprite).locZ, _iSprite>
  [ 78] objcall 595 ............................. aSpritesUnderMouse.addProp(sprite(_iSprite).locZ, _iSprite)
  [ 81] pushint8 1
  [ 83] add
  [ 84] endrepeat [ 24]
  [ 86] pop 3
  [ 88] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 90] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 92] extcall 52 .............................. return aSpritesUnderMouse
  [ 94] ret
end

on rolloverObject me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 910 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 155
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 58] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 72
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <_iSprite>
  [ 39] pusharglist 1 ........................... <_iSprite>
  [ 41] extcall 967 ............................. <rollover(_iSprite)>
  [ 44] jmpifz [ 53] ............................ if rollover(_iSprite) then
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 52 .............................. return 1
  [ 53] pushint8 1
  [ 55] add
  [ 56] endrepeat [ 19]
  [ 58] pop 3
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 52 .............................. return 0
  [ 65] ret
end

on getHighestDepth me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iHighestDepth = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 910 ............................. <me.getSprites()>
  [ 10] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 12] getlocal 1 .............................. <_aSprites>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 155
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 69] ............................ repeat with _iSprite in _aSprites
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 72
  [ 38] setlocal 2
  [ 40] getlocal 2 .............................. <_iSprite>
  [ 42] pusharglist 1 ........................... <_iSprite>
  [ 44] extcall 119 ............................. <sprite(_iSprite)>
  [ 46] getobjprop 138 .......................... <sprite(_iSprite).locZ>
  [ 48] getlocal 0 .............................. <iHighestDepth>
  [ 50] gt ...................................... <sprite(_iSprite).locZ > iHighestDepth>
  [ 51] jmpifz [ 64] ............................ if sprite(_iSprite).locZ > iHighestDepth then
  [ 54] getlocal 2 .............................. <_iSprite>
  [ 56] pusharglist 1 ........................... <_iSprite>
  [ 58] extcall 119 ............................. <sprite(_iSprite)>
  [ 60] getobjprop 138 .......................... <sprite(_iSprite).locZ>
  [ 62] setlocal 0 .............................. iHighestDepth = sprite(_iSprite).locZ
  [ 64] pushint8 1
  [ 66] add
  [ 67] endrepeat [ 22]
  [ 69] pop 3
  [ 71] getlocal 0 .............................. <iHighestDepth>
  [ 73] pusharglistnoret 1 ...................... <iHighestDepth>
  [ 75] extcall 52 .............................. return iHighestDepth
  [ 77] ret
end

on hitTestAll me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 910 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 155
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 72
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <i>
  [ 41] pusharglist 2 ........................... <me, i>
  [ 43] objcall 913 ............................. <me.hitTest(i)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(i) then
  [ 49] getlocal 1 .............................. <i>
  [ 51] pusharglistnoret 1 ...................... <i>
  [ 53] extcall 52 .............................. return i
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] pusharglist 0 ........................... <>
  [ 64] extcall 238 ............................. <VOID>
  [ 66] pusharglistnoret 1 ...................... <VOID>
  [ 68] extcall 52 .............................. return VOID
  [ 70] ret
end

on hitTest me, iSpriteNum
  [  0] getparam 1 .............................. <iSpriteNum>
  [  2] pusharglist 1 ........................... <iSpriteNum>
  [  4] extcall 119 ............................. <sprite(iSpriteNum)>
  [  6] setlocal 0 .............................. _oSprite = sprite(iSpriteNum)
  [  8] getlocal 0 .............................. <_oSprite>
  [ 10] pusharglist 1 ........................... <_oSprite>
  [ 12] extcall 59 .............................. <voidp(_oSprite)>
  [ 14] jmpifz [ 22] ............................ if voidp(_oSprite) then
  [ 17] pushzero ................................ <0>
  [ 18] pusharglistnoret 1 ...................... <0>
  [ 20] extcall 52 .............................. return 0
  [ 22] getlocal 0 .............................. <_oSprite>
  [ 24] getobjprop 30 ........................... <_oSprite.member>
  [ 26] setlocal 1 .............................. _oMember = _oSprite.member
  [ 28] getlocal 1 .............................. <_oMember>
  [ 30] pusharglist 1 ........................... <_oMember>
  [ 32] extcall 59 .............................. <voidp(_oMember)>
  [ 34] jmpifz [ 42] ............................ if voidp(_oMember) then
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 52 .............................. return 0
  [ 42] getlocal 1 .............................. <_oMember>
  [ 44] getobjprop 73 ........................... <_oMember.memberNum>
  [ 46] pushzero ................................ <0>
  [ 47] lteq .................................... <_oMember.memberNum <= 0>
  [ 48] jmpifz [ 56] ............................ if _oMember.memberNum <= 0 then
  [ 51] pushzero ................................ <0>
  [ 52] pusharglistnoret 1 ...................... <0>
  [ 54] extcall 52 .............................. return 0
  [ 56] getlocal 0 .............................. <_oSprite>
  [ 58] getmovieprop 970 ........................ <the mouseLoc>
  [ 61] pusharglist 2 ........................... <_oSprite, the mouseLoc>
  [ 63] objcall 971 ............................. <_oSprite.mapStageToMember(the mouseLoc)>
  [ 66] setlocal 2 .............................. _oMemberLoc = _oSprite.mapStageToMember(the mouseLoc)
  [ 68] getlocal 2 .............................. <_oMemberLoc>
  [ 70] pusharglist 1 ........................... <_oMemberLoc>
  [ 72] extcall 59 .............................. <voidp(_oMemberLoc)>
  [ 74] jmpifz [ 82] ............................ if voidp(_oMemberLoc) then
  [ 77] pushzero ................................ <0>
  [ 78] pusharglistnoret 1 ...................... <0>
  [ 80] extcall 52 .............................. return 0
  [ 82] getlocal 1 .............................. <_oMember>
  [ 84] getobjprop 117 .......................... <_oMember.image>
  [ 86] setlocal 3 .............................. _oImage = _oMember.image
  [ 88] getlocal 3 .............................. <_oImage>
  [ 90] getlocal 2 .............................. <_oMemberLoc>
  [ 92] pusharglist 2 ........................... <_oImage, _oMemberLoc>
  [ 94] objcall 972 ............................. <_oImage.getPixel(_oMemberLoc)>
  [ 97] setlocal 4 .............................. _oPixelColor = _oImage.getPixel(_oMemberLoc)
  [ 99] getlocal 3 .............................. <_oImage>
  [101] getobjprop 1412 ......................... <_oImage.depth>
  [104] setlocal 5 .............................. iBitDepth = _oImage.depth
  [106] pushzero ................................ <0>
  [107] setlocal 6 .............................. bHitTest = 0
  [109] getlocal 5 .............................. <iBitDepth>
  [111] pushint8 8 .............................. <8>
  [113] eq ...................................... <iBitDepth = 8>
  [114] jmpifz [134] ............................ if iBitDepth = 8 then
  [117] getlocal 4 .............................. <_oPixelColor>
  [119] getparam 0 .............................. <me>
  [121] getobjprop 1421 ......................... <me.oHitTestColor8>
  [124] nteq .................................... <_oPixelColor <> me.oHitTestColor8>
  [125] jmpifz [134] ............................ if _oPixelColor <> me.oHitTestColor8 then
  [128] pushint8 1 .............................. <1>
  [130] pusharglistnoret 1 ...................... <1>
  [132] extcall 52 .............................. return 1
  [134] getlocal 5 .............................. <iBitDepth>
  [136] pushint8 8 .............................. <8>
  [138] gt ...................................... <iBitDepth > 8>
  [139] getlocal 5 .............................. <iBitDepth>
  [141] pushint8 32 ............................. <32>
  [143] lt ...................................... <iBitDepth < 32>
  [144] and ..................................... <(iBitDepth > 8) and (iBitDepth < 32)>
  [145] jmpifz [165] ............................ if (iBitDepth > 8) and (iBitDepth < 32) then
  [148] getlocal 4 .............................. <_oPixelColor>
  [150] getparam 0 .............................. <me>
  [152] getobjprop 1422 ......................... <me.oHitTestColor16>
  [155] nteq .................................... <_oPixelColor <> me.oHitTestColor16>
  [156] jmpifz [165] ............................ if _oPixelColor <> me.oHitTestColor16 then
  [159] pushint8 1 .............................. <1>
  [161] pusharglistnoret 1 ...................... <1>
  [163] extcall 52 .............................. return 1
  [165] pushzero ................................ <0>
  [166] pusharglistnoret 1 ...................... <0>
  [168] extcall 52 .............................. return 0
  [170] ret
end

on mouseDownEvent me, iSpriteNum, bDoubleClick
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 23 ............................. <"FURNI MOUSE DOWN: ">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 511 .......................... <me.sPosId>
  [  9] joinstr ................................. <"FURNI MOUSE DOWN: " & me.sPosId>
  [ 10] pusharglistnoret 2 ...................... <me, "FURNI MOUSE DOWN: " & me.sPosId>
  [ 12] objcall 332 ............................. me.debug("FURNI MOUSE DOWN: " & me.sPosId)
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 938 ............................. <me.hitTestAll()>
  [ 22] setparam 1 .............................. iSpriteNum = me.hitTestAll()
  [ 24] getparam 1 .............................. <iSpriteNum>
  [ 26] pusharglist 1 ........................... <iSpriteNum>
  [ 28] extcall 59 .............................. <voidp(iSpriteNum)>
  [ 30] not ..................................... <not voidp(iSpriteNum)>
  [ 31] setlocal 0 .............................. bHitTest = not voidp(iSpriteNum)
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 24 ............................. <"*** FURNITURE ITEM: MOUSEDOWN: ">
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 94 ........................... <me.sImageBase>
  [ 41] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase>
  [ 42] pushcons 25 ............................. <" HIT TEST: ">
  [ 44] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: ">
  [ 45] getlocal 0 .............................. <bHitTest>
  [ 47] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest>
  [ 48] pushcons 26 ............................. <" ***">
  [ 50] joinstr ................................. <"*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest & " ***">
  [ 51] pusharglistnoret 2 ...................... <me, "*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest & " ***">
  [ 53] objcall 332 ............................. me.debug("*** FURNITURE ITEM: MOUSEDOWN: " & me.sImageBase & " HIT TEST: " & bHitTest & " ***")
  [ 56] getlocal 0 .............................. <bHitTest>
  [ 58] not ..................................... <not bHitTest>
  [ 59] jmpifz [ 67] ............................ if not bHitTest then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 52 .............................. return 0
  [ 67] getparam 0 .............................. <me>
  [ 69] pusharglist 1 ........................... <me>
  [ 71] objcall 255 ............................. <me.getDrag()>
  [ 73] jmpifz [ 81] ............................ if me.getDrag() then
  [ 76] pushzero ................................ <0>
  [ 77] pusharglistnoret 1 ...................... <0>
  [ 79] extcall 52 .............................. return 0
  [ 81] getglobal 172 ........................... <ElementMgr>
  [ 83] pusharglist 1 ........................... <ElementMgr>
  [ 85] objcall 499 ............................. <ElementMgr.getTrader()>
  [ 88] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 90] extcall 59 .............................. <voidp(ElementMgr.getTrader())>
  [ 92] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 93] setlocal 1 .............................. bTrading = not voidp(ElementMgr.getTrader())
  [ 95] getlocal 1 .............................. <bTrading>
  [ 97] jmpifz [106] ............................ if bTrading then
  [100] pushint8 1 .............................. <1>
  [102] pusharglistnoret 1 ...................... <1>
  [104] extcall 52 .............................. return 1
  [106] getparam 0 .............................. <me>
  [108] getchainedprop 268 ...................... <me.oAction>
  [111] getparam 2 .............................. <bDoubleClick>
  [113] pusharglist 2 ........................... <me.oAction, bDoubleClick>
  [115] objcall 295 ............................. <me.oAction.mouseDownEvent(bDoubleClick)>
  [118] setlocal 2 .............................. bPass = me.oAction.mouseDownEvent(bDoubleClick)
  [120] getlocal 2 .............................. <bPass>
  [122] pusharglist 1 ........................... <bPass>
  [124] extcall 59 .............................. <voidp(bPass)>
  [126] not ..................................... <not voidp(bPass)>
  [127] jmpifz [142] ............................ if not voidp(bPass) then
  [130] getlocal 2 .............................. <bPass>
  [132] not ..................................... <not bPass>
  [133] jmpifz [142] ............................ if not bPass then
  [136] pushint8 1 .............................. <1>
  [138] pusharglistnoret 1 ...................... <1>
  [140] extcall 52 .............................. return 1
  [142] getglobal 60 ............................ <oStudioMap>
  [144] pusharglist 1 ........................... <oStudioMap>
  [146] objcall 61 .............................. <oStudioMap.isPrivate()>
  [148] not ..................................... <not oStudioMap.isPrivate()>
  [149] jmpifz [157] ............................ if not oStudioMap.isPrivate() then
  [152] pushzero ................................ <0>
  [153] pusharglistnoret 1 ...................... <0>
  [155] extcall 52 .............................. return 0
  [157] getlocal 2 .............................. <bPass>
  [159] pusharglist 1 ........................... <bPass>
  [161] extcall 59 .............................. <voidp(bPass)>
  [163] getlocal 2 .............................. <bPass>
  [165] getparam 0 .............................. <me>
  [167] pusharglist 1 ........................... <me>
  [169] objcall 255 ............................. <me.getDrag()>
  [171] not ..................................... <not me.getDrag()>
  [172] and ..................................... <bPass and not me.getDrag()>
  [173] or ...................................... <voidp(bPass) or (bPass and not me.getDrag())>
  [174] jmpifz [184] ............................ if voidp(bPass) or (bPass and not me.getDrag()) then
  [177] getglobal 133 ........................... <oIsoScene>
  [179] pusharglistnoret 1 ...................... <oIsoScene>
  [181] objcall 301 ............................. oIsoScene.moveAvatar()
  [184] pushint8 1 .............................. <1>
  [186] pusharglistnoret 1 ...................... <1>
  [188] extcall 52 .............................. return 1
  [190] ret
end

on putInBackPack me
  [  0] ret
end

on placeItem me, oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 27 ............................. <"####### BEGIN PLACE ITEM ########: ">
  [  4] getparam 1 .............................. <oSquare>
  [  6] pusharglist 1 ........................... <oSquare>
  [  8] objcall 498 ............................. <oSquare.toString()>
  [ 11] joinstr ................................. <"####### BEGIN PLACE ITEM ########: " & oSquare.toString()>
  [ 12] pusharglistnoret 2 ...................... <me, "####### BEGIN PLACE ITEM ########: " & oSquare.toString()>
  [ 14] objcall 332 ............................. me.debug("####### BEGIN PLACE ITEM ########: " & oSquare.toString())
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 467 ............................. <me.isRugITem()>
  [ 24] jmpifz [ 40] ............................ if me.isRugITem() then
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 1 .............................. <oSquare>
  [ 31] pusharglist 2 ........................... <me, oSquare>
  [ 33] objcall 1381 ............................ <me.placeRugItem(oSquare)>
  [ 36] pusharglistnoret 1 ...................... <me.placeRugItem(oSquare)>
  [ 38] extcall 52 .............................. return me.placeRugItem(oSquare)
  [ 40] getglobal 133 ........................... <oIsoScene>
  [ 42] getparam 0 .............................. <me>
  [ 44] getparam 1 .............................. <oSquare>
  [ 46] pusharglist 3 ........................... <oIsoScene, me, oSquare>
  [ 48] objcall 317 ............................. <oIsoScene.getSquareOffsets(me, oSquare)>
  [ 51] setlocal 0 .............................. aDifList = oIsoScene.getSquareOffsets(me, oSquare)
  [ 53] getglobal 133 ........................... <oIsoScene>
  [ 55] getlocal 0 .............................. <aDifList>
  [ 57] pusharglist 2 ........................... <oIsoScene, aDifList>
  [ 59] objcall 310 ............................. <oIsoScene.squaresAreOverFloor(aDifList)>
  [ 62] setlocal 1 .............................. bOverFloor = oIsoScene.squaresAreOverFloor(aDifList)
  [ 64] getlocal 1 .............................. <bOverFloor>
  [ 66] not ..................................... <not bOverFloor>
  [ 67] jmpifz [ 75] ............................ if not bOverFloor then
  [ 70] pushzero ................................ <0>
  [ 71] pusharglistnoret 1 ...................... <0>
  [ 73] extcall 52 .............................. return 0
  [ 75] getglobal 133 ........................... <oIsoScene>
  [ 77] getchainedprop 390 ...................... <oIsoScene.oMap>
  [ 80] getparam 1 .............................. <oSquare>
  [ 82] getobjprop 431 .......................... <oSquare.iRow>
  [ 85] getparam 1 .............................. <oSquare>
  [ 87] getobjprop 432 .......................... <oSquare.iCol>
  [ 90] pusharglist 3 ........................... <oIsoScene.oMap, oSquare.iRow, oSquare.iCol>
  [ 92] objcall 433 ............................. <oIsoScene.oMap.getNode(oSquare.iRow, oSquare.iCol)>
  [ 95] setlocal 2 .............................. oMapNode = oIsoScene.oMap.getNode(oSquare.iRow, oSquare.iCol)
  [ 97] getlocal 2 .............................. <oMapNode>
  [ 99] getobjprop 434 .......................... <oMapNode.w>
  [102] setlocal 3 .............................. iWeight = oMapNode.w
  [104] getlocal 3 .............................. <iWeight>
  [106] getglobal 133 ........................... <oIsoScene>
  [108] getchainedprop 390 ...................... <oIsoScene.oMap>
  [111] getchainedprop 435 ...................... <oIsoScene.oMap.oPathfinder>
  [114] getobjprop 436 .......................... <oIsoScene.oMap.oPathfinder.W_BLOCKED>
  [117] eq ...................................... <iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED>
  [118] getlocal 3 .............................. <iWeight>
  [120] getglobal 133 ........................... <oIsoScene>
  [122] getchainedprop 390 ...................... <oIsoScene.oMap>
  [125] getchainedprop 435 ...................... <oIsoScene.oMap.oPathfinder>
  [128] getobjprop 437 .......................... <oIsoScene.oMap.oPathfinder.W_ENTER>
  [131] eq ...................................... <iWeight = oIsoScene.oMap.oPathfinder.W_ENTER>
  [132] or ...................................... <(iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED) or (iWeight = oIsoScene.oMap.oPathfinder.W_ENTER)>
  [133] jmpifz [141] ............................ if (iWeight = oIsoScene.oMap.oPathfinder.W_BLOCKED) or (iWeight = oIsoScene.oMap.oPathfinder.W_ENTER) then
  [136] pushzero ................................ <0>
  [137] pusharglistnoret 1 ...................... <0>
  [139] extcall 52 .............................. return 0
  [141] getglobal 133 ........................... <oIsoScene>
  [143] getchainedprop 399 ...................... <oIsoScene.oFurniture>
  [146] getparam 0 .............................. <me>
  [148] pusharglist 2 ........................... <oIsoScene.oFurniture, me>
  [150] objcall 451 ............................. <oIsoScene.oFurniture.isSeatableItem(me)>
  [153] setlocal 4 .............................. bIsSeatableItem = oIsoScene.oFurniture.isSeatableItem(me)
  [155] getglobal 133 ........................... <oIsoScene>
  [157] getchainedprop 401 ...................... <oIsoScene.oAvatars>
  [160] getlocal 0 .............................. <aDifList>
  [162] pusharglist 2 ........................... <oIsoScene.oAvatars, aDifList>
  [164] objcall 1120 ............................ <oIsoScene.oAvatars.getItemsAtSquares(aDifList)>
  [167] setlocal 5 .............................. aAvatars = oIsoScene.oAvatars.getItemsAtSquares(aDifList)
  [169] getlocal 5 .............................. <aAvatars>
  [171] getobjprop 155 .......................... <aAvatars.count>
  [173] pushzero ................................ <0>
  [174] gt ...................................... <aAvatars.count > 0>
  [175] getlocal 4 .............................. <bIsSeatableItem>
  [177] not ..................................... <not bIsSeatableItem>
  [178] and ..................................... <(aAvatars.count > 0) and not bIsSeatableItem>
  [179] jmpifz [187] ............................ if (aAvatars.count > 0) and not bIsSeatableItem then
  [182] pushzero ................................ <0>
  [183] pusharglistnoret 1 ...................... <0>
  [185] extcall 52 .............................. return 0
  [187] getparam 0 .............................. <me>
  [189] pushcons 28 ............................. <"NO AVATARS IN WAY:">
  [191] pusharglistnoret 2 ...................... <me, "NO AVATARS IN WAY:">
  [193] objcall 332 ............................. me.debug("NO AVATARS IN WAY:")
  [196] getlocal 0 .............................. <aDifList>
  [198] peek 0
  [200] pusharglist 1
  [202] extcall 155
  [204] pushint8 1
  [206] peek 0
  [208] peek 2
  [210] lteq
  [211] jmpifz [246] ............................ repeat with s in aDifList
  [214] peek 2
  [216] peek 1
  [218] pusharglist 2
  [220] extcall 72
  [222] setlocal 6
  [224] getparam 0 .............................. <me>
  [226] pushcons 29 ............................. <"s: ">
  [228] getlocal 6 .............................. <s>
  [230] pusharglist 1 ........................... <s>
  [232] objcall 498 ............................. <s.toString()>
  [235] joinstr ................................. <"s: " & s.toString()>
  [236] pusharglistnoret 2 ...................... <me, "s: " & s.toString()>
  [238] objcall 332 ............................. me.debug("s: " & s.toString())
  [241] pushint8 1
  [243] add
  [244] endrepeat [206]
  [246] pop 3
  [248] getlocal 4 .............................. <bIsSeatableItem>
  [250] jmpifz [293] ............................ if bIsSeatableItem then
  [253] getglobal 133 ........................... <oIsoScene>
  [255] getchainedprop 399 ...................... <oIsoScene.oFurniture>
  [258] getlocal 0 .............................. <aDifList>
  [260] getparam 0 .............................. <me>
  [262] pusharglist 3 ........................... <oIsoScene.oFurniture, aDifList, me>
  [264] objcall 1227 ............................ <oIsoScene.oFurniture.getItemsAtSquaresExcept(aDifList, me)>
  [267] setlocal 7 .............................. aItemsAtSquares = oIsoScene.oFurniture.getItemsAtSquaresExcept(aDifList, me)
  [269] getglobal 133 ........................... <oIsoScene>
  [271] getchainedprop 399 ...................... <oIsoScene.oFurniture>
  [274] getlocal 7 .............................. <aItemsAtSquares>
  [276] pusharglist 2 ........................... <oIsoScene.oFurniture, aItemsAtSquares>
  [278] objcall 1226 ............................ <oIsoScene.oFurniture.containsSeatableItems(aItemsAtSquares)>
  [281] setlocal 8 .............................. bContainsSeatableItems = oIsoScene.oFurniture.containsSeatableItems(aItemsAtSquares)
  [283] getlocal 8 .............................. <bContainsSeatableItems>
  [285] jmpifz [293] ............................ if bContainsSeatableItems then
  [288] pushzero ................................ <0>
  [289] pusharglistnoret 1 ...................... <0>
  [291] extcall 52 .............................. return 0
  [293] pushzero ................................ <0>
  [294] setprop 508 ............................. iGridY = 0
  [297] pushzero ................................ <0>
  [298] setlocal 9 .............................. iTestLow = 0
  [300] getparam 0 .............................. <me>
  [302] pusharglist 1 ........................... <me>
  [304] objcall 1256 ............................ <me.getHeight()>
  [307] setlocal 10 ............................. iTestHi = me.getHeight()
  [309] pushint8 1 .............................. <1>
  [311] setlocal 11
  [313] getlocal 11
  [315] getglobal 133 ........................... <oIsoScene>
  [317] getchainedprop 339 ...................... <oIsoScene.oIsoConstants>
  [320] getobjprop 584 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT>
  [323] lteq
  [324] jmpifz [497] ............................ repeat with i = 1 to oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT
  [327] getglobal 133 ........................... <oIsoScene>
  [329] getchainedprop 399 ...................... <oIsoScene.oFurniture>
  [332] getlocal 0 .............................. <aDifList>
  [334] getparam 0 .............................. <me>
  [336] getlocal 9 .............................. <iTestLow>
  [338] getlocal 10 ............................. <iTestHi>
  [340] pusharglist 5 ........................... <oIsoScene.oFurniture, aDifList, me, iTestLow, iTestHi>
  [342] objcall 1237 ............................ <oIsoScene.oFurniture.getItemsAtSquaresInHeightRangeExcept(aDifList, me, iTestLow, iTestHi)>
  [345] setlocal 12 ............................. aItemsInRange = oIsoScene.oFurniture.getItemsAtSquaresInHeightRangeExcept(aDifList, me, iTestLow, iTestHi)
  [347] getlocal 12 ............................. <aItemsInRange>
  [349] pusharglist 1 ........................... <aItemsInRange>
  [351] objcall 155 ............................. <aItemsInRange.count()>
  [353] setlocal 13 ............................. iCount = aItemsInRange.count()
  [355] getlocal 13 ............................. <iCount>
  [357] pushzero ................................ <0>
  [358] gt ...................................... <iCount > 0>
  [359] jmpifz [460] ............................ if iCount > 0 then
  [362] getglobal 133 ........................... <oIsoScene>
  [364] getchainedprop 399 ...................... <oIsoScene.oFurniture>
  [367] getlocal 12 ............................. <aItemsInRange>
  [369] pusharglist 2 ........................... <oIsoScene.oFurniture, aItemsInRange>
  [371] objcall 1240 ............................ <oIsoScene.oFurniture.getItemWithGreatestHeightOffset(aItemsInRange)>
  [374] setlocal 14 ............................. oItemInWay = oIsoScene.oFurniture.getItemWithGreatestHeightOffset(aItemsInRange)
  [376] getlocal 14 ............................. <oItemInWay>
  [378] pusharglist 1 ........................... <oItemInWay>
  [380] objcall 916 ............................. <oItemInWay.getItemsAllowedOnTop()>
  [383] setlocal 15 ............................. bAllowItemsOnTop = oItemInWay.getItemsAllowedOnTop()
  [385] getlocal 15 ............................. <bAllowItemsOnTop>
  [387] not ..................................... <not bAllowItemsOnTop>
  [388] jmpifz [396] ............................ if not bAllowItemsOnTop then
  [391] pushzero ................................ <0>
  [392] pusharglistnoret 1 ...................... <0>
  [394] extcall 52 .............................. return 0
  [396] getlocal 14 ............................. <oItemInWay>
  [398] pusharglist 1 ........................... <oItemInWay>
  [400] objcall 453 ............................. <oItemInWay.getHeightOffset()>
  [403] getlocal 14 ............................. <oItemInWay>
  [405] pusharglist 1 ........................... <oItemInWay>
  [407] objcall 1256 ............................ <oItemInWay.getHeight()>
  [410] add ..................................... <oItemInWay.getHeightOffset() + oItemInWay.getHeight()>
  [411] setlocal 9 .............................. iTestLow = oItemInWay.getHeightOffset() + oItemInWay.getHeight()
  [413] getlocal 9 .............................. <iTestLow>
  [415] getglobal 133 ........................... <oIsoScene>
  [417] getchainedprop 339 ...................... <oIsoScene.oIsoConstants>
  [420] getobjprop 585 .......................... <oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET>
  [423] gteq .................................... <iTestLow >= oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET>
  [424] jmpifz [432] ............................ if iTestLow >= oIsoScene.oIsoConstants.DEFAULT_MAX_HEIGHT_OFFSET then
  [427] pushzero ................................ <0>
  [428] pusharglistnoret 1 ...................... <0>
  [430] extcall 52 .............................. return 0
  [432] getlocal 9 .............................. <iTestLow>
  [434] getlocal 14 ............................. <oItemInWay>
  [436] pusharglist 1 ........................... <oItemInWay>
  [438] objcall 1256 ............................ <oItemInWay.getHeight()>
  [441] add ..................................... <iTestLow + oItemInWay.getHeight()>
  [442] setlocal 10 ............................. iTestHi = iTestLow + oItemInWay.getHeight()
  [444] getlocal 14 ............................. <oItemInWay>
  [446] pusharglist 1 ........................... <oItemInWay>
  [448] objcall 934 ............................. <oItemInWay.getGridY()>
  [451] pushint8 1 .............................. <1>
  [453] add ..................................... <oItemInWay.getGridY() + 1>
  [454] setprop 508 ............................. iGridY = oItemInWay.getGridY() + 1
  [457] jmp [488] ............................... next repeat
  [460] getparam 0 .............................. <me>
  [462] getparam 1 .............................. <oSquare>
  [464] getobjprop 431 .......................... <oSquare.iRow>
  [467] getparam 1 .............................. <oSquare>
  [469] getobjprop 432 .......................... <oSquare.iCol>
  [472] getprop 508 ............................. <iGridY>
  [475] getlocal 9 .............................. <iTestLow>
  [477] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, iGridY, iTestLow>
  [479] objcall 1339 ............................ me.setDragPosition(oSquare.iRow, oSquare.iCol, iGridY, iTestLow)
  [482] pushint8 1 .............................. <1>
  [484] pusharglistnoret 1 ...................... <1>
  [486] extcall 52 .............................. return 1
  [488] pushint8 1
  [490] getlocal 11
  [492] add
  [493] setlocal 11
  [495] endrepeat [313]
  [497] pushzero ................................ <0>
  [498] pusharglistnoret 1 ...................... <0>
  [500] extcall 52 .............................. return 0
  [502] ret
end

on placeRugItem me, oSquare
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getparam 0 .............................. <me>
  [  4] getparam 1 .............................. <oSquare>
  [  6] pusharglist 3 ........................... <oIsoScene, me, oSquare>
  [  8] objcall 317 ............................. <oIsoScene.getSquareOffsets(me, oSquare)>
  [ 11] setlocal 0 .............................. aDifList = oIsoScene.getSquareOffsets(me, oSquare)
  [ 13] getglobal 133 ........................... <oIsoScene>
  [ 15] getlocal 0 .............................. <aDifList>
  [ 17] pusharglist 2 ........................... <oIsoScene, aDifList>
  [ 19] objcall 310 ............................. <oIsoScene.squaresAreOverFloor(aDifList)>
  [ 22] setlocal 1 .............................. bOverFloor = oIsoScene.squaresAreOverFloor(aDifList)
  [ 24] getlocal 1 .............................. <bOverFloor>
  [ 26] not ..................................... <not bOverFloor>
  [ 27] jmpifz [ 35] ............................ if not bOverFloor then
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 52 .............................. return 0
  [ 35] getglobal 133 ........................... <oIsoScene>
  [ 37] getchainedprop 397 ...................... <oIsoScene.oRugs>
  [ 40] pusharglist 1 ........................... <oIsoScene.oRugs>
  [ 42] objcall 1270 ............................ <oIsoScene.oRugs.getNextHighestDepth()>
  [ 45] setlocal 2 .............................. _iGridY = oIsoScene.oRugs.getNextHighestDepth()
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 1 .............................. <oSquare>
  [ 51] getobjprop 431 .......................... <oSquare.iRow>
  [ 54] getparam 1 .............................. <oSquare>
  [ 56] getobjprop 432 .......................... <oSquare.iCol>
  [ 59] getlocal 2 .............................. <_iGridY>
  [ 61] pushzero ................................ <0>
  [ 62] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, _iGridY, 0>
  [ 64] objcall 1339 ............................ me.setDragPosition(oSquare.iRow, oSquare.iCol, _iGridY, 0)
  [ 67] pushint8 1 .............................. <1>
  [ 69] pusharglistnoret 1 ...................... <1>
  [ 71] extcall 52 .............................. return 1
  [ 73] ret
end

on rotateItem me
  [  0] getglobal 233 ........................... <gFeatureSet>
  [  2] pushsymb 263 ............................ <#FURNITURE_ROTATE>
  [  5] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_ROTATE>
  [  7] objcall 235 ............................. <gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [  9] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [ 10] jmpifz [ 17] ............................ if not gFeatureSet.isEnabled(#FURNITURE_ROTATE) then
  [ 13] pusharglistnoret 0 ...................... <>
  [ 15] extcall 52 .............................. return 
  [ 17] getglobal 133 ........................... <oIsoScene>
  [ 19] getchainedprop 240 ...................... <oIsoScene.oSelectedItem>
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me>
  [ 25] objcall 254 ............................. <oIsoScene.oSelectedItem.equals(me)>
  [ 27] jmpifz [ 37] ............................ if oIsoScene.oSelectedItem.equals(me) then
  [ 30] getglobal 133 ........................... <oIsoScene>
  [ 32] pusharglistnoret 1 ...................... <oIsoScene>
  [ 34] objcall 312 ............................. oIsoScene.rotateSelectedItem()
  [ 37] ret
end

on setGridPosition me, _iRow, _iCol, _iGridY, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1379 ............................ me.hidePreview()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_iRow>
  [ 11] setobjprop 431 .......................... me.iRow = _iRow
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 2 .............................. <_iCol>
  [ 18] setobjprop 432 .......................... me.iCol = _iCol
  [ 21] getparam 3 .............................. <_iGridY>
  [ 23] pusharglist 1 ........................... <_iGridY>
  [ 25] extcall 59 .............................. <voidp(_iGridY)>
  [ 27] not ..................................... <not voidp(_iGridY)>
  [ 28] jmpifz [ 38] ............................ if not voidp(_iGridY) then
  [ 31] getparam 0 .............................. <me>
  [ 33] getparam 3 .............................. <_iGridY>
  [ 35] setobjprop 508 .......................... me.iGridY = _iGridY
  [ 38] getparam 4 .............................. <_iHeightOffset>
  [ 40] pusharglist 1 ........................... <_iHeightOffset>
  [ 42] extcall 59 .............................. <voidp(_iHeightOffset)>
  [ 44] not ..................................... <not voidp(_iHeightOffset)>
  [ 45] jmpifz [ 55] ............................ if not voidp(_iHeightOffset) then
  [ 48] getparam 0 .............................. <me>
  [ 50] getparam 4 .............................. <_iHeightOffset>
  [ 52] setobjprop 505 .......................... me.iHeightOffset = _iHeightOffset
  [ 55] getparam 0 .............................. <me>
  [ 57] pusharglistnoret 1 ...................... <me>
  [ 59] objcall 503 ............................. me.draw()
  [ 62] getparam 0 .............................. <me>
  [ 64] getparam 0 .............................. <me>
  [ 66] getobjprop 431 .......................... <me.iRow>
  [ 69] setobjprop 1437 ......................... me.iLastRow = me.iRow
  [ 72] getparam 0 .............................. <me>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 432 .......................... <me.iCol>
  [ 79] setobjprop 1438 ......................... me.iLastCol = me.iCol
  [ 82] getparam 0 .............................. <me>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 508 .......................... <me.iGridY>
  [ 89] setobjprop 1439 ......................... me.iLastGridY = me.iGridY
  [ 92] getparam 0 .............................. <me>
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 505 .......................... <me.iHeightOffset>
  [ 99] setobjprop 1440 ......................... me.iLastHeightOffset = me.iHeightOffset
  [102] getglobal 133 ........................... <oIsoScene>
  [104] getchainedprop 401 ...................... <oIsoScene.oAvatars>
  [107] pusharglistnoret 1 ...................... <oIsoScene.oAvatars>
  [109] objcall 1118 ............................ oIsoScene.oAvatars.updateAll()
  [112] ret
end

on setDragPosition me, _iRow, _iCol, _iGridY, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1379 ............................ me.hidePreview()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_iRow>
  [ 11] setobjprop 431 .......................... me.iRow = _iRow
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 2 .............................. <_iCol>
  [ 18] setobjprop 432 .......................... me.iCol = _iCol
  [ 21] getparam 0 .............................. <me>
  [ 23] getparam 4 .............................. <_iHeightOffset>
  [ 25] setobjprop 505 .......................... me.iHeightOffset = _iHeightOffset
  [ 28] getparam 0 .............................. <me>
  [ 30] getparam 3 .............................. <_iGridY>
  [ 32] setobjprop 508 .......................... me.iGridY = _iGridY
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 503 ............................. me.draw()
  [ 42] ret
end

on resetLastPosition me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1437 ......................... <me.iLastRow>
  [  5] pusharglist 1 ........................... <me.iLastRow>
  [  7] extcall 59 .............................. <voidp(me.iLastRow)>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 1438 ......................... <me.iLastCol>
  [ 14] pusharglist 1 ........................... <me.iLastCol>
  [ 16] extcall 59 .............................. <voidp(me.iLastCol)>
  [ 18] or ...................................... <voidp(me.iLastRow) or voidp(me.iLastCol)>
  [ 19] jmpifz [ 27] ............................ if voidp(me.iLastRow) or voidp(me.iLastCol) then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 52 .............................. return 0
  [ 27] getglobal 133 ........................... <oIsoScene>
  [ 29] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1437 ......................... <me.iLastRow>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 1438 ......................... <me.iLastCol>
  [ 41] pusharglist 3 ........................... <oIsoScene.oGrid, me.iLastRow, me.iLastCol>
  [ 43] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iLastRow, me.iLastCol)>
  [ 46] setlocal 0 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iLastRow, me.iLastCol)
  [ 48] getglobal 133 ........................... <oIsoScene>
  [ 50] getlocal 0 .............................. <oSquare>
  [ 52] pusharglist 2 ........................... <oIsoScene, oSquare>
  [ 54] objcall 309 ............................. <oIsoScene.isOverFloor(oSquare)>
  [ 57] not ..................................... <not oIsoScene.isOverFloor(oSquare)>
  [ 58] jmpifz [ 66] ............................ if not oIsoScene.isOverFloor(oSquare) then
  [ 61] pushzero ................................ <0>
  [ 62] pusharglistnoret 1 ...................... <0>
  [ 64] extcall 52 .............................. return 0
  [ 66] getparam 0 .............................. <me>
  [ 68] getparam 0 .............................. <me>
  [ 70] getobjprop 1420 ......................... <me.iLastDirectionIndex>
  [ 73] setobjprop 1419 ......................... me.iDirectionIndex = me.iLastDirectionIndex
  [ 76] getparam 0 .............................. <me>
  [ 78] getparam 0 .............................. <me>
  [ 80] pushsymb 884 ............................ <#aDirections>
  [ 83] getparam 0 .............................. <me>
  [ 85] getobjprop 1419 ......................... <me.iDirectionIndex>
  [ 88] pusharglist 3 ........................... <me, #aDirections, me.iDirectionIndex>
  [ 90] objcall 104 ............................. <me.aDirections[me.iDirectionIndex]>
  [ 92] pusharglistnoret 2 ...................... <me, me.aDirections[me.iDirectionIndex]>
  [ 94] objcall 1341 ............................ me.setDirection(me.aDirections[me.iDirectionIndex])
  [ 97] getparam 0 .............................. <me>
  [ 99] pushzero ................................ <0>
  [100] setobjprop 1415 ......................... me.iFrame = 0
  [103] getparam 0 .............................. <me>
  [105] pushzero ................................ <0>
  [106] pusharglistnoret 2 ...................... <me, 0>
  [108] objcall 514 ............................. me.setDrag(0)
  [111] getparam 0 .............................. <me>
  [113] getparam 0 .............................. <me>
  [115] getobjprop 1437 ......................... <me.iLastRow>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 1438 ......................... <me.iLastCol>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 1439 ......................... <me.iLastGridY>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 1440 ......................... <me.iLastHeightOffset>
  [133] pusharglistnoret 5 ...................... <me, me.iLastRow, me.iLastCol, me.iLastGridY, me.iLastHeightOffset>
  [135] objcall 1340 ............................ me.setGridPosition(me.iLastRow, me.iLastCol, me.iLastGridY, me.iLastHeightOffset)
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 52 .............................. return 1
  [144] ret
end

on existsAtSquare me, oSquare
  [  0] getparam 1 .............................. <oSquare>
  [  2] pusharglist 1 ........................... <oSquare>
  [  4] extcall 59 .............................. <voidp(oSquare)>
  [  6] jmpifz [ 13] ............................ if voidp(oSquare) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 529 ............................. <me.getOccupiedSquares()>
  [ 20] setlocal 0 .............................. aList = me.getOccupiedSquares()
  [ 22] pushint8 1 .............................. <1>
  [ 24] setlocal 1
  [ 26] getlocal 1
  [ 28] getlocal 0 .............................. <aList>
  [ 30] getobjprop 155 .......................... <aList.count>
  [ 32] lteq
  [ 33] jmpifz [ 68] ............................ repeat with i = 1 to aList.count
  [ 36] getparam 1 .............................. <oSquare>
  [ 38] getlocal 0 .............................. <aList>
  [ 40] getlocal 1 .............................. <i>
  [ 42] pusharglist 2 ........................... <aList, i>
  [ 44] objcall 72 .............................. <aList[i]>
  [ 46] pusharglist 2 ........................... <oSquare, aList[i]>
  [ 48] objcall 254 ............................. <oSquare.equals(aList[i])>
  [ 50] jmpifz [ 59] ............................ if oSquare.equals(aList[i]) then
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 1 ...................... <1>
  [ 57] extcall 52 .............................. return 1
  [ 59] pushint8 1
  [ 61] getlocal 1
  [ 63] add
  [ 64] setlocal 1
  [ 66] endrepeat [ 26]
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 52 .............................. return 0
  [ 73] ret
end

on setDrag me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1343 ......................... <me.bDragging>
  [  5] not ..................................... <not me.bDragging>
  [  6] getparam 1 .............................. <bState>
  [  8] and ..................................... <not me.bDragging and bState>
  [  9] jmpifz [ 52] ............................ if not me.bDragging and bState then
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 431 .......................... <me.iRow>
  [ 19] setobjprop 1437 ......................... me.iLastRow = me.iRow
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 432 .......................... <me.iCol>
  [ 29] setobjprop 1438 ......................... me.iLastCol = me.iCol
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 508 .......................... <me.iGridY>
  [ 39] setobjprop 1439 ......................... me.iLastGridY = me.iGridY
  [ 42] getparam 0 .............................. <me>
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 505 .......................... <me.iHeightOffset>
  [ 49] setobjprop 1440 ......................... me.iLastHeightOffset = me.iHeightOffset
  [ 52] getparam 0 .............................. <me>
  [ 54] getparam 1 .............................. <bState>
  [ 56] setobjprop 1343 ......................... me.bDragging = bState
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 1343 ......................... <me.bDragging>
  [ 64] jmpifz [ 73] ............................ if me.bDragging then
  [ 67] getparam 0 .............................. <me>
  [ 69] pushzero ................................ <0>
  [ 70] setobjprop 1415 ......................... me.iFrame = 0
  [ 73] getparam 0 .............................. <me>
  [ 75] getobjprop 1343 ......................... <me.bDragging>
  [ 78] not ..................................... <not me.bDragging>
  [ 79] jmpifz [ 88] ............................ if not me.bDragging then
  [ 82] getparam 0 .............................. <me>
  [ 84] pushzero ................................ <0>
  [ 85] setobjprop 1415 ......................... me.iFrame = 0
  [ 88] ret
end

on getDrag me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1343 ......................... <me.bDragging>
  [  5] pusharglistnoret 1 ...................... <me.bDragging>
  [  7] extcall 52 .............................. return me.bDragging
  [  9] ret
end

on drop me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"drop()">
  [  4] pusharglistnoret 2 ...................... <me, "drop()">
  [  6] objcall 332 ............................. me.debug("drop()")
  [  9] getglobal 172 ........................... <ElementMgr>
  [ 11] pusharglist 1 ........................... <ElementMgr>
  [ 13] objcall 499 ............................. <ElementMgr.getTrader()>
  [ 16] pusharglist 1 ........................... <ElementMgr.getTrader()>
  [ 18] extcall 59 .............................. <voidp(ElementMgr.getTrader())>
  [ 20] not ..................................... <not voidp(ElementMgr.getTrader())>
  [ 21] jmpifz [ 29] ............................ if not voidp(ElementMgr.getTrader()) then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 52 .............................. return 0
  [ 29] getglobal 133 ........................... <oIsoScene>
  [ 31] getobjprop 419 .......................... <oIsoScene.oMouseSquare>
  [ 34] setlocal 0 .............................. oSquare = oIsoScene.oMouseSquare
  [ 36] getlocal 0 .............................. <oSquare>
  [ 38] pusharglist 1 ........................... <oSquare>
  [ 40] extcall 59 .............................. <voidp(oSquare)>
  [ 42] jmpifz [ 50] ............................ if voidp(oSquare) then
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 1 ...................... <0>
  [ 48] extcall 52 .............................. return 0
  [ 50] getglobal 133 ........................... <oIsoScene>
  [ 52] getlocal 0 .............................. <oSquare>
  [ 54] pusharglist 2 ........................... <oIsoScene, oSquare>
  [ 56] objcall 309 ............................. <oIsoScene.isOverFloor(oSquare)>
  [ 59] not ..................................... <not oIsoScene.isOverFloor(oSquare)>
  [ 60] jmpifz [ 68] ............................ if not oIsoScene.isOverFloor(oSquare) then
  [ 63] pushzero ................................ <0>
  [ 64] pusharglistnoret 1 ...................... <0>
  [ 66] extcall 52 .............................. return 0
  [ 68] getparam 0 .............................. <me>
  [ 70] getlocal 0 .............................. <oSquare>
  [ 72] pusharglist 2 ........................... <me, oSquare>
  [ 74] objcall 528 ............................. <me.placeItem(oSquare)>
  [ 77] setlocal 1 .............................. bSuccess = me.placeItem(oSquare)
  [ 79] getlocal 1 .............................. <bSuccess>
  [ 81] jmpifz [121] ............................ if bSuccess then
  [ 84] getparam 0 .............................. <me>
  [ 86] getparam 0 .............................. <me>
  [ 88] getobjprop 1419 ......................... <me.iDirectionIndex>
  [ 91] setobjprop 1420 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [ 94] getparam 0 .............................. <me>
  [ 96] getlocal 0 .............................. <oSquare>
  [ 98] getobjprop 431 .......................... <oSquare.iRow>
  [101] getlocal 0 .............................. <oSquare>
  [103] getobjprop 432 .......................... <oSquare.iCol>
  [106] getparam 0 .............................. <me>
  [108] getobjprop 508 .......................... <me.iGridY>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 505 .......................... <me.iHeightOffset>
  [116] pusharglistnoret 5 ...................... <me, oSquare.iRow, oSquare.iCol, me.iGridY, me.iHeightOffset>
  [118] objcall 1340 ............................ me.setGridPosition(oSquare.iRow, oSquare.iCol, me.iGridY, me.iHeightOffset)
  [121] getlocal 1 .............................. <bSuccess>
  [123] pusharglistnoret 1 ...................... <bSuccess>
  [125] extcall 52 .............................. return bSuccess
  [127] ret
end

on destroy me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 910 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 1424 ......................... <me.iPreviewSprite>
  [ 16] pusharglistnoret 2 ...................... <_aSprites, me.iPreviewSprite>
  [ 18] objcall 140 ............................. _aSprites.add(me.iPreviewSprite)
  [ 20] getglobal 133 ........................... <oIsoScene>
  [ 22] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 24] getlocal 0 .............................. <_aSprites>
  [ 26] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, _aSprites>
  [ 28] objcall 154 ............................. oIsoScene.oSpriteManager.returnPooledSprites(_aSprites)
  [ 30] getmovieprop 406 ........................ <the actorList>
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 2 ...................... <the actorList, me>
  [ 37] objcall 571 ............................. (the actorList).deleteOne(me)
  [ 40] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 910 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 155
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 61] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 72
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <i>
  [ 39] pusharglist 1 ........................... <i>
  [ 41] extcall 119 ............................. <sprite(i)>
  [ 43] getlocal 1 .............................. <i>
  [ 45] pusharglist 1 ........................... <i>
  [ 47] extcall 119 ............................. <sprite(i)>
  [ 49] getobjprop 695 .......................... <sprite(i).visible>
  [ 52] not ..................................... <not sprite(i).visible>
  [ 53] setobjprop 695 .......................... sprite(i).visible = not sprite(i).visible
  [ 56] pushint8 1
  [ 58] add
  [ 59] endrepeat [ 19]
  [ 61] pop 3
  [ 63] ret
end

on getSprites me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aSprites = []
  [  5] getparam 0 .............................. <me>
  [  7] pushsymb 1441 ........................... <#aDrawOrder>
  [ 10] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 12] objcall 155 ............................. <me.aDrawOrder.count>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] pushint8 1 .............................. <1>
  [ 20] gteq
  [ 21] jmpifz [ 74] ............................ repeat with i = me.aDrawOrder.count down to 1
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 1441 ..................... <me.aDrawOrder>
  [ 29] getlocal 1 .............................. <i>
  [ 31] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 33] objcall 1123 ............................ <me.aDrawOrder.getPropAt(i)>
  [ 36] setlocal 2 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 38] getparam 0 .............................. <me>
  [ 40] pushsymb 1441 ........................... <#aDrawOrder>
  [ 43] getlocal 1 .............................. <i>
  [ 45] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 47] objcall 104 ............................. <me.aDrawOrder[i]>
  [ 49] setlocal 3 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 51] getlocal 3 .............................. <aOrderAttributes>
  [ 53] getobjprop 119 .......................... <aOrderAttributes.sprite>
  [ 55] setlocal 4 .............................. iSprite = aOrderAttributes.sprite
  [ 57] getlocal 0 .............................. <_aSprites>
  [ 59] getlocal 4 .............................. <iSprite>
  [ 61] pusharglistnoret 2 ...................... <_aSprites, iSprite>
  [ 63] objcall 140 ............................. _aSprites.add(iSprite)
  [ 65] pushint8 -1
  [ 67] getlocal 1
  [ 69] add
  [ 70] setlocal 1
  [ 72] endrepeat [ 16]
  [ 74] getlocal 0 .............................. <_aSprites>
  [ 76] pusharglistnoret 1 ...................... <_aSprites>
  [ 78] extcall 52 .............................. return _aSprites
  [ 80] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 268 .......................... <me.oAction>
  [  5] pusharglist 1 ........................... <me.oAction>
  [  7] extcall 59 .............................. <voidp(me.oAction)>
  [  9] not ..................................... <not voidp(me.oAction)>
  [ 10] jmpifz [ 23] ............................ if not voidp(me.oAction) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 268 ...................... <me.oAction>
  [ 18] pusharglistnoret 1 ...................... <me.oAction>
  [ 20] objcall 292 ............................. me.oAction.stepFrame()
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 1414 ......................... <me.bAnimate>
  [ 28] not ..................................... <not me.bAnimate>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 1343 ......................... <me.bDragging>
  [ 34] not ..................................... <not me.bDragging>
  [ 35] and ..................................... <not me.bAnimate and not me.bDragging>
  [ 36] jmpifz [ 43] ............................ if not me.bAnimate and not me.bDragging then
  [ 39] pusharglistnoret 0 ...................... <>
  [ 41] extcall 52 .............................. return 
  [ 43] getmovieprop 369 ........................ <the milliSeconds>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 1344 ......................... <me.iTimer>
  [ 51] sub ..................................... <the milliSeconds - me.iTimer>
  [ 52] pushint16 1000 .......................... <1000>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 365 .......................... <me.iFPS>
  [ 60] div ..................................... <1000 / me.iFPS>
  [ 61] gteq .................................... <(the milliSeconds - me.iTimer) >= (1000 / me.iFPS)>
  [ 62] jmpifz [ 88] ............................ if (the milliSeconds - me.iTimer) >= (1000 / me.iFPS) then
  [ 65] getparam 0 .............................. <me>
  [ 67] getobjprop 1414 ......................... <me.bAnimate>
  [ 70] jmpifz [ 80] ............................ if me.bAnimate then
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglistnoret 1 ...................... <me>
  [ 77] objcall 1382 ............................ me.animate()
  [ 80] getparam 0 .............................. <me>
  [ 82] getmovieprop 369 ........................ <the milliSeconds>
  [ 85] setobjprop 1344 ......................... me.iTimer = the milliSeconds
  [ 88] ret
end

on animate me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 1391 ............................ me.nextFrame(1)
  [  9] ret
end

on getHeightSquare me, oBaseSquare
  [  0] getparam 1 .............................. <oBaseSquare>
  [  2] getobjprop 431 .......................... <oBaseSquare.iRow>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 508 .......................... <me.iGridY>
  [ 10] sub ..................................... <oBaseSquare.iRow - me.iGridY>
  [ 11] setlocal 0 .............................. _iRow = oBaseSquare.iRow - me.iGridY
  [ 13] getparam 1 .............................. <oBaseSquare>
  [ 15] getobjprop 432 .......................... <oBaseSquare.iCol>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 508 .......................... <me.iGridY>
  [ 23] sub ..................................... <oBaseSquare.iCol - me.iGridY>
  [ 24] setlocal 1 .............................. _iCol = oBaseSquare.iCol - me.iGridY
  [ 26] getglobal 133 ........................... <oIsoScene>
  [ 28] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 30] getlocal 0 .............................. <_iRow>
  [ 32] getlocal 1 .............................. <_iCol>
  [ 34] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 36] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 39] setlocal 2 .............................. oHeightSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 41] getlocal 2 .............................. <oHeightSquare>
  [ 43] pusharglist 1 ........................... <oHeightSquare>
  [ 45] extcall 59 .............................. <voidp(oHeightSquare)>
  [ 47] jmpifz [ 59] ............................ if voidp(oHeightSquare) then / else
  [ 50] getparam 1 .............................. <oBaseSquare>
  [ 52] pusharglistnoret 1 ...................... <oBaseSquare>
  [ 54] extcall 52 .............................. return oBaseSquare
  [ 56] jmp [ 65]
  [ 59] getlocal 2 .............................. <oHeightSquare>
  [ 61] pusharglistnoret 1 ...................... <oHeightSquare>
  [ 63] extcall 52 .............................. return oHeightSquare
  [ 65] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 503 ............................. me.draw()
  [  7] ret
end

on getSquare me
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 431 .......................... <me.iRow>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 432 .......................... <me.iCol>
  [ 14] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [ 16] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [ 19] pusharglistnoret 1 ...................... <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [ 21] extcall 52 .............................. return oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [ 23] ret
end

on draw me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 455 ............................. <me.getSquare()>
  [  7] setlocal 0 .............................. oSquare = me.getSquare()
  [  9] getlocal 0 .............................. <oSquare>
  [ 11] pusharglist 1 ........................... <oSquare>
  [ 13] extcall 59 .............................. <voidp(oSquare)>
  [ 15] jmpifz [ 22] ............................ if voidp(oSquare) then
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 52 .............................. return 
  [ 22] getlocal 0 .............................. <oSquare>
  [ 24] setlocal 1 .............................. oHeightSquare = oSquare
  [ 26] getlocal 1 .............................. <oHeightSquare>
  [ 28] pusharglist 1 ........................... <oHeightSquare>
  [ 30] objcall 775 ............................. <oHeightSquare.getViewLeft()>
  [ 33] setlocal 2 .............................. oLeft = oHeightSquare.getViewLeft()
  [ 35] getlocal 1 .............................. <oHeightSquare>
  [ 37] pusharglist 1 ........................... <oHeightSquare>
  [ 39] objcall 776 ............................. <oHeightSquare.getViewRight()>
  [ 42] setlocal 3 .............................. oRight = oHeightSquare.getViewRight()
  [ 44] pushint8 1 .............................. <1>
  [ 46] setlocal 4
  [ 48] getlocal 4
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 1441 ........................... <#aDrawOrder>
  [ 55] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 57] objcall 155 ............................. <me.aDrawOrder.count>
  [ 59] lteq
  [ 60] jmpifz [415] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 63] getparam 0 .............................. <me>
  [ 65] getchainedprop 1441 ..................... <me.aDrawOrder>
  [ 68] getlocal 4 .............................. <i>
  [ 70] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 72] objcall 1123 ............................ <me.aDrawOrder.getPropAt(i)>
  [ 75] setlocal 5 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 1441 ........................... <#aDrawOrder>
  [ 82] getlocal 4 .............................. <i>
  [ 84] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 86] objcall 104 ............................. <me.aDrawOrder[i]>
  [ 88] setlocal 6 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 90] getlocal 6 .............................. <aOrderAttributes>
  [ 92] getobjprop 119 .......................... <aOrderAttributes.sprite>
  [ 94] setlocal 7 .............................. iSprite = aOrderAttributes.sprite
  [ 96] getlocal 7 .............................. <iSprite>
  [ 98] pusharglist 1 ........................... <iSprite>
  [100] extcall 119 ............................. <sprite(iSprite)>
  [102] pushzero ................................ <0>
  [103] setobjprop 695 .......................... sprite(iSprite).visible = 0
  [106] getlocal 5 .............................. <sOrder>
  [108] pushcons 31 ............................. <"sd">
  [110] eq ...................................... <sOrder = "sd">
  [111] getparam 0 .............................. <me>
  [113] getobjprop 505 .......................... <me.iHeightOffset>
  [116] pushzero ................................ <0>
  [117] gt ...................................... <me.iHeightOffset > 0>
  [118] and ..................................... <(sOrder = "sd") and (me.iHeightOffset > 0)>
  [119] jmpifz [125] ............................ if (sOrder = "sd") and (me.iHeightOffset > 0) then
  [122] jmp [405] ............................... next repeat
  [125] getlocal 6 .............................. <aOrderAttributes>
  [127] getobjprop 695 .......................... <aOrderAttributes.visible>
  [130] pushzero ................................ <0>
  [131] eq ...................................... <aOrderAttributes.visible = 0>
  [132] jmpifz [138] ............................ if aOrderAttributes.visible = 0 then
  [135] jmp [405] ............................... next repeat
  [138] getparam 0 .............................. <me>
  [140] getlocal 5 .............................. <sOrder>
  [142] getparam 0 .............................. <me>
  [144] getobjprop 507 .......................... <me.iDirection>
  [147] pusharglist 3 ........................... <me, sOrder, me.iDirection>
  [149] objcall 1386 ............................ <me.getMemberDrawProps(sOrder, me.iDirection)>
  [152] setlocal 8 .............................. aMemberProps = me.getMemberDrawProps(sOrder, me.iDirection)
  [154] getparam 0 .............................. <me>
  [156] getlocal 5 .............................. <sOrder>
  [158] getlocal 0 .............................. <oSquare>
  [160] pusharglist 3 ........................... <me, sOrder, oSquare>
  [162] objcall 936 ............................. <me.calculateZOrder(sOrder, oSquare)>
  [165] setlocal 9 .............................. iZ = me.calculateZOrder(sOrder, oSquare)
  [167] getlocal 7 .............................. <iSprite>
  [169] pusharglist 1 ........................... <iSprite>
  [171] extcall 119 ............................. <sprite(iSprite)>
  [173] getlocal 9 .............................. <iZ>
  [175] setobjprop 138 .......................... sprite(iSprite).locZ = iZ
  [177] getlocal 2 .............................. <oLeft>
  [179] getobjprop 122 .......................... <oLeft.locV>
  [181] getparam 0 .............................. <me>
  [183] getobjprop 505 .......................... <me.iHeightOffset>
  [186] sub ..................................... <oLeft.locV - me.iHeightOffset>
  [187] getlocal 6 .............................. <aOrderAttributes>
  [189] getobjprop 1445 ......................... <aOrderAttributes.vShift>
  [192] sub ..................................... <oLeft.locV - me.iHeightOffset - aOrderAttributes.vShift>
  [193] setlocal 10 ............................. iLocV = oLeft.locV - me.iHeightOffset - aOrderAttributes.vShift
  [195] getlocal 8 .............................. <aMemberProps>
  [197] getobjprop 30 ........................... <aMemberProps.member>
  [199] setlocal 11 ............................. oMember = aMemberProps.member
  [201] getlocal 11 ............................. <oMember>
  [203] pusharglist 1 ........................... <oMember>
  [205] extcall 59 .............................. <voidp(oMember)>
  [207] jmpifz [276] ............................ if voidp(oMember) then
  [210] getlocal 7 .............................. <iSprite>
  [212] pusharglist 1 ........................... <iSprite>
  [214] extcall 119 ............................. <sprite(iSprite)>
  [216] getobjprop 828 .......................... <sprite(iSprite).flipH>
  [219] jmpifz [237] ............................ if sprite(iSprite).flipH then / else
  [222] getlocal 7 .............................. <iSprite>
  [224] pusharglist 1 ........................... <iSprite>
  [226] extcall 119 ............................. <sprite(iSprite)>
  [228] getlocal 3 .............................. <oRight>
  [230] getobjprop 143 .......................... <oRight.locH>
  [232] setobjprop 143 .......................... sprite(iSprite).locH = oRight.locH
  [234] jmp [249]
  [237] getlocal 7 .............................. <iSprite>
  [239] pusharglist 1 ........................... <iSprite>
  [241] extcall 119 ............................. <sprite(iSprite)>
  [243] getlocal 2 .............................. <oLeft>
  [245] getobjprop 143 .......................... <oLeft.locH>
  [247] setobjprop 143 .......................... sprite(iSprite).locH = oLeft.locH
  [249] getlocal 7 .............................. <iSprite>
  [251] pusharglist 1 ........................... <iSprite>
  [253] extcall 119 ............................. <sprite(iSprite)>
  [255] getlocal 10 ............................. <iLocV>
  [257] setobjprop 122 .......................... sprite(iSprite).locV = iLocV
  [259] getlocal 7 .............................. <iSprite>
  [261] pusharglist 1 ........................... <iSprite>
  [263] extcall 119 ............................. <sprite(iSprite)>
  [265] getparam 0 .............................. <me>
  [267] getobjprop 1326 ......................... <me.bVisible>
  [270] setobjprop 695 .......................... sprite(iSprite).visible = me.bVisible
  [273] jmp [405] ............................... next repeat
  [276] getlocal 8 .............................. <aMemberProps>
  [278] getobjprop 1446 ......................... <aMemberProps.flip>
  [281] setlocal 12 ............................. bFlip = aMemberProps.flip
  [283] getlocal 7 .............................. <iSprite>
  [285] pusharglist 1 ........................... <iSprite>
  [287] extcall 119 ............................. <sprite(iSprite)>
  [289] getlocal 11 ............................. <oMember>
  [291] setobjprop 30 ........................... sprite(iSprite).member = oMember
  [293] getlocal 7 .............................. <iSprite>
  [295] pusharglist 1 ........................... <iSprite>
  [297] extcall 119 ............................. <sprite(iSprite)>
  [299] getlocal 2 .............................. <oLeft>
  [301] getobjprop 143 .......................... <oLeft.locH>
  [303] setobjprop 143 .......................... sprite(iSprite).locH = oLeft.locH
  [305] getlocal 7 .............................. <iSprite>
  [307] pusharglist 1 ........................... <iSprite>
  [309] extcall 119 ............................. <sprite(iSprite)>
  [311] getlocal 10 ............................. <iLocV>
  [313] setobjprop 122 .......................... sprite(iSprite).locV = iLocV
  [315] getlocal 7 .............................. <iSprite>
  [317] pusharglist 1 ........................... <iSprite>
  [319] extcall 119 ............................. <sprite(iSprite)>
  [321] pushzero ................................ <0>
  [322] setobjprop 828 .......................... sprite(iSprite).flipH = 0
  [325] getlocal 7 .............................. <iSprite>
  [327] pusharglist 1 ........................... <iSprite>
  [329] extcall 119 ............................. <sprite(iSprite)>
  [331] getlocal 6 .............................. <aOrderAttributes>
  [333] getobjprop 37 ........................... <aOrderAttributes.ink>
  [335] setobjprop 37 ........................... sprite(iSprite).ink = aOrderAttributes.ink
  [337] getlocal 7 .............................. <iSprite>
  [339] pusharglist 1 ........................... <iSprite>
  [341] extcall 119 ............................. <sprite(iSprite)>
  [343] getlocal 6 .............................. <aOrderAttributes>
  [345] getobjprop 694 .......................... <aOrderAttributes.blend>
  [348] setobjprop 694 .......................... sprite(iSprite).blend = aOrderAttributes.blend
  [351] getlocal 7 .............................. <iSprite>
  [353] pusharglist 1 ........................... <iSprite>
  [355] extcall 119 ............................. <sprite(iSprite)>
  [357] getlocal 6 .............................. <aOrderAttributes>
  [359] getobjprop 121 .......................... <aOrderAttributes.bgColor>
  [361] setobjprop 121 .......................... sprite(iSprite).bgColor = aOrderAttributes.bgColor
  [363] getlocal 12 ............................. <bFlip>
  [365] jmpifz [391] ............................ if bFlip then
  [368] getlocal 7 .............................. <iSprite>
  [370] pusharglist 1 ........................... <iSprite>
  [372] extcall 119 ............................. <sprite(iSprite)>
  [374] pushint8 1 .............................. <1>
  [376] setobjprop 828 .......................... sprite(iSprite).flipH = 1
  [379] getlocal 7 .............................. <iSprite>
  [381] pusharglist 1 ........................... <iSprite>
  [383] extcall 119 ............................. <sprite(iSprite)>
  [385] getlocal 3 .............................. <oRight>
  [387] getobjprop 143 .......................... <oRight.locH>
  [389] setobjprop 143 .......................... sprite(iSprite).locH = oRight.locH
  [391] getlocal 7 .............................. <iSprite>
  [393] pusharglist 1 ........................... <iSprite>
  [395] extcall 119 ............................. <sprite(iSprite)>
  [397] getparam 0 .............................. <me>
  [399] getobjprop 1326 ......................... <me.bVisible>
  [402] setobjprop 695 .......................... sprite(iSprite).visible = me.bVisible
  [405] pushint8 1
  [407] getlocal 4
  [409] add
  [410] setlocal 4
  [412] endrepeat [ 48]
  [415] ret
end

on setVisible me, _bVisible
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDraw = 0
  [  3] getparam 0 .............................. <me>
  [  5] getobjprop 1326 ......................... <me.bVisible>
  [  8] getparam 1 .............................. <_bVisible>
  [ 10] nteq .................................... <me.bVisible <> _bVisible>
  [ 11] jmpifz [ 18] ............................ if me.bVisible <> _bVisible then
  [ 14] pushint8 1 .............................. <1>
  [ 16] setlocal 0 .............................. bDraw = 1
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <_bVisible>
  [ 22] setobjprop 1326 ......................... me.bVisible = _bVisible
  [ 25] getlocal 0 .............................. <bDraw>
  [ 27] jmpifz [ 37] ............................ if bDraw then
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 1 ...................... <me>
  [ 34] objcall 503 ............................. me.draw()
  [ 37] ret
end

on getVisible me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1326 ......................... <me.bVisible>
  [  5] pusharglistnoret 1 ...................... <me.bVisible>
  [  7] extcall 52 .............................. return me.bVisible
  [  9] ret
end

on getMemberDrawProps me, sOrder, iDir
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 238 ............................. <VOID>
  [  4] setlocal 0 .............................. oMember = VOID
  [  6] getparam 0 .............................. <me>
  [  8] getparam 1 .............................. <sOrder>
  [ 10] getparam 2 .............................. <iDir>
  [ 12] pusharglist 3 ........................... <me, sOrder, iDir>
  [ 14] objcall 1387 ............................ <me.buildImageName(sOrder, iDir)>
  [ 17] setlocal 1 .............................. sName = me.buildImageName(sOrder, iDir)
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 2 .............................. bFlip = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 1453 ........................... <#aAlias>
  [ 27] getlocal 1 .............................. <sName>
  [ 29] pusharglist 3 ........................... <me, #aAlias, sName>
  [ 31] objcall 104 ............................. <me.aAlias[sName]>
  [ 33] setlocal 3 .............................. aMemberAlias = me.aAlias[sName]
  [ 35] getlocal 3 .............................. <aMemberAlias>
  [ 37] pusharglist 1 ........................... <aMemberAlias>
  [ 39] extcall 59 .............................. <voidp(aMemberAlias)>
  [ 41] not ..................................... <not voidp(aMemberAlias)>
  [ 42] jmpifz [ 67] ............................ if not voidp(aMemberAlias) then
  [ 45] getlocal 3 .............................. <aMemberAlias>
  [ 47] getobjprop 1454 ......................... <aMemberAlias.asset>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 48 ........................... <me.sCastLib>
  [ 54] pusharglist 2 ........................... <aMemberAlias.asset, me.sCastLib>
  [ 56] extcall 30 .............................. <member(aMemberAlias.asset, me.sCastLib)>
  [ 58] setlocal 0 .............................. oMember = member(aMemberAlias.asset, me.sCastLib)
  [ 60] getlocal 3 .............................. <aMemberAlias>
  [ 62] getobjprop 1446 ......................... <aMemberAlias.flip>
  [ 65] setlocal 2 .............................. bFlip = aMemberAlias.flip
  [ 67] getlocal 0 .............................. <oMember>
  [ 69] pusharglist 1 ........................... <oMember>
  [ 71] extcall 59 .............................. <voidp(oMember)>
  [ 73] getparam 1 .............................. <sOrder>
  [ 75] pushcons 31 ............................. <"sd">
  [ 77] eq ...................................... <sOrder = "sd">
  [ 78] and ..................................... <voidp(oMember) and (sOrder = "sd")>
  [ 79] jmpifz [139] ............................ if voidp(oMember) and (sOrder = "sd") then
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 94 ........................... <me.sImageBase>
  [ 86] pushcons 32 ............................. <"_sd_">
  [ 88] joinstr ................................. <me.sImageBase & "_sd_">
  [ 89] getparam 2 .............................. <iDir>
  [ 91] joinstr ................................. <me.sImageBase & "_sd_" & iDir>
  [ 92] setlocal 4 .............................. sShadowName = me.sImageBase & "_sd_" & iDir
  [ 94] getparam 0 .............................. <me>
  [ 96] pushsymb 1453 ........................... <#aAlias>
  [ 99] getlocal 4 .............................. <sShadowName>
  [101] pusharglist 3 ........................... <me, #aAlias, sShadowName>
  [103] objcall 104 ............................. <me.aAlias[sShadowName]>
  [105] setlocal 3 .............................. aMemberAlias = me.aAlias[sShadowName]
  [107] getlocal 3 .............................. <aMemberAlias>
  [109] pusharglist 1 ........................... <aMemberAlias>
  [111] extcall 59 .............................. <voidp(aMemberAlias)>
  [113] not ..................................... <not voidp(aMemberAlias)>
  [114] jmpifz [139] ............................ if not voidp(aMemberAlias) then
  [117] getlocal 3 .............................. <aMemberAlias>
  [119] getobjprop 1454 ......................... <aMemberAlias.asset>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 48 ........................... <me.sCastLib>
  [126] pusharglist 2 ........................... <aMemberAlias.asset, me.sCastLib>
  [128] extcall 30 .............................. <member(aMemberAlias.asset, me.sCastLib)>
  [130] setlocal 0 .............................. oMember = member(aMemberAlias.asset, me.sCastLib)
  [132] getlocal 3 .............................. <aMemberAlias>
  [134] getobjprop 1446 ......................... <aMemberAlias.flip>
  [137] setlocal 2 .............................. bFlip = aMemberAlias.flip
  [139] getlocal 0 .............................. <oMember>
  [141] pusharglist 1 ........................... <oMember>
  [143] extcall 59 .............................. <voidp(oMember)>
  [145] jmpifz [161] ............................ if voidp(oMember) then
  [148] getparam 0 .............................. <me>
  [150] pushsymb 1410 ........................... <#aAssets>
  [153] getlocal 1 .............................. <sName>
  [155] pusharglist 3 ........................... <me, #aAssets, sName>
  [157] objcall 104 ............................. <me.aAssets[sName]>
  [159] setlocal 0 .............................. oMember = me.aAssets[sName]
  [161] pushsymb 30 ............................. <#member>
  [163] getlocal 0 .............................. <oMember>
  [165] pushsymb 1446 ........................... <#flip>
  [168] getlocal 2 .............................. <bFlip>
  [170] pusharglist 4 ........................... <[#member: oMember, #flip: bFlip]>
  [172] pushproplist ............................ <[#member: oMember, #flip: bFlip]>
  [173] setlocal 5 .............................. aProps = [#member: oMember, #flip: bFlip]
  [175] getlocal 5 .............................. <aProps>
  [177] pusharglistnoret 1 ...................... <aProps>
  [179] extcall 52 .............................. return aProps
  [181] ret
end

on buildImageName me, sOrder, iDir
  [  0] getparam 1 .............................. <sOrder>
  [  2] pushcons 31 ............................. <"sd">
  [  4] eq ...................................... <sOrder = "sd">
  [  5] jmpifz [ 22] ............................ if sOrder = "sd" then
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 94 ........................... <me.sImageBase>
  [ 12] pushcons 33 ............................. <"_">
  [ 14] joinstr ................................. <me.sImageBase & "_">
  [ 15] getparam 1 .............................. <sOrder>
  [ 17] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 18] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder>
  [ 20] extcall 52 .............................. return me.sImageBase & "_" & sOrder
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 48 ........................... <me.sCastLib>
  [ 26] pushcons 6 .............................. <EMPTY>
  [ 28] eq ...................................... <me.sCastLib = EMPTY>
  [ 29] jmpifz [ 80] ............................ if me.sCastLib = EMPTY then / else
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 94 ........................... <me.sImageBase>
  [ 36] pushcons 33 ............................. <"_">
  [ 38] joinstr ................................. <me.sImageBase & "_">
  [ 39] getparam 1 .............................. <sOrder>
  [ 41] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 42] pushcons 33 ............................. <"_">
  [ 44] joinstr ................................. <me.sImageBase & "_" & sOrder & "_">
  [ 45] pushcons 34 ............................. <"0">
  [ 47] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0">
  [ 48] pushcons 33 ............................. <"_">
  [ 50] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_">
  [ 51] getparam 2 .............................. <iDir>
  [ 53] pusharglist 1 ........................... <iDir>
  [ 55] extcall 422 ............................. <string(iDir)>
  [ 58] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir)>
  [ 59] pushcons 33 ............................. <"_">
  [ 61] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_">
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 1415 ......................... <me.iFrame>
  [ 67] pusharglist 1 ........................... <me.iFrame>
  [ 69] extcall 422 ............................. <string(me.iFrame)>
  [ 72] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)>
  [ 73] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)>
  [ 75] extcall 52 .............................. return me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(iDir) & "_" & string(me.iFrame)
  [ 77] jmp [152]
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 94 ........................... <me.sImageBase>
  [ 84] pushcons 33 ............................. <"_">
  [ 86] joinstr ................................. <me.sImageBase & "_">
  [ 87] getparam 1 .............................. <sOrder>
  [ 89] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [ 90] pushcons 33 ............................. <"_">
  [ 92] joinstr ................................. <me.sImageBase & "_" & sOrder & "_">
  [ 93] pushcons 34 ............................. <"0">
  [ 95] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0">
  [ 96] pushcons 33 ............................. <"_">
  [ 98] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_">
  [ 99] getparam 0 .............................. <me>
  [101] getobjprop 147 .......................... <me.iWidth>
  [103] pusharglist 1 ........................... <me.iWidth>
  [105] extcall 422 ............................. <string(me.iWidth)>
  [108] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth)>
  [109] pushcons 33 ............................. <"_">
  [111] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_">
  [112] getparam 0 .............................. <me>
  [114] getobjprop 703 .......................... <me.iDepth>
  [117] pusharglist 1 ........................... <me.iDepth>
  [119] extcall 422 ............................. <string(me.iDepth)>
  [122] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth)>
  [123] pushcons 33 ............................. <"_">
  [125] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_">
  [126] getparam 2 .............................. <iDir>
  [128] pusharglist 1 ........................... <iDir>
  [130] extcall 422 ............................. <string(iDir)>
  [133] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir)>
  [134] pushcons 33 ............................. <"_">
  [136] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_">
  [137] getparam 0 .............................. <me>
  [139] getobjprop 1415 ......................... <me.iFrame>
  [142] pusharglist 1 ........................... <me.iFrame>
  [144] extcall 422 ............................. <string(me.iFrame)>
  [147] joinstr ................................. <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)>
  [148] pusharglistnoret 1 ...................... <me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)>
  [150] extcall 52 .............................. return me.sImageBase & "_" & sOrder & "_" & "0" & "_" & string(me.iWidth) & "_" & string(me.iDepth) & "_" & string(iDir) & "_" & string(me.iFrame)
  [152] ret
end

on setHeight me, _iHeight
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeight>
  [  4] setobjprop 146 .......................... me.iHeight = _iHeight
  [  6] ret
end

on setWidth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 141 .......................... <me.width>
  [  4] pushint8 1 .............................. <1>
  [  6] inv ..................................... <-1>
  [  7] eq ...................................... <me.width = -1>
  [  8] jmpifz [ 21] ............................ if me.width = -1 then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushint8 1 .............................. <1>
  [ 15] setobjprop 147 .......................... me.iWidth = 1
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 52 .............................. return 
  [ 21] getparam 0 .............................. <me>
  [ 23] pushsymb 1410 ........................... <#aAssets>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 3 ........................... <me, #aAssets, 1>
  [ 30] objcall 104 ............................. <me.aAssets[1]>
  [ 32] setlocal 0 .............................. oMember = me.aAssets[1]
  [ 34] getlocal 0 .............................. <oMember>
  [ 36] getobjprop 99 ........................... <oMember.name>
  [ 38] setlocal 1 .............................. sName = oMember.name
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 0 .............................. <me>
  [ 44] getlocal 1 .............................. <sName>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 141 .......................... <me.width>
  [ 50] pusharglist 3 ........................... <me, sName, me.width>
  [ 52] objcall 1401 ............................ <me.getParamFromName(sName, me.width)>
  [ 55] pusharglist 1 ........................... <me.getParamFromName(sName, me.width)>
  [ 57] extcall 69 .............................. <integer(me.getParamFromName(sName, me.width))>
  [ 59] setobjprop 147 .......................... me.iWidth = integer(me.getParamFromName(sName, me.width))
  [ 61] ret
end

on setDepth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1412 ......................... <me.depth>
  [  5] pushint8 1 .............................. <1>
  [  7] inv ..................................... <-1>
  [  8] eq ...................................... <me.depth = -1>
  [  9] jmpifz [ 23] ............................ if me.depth = -1 then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 703 .......................... me.iDepth = 1
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 52 .............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 1410 ........................... <#aAssets>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 3 ........................... <me, #aAssets, 1>
  [ 32] objcall 104 ............................. <me.aAssets[1]>
  [ 34] setlocal 0 .............................. oMember = me.aAssets[1]
  [ 36] getlocal 0 .............................. <oMember>
  [ 38] getobjprop 99 ........................... <oMember.name>
  [ 40] setlocal 1 .............................. sName = oMember.name
  [ 42] getparam 0 .............................. <me>
  [ 44] getparam 0 .............................. <me>
  [ 46] getlocal 1 .............................. <sName>
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 1412 ......................... <me.depth>
  [ 53] pusharglist 3 ........................... <me, sName, me.depth>
  [ 55] objcall 1401 ............................ <me.getParamFromName(sName, me.depth)>
  [ 58] pusharglist 1 ........................... <me.getParamFromName(sName, me.depth)>
  [ 60] extcall 69 .............................. <integer(me.getParamFromName(sName, me.depth))>
  [ 62] setobjprop 703 .......................... me.iDepth = integer(me.getParamFromName(sName, me.depth))
  [ 65] ret
end

on setNumFrames me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 35 ............................. <"setNumFrames() aAssets: ">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 1410 ......................... <me.aAssets>
  [  9] joinstr ................................. <"setNumFrames() aAssets: " & me.aAssets>
  [ 10] pusharglistnoret 2 ...................... <me, "setNumFrames() aAssets: " & me.aAssets>
  [ 12] objcall 332 ............................. me.debug("setNumFrames() aAssets: " & me.aAssets)
  [ 15] pushzero ................................ <0>
  [ 16] setlocal 0 .............................. iHighestFrame = 0
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 1
  [ 22] getlocal 1
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 1410 ........................... <#aAssets>
  [ 29] pusharglist 2 ........................... <me, #aAssets>
  [ 31] objcall 155 ............................. <me.aAssets.count>
  [ 33] lteq
  [ 34] jmpifz [ 95] ............................ repeat with i = 1 to me.aAssets.count
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 1410 ..................... <me.aAssets>
  [ 42] getlocal 1 .............................. <i>
  [ 44] pusharglist 2 ........................... <me.aAssets, i>
  [ 46] objcall 1123 ............................ <me.aAssets.getPropAt(i)>
  [ 49] setlocal 2 .............................. sName = me.aAssets.getPropAt(i)
  [ 51] getparam 0 .............................. <me>
  [ 53] getlocal 2 .............................. <sName>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 1413 ......................... <me.frame>
  [ 60] pusharglist 3 ........................... <me, sName, me.frame>
  [ 62] objcall 1401 ............................ <me.getParamFromName(sName, me.frame)>
  [ 65] pusharglist 1 ........................... <me.getParamFromName(sName, me.frame)>
  [ 67] extcall 69 .............................. <integer(me.getParamFromName(sName, me.frame))>
  [ 69] setprop 1415 ............................ iFrame = integer(me.getParamFromName(sName, me.frame))
  [ 72] getprop 1415 ............................ <iFrame>
  [ 75] getlocal 0 .............................. <iHighestFrame>
  [ 77] gt ...................................... <iFrame > iHighestFrame>
  [ 78] jmpifz [ 86] ............................ if iFrame > iHighestFrame then
  [ 81] getprop 1415 ............................ <iFrame>
  [ 84] setlocal 0 .............................. iHighestFrame = iFrame
  [ 86] pushint8 1
  [ 88] getlocal 1
  [ 90] add
  [ 91] setlocal 1
  [ 93] endrepeat [ 22]
  [ 95] getparam 0 .............................. <me>
  [ 97] getlocal 0 .............................. <iHighestFrame>
  [ 99] setobjprop 903 .......................... me.iNumFrames = iHighestFrame
  [102] ret
end

on nextFrame me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 36 ............................. <"nextFrame() iDir: ">
  [  4] getparam 1 .............................. <iDir>
  [  6] joinstr ................................. <"nextFrame() iDir: " & iDir>
  [  7] pusharglistnoret 2 ...................... <me, "nextFrame() iDir: " & iDir>
  [  9] objcall 332 ............................. me.debug("nextFrame() iDir: " & iDir)
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 1415 ......................... <me.iFrame>
  [ 17] getparam 1 .............................. <iDir>
  [ 19] add ..................................... <me.iFrame + iDir>
  [ 20] setlocal 0 .............................. iNextFrame = me.iFrame + iDir
  [ 22] getlocal 0 .............................. <iNextFrame>
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 903 .......................... <me.iNumFrames>
  [ 29] gt ...................................... <iNextFrame > me.iNumFrames>
  [ 30] jmpifz [ 36] ............................ if iNextFrame > me.iNumFrames then
  [ 33] pushzero ................................ <0>
  [ 34] setlocal 0 .............................. iNextFrame = 0
  [ 36] getlocal 0 .............................. <iNextFrame>
  [ 38] pushzero ................................ <0>
  [ 39] lt ...................................... <iNextFrame < 0>
  [ 40] jmpifz [ 50] ............................ if iNextFrame < 0 then
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 903 .......................... <me.iNumFrames>
  [ 48] setlocal 0 .............................. iNextFrame = me.iNumFrames
  [ 50] getparam 0 .............................. <me>
  [ 52] getlocal 0 .............................. <iNextFrame>
  [ 54] setobjprop 1415 ......................... me.iFrame = iNextFrame
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglistnoret 1 ...................... <me>
  [ 61] objcall 503 ............................. me.draw()
  [ 64] ret
end

on setFrame me, _iFrame
  [  0] getparam 1 .............................. <_iFrame>
  [  2] pushzero ................................ <0>
  [  3] lt ...................................... <_iFrame < 0>
  [  4] getparam 1 .............................. <_iFrame>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 903 .......................... <me.iNumFrames>
  [ 11] gt ...................................... <_iFrame > me.iNumFrames>
  [ 12] or ...................................... <(_iFrame < 0) or (_iFrame > me.iNumFrames)>
  [ 13] jmpifz [ 19] ............................ if (_iFrame < 0) or (_iFrame > me.iNumFrames) then
  [ 16] pushzero ................................ <0>
  [ 17] setparam 1 .............................. _iFrame = 0
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <_iFrame>
  [ 23] setobjprop 1415 ......................... me.iFrame = _iFrame
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 37 ............................. <"setFrame() me.iFrame: ">
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 1415 ......................... <me.iFrame>
  [ 35] joinstr ................................. <"setFrame() me.iFrame: " & me.iFrame>
  [ 36] pusharglistnoret 2 ...................... <me, "setFrame() me.iFrame: " & me.iFrame>
  [ 38] objcall 332 ............................. me.debug("setFrame() me.iFrame: " & me.iFrame)
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 503 ............................. me.draw()
  [ 48] ret
end

on getFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1415 ......................... <me.iFrame>
  [  5] pusharglistnoret 1 ...................... <me.iFrame>
  [  7] extcall 52 .............................. return me.iFrame
  [  9] ret
end

on setAnimate me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 1414 ......................... me.bAnimate = bState
  [  7] ret
end

on getAnimate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1414 ......................... <me.bAnimate>
  [  5] pusharglistnoret 1 ...................... <me.bAnimate>
  [  7] extcall 52 .............................. return me.bAnimate
  [  9] ret
end

on setDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 884 ...................... <me.aDirections>
  [  5] getparam 1 .............................. <iDir>
  [  7] pusharglist 2 ........................... <me.aDirections, iDir>
  [  9] objcall 985 ............................. <me.aDirections.getPos(iDir)>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [ 14] jmpifz [ 46] ............................ if me.aDirections.getPos(iDir) = 0 then / else
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 1 ...................... <me>
  [ 21] objcall 1396 ............................ me.setDirectionIndex()
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 884 ............................ <#aDirections>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1419 ......................... <me.iDirectionIndex>
  [ 36] pusharglist 3 ........................... <me, #aDirections, me.iDirectionIndex>
  [ 38] objcall 104 ............................. <me.aDirections[me.iDirectionIndex]>
  [ 40] setobjprop 507 .......................... me.iDirection = me.aDirections[me.iDirectionIndex]
  [ 43] jmp [ 53]
  [ 46] getparam 0 .............................. <me>
  [ 48] getparam 1 .............................. <iDir>
  [ 50] setobjprop 507 .......................... me.iDirection = iDir
  [ 53] ret
end

on setDirectionIndex me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 884 ...................... <me.aDirections>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 507 .......................... <me.iDirection>
  [ 10] pusharglist 2 ........................... <me.aDirections, me.iDirection>
  [ 12] objcall 985 ............................. <me.aDirections.getPos(me.iDirection)>
  [ 15] setlocal 0 .............................. iIndex = me.aDirections.getPos(me.iDirection)
  [ 17] getlocal 0 .............................. <iIndex>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <iIndex = 0>
  [ 21] jmpifz [ 28] ............................ if iIndex = 0 then
  [ 24] pushint8 1 .............................. <1>
  [ 26] setlocal 0 .............................. iIndex = 1
  [ 28] getparam 0 .............................. <me>
  [ 30] getlocal 0 .............................. <iIndex>
  [ 32] setobjprop 1419 ......................... me.iDirectionIndex = iIndex
  [ 35] ret
end

on rotate me, iDir
  [  0] getparam 1 .............................. <iDir>
  [  2] pusharglist 1 ........................... <iDir>
  [  4] extcall 59 .............................. <voidp(iDir)>
  [  6] jmpifz [ 13] ............................ if voidp(iDir) then
  [  9] pushint8 1 .............................. <1>
  [ 11] setparam 1 .............................. iDir = 1
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1419 ......................... <me.iDirectionIndex>
  [ 18] getparam 1 .............................. <iDir>
  [ 20] add ..................................... <me.iDirectionIndex + iDir>
  [ 21] setlocal 0 .............................. iNewDirectionIndex = me.iDirectionIndex + iDir
  [ 23] getlocal 0 .............................. <iNewDirectionIndex>
  [ 25] getparam 0 .............................. <me>
  [ 27] pushsymb 884 ............................ <#aDirections>
  [ 30] pusharglist 2 ........................... <me, #aDirections>
  [ 32] objcall 155 ............................. <me.aDirections.count>
  [ 34] gt ...................................... <iNewDirectionIndex > me.aDirections.count>
  [ 35] jmpifz [ 42] ............................ if iNewDirectionIndex > me.aDirections.count then
  [ 38] pushint8 1 .............................. <1>
  [ 40] setlocal 0 .............................. iNewDirectionIndex = 1
  [ 42] getlocal 0 .............................. <iNewDirectionIndex>
  [ 44] pushint8 1 .............................. <1>
  [ 46] lt ...................................... <iNewDirectionIndex < 1>
  [ 47] jmpifz [ 61] ............................ if iNewDirectionIndex < 1 then
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 884 ............................ <#aDirections>
  [ 55] pusharglist 2 ........................... <me, #aDirections>
  [ 57] objcall 155 ............................. <me.aDirections.count>
  [ 59] setlocal 0 .............................. iNewDirectionIndex = me.aDirections.count
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1419 ......................... <me.iDirectionIndex>
  [ 68] setobjprop 1420 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [ 71] getparam 0 .............................. <me>
  [ 73] getlocal 0 .............................. <iNewDirectionIndex>
  [ 75] setobjprop 1419 ......................... me.iDirectionIndex = iNewDirectionIndex
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 0 .............................. <me>
  [ 82] pushsymb 884 ............................ <#aDirections>
  [ 85] getprop 1419 ............................ <iDirectionIndex>
  [ 88] pusharglist 3 ........................... <me, #aDirections, iDirectionIndex>
  [ 90] objcall 104 ............................. <me.aDirections[iDirectionIndex]>
  [ 92] pusharglistnoret 2 ...................... <me, me.aDirections[iDirectionIndex]>
  [ 94] objcall 1341 ............................ me.setDirection(me.aDirections[iDirectionIndex])
  [ 97] getparam 0 .............................. <me>
  [ 99] getchainedprop 268 ...................... <me.oAction>
  [102] pusharglistnoret 1 ...................... <me.oAction>
  [104] objcall 1426 ............................ me.oAction.displayState()
  [107] getglobal 133 ........................... <oIsoScene>
  [109] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 431 .......................... <me.iRow>
  [116] getparam 0 .............................. <me>
  [118] getobjprop 432 .......................... <me.iCol>
  [121] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [123] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [126] setlocal 1 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [128] getparam 0 .............................. <me>
  [130] getlocal 1 .............................. <oSquare>
  [132] pusharglist 2 ........................... <me, oSquare>
  [134] objcall 528 ............................. <me.placeItem(oSquare)>
  [137] setlocal 2 .............................. bSuccess = me.placeItem(oSquare)
  [139] getlocal 2 .............................. <bSuccess>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 101 .......................... <me.sAction>
  [145] pushcons 38 ............................. <"STAND_ON">
  [147] containsstr ............................. <me.sAction contains "STAND_ON">
  [148] or ...................................... <bSuccess or (me.sAction contains "STAND_ON")>
  [149] jmpifz [172] ............................ if bSuccess or (me.sAction contains "STAND_ON") then
  [152] getparam 0 .............................. <me>
  [154] getparam 0 .............................. <me>
  [156] getobjprop 1419 ......................... <me.iDirectionIndex>
  [159] setobjprop 1420 ......................... me.iLastDirectionIndex = me.iDirectionIndex
  [162] getglobal 133 ........................... <oIsoScene>
  [164] getchainedprop 401 ...................... <oIsoScene.oAvatars>
  [167] pusharglistnoret 1 ...................... <oIsoScene.oAvatars>
  [169] objcall 1118 ............................ oIsoScene.oAvatars.updateAll()
  [172] getlocal 2 .............................. <bSuccess>
  [174] pusharglistnoret 1 ...................... <bSuccess>
  [176] extcall 52 .............................. return bSuccess
  [178] ret
end

on setDrawOrder me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aDrawOrder = []
  [  5] getlocal 0 .............................. <_aDrawOrder>
  [  7] pusharglistnoret 1 ...................... <_aDrawOrder>
  [  9] objcall 574 ............................. _aDrawOrder.sort()
  [ 12] pushint8 1 .............................. <1>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] getparam 0 .............................. <me>
  [ 20] pushsymb 1410 ........................... <#aAssets>
  [ 23] pusharglist 2 ........................... <me, #aAssets>
  [ 25] objcall 155 ............................. <me.aAssets.count>
  [ 27] lteq
  [ 28] jmpifz [106] ............................ repeat with i = 1 to me.aAssets.count
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 1410 ..................... <me.aAssets>
  [ 36] getlocal 1 .............................. <i>
  [ 38] pusharglist 2 ........................... <me.aAssets, i>
  [ 40] objcall 1123 ............................ <me.aAssets.getPropAt(i)>
  [ 43] setlocal 2 .............................. sName = me.aAssets.getPropAt(i)
  [ 45] getlocal 2 .............................. <sName>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 94 ........................... <me.sImageBase>
  [ 51] contains0str ............................ <sName starts me.sImageBase>
  [ 52] not ..................................... <not (sName starts me.sImageBase)>
  [ 53] jmpifz [ 59] ............................ if not (sName starts me.sImageBase) then
  [ 56] jmp [ 97] ............................... next repeat
  [ 59] getparam 0 .............................. <me>
  [ 61] getlocal 2 .............................. <sName>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1411 ......................... <me.ORDER>
  [ 68] pusharglist 3 ........................... <me, sName, me.ORDER>
  [ 70] objcall 1401 ............................ <me.getParamFromName(sName, me.ORDER)>
  [ 73] setlocal 3 .............................. sOrder = me.getParamFromName(sName, me.ORDER)
  [ 75] getlocal 0 .............................. <_aDrawOrder>
  [ 77] getlocal 3 .............................. <sOrder>
  [ 79] pusharglist 2 ........................... <_aDrawOrder, sOrder>
  [ 81] objcall 985 ............................. <_aDrawOrder.getPos(sOrder)>
  [ 84] pushzero ................................ <0>
  [ 85] eq ...................................... <_aDrawOrder.getPos(sOrder) = 0>
  [ 86] jmpifz [ 97] ............................ if _aDrawOrder.getPos(sOrder) = 0 then
  [ 89] getlocal 0 .............................. <_aDrawOrder>
  [ 91] getlocal 3 .............................. <sOrder>
  [ 93] pusharglistnoret 2 ...................... <_aDrawOrder, sOrder>
  [ 95] objcall 140 ............................. _aDrawOrder.add(sOrder)
  [ 97] pushint8 1
  [ 99] getlocal 1
  [101] add
  [102] setlocal 1
  [104] endrepeat [ 16]
  [106] pushint8 1 .............................. <1>
  [108] setlocal 1
  [110] getlocal 1
  [112] getparam 0 .............................. <me>
  [114] pushsymb 1453 ........................... <#aAlias>
  [117] pusharglist 2 ........................... <me, #aAlias>
  [119] objcall 155 ............................. <me.aAlias.count>
  [121] lteq
  [122] jmpifz [200] ............................ repeat with i = 1 to me.aAlias.count
  [125] getparam 0 .............................. <me>
  [127] getchainedprop 1453 ..................... <me.aAlias>
  [130] getlocal 1 .............................. <i>
  [132] pusharglist 2 ........................... <me.aAlias, i>
  [134] objcall 1123 ............................ <me.aAlias.getPropAt(i)>
  [137] setlocal 2 .............................. sName = me.aAlias.getPropAt(i)
  [139] getlocal 2 .............................. <sName>
  [141] getparam 0 .............................. <me>
  [143] getobjprop 94 ........................... <me.sImageBase>
  [145] contains0str ............................ <sName starts me.sImageBase>
  [146] not ..................................... <not (sName starts me.sImageBase)>
  [147] jmpifz [153] ............................ if not (sName starts me.sImageBase) then
  [150] jmp [191] ............................... next repeat
  [153] getparam 0 .............................. <me>
  [155] getlocal 2 .............................. <sName>
  [157] getparam 0 .............................. <me>
  [159] getobjprop 1411 ......................... <me.ORDER>
  [162] pusharglist 3 ........................... <me, sName, me.ORDER>
  [164] objcall 1401 ............................ <me.getParamFromName(sName, me.ORDER)>
  [167] setlocal 3 .............................. sOrder = me.getParamFromName(sName, me.ORDER)
  [169] getlocal 0 .............................. <_aDrawOrder>
  [171] getlocal 3 .............................. <sOrder>
  [173] pusharglist 2 ........................... <_aDrawOrder, sOrder>
  [175] objcall 985 ............................. <_aDrawOrder.getPos(sOrder)>
  [178] pushzero ................................ <0>
  [179] eq ...................................... <_aDrawOrder.getPos(sOrder) = 0>
  [180] jmpifz [191] ............................ if _aDrawOrder.getPos(sOrder) = 0 then
  [183] getlocal 0 .............................. <_aDrawOrder>
  [185] getlocal 3 .............................. <sOrder>
  [187] pusharglistnoret 2 ...................... <_aDrawOrder, sOrder>
  [189] objcall 140 ............................. _aDrawOrder.add(sOrder)
  [191] pushint8 1
  [193] getlocal 1
  [195] add
  [196] setlocal 1
  [198] endrepeat [110]
  [200] getparam 0 .............................. <me>
  [202] pusharglist 0 ........................... <[:]>
  [204] pushproplist ............................ <[:]>
  [205] setobjprop 1441 ......................... me.aDrawOrder = [:]
  [208] pushint8 1 .............................. <1>
  [210] setlocal 1
  [212] getlocal 1
  [214] getlocal 0 .............................. <_aDrawOrder>
  [216] getobjprop 155 .......................... <_aDrawOrder.count>
  [218] lteq
  [219] jmpifz [486] ............................ repeat with i = 1 to _aDrawOrder.count
  [222] getlocal 0 .............................. <_aDrawOrder>
  [224] getlocal 1 .............................. <i>
  [226] pusharglist 2 ........................... <_aDrawOrder, i>
  [228] objcall 72 .............................. <_aDrawOrder[i]>
  [230] setlocal 3 .............................. sOrder = _aDrawOrder[i]
  [232] pushint8 8 .............................. <8>
  [234] setlocal 4 .............................. iInk = 8
  [236] pushint8 100 ............................ <100>
  [238] setlocal 5 .............................. iBlend = 100
  [240] getlocal 3 .............................. <sOrder>
  [242] pushcons 31 ............................. <"sd">
  [244] eq ...................................... <sOrder = "sd">
  [245] jmpifz [252] ............................ if sOrder = "sd" then
  [248] pushint8 40 ............................. <40>
  [250] setlocal 5 .............................. iBlend = 40
  [252] getglobal 133 ........................... <oIsoScene>
  [254] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [256] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [258] objcall 688 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [261] setlocal 6 .............................. iSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [263] getlocal 3 .............................. <sOrder>
  [265] pushcons 31 ............................. <"sd">
  [267] nteq .................................... <sOrder <> "sd">
  [268] jmpifz [295] ............................ if sOrder <> "sd" then
  [271] getlocal 6 .............................. <iSprite>
  [273] pusharglist 1 ........................... <iSprite>
  [275] extcall 119 ............................. <sprite(iSprite)>
  [277] getchainedprop 193 ...................... <sprite(iSprite).scriptInstanceList>
  [279] pushcons 39 ............................. <"SceneItemScript">
  [281] pusharglist 1 ........................... <"SceneItemScript">
  [283] extcall 194 ............................. <script("SceneItemScript")>
  [285] getparam 0 .............................. <me>
  [287] pusharglist 2 ........................... <script("SceneItemScript"), me>
  [289] objcall 0 ............................... <script("SceneItemScript").new(me)>
  [291] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("SceneItemScript").new(me)>
  [293] objcall 140 ............................. sprite(iSprite).scriptInstanceList.add(script("SceneItemScript").new(me))
  [295] getparam 0 .............................. <me>
  [297] getobjprop 94 ........................... <me.sImageBase>
  [299] pushcons 33 ............................. <"_">
  [301] joinstr ................................. <me.sImageBase & "_">
  [302] getlocal 3 .............................. <sOrder>
  [304] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [305] pushcons 40 ............................. <".ink">
  [307] joinstr ................................. <me.sImageBase & "_" & sOrder & ".ink">
  [308] getparam 0 .............................. <me>
  [310] getobjprop 48 ........................... <me.sCastLib>
  [312] pusharglist 2 ........................... <me.sImageBase & "_" & sOrder & ".ink", me.sCastLib>
  [314] extcall 30 .............................. <member(me.sImageBase & "_" & sOrder & ".ink", me.sCastLib)>
  [316] setlocal 7 .............................. oInkMember = member(me.sImageBase & "_" & sOrder & ".ink", me.sCastLib)
  [318] getlocal 7 .............................. <oInkMember>
  [320] getobjprop 73 ........................... <oInkMember.memberNum>
  [322] pushint8 1 .............................. <1>
  [324] inv ..................................... <-1>
  [325] nteq .................................... <oInkMember.memberNum <> -1>
  [326] jmpifz [339] ............................ if oInkMember.memberNum <> -1 then
  [329] getlocal 7 .............................. <oInkMember>
  [331] getobjprop 152 .......................... <oInkMember.text>
  [333] pusharglist 1 ........................... <oInkMember.text>
  [335] extcall 69 .............................. <integer(oInkMember.text)>
  [337] setlocal 4 .............................. iInk = integer(oInkMember.text)
  [339] getparam 0 .............................. <me>
  [341] getobjprop 94 ........................... <me.sImageBase>
  [343] pushcons 33 ............................. <"_">
  [345] joinstr ................................. <me.sImageBase & "_">
  [346] getlocal 3 .............................. <sOrder>
  [348] joinstr ................................. <me.sImageBase & "_" & sOrder>
  [349] pushcons 41 ............................. <".blend">
  [351] joinstr ................................. <me.sImageBase & "_" & sOrder & ".blend">
  [352] getparam 0 .............................. <me>
  [354] getobjprop 48 ........................... <me.sCastLib>
  [356] pusharglist 2 ........................... <me.sImageBase & "_" & sOrder & ".blend", me.sCastLib>
  [358] extcall 30 .............................. <member(me.sImageBase & "_" & sOrder & ".blend", me.sCastLib)>
  [360] setlocal 8 .............................. oBlendMember = member(me.sImageBase & "_" & sOrder & ".blend", me.sCastLib)
  [362] getlocal 8 .............................. <oBlendMember>
  [364] getobjprop 73 ........................... <oBlendMember.memberNum>
  [366] pushint8 1 .............................. <1>
  [368] inv ..................................... <-1>
  [369] nteq .................................... <oBlendMember.memberNum <> -1>
  [370] jmpifz [383] ............................ if oBlendMember.memberNum <> -1 then
  [373] getlocal 8 .............................. <oBlendMember>
  [375] getobjprop 152 .......................... <oBlendMember.text>
  [377] pusharglist 1 ........................... <oBlendMember.text>
  [379] extcall 69 .............................. <integer(oBlendMember.text)>
  [381] setlocal 5 .............................. iBlend = integer(oBlendMember.text)
  [383] pushint16 255 ........................... <255>
  [386] pushint16 255 ........................... <255>
  [389] pushint16 255 ........................... <255>
  [392] pusharglist 3 ........................... <255, 255, 255>
  [394] extcall 120 ............................. <rgb(255, 255, 255)>
  [396] setlocal 9 .............................. oBGColor = rgb(255, 255, 255)
  [398] pushcons 42 ............................. <"color_">
  [400] getlocal 3 .............................. <sOrder>
  [402] joinstr ................................. <"color_" & sOrder>
  [403] setlocal 10 ............................. sColorProp = "color_" & sOrder
  [405] getparam 0 .............................. <me>
  [407] pushsymb 102 ............................ <#aAttributes>
  [409] getlocal 10 ............................. <sColorProp>
  [411] pusharglist 3 ........................... <me, #aAttributes, sColorProp>
  [413] objcall 104 ............................. <me.aAttributes[sColorProp]>
  [415] setlocal 11 ............................. oColor = me.aAttributes[sColorProp]
  [417] getlocal 11 ............................. <oColor>
  [419] pusharglist 1 ........................... <oColor>
  [421] extcall 59 .............................. <voidp(oColor)>
  [423] not ..................................... <not voidp(oColor)>
  [424] jmpifz [435] ............................ if not voidp(oColor) then
  [427] getlocal 11 ............................. <oColor>
  [429] pusharglist 1 ........................... <oColor>
  [431] extcall 120 ............................. <rgb(oColor)>
  [433] setlocal 9 .............................. oBGColor = rgb(oColor)
  [435] getparam 0 .............................. <me>
  [437] getchainedprop 1441 ..................... <me.aDrawOrder>
  [440] getlocal 3 .............................. <sOrder>
  [442] pushsymb 37 ............................. <#ink>
  [444] getlocal 4 .............................. <iInk>
  [446] pushsymb 694 ............................ <#blend>
  [449] getlocal 5 .............................. <iBlend>
  [451] pushsymb 119 ............................ <#sprite>
  [453] getlocal 6 .............................. <iSprite>
  [455] pushsymb 695 ............................ <#visible>
  [458] pushint8 1 .............................. <1>
  [460] pushsymb 121 ............................ <#bgColor>
  [462] getlocal 9 .............................. <oBGColor>
  [464] pushsymb 1445 ........................... <#vShift>
  [467] pushzero ................................ <0>
  [468] pusharglist 12 .......................... <[#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [470] pushproplist ............................ <[#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [471] pusharglistnoret 3 ...................... <me.aDrawOrder, sOrder, [#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0]>
  [473] objcall 595 ............................. me.aDrawOrder.addProp(sOrder, [#ink: iInk, #blend: iBlend, #sprite: iSprite, #visible: 1, #bgColor: oBGColor, #vShift: 0])
  [476] pushint8 1
  [478] getlocal 1
  [480] add
  [481] setlocal 1
  [483] endrepeat [212]
  [486] ret
end

on getDrawOrderForSprite me, _iSprite
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getparam 0 .............................. <me>
  [  8] pushsymb 1441 ........................... <#aDrawOrder>
  [ 11] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 13] objcall 155 ............................. <me.aDrawOrder.count>
  [ 15] lteq
  [ 16] jmpifz [ 75] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 1441 ..................... <me.aDrawOrder>
  [ 24] getlocal 0 .............................. <i>
  [ 26] pusharglist 2 ........................... <me.aDrawOrder, i>
  [ 28] objcall 1123 ............................ <me.aDrawOrder.getPropAt(i)>
  [ 31] setlocal 1 .............................. sOrder = me.aDrawOrder.getPropAt(i)
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 1441 ........................... <#aDrawOrder>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 42] objcall 104 ............................. <me.aDrawOrder[i]>
  [ 44] setlocal 2 .............................. aOrderAttributes = me.aDrawOrder[i]
  [ 46] getlocal 2 .............................. <aOrderAttributes>
  [ 48] getobjprop 119 .......................... <aOrderAttributes.sprite>
  [ 50] setlocal 3 .............................. iOrderSprite = aOrderAttributes.sprite
  [ 52] getparam 1 .............................. <_iSprite>
  [ 54] getlocal 3 .............................. <iOrderSprite>
  [ 56] eq ...................................... <_iSprite = iOrderSprite>
  [ 57] jmpifz [ 66] ............................ if _iSprite = iOrderSprite then
  [ 60] getlocal 1 .............................. <sOrder>
  [ 62] pusharglistnoret 1 ...................... <sOrder>
  [ 64] extcall 52 .............................. return sOrder
  [ 66] pushint8 1
  [ 68] getlocal 0
  [ 70] add
  [ 71] setlocal 0
  [ 73] endrepeat [  4]
  [ 75] pusharglist 0 ........................... <>
  [ 77] extcall 238 ............................. <VOID>
  [ 79] pusharglistnoret 1 ...................... <VOID>
  [ 81] extcall 52 .............................. return VOID
  [ 83] ret
end

on getDrawOrderAttribute me, sOrder, sProp
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1441 ........................... <#aDrawOrder>
  [  5] getparam 1 .............................. <sOrder>
  [  7] pusharglist 3 ........................... <me, #aDrawOrder, sOrder>
  [  9] objcall 678 ............................. <me.aDrawOrder[sOrder]>
  [ 12] getparam 2 .............................. <sProp>
  [ 14] pusharglist 2 ........................... <me.aDrawOrder[sOrder], sProp>
  [ 16] objcall 72 .............................. <me.aDrawOrder[sOrder][sProp]>
  [ 18] pusharglistnoret 1 ...................... <me.aDrawOrder[sOrder][sProp]>
  [ 20] extcall 52 .............................. return me.aDrawOrder[sOrder][sProp]
  [ 22] ret
end

on setDrawOrderAttribute me, sOrder, sProp, sValue
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1441 ........................... <#aDrawOrder>
  [  5] getparam 1 .............................. <sOrder>
  [  7] pusharglist 3 ........................... <me, #aDrawOrder, sOrder>
  [  9] objcall 678 ............................. <me.aDrawOrder[sOrder]>
  [ 12] getparam 2 .............................. <sProp>
  [ 14] getparam 3 .............................. <sValue>
  [ 16] pusharglistnoret 3 ...................... <me.aDrawOrder[sOrder], sProp, sValue>
  [ 18] objcall 1085 ............................ me.aDrawOrder[sOrder][sProp] = sValue
  [ 21] ret
end

on getParamFromName me, sName, iIndex
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 94 ....................... <me.sImageBase>
  [  4] getobjprop 208 .......................... <me.sImageBase.length>
  [  6] setlocal 0 .............................. iBaseLength = me.sImageBase.length
  [  8] getparam 1 .............................. <sName>
  [ 10] pushsymb 1471 ........................... <#char>
  [ 13] getlocal 0 .............................. <iBaseLength>
  [ 15] pushint8 2 .............................. <2>
  [ 17] add ..................................... <iBaseLength + 2>
  [ 18] getparam 1 .............................. <sName>
  [ 20] getobjprop 208 .......................... <sName.length>
  [ 22] pusharglist 4 ........................... <sName, #char, iBaseLength + 2, sName.length>
  [ 24] objcall 104 ............................. <sName.char[iBaseLength + 2..sName.length]>
  [ 26] setlocal 1 .............................. sParams = sName.char[iBaseLength + 2..sName.length]
  [ 28] getmovieprop 835 ........................ <the itemDelimiter>
  [ 31] setlocal 2 .............................. sOldDelimiter = the itemDelimiter
  [ 33] pushcons 33 ............................. <"_">
  [ 35] setmovieprop 835 ........................ the itemDelimiter = "_"
  [ 38] getlocal 1 .............................. <sParams>
  [ 40] pushsymb 836 ............................ <#item>
  [ 43] getparam 2 .............................. <iIndex>
  [ 45] pusharglist 3 ........................... <sParams, #item, iIndex>
  [ 47] objcall 104 ............................. <sParams.item[iIndex]>
  [ 49] setlocal 3 .............................. sParam = sParams.item[iIndex]
  [ 51] getlocal 2 .............................. <sOldDelimiter>
  [ 53] setmovieprop 835 ........................ the itemDelimiter = sOldDelimiter
  [ 56] getlocal 3 .............................. <sParam>
  [ 58] pusharglistnoret 1 ...................... <sParam>
  [ 60] extcall 52 .............................. return sParam
  [ 62] ret
end

on loadAssets me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1410 ......................... me.aAssets = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 48 ........................... <me.sCastLib>
  [ 12] pushint8 2 .............................. <2>
  [ 14] get 8 ................................... <the number of castMembers of castLib the sCastLib of me>
  [ 16] setlocal 0 .............................. iNumMembers = the number of castMembers of castLib the sCastLib of me
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 1
  [ 22] getlocal 1
  [ 24] getlocal 0 .............................. <iNumMembers>
  [ 26] lteq
  [ 27] jmpifz [140] ............................ repeat with i = 1 to iNumMembers
  [ 30] getlocal 1 .............................. <i>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 48 ........................... <me.sCastLib>
  [ 36] pusharglist 2 ........................... <i, me.sCastLib>
  [ 38] extcall 30 .............................. <member(i, me.sCastLib)>
  [ 40] setlocal 2 .............................. oMember = member(i, me.sCastLib)
  [ 42] getlocal 2 .............................. <oMember>
  [ 44] getobjprop 73 ........................... <oMember.memberNum>
  [ 46] pushint8 1 .............................. <1>
  [ 48] inv ..................................... <-1>
  [ 49] eq ...................................... <oMember.memberNum = -1>
  [ 50] jmpifz [ 56] ............................ if oMember.memberNum = -1 then
  [ 53] jmp [131] ............................... next repeat
  [ 56] getlocal 2 .............................. <oMember>
  [ 58] getobjprop 99 ........................... <oMember.name>
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 94 ........................... <me.sImageBase>
  [ 64] contains0str ............................ <oMember.name starts me.sImageBase>
  [ 65] getlocal 2 .............................. <oMember>
  [ 67] getobjprop 1247 ......................... <oMember.type>
  [ 70] pushsymb 207 ............................ <#bitmap>
  [ 72] eq ...................................... <oMember.type = #bitmap>
  [ 73] and ..................................... <(oMember.name starts me.sImageBase) and (oMember.type = #bitmap)>
  [ 74] getlocal 2 .............................. <oMember>
  [ 76] getobjprop 99 ........................... <oMember.name>
  [ 78] pushcons 43 ............................. <".">
  [ 80] containsstr ............................. <oMember.name contains ".">
  [ 81] not ..................................... <not (oMember.name contains ".")>
  [ 82] and ..................................... <(oMember.name starts me.sImageBase) and (oMember.type = #bitmap) and not (oMember.name contains ".")>
  [ 83] jmpifz [131] ............................ if (oMember.name starts me.sImageBase) and (oMember.type = #bitmap) and not (oMember.name contains ".") then
  [ 86] getparam 0 .............................. <me>
  [ 88] getlocal 2 .............................. <oMember>
  [ 90] getobjprop 99 ........................... <oMember.name>
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 1411 ......................... <me.ORDER>
  [ 97] pusharglist 3 ........................... <me, oMember.name, me.ORDER>
  [ 99] objcall 1401 ............................ <me.getParamFromName(oMember.name, me.ORDER)>
  [102] setlocal 3 .............................. sOrder = me.getParamFromName(oMember.name, me.ORDER)
  [104] getlocal 3 .............................. <sOrder>
  [106] pushcons 6 .............................. <EMPTY>
  [108] eq ...................................... <sOrder = EMPTY>
  [109] jmpifz [115] ............................ if sOrder = EMPTY then
  [112] jmp [131] ............................... next repeat
  [115] getparam 0 .............................. <me>
  [117] getchainedprop 1410 ..................... <me.aAssets>
  [120] getlocal 2 .............................. <oMember>
  [122] getobjprop 99 ........................... <oMember.name>
  [124] getlocal 2 .............................. <oMember>
  [126] pusharglistnoret 3 ...................... <me.aAssets, oMember.name, oMember>
  [128] objcall 595 ............................. me.aAssets.addProp(oMember.name, oMember)
  [131] pushint8 1
  [133] getlocal 1
  [135] add
  [136] setlocal 1
  [138] endrepeat [ 22]
  [140] pushint8 1 .............................. <1>
  [142] setlocal 1
  [144] getlocal 1
  [146] getparam 0 .............................. <me>
  [148] pushsymb 1453 ........................... <#aAlias>
  [151] pusharglist 2 ........................... <me, #aAlias>
  [153] objcall 155 ............................. <me.aAlias.count>
  [155] lteq
  [156] jmpifz [255] ............................ repeat with i = 1 to me.aAlias.count
  [159] getparam 0 .............................. <me>
  [161] pushsymb 1453 ........................... <#aAlias>
  [164] getlocal 1 .............................. <i>
  [166] pusharglist 3 ........................... <me, #aAlias, i>
  [168] objcall 104 ............................. <me.aAlias[i]>
  [170] setlocal 4 .............................. aAliasMember = me.aAlias[i]
  [172] getlocal 4 .............................. <aAliasMember>
  [174] getobjprop 1454 ......................... <aAliasMember.asset>
  [177] setlocal 5 .............................. sAsset = aAliasMember.asset
  [179] getparam 0 .............................. <me>
  [181] getchainedprop 1410 ..................... <me.aAssets>
  [184] getlocal 5 .............................. <sAsset>
  [186] pusharglist 2 ........................... <me.aAssets, sAsset>
  [188] objcall 1476 ............................ <me.aAssets.getaProp(sAsset)>
  [191] pusharglist 1 ........................... <me.aAssets.getaProp(sAsset)>
  [193] extcall 59 .............................. <voidp(me.aAssets.getaProp(sAsset))>
  [195] not ..................................... <not voidp(me.aAssets.getaProp(sAsset))>
  [196] setlocal 6 .............................. bExists = not voidp(me.aAssets.getaProp(sAsset))
  [198] getlocal 6 .............................. <bExists>
  [200] not ..................................... <not bExists>
  [201] jmpifz [246] ............................ if not bExists then
  [204] getlocal 5 .............................. <sAsset>
  [206] getparam 0 .............................. <me>
  [208] getobjprop 48 ........................... <me.sCastLib>
  [210] pusharglist 2 ........................... <sAsset, me.sCastLib>
  [212] extcall 30 .............................. <member(sAsset, me.sCastLib)>
  [214] setlocal 2 .............................. oMember = member(sAsset, me.sCastLib)
  [216] getlocal 2 .............................. <oMember>
  [218] getobjprop 73 ........................... <oMember.memberNum>
  [220] pushint8 1 .............................. <1>
  [222] inv ..................................... <-1>
  [223] eq ...................................... <oMember.memberNum = -1>
  [224] jmpifz [230] ............................ if oMember.memberNum = -1 then
  [227] jmp [246] ............................... next repeat
  [230] getparam 0 .............................. <me>
  [232] getchainedprop 1410 ..................... <me.aAssets>
  [235] getlocal 2 .............................. <oMember>
  [237] getobjprop 99 ........................... <oMember.name>
  [239] getlocal 2 .............................. <oMember>
  [241] pusharglistnoret 3 ...................... <me.aAssets, oMember.name, oMember>
  [243] objcall 595 ............................. me.aAssets.addProp(oMember.name, oMember)
  [246] pushint8 1
  [248] getlocal 1
  [250] add
  [251] setlocal 1
  [253] endrepeat [144]
  [255] ret
end

on loadAlias me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1453 ......................... me.aAlias = [:]
  [  8] getmovieprop 835 ........................ <the itemDelimiter>
  [ 11] setlocal 0 .............................. oldDelimiter = the itemDelimiter
  [ 13] pushcons 44 ............................. <"=">
  [ 15] setmovieprop 835 ........................ the itemDelimiter = "="
  [ 18] pushcons 45 ............................. <"memberalias.index">
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 48 ........................... <me.sCastLib>
  [ 24] pusharglist 2 ........................... <"memberalias.index", me.sCastLib>
  [ 26] extcall 30 .............................. <member("memberalias.index", me.sCastLib)>
  [ 28] getobjprop 152 .......................... <member("memberalias.index", me.sCastLib).text>
  [ 30] setlocal 1 .............................. sAliasText = member("memberalias.index", me.sCastLib).text
  [ 32] pushint8 1 .............................. <1>
  [ 34] setlocal 2
  [ 36] getlocal 2
  [ 38] getlocal 1 .............................. <sAliasText>
  [ 40] pushsymb 1161 ........................... <#lines>
  [ 43] pusharglist 2 ........................... <sAliasText, #lines>
  [ 45] objcall 155 ............................. <sAliasText.lines.count>
  [ 47] lteq
  [ 48] jmpifz [238] ............................ repeat with i = 1 to sAliasText.lines.count
  [ 51] getlocal 1 .............................. <sAliasText>
  [ 53] pushsymb 1162 ........................... <#line>
  [ 56] getlocal 2 .............................. <i>
  [ 58] pusharglist 3 ........................... <sAliasText, #line, i>
  [ 60] objcall 104 ............................. <sAliasText.line[i]>
  [ 62] setlocal 3 .............................. sLine = sAliasText.line[i]
  [ 64] getlocal 3 .............................. <sLine>
  [ 66] pushcons 6 .............................. <EMPTY>
  [ 68] eq ...................................... <sLine = EMPTY>
  [ 69] jmpifz [ 75] ............................ if sLine = EMPTY then
  [ 72] jmp [229] ............................... next repeat
  [ 75] getlocal 3 .............................. <sLine>
  [ 77] pushsymb 836 ............................ <#item>
  [ 80] pushint8 1 .............................. <1>
  [ 82] pusharglist 3 ........................... <sLine, #item, 1>
  [ 84] objcall 104 ............................. <sLine.item[1]>
  [ 86] setlocal 4 .............................. sFrom = sLine.item[1]
  [ 88] getlocal 3 .............................. <sLine>
  [ 90] pushsymb 836 ............................ <#item>
  [ 93] pushint8 2 .............................. <2>
  [ 95] pusharglist 3 ........................... <sLine, #item, 2>
  [ 97] objcall 104 ............................. <sLine.item[2]>
  [ 99] setlocal 5 .............................. sTo = sLine.item[2]
  [101] getlocal 4 .............................. <sFrom>
  [103] pushcons 6 .............................. <EMPTY>
  [105] eq ...................................... <sFrom = EMPTY>
  [106] getlocal 5 .............................. <sTo>
  [108] pushcons 6 .............................. <EMPTY>
  [110] eq ...................................... <sTo = EMPTY>
  [111] or ...................................... <(sFrom = EMPTY) or (sTo = EMPTY)>
  [112] jmpifz [118] ............................ if (sFrom = EMPTY) or (sTo = EMPTY) then
  [115] jmp [229] ............................... next repeat
  [118] getlocal 4 .............................. <sFrom>
  [120] getparam 0 .............................. <me>
  [122] getobjprop 94 ........................... <me.sImageBase>
  [124] contains0str ............................ <sFrom starts me.sImageBase>
  [125] not ..................................... <not (sFrom starts me.sImageBase)>
  [126] jmpifz [132] ............................ if not (sFrom starts me.sImageBase) then
  [129] jmp [229] ............................... next repeat
  [132] pushzero ................................ <0>
  [133] setlocal 6 .............................. bFlip = 0
  [135] getlocal 5 .............................. <sTo>
  [137] pushsymb 1471 ........................... <#char>
  [140] getlocal 5 .............................. <sTo>
  [142] getobjprop 208 .......................... <sTo.length>
  [144] pusharglist 3 ........................... <sTo, #char, sTo.length>
  [146] objcall 104 ............................. <sTo.char[sTo.length]>
  [148] pushcons 46 ............................. <"*">
  [150] eq ...................................... <sTo.char[sTo.length] = "*">
  [151] jmpifz [178] ............................ if sTo.char[sTo.length] = "*" then
  [154] getlocal 5 .............................. <sTo>
  [156] pushsymb 1471 ........................... <#char>
  [159] pushint8 1 .............................. <1>
  [161] getlocal 5 .............................. <sTo>
  [163] getobjprop 208 .......................... <sTo.length>
  [165] pushint8 1 .............................. <1>
  [167] sub ..................................... <sTo.length - 1>
  [168] pusharglist 4 ........................... <sTo, #char, 1, sTo.length - 1>
  [170] objcall 104 ............................. <sTo.char[1..sTo.length - 1]>
  [172] setlocal 5 .............................. sTo = sTo.char[1..sTo.length - 1]
  [174] pushint8 1 .............................. <1>
  [176] setlocal 6 .............................. bFlip = 1
  [178] getlocal 5 .............................. <sTo>
  [180] getparam 0 .............................. <me>
  [182] getobjprop 48 ........................... <me.sCastLib>
  [184] pusharglist 2 ........................... <sTo, me.sCastLib>
  [186] extcall 30 .............................. <member(sTo, me.sCastLib)>
  [188] setlocal 7 .............................. oMember = member(sTo, me.sCastLib)
  [190] getlocal 7 .............................. <oMember>
  [192] getobjprop 73 ........................... <oMember.memberNum>
  [194] pushint8 1 .............................. <1>
  [196] inv ..................................... <-1>
  [197] eq ...................................... <oMember.memberNum = -1>
  [198] jmpifz [204] ............................ if oMember.memberNum = -1 then
  [201] jmp [229] ............................... next repeat
  [204] getparam 0 .............................. <me>
  [206] getchainedprop 1453 ..................... <me.aAlias>
  [209] getlocal 4 .............................. <sFrom>
  [211] pushsymb 1454 ........................... <#asset>
  [214] getlocal 5 .............................. <sTo>
  [216] pushsymb 1446 ........................... <#flip>
  [219] getlocal 6 .............................. <bFlip>
  [221] pusharglist 4 ........................... <[#asset: sTo, #flip: bFlip]>
  [223] pushproplist ............................ <[#asset: sTo, #flip: bFlip]>
  [224] pusharglistnoret 3 ...................... <me.aAlias, sFrom, [#asset: sTo, #flip: bFlip]>
  [226] objcall 595 ............................. me.aAlias.addProp(sFrom, [#asset: sTo, #flip: bFlip])
  [229] pushint8 1
  [231] getlocal 2
  [233] add
  [234] setlocal 2
  [236] endrepeat [ 36]
  [238] ret
end

on setDirections me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[]>
  [  4] pushlist ................................ <[]>
  [  5] setobjprop 884 .......................... me.aDirections = []
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 884 ...................... <me.aDirections>
  [ 13] pusharglistnoret 1 ...................... <me.aDirections>
  [ 15] objcall 574 ............................. me.aDirections.sort()
  [ 18] pushint8 1 .............................. <1>
  [ 20] setlocal 0
  [ 22] getlocal 0
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 1410 ........................... <#aAssets>
  [ 29] pusharglist 2 ........................... <me, #aAssets>
  [ 31] objcall 155 ............................. <me.aAssets.count>
  [ 33] lteq
  [ 34] jmpifz [116] ............................ repeat with i = 1 to me.aAssets.count
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 1410 ..................... <me.aAssets>
  [ 42] getlocal 0 .............................. <i>
  [ 44] pusharglist 2 ........................... <me.aAssets, i>
  [ 46] objcall 1123 ............................ <me.aAssets.getPropAt(i)>
  [ 49] setlocal 1 .............................. sName = me.aAssets.getPropAt(i)
  [ 51] getparam 0 .............................. <me>
  [ 53] getlocal 1 .............................. <sName>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 603 .......................... <me.direction>
  [ 60] pusharglist 3 ........................... <me, sName, me.direction>
  [ 62] objcall 1401 ............................ <me.getParamFromName(sName, me.direction)>
  [ 65] pusharglist 1 ........................... <me.getParamFromName(sName, me.direction)>
  [ 67] extcall 69 .............................. <integer(me.getParamFromName(sName, me.direction))>
  [ 69] setlocal 2 .............................. iDir = integer(me.getParamFromName(sName, me.direction))
  [ 71] getlocal 2 .............................. <iDir>
  [ 73] pusharglist 1 ........................... <iDir>
  [ 75] extcall 59 .............................. <voidp(iDir)>
  [ 77] not ..................................... <not voidp(iDir)>
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 884 ...................... <me.aDirections>
  [ 83] getlocal 2 .............................. <iDir>
  [ 85] pusharglist 2 ........................... <me.aDirections, iDir>
  [ 87] objcall 985 ............................. <me.aDirections.getPos(iDir)>
  [ 90] pushzero ................................ <0>
  [ 91] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [ 92] and ..................................... <not voidp(iDir) and (me.aDirections.getPos(iDir) = 0)>
  [ 93] jmpifz [107] ............................ if not voidp(iDir) and (me.aDirections.getPos(iDir) = 0) then
  [ 96] getparam 0 .............................. <me>
  [ 98] getchainedprop 884 ...................... <me.aDirections>
  [101] getlocal 2 .............................. <iDir>
  [103] pusharglistnoret 2 ...................... <me.aDirections, iDir>
  [105] objcall 140 ............................. me.aDirections.add(iDir)
  [107] pushint8 1
  [109] getlocal 0
  [111] add
  [112] setlocal 0
  [114] endrepeat [ 22]
  [116] pushint8 1 .............................. <1>
  [118] setlocal 0
  [120] getlocal 0
  [122] getparam 0 .............................. <me>
  [124] pushsymb 1453 ........................... <#aAlias>
  [127] pusharglist 2 ........................... <me, #aAlias>
  [129] objcall 155 ............................. <me.aAlias.count>
  [131] lteq
  [132] jmpifz [228] ............................ repeat with i = 1 to me.aAlias.count
  [135] getparam 0 .............................. <me>
  [137] getchainedprop 1453 ..................... <me.aAlias>
  [140] getlocal 0 .............................. <i>
  [142] pusharglist 2 ........................... <me.aAlias, i>
  [144] objcall 1123 ............................ <me.aAlias.getPropAt(i)>
  [147] setlocal 1 .............................. sName = me.aAlias.getPropAt(i)
  [149] getlocal 1 .............................. <sName>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 94 ........................... <me.sImageBase>
  [155] contains0str ............................ <sName starts me.sImageBase>
  [156] not ..................................... <not (sName starts me.sImageBase)>
  [157] jmpifz [163] ............................ if not (sName starts me.sImageBase) then
  [160] jmp [219] ............................... next repeat
  [163] getparam 0 .............................. <me>
  [165] getlocal 1 .............................. <sName>
  [167] getparam 0 .............................. <me>
  [169] getobjprop 603 .......................... <me.direction>
  [172] pusharglist 3 ........................... <me, sName, me.direction>
  [174] objcall 1401 ............................ <me.getParamFromName(sName, me.direction)>
  [177] pusharglist 1 ........................... <me.getParamFromName(sName, me.direction)>
  [179] extcall 69 .............................. <integer(me.getParamFromName(sName, me.direction))>
  [181] setlocal 2 .............................. iDir = integer(me.getParamFromName(sName, me.direction))
  [183] getlocal 2 .............................. <iDir>
  [185] pusharglist 1 ........................... <iDir>
  [187] extcall 59 .............................. <voidp(iDir)>
  [189] not ..................................... <not voidp(iDir)>
  [190] getparam 0 .............................. <me>
  [192] getchainedprop 884 ...................... <me.aDirections>
  [195] getlocal 2 .............................. <iDir>
  [197] pusharglist 2 ........................... <me.aDirections, iDir>
  [199] objcall 985 ............................. <me.aDirections.getPos(iDir)>
  [202] pushzero ................................ <0>
  [203] eq ...................................... <me.aDirections.getPos(iDir) = 0>
  [204] and ..................................... <not voidp(iDir) and (me.aDirections.getPos(iDir) = 0)>
  [205] jmpifz [219] ............................ if not voidp(iDir) and (me.aDirections.getPos(iDir) = 0) then
  [208] getparam 0 .............................. <me>
  [210] getchainedprop 884 ...................... <me.aDirections>
  [213] getlocal 2 .............................. <iDir>
  [215] pusharglistnoret 2 ...................... <me.aDirections, iDir>
  [217] objcall 140 ............................. me.aDirections.add(iDir)
  [219] pushint8 1
  [221] getlocal 0
  [223] add
  [224] setlocal 0
  [226] endrepeat [120]
  [228] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 338 .......................... <me.bDebug>
  [  5] getparam 2 .............................. <bForce>
  [  7] or ...................................... <me.bDebug or bForce>
  [  8] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 11] pushcons 47 ............................. <"FurnitureItem: ">
  [ 13] getparam 1 .............................. <sMessage>
  [ 15] joinstr ................................. <"FurnitureItem: " & sMessage>
  [ 16] pusharglistnoret 1 ...................... <"FurnitureItem: " & sMessage>
  [ 18] extcall 168 ............................. put "FurnitureItem: " & sMessage
  [ 20] ret
end

on getOccupiedSquares me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aList = []
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 507 .......................... <me.iDirection>
  [ 10] peek 0 .................................. case me.iDirection of
  [ 12] pushzero ................................ <0>
  [ 13] nteq
  [ 14] jmpifz [ 25] ............................ (case) 0, ...
  [ 17] peek 0
  [ 19] pushint8 4 .............................. <4>
  [ 21] eq
  [ 22] jmpifz [124] ............................ (case) ..., 4:
  [ 25] pushint8 1 .............................. <1>
  [ 27] setlocal 1
  [ 29] getlocal 1
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 703 .......................... <me.iDepth>
  [ 36] lteq
  [ 37] jmpifz [121] ............................ repeat with i = 1 to me.iDepth
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 431 .......................... <me.iRow>
  [ 45] getlocal 1 .............................. <i>
  [ 47] pushint8 1 .............................. <1>
  [ 49] sub ..................................... <i - 1>
  [ 50] add ..................................... <me.iRow + (i - 1)>
  [ 51] setlocal 2 .............................. _iRow = me.iRow + (i - 1)
  [ 53] pushint8 1 .............................. <1>
  [ 55] setlocal 3
  [ 57] getlocal 3
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 147 .......................... <me.iWidth>
  [ 63] lteq
  [ 64] jmpifz [112] ............................ repeat with ii = 1 to me.iWidth
  [ 67] getparam 0 .............................. <me>
  [ 69] getobjprop 432 .......................... <me.iCol>
  [ 72] getlocal 3 .............................. <ii>
  [ 74] pushint8 1 .............................. <1>
  [ 76] sub ..................................... <ii - 1>
  [ 77] add ..................................... <me.iCol + (ii - 1)>
  [ 78] setlocal 4 .............................. _iCol = me.iCol + (ii - 1)
  [ 80] getglobal 133 ........................... <oIsoScene>
  [ 82] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 84] getlocal 2 .............................. <_iRow>
  [ 86] getlocal 4 .............................. <_iCol>
  [ 88] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 90] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 93] setlocal 5 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [ 95] getlocal 0 .............................. <aList>
  [ 97] getlocal 5 .............................. <oSquare>
  [ 99] pusharglistnoret 2 ...................... <aList, oSquare>
  [101] objcall 140 ............................. aList.add(oSquare)
  [103] pushint8 1
  [105] getlocal 3
  [107] add
  [108] setlocal 3
  [110] endrepeat [ 57]
  [112] pushint8 1
  [114] getlocal 1
  [116] add
  [117] setlocal 1
  [119] endrepeat [ 29]
  [121] jmp [236]
  [124] peek 0
  [126] pushint8 2 .............................. <2>
  [128] nteq
  [129] jmpifz [140] ............................ (case) 2, ...
  [132] peek 0
  [134] pushint8 6 .............................. <6>
  [136] eq
  [137] jmpifz [236] ............................ (case) ..., 6:
  [140] pushint8 1 .............................. <1>
  [142] setlocal 1
  [144] getlocal 1
  [146] getparam 0 .............................. <me>
  [148] getobjprop 703 .......................... <me.iDepth>
  [151] lteq
  [152] jmpifz [236] ............................ repeat with i = 1 to me.iDepth
  [155] getparam 0 .............................. <me>
  [157] getobjprop 432 .......................... <me.iCol>
  [160] getlocal 1 .............................. <i>
  [162] pushint8 1 .............................. <1>
  [164] sub ..................................... <i - 1>
  [165] add ..................................... <me.iCol + (i - 1)>
  [166] setlocal 4 .............................. _iCol = me.iCol + (i - 1)
  [168] pushint8 1 .............................. <1>
  [170] setlocal 3
  [172] getlocal 3
  [174] getparam 0 .............................. <me>
  [176] getobjprop 147 .......................... <me.iWidth>
  [178] lteq
  [179] jmpifz [227] ............................ repeat with ii = 1 to me.iWidth
  [182] getparam 0 .............................. <me>
  [184] getobjprop 431 .......................... <me.iRow>
  [187] getlocal 3 .............................. <ii>
  [189] pushint8 1 .............................. <1>
  [191] sub ..................................... <ii - 1>
  [192] add ..................................... <me.iRow + (ii - 1)>
  [193] setlocal 2 .............................. _iRow = me.iRow + (ii - 1)
  [195] getglobal 133 ........................... <oIsoScene>
  [197] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [199] getlocal 2 .............................. <_iRow>
  [201] getlocal 4 .............................. <_iCol>
  [203] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [205] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [208] setlocal 5 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [210] getlocal 0 .............................. <aList>
  [212] getlocal 5 .............................. <oSquare>
  [214] pusharglistnoret 2 ...................... <aList, oSquare>
  [216] objcall 140 ............................. aList.add(oSquare)
  [218] pushint8 1
  [220] getlocal 3
  [222] add
  [223] setlocal 3
  [225] endrepeat [172]
  [227] pushint8 1
  [229] getlocal 1
  [231] add
  [232] setlocal 1
  [234] endrepeat [144]
  [236] pop 1 ................................... end case
  [238] getlocal 0 .............................. <aList>
  [240] pusharglistnoret 1 ...................... <aList>
  [242] extcall 52 .............................. return aList
  [244] ret
end

on calculateZOrder me, sOrder, oDefaultSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 467 ............................. <me.isRugITem()>
  [  7] jmpifz [ 19] ............................ if me.isRugITem() then
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 508 .......................... <me.iGridY>
  [ 15] pusharglistnoret 1 ...................... <me.iGridY>
  [ 17] extcall 52 .............................. return me.iGridY
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <sOrder>
  [ 23] getparam 2 .............................. <oDefaultSquare>
  [ 25] pusharglist 3 ........................... <me, sOrder, oDefaultSquare>
  [ 27] objcall 1406 ............................ <me.calculateBaseSquare(sOrder, oDefaultSquare)>
  [ 30] setlocal 0 .............................. oSquare = me.calculateBaseSquare(sOrder, oDefaultSquare)
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <sOrder>
  [ 36] pusharglist 2 ........................... <me, sOrder>
  [ 38] objcall 1405 ............................ <me.calculateLayerMap(sOrder)>
  [ 41] setlocal 1 .............................. sLayerMap = me.calculateLayerMap(sOrder)
  [ 43] getlocal 0 .............................. <oSquare>
  [ 45] getlocal 1 .............................. <sLayerMap>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 508 .......................... <me.iGridY>
  [ 52] pusharglist 3 ........................... <oSquare, sLayerMap, me.iGridY>
  [ 54] objcall 701 ............................. <oSquare.getDepthFromMap(sLayerMap, me.iGridY)>
  [ 57] setlocal 2 .............................. iZ = oSquare.getDepthFromMap(sLayerMap, me.iGridY)
  [ 59] getlocal 2 .............................. <iZ>
  [ 61] pusharglistnoret 1 ...................... <iZ>
  [ 63] extcall 52 .............................. return iZ
  [ 65] ret
end

on calculateLayerMap me, sOrder
  [  0] getparam 1 .............................. <sOrder>
  [  2] setlocal 0 .............................. sLayerMap = sOrder
  [  4] getparam 1 .............................. <sOrder>
  [  6] peek 0 .................................. case sOrder of
  [  8] pushcons 48 ............................. <"a">
  [ 10] nteq
  [ 11] jmpifz [ 22] ............................ (case) "a", ...
  [ 14] peek 0
  [ 16] pushcons 49 ............................. <"b">
  [ 18] eq
  [ 19] jmpifz [ 25] ............................ (case) ..., "b":
  [ 22] jmp [ 52]
  [ 25] peek 0
  [ 27] pushcons 50 ............................. <"c">
  [ 29] eq
  [ 30] jmpifz [ 40] ............................ (case) "c":
  [ 33] pushcons 48 ............................. <"a">
  [ 35] setlocal 0 .............................. sLayerMap = "a"
  [ 37] jmp [ 52]
  [ 40] peek 0
  [ 42] pushcons 51 ............................. <"d">
  [ 44] eq
  [ 45] jmpifz [ 52] ............................ (case) "d":
  [ 48] pushcons 49 ............................. <"b">
  [ 50] setlocal 0 .............................. sLayerMap = "b"
  [ 52] pop 1 ................................... end case
  [ 54] getlocal 0 .............................. <sLayerMap>
  [ 56] pusharglistnoret 1 ...................... <sLayerMap>
  [ 58] extcall 52 .............................. return sLayerMap
  [ 60] ret
end

on calculateBaseSquare me, sOrder, oSquare
  [  0] getparam 1 .............................. <sOrder>
  [  2] peek 0 .................................. case sOrder of
  [  4] pushcons 48 ............................. <"a">
  [  6] nteq
  [  7] jmpifz [ 18] ............................ (case) "a", ...
  [ 10] peek 0
  [ 12] pushcons 49 ............................. <"b">
  [ 14] eq
  [ 15] jmpifz [ 30] ............................ (case) ..., "b":
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 1407 ............................ <me.getSquareByGreatestDepth()>
  [ 25] setparam 2 .............................. oSquare = me.getSquareByGreatestDepth()
  [ 27] jmp [ 49]
  [ 30] peek 0
  [ 32] pushcons 50 ............................. <"c">
  [ 34] eq
  [ 35] jmpifz [ 41] ............................ (case) "c":
  [ 38] jmp [ 49]
  [ 41] peek 0
  [ 43] pushcons 51 ............................. <"d">
  [ 45] eq
  [ 46] jmpifz [ 49] ............................ (case) "d":
  [ 49] pop 1 ................................... end case
  [ 51] getparam 2 .............................. <oSquare>
  [ 53] pusharglistnoret 1 ...................... <oSquare>
  [ 55] extcall 52 .............................. return oSquare
  [ 57] ret
end

on getSquareByGreatestDepth me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 431 .......................... <me.iRow>
  [  5] setlocal 0 .............................. _iRow = me.iRow
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 432 .......................... <me.iCol>
  [ 12] setlocal 1 .............................. _iCol = me.iCol
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 507 .......................... <me.iDirection>
  [ 19] peek 0 .................................. case me.iDirection of
  [ 21] pushint8 2 .............................. <2>
  [ 23] nteq
  [ 24] jmpifz [ 35] ............................ (case) 2, ...
  [ 27] peek 0
  [ 29] pushint8 6 .............................. <6>
  [ 31] eq
  [ 32] jmpifz [ 69] ............................ (case) ..., 6:
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 431 .......................... <me.iRow>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 147 .......................... <me.iWidth>
  [ 44] pushint8 1 .............................. <1>
  [ 46] sub ..................................... <me.iWidth - 1>
  [ 47] add ..................................... <me.iRow + (me.iWidth - 1)>
  [ 48] setlocal 0 .............................. _iRow = me.iRow + (me.iWidth - 1)
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 432 .......................... <me.iCol>
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 703 .......................... <me.iDepth>
  [ 60] pushint8 1 .............................. <1>
  [ 62] sub ..................................... <me.iDepth - 1>
  [ 63] add ..................................... <me.iCol + (me.iDepth - 1)>
  [ 64] setlocal 1 .............................. _iCol = me.iCol + (me.iDepth - 1)
  [ 66] jmp [115]
  [ 69] peek 0
  [ 71] pushint8 4 .............................. <4>
  [ 73] nteq
  [ 74] jmpifz [ 84] ............................ (case) 4, ...
  [ 77] peek 0
  [ 79] pushzero ................................ <0>
  [ 80] eq
  [ 81] jmpifz [115] ............................ (case) ..., 0:
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 431 .......................... <me.iRow>
  [ 89] getparam 0 .............................. <me>
  [ 91] getobjprop 703 .......................... <me.iDepth>
  [ 94] pushint8 1 .............................. <1>
  [ 96] sub ..................................... <me.iDepth - 1>
  [ 97] add ..................................... <me.iRow + (me.iDepth - 1)>
  [ 98] setlocal 0 .............................. _iRow = me.iRow + (me.iDepth - 1)
  [100] getparam 0 .............................. <me>
  [102] getobjprop 432 .......................... <me.iCol>
  [105] getparam 0 .............................. <me>
  [107] getobjprop 147 .......................... <me.iWidth>
  [109] pushint8 1 .............................. <1>
  [111] sub ..................................... <me.iWidth - 1>
  [112] add ..................................... <me.iCol + (me.iWidth - 1)>
  [113] setlocal 1 .............................. _iCol = me.iCol + (me.iWidth - 1)
  [115] pop 1 ................................... end case
  [117] getglobal 133 ........................... <oIsoScene>
  [119] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [121] getlocal 0 .............................. <_iRow>
  [123] getlocal 1 .............................. <_iCol>
  [125] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [127] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [130] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [132] getlocal 2 .............................. <oSquare>
  [134] pusharglist 1 ........................... <oSquare>
  [136] extcall 59 .............................. <voidp(oSquare)>
  [138] jmpifz [162] ............................ if voidp(oSquare) then
  [141] getglobal 133 ........................... <oIsoScene>
  [143] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [145] getparam 0 .............................. <me>
  [147] getobjprop 431 .......................... <me.iRow>
  [150] getparam 0 .............................. <me>
  [152] getobjprop 432 .......................... <me.iCol>
  [155] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [157] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [160] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [162] getlocal 2 .............................. <oSquare>
  [164] pusharglistnoret 1 ...................... <oSquare>
  [166] extcall 52 .............................. return oSquare
  [168] ret
end

on getSquareByGreatestRightView me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 431 .......................... <me.iRow>
  [  5] setlocal 0 .............................. _iRow = me.iRow
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 432 .......................... <me.iCol>
  [ 12] setlocal 1 .............................. _iCol = me.iCol
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 507 .......................... <me.iDirection>
  [ 19] peek 0 .................................. case me.iDirection of
  [ 21] pushint8 2 .............................. <2>
  [ 23] nteq
  [ 24] jmpifz [ 35] ............................ (case) 2, ...
  [ 27] peek 0
  [ 29] pushint8 6 .............................. <6>
  [ 31] eq
  [ 32] jmpifz [ 54] ............................ (case) ..., 6:
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 432 .......................... <me.iCol>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 703 .......................... <me.iDepth>
  [ 45] pushint8 1 .............................. <1>
  [ 47] sub ..................................... <me.iDepth - 1>
  [ 48] add ..................................... <me.iCol + (me.iDepth - 1)>
  [ 49] setlocal 1 .............................. _iCol = me.iCol + (me.iDepth - 1)
  [ 51] jmp [ 84]
  [ 54] peek 0
  [ 56] pushint8 4 .............................. <4>
  [ 58] nteq
  [ 59] jmpifz [ 69] ............................ (case) 4, ...
  [ 62] peek 0
  [ 64] pushzero ................................ <0>
  [ 65] eq
  [ 66] jmpifz [ 84] ............................ (case) ..., 0:
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 432 .......................... <me.iCol>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 147 .......................... <me.iWidth>
  [ 78] pushint8 1 .............................. <1>
  [ 80] sub ..................................... <me.iWidth - 1>
  [ 81] add ..................................... <me.iCol + (me.iWidth - 1)>
  [ 82] setlocal 1 .............................. _iCol = me.iCol + (me.iWidth - 1)
  [ 84] pop 1 ................................... end case
  [ 86] getglobal 133 ........................... <oIsoScene>
  [ 88] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [ 90] getlocal 0 .............................. <_iRow>
  [ 92] getlocal 1 .............................. <_iCol>
  [ 94] pusharglist 3 ........................... <oIsoScene.oGrid, _iRow, _iCol>
  [ 96] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)>
  [ 99] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(_iRow, _iCol)
  [101] getlocal 2 .............................. <oSquare>
  [103] pusharglist 1 ........................... <oSquare>
  [105] extcall 59 .............................. <voidp(oSquare)>
  [107] jmpifz [131] ............................ if voidp(oSquare) then
  [110] getglobal 133 ........................... <oIsoScene>
  [112] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [114] getparam 0 .............................. <me>
  [116] getobjprop 431 .......................... <me.iRow>
  [119] getparam 0 .............................. <me>
  [121] getobjprop 432 .......................... <me.iCol>
  [124] pusharglist 3 ........................... <oIsoScene.oGrid, me.iRow, me.iCol>
  [126] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)>
  [129] setlocal 2 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(me.iRow, me.iCol)
  [131] getlocal 2 .............................. <oSquare>
  [133] pusharglistnoret 1 ...................... <oSquare>
  [135] extcall 52 .............................. return oSquare
  [137] ret
end

on getSeatable me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1417 ......................... <me.bSeatable>
  [  5] pusharglistnoret 1 ...................... <me.bSeatable>
  [  7] extcall 52 .............................. return me.bSeatable
  [  9] ret
end

on getBlocksPath me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1416 ......................... <me.bBlocksPath>
  [  5] pusharglistnoret 1 ...................... <me.bBlocksPath>
  [  7] extcall 52 .............................. return me.bBlocksPath
  [  9] ret
end

on isRugITem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 510 .......................... <me.sType>
  [  5] pushcons 52 ............................. <"RUG">
  [  7] eq ...................................... <me.sType = "RUG">
  [  8] pusharglistnoret 1 ...................... <me.sType = "RUG">
  [ 10] extcall 52 .............................. return me.sType = "RUG"
  [ 12] ret
end

on isWallItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 52 .............................. return 0
  [  5] ret
end

on isFurniItem me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 52 .............................. return 1
  [  6] ret
end

on isAvatar me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 52 .............................. return 0
  [  5] ret
end

on isBurnedCd me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 161 .......................... <me.sProdID>
  [  4] pushint8 89 ............................. <89>
  [  6] eq ...................................... <me.sProdID = 89>
  [  7] pusharglistnoret 1 ...................... <me.sProdID = 89>
  [  9] extcall 52 .............................. return me.sProdID = 89
  [ 11] ret
end

on toString me
  [  0] pushcons 53 ............................. <"[FURNI ITEM] TYPE: ">
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 510 .......................... <me.sType>
  [  7] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType>
  [  8] pushcons 54 ............................. <", CAT_ID: ">
  [ 10] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: ">
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 161 .......................... <me.sProdID>
  [ 15] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID>
  [ 16] pushcons 55 ............................. <", POS_ID: ">
  [ 18] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: ">
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 249 ............................. <me.getPosId()>
  [ 25] joinstr ................................. <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()>
  [ 26] pusharglistnoret 1 ...................... <"[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()>
  [ 28] extcall 52 .............................. return "[FURNI ITEM] TYPE: " & me.sType & ", CAT_ID: " & me.sProdID & ", POS_ID: " & me.getPosId()
  [ 30] ret
end

on canDelete me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 52 .............................. return 1
  [  6] ret
end

on canUse me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 52 .............................. return 0
  [  5] ret
end

on canPickup me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 52 .............................. return 1
  [  6] ret
end
