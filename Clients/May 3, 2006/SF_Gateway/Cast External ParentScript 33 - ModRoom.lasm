property bDebug, foRoom, bInARoom, oSession, oController

on new me, _oSession, _oController
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 28 ........................... me.bDebug = 1
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 739 .......................... me.bInARoom = 0
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 1 .............................. <_oSession>
  [ 16] setobjprop 180 .......................... me.oSession = _oSession
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 2 .............................. <_oController>
  [ 22] setobjprop 1127 ......................... me.oController = _oController
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglistnoret 1 ...................... <me>
  [ 29] extcall 71 .............................. return me
  [ 31] ret
end

on setRoomObject me, _foRoom
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"setRoomObject() ">
  [  4] getparam 1 .............................. <_foRoom>
  [  6] joinstr ................................. <"setRoomObject() " & _foRoom>
  [  7] pusharglistnoret 2 ...................... <me, "setRoomObject() " & _foRoom>
  [  9] objcall 20 .............................. me.debug("setRoomObject() " & _foRoom)
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 1 .............................. <_foRoom>
  [ 15] setobjprop 722 .......................... me.foRoom = _foRoom
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 89 .............................. me.setCallbacks()
  [ 24] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 180 ...................... <me.oSession>
  [  4] pusharglist 1 ........................... <me.oSession>
  [  6] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [  9] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 11] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 722 .......................... <me.foRoom>
  [ 18] pushcons 1 .............................. <"roomEntered">
  [ 20] pushsymb 730 ............................ <#roomEntered>
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "roomEntered", #roomEntered, me>
  [ 27] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "roomEntered", #roomEntered, me)
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 180 ...................... <me.oSession>
  [ 33] pusharglist 1 ........................... <me.oSession>
  [ 35] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [ 38] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 40] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 722 .......................... <me.foRoom>
  [ 47] pushcons 2 .............................. <"roomEnterFailed">
  [ 49] pushsymb 731 ............................ <#roomEnterFailed>
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "roomEnterFailed", #roomEnterFailed, me>
  [ 56] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "roomEnterFailed", #roomEnterFailed, me)
  [ 58] getparam 0 .............................. <me>
  [ 60] getchainedprop 180 ...................... <me.oSession>
  [ 62] pusharglist 1 ........................... <me.oSession>
  [ 64] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [ 67] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 69] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 722 .......................... <me.foRoom>
  [ 76] pushcons 3 .............................. <"roomExited">
  [ 78] pushsymb 732 ............................ <#roomExited>
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "roomExited", #roomExited, me>
  [ 85] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "roomExited", #roomExited, me)
  [ 87] getparam 0 .............................. <me>
  [ 89] getchainedprop 180 ...................... <me.oSession>
  [ 91] pusharglist 1 ........................... <me.oSession>
  [ 93] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [ 96] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [ 98] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [100] getparam 0 .............................. <me>
  [102] getobjprop 722 .......................... <me.foRoom>
  [105] pushcons 4 .............................. <"exception">
  [107] pushsymb 677 ............................ <#exception>
  [110] getparam 0 .............................. <me>
  [112] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "exception", #exception, me>
  [114] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "exception", #exception, me)
  [116] getparam 0 .............................. <me>
  [118] getchainedprop 180 ...................... <me.oSession>
  [120] pusharglist 1 ........................... <me.oSession>
  [122] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [125] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [127] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 722 .......................... <me.foRoom>
  [134] pushcons 5 .............................. <"participantEntered">
  [136] pushsymb 733 ............................ <#participantEntered>
  [139] getparam 0 .............................. <me>
  [141] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "participantEntered", #participantEntered, me>
  [143] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "participantEntered", #participantEntered, me)
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 180 ...................... <me.oSession>
  [149] pusharglist 1 ........................... <me.oSession>
  [151] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [154] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [156] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [158] getparam 0 .............................. <me>
  [160] getobjprop 722 .......................... <me.foRoom>
  [163] pushcons 6 .............................. <"participantExited">
  [165] pushsymb 734 ............................ <#participantExited>
  [168] getparam 0 .............................. <me>
  [170] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "participantExited", #participantExited, me>
  [172] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "participantExited", #participantExited, me)
  [174] getparam 0 .............................. <me>
  [176] getchainedprop 180 ...................... <me.oSession>
  [178] pusharglist 1 ........................... <me.oSession>
  [180] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [183] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [185] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [187] getparam 0 .............................. <me>
  [189] getobjprop 722 .......................... <me.foRoom>
  [192] pushcons 7 .............................. <"participantEjected">
  [194] pushsymb 735 ............................ <#participantEjected>
  [197] getparam 0 .............................. <me>
  [199] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "participantEjected", #participantEjected, me>
  [201] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "participantEjected", #participantEjected, me)
  [203] getparam 0 .............................. <me>
  [205] getchainedprop 180 ...................... <me.oSession>
  [207] pusharglist 1 ........................... <me.oSession>
  [209] objcall 1115 ............................ <me.oSession.getFlashSprite()>
  [212] pusharglist 1 ........................... <me.oSession.getFlashSprite()>
  [214] extcall 2 ............................... <sprite(me.oSession.getFlashSprite())>
  [216] getparam 0 .............................. <me>
  [218] getobjprop 722 .......................... <me.foRoom>
  [221] pushcons 8 .............................. <"receiveCallForHelp">
  [223] pushsymb 1142 ........................... <#receiveCallForHelp>
  [226] getparam 0 .............................. <me>
  [228] pusharglistnoret 5 ...................... <sprite(me.oSession.getFlashSprite()), me.foRoom, "receiveCallForHelp", #receiveCallForHelp, me>
  [230] objcall 159 ............................. sprite(me.oSession.getFlashSprite()).setCallback(me.foRoom, "receiveCallForHelp", #receiveCallForHelp, me)
  [232] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 28 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 9 .............................. <"ModRoom: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"ModRoom: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"ModRoom: " & sMessage>
  [ 17] extcall 33 .............................. put "ModRoom: " & sMessage
  [ 19] ret
end

on setInARoom me, bState
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bState>
  [  4] setobjprop 739 .......................... me.bInARoom = bState
  [  7] ret
end

on getInARoom me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 739 .......................... <me.bInARoom>
  [  5] pusharglistnoret 1 ...................... <me.bInARoom>
  [  7] extcall 71 .............................. return me.bInARoom
  [  9] ret
end

on getRoomID me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 722 .......................... <me.foRoom>
  [  5] pusharglist 1 ........................... <me.foRoom>
  [  7] extcall 15 .............................. <voidp(me.foRoom)>
  [  9] not ..................................... <not voidp(me.foRoom)>
  [ 10] jmpifz [ 27] ............................ if not voidp(me.foRoom) then
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 722 ...................... <me.foRoom>
  [ 18] pusharglist 1 ........................... <me.foRoom>
  [ 20] objcall 727 ............................. <me.foRoom.getRoomID()>
  [ 23] pusharglistnoret 1 ...................... <me.foRoom.getRoomID()>
  [ 25] extcall 71 .............................. return me.foRoom.getRoomID()
  [ 27] ret
end

on sendEnterRoom me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 10 ............................. <"sendEnterRoom()">
  [  4] pusharglistnoret 2 ...................... <me, "sendEnterRoom()">
  [  6] objcall 20 .............................. me.debug("sendEnterRoom()")
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 180 ...................... <me.oSession>
  [ 12] getobjprop 162 .......................... <me.oSession.bTestMode>
  [ 14] jmpifz [ 21] ............................ if me.oSession.bTestMode then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 71 .............................. return 
  [ 21] getparam 0 .............................. <me>
  [ 23] getchainedprop 722 ...................... <me.foRoom>
  [ 26] getobjprop 1143 ......................... <me.foRoom.MODERATORS_GROUP>
  [ 29] setlocal 0 .............................. sGroupId = me.foRoom.MODERATORS_GROUP
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 722 ...................... <me.foRoom>
  [ 36] getlocal 0 .............................. <sGroupId>
  [ 38] pusharglistnoret 2 ...................... <me.foRoom, sGroupId>
  [ 40] objcall 728 ............................. me.foRoom.sendEnterRoom(sGroupId)
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 71 .............................. return 1
  [ 49] ret
end

on sendExitRoom me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 11 ............................. <"sendExitRoom() ">
  [  4] pusharglistnoret 2 ...................... <me, "sendExitRoom() ">
  [  6] objcall 20 .............................. me.debug("sendExitRoom() ")
  [  8] getprop 180 ............................. <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] pusharglistnoret 1 ...................... <me.foRoom>
  [ 26] objcall 729 ............................. me.foRoom.sendExitRoom()
  [ 29] ret
end

on sendPickUpCallForHelp me, iID, bIsAlert
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"sendPickUpCallForHelp() ">
  [  4] getparam 1 .............................. <iID>
  [  6] joinstr ................................. <"sendPickUpCallForHelp() " & iID>
  [  7] getparam 2 .............................. <bIsAlert>
  [  9] joinpadstr .............................. <"sendPickUpCallForHelp() " & iID && bIsAlert>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "sendPickUpCallForHelp() " & iID && bIsAlert, 1>
  [ 14] objcall 20 .............................. me.debug("sendPickUpCallForHelp() " & iID && bIsAlert, 1)
  [ 16] getprop 180 ............................. <oSession>
  [ 18] getobjprop 162 .......................... <oSession.bTestMode>
  [ 20] jmpifz [ 27] ............................ if oSession.bTestMode then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 71 .............................. return 
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 722 ...................... <me.foRoom>
  [ 32] getparam 1 .............................. <iID>
  [ 34] getparam 2 .............................. <bIsAlert>
  [ 36] pusharglistnoret 3 ...................... <me.foRoom, iID, bIsAlert>
  [ 38] objcall 1137 ............................ me.foRoom.sendPickUpCallForHelp(iID, bIsAlert)
  [ 41] ret
end

on sendRespondToCallForHelp me, iID, bIsAlert, sResponse
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"sendPickUpCallForHelp() ">
  [  4] getparam 1 .............................. <iID>
  [  6] joinstr ................................. <"sendPickUpCallForHelp() " & iID>
  [  7] getparam 2 .............................. <bIsAlert>
  [  9] joinpadstr .............................. <"sendPickUpCallForHelp() " & iID && bIsAlert>
  [ 10] getparam 3 .............................. <sResponse>
  [ 12] joinpadstr .............................. <"sendPickUpCallForHelp() " & iID && bIsAlert && sResponse>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 3 ...................... <me, "sendPickUpCallForHelp() " & iID && bIsAlert && sResponse, 1>
  [ 17] objcall 20 .............................. me.debug("sendPickUpCallForHelp() " & iID && bIsAlert && sResponse, 1)
  [ 19] getprop 180 ............................. <oSession>
  [ 21] getobjprop 162 .......................... <oSession.bTestMode>
  [ 23] jmpifz [ 30] ............................ if oSession.bTestMode then
  [ 26] pusharglistnoret 0 ...................... <>
  [ 28] extcall 71 .............................. return 
  [ 30] getparam 3 .............................. <sResponse>
  [ 32] pusharglist 1 ........................... <sResponse>
  [ 34] extcall 15 .............................. <voidp(sResponse)>
  [ 36] getparam 3 .............................. <sResponse>
  [ 38] pushcons 13 ............................. <EMPTY>
  [ 40] eq ...................................... <sResponse = EMPTY>
  [ 41] or ...................................... <voidp(sResponse) or (sResponse = EMPTY)>
  [ 42] jmpifz [ 55] ............................ if voidp(sResponse) or (sResponse = EMPTY) then
  [ 45] pushcons 14 ............................. <"Must supply a response">
  [ 47] pusharglistnoret 1 ...................... <"Must supply a response">
  [ 49] extcall 206 ............................. alert("Must supply a response")
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 71 .............................. return 
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 722 ...................... <me.foRoom>
  [ 60] getparam 1 .............................. <iID>
  [ 62] getparam 2 .............................. <bIsAlert>
  [ 64] getparam 3 .............................. <sResponse>
  [ 66] pusharglistnoret 4 ...................... <me.foRoom, iID, bIsAlert, sResponse>
  [ 68] objcall 1138 ............................ me.foRoom.sendRespondToCallForHelp(iID, bIsAlert, sResponse)
  [ 71] ret
end

on sendModMessage me, sScreenName, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 15 ............................. <"sendModMessage() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendModMessage() " & sScreenName>
  [  7] getparam 2 .............................. <sMessage>
  [  9] joinpadstr .............................. <"sendModMessage() " & sScreenName && sMessage>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "sendModMessage() " & sScreenName && sMessage, 1>
  [ 14] objcall 20 .............................. me.debug("sendModMessage() " & sScreenName && sMessage, 1)
  [ 16] getprop 180 ............................. <oSession>
  [ 18] getobjprop 162 .......................... <oSession.bTestMode>
  [ 20] jmpifz [ 27] ............................ if oSession.bTestMode then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 71 .............................. return 
  [ 27] getparam 1 .............................. <sScreenName>
  [ 29] pusharglist 1 ........................... <sScreenName>
  [ 31] extcall 15 .............................. <voidp(sScreenName)>
  [ 33] jmpifz [ 55] ............................ if voidp(sScreenName) then
  [ 36] getparam 2 .............................. <sMessage>
  [ 38] pusharglist 1 ........................... <sMessage>
  [ 40] extcall 15 .............................. <voidp(sMessage)>
  [ 42] jmpifz [ 51] ............................ if voidp(sMessage) then
  [ 45] pushcons 16 ............................. <"Must supply a screen name">
  [ 47] pusharglistnoret 1 ...................... <"Must supply a screen name">
  [ 49] extcall 206 ............................. alert("Must supply a screen name")
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 71 .............................. return 
  [ 55] getparam 2 .............................. <sMessage>
  [ 57] pusharglist 1 ........................... <sMessage>
  [ 59] extcall 15 .............................. <voidp(sMessage)>
  [ 61] getparam 2 .............................. <sMessage>
  [ 63] pushcons 13 ............................. <EMPTY>
  [ 65] eq ...................................... <sMessage = EMPTY>
  [ 66] or ...................................... <voidp(sMessage) or (sMessage = EMPTY)>
  [ 67] jmpifz [ 80] ............................ if voidp(sMessage) or (sMessage = EMPTY) then
  [ 70] pushcons 17 ............................. <"Must supply a message">
  [ 72] pusharglistnoret 1 ...................... <"Must supply a message">
  [ 74] extcall 206 ............................. alert("Must supply a message")
  [ 76] pusharglistnoret 0 ...................... <>
  [ 78] extcall 71 .............................. return 
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 722 ...................... <me.foRoom>
  [ 85] getparam 1 .............................. <sScreenName>
  [ 87] getparam 2 .............................. <sMessage>
  [ 89] pusharglistnoret 3 ...................... <me.foRoom, sScreenName, sMessage>
  [ 91] objcall 1139 ............................ me.foRoom.sendModMessage(sScreenName, sMessage)
  [ 94] ret
end

on sendBanUser me, sScreenName, iInterval, sMessage, sComment
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 18 ............................. <"sendBanUser() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendBanUser() " & sScreenName>
  [  7] getparam 2 .............................. <iInterval>
  [  9] joinpadstr .............................. <"sendBanUser() " & sScreenName && iInterval>
  [ 10] getparam 3 .............................. <sMessage>
  [ 12] joinpadstr .............................. <"sendBanUser() " & sScreenName && iInterval && sMessage>
  [ 13] getparam 4 .............................. <sComment>
  [ 15] joinpadstr .............................. <"sendBanUser() " & sScreenName && iInterval && sMessage && sComment>
  [ 16] pusharglistnoret 2 ...................... <me, "sendBanUser() " & sScreenName && iInterval && sMessage && sComment>
  [ 18] objcall 20 .............................. me.debug("sendBanUser() " & sScreenName && iInterval && sMessage && sComment)
  [ 20] getprop 180 ............................. <oSession>
  [ 22] getobjprop 162 .......................... <oSession.bTestMode>
  [ 24] jmpifz [ 31] ............................ if oSession.bTestMode then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 71 .............................. return 
  [ 31] getparam 1 .............................. <sScreenName>
  [ 33] pusharglist 1 ........................... <sScreenName>
  [ 35] extcall 15 .............................. <voidp(sScreenName)>
  [ 37] jmpifz [ 59] ............................ if voidp(sScreenName) then
  [ 40] getparam 3 .............................. <sMessage>
  [ 42] pusharglist 1 ........................... <sMessage>
  [ 44] extcall 15 .............................. <voidp(sMessage)>
  [ 46] jmpifz [ 55] ............................ if voidp(sMessage) then
  [ 49] pushcons 16 ............................. <"Must supply a screen name">
  [ 51] pusharglistnoret 1 ...................... <"Must supply a screen name">
  [ 53] extcall 206 ............................. alert("Must supply a screen name")
  [ 55] pusharglistnoret 0 ...................... <>
  [ 57] extcall 71 .............................. return 
  [ 59] getparam 3 .............................. <sMessage>
  [ 61] pusharglist 1 ........................... <sMessage>
  [ 63] extcall 15 .............................. <voidp(sMessage)>
  [ 65] getparam 3 .............................. <sMessage>
  [ 67] pushcons 13 ............................. <EMPTY>
  [ 69] eq ...................................... <sMessage = EMPTY>
  [ 70] or ...................................... <voidp(sMessage) or (sMessage = EMPTY)>
  [ 71] jmpifz [ 84] ............................ if voidp(sMessage) or (sMessage = EMPTY) then
  [ 74] pushcons 17 ............................. <"Must supply a message">
  [ 76] pusharglistnoret 1 ...................... <"Must supply a message">
  [ 78] extcall 206 ............................. alert("Must supply a message")
  [ 80] pusharglistnoret 0 ...................... <>
  [ 82] extcall 71 .............................. return 
  [ 84] getparam 4 .............................. <sComment>
  [ 86] pusharglist 1 ........................... <sComment>
  [ 88] extcall 15 .............................. <voidp(sComment)>
  [ 90] jmpifz [ 97] ............................ if voidp(sComment) then
  [ 93] pushcons 13 ............................. <EMPTY>
  [ 95] setparam 4 .............................. sComment = EMPTY
  [ 97] getparam 0 .............................. <me>
  [ 99] getchainedprop 722 ...................... <me.foRoom>
  [102] getparam 1 .............................. <sScreenName>
  [104] getparam 2 .............................. <iInterval>
  [106] getparam 3 .............................. <sMessage>
  [108] getparam 4 .............................. <sComment>
  [110] pusharglistnoret 5 ...................... <me.foRoom, sScreenName, iInterval, sMessage, sComment>
  [112] objcall 1140 ............................ me.foRoom.sendBanUser(sScreenName, iInterval, sMessage, sComment)
  [115] ret
end

on sendWarnUser me, sScreenName, sMessage, sComment
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 19 ............................. <"sendWarnUser() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendWarnUser() " & sScreenName>
  [  7] getparam 2 .............................. <sMessage>
  [  9] joinpadstr .............................. <"sendWarnUser() " & sScreenName && sMessage>
  [ 10] getparam 3 .............................. <sComment>
  [ 12] joinpadstr .............................. <"sendWarnUser() " & sScreenName && sMessage && sComment>
  [ 13] pusharglistnoret 2 ...................... <me, "sendWarnUser() " & sScreenName && sMessage && sComment>
  [ 15] objcall 20 .............................. me.debug("sendWarnUser() " & sScreenName && sMessage && sComment)
  [ 17] getparam 1 .............................. <sScreenName>
  [ 19] pusharglist 1 ........................... <sScreenName>
  [ 21] extcall 15 .............................. <voidp(sScreenName)>
  [ 23] jmpifz [ 45] ............................ if voidp(sScreenName) then
  [ 26] getparam 2 .............................. <sMessage>
  [ 28] pusharglist 1 ........................... <sMessage>
  [ 30] extcall 15 .............................. <voidp(sMessage)>
  [ 32] jmpifz [ 41] ............................ if voidp(sMessage) then
  [ 35] pushcons 16 ............................. <"Must supply a screen name">
  [ 37] pusharglistnoret 1 ...................... <"Must supply a screen name">
  [ 39] extcall 206 ............................. alert("Must supply a screen name")
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 71 .............................. return 
  [ 45] getparam 2 .............................. <sMessage>
  [ 47] pusharglist 1 ........................... <sMessage>
  [ 49] extcall 15 .............................. <voidp(sMessage)>
  [ 51] getparam 2 .............................. <sMessage>
  [ 53] pushcons 13 ............................. <EMPTY>
  [ 55] eq ...................................... <sMessage = EMPTY>
  [ 56] or ...................................... <voidp(sMessage) or (sMessage = EMPTY)>
  [ 57] jmpifz [ 70] ............................ if voidp(sMessage) or (sMessage = EMPTY) then
  [ 60] pushcons 17 ............................. <"Must supply a message">
  [ 62] pusharglistnoret 1 ...................... <"Must supply a message">
  [ 64] extcall 206 ............................. alert("Must supply a message")
  [ 66] pusharglistnoret 0 ...................... <>
  [ 68] extcall 71 .............................. return 
  [ 70] getprop 180 ............................. <oSession>
  [ 72] getobjprop 162 .......................... <oSession.bTestMode>
  [ 74] jmpifz [ 81] ............................ if oSession.bTestMode then
  [ 77] pusharglistnoret 0 ...................... <>
  [ 79] extcall 71 .............................. return 
  [ 81] getparam 0 .............................. <me>
  [ 83] getchainedprop 722 ...................... <me.foRoom>
  [ 86] getparam 1 .............................. <sScreenName>
  [ 88] getparam 2 .............................. <sMessage>
  [ 90] getparam 3 .............................. <sComment>
  [ 92] pusharglistnoret 4 ...................... <me.foRoom, sScreenName, sMessage, sComment>
  [ 94] objcall 1141 ............................ me.foRoom.sendWarnUser(sScreenName, sMessage, sComment)
  [ 97] ret
end

on receiveCallForHelp me, oCaller, iCallID, bIsAlert, sScreenName, sStudioName, sStudioOwner, sMessage, bIsPickedUp, sPickedUpBy
  [  0] pushcons 20 ............................. <"receiveCallForHelp()">
  [  2] pusharglistnoret 1 ...................... <"receiveCallForHelp()">
  [  4] extcall 33 .............................. put "receiveCallForHelp()"
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 20 ............................. <"receiveCallForHelp()">
  [ 10] pusharglistnoret 2 ...................... <me, "receiveCallForHelp()">
  [ 12] objcall 20 .............................. me.debug("receiveCallForHelp()")
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 21 ............................. <"iCallID: ">
  [ 18] getparam 2 .............................. <iCallID>
  [ 20] joinstr ................................. <"iCallID: " & iCallID>
  [ 21] pusharglistnoret 2 ...................... <me, "iCallID: " & iCallID>
  [ 23] objcall 20 .............................. me.debug("iCallID: " & iCallID)
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 22 ............................. <"bIsAlert: ">
  [ 29] getparam 3 .............................. <bIsAlert>
  [ 31] joinstr ................................. <"bIsAlert: " & bIsAlert>
  [ 32] pusharglistnoret 2 ...................... <me, "bIsAlert: " & bIsAlert>
  [ 34] objcall 20 .............................. me.debug("bIsAlert: " & bIsAlert)
  [ 36] getparam 0 .............................. <me>
  [ 38] pushcons 23 ............................. <"sScreenName: ">
  [ 40] getparam 4 .............................. <sScreenName>
  [ 42] joinstr ................................. <"sScreenName: " & sScreenName>
  [ 43] pusharglistnoret 2 ...................... <me, "sScreenName: " & sScreenName>
  [ 45] objcall 20 .............................. me.debug("sScreenName: " & sScreenName)
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 24 ............................. <"sStudioName: ">
  [ 51] getparam 5 .............................. <sStudioName>
  [ 53] joinstr ................................. <"sStudioName: " & sStudioName>
  [ 54] pusharglistnoret 2 ...................... <me, "sStudioName: " & sStudioName>
  [ 56] objcall 20 .............................. me.debug("sStudioName: " & sStudioName)
  [ 58] getparam 0 .............................. <me>
  [ 60] pushcons 25 ............................. <"sStudioOwner: ">
  [ 62] getparam 6 .............................. <sStudioOwner>
  [ 64] joinstr ................................. <"sStudioOwner: " & sStudioOwner>
  [ 65] pusharglistnoret 2 ...................... <me, "sStudioOwner: " & sStudioOwner>
  [ 67] objcall 20 .............................. me.debug("sStudioOwner: " & sStudioOwner)
  [ 69] getparam 0 .............................. <me>
  [ 71] pushcons 26 ............................. <"sMessage: ">
  [ 73] getparam 7 .............................. <sMessage>
  [ 75] joinstr ................................. <"sMessage: " & sMessage>
  [ 76] pusharglistnoret 2 ...................... <me, "sMessage: " & sMessage>
  [ 78] objcall 20 .............................. me.debug("sMessage: " & sMessage)
  [ 80] getparam 0 .............................. <me>
  [ 82] pushcons 27 ............................. <"bIsPickedUp: ">
  [ 84] getparam 8 .............................. <bIsPickedUp>
  [ 86] joinstr ................................. <"bIsPickedUp: " & bIsPickedUp>
  [ 87] pusharglistnoret 2 ...................... <me, "bIsPickedUp: " & bIsPickedUp>
  [ 89] objcall 20 .............................. me.debug("bIsPickedUp: " & bIsPickedUp)
  [ 91] getparam 0 .............................. <me>
  [ 93] pushcons 28 ............................. <"sPickedUpBy: ">
  [ 95] getparam 9 .............................. <sPickedUpBy>
  [ 97] joinstr ................................. <"sPickedUpBy: " & sPickedUpBy>
  [ 98] pusharglistnoret 2 ...................... <me, "sPickedUpBy: " & sPickedUpBy>
  [100] objcall 20 .............................. me.debug("sPickedUpBy: " & sPickedUpBy)
  [102] pusharglist 0 ........................... <[:]>
  [104] pushproplist ............................ <[:]>
  [105] setlocal 0 .............................. aCallForHelp = [:]
  [107] getlocal 0 .............................. <aCallForHelp>
  [109] pushsymb 1149 ........................... <#callID>
  [112] getparam 2 .............................. <iCallID>
  [114] pusharglistnoret 3 ...................... <aCallForHelp, #callID, iCallID>
  [116] objcall 73 .............................. aCallForHelp[#callID] = iCallID
  [118] getlocal 0 .............................. <aCallForHelp>
  [120] pushsymb 1150 ........................... <#isAlert>
  [123] getparam 3 .............................. <bIsAlert>
  [125] pusharglistnoret 3 ...................... <aCallForHelp, #isAlert, bIsAlert>
  [127] objcall 73 .............................. aCallForHelp[#isAlert] = bIsAlert
  [129] getlocal 0 .............................. <aCallForHelp>
  [131] pushsymb 434 ............................ <#screenName>
  [134] getparam 4 .............................. <sScreenName>
  [136] pusharglistnoret 3 ...................... <aCallForHelp, #screenName, sScreenName>
  [138] objcall 73 .............................. aCallForHelp[#screenName] = sScreenName
  [140] getlocal 0 .............................. <aCallForHelp>
  [142] pushsymb 1151 ........................... <#studioName>
  [145] getparam 5 .............................. <sStudioName>
  [147] pusharglistnoret 3 ...................... <aCallForHelp, #studioName, sStudioName>
  [149] objcall 73 .............................. aCallForHelp[#studioName] = sStudioName
  [151] getlocal 0 .............................. <aCallForHelp>
  [153] pushsymb 1152 ........................... <#studioOwner>
  [156] getparam 6 .............................. <sStudioOwner>
  [158] pusharglistnoret 3 ...................... <aCallForHelp, #studioOwner, sStudioOwner>
  [160] objcall 73 .............................. aCallForHelp[#studioOwner] = sStudioOwner
  [162] getlocal 0 .............................. <aCallForHelp>
  [164] pushsymb 479 ............................ <#message>
  [167] getparam 7 .............................. <sMessage>
  [169] pusharglistnoret 3 ...................... <aCallForHelp, #message, sMessage>
  [171] objcall 73 .............................. aCallForHelp[#message] = sMessage
  [173] getlocal 0 .............................. <aCallForHelp>
  [175] pushsymb 1153 ........................... <#isPickedUp>
  [178] getparam 8 .............................. <bIsPickedUp>
  [180] pusharglistnoret 3 ...................... <aCallForHelp, #isPickedUp, bIsPickedUp>
  [182] objcall 73 .............................. aCallForHelp[#isPickedUp] = bIsPickedUp
  [184] getlocal 0 .............................. <aCallForHelp>
  [186] pushsymb 1154 ........................... <#pickedUpBy>
  [189] getparam 9 .............................. <sPickedUpBy>
  [191] pusharglistnoret 3 ...................... <aCallForHelp, #pickedUpBy, sPickedUpBy>
  [193] objcall 73 .............................. aCallForHelp[#pickedUpBy] = sPickedUpBy
  [195] getglobal 1155 .......................... <oCallAlertDisplayManager>
  [198] getlocal 0 .............................. <aCallForHelp>
  [200] pusharglistnoret 2 ...................... <oCallAlertDisplayManager, aCallForHelp>
  [202] objcall 1156 ............................ oCallAlertDisplayManager.receiveStudioCallAlert(aCallForHelp)
  [205] ret
end

on roomEntered me, oCaller, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 29 ............................. <"roomEntered() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomEntered() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "roomEntered() " && sRoomId>
  [  9] objcall 20 .............................. me.debug("roomEntered() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 2 ...................... <me, 1>
  [ 17] objcall 725 ............................. me.setInARoom(1)
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 1127 ..................... <me.oController>
  [ 25] getparam 2 .............................. <sRoomId>
  [ 27] pusharglistnoret 2 ...................... <me.oController, sRoomId>
  [ 29] objcall 730 ............................. me.oController.roomEntered(sRoomId)
  [ 32] ret
end

on roomEnterFailed me, oCaller, sRoomId, iReasonId, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"roomEnterFailed() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomEnterFailed() " && sRoomId>
  [  7] getparam 3 .............................. <iReasonId>
  [  9] pusharglist 1 ........................... <iReasonId>
  [ 11] extcall 560 ............................. <string(iReasonId)>
  [ 14] joinpadstr .............................. <"roomEnterFailed() " && sRoomId && string(iReasonId)>
  [ 15] getparam 4 .............................. <sReason>
  [ 17] joinpadstr .............................. <"roomEnterFailed() " && sRoomId && string(iReasonId) && sReason>
  [ 18] pusharglistnoret 2 ...................... <me, "roomEnterFailed() " && sRoomId && string(iReasonId) && sReason>
  [ 20] objcall 20 .............................. me.debug("roomEnterFailed() " && sRoomId && string(iReasonId) && sReason)
  [ 22] getparam 3 .............................. <iReasonId>
  [ 24] pusharglist 1 ........................... <iReasonId>
  [ 26] extcall 48 .............................. <integer(iReasonId)>
  [ 28] setparam 3 .............................. iReasonId = integer(iReasonId)
  [ 30] pushcons 13 ............................. <EMPTY>
  [ 32] setlocal 0 .............................. sMessage = EMPTY
  [ 34] getparam 3 .............................. <iReasonId>
  [ 36] peek 0 .................................. case iReasonId of
  [ 38] pushint16 9000 .......................... <9000>
  [ 41] eq
  [ 42] jmpifz [ 49] ............................ (case) 9000:
  [ 45] pushcons 31 ............................. <"Room does not exist">
  [ 47] setlocal 0 .............................. sMessage = "Room does not exist"
  [ 49] pop 1
  [ 51] getparam 0 .............................. <me>
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 2 ...................... <me, 0>
  [ 56] objcall 725 ............................. me.setInARoom(0)
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 1127 ..................... <me.oController>
  [ 64] getparam 2 .............................. <sRoomId>
  [ 66] getparam 3 .............................. <iReasonId>
  [ 68] getlocal 0 .............................. <sMessage>
  [ 70] pusharglistnoret 4 ...................... <me.oController, sRoomId, iReasonId, sMessage>
  [ 72] objcall 731 ............................. me.oController.roomEnterFailed(sRoomId, iReasonId, sMessage)
  [ 75] ret
end

on roomExited me, oCaller, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 32 ............................. <"roomExited() ">
  [  4] getparam 2 .............................. <sRoomId>
  [  6] joinpadstr .............................. <"roomExited() " && sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "roomExited() " && sRoomId>
  [  9] objcall 20 .............................. me.debug("roomExited() " && sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 2 ...................... <me, 0>
  [ 16] objcall 725 ............................. me.setInARoom(0)
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 180 ...................... <me.oSession>
  [ 23] getparam 2 .............................. <sRoomId>
  [ 25] pusharglistnoret 2 ...................... <me.oSession, sRoomId>
  [ 27] objcall 1120 ............................ me.oSession.removeRoom(sRoomId)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 1127 ..................... <me.oController>
  [ 35] getparam 2 .............................. <sRoomId>
  [ 37] pusharglistnoret 2 ...................... <me.oController, sRoomId>
  [ 39] objcall 732 ............................. me.oController.roomExited(sRoomId)
  [ 42] ret
end

on exception me, oCaller, iReasonId, sReason, sMsgId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"exception() ">
  [  4] getparam 3 .............................. <sReason>
  [  6] joinstr ................................. <"exception() " & sReason>
  [  7] pusharglistnoret 2 ...................... <me, "exception() " & sReason>
  [  9] objcall 20 .............................. me.debug("exception() " & sReason)
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 1127 ..................... <me.oController>
  [ 16] getparam 2 .............................. <iReasonId>
  [ 18] pusharglistnoret 2 ...................... <me.oController, iReasonId>
  [ 20] objcall 677 ............................. me.oController.exception(iReasonId)
  [ 23] ret
end

on participantEntered me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 34 ............................. <"participantEntered() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantEntered() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantEntered() " & sName>
  [  9] objcall 20 .............................. me.debug("participantEntered() " & sName)
  [ 11] ret
end

on participantExited me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 35 ............................. <"participantExited() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantExited() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantExited() " & sName>
  [  9] objcall 20 .............................. me.debug("participantExited() " & sName)
  [ 11] ret
end

on participantEjected me, oCaller, sName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 36 ............................. <"participantEjected() ">
  [  4] getparam 2 .............................. <sName>
  [  6] joinstr ................................. <"participantEjected() " & sName>
  [  7] pusharglistnoret 2 ...................... <me, "participantEjected() " & sName>
  [  9] objcall 20 .............................. me.debug("participantEjected() " & sName)
  [ 11] ret
end
