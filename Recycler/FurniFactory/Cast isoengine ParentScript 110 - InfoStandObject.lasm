property aSprites, oItem, iPreviewRegPoint, aInfoStandProps, aDescriptionTextProps, oDescRect, oDescMember, sButtonBase, aDynamicMembers, sCastLib, sActive, sPressed, bOverwriteImages
global oIsoScene, gCatalog, oDenizenManager, oStudio, oPossessionStudio, ElementMgr, oStudioMap

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"InfoStandDescription">
  [  4] pusharglist 1 ........................... <"InfoStandDescription">
  [  6] extcall 454 ............................. <member("InfoStandDescription")>
  [  9] setobjprop 1418 ......................... me.oDescMember = member("InfoStandDescription")
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 1418 ..................... <me.oDescMember>
  [ 17] pushint16 255 ........................... <255>
  [ 20] setobjprop 622 .......................... me.oDescMember.backColor = 255
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 1418 ..................... <me.oDescMember>
  [ 28] pushint8 10 ............................. <10>
  [ 30] setobjprop 1295 ......................... me.oDescMember.fontSize = 10
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 1418 ..................... <me.oDescMember>
  [ 38] pushcons 1 .............................. <"plain">
  [ 40] setobjprop 1297 ......................... me.oDescMember.fontStyle = "plain"
  [ 43] getparam 0 .............................. <me>
  [ 45] pushsymb 454 ............................ <#member>
  [ 48] pushcons 2 .............................. <"cc.infostand">
  [ 50] pushsymb 144 ............................ <#x>
  [ 52] pushint16 695 ........................... <695>
  [ 55] pushsymb 315 ............................ <#y>
  [ 58] pushint16 345 ........................... <345>
  [ 61] pushsymb 462 ............................ <#ink>
  [ 64] pushint8 8 .............................. <8>
  [ 66] pusharglist 8 ........................... <[#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]>
  [ 68] pushproplist ............................ <[#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]>
  [ 69] setobjprop 1419 ......................... me.aInfoStandProps = [#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]
  [ 72] getparam 0 .............................. <me>
  [ 74] pushint16 723 ........................... <723>
  [ 77] pushint16 364 ........................... <364>
  [ 80] pusharglist 2 ........................... <723, 364>
  [ 82] extcall 295 ............................. <point(723, 364)>
  [ 85] setobjprop 1420 ......................... me.iPreviewRegPoint = point(723, 364)
  [ 88] pushint16 560 ........................... <560>
  [ 91] setlocal 0 .............................. iDescX = 560
  [ 93] pushint16 380 ........................... <380>
  [ 96] setlocal 1 .............................. iDescY = 380
  [ 98] pushint16 190 ........................... <190>
  [101] setlocal 2 .............................. iDescWidth = 190
  [103] pushint8 55 ............................. <55>
  [105] setlocal 3 .............................. iDescHeight = 55
  [107] getparam 0 .............................. <me>
  [109] getlocal 0 .............................. <iDescX>
  [111] getlocal 1 .............................. <iDescY>
  [113] getlocal 0 .............................. <iDescX>
  [115] getlocal 2 .............................. <iDescWidth>
  [117] add ..................................... <iDescX + iDescWidth>
  [118] getlocal 1 .............................. <iDescY>
  [120] getlocal 3 .............................. <iDescHeight>
  [122] add ..................................... <iDescY + iDescHeight>
  [123] pusharglist 4 ........................... <iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight>
  [125] extcall 477 ............................. <rect(iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight)>
  [128] setobjprop 1421 ......................... me.oDescRect = rect(iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight)
  [131] getparam 0 .............................. <me>
  [133] pushsymb 454 ............................ <#member>
  [136] getparam 0 .............................. <me>
  [138] getobjprop 1418 ......................... <me.oDescMember>
  [141] pushsymb 144 ............................ <#x>
  [143] getparam 0 .............................. <me>
  [145] getchainedprop 1421 ..................... <me.oDescRect>
  [148] getobjprop 668 .......................... <me.oDescRect.left>
  [151] pushsymb 315 ............................ <#y>
  [154] getparam 0 .............................. <me>
  [156] getchainedprop 1421 ..................... <me.oDescRect>
  [159] getobjprop 480 .......................... <me.oDescRect.top>
  [162] pushsymb 462 ............................ <#ink>
  [165] pushint8 8 .............................. <8>
  [167] pusharglist 8 ........................... <[#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]>
  [169] pushproplist ............................ <[#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]>
  [170] setobjprop 1422 ......................... me.aDescriptionTextProps = [#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]
  [173] getparam 0 .............................. <me>
  [175] pushcons 3 .............................. <"d1">
  [177] setobjprop 1423 ......................... me.sButtonBase = "d1"
  [180] getparam 0 .............................. <me>
  [182] pusharglist 0 ........................... <[]>
  [184] pushlist ................................ <[]>
  [185] setobjprop 1424 ......................... me.aDynamicMembers = []
  [188] getparam 0 .............................. <me>
  [190] pushcons 4 .............................. <"IsoEngine">
  [192] setobjprop 253 .......................... me.sCastLib = "IsoEngine"
  [194] getparam 0 .............................. <me>
  [196] pushcons 5 .............................. <"active">
  [198] setobjprop 1425 ......................... me.sActive = "active"
  [201] getparam 0 .............................. <me>
  [203] pushcons 6 .............................. <"pressed">
  [205] setobjprop 1426 ......................... me.sPressed = "pressed"
  [208] getparam 0 .............................. <me>
  [210] pushint8 1 .............................. <1>
  [212] setobjprop 1427 ......................... me.bOverwriteImages = 1
  [215] getparam 0 .............................. <me>
  [217] pusharglistnoret 1 ...................... <me>
  [219] extcall 92 .............................. return me
  [221] ret
end

on init me
  [  0] ret
end

on clearInfoStand me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 331 ............................. me.destroy()
  [  7] ret
end

on display me, _oItem
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 331 ............................. me.destroy()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <_oItem>
  [ 11] setobjprop 204 .......................... me.oItem = _oItem
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 204 .......................... <me.oItem>
  [ 17] pusharglist 1 ........................... <me.oItem>
  [ 19] extcall 105 ............................. <voidp(me.oItem)>
  [ 21] jmpifz [ 28] ............................ if voidp(me.oItem) then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 92 .............................. return 
  [ 28] getprop 204 ............................. <oItem>
  [ 30] pusharglist 1 ........................... <oItem>
  [ 32] objcall 203 ............................. <oItem.isWallItem()>
  [ 34] jmpifz [ 86] ............................ if oItem.isWallItem() then
  [ 37] getglobal 316 ........................... <oStudioMap>
  [ 40] pusharglist 1 ........................... <oStudioMap>
  [ 42] objcall 317 ............................. <oStudioMap.isPrivate()>
  [ 45] not ..................................... <not oStudioMap.isPrivate()>
  [ 46] jmpifz [ 54] ............................ if not oStudioMap.isPrivate() then
  [ 49] pushzero ................................ <0>
  [ 50] pusharglistnoret 1 ...................... <0>
  [ 52] extcall 92 .............................. return 0
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglistnoret 1 ...................... <me>
  [ 58] objcall 1404 ............................ me.displayInfoStand()
  [ 61] getparam 0 .............................. <me>
  [ 63] pusharglistnoret 1 ...................... <me>
  [ 65] objcall 1401 ............................ me.displayWallItem()
  [ 68] getparam 0 .............................. <me>
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglist 1 ........................... <me>
  [ 74] objcall 1410 ............................ <me.getWallItemButtonList()>
  [ 77] pusharglistnoret 2 ...................... <me, me.getWallItemButtonList()>
  [ 79] objcall 1411 ............................ me.displayButtons(me.getWallItemButtonList())
  [ 82] pusharglistnoret 0 ...................... <>
  [ 84] extcall 92 .............................. return 
  [ 86] getprop 204 ............................. <oItem>
  [ 88] pusharglist 1 ........................... <oItem>
  [ 90] objcall 200 ............................. <oItem.isFurniItem()>
  [ 92] jmpifz [157] ............................ if oItem.isFurniItem() then
  [ 95] getglobal 316 ........................... <oStudioMap>
  [ 98] pusharglist 1 ........................... <oStudioMap>
  [100] objcall 317 ............................. <oStudioMap.isPrivate()>
  [103] not ..................................... <not oStudioMap.isPrivate()>
  [104] jmpifz [112] ............................ if not oStudioMap.isPrivate() then
  [107] pushzero ................................ <0>
  [108] pusharglistnoret 1 ...................... <0>
  [110] extcall 92 .............................. return 0
  [112] getprop 204 ............................. <oItem>
  [114] getobjprop 1206 ......................... <oItem.bHasPreview>
  [117] not ..................................... <not oItem.bHasPreview>
  [118] jmpifz [125] ............................ if not oItem.bHasPreview then
  [121] pusharglistnoret 0 ...................... <>
  [123] extcall 92 .............................. return 
  [125] getparam 0 .............................. <me>
  [127] pusharglistnoret 1 ...................... <me>
  [129] objcall 1404 ............................ me.displayInfoStand()
  [132] getparam 0 .............................. <me>
  [134] pusharglistnoret 1 ...................... <me>
  [136] objcall 1402 ............................ me.displayFurniItem()
  [139] getparam 0 .............................. <me>
  [141] getparam 0 .............................. <me>
  [143] pusharglist 1 ........................... <me>
  [145] objcall 1408 ............................ <me.getFurniItemButtonList()>
  [148] pusharglistnoret 2 ...................... <me, me.getFurniItemButtonList()>
  [150] objcall 1411 ............................ me.displayButtons(me.getFurniItemButtonList())
  [153] pusharglistnoret 0 ...................... <>
  [155] extcall 92 .............................. return 
  [157] getprop 204 ............................. <oItem>
  [159] pusharglist 1 ........................... <oItem>
  [161] objcall 199 ............................. <oItem.isAvatar()>
  [163] jmpifz [198] ............................ if oItem.isAvatar() then
  [166] getparam 0 .............................. <me>
  [168] pusharglistnoret 1 ...................... <me>
  [170] objcall 1404 ............................ me.displayInfoStand()
  [173] getparam 0 .............................. <me>
  [175] pusharglistnoret 1 ...................... <me>
  [177] objcall 1403 ............................ me.displayAvatar()
  [180] getparam 0 .............................. <me>
  [182] getparam 0 .............................. <me>
  [184] pusharglist 1 ........................... <me>
  [186] objcall 1409 ............................ <me.getAvatarButtonList()>
  [189] pusharglistnoret 2 ...................... <me, me.getAvatarButtonList()>
  [191] objcall 1411 ............................ me.displayButtons(me.getAvatarButtonList())
  [194] pusharglistnoret 0 ...................... <>
  [196] extcall 92 .............................. return 
  [198] ret
end

on displayCd me, foCd
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 92 .............................. return 
  [ 13] getparam 1 .............................. <foCd>
  [ 15] pusharglist 1 ........................... <foCd>
  [ 17] extcall 105 ............................. <voidp(foCd)>
  [ 19] jmpifz [ 26] ............................ if voidp(foCd) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 92 .............................. return 
  [ 26] getparam 1 .............................. <foCd>
  [ 28] pusharglist 1 ........................... <foCd>
  [ 30] objcall 1432 ............................ <foCd.getCatId()>
  [ 33] setlocal 0 .............................. iCatId = foCd.getCatId()
  [ 35] getparam 1 .............................. <foCd>
  [ 37] pusharglist 1 ........................... <foCd>
  [ 39] objcall 1433 ............................ <foCd.getAuthorName()>
  [ 42] setlocal 1 .............................. sAuthor = foCd.getAuthorName()
  [ 44] getparam 1 .............................. <foCd>
  [ 46] pusharglist 1 ........................... <foCd>
  [ 48] objcall 1434 ............................ <foCd.getSongName()>
  [ 51] setlocal 2 .............................. sSongName = foCd.getSongName()
  [ 53] getglobal 1435 .......................... <gCatalog>
  [ 56] getlocal 0 .............................. <iCatId>
  [ 58] pusharglist 1 ........................... <iCatId>
  [ 60] extcall 107 ............................. <integer(iCatId)>
  [ 62] pusharglist 2 ........................... <gCatalog, integer(iCatId)>
  [ 64] objcall 1436 ............................ <gCatalog.getItemByProdId(integer(iCatId))>
  [ 67] setlocal 3 .............................. aCatItem = gCatalog.getItemByProdId(integer(iCatId))
  [ 69] getlocal 3 .............................. <aCatItem>
  [ 71] pusharglist 1 ........................... <aCatItem>
  [ 73] extcall 105 ............................. <voidp(aCatItem)>
  [ 75] jmpifz [ 82] ............................ if voidp(aCatItem) then
  [ 78] pusharglistnoret 0 ...................... <>
  [ 80] extcall 92 .............................. return 
  [ 82] getlocal 3 .............................. <aCatItem>
  [ 84] pushsymb 1027 ........................... <#imageBase>
  [ 87] pusharglist 2 ........................... <aCatItem, #imageBase>
  [ 89] objcall 196 ............................. <aCatItem[#imageBase]>
  [ 91] setlocal 4 .............................. sImageBase = aCatItem[#imageBase]
  [ 93] getlocal 4 .............................. <sImageBase>
  [ 95] pushcons 7 .............................. <"_small">
  [ 97] joinstr ................................. <sImageBase & "_small">
  [ 98] pusharglist 1 ........................... <sImageBase & "_small">
  [100] extcall 454 ............................. <member(sImageBase & "_small")>
  [103] setlocal 5 .............................. oPreviewImage = member(sImageBase & "_small")
  [105] getlocal 5 .............................. <oPreviewImage>
  [107] getobjprop 606 .......................... <oPreviewImage.memberNum>
  [110] pushint8 1 .............................. <1>
  [112] inv ..................................... <-1>
  [113] eq ...................................... <oPreviewImage.memberNum = -1>
  [114] jmpifz [121] ............................ if oPreviewImage.memberNum = -1 then
  [117] pusharglistnoret 0 ...................... <>
  [119] extcall 92 .............................. return 
  [121] getparam 0 .............................. <me>
  [123] pusharglistnoret 1 ...................... <me>
  [125] objcall 331 ............................. me.destroy()
  [128] getparam 0 .............................. <me>
  [130] pusharglistnoret 1 ...................... <me>
  [132] objcall 1404 ............................ me.displayInfoStand()
  [135] getparam 0 .............................. <me>
  [137] getlocal 5 .............................. <oPreviewImage>
  [139] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [141] objcall 1405 ............................ me.displayPreviewImage(oPreviewImage)
  [144] pushcons 8 .............................. <"NOW PLAYING">
  [146] pushcons 9 .............................. <RETURN>
  [148] joinstr ................................. <"NOW PLAYING" & RETURN>
  [149] getlocal 2 .............................. <sSongName>
  [151] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName>
  [152] pushcons 9 .............................. <RETURN>
  [154] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN>
  [155] pushcons 10 ............................. <"by: ">
  [157] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: ">
  [158] getlocal 1 .............................. <sAuthor>
  [160] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor>
  [161] pushcons 9 .............................. <RETURN>
  [163] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN>
  [164] setlocal 6 .............................. sText = "NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN
  [166] getglobal 211 ........................... <oStudio>
  [168] pusharglist 1 ........................... <oStudio>
  [170] objcall 212 ............................. <oStudio.getcdplayer()>
  [172] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [174] objcall 1437 ............................ <oStudio.getcdplayer().getThumbsUpVotes()>
  [177] setlocal 7 .............................. iThumbsUp = oStudio.getcdplayer().getThumbsUpVotes()
  [179] getglobal 211 ........................... <oStudio>
  [181] pusharglist 1 ........................... <oStudio>
  [183] objcall 212 ............................. <oStudio.getcdplayer()>
  [185] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [187] objcall 1438 ............................ <oStudio.getcdplayer().getThumbsDownVotes()>
  [190] setlocal 8 .............................. iThumbsDown = oStudio.getcdplayer().getThumbsDownVotes()
  [192] getparam 1 .............................. <foCd>
  [194] pusharglist 1 ........................... <foCd>
  [196] objcall 1416 ............................ <foCd.hasVoted()>
  [199] setlocal 9 .............................. bHasVoted = foCd.hasVoted()
  [201] getparam 1 .............................. <foCd>
  [203] pusharglist 1 ........................... <foCd>
  [205] objcall 1439 ............................ <foCd.getVote()>
  [208] setlocal 10 ............................. iVote = foCd.getVote()
  [210] getlocal 9 .............................. <bHasVoted>
  [212] jmpifz [249] ............................ if bHasVoted then / else
  [215] getlocal 6 .............................. <sText>
  [217] pushcons 11 ............................. <"Your vote: ">
  [219] joinstr ................................. <sText & "Your vote: ">
  [220] setlocal 6 .............................. sText = sText & "Your vote: "
  [222] getlocal 10 ............................. <iVote>
  [224] pushzero ................................ <0>
  [225] gteq .................................... <iVote >= 0>
  [226] jmpifz [239] ............................ if iVote >= 0 then / else
  [229] getlocal 6 .............................. <sText>
  [231] pushcons 12 ............................. <"Thumbs Up">
  [233] joinstr ................................. <sText & "Thumbs Up">
  [234] setlocal 6 .............................. sText = sText & "Thumbs Up"
  [236] jmp [246]
  [239] getlocal 6 .............................. <sText>
  [241] pushcons 13 ............................. <"Thumbs Down">
  [243] joinstr ................................. <sText & "Thumbs Down">
  [244] setlocal 6 .............................. sText = sText & "Thumbs Down"
  [246] jmp [266]
  [249] getlocal 7 .............................. <iThumbsUp>
  [251] pushzero ................................ <0>
  [252] gt ...................................... <iThumbsUp > 0>
  [253] jmpifz [266] ............................ if iThumbsUp > 0 then
  [256] getlocal 6 .............................. <sText>
  [258] pushcons 14 ............................. <"Positive Votes: ">
  [260] joinstr ................................. <sText & "Positive Votes: ">
  [261] getlocal 7 .............................. <iThumbsUp>
  [263] joinstr ................................. <sText & "Positive Votes: " & iThumbsUp>
  [264] setlocal 6 .............................. sText = sText & "Positive Votes: " & iThumbsUp
  [266] getparam 0 .............................. <me>
  [268] getlocal 6 .............................. <sText>
  [270] pusharglistnoret 2 ...................... <me, sText>
  [272] objcall 1406 ............................ me.displayDescription(sText)
  [275] getparam 0 .............................. <me>
  [277] getparam 0 .............................. <me>
  [279] pusharglist 1 ........................... <me>
  [281] objcall 1407 ............................ <me.getBurnedCdButtonList()>
  [284] pusharglistnoret 2 ...................... <me, me.getBurnedCdButtonList()>
  [286] objcall 1411 ............................ me.displayButtons(me.getBurnedCdButtonList())
  [289] ret
end

on displayWallItem me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 204 ...................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 701 ............................. <me.oItem.getPreviewImage()>
  [  9] setlocal 0 .............................. oPreviewImage = me.oItem.getPreviewImage()
  [ 11] getparam 0 .............................. <me>
  [ 13] getlocal 0 .............................. <oPreviewImage>
  [ 15] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 17] objcall 1405 ............................ me.displayPreviewImage(oPreviewImage)
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 204 ...................... <me.oItem>
  [ 24] pusharglist 1 ........................... <me.oItem>
  [ 26] objcall 177 ............................. <me.oItem.getProdId()>
  [ 28] setlocal 1 .............................. iProdId = me.oItem.getProdId()
  [ 30] getglobal 1435 .......................... <gCatalog>
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 204 ...................... <me.oItem>
  [ 37] pusharglist 1 ........................... <me.oItem>
  [ 39] objcall 177 ............................. <me.oItem.getProdId()>
  [ 41] pusharglist 2 ........................... <gCatalog, me.oItem.getProdId()>
  [ 43] objcall 1436 ............................ <gCatalog.getItemByProdId(me.oItem.getProdId())>
  [ 46] setlocal 2 .............................. aCatalogItem = gCatalog.getItemByProdId(me.oItem.getProdId())
  [ 48] getlocal 2 .............................. <aCatalogItem>
  [ 50] pushsymb 625 ............................ <#name>
  [ 53] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 55] objcall 196 ............................. <aCatalogItem[#name]>
  [ 57] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 59] getlocal 2 .............................. <aCatalogItem>
  [ 61] pushsymb 1450 ........................... <#roomDesc>
  [ 64] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 66] objcall 196 ............................. <aCatalogItem[#roomDesc]>
  [ 68] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 70] getlocal 3 .............................. <sName>
  [ 72] pushcons 9 .............................. <RETURN>
  [ 74] joinstr ................................. <sName & RETURN>
  [ 75] getlocal 4 .............................. <sRoomDesc>
  [ 77] joinstr ................................. <sName & RETURN & sRoomDesc>
  [ 78] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [ 80] getparam 0 .............................. <me>
  [ 82] getlocal 5 .............................. <sText>
  [ 84] pusharglistnoret 2 ...................... <me, sText>
  [ 86] objcall 1406 ............................ me.displayDescription(sText)
  [ 89] ret
end

on displayFurniItem me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 204 ...................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 701 ............................. <me.oItem.getPreviewImage()>
  [  9] setlocal 0 .............................. oPreviewImage = me.oItem.getPreviewImage()
  [ 11] getparam 0 .............................. <me>
  [ 13] getlocal 0 .............................. <oPreviewImage>
  [ 15] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 17] objcall 1405 ............................ me.displayPreviewImage(oPreviewImage)
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 204 ...................... <me.oItem>
  [ 24] pusharglist 1 ........................... <me.oItem>
  [ 26] objcall 177 ............................. <me.oItem.getProdId()>
  [ 28] setlocal 1 .............................. iProdId = me.oItem.getProdId()
  [ 30] getglobal 1435 .......................... <gCatalog>
  [ 33] getparam 0 .............................. <me>
  [ 35] getchainedprop 204 ...................... <me.oItem>
  [ 37] pusharglist 1 ........................... <me.oItem>
  [ 39] objcall 177 ............................. <me.oItem.getProdId()>
  [ 41] pusharglist 2 ........................... <gCatalog, me.oItem.getProdId()>
  [ 43] objcall 1436 ............................ <gCatalog.getItemByProdId(me.oItem.getProdId())>
  [ 46] setlocal 2 .............................. aCatalogItem = gCatalog.getItemByProdId(me.oItem.getProdId())
  [ 48] getlocal 2 .............................. <aCatalogItem>
  [ 50] pushsymb 625 ............................ <#name>
  [ 53] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 55] objcall 196 ............................. <aCatalogItem[#name]>
  [ 57] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 59] getlocal 2 .............................. <aCatalogItem>
  [ 61] pushsymb 1450 ........................... <#roomDesc>
  [ 64] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 66] objcall 196 ............................. <aCatalogItem[#roomDesc]>
  [ 68] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 70] getlocal 3 .............................. <sName>
  [ 72] pushcons 9 .............................. <RETURN>
  [ 74] joinstr ................................. <sName & RETURN>
  [ 75] getlocal 4 .............................. <sRoomDesc>
  [ 77] joinstr ................................. <sName & RETURN & sRoomDesc>
  [ 78] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 204 ...................... <me.oItem>
  [ 84] pusharglist 1 ........................... <me.oItem>
  [ 86] objcall 1120 ............................ <me.oItem.getAttributes()>
  [ 89] setlocal 6 .............................. aAttributes = me.oItem.getAttributes()
  [ 91] getparam 0 .............................. <me>
  [ 93] getchainedprop 204 ...................... <me.oItem>
  [ 95] pusharglist 1 ........................... <me.oItem>
  [ 97] objcall 724 ............................. <me.oItem.isBurnedCd()>
  [100] jmpifz [137] ............................ if me.oItem.isBurnedCd() then
  [103] getlocal 6 .............................. <aAttributes>
  [105] pushsymb 1454 ........................... <#ownerName>
  [108] pusharglist 2 ........................... <aAttributes, #ownerName>
  [110] objcall 196 ............................. <aAttributes[#ownerName]>
  [112] pushcons 15 ............................. <": ">
  [114] joinstr ................................. <aAttributes[#ownerName] & ": ">
  [115] getlocal 6 .............................. <aAttributes>
  [117] pushsymb 1455 ........................... <#songName>
  [120] pusharglist 2 ........................... <aAttributes, #songName>
  [122] objcall 196 ............................. <aAttributes[#songName]>
  [124] joinstr ................................. <aAttributes[#ownerName] & ": " & aAttributes[#songName]>
  [125] setlocal 4 .............................. sRoomDesc = aAttributes[#ownerName] & ": " & aAttributes[#songName]
  [127] getlocal 3 .............................. <sName>
  [129] pushcons 9 .............................. <RETURN>
  [131] joinstr ................................. <sName & RETURN>
  [132] getlocal 4 .............................. <sRoomDesc>
  [134] joinstr ................................. <sName & RETURN & sRoomDesc>
  [135] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [137] getparam 0 .............................. <me>
  [139] getchainedprop 204 ...................... <me.oItem>
  [141] pusharglist 1 ........................... <me.oItem>
  [143] objcall 177 ............................. <me.oItem.getProdId()>
  [145] getglobal 88 ............................ <oIsoScene>
  [147] getchainedprop 58 ....................... <oIsoScene.oIsoConstants>
  [149] getobjprop 362 .......................... <oIsoScene.oIsoConstants.TELEPORTER>
  [152] eq ...................................... <me.oItem.getProdId() = oIsoScene.oIsoConstants.TELEPORTER>
  [153] jmpifz [211] ............................ if me.oItem.getProdId() = oIsoScene.oIsoConstants.TELEPORTER then
  [156] getlocal 6 .............................. <aAttributes>
  [158] pushsymb 1456 ........................... <#destinationName>
  [161] pusharglist 2 ........................... <aAttributes, #destinationName>
  [163] objcall 196 ............................. <aAttributes[#destinationName]>
  [165] setlocal 7 .............................. sDestinationName = aAttributes[#destinationName]
  [167] getlocal 7 .............................. <sDestinationName>
  [169] pusharglist 1 ........................... <sDestinationName>
  [171] extcall 105 ............................. <voidp(sDestinationName)>
  [173] not ..................................... <not voidp(sDestinationName)>
  [174] getlocal 7 .............................. <sDestinationName>
  [176] pushcons 16 ............................. <EMPTY>
  [178] nteq .................................... <sDestinationName <> EMPTY>
  [179] and ..................................... <not voidp(sDestinationName) and (sDestinationName <> EMPTY)>
  [180] jmpifz [211] ............................ if not voidp(sDestinationName) and (sDestinationName <> EMPTY) then
  [183] getlocal 6 .............................. <aAttributes>
  [185] pushsymb 1457 ........................... <#destinationOwner>
  [188] pusharglist 2 ........................... <aAttributes, #destinationOwner>
  [190] objcall 196 ............................. <aAttributes[#destinationOwner]>
  [192] pushcons 15 ............................. <": ">
  [194] joinstr ................................. <aAttributes[#destinationOwner] & ": ">
  [195] getlocal 6 .............................. <aAttributes>
  [197] pushsymb 1456 ........................... <#destinationName>
  [200] pusharglist 2 ........................... <aAttributes, #destinationName>
  [202] objcall 196 ............................. <aAttributes[#destinationName]>
  [204] joinstr ................................. <aAttributes[#destinationOwner] & ": " & aAttributes[#destinationName]>
  [205] setlocal 4 .............................. sRoomDesc = aAttributes[#destinationOwner] & ": " & aAttributes[#destinationName]
  [207] getlocal 4 .............................. <sRoomDesc>
  [209] setlocal 5 .............................. sText = sRoomDesc
  [211] getparam 0 .............................. <me>
  [213] getlocal 5 .............................. <sText>
  [215] pusharglistnoret 2 ...................... <me, sText>
  [217] objcall 1406 ............................ me.displayDescription(sText)
  [220] ret
end

on displayAvatar me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 204 ...................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 701 ............................. <me.oItem.getPreviewImage()>
  [  9] setlocal 0 .............................. oPreviewImageObject = me.oItem.getPreviewImage()
  [ 11] pushcons 17 ............................. <"_PREVIEW_">
  [ 13] pushcons 18 ............................. <"Internal">
  [ 15] pusharglist 2 ........................... <"_PREVIEW_", "Internal">
  [ 17] extcall 454 ............................. <member("_PREVIEW_", "Internal")>
  [ 20] setlocal 1 .............................. oPreviewMember = member("_PREVIEW_", "Internal")
  [ 22] getlocal 1 .............................. <oPreviewMember>
  [ 24] getchainedprop 476 ...................... <oPreviewMember.image>
  [ 27] getlocal 0 .............................. <oPreviewImageObject>
  [ 29] getlocal 0 .............................. <oPreviewImageObject>
  [ 31] getobjprop 477 .......................... <oPreviewImageObject.rect>
  [ 34] getlocal 0 .............................. <oPreviewImageObject>
  [ 36] getobjprop 477 .......................... <oPreviewImageObject.rect>
  [ 39] pusharglistnoret 4 ...................... <oPreviewMember.image, oPreviewImageObject, oPreviewImageObject.rect, oPreviewImageObject.rect>
  [ 41] objcall 498 ............................. oPreviewMember.image.copyPixels(oPreviewImageObject, oPreviewImageObject.rect, oPreviewImageObject.rect)
  [ 44] getparam 0 .............................. <me>
  [ 46] getlocal 1 .............................. <oPreviewMember>
  [ 48] pusharglist 2 ........................... <me, oPreviewMember>
  [ 50] objcall 1405 ............................ <me.displayPreviewImage(oPreviewMember)>
  [ 53] setlocal 2 .............................. iSprite = me.displayPreviewImage(oPreviewMember)
  [ 55] getlocal 2 .............................. <iSprite>
  [ 57] pusharglist 1 ........................... <iSprite>
  [ 59] extcall 451 ............................. <sprite(iSprite)>
  [ 62] pushint8 36 ............................. <36>
  [ 64] setobjprop 462 .......................... sprite(iSprite).ink = 36
  [ 67] getglobal 316 ........................... <oStudioMap>
  [ 70] pusharglist 1 ........................... <oStudioMap>
  [ 72] objcall 317 ............................. <oStudioMap.isPrivate()>
  [ 75] jmpifz [105] ............................ if oStudioMap.isPrivate() then / else
  [ 78] getlocal 2 .............................. <iSprite>
  [ 80] pusharglist 1 ........................... <iSprite>
  [ 82] extcall 451 ............................. <sprite(iSprite)>
  [ 85] pushint16 255 ........................... <255>
  [ 88] pushint16 255 ........................... <255>
  [ 91] pushint16 255 ........................... <255>
  [ 94] pusharglist 3 ........................... <255, 255, 255>
  [ 96] extcall 478 ............................. <rgb(255, 255, 255)>
  [ 99] setobjprop 981 .......................... sprite(iSprite).bgColor = rgb(255, 255, 255)
  [102] jmp [126]
  [105] getlocal 2 .............................. <iSprite>
  [107] pusharglist 1 ........................... <iSprite>
  [109] extcall 451 ............................. <sprite(iSprite)>
  [112] pushint8 104 ............................ <104>
  [114] pushint8 83 ............................. <83>
  [116] pushint8 58 ............................. <58>
  [118] pusharglist 3 ........................... <104, 83, 58>
  [120] extcall 478 ............................. <rgb(104, 83, 58)>
  [123] setobjprop 981 .......................... sprite(iSprite).bgColor = rgb(104, 83, 58)
  [126] getlocal 2 .............................. <iSprite>
  [128] pusharglist 1 ........................... <iSprite>
  [130] extcall 451 ............................. <sprite(iSprite)>
  [133] getlocal 2 .............................. <iSprite>
  [135] pusharglist 1 ........................... <iSprite>
  [137] extcall 451 ............................. <sprite(iSprite)>
  [140] getobjprop 300 .......................... <sprite(iSprite).locV>
  [143] pushint8 10 ............................. <10>
  [145] add ..................................... <sprite(iSprite).locV + 10>
  [146] setobjprop 300 .......................... sprite(iSprite).locV = sprite(iSprite).locV + 10
  [149] getparam 0 .............................. <me>
  [151] getchainedprop 204 ...................... <me.oItem>
  [153] pusharglist 1 ........................... <me.oItem>
  [155] objcall 181 ............................. <me.oItem.getScreenName()>
  [157] pushcons 9 .............................. <RETURN>
  [159] joinstr ................................. <me.oItem.getScreenName() & RETURN>
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 204 ...................... <me.oItem>
  [164] pusharglist 1 ........................... <me.oItem>
  [166] objcall 700 ............................. <me.oItem.getMission()>
  [169] joinstr ................................. <me.oItem.getScreenName() & RETURN & me.oItem.getMission()>
  [170] setlocal 3 .............................. sBaseText = me.oItem.getScreenName() & RETURN & me.oItem.getMission()
  [172] getparam 0 .............................. <me>
  [174] getchainedprop 204 ...................... <me.oItem>
  [176] pusharglist 1 ........................... <me.oItem>
  [178] objcall 721 ............................. <me.oItem.isDrinking()>
  [181] setlocal 4 .............................. bDrinking = me.oItem.isDrinking()
  [183] getparam 0 .............................. <me>
  [185] getchainedprop 204 ...................... <me.oItem>
  [187] pusharglist 1 ........................... <me.oItem>
  [189] objcall 735 ............................. <me.oItem.isTrading()>
  [192] setlocal 5 .............................. bTrading = me.oItem.isTrading()
  [194] getlocal 3 .............................. <sBaseText>
  [196] setlocal 6 .............................. sFinalText = sBaseText
  [198] getlocal 4 .............................. <bDrinking>
  [200] jmpifz [213] ............................ if bDrinking then
  [203] getlocal 3 .............................. <sBaseText>
  [205] pushcons 9 .............................. <RETURN>
  [207] joinstr ................................. <sBaseText & RETURN>
  [208] pushcons 19 ............................. <"Carrying: Coke Bottle">
  [210] joinstr ................................. <sBaseText & RETURN & "Carrying: Coke Bottle">
  [211] setlocal 6 .............................. sFinalText = sBaseText & RETURN & "Carrying: Coke Bottle"
  [213] getlocal 5 .............................. <bTrading>
  [215] jmpifz [228] ............................ if bTrading then
  [218] getlocal 3 .............................. <sBaseText>
  [220] pushcons 9 .............................. <RETURN>
  [222] joinstr ................................. <sBaseText & RETURN>
  [223] pushcons 20 ............................. <"Trading.">
  [225] joinstr ................................. <sBaseText & RETURN & "Trading.">
  [226] setlocal 6 .............................. sFinalText = sBaseText & RETURN & "Trading."
  [228] getparam 0 .............................. <me>
  [230] getlocal 6 .............................. <sFinalText>
  [232] pusharglistnoret 2 ...................... <me, sFinalText>
  [234] objcall 1406 ............................ me.displayDescription(sFinalText)
  [237] ret
end

on displayInfoStand me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 1419 ......................... <me.aInfoStandProps>
  [  9] pusharglist 2 ........................... <oIsoScene.oSpriteManager, me.aInfoStandProps>
  [ 11] objcall 588 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aInfoStandProps)>
  [ 14] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aInfoStandProps)
  [ 16] getlocal 0 .............................. <iSprite>
  [ 18] pusharglist 1 ........................... <iSprite>
  [ 20] extcall 451 ............................. <sprite(iSprite)>
  [ 23] getglobal 88 ............................ <oIsoScene>
  [ 25] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 27] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 29] objcall 422 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 32] setobjprop 482 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 593 ...................... <me.aSprites>
  [ 40] getlocal 0 .............................. <iSprite>
  [ 42] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [ 44] objcall 133 ............................. me.aSprites.add(iSprite)
  [ 46] ret
end

on displayPreviewImage me, oPreviewImage
  [  0] getparam 1 .............................. <oPreviewImage>
  [  2] getobjprop 456 .......................... <oPreviewImage.width>
  [  5] setlocal 0 .............................. iWidth = oPreviewImage.width
  [  7] getparam 1 .............................. <oPreviewImage>
  [  9] getobjprop 457 .......................... <oPreviewImage.height>
  [ 12] setlocal 1 .............................. iHeight = oPreviewImage.height
  [ 14] getparam 0 .............................. <me>
  [ 16] getchainedprop 1420 ..................... <me.iPreviewRegPoint>
  [ 19] getobjprop 299 .......................... <me.iPreviewRegPoint.locH>
  [ 22] getlocal 0 .............................. <iWidth>
  [ 24] pushint8 2 .............................. <2>
  [ 26] div ..................................... <iWidth / 2>
  [ 27] sub ..................................... <me.iPreviewRegPoint.locH - (iWidth / 2)>
  [ 28] setlocal 2 .............................. iLeft = me.iPreviewRegPoint.locH - (iWidth / 2)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 1420 ..................... <me.iPreviewRegPoint>
  [ 35] getobjprop 300 .......................... <me.iPreviewRegPoint.locV>
  [ 38] getlocal 1 .............................. <iHeight>
  [ 40] sub ..................................... <me.iPreviewRegPoint.locV - iHeight>
  [ 41] setlocal 3 .............................. iTop = me.iPreviewRegPoint.locV - iHeight
  [ 43] getlocal 2 .............................. <iLeft>
  [ 45] getlocal 0 .............................. <iWidth>
  [ 47] add ..................................... <iLeft + iWidth>
  [ 48] setlocal 4 .............................. iRight = iLeft + iWidth
  [ 50] getlocal 3 .............................. <iTop>
  [ 52] getlocal 1 .............................. <iHeight>
  [ 54] add ..................................... <iTop + iHeight>
  [ 55] setlocal 5 .............................. iBottom = iTop + iHeight
  [ 57] getlocal 2 .............................. <iLeft>
  [ 59] getlocal 3 .............................. <iTop>
  [ 61] getlocal 4 .............................. <iRight>
  [ 63] getlocal 5 .............................. <iBottom>
  [ 65] pusharglist 4 ........................... <iLeft, iTop, iRight, iBottom>
  [ 67] extcall 477 ............................. <rect(iLeft, iTop, iRight, iBottom)>
  [ 70] setlocal 6 .............................. oRect = rect(iLeft, iTop, iRight, iBottom)
  [ 72] pushsymb 454 ............................ <#member>
  [ 75] getparam 1 .............................. <oPreviewImage>
  [ 77] getobjprop 625 .......................... <oPreviewImage.name>
  [ 80] pushsymb 144 ............................ <#x>
  [ 82] getlocal 2 .............................. <iLeft>
  [ 84] pushsymb 315 ............................ <#y>
  [ 87] getlocal 3 .............................. <iTop>
  [ 89] pushsymb 462 ............................ <#ink>
  [ 92] pushint8 36 ............................. <36>
  [ 94] pusharglist 8 ........................... <[#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]>
  [ 96] pushproplist ............................ <[#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]>
  [ 97] setlocal 7 .............................. aProps = [#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]
  [ 99] getglobal 88 ............................ <oIsoScene>
  [101] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [103] getlocal 7 .............................. <aProps>
  [105] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [107] objcall 588 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [110] setlocal 8 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [112] getlocal 8 .............................. <iSprite>
  [114] pusharglist 1 ........................... <iSprite>
  [116] extcall 451 ............................. <sprite(iSprite)>
  [119] pushint16 255 ........................... <255>
  [122] pushint16 255 ........................... <255>
  [125] pushint16 255 ........................... <255>
  [128] pusharglist 3 ........................... <255, 255, 255>
  [130] extcall 478 ............................. <rgb(255, 255, 255)>
  [133] setobjprop 981 .......................... sprite(iSprite).bgColor = rgb(255, 255, 255)
  [136] getlocal 8 .............................. <iSprite>
  [138] pusharglist 1 ........................... <iSprite>
  [140] extcall 451 ............................. <sprite(iSprite)>
  [143] getlocal 6 .............................. <oRect>
  [145] setobjprop 477 .......................... sprite(iSprite).rect = oRect
  [148] getlocal 8 .............................. <iSprite>
  [150] pusharglist 1 ........................... <iSprite>
  [152] extcall 451 ............................. <sprite(iSprite)>
  [155] getglobal 88 ............................ <oIsoScene>
  [157] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [159] pusharglist 1 ........................... <oIsoScene.oGrid>
  [161] objcall 422 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [164] setobjprop 482 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [167] getparam 0 .............................. <me>
  [169] getchainedprop 593 ...................... <me.aSprites>
  [172] getlocal 8 .............................. <iSprite>
  [174] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [176] objcall 133 ............................. me.aSprites.add(iSprite)
  [178] getlocal 8 .............................. <iSprite>
  [180] pusharglistnoret 1 ...................... <iSprite>
  [182] extcall 92 .............................. return iSprite
  [184] ret
end

on displayDescription me, sText
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 1418 ..................... <me.oDescMember>
  [  5] getparam 1 .............................. <sText>
  [  7] setobjprop 497 .......................... me.oDescMember.text = sText
  [ 10] getglobal 88 ............................ <oIsoScene>
  [ 12] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 1422 ......................... <me.aDescriptionTextProps>
  [ 19] pusharglist 2 ........................... <oIsoScene.oSpriteManager, me.aDescriptionTextProps>
  [ 21] objcall 588 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aDescriptionTextProps)>
  [ 24] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aDescriptionTextProps)
  [ 26] getlocal 0 .............................. <iSprite>
  [ 28] pusharglist 1 ........................... <iSprite>
  [ 30] extcall 451 ............................. <sprite(iSprite)>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 1421 ......................... <me.oDescRect>
  [ 38] setobjprop 477 .......................... sprite(iSprite).rect = me.oDescRect
  [ 41] getlocal 0 .............................. <iSprite>
  [ 43] pusharglist 1 ........................... <iSprite>
  [ 45] extcall 451 ............................. <sprite(iSprite)>
  [ 48] getchainedprop 454 ...................... <sprite(iSprite).member>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 1421 ......................... <me.oDescRect>
  [ 56] setobjprop 477 .......................... sprite(iSprite).member.rect = me.oDescRect
  [ 59] getlocal 0 .............................. <iSprite>
  [ 61] pusharglist 1 ........................... <iSprite>
  [ 63] extcall 451 ............................. <sprite(iSprite)>
  [ 66] getglobal 88 ............................ <oIsoScene>
  [ 68] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 70] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 72] objcall 422 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 75] setobjprop 482 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 78] getparam 0 .............................. <me>
  [ 80] getchainedprop 1418 ..................... <me.oDescMember>
  [ 83] pushint8 1 .............................. <1>
  [ 85] setobjprop 1464 ......................... me.oDescMember.hilite = 1
  [ 88] getparam 0 .............................. <me>
  [ 90] getchainedprop 1418 ..................... <me.oDescMember>
  [ 93] pushcons 1 .............................. <"plain">
  [ 95] setobjprop 1297 ......................... me.oDescMember.fontStyle = "plain"
  [ 98] pushzero ................................ <0>
  [ 99] pushzero ................................ <0>
  [100] pushzero ................................ <0>
  [101] pushzero ................................ <0>
  [102] pushzero ................................ <0>
  [103] pushzero ................................ <0>
  [104] pushint8 1 .............................. <1>
  [106] pushzero ................................ <0>
  [107] pushcons 0 .............................. <"InfoStandDescription">
  [109] pushzero ................................ <0>
  [110] pushcons 21 ............................. <"bold">
  [112] pushint8 3 .............................. <3>
  [114] set 10 .................................. set the textStyle of line 1 of member "InfoStandDescription" to "bold"
  [116] getparam 0 .............................. <me>
  [118] getchainedprop 593 ...................... <me.aSprites>
  [121] getlocal 0 .............................. <iSprite>
  [123] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [125] objcall 133 ............................. me.aSprites.add(iSprite)
  [127] ret
end

on destroy me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 593 .......................... <me.aSprites>
  [  9] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.aSprites>
  [ 11] objcall 586 ............................. oIsoScene.oSpriteManager.returnPooledSprites(me.aSprites)
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 1424 ......................... <me.aDynamicMembers>
  [ 19] peek 0
  [ 21] pusharglist 1
  [ 23] extcall 169
  [ 25] pushint8 1
  [ 27] peek 0
  [ 29] peek 2
  [ 31] lteq
  [ 32] jmpifz [ 82] ............................ repeat with sMemberName in me.aDynamicMembers
  [ 35] peek 2
  [ 37] peek 1
  [ 39] pusharglist 2
  [ 41] extcall 196
  [ 43] setlocal 0
  [ 45] getlocal 0 .............................. <sMemberName>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 253 .......................... <me.sCastLib>
  [ 51] pusharglist 2 ........................... <sMemberName, me.sCastLib>
  [ 53] extcall 454 ............................. <member(sMemberName, me.sCastLib)>
  [ 56] setlocal 1 .............................. oMember = member(sMemberName, me.sCastLib)
  [ 58] getlocal 1 .............................. <oMember>
  [ 60] getobjprop 606 .......................... <oMember.memberNum>
  [ 63] pushint8 1 .............................. <1>
  [ 65] inv ..................................... <-1>
  [ 66] nteq .................................... <oMember.memberNum <> -1>
  [ 67] jmpifz [ 77] ............................ if oMember.memberNum <> -1 then
  [ 70] getlocal 1 .............................. <oMember>
  [ 72] pusharglistnoret 1 ...................... <oMember>
  [ 74] objcall 918 ............................. oMember.erase()
  [ 77] pushint8 1
  [ 79] add
  [ 80] endrepeat [ 27]
  [ 82] pop 3
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglist 0 ........................... <[]>
  [ 88] pushlist ................................ <[]>
  [ 89] setobjprop 593 .......................... me.aSprites = []
  [ 92] ret
end

on getBurnedCdButtonList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aButtonList = []
  [  5] getglobal 211 ........................... <oStudio>
  [  7] pusharglist 1 ........................... <oStudio>
  [  9] objcall 212 ............................. <oStudio.getcdplayer()>
  [ 11] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 13] objcall 214 ............................. <oStudio.getcdplayer().getCd()>
  [ 15] setlocal 1 .............................. foCd = oStudio.getcdplayer().getCd()
  [ 17] getlocal 1 .............................. <foCd>
  [ 19] pusharglist 1 ........................... <foCd>
  [ 21] objcall 1433 ............................ <foCd.getAuthorName()>
  [ 24] setlocal 2 .............................. sAuthor = foCd.getAuthorName()
  [ 26] getglobal 211 ........................... <oStudio>
  [ 28] pusharglist 1 ........................... <oStudio>
  [ 30] objcall 212 ............................. <oStudio.getcdplayer()>
  [ 32] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 34] objcall 182 ............................. <oStudio.getcdplayer().getAvatar()>
  [ 36] getglobal 171 ........................... <oDenizenManager>
  [ 38] pusharglist 1 ........................... <oDenizenManager>
  [ 40] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 42] eq ...................................... <oStudio.getcdplayer().getAvatar() = oDenizenManager.getScreenName()>
  [ 43] jmpifz [ 52] ............................ if oStudio.getcdplayer().getAvatar() = oDenizenManager.getScreenName() then
  [ 46] getlocal 0 .............................. <aButtonList>
  [ 48] pusharglistnoret 1 ...................... <aButtonList>
  [ 50] extcall 92 .............................. return aButtonList
  [ 52] getlocal 1 .............................. <foCd>
  [ 54] pusharglist 1 ........................... <foCd>
  [ 56] objcall 1416 ............................ <foCd.hasVoted()>
  [ 59] setlocal 3 .............................. bHasVoted = foCd.hasVoted()
  [ 61] getlocal 3 .............................. <bHasVoted>
  [ 63] pushzero ................................ <0>
  [ 64] eq ...................................... <bHasVoted = 0>
  [ 65] getlocal 3 .............................. <bHasVoted>
  [ 67] not ..................................... <not bHasVoted>
  [ 68] or ...................................... <(bHasVoted = 0) or not bHasVoted>
  [ 69] jmpifz [ 88] ............................ if (bHasVoted = 0) or not bHasVoted then
  [ 72] getlocal 0 .............................. <aButtonList>
  [ 74] pushcons 12 ............................. <"Thumbs Up">
  [ 76] pusharglistnoret 2 ...................... <aButtonList, "Thumbs Up">
  [ 78] objcall 133 ............................. aButtonList.add("Thumbs Up")
  [ 80] getlocal 0 .............................. <aButtonList>
  [ 82] pushcons 13 ............................. <"Thumbs Down">
  [ 84] pusharglistnoret 2 ...................... <aButtonList, "Thumbs Down">
  [ 86] objcall 133 ............................. aButtonList.add("Thumbs Down")
  [ 88] getlocal 0 .............................. <aButtonList>
  [ 90] pusharglistnoret 1 ...................... <aButtonList>
  [ 92] extcall 92 .............................. return aButtonList
  [ 94] ret
end

on getFurniItemButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 241 ............................. <me.isMod()>
  [  6] setlocal 0 .............................. bIsMod = me.isMod()
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 240 ............................. <me.isOwner()>
  [ 14] setlocal 1 .............................. bIsOwner = me.isOwner()
  [ 16] pusharglist 0 ........................... <[]>
  [ 18] pushlist ................................ <[]>
  [ 19] setlocal 2 .............................. aButtonList = []
  [ 21] getlocal 0 .............................. <bIsMod>
  [ 23] getlocal 1 .............................. <bIsOwner>
  [ 25] or ...................................... <bIsMod or bIsOwner>
  [ 26] jmpifz [105] ............................ if bIsMod or bIsOwner then
  [ 29] getlocal 2 .............................. <aButtonList>
  [ 31] pushcons 22 ............................. <"Move">
  [ 33] pusharglistnoret 2 ...................... <aButtonList, "Move">
  [ 35] objcall 133 ............................. aButtonList.add("Move")
  [ 37] getlocal 2 .............................. <aButtonList>
  [ 39] pushcons 23 ............................. <"Rotate">
  [ 41] pusharglistnoret 2 ...................... <aButtonList, "Rotate">
  [ 43] objcall 133 ............................. aButtonList.add("Rotate")
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 204 ...................... <me.oItem>
  [ 49] pusharglist 1 ........................... <me.oItem>
  [ 51] objcall 1129 ............................ <me.oItem.canPickup()>
  [ 54] jmpifz [ 65] ............................ if me.oItem.canPickup() then
  [ 57] getlocal 2 .............................. <aButtonList>
  [ 59] pushcons 24 ............................. <"Pick up">
  [ 61] pusharglistnoret 2 ...................... <aButtonList, "Pick up">
  [ 63] objcall 133 ............................. aButtonList.add("Pick up")
  [ 65] getparam 0 .............................. <me>
  [ 67] getchainedprop 204 ...................... <me.oItem>
  [ 69] pusharglist 1 ........................... <me.oItem>
  [ 71] objcall 1127 ............................ <me.oItem.canDelete()>
  [ 74] jmpifz [ 85] ............................ if me.oItem.canDelete() then
  [ 77] getlocal 2 .............................. <aButtonList>
  [ 79] pushcons 25 ............................. <"Delete">
  [ 81] pusharglistnoret 2 ...................... <aButtonList, "Delete">
  [ 83] objcall 133 ............................. aButtonList.add("Delete")
  [ 85] getparam 0 .............................. <me>
  [ 87] getchainedprop 204 ...................... <me.oItem>
  [ 89] pusharglist 1 ........................... <me.oItem>
  [ 91] objcall 1128 ............................ <me.oItem.canUse()>
  [ 94] jmpifz [105] ............................ if me.oItem.canUse() then
  [ 97] getlocal 2 .............................. <aButtonList>
  [ 99] pushcons 26 ............................. <"Use">
  [101] pusharglistnoret 2 ...................... <aButtonList, "Use">
  [103] objcall 133 ............................. aButtonList.add("Use")
  [105] getlocal 2 .............................. <aButtonList>
  [107] pusharglistnoret 1 ...................... <aButtonList>
  [109] extcall 92 .............................. return aButtonList
  [111] ret
end

on getAvatarButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 241 ............................. <me.isMod()>
  [  6] setlocal 0 .............................. bIsMod = me.isMod()
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 1417 ............................ <me.isMe()>
  [ 15] setlocal 1 .............................. bIsMe = me.isMe()
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 240 ............................. <me.isOwner()>
  [ 23] setlocal 2 .............................. bIsOwner = me.isOwner()
  [ 25] pusharglist 0 ........................... <[]>
  [ 27] pushlist ................................ <[]>
  [ 28] setlocal 3 .............................. aButtonList = []
  [ 30] getlocal 1 .............................. <bIsMe>
  [ 32] jmpifz [161] ............................ if bIsMe then / else
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 204 ...................... <me.oItem>
  [ 39] pusharglist 1 ........................... <me.oItem>
  [ 41] objcall 715 ............................. <me.oItem.isSitting()>
  [ 44] setlocal 4 .............................. bIsSitting = me.oItem.isSitting()
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 204 ...................... <me.oItem>
  [ 50] pusharglist 1 ........................... <me.oItem>
  [ 52] objcall 718 ............................. <me.oItem.isDancing()>
  [ 55] setlocal 5 .............................. bIsDancing = me.oItem.isDancing()
  [ 57] getlocal 5 .............................. <bIsDancing>
  [ 59] jmpifz [ 73] ............................ if bIsDancing then / else
  [ 62] getlocal 3 .............................. <aButtonList>
  [ 64] pushcons 27 ............................. <"Stop Dancing">
  [ 66] pusharglistnoret 2 ...................... <aButtonList, "Stop Dancing">
  [ 68] objcall 133 ............................. aButtonList.add("Stop Dancing")
  [ 70] jmp [ 87]
  [ 73] getlocal 4 .............................. <bIsSitting>
  [ 75] not ..................................... <not bIsSitting>
  [ 76] jmpifz [ 87] ............................ if not bIsSitting then
  [ 79] getlocal 3 .............................. <aButtonList>
  [ 81] pushcons 28 ............................. <"Dance">
  [ 83] pusharglistnoret 2 ...................... <aButtonList, "Dance">
  [ 85] objcall 133 ............................. aButtonList.add("Dance")
  [ 87] getglobal 211 ........................... <oStudio>
  [ 89] pusharglist 1 ........................... <oStudio>
  [ 91] extcall 105 ............................. <voidp(oStudio)>
  [ 93] jmpifz [102] ............................ if voidp(oStudio) then / else
  [ 96] pushzero ................................ <0>
  [ 97] setlocal 6 .............................. bIsPlaying = 0
  [ 99] jmp [117]
  [102] getglobal 211 ........................... <oStudio>
  [104] pusharglist 1 ........................... <oStudio>
  [106] objcall 212 ............................. <oStudio.getcdplayer()>
  [108] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [110] objcall 213 ............................. <oStudio.getcdplayer().isPlaying()>
  [112] pushint8 1 .............................. <1>
  [114] eq ...................................... <oStudio.getcdplayer().isPlaying() = 1>
  [115] setlocal 6 .............................. bIsPlaying = oStudio.getcdplayer().isPlaying() = 1
  [117] getlocal 6 .............................. <bIsPlaying>
  [119] jmpifz [158] ............................ if bIsPlaying then
  [122] getglobal 211 ........................... <oStudio>
  [124] pusharglist 1 ........................... <oStudio>
  [126] objcall 212 ............................. <oStudio.getcdplayer()>
  [128] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [130] objcall 182 ............................. <oStudio.getcdplayer().getAvatar()>
  [132] setlocal 7 .............................. sCdPlayerAvatar = oStudio.getcdplayer().getAvatar()
  [134] getlocal 7 .............................. <sCdPlayerAvatar>
  [136] getglobal 171 ........................... <oDenizenManager>
  [138] pusharglist 1 ........................... <oDenizenManager>
  [140] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [142] eq ...................................... <sCdPlayerAvatar = oDenizenManager.getScreenName()>
  [143] setlocal 8 .............................. bIsPerforming = sCdPlayerAvatar = oDenizenManager.getScreenName()
  [145] getlocal 8 .............................. <bIsPerforming>
  [147] jmpifz [158] ............................ if bIsPerforming then
  [150] getlocal 3 .............................. <aButtonList>
  [152] pushcons 29 ............................. <"Stop Performing">
  [154] pusharglistnoret 2 ...................... <aButtonList, "Stop Performing">
  [156] objcall 133 ............................. aButtonList.add("Stop Performing")
  [158] jmp [263]
  [161] getlocal 2 .............................. <bIsOwner>
  [163] getlocal 0 .............................. <bIsMod>
  [165] or ...................................... <bIsOwner or bIsMod>
  [166] jmpifz [177] ............................ if bIsOwner or bIsMod then
  [169] getlocal 3 .............................. <aButtonList>
  [171] pushcons 30 ............................. <"Kick Out">
  [173] pusharglistnoret 2 ...................... <aButtonList, "Kick Out">
  [175] objcall 133 ............................. aButtonList.add("Kick Out")
  [177] getparam 0 .............................. <me>
  [179] getchainedprop 204 ...................... <me.oItem>
  [181] pusharglist 1 ........................... <me.oItem>
  [183] objcall 735 ............................. <me.oItem.isTrading()>
  [186] setlocal 9 .............................. bIsTrading = me.oItem.isTrading()
  [188] getlocal 9 .............................. <bIsTrading>
  [190] not ..................................... <not bIsTrading>
  [191] jmpifz [202] ............................ if not bIsTrading then
  [194] getlocal 3 .............................. <aButtonList>
  [196] pushcons 31 ............................. <"Trade">
  [198] pusharglistnoret 2 ...................... <aButtonList, "Trade">
  [200] objcall 133 ............................. aButtonList.add("Trade")
  [202] getglobal 150 ........................... <ElementMgr>
  [204] pusharglist 1 ........................... <ElementMgr>
  [206] objcall 1467 ............................ <ElementMgr.getMessengerObject()>
  [209] setlocal 10 ............................. oMessenger = ElementMgr.getMessengerObject()
  [211] getlocal 10 ............................. <oMessenger>
  [213] getparam 0 .............................. <me>
  [215] getchainedprop 204 ...................... <me.oItem>
  [217] pusharglist 1 ........................... <me.oItem>
  [219] objcall 181 ............................. <me.oItem.getScreenName()>
  [221] pusharglist 2 ........................... <oMessenger, me.oItem.getScreenName()>
  [223] objcall 1468 ............................ <oMessenger.isFriend(me.oItem.getScreenName())>
  [226] setlocal 11 ............................. bIsFriend = oMessenger.isFriend(me.oItem.getScreenName())
  [228] getlocal 10 ............................. <oMessenger>
  [230] getparam 0 .............................. <me>
  [232] getchainedprop 204 ...................... <me.oItem>
  [234] pusharglist 1 ........................... <me.oItem>
  [236] objcall 181 ............................. <me.oItem.getScreenName()>
  [238] pusharglist 2 ........................... <oMessenger, me.oItem.getScreenName()>
  [240] objcall 1469 ............................ <oMessenger.haveInvited(me.oItem.getScreenName())>
  [243] setlocal 12 ............................. bHaveInvited = oMessenger.haveInvited(me.oItem.getScreenName())
  [245] getlocal 11 ............................. <bIsFriend>
  [247] not ..................................... <not bIsFriend>
  [248] getlocal 12 ............................. <bHaveInvited>
  [250] not ..................................... <not bHaveInvited>
  [251] and ..................................... <not bIsFriend and not bHaveInvited>
  [252] jmpifz [263] ............................ if not bIsFriend and not bHaveInvited then
  [255] getlocal 3 .............................. <aButtonList>
  [257] pushcons 32 ............................. <"Ask to become a friend">
  [259] pusharglistnoret 2 ...................... <aButtonList, "Ask to become a friend">
  [261] objcall 133 ............................. aButtonList.add("Ask to become a friend")
  [263] getlocal 3 .............................. <aButtonList>
  [265] pusharglistnoret 1 ...................... <aButtonList>
  [267] extcall 92 .............................. return aButtonList
  [269] ret
end

on getWallItemButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 241 ............................. <me.isMod()>
  [  6] setlocal 0 .............................. bIsMod = me.isMod()
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 240 ............................. <me.isOwner()>
  [ 14] setlocal 1 .............................. bIsOwner = me.isOwner()
  [ 16] pusharglist 0 ........................... <[]>
  [ 18] pushlist ................................ <[]>
  [ 19] setlocal 2 .............................. aButtonList = []
  [ 21] getlocal 0 .............................. <bIsMod>
  [ 23] getlocal 1 .............................. <bIsOwner>
  [ 25] or ...................................... <bIsMod or bIsOwner>
  [ 26] jmpifz [ 65] ............................ if bIsMod or bIsOwner then
  [ 29] getlocal 2 .............................. <aButtonList>
  [ 31] pushcons 22 ............................. <"Move">
  [ 33] pusharglistnoret 2 ...................... <aButtonList, "Move">
  [ 35] objcall 133 ............................. aButtonList.add("Move")
  [ 37] getlocal 2 .............................. <aButtonList>
  [ 39] pushcons 24 ............................. <"Pick up">
  [ 41] pusharglistnoret 2 ...................... <aButtonList, "Pick up">
  [ 43] objcall 133 ............................. aButtonList.add("Pick up")
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 204 ...................... <me.oItem>
  [ 49] pusharglist 1 ........................... <me.oItem>
  [ 51] objcall 1127 ............................ <me.oItem.canDelete()>
  [ 54] jmpifz [ 65] ............................ if me.oItem.canDelete() then
  [ 57] getlocal 2 .............................. <aButtonList>
  [ 59] pushcons 25 ............................. <"Delete">
  [ 61] pusharglistnoret 2 ...................... <aButtonList, "Delete">
  [ 63] objcall 133 ............................. aButtonList.add("Delete")
  [ 65] getlocal 2 .............................. <aButtonList>
  [ 67] pusharglistnoret 1 ...................... <aButtonList>
  [ 69] extcall 92 .............................. return aButtonList
  [ 71] ret
end

on displayButtons me, aButtons
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 1421 ..................... <me.oDescRect>
  [  5] getobjprop 1164 ......................... <me.oDescRect.bottom>
  [  8] setlocal 0 .............................. iTop = me.oDescRect.bottom
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1421 ..................... <me.oDescRect>
  [ 15] getobjprop 664 .......................... <me.oDescRect.right>
  [ 18] setlocal 1 .............................. iRight = me.oDescRect.right
  [ 20] pushint8 3 .............................. <3>
  [ 22] setlocal 2 .............................. iXOffset = 3
  [ 24] getparam 1 .............................. <aButtons>
  [ 26] peek 0
  [ 28] pusharglist 1
  [ 30] extcall 169
  [ 32] pushint8 1
  [ 34] peek 0
  [ 36] peek 2
  [ 38] lteq
  [ 39] jmpifz [118] ............................ repeat with sButton in aButtons
  [ 42] peek 2
  [ 44] peek 1
  [ 46] pusharglist 2
  [ 48] extcall 196
  [ 50] setlocal 3
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 3 .............................. <sButton>
  [ 56] pusharglist 2 ........................... <me, sButton>
  [ 58] objcall 1412 ............................ <me.createButtonSprite(sButton)>
  [ 61] setlocal 4 .............................. iSprite = me.createButtonSprite(sButton)
  [ 63] getlocal 4 .............................. <iSprite>
  [ 65] pusharglist 1 ........................... <iSprite>
  [ 67] extcall 451 ............................. <sprite(iSprite)>
  [ 70] getlocal 0 .............................. <iTop>
  [ 72] setobjprop 300 .......................... sprite(iSprite).locV = iTop
  [ 75] getlocal 4 .............................. <iSprite>
  [ 77] pusharglist 1 ........................... <iSprite>
  [ 79] extcall 451 ............................. <sprite(iSprite)>
  [ 82] getlocal 1 .............................. <iRight>
  [ 84] getlocal 4 .............................. <iSprite>
  [ 86] pusharglist 1 ........................... <iSprite>
  [ 88] extcall 451 ............................. <sprite(iSprite)>
  [ 91] getobjprop 456 .......................... <sprite(iSprite).width>
  [ 94] sub ..................................... <iRight - sprite(iSprite).width>
  [ 95] getlocal 2 .............................. <iXOffset>
  [ 97] sub ..................................... <iRight - sprite(iSprite).width - iXOffset>
  [ 98] setobjprop 299 .......................... sprite(iSprite).locH = iRight - sprite(iSprite).width - iXOffset
  [101] getlocal 4 .............................. <iSprite>
  [103] pusharglist 1 ........................... <iSprite>
  [105] extcall 451 ............................. <sprite(iSprite)>
  [108] getobjprop 299 .......................... <sprite(iSprite).locH>
  [111] setlocal 1 .............................. iRight = sprite(iSprite).locH
  [113] pushint8 1
  [115] add
  [116] endrepeat [ 34]
  [118] pop 3
  [120] ret
end

on createButtonSprite me, sID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sID>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 1425 ......................... <me.sActive>
  [  9] pusharglist 3 ........................... <me, sID, me.sActive>
  [ 11] objcall 1414 ............................ <me.createButtonMember(sID, me.sActive)>
  [ 14] setlocal 0 .............................. oActiveMember = me.createButtonMember(sID, me.sActive)
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <sID>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 1426 ......................... <me.sPressed>
  [ 25] pusharglist 3 ........................... <me, sID, me.sPressed>
  [ 27] objcall 1414 ............................ <me.createButtonMember(sID, me.sPressed)>
  [ 30] setlocal 1 .............................. oPressedMember = me.createButtonMember(sID, me.sPressed)
  [ 32] pushsymb 454 ............................ <#member>
  [ 35] getlocal 0 .............................. <oActiveMember>
  [ 37] getobjprop 625 .......................... <oActiveMember.name>
  [ 40] pushsymb 144 ............................ <#x>
  [ 42] pushzero ................................ <0>
  [ 43] pushsymb 315 ............................ <#y>
  [ 46] pushzero ................................ <0>
  [ 47] pushsymb 462 ............................ <#ink>
  [ 50] pushint8 8 .............................. <8>
  [ 52] pusharglist 8 ........................... <[#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]>
  [ 54] pushproplist ............................ <[#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]>
  [ 55] setlocal 2 .............................. aSpriteProps = [#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]
  [ 57] getglobal 88 ............................ <oIsoScene>
  [ 59] getchainedprop 113 ...................... <oIsoScene.oSpriteManager>
  [ 61] getlocal 2 .............................. <aSpriteProps>
  [ 63] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aSpriteProps>
  [ 65] objcall 588 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aSpriteProps)>
  [ 68] setlocal 3 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aSpriteProps)
  [ 70] getlocal 3 .............................. <iSprite>
  [ 72] pusharglist 1 ........................... <iSprite>
  [ 74] extcall 451 ............................. <sprite(iSprite)>
  [ 77] getglobal 88 ............................ <oIsoScene>
  [ 79] getchainedprop 114 ...................... <oIsoScene.oGrid>
  [ 81] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 83] objcall 422 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 86] setobjprop 482 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 89] getlocal 3 .............................. <iSprite>
  [ 91] pusharglist 1 ........................... <iSprite>
  [ 93] extcall 451 ............................. <sprite(iSprite)>
  [ 96] getchainedprop 602 ...................... <sprite(iSprite).scriptInstanceList>
  [ 99] pushcons 33 ............................. <"InfoStandSpriteScript">
  [101] pusharglist 1 ........................... <"InfoStandSpriteScript">
  [103] extcall 57 .............................. <script("InfoStandSpriteScript")>
  [105] getparam 1 .............................. <sID>
  [107] getparam 0 .............................. <me>
  [109] getlocal 0 .............................. <oActiveMember>
  [111] getlocal 1 .............................. <oPressedMember>
  [113] pusharglist 5 ........................... <script("InfoStandSpriteScript"), sID, me, oActiveMember, oPressedMember>
  [115] objcall 0 ............................... <script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [117] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [119] objcall 133 ............................. sprite(iSprite).scriptInstanceList.add(script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember))
  [121] getparam 0 .............................. <me>
  [123] getchainedprop 593 ...................... <me.aSprites>
  [126] getlocal 3 .............................. <iSprite>
  [128] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [130] objcall 133 ............................. me.aSprites.add(iSprite)
  [132] getlocal 3 .............................. <iSprite>
  [134] pusharglistnoret 1 ...................... <iSprite>
  [136] extcall 92 .............................. return iSprite
  [138] ret
end

on createTextMember me, sText
  [  0] pushcons 34 ............................. <"_DYNAMIC_">
  [  2] getparam 1 .............................. <sText>
  [  4] joinstr ................................. <"_DYNAMIC_" & sText>
  [  5] setlocal 0 .............................. sDynamicTextName = "_DYNAMIC_" & sText
  [  7] getlocal 0 .............................. <sDynamicTextName>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 253 .......................... <me.sCastLib>
  [ 13] pusharglist 2 ........................... <sDynamicTextName, me.sCastLib>
  [ 15] extcall 454 ............................. <member(sDynamicTextName, me.sCastLib)>
  [ 18] setlocal 1 .............................. oTextMember = member(sDynamicTextName, me.sCastLib)
  [ 20] getlocal 1 .............................. <oTextMember>
  [ 22] getobjprop 606 .......................... <oTextMember.memberNum>
  [ 25] pushint8 1 .............................. <1>
  [ 27] inv ..................................... <-1>
  [ 28] nteq .................................... <oTextMember.memberNum <> -1>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 1427 ......................... <me.bOverwriteImages>
  [ 34] and ..................................... <(oTextMember.memberNum <> -1) and me.bOverwriteImages>
  [ 35] jmpifz [ 45] ............................ if (oTextMember.memberNum <> -1) and me.bOverwriteImages then
  [ 38] getlocal 1 .............................. <oTextMember>
  [ 40] pusharglistnoret 1 ...................... <oTextMember>
  [ 42] objcall 918 ............................. oTextMember.erase()
  [ 45] getlocal 0 .............................. <sDynamicTextName>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 253 .......................... <me.sCastLib>
  [ 51] pusharglist 2 ........................... <sDynamicTextName, me.sCastLib>
  [ 53] extcall 454 ............................. <member(sDynamicTextName, me.sCastLib)>
  [ 56] setlocal 1 .............................. oTextMember = member(sDynamicTextName, me.sCastLib)
  [ 58] getlocal 1 .............................. <oTextMember>
  [ 60] getobjprop 606 .......................... <oTextMember.memberNum>
  [ 63] pushint8 1 .............................. <1>
  [ 65] inv ..................................... <-1>
  [ 66] eq ...................................... <oTextMember.memberNum = -1>
  [ 67] jmpifz [158] ............................ if oTextMember.memberNum = -1 then
  [ 70] pushsymb 497 ............................ <#text>
  [ 73] getparam 0 .............................. <me>
  [ 75] getobjprop 253 .......................... <me.sCastLib>
  [ 77] pusharglist 1 ........................... <me.sCastLib>
  [ 79] extcall 1020 ............................ <castLib(me.sCastLib)>
  [ 82] pusharglist 2 ........................... <#text, castLib(me.sCastLib)>
  [ 84] extcall 0 ............................... <new(#text, castLib(me.sCastLib))>
  [ 86] setlocal 1 .............................. oTextMember = new(#text, castLib(me.sCastLib))
  [ 88] getlocal 1 .............................. <oTextMember>
  [ 90] getlocal 0 .............................. <sDynamicTextName>
  [ 92] setobjprop 625 .......................... oTextMember.name = sDynamicTextName
  [ 95] getlocal 1 .............................. <oTextMember>
  [ 97] getparam 1 .............................. <sText>
  [ 99] setobjprop 497 .......................... oTextMember.text = sText
  [102] getlocal 1 .............................. <oTextMember>
  [104] pushsymb 1293 ........................... <#fixed>
  [107] setobjprop 1294 ......................... oTextMember.boxType = #fixed
  [110] getlocal 1 .............................. <oTextMember>
  [112] pushcons 35 ............................. <"#EEDBC6">
  [114] pusharglist 1 ........................... <"#EEDBC6">
  [116] extcall 478 ............................. <rgb("#EEDBC6")>
  [119] setobjprop 494 .......................... oTextMember.color = rgb("#EEDBC6")
  [122] getlocal 1 .............................. <oTextMember>
  [124] pushint8 10 ............................. <10>
  [126] setobjprop 1295 ......................... oTextMember.fontSize = 10
  [129] getlocal 1 .............................. <oTextMember>
  [131] pushsymb 1296 ........................... <#bold>
  [134] pusharglist 1 ........................... <[#bold]>
  [136] pushlist ................................ <[#bold]>
  [137] setobjprop 1297 ......................... oTextMember.fontStyle = [#bold]
  [140] getlocal 1 .............................. <oTextMember>
  [142] pushcons 36 ............................. <"verdana">
  [144] setobjprop 1292 ......................... oTextMember.font = "verdana"
  [147] getparam 0 .............................. <me>
  [149] getchainedprop 1424 ..................... <me.aDynamicMembers>
  [152] getlocal 0 .............................. <sDynamicTextName>
  [154] pusharglistnoret 2 ...................... <me.aDynamicMembers, sDynamicTextName>
  [156] objcall 133 ............................. me.aDynamicMembers.add(sDynamicTextName)
  [158] getlocal 1 .............................. <oTextMember>
  [160] pusharglistnoret 1 ...................... <oTextMember>
  [162] extcall 92 .............................. return oTextMember
  [164] ret
end

on createButtonMember me, sText, sState
  [  0] pushcons 34 ............................. <"_DYNAMIC_">
  [  2] getparam 1 .............................. <sText>
  [  4] joinstr ................................. <"_DYNAMIC_" & sText>
  [  5] pushcons 37 ............................. <"_">
  [  7] joinstr ................................. <"_DYNAMIC_" & sText & "_">
  [  8] getparam 2 .............................. <sState>
  [ 10] joinstr ................................. <"_DYNAMIC_" & sText & "_" & sState>
  [ 11] setlocal 0 .............................. sDynamicButtonName = "_DYNAMIC_" & sText & "_" & sState
  [ 13] getlocal 0 .............................. <sDynamicButtonName>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 253 .......................... <me.sCastLib>
  [ 19] pusharglist 2 ........................... <sDynamicButtonName, me.sCastLib>
  [ 21] extcall 454 ............................. <member(sDynamicButtonName, me.sCastLib)>
  [ 24] setlocal 1 .............................. oButtonMember = member(sDynamicButtonName, me.sCastLib)
  [ 26] getlocal 1 .............................. <oButtonMember>
  [ 28] getobjprop 606 .......................... <oButtonMember.memberNum>
  [ 31] pushint8 1 .............................. <1>
  [ 33] inv ..................................... <-1>
  [ 34] nteq .................................... <oButtonMember.memberNum <> -1>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 1427 ......................... <me.bOverwriteImages>
  [ 40] and ..................................... <(oButtonMember.memberNum <> -1) and me.bOverwriteImages>
  [ 41] jmpifz [ 51] ............................ if (oButtonMember.memberNum <> -1) and me.bOverwriteImages then
  [ 44] getlocal 1 .............................. <oButtonMember>
  [ 46] pusharglistnoret 1 ...................... <oButtonMember>
  [ 48] objcall 918 ............................. oButtonMember.erase()
  [ 51] getlocal 0 .............................. <sDynamicButtonName>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 253 .......................... <me.sCastLib>
  [ 57] pusharglist 2 ........................... <sDynamicButtonName, me.sCastLib>
  [ 59] extcall 454 ............................. <member(sDynamicButtonName, me.sCastLib)>
  [ 62] setlocal 1 .............................. oButtonMember = member(sDynamicButtonName, me.sCastLib)
  [ 64] getlocal 1 .............................. <oButtonMember>
  [ 66] getobjprop 606 .......................... <oButtonMember.memberNum>
  [ 69] pushint8 1 .............................. <1>
  [ 71] inv ..................................... <-1>
  [ 72] eq ...................................... <oButtonMember.memberNum = -1>
  [ 73] jmpifz [512] ............................ if oButtonMember.memberNum = -1 then
  [ 76] pushsymb 1264 ........................... <#bitmap>
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 253 .......................... <me.sCastLib>
  [ 83] pusharglist 1 ........................... <me.sCastLib>
  [ 85] extcall 1020 ............................ <castLib(me.sCastLib)>
  [ 88] pusharglist 2 ........................... <#bitmap, castLib(me.sCastLib)>
  [ 90] extcall 0 ............................... <new(#bitmap, castLib(me.sCastLib))>
  [ 92] setlocal 1 .............................. oButtonMember = new(#bitmap, castLib(me.sCastLib))
  [ 94] getlocal 1 .............................. <oButtonMember>
  [ 96] getlocal 0 .............................. <sDynamicButtonName>
  [ 98] setobjprop 625 .......................... oButtonMember.name = sDynamicButtonName
  [101] pushcons 38 ............................. <"button.">
  [103] getparam 0 .............................. <me>
  [105] getobjprop 1423 ......................... <me.sButtonBase>
  [108] joinstr ................................. <"button." & me.sButtonBase>
  [109] pushcons 39 ............................. <".left.">
  [111] joinstr ................................. <"button." & me.sButtonBase & ".left.">
  [112] getparam 2 .............................. <sState>
  [114] joinstr ................................. <"button." & me.sButtonBase & ".left." & sState>
  [115] setlocal 2 .............................. sLeftMember = "button." & me.sButtonBase & ".left." & sState
  [117] pushcons 38 ............................. <"button.">
  [119] getparam 0 .............................. <me>
  [121] getobjprop 1423 ......................... <me.sButtonBase>
  [124] joinstr ................................. <"button." & me.sButtonBase>
  [125] pushcons 40 ............................. <".middle.">
  [127] joinstr ................................. <"button." & me.sButtonBase & ".middle.">
  [128] getparam 2 .............................. <sState>
  [130] joinstr ................................. <"button." & me.sButtonBase & ".middle." & sState>
  [131] setlocal 3 .............................. sMiddleMember = "button." & me.sButtonBase & ".middle." & sState
  [133] pushcons 38 ............................. <"button.">
  [135] getparam 0 .............................. <me>
  [137] getobjprop 1423 ......................... <me.sButtonBase>
  [140] joinstr ................................. <"button." & me.sButtonBase>
  [141] pushcons 41 ............................. <".right.">
  [143] joinstr ................................. <"button." & me.sButtonBase & ".right.">
  [144] getparam 2 .............................. <sState>
  [146] joinstr ................................. <"button." & me.sButtonBase & ".right." & sState>
  [147] setlocal 4 .............................. sRightMember = "button." & me.sButtonBase & ".right." & sState
  [149] getlocal 2 .............................. <sLeftMember>
  [151] pusharglist 1 ........................... <sLeftMember>
  [153] extcall 454 ............................. <member(sLeftMember)>
  [156] setlocal 5 .............................. oLeftMember = member(sLeftMember)
  [158] getlocal 3 .............................. <sMiddleMember>
  [160] pusharglist 1 ........................... <sMiddleMember>
  [162] extcall 454 ............................. <member(sMiddleMember)>
  [165] setlocal 6 .............................. oMiddleMember = member(sMiddleMember)
  [167] getlocal 4 .............................. <sRightMember>
  [169] pusharglist 1 ........................... <sRightMember>
  [171] extcall 454 ............................. <member(sRightMember)>
  [174] setlocal 7 .............................. oRightMember = member(sRightMember)
  [176] getlocal 5 .............................. <oLeftMember>
  [178] getobjprop 476 .......................... <oLeftMember.image>
  [181] setlocal 8 .............................. imLeft = oLeftMember.image
  [183] getlocal 6 .............................. <oMiddleMember>
  [185] getobjprop 476 .......................... <oMiddleMember.image>
  [188] setlocal 9 .............................. imMiddle = oMiddleMember.image
  [190] getlocal 7 .............................. <oRightMember>
  [192] getobjprop 476 .......................... <oRightMember.image>
  [195] setlocal 10 ............................. imRight = oRightMember.image
  [197] getparam 0 .............................. <me>
  [199] getparam 1 .............................. <sText>
  [201] pusharglist 2 ........................... <me, sText>
  [203] objcall 1413 ............................ <me.createTextMember(sText)>
  [206] setlocal 11 ............................. oTextMember = me.createTextMember(sText)
  [208] getlocal 11 ............................. <oTextMember>
  [210] getobjprop 476 .......................... <oTextMember.image>
  [213] setlocal 12 ............................. imText = oTextMember.image
  [215] getlocal 11 ............................. <oTextMember>
  [217] getlocal 11 ............................. <oTextMember>
  [219] getchainedprop 497 ...................... <oTextMember.text>
  [222] getobjprop 320 .......................... <oTextMember.text.length>
  [225] pushint8 1 .............................. <1>
  [227] add ..................................... <oTextMember.text.length + 1>
  [228] pusharglist 2 ........................... <oTextMember, oTextMember.text.length + 1>
  [230] objcall 1486 ............................ <oTextMember.charPosToLoc(oTextMember.text.length + 1)>
  [233] setlocal 13 ............................. oLoc = oTextMember.charPosToLoc(oTextMember.text.length + 1)
  [235] getlocal 13 ............................. <oLoc>
  [237] getobjprop 299 .......................... <oLoc.locH>
  [240] setlocal 14 ............................. iTextWidth = oLoc.locH
  [242] getlocal 13 ............................. <oLoc>
  [244] getobjprop 300 .......................... <oLoc.locV>
  [247] setlocal 15 ............................. iTextHeight = oLoc.locV
  [249] getlocal 8 .............................. <imLeft>
  [251] getobjprop 456 .......................... <imLeft.width>
  [254] getlocal 14 ............................. <iTextWidth>
  [256] add ..................................... <imLeft.width + iTextWidth>
  [257] getlocal 10 ............................. <imRight>
  [259] getobjprop 456 .......................... <imRight.width>
  [262] add ..................................... <imLeft.width + iTextWidth + imRight.width>
  [263] setlocal 16 ............................. iTotalWidth = imLeft.width + iTextWidth + imRight.width
  [265] getlocal 9 .............................. <imMiddle>
  [267] getobjprop 457 .......................... <imMiddle.height>
  [270] setlocal 17 ............................. iTotalHeight = imMiddle.height
  [272] getlocal 16 ............................. <iTotalWidth>
  [274] getlocal 17 ............................. <iTotalHeight>
  [276] pushint8 16 ............................. <16>
  [278] pusharglist 3 ........................... <iTotalWidth, iTotalHeight, 16>
  [280] extcall 476 ............................. <image(iTotalWidth, iTotalHeight, 16)>
  [283] setlocal 18 ............................. oButtonImage = image(iTotalWidth, iTotalHeight, 16)
  [285] getlocal 8 .............................. <imLeft>
  [287] getobjprop 477 .......................... <imLeft.rect>
  [290] setlocal 19 ............................. oSourceRect = imLeft.rect
  [292] pushzero ................................ <0>
  [293] pushzero ................................ <0>
  [294] getlocal 8 .............................. <imLeft>
  [296] getobjprop 456 .......................... <imLeft.width>
  [299] getlocal 8 .............................. <imLeft>
  [301] getobjprop 457 .......................... <imLeft.height>
  [304] pusharglist 4 ........................... <0, 0, imLeft.width, imLeft.height>
  [306] extcall 477 ............................. <rect(0, 0, imLeft.width, imLeft.height)>
  [309] setlocal 20 ............................. oDestRect = rect(0, 0, imLeft.width, imLeft.height)
  [311] getlocal 18 ............................. <oButtonImage>
  [313] getlocal 8 .............................. <imLeft>
  [315] getlocal 20 ............................. <oDestRect>
  [317] getlocal 19 ............................. <oSourceRect>
  [319] pusharglistnoret 4 ...................... <oButtonImage, imLeft, oDestRect, oSourceRect>
  [321] objcall 498 ............................. oButtonImage.copyPixels(imLeft, oDestRect, oSourceRect)
  [324] getlocal 9 .............................. <imMiddle>
  [326] getobjprop 477 .......................... <imMiddle.rect>
  [329] setlocal 19 ............................. oSourceRect = imMiddle.rect
  [331] getlocal 8 .............................. <imLeft>
  [333] getobjprop 456 .......................... <imLeft.width>
  [336] pushzero ................................ <0>
  [337] getlocal 8 .............................. <imLeft>
  [339] getobjprop 456 .......................... <imLeft.width>
  [342] getlocal 14 ............................. <iTextWidth>
  [344] add ..................................... <imLeft.width + iTextWidth>
  [345] getlocal 17 ............................. <iTotalHeight>
  [347] pusharglist 4 ........................... <imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight>
  [349] extcall 477 ............................. <rect(imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight)>
  [352] setlocal 20 ............................. oDestRect = rect(imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight)
  [354] getlocal 18 ............................. <oButtonImage>
  [356] getlocal 9 .............................. <imMiddle>
  [358] getlocal 20 ............................. <oDestRect>
  [360] getlocal 19 ............................. <oSourceRect>
  [362] pusharglistnoret 4 ...................... <oButtonImage, imMiddle, oDestRect, oSourceRect>
  [364] objcall 498 ............................. oButtonImage.copyPixels(imMiddle, oDestRect, oSourceRect)
  [367] pushint8 4 .............................. <4>
  [369] setlocal 21 ............................. iVOffset = 4
  [371] pushzero ................................ <0>
  [372] pushzero ................................ <0>
  [373] getlocal 14 ............................. <iTextWidth>
  [375] getlocal 11 ............................. <oTextMember>
  [377] getobjprop 457 .......................... <oTextMember.height>
  [380] pusharglist 4 ........................... <0, 0, iTextWidth, oTextMember.height>
  [382] extcall 477 ............................. <rect(0, 0, iTextWidth, oTextMember.height)>
  [385] setlocal 19 ............................. oSourceRect = rect(0, 0, iTextWidth, oTextMember.height)
  [387] getlocal 8 .............................. <imLeft>
  [389] getobjprop 456 .......................... <imLeft.width>
  [392] getlocal 21 ............................. <iVOffset>
  [394] getlocal 8 .............................. <imLeft>
  [396] getobjprop 456 .......................... <imLeft.width>
  [399] getlocal 14 ............................. <iTextWidth>
  [401] add ..................................... <imLeft.width + iTextWidth>
  [402] getlocal 21 ............................. <iVOffset>
  [404] getlocal 11 ............................. <oTextMember>
  [406] getobjprop 457 .......................... <oTextMember.height>
  [409] add ..................................... <iVOffset + oTextMember.height>
  [410] pusharglist 4 ........................... <imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height>
  [412] extcall 477 ............................. <rect(imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height)>
  [415] setlocal 20 ............................. oDestRect = rect(imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height)
  [417] getlocal 18 ............................. <oButtonImage>
  [419] getlocal 12 ............................. <imText>
  [421] getlocal 20 ............................. <oDestRect>
  [423] getlocal 19 ............................. <oSourceRect>
  [425] pusharglistnoret 4 ...................... <oButtonImage, imText, oDestRect, oSourceRect>
  [427] objcall 498 ............................. oButtonImage.copyPixels(imText, oDestRect, oSourceRect)
  [430] getlocal 10 ............................. <imRight>
  [432] getobjprop 477 .......................... <imRight.rect>
  [435] setlocal 19 ............................. oSourceRect = imRight.rect
  [437] getlocal 8 .............................. <imLeft>
  [439] getobjprop 456 .......................... <imLeft.width>
  [442] getlocal 14 ............................. <iTextWidth>
  [444] add ..................................... <imLeft.width + iTextWidth>
  [445] pushzero ................................ <0>
  [446] getlocal 8 .............................. <imLeft>
  [448] getobjprop 456 .......................... <imLeft.width>
  [451] getlocal 14 ............................. <iTextWidth>
  [453] add ..................................... <imLeft.width + iTextWidth>
  [454] getlocal 10 ............................. <imRight>
  [456] getobjprop 456 .......................... <imRight.width>
  [459] add ..................................... <imLeft.width + iTextWidth + imRight.width>
  [460] getlocal 17 ............................. <iTotalHeight>
  [462] pusharglist 4 ........................... <imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight>
  [464] extcall 477 ............................. <rect(imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight)>
  [467] setlocal 20 ............................. oDestRect = rect(imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight)
  [469] getlocal 18 ............................. <oButtonImage>
  [471] getlocal 10 ............................. <imRight>
  [473] getlocal 20 ............................. <oDestRect>
  [475] getlocal 19 ............................. <oSourceRect>
  [477] pusharglistnoret 4 ...................... <oButtonImage, imRight, oDestRect, oSourceRect>
  [479] objcall 498 ............................. oButtonImage.copyPixels(imRight, oDestRect, oSourceRect)
  [482] getlocal 1 .............................. <oButtonMember>
  [484] getlocal 18 ............................. <oButtonImage>
  [486] setobjprop 476 .......................... oButtonMember.image = oButtonImage
  [489] getlocal 1 .............................. <oButtonMember>
  [491] pushzero ................................ <0>
  [492] pushzero ................................ <0>
  [493] pusharglist 2 ........................... <0, 0>
  [495] extcall 295 ............................. <point(0, 0)>
  [498] setobjprop 455 .......................... oButtonMember.regPoint = point(0, 0)
  [501] getparam 0 .............................. <me>
  [503] getchainedprop 1424 ..................... <me.aDynamicMembers>
  [506] getlocal 0 .............................. <sDynamicButtonName>
  [508] pusharglistnoret 2 ...................... <me.aDynamicMembers, sDynamicButtonName>
  [510] objcall 133 ............................. me.aDynamicMembers.add(sDynamicButtonName)
  [512] getlocal 1 .............................. <oButtonMember>
  [514] pusharglistnoret 1 ...................... <oButtonMember>
  [516] extcall 92 .............................. return oButtonMember
  [518] ret
end

on mouseUpEvent me, sID
  [  0] getparam 1 .............................. <sID>
  [  2] peek 0 .................................. case sID of
  [  4] pushcons 28 ............................. <"Dance">
  [  6] eq
  [  7] jmpifz [ 95] ............................ (case) "Dance":
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 199 ............................. <me.isAvatar()>
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 1 ........................... <me>
  [ 20] objcall 1417 ............................ <me.isMe()>
  [ 23] and ..................................... <me.isAvatar() and me.isMe()>
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 204 ...................... <me.oItem>
  [ 28] pusharglist 1 ........................... <me.oItem>
  [ 30] objcall 718 ............................. <me.oItem.isDancing()>
  [ 33] not ..................................... <not me.oItem.isDancing()>
  [ 34] and ..................................... <me.isAvatar() and me.isMe() and not me.oItem.isDancing()>
  [ 35] jmpifz [ 92] ............................ if me.isAvatar() and me.isMe() and not me.oItem.isDancing() then
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 204 ...................... <me.oItem>
  [ 42] pusharglistnoret 1 ...................... <me.oItem>
  [ 44] objcall 716 ............................. me.oItem.dance()
  [ 47] getglobal 211 ........................... <oStudio>
  [ 49] pusharglist 1 ........................... <oStudio>
  [ 51] extcall 105 ............................. <voidp(oStudio)>
  [ 53] not ..................................... <not voidp(oStudio)>
  [ 54] jmpifz [ 82] ............................ if not voidp(oStudio) then
  [ 57] getglobal 211 ........................... <oStudio>
  [ 59] pusharglist 0 ........................... <>
  [ 61] extcall 130 ............................. <VOID>
  [ 63] pusharglist 0 ........................... <>
  [ 65] extcall 130 ............................. <VOID>
  [ 67] pusharglist 0 ........................... <>
  [ 69] extcall 130 ............................. <VOID>
  [ 71] pusharglist 0 ........................... <>
  [ 73] extcall 130 ............................. <VOID>
  [ 75] pushcons 42 ............................. <"dnc">
  [ 77] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, VOID, "dnc">
  [ 79] objcall 1506 ............................ oStudio.sendUpdateAvatar(VOID, VOID, VOID, VOID, "dnc")
  [ 82] getparam 0 .............................. <me>
  [ 84] getglobal 88 ............................ <oIsoScene>
  [ 86] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 88] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [ 90] objcall 238 ............................. me.display(oIsoScene.oSelectedItem)
  [ 92] jmp [861]
  [ 95] peek 0
  [ 97] pushcons 27 ............................. <"Stop Dancing">
  [ 99] eq
  [100] jmpifz [187] ............................ (case) "Stop Dancing":
  [103] getparam 0 .............................. <me>
  [105] pusharglist 1 ........................... <me>
  [107] objcall 199 ............................. <me.isAvatar()>
  [109] getparam 0 .............................. <me>
  [111] pusharglist 1 ........................... <me>
  [113] objcall 1417 ............................ <me.isMe()>
  [116] and ..................................... <me.isAvatar() and me.isMe()>
  [117] getparam 0 .............................. <me>
  [119] getchainedprop 204 ...................... <me.oItem>
  [121] pusharglist 1 ........................... <me.oItem>
  [123] objcall 718 ............................. <me.oItem.isDancing()>
  [126] and ..................................... <me.isAvatar() and me.isMe() and me.oItem.isDancing()>
  [127] jmpifz [184] ............................ if me.isAvatar() and me.isMe() and me.oItem.isDancing() then
  [130] getparam 0 .............................. <me>
  [132] getchainedprop 204 ...................... <me.oItem>
  [134] pusharglistnoret 1 ...................... <me.oItem>
  [136] objcall 717 ............................. me.oItem.stopDancing()
  [139] getglobal 211 ........................... <oStudio>
  [141] pusharglist 1 ........................... <oStudio>
  [143] extcall 105 ............................. <voidp(oStudio)>
  [145] not ..................................... <not voidp(oStudio)>
  [146] jmpifz [174] ............................ if not voidp(oStudio) then
  [149] getglobal 211 ........................... <oStudio>
  [151] pusharglist 0 ........................... <>
  [153] extcall 130 ............................. <VOID>
  [155] pusharglist 0 ........................... <>
  [157] extcall 130 ............................. <VOID>
  [159] pusharglist 0 ........................... <>
  [161] extcall 130 ............................. <VOID>
  [163] pusharglist 0 ........................... <>
  [165] extcall 130 ............................. <VOID>
  [167] pushcons 43 ............................. <"std">
  [169] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, VOID, "std">
  [171] objcall 1506 ............................ oStudio.sendUpdateAvatar(VOID, VOID, VOID, VOID, "std")
  [174] getparam 0 .............................. <me>
  [176] getglobal 88 ............................ <oIsoScene>
  [178] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [180] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [182] objcall 238 ............................. me.display(oIsoScene.oSelectedItem)
  [184] jmp [861]
  [187] peek 0
  [189] pushcons 30 ............................. <"Kick Out">
  [191] eq
  [192] jmpifz [242] ............................ (case) "Kick Out":
  [195] getparam 0 .............................. <me>
  [197] pusharglist 1 ........................... <me>
  [199] objcall 199 ............................. <me.isAvatar()>
  [201] jmpifz [239] ............................ if me.isAvatar() then
  [204] getparam 0 .............................. <me>
  [206] pusharglist 1 ........................... <me>
  [208] objcall 240 ............................. <me.isOwner()>
  [210] getparam 0 .............................. <me>
  [212] pusharglist 1 ........................... <me>
  [214] objcall 241 ............................. <me.isMod()>
  [216] or ...................................... <me.isOwner() or me.isMod()>
  [217] jmpifz [239] ............................ if me.isOwner() or me.isMod() then
  [220] getparam 0 .............................. <me>
  [222] getchainedprop 204 ...................... <me.oItem>
  [224] pusharglist 1 ........................... <me.oItem>
  [226] objcall 181 ............................. <me.oItem.getScreenName()>
  [228] setlocal 0 .............................. sScreenName = me.oItem.getScreenName()
  [230] getglobal 211 ........................... <oStudio>
  [232] getlocal 0 .............................. <sScreenName>
  [234] pusharglistnoret 2 ...................... <oStudio, sScreenName>
  [236] objcall 1507 ............................ oStudio.sendKickAvatar(sScreenName)
  [239] jmp [861]
  [242] peek 0
  [244] pushcons 31 ............................. <"Trade">
  [246] eq
  [247] jmpifz [291] ............................ (case) "Trade":
  [250] getparam 0 .............................. <me>
  [252] pusharglist 1 ........................... <me>
  [254] objcall 199 ............................. <me.isAvatar()>
  [256] jmpifz [288] ............................ if me.isAvatar() then
  [259] getparam 0 .............................. <me>
  [261] getchainedprop 204 ...................... <me.oItem>
  [263] pusharglist 1 ........................... <me.oItem>
  [265] objcall 181 ............................. <me.oItem.getScreenName()>
  [267] setlocal 1 .............................. sTradee = me.oItem.getScreenName()
  [269] getglobal 211 ........................... <oStudio>
  [271] getlocal 1 .............................. <sTradee>
  [273] pusharglistnoret 2 ...................... <oStudio, sTradee>
  [275] objcall 1508 ............................ oStudio.sendStartTrade(sTradee)
  [278] getparam 0 .............................. <me>
  [280] pusharglist 0 ........................... <>
  [282] extcall 130 ............................. <VOID>
  [284] pusharglistnoret 2 ...................... <me, VOID>
  [286] objcall 238 ............................. me.display(VOID)
  [288] jmp [861]
  [291] peek 0
  [293] pushcons 32 ............................. <"Ask to become a friend">
  [295] eq
  [296] jmpifz [457] ............................ (case) "Ask to become a friend":
  [299] getparam 0 .............................. <me>
  [301] pusharglist 1 ........................... <me>
  [303] objcall 199 ............................. <me.isAvatar()>
  [305] getparam 0 .............................. <me>
  [307] pusharglist 1 ........................... <me>
  [309] objcall 1417 ............................ <me.isMe()>
  [312] not ..................................... <not me.isMe()>
  [313] and ..................................... <me.isAvatar() and not me.isMe()>
  [314] jmpifz [454] ............................ if me.isAvatar() and not me.isMe() then
  [317] getglobal 150 ........................... <ElementMgr>
  [319] pusharglist 1 ........................... <ElementMgr>
  [321] extcall 105 ............................. <voidp(ElementMgr)>
  [323] not ..................................... <not voidp(ElementMgr)>
  [324] jmpifz [335] ............................ if not voidp(ElementMgr) then
  [327] getglobal 150 ........................... <ElementMgr>
  [329] pushcons 44 ............................. <"MESSENGER_REQUEST_SENT">
  [331] pusharglistnoret 2 ...................... <ElementMgr, "MESSENGER_REQUEST_SENT">
  [333] objcall 174 ............................. ElementMgr.alert("MESSENGER_REQUEST_SENT")
  [335] getglobal 150 ........................... <ElementMgr>
  [337] pusharglist 1 ........................... <ElementMgr>
  [339] objcall 1467 ............................ <ElementMgr.getMessengerObject()>
  [342] getparam 0 .............................. <me>
  [344] getchainedprop 204 ...................... <me.oItem>
  [346] pusharglist 1 ........................... <me.oItem>
  [348] objcall 181 ............................. <me.oItem.getScreenName()>
  [350] pusharglist 2 ........................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [352] objcall 1468 ............................ <ElementMgr.getMessengerObject().isFriend(me.oItem.getScreenName())>
  [355] setlocal 2 .............................. bIsFriend = ElementMgr.getMessengerObject().isFriend(me.oItem.getScreenName())
  [357] getglobal 150 ........................... <ElementMgr>
  [359] pusharglist 1 ........................... <ElementMgr>
  [361] objcall 1467 ............................ <ElementMgr.getMessengerObject()>
  [364] getparam 0 .............................. <me>
  [366] getchainedprop 204 ...................... <me.oItem>
  [368] pusharglist 1 ........................... <me.oItem>
  [370] objcall 181 ............................. <me.oItem.getScreenName()>
  [372] pusharglist 2 ........................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [374] objcall 1469 ............................ <ElementMgr.getMessengerObject().haveInvited(me.oItem.getScreenName())>
  [377] setlocal 3 .............................. bHaveInvited = ElementMgr.getMessengerObject().haveInvited(me.oItem.getScreenName())
  [379] getlocal 2 .............................. <bIsFriend>
  [381] getlocal 3 .............................. <bHaveInvited>
  [383] or ...................................... <bIsFriend or bHaveInvited>
  [384] jmpifz [403] ............................ if bIsFriend or bHaveInvited then
  [387] getparam 0 .............................. <me>
  [389] pusharglist 0 ........................... <>
  [391] extcall 130 ............................. <VOID>
  [393] pusharglistnoret 2 ...................... <me, VOID>
  [395] objcall 238 ............................. me.display(VOID)
  [397] pop 1
  [399] pusharglistnoret 0 ...................... <>
  [401] extcall 92 .............................. return 
  [403] getglobal 171 ........................... <oDenizenManager>
  [405] getglobal 171 ........................... <oDenizenManager>
  [407] pusharglist 1 ........................... <oDenizenManager>
  [409] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [411] getparam 0 .............................. <me>
  [413] getchainedprop 204 ...................... <me.oItem>
  [415] pusharglist 1 ........................... <me.oItem>
  [417] objcall 181 ............................. <me.oItem.getScreenName()>
  [419] pusharglistnoret 3 ...................... <oDenizenManager, oDenizenManager.getScreenName(), me.oItem.getScreenName()>
  [421] objcall 1509 ............................ oDenizenManager.inviteFriend(oDenizenManager.getScreenName(), me.oItem.getScreenName())
  [424] getglobal 150 ........................... <ElementMgr>
  [426] pusharglist 1 ........................... <ElementMgr>
  [428] objcall 1467 ............................ <ElementMgr.getMessengerObject()>
  [431] getparam 0 .............................. <me>
  [433] getchainedprop 204 ...................... <me.oItem>
  [435] pusharglist 1 ........................... <me.oItem>
  [437] objcall 181 ............................. <me.oItem.getScreenName()>
  [439] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [441] objcall 1510 ............................ ElementMgr.getMessengerObject().addMyInvite(me.oItem.getScreenName())
  [444] getparam 0 .............................. <me>
  [446] pusharglist 0 ........................... <>
  [448] extcall 130 ............................. <VOID>
  [450] pusharglistnoret 2 ...................... <me, VOID>
  [452] objcall 238 ............................. me.display(VOID)
  [454] jmp [861]
  [457] peek 0
  [459] pushcons 25 ............................. <"Delete">
  [461] eq
  [462] jmpifz [513] ............................ (case) "Delete":
  [465] getparam 0 .............................. <me>
  [467] pusharglist 1 ........................... <me>
  [469] objcall 200 ............................. <me.isFurniItem()>
  [471] getparam 0 .............................. <me>
  [473] pusharglist 1 ........................... <me>
  [475] objcall 203 ............................. <me.isWallItem()>
  [477] or ...................................... <me.isFurniItem() or me.isWallItem()>
  [478] jmpifz [510] ............................ if me.isFurniItem() or me.isWallItem() then
  [481] getparam 0 .............................. <me>
  [483] getchainedprop 204 ...................... <me.oItem>
  [485] pusharglist 1 ........................... <me.oItem>
  [487] objcall 202 ............................. <me.oItem.getPosId()>
  [489] setlocal 4 .............................. iPosId = me.oItem.getPosId()
  [491] getglobal 150 ........................... <ElementMgr>
  [493] pusharglist 1 ........................... <ElementMgr>
  [495] extcall 105 ............................. <voidp(ElementMgr)>
  [497] not ..................................... <not voidp(ElementMgr)>
  [498] jmpifz [510] ............................ if not voidp(ElementMgr) then
  [501] getglobal 150 ........................... <ElementMgr>
  [503] getlocal 4 .............................. <iPosId>
  [505] pusharglistnoret 2 ...................... <ElementMgr, iPosId>
  [507] objcall 1511 ............................ ElementMgr.displayDeleteConfirm(iPosId)
  [510] jmp [861]
  [513] peek 0
  [515] pushcons 24 ............................. <"Pick up">
  [517] eq
  [518] jmpifz [567] ............................ (case) "Pick up":
  [521] getparam 0 .............................. <me>
  [523] pusharglist 1 ........................... <me>
  [525] objcall 200 ............................. <me.isFurniItem()>
  [527] getparam 0 .............................. <me>
  [529] pusharglist 1 ........................... <me>
  [531] objcall 203 ............................. <me.isWallItem()>
  [533] or ...................................... <me.isFurniItem() or me.isWallItem()>
  [534] jmpifz [564] ............................ if me.isFurniItem() or me.isWallItem() then
  [537] getparam 0 .............................. <me>
  [539] getchainedprop 204 ...................... <me.oItem>
  [541] pusharglistnoret 1 ...................... <me.oItem>
  [543] objcall 1115 ............................ me.oItem.putInBackPack()
  [546] getglobal 88 ............................ <oIsoScene>
  [548] pusharglist 0 ........................... <>
  [550] extcall 130 ............................. <VOID>
  [552] setobjprop 131 .......................... oIsoScene.oSelectedItem = VOID
  [554] getparam 0 .............................. <me>
  [556] getglobal 88 ............................ <oIsoScene>
  [558] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [560] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [562] objcall 238 ............................. me.display(oIsoScene.oSelectedItem)
  [564] jmp [861]
  [567] peek 0
  [569] pushcons 23 ............................. <"Rotate">
  [571] eq
  [572] jmpifz [606] ............................ (case) "Rotate":
  [575] getparam 0 .............................. <me>
  [577] pusharglist 1 ........................... <me>
  [579] objcall 200 ............................. <me.isFurniItem()>
  [581] jmpifz [603] ............................ if me.isFurniItem() then
  [584] getparam 0 .............................. <me>
  [586] getchainedprop 204 ...................... <me.oItem>
  [588] pusharglistnoret 1 ...................... <me.oItem>
  [590] objcall 1170 ............................ me.oItem.rotateItem()
  [593] getparam 0 .............................. <me>
  [595] getglobal 88 ............................ <oIsoScene>
  [597] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [599] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [601] objcall 238 ............................. me.display(oIsoScene.oSelectedItem)
  [603] jmp [861]
  [606] peek 0
  [608] pushcons 22 ............................. <"Move">
  [610] eq
  [611] jmpifz [639] ............................ (case) "Move":
  [614] getparam 0 .............................. <me>
  [616] pusharglist 1 ........................... <me>
  [618] objcall 200 ............................. <me.isFurniItem()>
  [620] getparam 0 .............................. <me>
  [622] pusharglist 1 ........................... <me>
  [624] objcall 203 ............................. <me.isWallItem()>
  [626] or ...................................... <me.isFurniItem() or me.isWallItem()>
  [627] jmpifz [636] ............................ if me.isFurniItem() or me.isWallItem() then
  [630] getglobal 88 ............................ <oIsoScene>
  [632] pusharglistnoret 1 ...................... <oIsoScene>
  [634] objcall 29 .............................. oIsoScene.moveSelectedItem()
  [636] jmp [861]
  [639] peek 0
  [641] pushcons 26 ............................. <"Use">
  [643] eq
  [644] jmpifz [678] ............................ (case) "Use":
  [647] getparam 0 .............................. <me>
  [649] pusharglist 1 ........................... <me>
  [651] objcall 200 ............................. <me.isFurniItem()>
  [653] getparam 0 .............................. <me>
  [655] pusharglist 1 ........................... <me>
  [657] objcall 203 ............................. <me.isWallItem()>
  [659] or ...................................... <me.isFurniItem() or me.isWallItem()>
  [660] jmpifz [675] ............................ if me.isFurniItem() or me.isWallItem() then
  [663] getparam 0 .............................. <me>
  [665] getchainedprop 204 ...................... <me.oItem>
  [667] getchainedprop 777 ...................... <me.oItem.oAction>
  [670] pusharglistnoret 1 ...................... <me.oItem.oAction>
  [672] objcall 1366 ............................ me.oItem.oAction.use()
  [675] jmp [861]
  [678] peek 0
  [680] pushcons 12 ............................. <"Thumbs Up">
  [682] eq
  [683] jmpifz [757] ............................ (case) "Thumbs Up":
  [686] getparam 0 .............................. <me>
  [688] pusharglist 1 ........................... <me>
  [690] objcall 1416 ............................ <me.hasVoted()>
  [693] setlocal 5 .............................. bHasVoted = me.hasVoted()
  [695] getlocal 5 .............................. <bHasVoted>
  [697] pushzero ................................ <0>
  [698] eq ...................................... <bHasVoted = 0>
  [699] getlocal 5 .............................. <bHasVoted>
  [701] not ..................................... <not bHasVoted>
  [702] or ...................................... <(bHasVoted = 0) or not bHasVoted>
  [703] jmpifz [728] ............................ if (bHasVoted = 0) or not bHasVoted then
  [706] getglobal 211 ........................... <oStudio>
  [708] pusharglist 1 ........................... <oStudio>
  [710] objcall 212 ............................. <oStudio.getcdplayer()>
  [712] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [714] objcall 214 ............................. <oStudio.getcdplayer().getCd()>
  [716] pusharglistnoret 1 ...................... <oStudio.getcdplayer().getCd()>
  [718] objcall 1512 ............................ oStudio.getcdplayer().getCd().votePositive()
  [721] getglobal 211 ........................... <oStudio>
  [723] pusharglistnoret 1 ...................... <oStudio>
  [725] objcall 1513 ............................ oStudio.sendThumbsUp()
  [728] getparam 0 .............................. <me>
  [730] getglobal 211 ........................... <oStudio>
  [732] pusharglist 1 ........................... <oStudio>
  [734] objcall 212 ............................. <oStudio.getcdplayer()>
  [736] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [738] objcall 214 ............................. <oStudio.getcdplayer().getCd()>
  [740] pusharglistnoret 2 ...................... <me, oStudio.getcdplayer().getCd()>
  [742] objcall 215 ............................. me.displayCd(oStudio.getcdplayer().getCd())
  [744] getparam 0 .............................. <me>
  [746] pusharglist 0 ........................... <>
  [748] extcall 130 ............................. <VOID>
  [750] pusharglistnoret 2 ...................... <me, VOID>
  [752] objcall 238 ............................. me.display(VOID)
  [754] jmp [861]
  [757] peek 0
  [759] pushcons 13 ............................. <"Thumbs Down">
  [761] eq
  [762] jmpifz [836] ............................ (case) "Thumbs Down":
  [765] getparam 0 .............................. <me>
  [767] pusharglist 1 ........................... <me>
  [769] objcall 1416 ............................ <me.hasVoted()>
  [772] setlocal 5 .............................. bHasVoted = me.hasVoted()
  [774] getlocal 5 .............................. <bHasVoted>
  [776] pushzero ................................ <0>
  [777] eq ...................................... <bHasVoted = 0>
  [778] getlocal 5 .............................. <bHasVoted>
  [780] not ..................................... <not bHasVoted>
  [781] or ...................................... <(bHasVoted = 0) or not bHasVoted>
  [782] jmpifz [807] ............................ if (bHasVoted = 0) or not bHasVoted then
  [785] getglobal 211 ........................... <oStudio>
  [787] pusharglist 1 ........................... <oStudio>
  [789] objcall 212 ............................. <oStudio.getcdplayer()>
  [791] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [793] objcall 214 ............................. <oStudio.getcdplayer().getCd()>
  [795] pusharglistnoret 1 ...................... <oStudio.getcdplayer().getCd()>
  [797] objcall 1514 ............................ oStudio.getcdplayer().getCd().voteNegative()
  [800] getglobal 211 ........................... <oStudio>
  [802] pusharglistnoret 1 ...................... <oStudio>
  [804] objcall 1515 ............................ oStudio.sendThumbsDown()
  [807] getparam 0 .............................. <me>
  [809] getglobal 211 ........................... <oStudio>
  [811] pusharglist 1 ........................... <oStudio>
  [813] objcall 212 ............................. <oStudio.getcdplayer()>
  [815] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [817] objcall 214 ............................. <oStudio.getcdplayer().getCd()>
  [819] pusharglistnoret 2 ...................... <me, oStudio.getcdplayer().getCd()>
  [821] objcall 215 ............................. me.displayCd(oStudio.getcdplayer().getCd())
  [823] getparam 0 .............................. <me>
  [825] pusharglist 0 ........................... <>
  [827] extcall 130 ............................. <VOID>
  [829] pusharglistnoret 2 ...................... <me, VOID>
  [831] objcall 238 ............................. me.display(VOID)
  [833] jmp [861]
  [836] peek 0
  [838] pushcons 29 ............................. <"Stop Performing">
  [840] eq
  [841] jmpifz [861] ............................ (case) "Stop Performing":
  [844] getglobal 211 ........................... <oStudio>
  [846] pusharglistnoret 1 ...................... <oStudio>
  [848] objcall 1516 ............................ oStudio.sendCdEnd()
  [851] getparam 0 .............................. <me>
  [853] pusharglist 0 ........................... <>
  [855] extcall 130 ............................. <VOID>
  [857] pusharglistnoret 2 ...................... <me, VOID>
  [859] objcall 238 ............................. me.display(VOID)
  [861] pop 1 ................................... end case
  [863] ret
end

on hasVoted me
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 14] ............................ if voidp(oStudio) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 92 .............................. return 0
  [ 14] getglobal 211 ........................... <oStudio>
  [ 16] pusharglist 1 ........................... <oStudio>
  [ 18] objcall 212 ............................. <oStudio.getcdplayer()>
  [ 20] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 22] objcall 214 ............................. <oStudio.getcdplayer().getCd()>
  [ 24] pusharglist 1 ........................... <oStudio.getcdplayer().getCd()>
  [ 26] objcall 1416 ............................ <oStudio.getcdplayer().getCd().hasVoted()>
  [ 29] pusharglistnoret 1 ...................... <oStudio.getcdplayer().getCd().hasVoted()>
  [ 31] extcall 92 .............................. return oStudio.getcdplayer().getCd().hasVoted()
  [ 33] ret
end

on isOwner me
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 15] ............................ if voidp(oStudio) then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 92 .............................. return 1
  [ 15] getglobal 211 ........................... <oStudio>
  [ 17] getglobal 171 ........................... <oDenizenManager>
  [ 19] pusharglist 1 ........................... <oDenizenManager>
  [ 21] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 23] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 25] objcall 240 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 27] pusharglistnoret 1 ...................... <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 29] extcall 92 .............................. return oStudio.isOwner(oDenizenManager.getScreenName())
  [ 31] ret
end

on isMod me
  [  0] getglobal 211 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 105 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 15] ............................ if voidp(oStudio) then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 92 .............................. return 1
  [ 15] getglobal 171 ........................... <oDenizenManager>
  [ 17] pusharglist 1 ........................... <oDenizenManager>
  [ 19] objcall 241 ............................. <oDenizenManager.isMod()>
  [ 21] pusharglistnoret 1 ...................... <oDenizenManager.isMod()>
  [ 23] extcall 92 .............................. return oDenizenManager.isMod()
  [ 25] ret
end

on isAvatar me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 204 .......................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 105 ............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 92 .............................. return 0
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 105 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 92 .............................. return 
  [ 31] getglobal 88 ............................ <oIsoScene>
  [ 33] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 204 .......................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 92 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 204 ...................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 199 ............................. <me.oItem.isAvatar()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isAvatar()>
  [ 57] extcall 92 .............................. return me.oItem.isAvatar()
  [ 59] ret
end

on isFurniItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 204 .......................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 105 ............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 92 .............................. return 0
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 105 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 92 .............................. return 
  [ 31] getglobal 88 ............................ <oIsoScene>
  [ 33] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 204 .......................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 92 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 204 ...................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 200 ............................. <me.oItem.isFurniItem()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isFurniItem()>
  [ 57] extcall 92 .............................. return me.oItem.isFurniItem()
  [ 59] ret
end

on isWallItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 204 .......................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 105 ............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 92 .............................. return 0
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 105 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 92 .............................. return 
  [ 31] getglobal 88 ............................ <oIsoScene>
  [ 33] getobjprop 131 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 204 .......................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 92 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 204 ...................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 203 ............................. <me.oItem.isWallItem()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isWallItem()>
  [ 57] extcall 92 .............................. return me.oItem.isWallItem()
  [ 59] ret
end

on isMe me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 199 ............................. <me.isAvatar()>
  [  6] not ..................................... <not me.isAvatar()>
  [  7] jmpifz [ 15] ............................ if not me.isAvatar() then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 92 .............................. return 0
  [ 15] getglobal 211 ........................... <oStudio>
  [ 17] pusharglist 1 ........................... <oStudio>
  [ 19] extcall 105 ............................. <voidp(oStudio)>
  [ 21] jmpifz [ 30] ............................ if voidp(oStudio) then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 92 .............................. return 1
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 204 ...................... <me.oItem>
  [ 34] pusharglist 1 ........................... <me.oItem>
  [ 36] objcall 181 ............................. <me.oItem.getScreenName()>
  [ 38] getglobal 171 ........................... <oDenizenManager>
  [ 40] pusharglist 1 ........................... <oDenizenManager>
  [ 42] objcall 181 ............................. <oDenizenManager.getScreenName()>
  [ 44] eq ...................................... <me.oItem.getScreenName() = oDenizenManager.getScreenName()>
  [ 45] pusharglistnoret 1 ...................... <me.oItem.getScreenName() = oDenizenManager.getScreenName()>
  [ 47] extcall 92 .............................. return me.oItem.getScreenName() = oDenizenManager.getScreenName()
  [ 49] ret
end
