property bDebug, bInitialized, bReadyForuse, foDenizenManager, aPrivateStudioData, fo_level0, ERROR_TYPE, ARRAY_TYPE, STUDIO_TYPE, sUserScreenName, sDefaultScreenName, foDenizen, bIsModerator, bisFTMmember, foLoginServlet, foStatusServlet, iCokesDrank, foBackpack, plNetworkErrors, sUrl, iNetID, iTries, aGenders
global sLanguageSetting, oDenizenManager, oPossessionManager, ElementMgr, gbTestMode, TextMgr, gFeatureSet, oStudio, oLoader

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 326 .......................... me.iCokesDrank = 0
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 28 ........................... me.bDebug = 0
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] setobjprop 29 ........................... me.bInitialized = 0
  [ 16] getparam 0 .............................. <me>
  [ 18] pushzero ................................ <0>
  [ 19] setobjprop 30 ........................... me.bReadyForuse = 0
  [ 21] pushsymb 46 ............................. <#name>
  [ 23] pushcons 0 .............................. <"UNDEFINED">
  [ 25] pushsymb 328 ............................ <#abbreviation>
  [ 28] pushcons 1 .............................. <EMPTY>
  [ 30] pusharglist 4 ........................... <[#name: "UNDEFINED", #abbreviation: EMPTY]>
  [ 32] pushproplist ............................ <[#name: "UNDEFINED", #abbreviation: EMPTY]>
  [ 33] pushsymb 46 ............................. <#name>
  [ 35] pushcons 2 .............................. <"MALE">
  [ 37] pushsymb 328 ............................ <#abbreviation>
  [ 40] pushcons 3 .............................. <"M">
  [ 42] pusharglist 4 ........................... <[#name: "MALE", #abbreviation: "M"]>
  [ 44] pushproplist ............................ <[#name: "MALE", #abbreviation: "M"]>
  [ 45] pushsymb 46 ............................. <#name>
  [ 47] pushcons 4 .............................. <"FEMALE">
  [ 49] pushsymb 328 ............................ <#abbreviation>
  [ 52] pushcons 5 .............................. <"F">
  [ 54] pusharglist 4 ........................... <[#name: "FEMALE", #abbreviation: "F"]>
  [ 56] pushproplist ............................ <[#name: "FEMALE", #abbreviation: "F"]>
  [ 57] pushsymb 46 ............................. <#name>
  [ 59] pushcons 6 .............................. <"UNSPECIFIED">
  [ 61] pushsymb 328 ............................ <#abbreviation>
  [ 64] pushcons 7 .............................. <"?">
  [ 66] pusharglist 4 ........................... <[#name: "UNSPECIFIED", #abbreviation: "?"]>
  [ 68] pushproplist ............................ <[#name: "UNSPECIFIED", #abbreviation: "?"]>
  [ 69] pusharglist 4 ........................... <[[#name: "UNDEFINED", #abbreviation: EMPTY], [#name: "MALE", #abbreviation: "M"], [#name: "FEMALE", #abbreviation: "F"], [#name: "UNSPECIFIED", #abbreviation: "?"]]>
  [ 71] pushlist ................................ <[[#name: "UNDEFINED", #abbreviation: EMPTY], [#name: "MALE", #abbreviation: "M"], [#name: "FEMALE", #abbreviation: "F"], [#name: "UNSPECIFIED", #abbreviation: "?"]]>
  [ 72] setprop 327 ............................. aGenders = [[#name: "UNDEFINED", #abbreviation: EMPTY], [#name: "MALE", #abbreviation: "M"], [#name: "FEMALE", #abbreviation: "F"], [#name: "UNSPECIFIED", #abbreviation: "?"]]
  [ 75] getparam 0 .............................. <me>
  [ 77] pushcons 8 .............................. <"FlashReturnStatusEnum">
  [ 79] setobjprop 136 .......................... me.ERROR_TYPE = "FlashReturnStatusEnum"
  [ 81] getparam 0 .............................. <me>
  [ 83] pushcons 9 .............................. <"Array">
  [ 85] setobjprop 137 .......................... me.ARRAY_TYPE = "Array"
  [ 87] getparam 0 .............................. <me>
  [ 89] pushcons 10 ............................. <"Studio">
  [ 91] setobjprop 138 .......................... me.STUDIO_TYPE = "Studio"
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglist 0 ........................... <>
  [ 97] extcall 190 ............................. <VOID>
  [ 99] setobjprop 329 .......................... me.sUserScreenName = VOID
  [102] getparam 0 .............................. <me>
  [104] getglobal 330 ........................... <TextMgr>
  [107] pushcons 11 ............................. <"LOCAL_SCREEN_NAME">
  [109] pusharglist 2 ........................... <TextMgr, "LOCAL_SCREEN_NAME">
  [111] objcall 331 ............................. <TextMgr.GetRefText("LOCAL_SCREEN_NAME")>
  [114] setobjprop 332 .......................... me.sDefaultScreenName = TextMgr.GetRefText("LOCAL_SCREEN_NAME")
  [117] getparam 0 .............................. <me>
  [119] pushzero ................................ <0>
  [120] setobjprop 333 .......................... me.bIsModerator = 0
  [123] getparam 0 .............................. <me>
  [125] setglobal 193 ........................... oDenizenManager = me
  [127] getparam 0 .............................. <me>
  [129] pusharglistnoret 1 ...................... <me>
  [131] localcall 12 ............................ createNetworkErrorArray(me)
  [133] pushcons 12 ............................. <"_TIMER_">
  [135] pusharglist 1 ........................... <"_TIMER_">
  [137] extcall 148 ............................. <script("_TIMER_")>
  [139] pushint16 500 ........................... <500>
  [142] pushsymb 90 ............................. <#Init>
  [144] getparam 0 .............................. <me>
  [146] pusharglistnoret 4 ...................... <script("_TIMER_"), 500, #Init, me>
  [148] objcall 149 ............................. script("_TIMER_").new(500, #Init, me)
  [150] ret
end

on Init me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 13 ............................. <"init()">
  [  4] pusharglistnoret 2 ...................... <me, "init()">
  [  6] objcall 20 .............................. me.debug("init()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 3 ............................ <me.spriteNum>
  [ 14] pusharglist 1 ........................... <me.spriteNum>
  [ 16] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 18] pushcons 14 ............................. <"_level0.oDenizenManager">
  [ 20] pushzero ................................ <0>
  [ 21] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oDenizenManager", 0>
  [ 23] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0.oDenizenManager", 0)>
  [ 25] setobjprop 334 .......................... me.foDenizenManager = sprite(me.spriteNum).getVariable("_level0.oDenizenManager", 0)
  [ 28] getparam 0 .............................. <me>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 3 ............................ <me.spriteNum>
  [ 34] pusharglist 1 ........................... <me.spriteNum>
  [ 36] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 38] pushcons 15 ............................. <"_level0.oLoginServlet">
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oLoginServlet", 0>
  [ 43] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0.oLoginServlet", 0)>
  [ 45] setobjprop 335 .......................... me.foLoginServlet = sprite(me.spriteNum).getVariable("_level0.oLoginServlet", 0)
  [ 48] getparam 0 .............................. <me>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 3 ............................ <me.spriteNum>
  [ 54] pusharglist 1 ........................... <me.spriteNum>
  [ 56] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 58] pushcons 16 ............................. <"_level0.oStatusServlet">
  [ 60] pushzero ................................ <0>
  [ 61] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oStatusServlet", 0>
  [ 63] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0.oStatusServlet", 0)>
  [ 65] setobjprop 336 .......................... me.foStatusServlet = sprite(me.spriteNum).getVariable("_level0.oStatusServlet", 0)
  [ 68] getparam 0 .............................. <me>
  [ 70] pusharglistnoret 1 ...................... <me>
  [ 72] objcall 89 .............................. me.setCallbacks()
  [ 74] getparam 0 .............................. <me>
  [ 76] getparam 0 .............................. <me>
  [ 78] getobjprop 3 ............................ <me.spriteNum>
  [ 80] pusharglist 1 ........................... <me.spriteNum>
  [ 82] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 84] pushcons 17 ............................. <"_level0">
  [ 86] pushzero ................................ <0>
  [ 87] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0", 0>
  [ 89] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0", 0)>
  [ 91] setobjprop 161 .......................... me.fo_level0 = sprite(me.spriteNum).getVariable("_level0", 0)
  [ 93] getparam 0 .............................. <me>
  [ 95] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 98] pushzero ................................ <0>
  [ 99] setobjprop 28 ........................... me.foDenizenManager.bDebug = 0
  [101] getparam 0 .............................. <me>
  [103] getchainedprop 334 ...................... <me.foDenizenManager>
  [106] pushzero ................................ <0>
  [107] setobjprop 162 .......................... me.foDenizenManager.bTestMode = 0
  [109] getmovieprop 163 ........................ <the runMode>
  [111] pushcons 18 ............................. <"Author">
  [113] eq ...................................... <the runMode = "Author">
  [114] jmpifz [126] ............................ if the runMode = "Author" then / else
  [117] getparam 0 .............................. <me>
  [119] pushint8 1 .............................. <1>
  [121] setobjprop 30 ........................... me.bReadyForuse = 1
  [123] jmp [143]
  [126] getparam 0 .............................. <me>
  [128] getchainedprop 334 ...................... <me.foDenizenManager>
  [131] getparam 0 .............................. <me>
  [133] getchainedprop 161 ...................... <me.fo_level0>
  [135] pusharglist 1 ........................... <me.fo_level0>
  [137] objcall 164 ............................. <me.fo_level0.getGatewayConnection()>
  [139] pusharglistnoret 2 ...................... <me.foDenizenManager, me.fo_level0.getGatewayConnection()>
  [141] objcall 165 ............................. me.foDenizenManager.createGateway(me.fo_level0.getGatewayConnection())
  [143] getparam 0 .............................. <me>
  [145] pushint8 1 .............................. <1>
  [147] setobjprop 29 ........................... me.bInitialized = 1
  [149] ret
end

on getGenderOrdinal me, sGender
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 327 ............................. <aGenders>
  [  9] getobjprop 42 ........................... <aGenders.count>
  [ 11] lteq
  [ 12] jmpifz [ 66] ............................ repeat with i = 1 to aGenders.count
  [ 15] getparam 1 .............................. <sGender>
  [ 17] getprop 327 ............................. <aGenders>
  [ 20] getlocal 0 .............................. <i>
  [ 22] pusharglist 2 ........................... <aGenders, i>
  [ 24] objcall 43 .............................. <aGenders[i]>
  [ 26] getobjprop 46 ........................... <aGenders[i].name>
  [ 28] eq ...................................... <sGender = aGenders[i].name>
  [ 29] getparam 1 .............................. <sGender>
  [ 31] getprop 327 ............................. <aGenders>
  [ 34] getlocal 0 .............................. <i>
  [ 36] pusharglist 2 ........................... <aGenders, i>
  [ 38] objcall 43 .............................. <aGenders[i]>
  [ 40] getobjprop 328 .......................... <aGenders[i].abbreviation>
  [ 43] eq ...................................... <sGender = aGenders[i].abbreviation>
  [ 44] or ...................................... <(sGender = aGenders[i].name) or (sGender = aGenders[i].abbreviation)>
  [ 45] jmpifz [ 57] ............................ if (sGender = aGenders[i].name) or (sGender = aGenders[i].abbreviation) then
  [ 48] getlocal 0 .............................. <i>
  [ 50] pushint8 1 .............................. <1>
  [ 52] sub ..................................... <i - 1>
  [ 53] pusharglistnoret 1 ...................... <i - 1>
  [ 55] extcall 71 .............................. return i - 1
  [ 57] pushint8 1
  [ 59] getlocal 0
  [ 61] add
  [ 62] setlocal 0
  [ 64] endrepeat [  4]
  [ 66] pushint8 1 .............................. <1>
  [ 68] inv ..................................... <-1>
  [ 69] pusharglistnoret 1 ...................... <-1>
  [ 71] extcall 71 .............................. return -1
  [ 73] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 3 ............................ <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 2 ............................... <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 335 .......................... <me.foLoginServlet>
  [ 13] pushcons 19 ............................. <"getScreenName_Result">
  [ 15] pushsymb 275 ............................ <#getLoginScreenName_Result>
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foLoginServlet, "getScreenName_Result", #getLoginScreenName_Result, me>
  [ 22] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foLoginServlet, "getScreenName_Result", #getLoginScreenName_Result, me)
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 3 ............................ <me.spriteNum>
  [ 28] pusharglist 1 ........................... <me.spriteNum>
  [ 30] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 336 .......................... <me.foStatusServlet>
  [ 37] pushcons 20 ............................. <"getStatus_Result">
  [ 39] pushsymb 274 ............................ <#getStatus_Result>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStatusServlet, "getStatus_Result", #getStatus_Result, me>
  [ 46] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStatusServlet, "getStatus_Result", #getStatus_Result, me)
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 3 ............................ <me.spriteNum>
  [ 52] pusharglist 1 ........................... <me.spriteNum>
  [ 54] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 334 .......................... <me.foDenizenManager>
  [ 61] pushcons 21 ............................. <"beanCreated">
  [ 63] pushsymb 91 ............................. <#beanCreated>
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "beanCreated", #beanCreated, me>
  [ 69] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "beanCreated", #beanCreated, me)
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 3 ............................ <me.spriteNum>
  [ 75] pusharglist 1 ........................... <me.spriteNum>
  [ 77] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 334 .......................... <me.foDenizenManager>
  [ 84] pushcons 22 ............................. <"loginDenizen_Result">
  [ 86] pushsymb 277 ............................ <#loginDenizen_Result>
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "loginDenizen_Result", #loginDenizen_Result, me>
  [ 93] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "loginDenizen_Result", #loginDenizen_Result, me)
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 3 ............................ <me.spriteNum>
  [ 99] pusharglist 1 ........................... <me.spriteNum>
  [101] extcall 2 ............................... <sprite(me.spriteNum)>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 334 .......................... <me.foDenizenManager>
  [108] pushcons 23 ............................. <"loginModerator_Result">
  [110] pushsymb 278 ............................ <#loginModerator_Result>
  [113] getparam 0 .............................. <me>
  [115] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "loginModerator_Result", #loginModerator_Result, me>
  [117] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "loginModerator_Result", #loginModerator_Result, me)
  [119] getparam 0 .............................. <me>
  [121] getobjprop 3 ............................ <me.spriteNum>
  [123] pusharglist 1 ........................... <me.spriteNum>
  [125] extcall 2 ............................... <sprite(me.spriteNum)>
  [127] getparam 0 .............................. <me>
  [129] getobjprop 334 .......................... <me.foDenizenManager>
  [132] pushcons 24 ............................. <"logoutDenizen_Result">
  [134] pushsymb 279 ............................ <#logoutDenizen_Result>
  [137] getparam 0 .............................. <me>
  [139] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "logoutDenizen_Result", #logoutDenizen_Result, me>
  [141] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "logoutDenizen_Result", #logoutDenizen_Result, me)
  [143] getparam 0 .............................. <me>
  [145] getobjprop 3 ............................ <me.spriteNum>
  [147] pusharglist 1 ........................... <me.spriteNum>
  [149] extcall 2 ............................... <sprite(me.spriteNum)>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 334 .......................... <me.foDenizenManager>
  [156] pushcons 25 ............................. <"modifyDenizen_Result">
  [158] pushsymb 280 ............................ <#modifyDenizen_Result>
  [161] getparam 0 .............................. <me>
  [163] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "modifyDenizen_Result", #modifyDenizen_Result, me>
  [165] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "modifyDenizen_Result", #modifyDenizen_Result, me)
  [167] getparam 0 .............................. <me>
  [169] getobjprop 3 ............................ <me.spriteNum>
  [171] pusharglist 1 ........................... <me.spriteNum>
  [173] extcall 2 ............................... <sprite(me.spriteNum)>
  [175] getparam 0 .............................. <me>
  [177] getobjprop 334 .......................... <me.foDenizenManager>
  [180] pushcons 26 ............................. <"getDenizenByScreenName_Result">
  [182] pushsymb 281 ............................ <#getDenizenByScreenName_Result>
  [185] getparam 0 .............................. <me>
  [187] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getDenizenByScreenName_Result", #getDenizenByScreenName_Result, me>
  [189] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getDenizenByScreenName_Result", #getDenizenByScreenName_Result, me)
  [191] getparam 0 .............................. <me>
  [193] getobjprop 3 ............................ <me.spriteNum>
  [195] pusharglist 1 ........................... <me.spriteNum>
  [197] extcall 2 ............................... <sprite(me.spriteNum)>
  [199] getparam 0 .............................. <me>
  [201] getobjprop 334 .......................... <me.foDenizenManager>
  [204] pushcons 27 ............................. <"getDenizenBalance_Result">
  [206] pushsymb 282 ............................ <#getDenizenBalance_Result>
  [209] getparam 0 .............................. <me>
  [211] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getDenizenBalance_Result", #getDenizenBalance_Result, me>
  [213] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getDenizenBalance_Result", #getDenizenBalance_Result, me)
  [215] getparam 0 .............................. <me>
  [217] getobjprop 3 ............................ <me.spriteNum>
  [219] pusharglist 1 ........................... <me.spriteNum>
  [221] extcall 2 ............................... <sprite(me.spriteNum)>
  [223] getparam 0 .............................. <me>
  [225] getobjprop 334 .......................... <me.foDenizenManager>
  [228] pushcons 28 ............................. <"isModerator_Result">
  [230] pushsymb 283 ............................ <#isModerator_Result>
  [233] getparam 0 .............................. <me>
  [235] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "isModerator_Result", #isModerator_Result, me>
  [237] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "isModerator_Result", #isModerator_Result, me)
  [239] getparam 0 .............................. <me>
  [241] getobjprop 3 ............................ <me.spriteNum>
  [243] pusharglist 1 ........................... <me.spriteNum>
  [245] extcall 2 ............................... <sprite(me.spriteNum)>
  [247] getparam 0 .............................. <me>
  [249] getobjprop 334 .......................... <me.foDenizenManager>
  [252] pushcons 29 ............................. <"getModeratorsOnline_Result">
  [254] pushsymb 284 ............................ <#getModeratorsOnline_Result>
  [257] getparam 0 .............................. <me>
  [259] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getModeratorsOnline_Result", #getModeratorsOnline_Result, me>
  [261] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getModeratorsOnline_Result", #getModeratorsOnline_Result, me)
  [263] getparam 0 .............................. <me>
  [265] getobjprop 3 ............................ <me.spriteNum>
  [267] pusharglist 1 ........................... <me.spriteNum>
  [269] extcall 2 ............................... <sprite(me.spriteNum)>
  [271] getparam 0 .............................. <me>
  [273] getobjprop 334 .......................... <me.foDenizenManager>
  [276] pushcons 30 ............................. <"getExtendedDenizenInfo_Result">
  [278] pushsymb 293 ............................ <#getExtendedDenizenInfo_Result>
  [281] getparam 0 .............................. <me>
  [283] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getExtendedDenizenInfo_Result", #getExtendedDenizenInfo_Result, me>
  [285] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getExtendedDenizenInfo_Result", #getExtendedDenizenInfo_Result, me)
  [287] getparam 0 .............................. <me>
  [289] getobjprop 3 ............................ <me.spriteNum>
  [291] pusharglist 1 ........................... <me.spriteNum>
  [293] extcall 2 ............................... <sprite(me.spriteNum)>
  [295] getparam 0 .............................. <me>
  [297] getobjprop 334 .......................... <me.foDenizenManager>
  [300] pushcons 31 ............................. <"getMessenger2_Result">
  [302] pushsymb 286 ............................ <#getMessenger2_Result>
  [305] getparam 0 .............................. <me>
  [307] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getMessenger2_Result", #getMessenger2_Result, me>
  [309] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getMessenger2_Result", #getMessenger2_Result, me)
  [311] getparam 0 .............................. <me>
  [313] getobjprop 3 ............................ <me.spriteNum>
  [315] pusharglist 1 ........................... <me.spriteNum>
  [317] extcall 2 ............................... <sprite(me.spriteNum)>
  [319] getparam 0 .............................. <me>
  [321] getobjprop 334 .......................... <me.foDenizenManager>
  [324] pushcons 32 ............................. <"getOnlineFriends_Result">
  [326] pushsymb 285 ............................ <#getOnlineFriends_Result>
  [329] getparam 0 .............................. <me>
  [331] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getOnlineFriends_Result", #getOnlineFriends_Result, me>
  [333] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getOnlineFriends_Result", #getOnlineFriends_Result, me)
  [335] getparam 0 .............................. <me>
  [337] getobjprop 3 ............................ <me.spriteNum>
  [339] pusharglist 1 ........................... <me.spriteNum>
  [341] extcall 2 ............................... <sprite(me.spriteNum)>
  [343] getparam 0 .............................. <me>
  [345] getobjprop 334 .......................... <me.foDenizenManager>
  [348] pushcons 33 ............................. <"getMessages_Result">
  [350] pushsymb 338 ............................ <#getMessages_Result>
  [353] getparam 0 .............................. <me>
  [355] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getMessages_Result", #getMessages_Result, me>
  [357] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getMessages_Result", #getMessages_Result, me)
  [359] getparam 0 .............................. <me>
  [361] getobjprop 3 ............................ <me.spriteNum>
  [363] pusharglist 1 ........................... <me.spriteNum>
  [365] extcall 2 ............................... <sprite(me.spriteNum)>
  [367] getparam 0 .............................. <me>
  [369] getobjprop 334 .......................... <me.foDenizenManager>
  [372] pushcons 34 ............................. <"getInvites_Result">
  [374] pushsymb 339 ............................ <#getInvites_Result>
  [377] getparam 0 .............................. <me>
  [379] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getInvites_Result", #getInvites_Result, me>
  [381] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getInvites_Result", #getInvites_Result, me)
  [383] getparam 0 .............................. <me>
  [385] getobjprop 3 ............................ <me.spriteNum>
  [387] pusharglist 1 ........................... <me.spriteNum>
  [389] extcall 2 ............................... <sprite(me.spriteNum)>
  [391] getparam 0 .............................. <me>
  [393] getobjprop 334 .......................... <me.foDenizenManager>
  [396] pushcons 35 ............................. <"getFriends_Result">
  [398] pushsymb 340 ............................ <#getFriends_Result>
  [401] getparam 0 .............................. <me>
  [403] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getFriends_Result", #getFriends_Result, me>
  [405] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getFriends_Result", #getFriends_Result, me)
  [407] getparam 0 .............................. <me>
  [409] getobjprop 3 ............................ <me.spriteNum>
  [411] pusharglist 1 ........................... <me.spriteNum>
  [413] extcall 2 ............................... <sprite(me.spriteNum)>
  [415] getparam 0 .............................. <me>
  [417] getobjprop 334 .......................... <me.foDenizenManager>
  [420] pushcons 36 ............................. <"sendMessage_Result">
  [422] pushsymb 287 ............................ <#sendMessage_Result>
  [425] getparam 0 .............................. <me>
  [427] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "sendMessage_Result", #sendMessage_Result, me>
  [429] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "sendMessage_Result", #sendMessage_Result, me)
  [431] getparam 0 .............................. <me>
  [433] getobjprop 3 ............................ <me.spriteNum>
  [435] pusharglist 1 ........................... <me.spriteNum>
  [437] extcall 2 ............................... <sprite(me.spriteNum)>
  [439] getparam 0 .............................. <me>
  [441] getobjprop 334 .......................... <me.foDenizenManager>
  [444] pushcons 37 ............................. <"removeMessage_Result">
  [446] pushsymb 288 ............................ <#removeMessage_Result>
  [449] getparam 0 .............................. <me>
  [451] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "removeMessage_Result", #removeMessage_Result, me>
  [453] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "removeMessage_Result", #removeMessage_Result, me)
  [455] getparam 0 .............................. <me>
  [457] getobjprop 3 ............................ <me.spriteNum>
  [459] pusharglist 1 ........................... <me.spriteNum>
  [461] extcall 2 ............................... <sprite(me.spriteNum)>
  [463] getparam 0 .............................. <me>
  [465] getobjprop 334 .......................... <me.foDenizenManager>
  [468] pushcons 38 ............................. <"rejectInvitation_Result">
  [470] pushsymb 289 ............................ <#rejectInvitation_Result>
  [473] getparam 0 .............................. <me>
  [475] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "rejectInvitation_Result", #rejectInvitation_Result, me>
  [477] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "rejectInvitation_Result", #rejectInvitation_Result, me)
  [479] getparam 0 .............................. <me>
  [481] getobjprop 3 ............................ <me.spriteNum>
  [483] pusharglist 1 ........................... <me.spriteNum>
  [485] extcall 2 ............................... <sprite(me.spriteNum)>
  [487] getparam 0 .............................. <me>
  [489] getobjprop 334 .......................... <me.foDenizenManager>
  [492] pushcons 39 ............................. <"acceptInvitation_Result">
  [494] pushsymb 290 ............................ <#acceptInvitation_Result>
  [497] getparam 0 .............................. <me>
  [499] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "acceptInvitation_Result", #acceptInvitation_Result, me>
  [501] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "acceptInvitation_Result", #acceptInvitation_Result, me)
  [503] getparam 0 .............................. <me>
  [505] getobjprop 3 ............................ <me.spriteNum>
  [507] pusharglist 1 ........................... <me.spriteNum>
  [509] extcall 2 ............................... <sprite(me.spriteNum)>
  [511] getparam 0 .............................. <me>
  [513] getobjprop 334 .......................... <me.foDenizenManager>
  [516] pushcons 40 ............................. <"inviteFriend_Result">
  [518] pushsymb 291 ............................ <#inviteFriend_Result>
  [521] getparam 0 .............................. <me>
  [523] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "inviteFriend_Result", #inviteFriend_Result, me>
  [525] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "inviteFriend_Result", #inviteFriend_Result, me)
  [527] getparam 0 .............................. <me>
  [529] getobjprop 3 ............................ <me.spriteNum>
  [531] pusharglist 1 ........................... <me.spriteNum>
  [533] extcall 2 ............................... <sprite(me.spriteNum)>
  [535] getparam 0 .............................. <me>
  [537] getobjprop 334 .......................... <me.foDenizenManager>
  [540] pushcons 41 ............................. <"removeFriends_Result">
  [542] pushsymb 292 ............................ <#removeFriends_Result>
  [545] getparam 0 .............................. <me>
  [547] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "removeFriends_Result", #removeFriends_Result, me>
  [549] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "removeFriends_Result", #removeFriends_Result, me)
  [551] getparam 0 .............................. <me>
  [553] getobjprop 3 ............................ <me.spriteNum>
  [555] pusharglist 1 ........................... <me.spriteNum>
  [557] extcall 2 ............................... <sprite(me.spriteNum)>
  [559] getparam 0 .............................. <me>
  [561] getobjprop 334 .......................... <me.foDenizenManager>
  [564] pushcons 42 ............................. <"getGenres_result">
  [566] pushsymb 319 ............................ <#getgenres_result>
  [569] getparam 0 .............................. <me>
  [571] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getGenres_result", #getgenres_result, me>
  [573] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getGenres_result", #getgenres_result, me)
  [575] getparam 0 .............................. <me>
  [577] getobjprop 3 ............................ <me.spriteNum>
  [579] pusharglist 1 ........................... <me.spriteNum>
  [581] extcall 2 ............................... <sprite(me.spriteNum)>
  [583] getparam 0 .............................. <me>
  [585] getobjprop 334 .......................... <me.foDenizenManager>
  [588] pushcons 43 ............................. <"getArtistsByGenre_Result">
  [590] pushsymb 320 ............................ <#getArtistsByGenre_result>
  [593] getparam 0 .............................. <me>
  [595] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getArtistsByGenre_Result", #getArtistsByGenre_result, me>
  [597] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getArtistsByGenre_Result", #getArtistsByGenre_result, me)
  [599] getparam 0 .............................. <me>
  [601] getobjprop 3 ............................ <me.spriteNum>
  [603] pusharglist 1 ........................... <me.spriteNum>
  [605] extcall 2 ............................... <sprite(me.spriteNum)>
  [607] getparam 0 .............................. <me>
  [609] getobjprop 334 .......................... <me.foDenizenManager>
  [612] pushcons 44 ............................. <"getSongsByArtist_Result">
  [614] pushsymb 321 ............................ <#getSongsByArtist_result>
  [617] getparam 0 .............................. <me>
  [619] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getSongsByArtist_Result", #getSongsByArtist_result, me>
  [621] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getSongsByArtist_Result", #getSongsByArtist_result, me)
  [623] getparam 0 .............................. <me>
  [625] getobjprop 3 ............................ <me.spriteNum>
  [627] pusharglist 1 ........................... <me.spriteNum>
  [629] extcall 2 ............................... <sprite(me.spriteNum)>
  [631] getparam 0 .............................. <me>
  [633] getobjprop 334 .......................... <me.foDenizenManager>
  [636] pushcons 45 ............................. <"getPlaylist_Result">
  [638] pushsymb 322 ............................ <#getPlaylist_Result>
  [641] getparam 0 .............................. <me>
  [643] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getPlaylist_Result", #getPlaylist_Result, me>
  [645] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getPlaylist_Result", #getPlaylist_Result, me)
  [647] getparam 0 .............................. <me>
  [649] getobjprop 3 ............................ <me.spriteNum>
  [651] pusharglist 1 ........................... <me.spriteNum>
  [653] extcall 2 ............................... <sprite(me.spriteNum)>
  [655] getparam 0 .............................. <me>
  [657] getobjprop 334 .......................... <me.foDenizenManager>
  [660] pushcons 46 ............................. <"addToPlaylist_Result">
  [662] pushsymb 323 ............................ <#addToPlaylist_Result>
  [665] getparam 0 .............................. <me>
  [667] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "addToPlaylist_Result", #addToPlaylist_Result, me>
  [669] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "addToPlaylist_Result", #addToPlaylist_Result, me)
  [671] getparam 0 .............................. <me>
  [673] getobjprop 3 ............................ <me.spriteNum>
  [675] pusharglist 1 ........................... <me.spriteNum>
  [677] extcall 2 ............................... <sprite(me.spriteNum)>
  [679] getparam 0 .............................. <me>
  [681] getobjprop 334 .......................... <me.foDenizenManager>
  [684] pushcons 47 ............................. <"removeFromPlaylist_Result">
  [686] pushsymb 324 ............................ <#removeFromPlaylist_Result>
  [689] getparam 0 .............................. <me>
  [691] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "removeFromPlaylist_Result", #removeFromPlaylist_Result, me>
  [693] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "removeFromPlaylist_Result", #removeFromPlaylist_Result, me)
  [695] getparam 0 .............................. <me>
  [697] getobjprop 3 ............................ <me.spriteNum>
  [699] pusharglist 1 ........................... <me.spriteNum>
  [701] extcall 2 ............................... <sprite(me.spriteNum)>
  [703] getparam 0 .............................. <me>
  [705] getobjprop 334 .......................... <me.foDenizenManager>
  [708] pushcons 48 ............................. <"isFtmMember_result">
  [710] pushsymb 318 ............................ <#isFtmMember_result>
  [713] getparam 0 .............................. <me>
  [715] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "isFtmMember_result", #isFtmMember_result, me>
  [717] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "isFtmMember_result", #isFtmMember_result, me)
  [719] getparam 0 .............................. <me>
  [721] getobjprop 3 ............................ <me.spriteNum>
  [723] pusharglist 1 ........................... <me.spriteNum>
  [725] extcall 2 ............................... <sprite(me.spriteNum)>
  [727] getparam 0 .............................. <me>
  [729] getobjprop 334 .......................... <me.foDenizenManager>
  [732] pushcons 49 ............................. <"getAvailableTokens_result">
  [734] pushsymb 317 ............................ <#getAvailableTokens_result>
  [737] getparam 0 .............................. <me>
  [739] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getAvailableTokens_result", #getAvailableTokens_result, me>
  [741] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getAvailableTokens_result", #getAvailableTokens_result, me)
  [743] getparam 0 .............................. <me>
  [745] getobjprop 3 ............................ <me.spriteNum>
  [747] pusharglist 1 ........................... <me.spriteNum>
  [749] extcall 2 ............................... <sprite(me.spriteNum)>
  [751] getparam 0 .............................. <me>
  [753] getobjprop 334 .......................... <me.foDenizenManager>
  [756] pushcons 50 ............................. <"getTip_Result">
  [758] pushsymb 325 ............................ <#getTip_Result>
  [761] getparam 0 .............................. <me>
  [763] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getTip_Result", #getTip_Result, me>
  [765] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getTip_Result", #getTip_Result, me)
  [767] ret
end

on beanCreated me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 51 ............................. <"beanCreated()">
  [  4] pusharglistnoret 2 ...................... <me, "beanCreated()">
  [  6] objcall 20 .............................. me.debug("beanCreated()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 30 ........................... me.bReadyForuse = 1
  [ 14] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 28 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 52 ............................. <"DenizenManager: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"DenizenManager: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"DenizenManager: " & sMessage>
  [ 17] extcall 33 .............................. put "DenizenManager: " & sMessage
  [ 19] ret
end

on decodeString me, sEncodedString
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 161 ...................... <me.fo_level0>
  [  4] getchainedprop 341 ...................... <me.fo_level0.oEncoder>
  [  7] getparam 1 .............................. <sEncodedString>
  [  9] pusharglist 2 ........................... <me.fo_level0.oEncoder, sEncodedString>
  [ 11] objcall 342 ............................. <me.fo_level0.oEncoder.decode(sEncodedString)>
  [ 14] pusharglistnoret 1 ...................... <me.fo_level0.oEncoder.decode(sEncodedString)>
  [ 16] extcall 71 .............................. return me.fo_level0.oEncoder.decode(sEncodedString)
  [ 18] ret
end

on encodeString me, sDecodedString
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 161 ...................... <me.fo_level0>
  [  4] getchainedprop 341 ...................... <me.fo_level0.oEncoder>
  [  7] getparam 1 .............................. <sDecodedString>
  [  9] pusharglist 2 ........................... <me.fo_level0.oEncoder, sDecodedString>
  [ 11] objcall 344 ............................. <me.fo_level0.oEncoder.encode(sDecodedString)>
  [ 14] pusharglistnoret 1 ...................... <me.fo_level0.oEncoder.encode(sDecodedString)>
  [ 16] extcall 71 .............................. return me.fo_level0.oEncoder.encode(sDecodedString)
  [ 18] ret
end

on getStatus me
  [  0] pushcons 53 ............................. <RETURN>
  [  2] pushcons 53 ............................. <RETURN>
  [  4] joinstr ................................. <RETURN & RETURN>
  [  5] pusharglistnoret 1 ...................... <RETURN & RETURN>
  [  7] extcall 33 .............................. put RETURN & RETURN
  [  9] pushcons 54 ............................. <"***************************">
  [ 11] pusharglistnoret 1 ...................... <"***************************">
  [ 13] extcall 33 .............................. put "***************************"
  [ 15] pushcons 55 ............................. <"--> RETRIEVING STATUS **">
  [ 17] pusharglistnoret 1 ...................... <"--> RETRIEVING STATUS **">
  [ 19] extcall 33 .............................. put "--> RETRIEVING STATUS **"
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 56 ............................. <"getStatus()">
  [ 25] pusharglistnoret 2 ...................... <me, "getStatus()">
  [ 27] objcall 20 .............................. me.debug("getStatus()")
  [ 29] getglobal 167 ........................... <gbTestMode>
  [ 31] jmpifz [ 52] ............................ if gbTestMode then
  [ 34] getparam 0 .............................. <me>
  [ 36] pushzero ................................ <0>
  [ 37] pushzero ................................ <0>
  [ 38] pushint16 2000 .......................... <2000>
  [ 41] pushcons 57 ............................. <"Open">
  [ 43] pusharglistnoret 5 ...................... <me, 0, 0, 2000, "Open">
  [ 45] objcall 274 ............................. me.getStatus_Result(0, 0, 2000, "Open")
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 71 .............................. return 
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 336 ...................... <me.foStatusServlet>
  [ 57] getmovieprop 170 ........................ <the milliSeconds>
  [ 59] pusharglistnoret 2 ...................... <me.foStatusServlet, the milliSeconds>
  [ 61] objcall 254 ............................. me.foStatusServlet.getStatus(the milliSeconds)
  [ 63] ret
end

on getLoginScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 58 ............................. <"getLoginScreenName()">
  [  4] pusharglistnoret 2 ...................... <me, "getLoginScreenName()">
  [  6] objcall 20 .............................. me.debug("getLoginScreenName()")
  [  8] getglobal 167 ........................... <gbTestMode>
  [ 10] jmpifz [ 24] ............................ if gbTestMode then
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 277 ............................. me.loginDenizen_Result()
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 71 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 335 ...................... <me.foLoginServlet>
  [ 29] pusharglistnoret 1 ...................... <me.foLoginServlet>
  [ 31] objcall 198 ............................. me.foLoginServlet.getScreenName()
  [ 33] ret
end

on loginDenizen me, sSessionID
  [  0] pushcons 53 ............................. <RETURN>
  [  2] pushcons 53 ............................. <RETURN>
  [  4] joinstr ................................. <RETURN & RETURN>
  [  5] pusharglistnoret 1 ...................... <RETURN & RETURN>
  [  7] extcall 33 .............................. put RETURN & RETURN
  [  9] pushcons 59 ............................. <"******************************">
  [ 11] pusharglistnoret 1 ...................... <"******************************">
  [ 13] extcall 33 .............................. put "******************************"
  [ 15] pushcons 60 ............................. <"--> LOGIN DENIZEN: ">
  [ 17] getparam 1 .............................. <sSessionID>
  [ 19] joinstr ................................. <"--> LOGIN DENIZEN: " & sSessionID>
  [ 20] pusharglistnoret 1 ...................... <"--> LOGIN DENIZEN: " & sSessionID>
  [ 22] extcall 33 .............................. put "--> LOGIN DENIZEN: " & sSessionID
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 61 ............................. <"loginDenizen() ">
  [ 28] getparam 1 .............................. <sSessionID>
  [ 30] joinstr ................................. <"loginDenizen() " & sSessionID>
  [ 31] pusharglistnoret 2 ...................... <me, "loginDenizen() " & sSessionID>
  [ 33] objcall 20 .............................. me.debug("loginDenizen() " & sSessionID)
  [ 35] getglobal 167 ........................... <gbTestMode>
  [ 37] jmpifz [ 51] ............................ if gbTestMode then
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglistnoret 1 ...................... <me>
  [ 44] objcall 277 ............................. me.loginDenizen_Result()
  [ 47] pusharglistnoret 0 ...................... <>
  [ 49] extcall 71 .............................. return 
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 3 ............................ <me.spriteNum>
  [ 55] pusharglist 1 ........................... <me.spriteNum>
  [ 57] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 59] pushcons 62 ............................. <"_level0.sDefaultLoginDenizenServer">
  [ 61] pushzero ................................ <0>
  [ 62] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.sDefaultLoginDenizenServer", 0>
  [ 64] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0.sDefaultLoginDenizenServer", 0)>
  [ 66] setprop 346 ............................. sUrl = sprite(me.spriteNum).getVariable("_level0.sDefaultLoginDenizenServer", 0)
  [ 69] pushzero ................................ <0>
  [ 70] setprop 347 ............................. iTries = 0
  [ 73] getprop 346 ............................. <sUrl>
  [ 76] pusharglist 1 ........................... <sUrl>
  [ 78] extcall 348 ............................. <stringp(sUrl)>
  [ 81] jmpifz [117] ............................ if stringp(sUrl) then
  [ 84] getprop 346 ............................. <sUrl>
  [ 87] pushcons 63 ............................. <"?sid">
  [ 89] joinstr ................................. <sUrl & "?sid">
  [ 90] pushcons 1 .............................. <EMPTY>
  [ 92] getparam 1 .............................. <sSessionID>
  [ 94] pusharglist 2 ........................... <[EMPTY: sSessionID]>
  [ 96] pushproplist ............................ <[EMPTY: sSessionID]>
  [ 97] pusharglist 1 ........................... <[EMPTY: sSessionID]>
  [ 99] extcall 349 ............................. <urlEncode([EMPTY: sSessionID])>
  [102] joinstr ................................. <sUrl & "?sid" & urlEncode([EMPTY: sSessionID])>
  [103] setprop 346 ............................. sUrl = sUrl & "?sid" & urlEncode([EMPTY: sSessionID])
  [106] getprop 346 ............................. <sUrl>
  [109] pusharglist 1 ........................... <sUrl>
  [111] extcall 351 ............................. <getNetText(sUrl)>
  [114] setprop 350 ............................. iNetID = getNetText(sUrl)
  [117] ret
end

on exitFrame me
  [  0] getprop 350 ............................. <iNetID>
  [  3] pusharglist 1 ........................... <iNetID>
  [  5] extcall 15 .............................. <voidp(iNetID)>
  [  7] not ..................................... <not voidp(iNetID)>
  [  8] jmpifz [179] ............................ if not voidp(iNetID) then
  [ 11] getprop 350 ............................. <iNetID>
  [ 14] pusharglist 1 ........................... <iNetID>
  [ 16] extcall 353 ............................. <netDone(iNetID)>
  [ 19] jmpifz [179] ............................ if netDone(iNetID) then
  [ 22] getprop 350 ............................. <iNetID>
  [ 25] pusharglist 1 ........................... <iNetID>
  [ 27] extcall 354 ............................. <netTextresult(iNetID)>
  [ 30] setlocal 0 .............................. sXMLstream = netTextresult(iNetID)
  [ 32] getprop 350 ............................. <iNetID>
  [ 35] pusharglist 1 ........................... <iNetID>
  [ 37] extcall 355 ............................. <netError(iNetID)>
  [ 40] pushcons 64 ............................. <"OK">
  [ 42] nteq .................................... <netError(iNetID) <> "OK">
  [ 43] getlocal 0 .............................. <sXMLstream>
  [ 45] pushcons 1 .............................. <EMPTY>
  [ 47] eq ...................................... <sXMLstream = EMPTY>
  [ 48] or ...................................... <(netError(iNetID) <> "OK") or (sXMLstream = EMPTY)>
  [ 49] getlocal 0 .............................. <sXMLstream>
  [ 51] pushcons 53 ............................. <RETURN>
  [ 53] eq ...................................... <sXMLstream = RETURN>
  [ 54] or ...................................... <(netError(iNetID) <> "OK") or (sXMLstream = EMPTY) or (sXMLstream = RETURN)>
  [ 55] getlocal 0 .............................. <sXMLstream>
  [ 57] pushcons 65 ............................. <" ">
  [ 59] pushcons 53 ............................. <RETURN>
  [ 61] joinstr ................................. <" " & RETURN>
  [ 62] eq ...................................... <sXMLstream = (" " & RETURN)>
  [ 63] or ...................................... <(netError(iNetID) <> "OK") or (sXMLstream = EMPTY) or (sXMLstream = RETURN) or (sXMLstream = (" " & RETURN))>
  [ 64] getlocal 0 .............................. <sXMLstream>
  [ 66] pushcons 53 ............................. <RETURN>
  [ 68] pushcons 65 ............................. <" ">
  [ 70] joinstr ................................. <RETURN & " ">
  [ 71] eq ...................................... <sXMLstream = (RETURN & " ")>
  [ 72] or ...................................... <(netError(iNetID) <> "OK") or (sXMLstream = EMPTY) or (sXMLstream = RETURN) or (sXMLstream = (" " & RETURN)) or (sXMLstream = (RETURN & " "))>
  [ 73] jmpifz [160] ............................ if (netError(iNetID) <> "OK") or (sXMLstream = EMPTY) or (sXMLstream = RETURN) or (sXMLstream = (" " & RETURN)) or (sXMLstream = (RETURN & " ")) then / else
  [ 76] getprop 347 ............................. <iTries>
  [ 79] pushint8 3 .............................. <3>
  [ 81] lt ...................................... <iTries < 3>
  [ 82] jmpifz [142] ............................ if iTries < 3 then / else
  [ 85] pusharglist 0 ........................... <>
  [ 87] extcall 190 ............................. <VOID>
  [ 89] setprop 350 ............................. iNetID = VOID
  [ 92] getprop 346 ............................. <sUrl>
  [ 95] pusharglist 1 ........................... <sUrl>
  [ 97] extcall 351 ............................. <getNetText(sUrl)>
  [100] setprop 350 ............................. iNetID = getNetText(sUrl)
  [103] getprop 347 ............................. <iTries>
  [106] pushint8 1 .............................. <1>
  [108] add ..................................... <iTries + 1>
  [109] setprop 347 ............................. iTries = iTries + 1
  [112] getmovieprop 184 ........................ <the debugPlaybackEnabled>
  [114] jmpifz [139] ............................ if the debugPlaybackEnabled then
  [117] pushcons 66 ............................. <"Network error: the XML stream for the denizen login was empty.">
  [119] pusharglistnoret 1 ...................... <"Network error: the XML stream for the denizen login was empty.">
  [121] extcall 33 .............................. put "Network error: the XML stream for the denizen login was empty."
  [123] pushcons 67 ............................. <"Trying again: attempt #">
  [125] getprop 347 ............................. <iTries>
  [128] joinstr ................................. <"Trying again: attempt #" & iTries>
  [129] pushcons 53 ............................. <RETURN>
  [131] joinstr ................................. <"Trying again: attempt #" & iTries & RETURN>
  [132] pushcons 68 ............................. <"Connecting...">
  [134] joinstr ................................. <"Trying again: attempt #" & iTries & RETURN & "Connecting...">
  [135] pusharglistnoret 1 ...................... <"Trying again: attempt #" & iTries & RETURN & "Connecting...">
  [137] extcall 33 .............................. put "Trying again: attempt #" & iTries & RETURN & "Connecting..."
  [139] jmp [157]
  [142] getglobal 153 ........................... <ElementMgr>
  [144] pushcons 69 ............................. <"ALERT_GENERIC">
  [146] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_GENERIC">
  [148] objcall 206 ............................. ElementMgr.alert("ALERT_GENERIC")
  [150] pusharglist 0 ........................... <>
  [152] extcall 190 ............................. <VOID>
  [154] setprop 350 ............................. iNetID = VOID
  [157] jmp [179]
  [160] getparam 0 .............................. <me>
  [162] getchainedprop 334 ...................... <me.foDenizenManager>
  [165] getlocal 0 .............................. <sXMLstream>
  [167] pusharglistnoret 2 ...................... <me.foDenizenManager, sXMLstream>
  [169] objcall 256 ............................. me.foDenizenManager.loginDenizen(sXMLstream)
  [172] pusharglist 0 ........................... <>
  [174] extcall 190 ............................. <VOID>
  [176] setprop 350 ............................. iNetID = VOID
  [179] ret
end

on createNetworkErrorArray me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 357 .......................... me.plNetworkErrors = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 13] pushint8 4 .............................. <4>
  [ 15] pushcons 70 ............................. <"Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 17] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4, "Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 19] objcall 358 ............................. me.plNetworkErrors.addProp(4, "Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.")
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 27] pushint8 5 .............................. <5>
  [ 29] pushcons 71 ............................. <"Bad MOA Interface.">
  [ 31] pusharglistnoret 3 ...................... <me.plNetworkErrors, 5, "Bad MOA Interface.">
  [ 33] objcall 358 ............................. me.plNetworkErrors.addProp(5, "Bad MOA Interface.")
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 41] pushint8 6 .............................. <6>
  [ 43] pushcons 72 ............................. <"Bad URL or Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 45] pusharglistnoret 3 ...................... <me.plNetworkErrors, 6, "Bad URL or Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 47] objcall 358 ............................. me.plNetworkErrors.addProp(6, "Bad URL or Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.")
  [ 50] getparam 0 .............................. <me>
  [ 52] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 55] pushint8 20 ............................. <20>
  [ 57] pushcons 73 ............................. <"Internal error. Returned by netError() in the Netscape browser if the browser detected a network or internal error.">
  [ 59] pusharglistnoret 3 ...................... <me.plNetworkErrors, 20, "Internal error. Returned by netError() in the Netscape browser if the browser detected a network or internal error.">
  [ 61] objcall 358 ............................. me.plNetworkErrors.addProp(20, "Internal error. Returned by netError() in the Netscape browser if the browser detected a network or internal error.")
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 69] pushint16 4146 .......................... <4146>
  [ 72] pushcons 74 ............................. <"Connection could not be established with the remote host.">
  [ 74] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4146, "Connection could not be established with the remote host.">
  [ 76] objcall 358 ............................. me.plNetworkErrors.addProp(4146, "Connection could not be established with the remote host.")
  [ 79] getparam 0 .............................. <me>
  [ 81] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 84] pushint16 4149 .......................... <4149>
  [ 87] pushcons 75 ............................. <"Data supplied by the server was in an unexpected format.">
  [ 89] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4149, "Data supplied by the server was in an unexpected format.">
  [ 91] objcall 358 ............................. me.plNetworkErrors.addProp(4149, "Data supplied by the server was in an unexpected format.")
  [ 94] getparam 0 .............................. <me>
  [ 96] getchainedprop 357 ...................... <me.plNetworkErrors>
  [ 99] pushint16 4150 .......................... <4150>
  [102] pushcons 76 ............................. <"Unexpected early closing of connection.">
  [104] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4150, "Unexpected early closing of connection.">
  [106] objcall 358 ............................. me.plNetworkErrors.addProp(4150, "Unexpected early closing of connection.")
  [109] getparam 0 .............................. <me>
  [111] getchainedprop 357 ...................... <me.plNetworkErrors>
  [114] pushint16 4154 .......................... <4154>
  [117] pushcons 77 ............................. <"Operation could not be completed due to timeout.">
  [119] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4154, "Operation could not be completed due to timeout.">
  [121] objcall 358 ............................. me.plNetworkErrors.addProp(4154, "Operation could not be completed due to timeout.")
  [124] getparam 0 .............................. <me>
  [126] getchainedprop 357 ...................... <me.plNetworkErrors>
  [129] pushint16 4155 .......................... <4155>
  [132] pushcons 78 ............................. <"Not enough memory available to complete the transaction.">
  [134] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4155, "Not enough memory available to complete the transaction.">
  [136] objcall 358 ............................. me.plNetworkErrors.addProp(4155, "Not enough memory available to complete the transaction.")
  [139] getparam 0 .............................. <me>
  [141] getchainedprop 357 ...................... <me.plNetworkErrors>
  [144] pushint16 4156 .......................... <4156>
  [147] pushcons 79 ............................. <"Protocol reply to request indicates an error in the reply.">
  [149] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4156, "Protocol reply to request indicates an error in the reply.">
  [151] objcall 358 ............................. me.plNetworkErrors.addProp(4156, "Protocol reply to request indicates an error in the reply.")
  [154] getparam 0 .............................. <me>
  [156] getchainedprop 357 ...................... <me.plNetworkErrors>
  [159] pushint16 4157 .......................... <4157>
  [162] pushcons 80 ............................. <"Transaction failed to be authenticated.">
  [164] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4157, "Transaction failed to be authenticated.">
  [166] objcall 358 ............................. me.plNetworkErrors.addProp(4157, "Transaction failed to be authenticated.")
  [169] getparam 0 .............................. <me>
  [171] getchainedprop 357 ...................... <me.plNetworkErrors>
  [174] pushint16 4159 .......................... <4159>
  [177] pushcons 81 ............................. <"Invalid URL.">
  [179] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4159, "Invalid URL.">
  [181] objcall 358 ............................. me.plNetworkErrors.addProp(4159, "Invalid URL.")
  [184] getparam 0 .............................. <me>
  [186] getchainedprop 357 ...................... <me.plNetworkErrors>
  [189] pushint16 4164 .......................... <4164>
  [192] pushcons 82 ............................. <"Could not create a socket.">
  [194] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4164, "Could not create a socket.">
  [196] objcall 358 ............................. me.plNetworkErrors.addProp(4164, "Could not create a socket.")
  [199] getparam 0 .............................. <me>
  [201] getchainedprop 357 ...................... <me.plNetworkErrors>
  [204] pushint16 4165 .......................... <4165>
  [207] pushcons 83 ............................. <"Requested object could not be found (URL may be incorrect).">
  [209] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4165, "Requested object could not be found (URL may be incorrect).">
  [211] objcall 358 ............................. me.plNetworkErrors.addProp(4165, "Requested object could not be found (URL may be incorrect).")
  [214] getparam 0 .............................. <me>
  [216] getchainedprop 357 ...................... <me.plNetworkErrors>
  [219] pushint16 4166 .......................... <4166>
  [222] pushcons 84 ............................. <"Generic proxy failure.">
  [224] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4166, "Generic proxy failure.">
  [226] objcall 358 ............................. me.plNetworkErrors.addProp(4166, "Generic proxy failure.")
  [229] getparam 0 .............................. <me>
  [231] getchainedprop 357 ...................... <me.plNetworkErrors>
  [234] pushint16 4167 .......................... <4167>
  [237] pushcons 85 ............................. <"Transfer was intentionally interrupted by client.">
  [239] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4167, "Transfer was intentionally interrupted by client.">
  [241] objcall 358 ............................. me.plNetworkErrors.addProp(4167, "Transfer was intentionally interrupted by client.")
  [244] getparam 0 .............................. <me>
  [246] getchainedprop 357 ...................... <me.plNetworkErrors>
  [249] pushint16 4242 .......................... <4242>
  [252] pushcons 86 ............................. <"Download stopped by netAbort(url).">
  [254] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4242, "Download stopped by netAbort(url).">
  [256] objcall 358 ............................. me.plNetworkErrors.addProp(4242, "Download stopped by netAbort(url).")
  [259] getparam 0 .............................. <me>
  [261] getchainedprop 357 ...................... <me.plNetworkErrors>
  [264] pushint16 4836 .......................... <4836>
  [267] pushcons 87 ............................. <"Download stopped for an unknown reason, possibly a network error, or the download was abandoned.">
  [269] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4836, "Download stopped for an unknown reason, possibly a network error, or the download was abandoned.">
  [271] objcall 358 ............................. me.plNetworkErrors.addProp(4836, "Download stopped for an unknown reason, possibly a network error, or the download was abandoned.")
  [274] ret
end

on loginModerator me, sScreenName, sPassword
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 88 ............................. <"loginModerator() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"loginModerator() " & sScreenName>
  [  7] getparam 2 .............................. <sPassword>
  [  9] joinpadstr .............................. <"loginModerator() " & sScreenName && sPassword>
  [ 10] pusharglistnoret 2 ...................... <me, "loginModerator() " & sScreenName && sPassword>
  [ 12] objcall 20 .............................. me.debug("loginModerator() " & sScreenName && sPassword)
  [ 14] getglobal 167 ........................... <gbTestMode>
  [ 16] jmpifz [ 42] ............................ if gbTestMode then
  [ 19] pushcons 12 ............................. <"_TIMER_">
  [ 21] pusharglist 1 ........................... <"_TIMER_">
  [ 23] extcall 148 ............................. <script("_TIMER_")>
  [ 25] pushint16 1000 .......................... <1000>
  [ 28] pushsymb 278 ............................ <#loginModerator_Result>
  [ 31] getglobal 153 ........................... <ElementMgr>
  [ 33] pushzero ................................ <0>
  [ 34] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #loginModerator_Result, ElementMgr, 0>
  [ 36] objcall 149 ............................. script("_TIMER_").new(1000, #loginModerator_Result, ElementMgr, 0)
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 71 .............................. return 
  [ 42] getparam 0 .............................. <me>
  [ 44] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 47] getparam 1 .............................. <sScreenName>
  [ 49] getparam 2 .............................. <sPassword>
  [ 51] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, sPassword>
  [ 53] objcall 258 ............................. me.foDenizenManager.loginModerator(sScreenName, sPassword)
  [ 56] ret
end

on logoutDenizen me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 89 ............................. <"logoutDenizen()">
  [  4] pusharglistnoret 2 ...................... <me, "logoutDenizen()">
  [  6] objcall 20 .............................. me.debug("logoutDenizen()")
  [  8] getglobal 167 ........................... <gbTestMode>
  [ 10] jmpifz [ 24] ............................ if gbTestMode then
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 279 ............................. me.logoutDenizen_Result()
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 71 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 29] getparam 1 .............................. <sScreenName>
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 194 ...................... <me.getDenizen>
  [ 35] pusharglist 1 ........................... <me.getDenizen>
  [ 37] objcall 195 ............................. <me.getDenizen.getSecret()>
  [ 39] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, me.getDenizen.getSecret()>
  [ 41] objcall 259 ............................. me.foDenizenManager.logoutDenizen(sScreenName, me.getDenizen.getSecret())
  [ 44] ret
end

on modifyDenizen me, sScreenName, iGender, sAvatarMission, sAvatarString
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 90 ............................. <"modifyDenizen() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"modifyDenizen() " && sScreenName>
  [  7] getparam 2 .............................. <iGender>
  [  9] joinpadstr .............................. <"modifyDenizen() " && sScreenName && iGender>
  [ 10] getparam 3 .............................. <sAvatarMission>
  [ 12] joinpadstr .............................. <"modifyDenizen() " && sScreenName && iGender && sAvatarMission>
  [ 13] getparam 4 .............................. <sAvatarString>
  [ 15] joinpadstr .............................. <"modifyDenizen() " && sScreenName && iGender && sAvatarMission && sAvatarString>
  [ 16] pusharglistnoret 2 ...................... <me, "modifyDenizen() " && sScreenName && iGender && sAvatarMission && sAvatarString>
  [ 18] objcall 20 .............................. me.debug("modifyDenizen() " && sScreenName && iGender && sAvatarMission && sAvatarString)
  [ 20] getglobal 167 ........................... <gbTestMode>
  [ 22] jmpifz [ 55] ............................ if gbTestMode then
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 91 ............................. <"modifyDenizen_Result(0)">
  [ 29] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result(0)">
  [ 31] objcall 20 .............................. me.debug("modifyDenizen_Result(0)")
  [ 33] getglobal 153 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 15 .............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 51] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 153 ........................... <ElementMgr>
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 48] objcall 280 ............................. ElementMgr.modifyDenizen_Result(0)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 71 .............................. return 
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 60] getparam 1 .............................. <sScreenName>
  [ 62] getparam 2 .............................. <iGender>
  [ 64] getparam 3 .............................. <sAvatarMission>
  [ 66] getparam 4 .............................. <sAvatarString>
  [ 68] pusharglistnoret 5 ...................... <me.foDenizenManager, sScreenName, iGender, sAvatarMission, sAvatarString>
  [ 70] objcall 260 ............................. me.foDenizenManager.modifyDenizen(sScreenName, iGender, sAvatarMission, sAvatarString)
  [ 73] ret
end

on getDenizenByScreenName me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 92 ............................. <"getDenizenByScreenName()">
  [  4] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName()">
  [  6] objcall 20 .............................. me.debug("getDenizenByScreenName()")
  [  8] getglobal 167 ........................... <gbTestMode>
  [ 10] jmpifz [156] ............................ if gbTestMode then
  [ 13] pushzero ................................ <0>
  [ 14] setlocal 0 .............................. iError = 0
  [ 16] getparam 1 .............................. <sScreenName>
  [ 18] setparam 1 .............................. sScreenName = sScreenName
  [ 20] pushcons 93 ............................. <"Date">
  [ 22] pusharglist 1 ........................... <"Date">
  [ 24] extcall 36 .............................. <newObject("Date")>
  [ 26] setlocal 1 .............................. oLastAccess = newObject("Date")
  [ 28] pushcons 94 ............................. <"Some Room">
  [ 30] setlocal 2 .............................. sLastSeenIn = "Some Room"
  [ 32] pushcons 95 ............................. <"Some room">
  [ 34] setlocal 3 .............................. sLastSeenInName = "Some room"
  [ 36] pushcons 96 ............................. <"to test">
  [ 38] setlocal 4 .............................. sAvatarMission = "to test"
  [ 40] pushcons 97 ............................. <"hr=003/238,238,238&hd=001/245,226,203&ey=004/245,226,203&fc=001/245,226,203&bd=001/245,226,203&lh=001/245,226,203&rh=001/245,226,203&ch=001/238,238,238&ls=002/238,238,238&rs=002/238,238,238&lg=001/127,102,64&sh=001/194,123,56">
  [ 42] setlocal 5 .............................. sAvatarString = "hr=003/238,238,238&hd=001/245,226,203&ey=004/245,226,203&fc=001/245,226,203&bd=001/245,226,203&lh=001/245,226,203&rh=001/245,226,203&ch=001/238,238,238&ls=002/238,238,238&rs=002/238,238,238&lg=001/127,102,64&sh=001/194,123,56"
  [ 44] pushint8 1 .............................. <1>
  [ 46] setlocal 6 .............................. bOnline = 1
  [ 48] pushint8 1 .............................. <1>
  [ 50] setlocal 7 .............................. bExists = 1
  [ 52] pushint8 1 .............................. <1>
  [ 54] setlocal 8 .............................. iGender = 1
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 98 ............................. <"getDenizenByScreenName_Result()  screenName: ">
  [ 60] getparam 1 .............................. <sScreenName>
  [ 62] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName>
  [ 63] pushcons 99 ............................. <", lastAccess: ">
  [ 65] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: ">
  [ 66] getlocal 1 .............................. <oLastAccess>
  [ 68] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess>
  [ 69] pushcons 100 ............................ <", lastSeen: ">
  [ 71] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: ">
  [ 72] getlocal 2 .............................. <sLastSeenIn>
  [ 74] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn>
  [ 75] pushcons 101 ............................ <", avatarMission: ">
  [ 77] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: ">
  [ 78] getlocal 4 .............................. <sAvatarMission>
  [ 80] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission>
  [ 81] pushcons 102 ............................ <", sAvatarString: ">
  [ 83] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: ">
  [ 84] getlocal 5 .............................. <sAvatarString>
  [ 86] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString>
  [ 87] pushcons 103 ............................ <", bOnline: ">
  [ 89] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: ">
  [ 90] getlocal 6 .............................. <bOnline>
  [ 92] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline>
  [ 93] pushcons 104 ............................ <", bExists: ">
  [ 95] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: ">
  [ 96] getlocal 7 .............................. <bExists>
  [ 98] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists>
  [ 99] pushcons 105 ............................ <", sLastSeenInName: ">
  [101] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: ">
  [102] getlocal 3 .............................. <sLastSeenInName>
  [104] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName>
  [105] pushcons 106 ............................ <", iGender: ">
  [107] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: ">
  [108] getlocal 8 .............................. <iGender>
  [110] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: " & iGender>
  [111] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: " & iGender>
  [113] objcall 20 .............................. me.debug("getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: " & iGender)
  [115] getglobal 153 ........................... <ElementMgr>
  [117] pusharglist 1 ........................... <ElementMgr>
  [119] extcall 15 .............................. <voidp(ElementMgr)>
  [121] not ..................................... <not voidp(ElementMgr)>
  [122] jmpifz [152] ............................ if not voidp(ElementMgr) then
  [125] getglobal 153 ........................... <ElementMgr>
  [127] getlocal 0 .............................. <iError>
  [129] getparam 1 .............................. <sScreenName>
  [131] getlocal 1 .............................. <oLastAccess>
  [133] getlocal 2 .............................. <sLastSeenIn>
  [135] getlocal 4 .............................. <sAvatarMission>
  [137] getlocal 5 .............................. <sAvatarString>
  [139] getlocal 6 .............................. <bOnline>
  [141] getlocal 7 .............................. <bExists>
  [143] getlocal 3 .............................. <sLastSeenInName>
  [145] getlocal 8 .............................. <iGender>
  [147] pusharglistnoret 11 ..................... <ElementMgr, iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender>
  [149] objcall 281 ............................. ElementMgr.getDenizenByScreenName_Result(iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender)
  [152] pusharglistnoret 0 ...................... <>
  [154] extcall 71 .............................. return 
  [156] getparam 0 .............................. <me>
  [158] getchainedprop 334 ...................... <me.foDenizenManager>
  [161] getparam 1 .............................. <sScreenName>
  [163] pusharglistnoret 2 ...................... <me.foDenizenManager, sScreenName>
  [165] objcall 261 ............................. me.foDenizenManager.getDenizenByScreenName(sScreenName)
  [168] ret
end

on getDenizenBalance me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 107 ............................ <"getDenizenBalance() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getDenizenBalance() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getDenizenBalance() " & sScreenName>
  [  9] objcall 20 .............................. me.debug("getDenizenBalance() " & sScreenName)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 74] ............................ if gbTestMode then
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. iError = 0
  [ 19] pushint16 1000 .......................... <1000>
  [ 22] pusharglist 1 ........................... <1000>
  [ 24] extcall 246 ............................. <random(1000)>
  [ 26] pushint16 1000 .......................... <1000>
  [ 29] add ..................................... <random(1000) + 1000>
  [ 30] setlocal 1 .............................. iBalance = random(1000) + 1000
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 108 ............................ <"getDenizenBalance_Result() iError: ">
  [ 36] getlocal 0 .............................. <iError>
  [ 38] joinstr ................................. <"getDenizenBalance_Result() iError: " & iError>
  [ 39] pushcons 109 ............................ <", iBalance: ">
  [ 41] joinstr ................................. <"getDenizenBalance_Result() iError: " & iError & ", iBalance: ">
  [ 42] getlocal 1 .............................. <iBalance>
  [ 44] joinstr ................................. <"getDenizenBalance_Result() iError: " & iError & ", iBalance: " & iBalance>
  [ 45] pusharglistnoret 2 ...................... <me, "getDenizenBalance_Result() iError: " & iError & ", iBalance: " & iBalance>
  [ 47] objcall 20 .............................. me.debug("getDenizenBalance_Result() iError: " & iError & ", iBalance: " & iBalance)
  [ 49] getglobal 153 ........................... <ElementMgr>
  [ 51] pusharglist 1 ........................... <ElementMgr>
  [ 53] extcall 15 .............................. <voidp(ElementMgr)>
  [ 55] not ..................................... <not voidp(ElementMgr)>
  [ 56] jmpifz [ 70] ............................ if not voidp(ElementMgr) then
  [ 59] getglobal 153 ........................... <ElementMgr>
  [ 61] getlocal 0 .............................. <iError>
  [ 63] getlocal 1 .............................. <iBalance>
  [ 65] pusharglistnoret 3 ...................... <ElementMgr, iError, iBalance>
  [ 67] objcall 282 ............................. ElementMgr.getDenizenBalance_Result(iError, iBalance)
  [ 70] pusharglistnoret 0 ...................... <>
  [ 72] extcall 71 .............................. return 
  [ 74] getparam 0 .............................. <me>
  [ 76] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 79] getparam 1 .............................. <sScreenName>
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglist 1 ........................... <me>
  [ 85] objcall 194 ............................. <me.getDenizen()>
  [ 87] pusharglist 1 ........................... <me.getDenizen()>
  [ 89] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 91] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, me.getDenizen().getSecret()>
  [ 93] objcall 262 ............................. me.foDenizenManager.getDenizenBalance(sScreenName, me.getDenizen().getSecret())
  [ 96] ret
end

on isModerator me, sScreenName
  [  0] getglobal 167 ........................... <gbTestMode>
  [  2] jmpifz [ 16] ............................ if gbTestMode then
  [  5] getparam 0 .............................. <me>
  [  7] pushint8 1 .............................. <1>
  [  9] setobjprop 333 .......................... me.bIsModerator = 1
  [ 12] pusharglistnoret 0 ...................... <>
  [ 14] extcall 71 .............................. return 
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 21] getparam 1 .............................. <sScreenName>
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglist 1 ........................... <me>
  [ 27] objcall 194 ............................. <me.getDenizen()>
  [ 29] pusharglist 1 ........................... <me.getDenizen()>
  [ 31] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 33] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, me.getDenizen().getSecret()>
  [ 35] objcall 263 ............................. me.foDenizenManager.isModerator(sScreenName, me.getDenizen().getSecret())
  [ 38] ret
end

on getModeratorsOnline me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 110 ............................ <"getModeratorsOnline() ">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "getModeratorsOnline() ", 1>
  [  8] objcall 20 .............................. me.debug("getModeratorsOnline() ", 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglist 1 ........................... <me>
  [ 29] objcall 194 ............................. <me.getDenizen()>
  [ 31] pusharglist 1 ........................... <me.getDenizen()>
  [ 33] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 35] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 37] objcall 264 ............................. me.foDenizenManager.getModeratorsOnline(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 40] ret
end

on getOnlineFriends me, aToScreenNameList
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 111 ............................ <"getOnlineFriends_Result() ">
  [  4] getparam 1 .............................. <aToScreenNameList>
  [  6] joinstr ................................. <"getOnlineFriends_Result() " & aToScreenNameList>
  [  7] pusharglistnoret 2 ...................... <me, "getOnlineFriends_Result() " & aToScreenNameList>
  [  9] objcall 20 .............................. me.debug("getOnlineFriends_Result() " & aToScreenNameList)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 20] ............................ if gbTestMode then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 71 .............................. return 
  [ 20] pushcons 9 .............................. <"Array">
  [ 22] pusharglist 1 ........................... <"Array">
  [ 24] extcall 36 .............................. <newObject("Array")>
  [ 26] setlocal 0 .............................. faToScreenNameList = newObject("Array")
  [ 28] getparam 1 .............................. <aToScreenNameList>
  [ 30] peek 0
  [ 32] pusharglist 1
  [ 34] extcall 42
  [ 36] pushint8 1
  [ 38] peek 0
  [ 40] peek 2
  [ 42] lteq
  [ 43] jmpifz [ 70] ............................ repeat with _sScreenName in aToScreenNameList
  [ 46] peek 2
  [ 48] peek 1
  [ 50] pusharglist 2
  [ 52] extcall 43
  [ 54] setlocal 1
  [ 56] getlocal 0 .............................. <faToScreenNameList>
  [ 58] getlocal 1 .............................. <_sScreenName>
  [ 60] pusharglistnoret 2 ...................... <faToScreenNameList, _sScreenName>
  [ 62] objcall 369 ............................. faToScreenNameList.push(_sScreenName)
  [ 65] pushint8 1
  [ 67] add
  [ 68] endrepeat [ 38]
  [ 70] pop 3
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 77] getparam 0 .............................. <me>
  [ 79] pusharglist 1 ........................... <me>
  [ 81] objcall 198 ............................. <me.getScreenName()>
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglist 1 ........................... <me>
  [ 87] objcall 194 ............................. <me.getDenizen()>
  [ 89] pusharglist 1 ........................... <me.getDenizen()>
  [ 91] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 93] getlocal 0 .............................. <faToScreenNameList>
  [ 95] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getScreenName(), me.getDenizen().getSecret(), faToScreenNameList>
  [ 97] objcall 265 ............................. me.foDenizenManager.getOnlineFriends(me.getScreenName(), me.getDenizen().getSecret(), faToScreenNameList)
  [100] ret
end

on getMessenger me, sScreenName, iFriendListSize, iEnemyListSize, iInviteListSize, iMessageListSize
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 112 ............................ <"getMessenger() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"getMessenger() " && sScreenName>
  [  7] getparam 2 .............................. <iFriendListSize>
  [  9] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize>
  [ 10] getparam 3 .............................. <iEnemyListSize>
  [ 12] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize>
  [ 13] getparam 4 .............................. <iInviteListSize>
  [ 15] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize>
  [ 16] getparam 5 .............................. <iMessageListSize>
  [ 18] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize && iMessageListSize>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglistnoret 3 ...................... <me, "getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize && iMessageListSize, 1>
  [ 23] objcall 20 .............................. me.debug("getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize && iMessageListSize, 1)
  [ 25] pushcons 113 ............................ <"Parameters:">
  [ 27] pushcons 53 ............................. <RETURN>
  [ 29] joinstr ................................. <"Parameters:" & RETURN>
  [ 30] pusharglistnoret 1 ...................... <"Parameters:" & RETURN>
  [ 32] extcall 33 .............................. put "Parameters:" & RETURN
  [ 34] pushcons 114 ............................ <"sScreenName:">
  [ 36] getparam 1 .............................. <sScreenName>
  [ 38] joinpadstr .............................. <"sScreenName:" && sScreenName>
  [ 39] pusharglistnoret 1 ...................... <"sScreenName:" && sScreenName>
  [ 41] extcall 33 .............................. put "sScreenName:" && sScreenName
  [ 43] pushcons 115 ............................ <"iFriendListSize: ">
  [ 45] getparam 2 .............................. <iFriendListSize>
  [ 47] joinpadstr .............................. <"iFriendListSize: " && iFriendListSize>
  [ 48] pusharglistnoret 1 ...................... <"iFriendListSize: " && iFriendListSize>
  [ 50] extcall 33 .............................. put "iFriendListSize: " && iFriendListSize
  [ 52] pushcons 116 ............................ <"iEnemyListSize:">
  [ 54] getparam 3 .............................. <iEnemyListSize>
  [ 56] joinpadstr .............................. <"iEnemyListSize:" && iEnemyListSize>
  [ 57] pusharglistnoret 1 ...................... <"iEnemyListSize:" && iEnemyListSize>
  [ 59] extcall 33 .............................. put "iEnemyListSize:" && iEnemyListSize
  [ 61] pushcons 117 ............................ <"iInviteListSize:">
  [ 63] getparam 4 .............................. <iInviteListSize>
  [ 65] joinpadstr .............................. <"iInviteListSize:" && iInviteListSize>
  [ 66] pusharglistnoret 1 ...................... <"iInviteListSize:" && iInviteListSize>
  [ 68] extcall 33 .............................. put "iInviteListSize:" && iInviteListSize
  [ 70] pushcons 118 ............................ <"iMessageListSize:">
  [ 72] getparam 5 .............................. <iMessageListSize>
  [ 74] joinpadstr .............................. <"iMessageListSize:" && iMessageListSize>
  [ 75] pusharglistnoret 1 ...................... <"iMessageListSize:" && iMessageListSize>
  [ 77] extcall 33 .............................. put "iMessageListSize:" && iMessageListSize
  [ 79] getglobal 250 ........................... <gFeatureSet>
  [ 81] pushsymb 373 ............................ <#MESSENGER>
  [ 84] pusharglist 2 ........................... <gFeatureSet, #MESSENGER>
  [ 86] objcall 374 ............................. <gFeatureSet.isEnabled(#MESSENGER)>
  [ 89] not ..................................... <not gFeatureSet.isEnabled(#MESSENGER)>
  [ 90] jmpifz [ 97] ............................ if not gFeatureSet.isEnabled(#MESSENGER) then
  [ 93] pusharglistnoret 0 ...................... <>
  [ 95] extcall 71 .............................. return 
  [ 97] getparam 1 .............................. <sScreenName>
  [ 99] pusharglist 1 ........................... <sScreenName>
  [101] extcall 15 .............................. <voidp(sScreenName)>
  [103] jmpifz [114] ............................ if voidp(sScreenName) then
  [106] getparam 0 .............................. <me>
  [108] pusharglist 1 ........................... <me>
  [110] objcall 198 ............................. <me.getScreenName()>
  [112] setparam 1 .............................. sScreenName = me.getScreenName()
  [114] pushint8 50 ............................. <50>
  [116] setparam 2 .............................. iFriendListSize = 50
  [118] pushint8 1 .............................. <1>
  [120] setparam 3 .............................. iEnemyListSize = 1
  [122] pushint8 20 ............................. <20>
  [124] setparam 4 .............................. iInviteListSize = 20
  [126] pushint8 50 ............................. <50>
  [128] setparam 5 .............................. iMessageListSize = 50
  [130] getglobal 167 ........................... <gbTestMode>
  [132] jmpifz [260] ............................ if gbTestMode then
  [135] pushzero ................................ <0>
  [136] setlocal 0 .............................. iError = 0
  [138] pushint8 1 .............................. <1>
  [140] setlocal 1 .............................. iEnemyCount = 1
  [142] pushint8 2 .............................. <2>
  [144] setlocal 2 .............................. iFriendCount = 2
  [146] pushint8 3 .............................. <3>
  [148] setlocal 3 .............................. iInviteCount = 3
  [150] pushint8 4 .............................. <4>
  [152] setlocal 4 .............................. iTotalMessageCount = 4
  [154] getparam 0 .............................. <me>
  [156] pusharglist 1 ........................... <me>
  [158] objcall 301 ............................. <me.getTestFriends()>
  [161] setlocal 5 .............................. aFriends = me.getTestFriends()
  [163] getparam 0 .............................. <me>
  [165] pusharglist 1 ........................... <me>
  [167] objcall 300 ............................. <me.getTestDenizens()>
  [170] setlocal 6 .............................. aEnemies = me.getTestDenizens()
  [172] getparam 0 .............................. <me>
  [174] pusharglist 1 ........................... <me>
  [176] objcall 300 ............................. <me.getTestDenizens()>
  [179] setlocal 7 .............................. aInvites = me.getTestDenizens()
  [181] getparam 0 .............................. <me>
  [183] pusharglist 1 ........................... <me>
  [185] objcall 302 ............................. <me.getTestMessages()>
  [188] setlocal 8 .............................. aMessages = me.getTestMessages()
  [190] getparam 0 .............................. <me>
  [192] pushcons 119 ............................ <"getMessenger_Result()">
  [194] getlocal 0 .............................. <iError>
  [196] joinpadstr .............................. <"getMessenger_Result()" && iError>
  [197] getlocal 1 .............................. <iEnemyCount>
  [199] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount>
  [200] getlocal 2 .............................. <iFriendCount>
  [202] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount>
  [203] getlocal 3 .............................. <iInviteCount>
  [205] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount>
  [206] getlocal 4 .............................. <iTotalMessageCount>
  [208] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount>
  [209] getlocal 5 .............................. <aFriends>
  [211] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends>
  [212] getlocal 6 .............................. <aEnemies>
  [214] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies>
  [215] getlocal 7 .............................. <aInvites>
  [217] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites>
  [218] getlocal 8 .............................. <aMessages>
  [220] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites && aMessages>
  [221] pusharglistnoret 2 ...................... <me, "getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites && aMessages>
  [223] objcall 20 .............................. me.debug("getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites && aMessages)
  [225] getglobal 153 ........................... <ElementMgr>
  [227] pusharglist 1 ........................... <ElementMgr>
  [229] extcall 15 .............................. <voidp(ElementMgr)>
  [231] not ..................................... <not voidp(ElementMgr)>
  [232] jmpifz [260] ............................ if not voidp(ElementMgr) then
  [235] getglobal 153 ........................... <ElementMgr>
  [237] getlocal 0 .............................. <iError>
  [239] getlocal 2 .............................. <iFriendCount>
  [241] getlocal 1 .............................. <iEnemyCount>
  [243] getlocal 3 .............................. <iInviteCount>
  [245] getlocal 4 .............................. <iTotalMessageCount>
  [247] getlocal 5 .............................. <aFriends>
  [249] getlocal 6 .............................. <aEnemies>
  [251] getlocal 7 .............................. <aInvites>
  [253] getlocal 8 .............................. <aMessages>
  [255] pusharglistnoret 10 ..................... <ElementMgr, iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages>
  [257] objcall 375 ............................. ElementMgr.getMessenger_Result(iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages)
  [260] getparam 0 .............................. <me>
  [262] getchainedprop 334 ...................... <me.foDenizenManager>
  [265] getparam 1 .............................. <sScreenName>
  [267] getparam 0 .............................. <me>
  [269] pusharglist 1 ........................... <me>
  [271] objcall 194 ............................. <me.getDenizen()>
  [273] pusharglist 1 ........................... <me.getDenizen()>
  [275] objcall 195 ............................. <me.getDenizen().getSecret()>
  [277] getparam 2 .............................. <iFriendListSize>
  [279] getparam 3 .............................. <iEnemyListSize>
  [281] getparam 4 .............................. <iInviteListSize>
  [283] getparam 5 .............................. <iMessageListSize>
  [285] pusharglistnoret 7 ...................... <me.foDenizenManager, sScreenName, me.getDenizen().getSecret(), iFriendListSize, iEnemyListSize, iInviteListSize, iMessageListSize>
  [287] objcall 266 ............................. me.foDenizenManager.getMessenger(sScreenName, me.getDenizen().getSecret(), iFriendListSize, iEnemyListSize, iInviteListSize, iMessageListSize)
  [290] ret
end

on sendMessage me, sFromScreenName, aToScreenNameList, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 120 ............................ <"sendMessage() ">
  [  4] getparam 1 .............................. <sFromScreenName>
  [  6] joinstr ................................. <"sendMessage() " & sFromScreenName>
  [  7] getparam 2 .............................. <aToScreenNameList>
  [  9] joinpadstr .............................. <"sendMessage() " & sFromScreenName && aToScreenNameList>
  [ 10] pusharglistnoret 2 ...................... <me, "sendMessage() " & sFromScreenName && aToScreenNameList>
  [ 12] objcall 20 .............................. me.debug("sendMessage() " & sFromScreenName && aToScreenNameList)
  [ 14] getglobal 167 ........................... <gbTestMode>
  [ 16] jmpifz [ 56] ............................ if gbTestMode then
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. iError = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 121 ............................ <"sendMessage_Result() iError: ">
  [ 26] getlocal 0 .............................. <iError>
  [ 28] joinstr ................................. <"sendMessage_Result() iError: " & iError>
  [ 29] pusharglistnoret 2 ...................... <me, "sendMessage_Result() iError: " & iError>
  [ 31] objcall 20 .............................. me.debug("sendMessage_Result() iError: " & iError)
  [ 33] getglobal 153 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 15 .............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 52] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 153 ........................... <ElementMgr>
  [ 45] getlocal 0 .............................. <iError>
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 49] objcall 287 ............................. ElementMgr.sendMessage_Result(iError)
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 71 .............................. return 
  [ 56] getglobal 76 ............................ <oStudio>
  [ 58] pusharglist 1 ........................... <oStudio>
  [ 60] extcall 15 .............................. <voidp(oStudio)>
  [ 62] not ..................................... <not voidp(oStudio)>
  [ 63] jmpifz [ 79] ............................ if not voidp(oStudio) then
  [ 66] getglobal 76 ............................ <oStudio>
  [ 68] getparam 1 .............................. <sFromScreenName>
  [ 70] getparam 2 .............................. <aToScreenNameList>
  [ 72] getparam 3 .............................. <sMessage>
  [ 74] pusharglistnoret 4 ...................... <oStudio, sFromScreenName, aToScreenNameList, sMessage>
  [ 76] objcall 267 ............................. oStudio.sendMessage(sFromScreenName, aToScreenNameList, sMessage)
  [ 79] ret
end

on removeMessage me, sSender, sRecipient, sMessageHash
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 122 ............................ <"removeMessage() ">
  [  4] getparam 1 .............................. <sSender>
  [  6] joinstr ................................. <"removeMessage() " & sSender>
  [  7] getparam 2 .............................. <sRecipient>
  [  9] joinpadstr .............................. <"removeMessage() " & sSender && sRecipient>
  [ 10] getparam 3 .............................. <sMessageHash>
  [ 12] joinpadstr .............................. <"removeMessage() " & sSender && sRecipient && sMessageHash>
  [ 13] pusharglistnoret 2 ...................... <me, "removeMessage() " & sSender && sRecipient && sMessageHash>
  [ 15] objcall 20 .............................. me.debug("removeMessage() " & sSender && sRecipient && sMessageHash)
  [ 17] getglobal 167 ........................... <gbTestMode>
  [ 19] jmpifz [ 59] ............................ if gbTestMode then
  [ 22] pushzero ................................ <0>
  [ 23] setlocal 0 .............................. iError = 0
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 123 ............................ <"removeMessage_Result() iError: ">
  [ 29] getlocal 0 .............................. <iError>
  [ 31] joinstr ................................. <"removeMessage_Result() iError: " & iError>
  [ 32] pusharglistnoret 2 ...................... <me, "removeMessage_Result() iError: " & iError>
  [ 34] objcall 20 .............................. me.debug("removeMessage_Result() iError: " & iError)
  [ 36] getglobal 153 ........................... <ElementMgr>
  [ 38] pusharglist 1 ........................... <ElementMgr>
  [ 40] extcall 15 .............................. <voidp(ElementMgr)>
  [ 42] not ..................................... <not voidp(ElementMgr)>
  [ 43] jmpifz [ 55] ............................ if not voidp(ElementMgr) then
  [ 46] getglobal 153 ........................... <ElementMgr>
  [ 48] getlocal 0 .............................. <iError>
  [ 50] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 52] objcall 288 ............................. ElementMgr.removeMessage_Result(iError)
  [ 55] pusharglistnoret 0 ...................... <>
  [ 57] extcall 71 .............................. return 
  [ 59] getglobal 76 ............................ <oStudio>
  [ 61] pusharglist 1 ........................... <oStudio>
  [ 63] extcall 15 .............................. <voidp(oStudio)>
  [ 65] not ..................................... <not voidp(oStudio)>
  [ 66] jmpifz [ 82] ............................ if not voidp(oStudio) then
  [ 69] getglobal 76 ............................ <oStudio>
  [ 71] getparam 1 .............................. <sSender>
  [ 73] getparam 2 .............................. <sRecipient>
  [ 75] getparam 3 .............................. <sMessageHash>
  [ 77] pusharglistnoret 4 ...................... <oStudio, sSender, sRecipient, sMessageHash>
  [ 79] objcall 268 ............................. oStudio.removeMessage(sSender, sRecipient, sMessageHash)
  [ 82] ret
end

on rejectInvitation me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 124 ............................ <"rejectInvitation() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"rejectInvitation() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"rejectInvitation() " & sInviter && sInvitee>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "rejectInvitation() " & sInviter && sInvitee, 1>
  [ 14] objcall 20 .............................. me.debug("rejectInvitation() " & sInviter && sInvitee, 1)
  [ 16] getglobal 167 ........................... <gbTestMode>
  [ 18] jmpifz [ 58] ............................ if gbTestMode then
  [ 21] pushzero ................................ <0>
  [ 22] setlocal 0 .............................. iError = 0
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 125 ............................ <"rejectInvitation_Result() iError: ">
  [ 28] getlocal 0 .............................. <iError>
  [ 30] joinstr ................................. <"rejectInvitation_Result() iError: " & iError>
  [ 31] pusharglistnoret 2 ...................... <me, "rejectInvitation_Result() iError: " & iError>
  [ 33] objcall 20 .............................. me.debug("rejectInvitation_Result() iError: " & iError)
  [ 35] getglobal 153 ........................... <ElementMgr>
  [ 37] pusharglist 1 ........................... <ElementMgr>
  [ 39] extcall 15 .............................. <voidp(ElementMgr)>
  [ 41] not ..................................... <not voidp(ElementMgr)>
  [ 42] jmpifz [ 54] ............................ if not voidp(ElementMgr) then
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] getlocal 0 .............................. <iError>
  [ 49] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 51] objcall 289 ............................. ElementMgr.rejectInvitation_Result(iError)
  [ 54] pusharglistnoret 0 ...................... <>
  [ 56] extcall 71 .............................. return 
  [ 58] getglobal 76 ............................ <oStudio>
  [ 60] pusharglist 1 ........................... <oStudio>
  [ 62] extcall 15 .............................. <voidp(oStudio)>
  [ 64] not ..................................... <not voidp(oStudio)>
  [ 65] jmpifz [ 77] ............................ if not voidp(oStudio) then
  [ 68] getglobal 76 ............................ <oStudio>
  [ 70] getparam 2 .............................. <sInvitee>
  [ 72] pusharglistnoret 2 ...................... <oStudio, sInvitee>
  [ 74] objcall 269 ............................. oStudio.rejectInvitation(sInvitee)
  [ 77] ret
end

on acceptInvitation me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 126 ............................ <"acceptInvitation() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"acceptInvitation() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"acceptInvitation() " & sInviter && sInvitee>
  [ 10] pusharglistnoret 2 ...................... <me, "acceptInvitation() " & sInviter && sInvitee>
  [ 12] objcall 20 .............................. me.debug("acceptInvitation() " & sInviter && sInvitee)
  [ 14] getglobal 167 ........................... <gbTestMode>
  [ 16] jmpifz [ 56] ............................ if gbTestMode then
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. iError = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 127 ............................ <"acceptInvitation_Result() iError: ">
  [ 26] getlocal 0 .............................. <iError>
  [ 28] joinstr ................................. <"acceptInvitation_Result() iError: " & iError>
  [ 29] pusharglistnoret 2 ...................... <me, "acceptInvitation_Result() iError: " & iError>
  [ 31] objcall 20 .............................. me.debug("acceptInvitation_Result() iError: " & iError)
  [ 33] getglobal 153 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 15 .............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 52] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 153 ........................... <ElementMgr>
  [ 45] getlocal 0 .............................. <iError>
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 49] objcall 290 ............................. ElementMgr.acceptInvitation_Result(iError)
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 71 .............................. return 
  [ 56] getglobal 76 ............................ <oStudio>
  [ 58] pusharglist 1 ........................... <oStudio>
  [ 60] extcall 15 .............................. <voidp(oStudio)>
  [ 62] not ..................................... <not voidp(oStudio)>
  [ 63] jmpifz [ 77] ............................ if not voidp(oStudio) then
  [ 66] getglobal 76 ............................ <oStudio>
  [ 68] getparam 1 .............................. <sInviter>
  [ 70] getparam 2 .............................. <sInvitee>
  [ 72] pusharglistnoret 3 ...................... <oStudio, sInviter, sInvitee>
  [ 74] objcall 270 ............................. oStudio.acceptInvitation(sInviter, sInvitee)
  [ 77] ret
end

on inviteFriend me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 128 ............................ <"inviteFriend() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"inviteFriend() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"inviteFriend() " & sInviter && sInvitee>
  [ 10] pusharglistnoret 2 ...................... <me, "inviteFriend() " & sInviter && sInvitee>
  [ 12] objcall 20 .............................. me.debug("inviteFriend() " & sInviter && sInvitee)
  [ 14] getparam 1 .............................. <sInviter>
  [ 16] getparam 2 .............................. <sInvitee>
  [ 18] eq ...................................... <sInviter = sInvitee>
  [ 19] jmpifz [ 26] ............................ if sInviter = sInvitee then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 71 .............................. return 
  [ 26] getparam 2 .............................. <sInvitee>
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 198 ............................. <me.getScreenName()>
  [ 34] eq ...................................... <sInvitee = me.getScreenName()>
  [ 35] jmpifz [ 48] ............................ if sInvitee = me.getScreenName() then
  [ 38] pushcons 129 ............................ <"CAN'T INVITE INVITEE">
  [ 40] pusharglistnoret 1 ...................... <"CAN'T INVITE INVITEE">
  [ 42] extcall 206 ............................. alert("CAN'T INVITE INVITEE")
  [ 44] pusharglistnoret 0 ...................... <>
  [ 46] extcall 71 .............................. return 
  [ 48] getglobal 167 ........................... <gbTestMode>
  [ 50] jmpifz [ 90] ............................ if gbTestMode then
  [ 53] pushzero ................................ <0>
  [ 54] setlocal 0 .............................. iError = 0
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 130 ............................ <"inviteFriend_Result() iError: ">
  [ 60] getlocal 0 .............................. <iError>
  [ 62] joinstr ................................. <"inviteFriend_Result() iError: " & iError>
  [ 63] pusharglistnoret 2 ...................... <me, "inviteFriend_Result() iError: " & iError>
  [ 65] objcall 20 .............................. me.debug("inviteFriend_Result() iError: " & iError)
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 291 ............................. ElementMgr.inviteFriend_Result(iError)
  [ 86] pusharglistnoret 0 ...................... <>
  [ 88] extcall 71 .............................. return 
  [ 90] getglobal 76 ............................ <oStudio>
  [ 92] pusharglist 1 ........................... <oStudio>
  [ 94] extcall 15 .............................. <voidp(oStudio)>
  [ 96] not ..................................... <not voidp(oStudio)>
  [ 97] jmpifz [111] ............................ if not voidp(oStudio) then
  [100] getglobal 76 ............................ <oStudio>
  [102] getparam 1 .............................. <sInviter>
  [104] getparam 2 .............................. <sInvitee>
  [106] pusharglistnoret 3 ...................... <oStudio, sInviter, sInvitee>
  [108] objcall 271 ............................. oStudio.inviteFriend(sInviter, sInvitee)
  [111] ret
end

on removeFriends me, sScreenName, aRemoveList
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 131 ............................ <"removeFriends() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"removeFriends() " & sScreenName>
  [  7] getparam 2 .............................. <aRemoveList>
  [  9] joinpadstr .............................. <"removeFriends() " & sScreenName && aRemoveList>
  [ 10] pusharglistnoret 2 ...................... <me, "removeFriends() " & sScreenName && aRemoveList>
  [ 12] objcall 20 .............................. me.debug("removeFriends() " & sScreenName && aRemoveList)
  [ 14] getglobal 167 ........................... <gbTestMode>
  [ 16] jmpifz [ 56] ............................ if gbTestMode then
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. iError = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 132 ............................ <"removeFriends_Result() iError: ">
  [ 26] getlocal 0 .............................. <iError>
  [ 28] joinstr ................................. <"removeFriends_Result() iError: " & iError>
  [ 29] pusharglistnoret 2 ...................... <me, "removeFriends_Result() iError: " & iError>
  [ 31] objcall 20 .............................. me.debug("removeFriends_Result() iError: " & iError)
  [ 33] getglobal 153 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 15 .............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 52] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 153 ........................... <ElementMgr>
  [ 45] getlocal 0 .............................. <iError>
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 49] objcall 292 ............................. ElementMgr.removeFriends_Result(iError)
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 71 .............................. return 
  [ 56] getglobal 76 ............................ <oStudio>
  [ 58] pusharglist 1 ........................... <oStudio>
  [ 60] extcall 15 .............................. <voidp(oStudio)>
  [ 62] not ..................................... <not voidp(oStudio)>
  [ 63] jmpifz [ 77] ............................ if not voidp(oStudio) then
  [ 66] getglobal 76 ............................ <oStudio>
  [ 68] getparam 1 .............................. <sScreenName>
  [ 70] getparam 2 .............................. <aRemoveList>
  [ 72] pusharglistnoret 3 ...................... <oStudio, sScreenName, aRemoveList>
  [ 74] objcall 272 ............................. oStudio.removeFriends(sScreenName, aRemoveList)
  [ 77] ret
end

on getExtendedDenizenInfo me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 133 ............................ <"getExtendedDenizenInfo() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getExtendedDenizenInfo() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo() " & sScreenName>
  [  9] objcall 20 .............................. me.debug("getExtendedDenizenInfo() " & sScreenName)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [155] ............................ if gbTestMode then
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. iError = 0
  [ 19] pushcons 134 ............................ <"Consume as much Coke as possible">
  [ 21] setlocal 1 .............................. sAvatarMission = "Consume as much Coke as possible"
  [ 23] pushsymb 395 ............................ <#messages>
  [ 26] pushint8 33 ............................. <33>
  [ 28] pushsymb 396 ............................ <#kicks>
  [ 31] pushint8 14 ............................. <14>
  [ 33] pushsymb 397 ............................ <#bans>
  [ 36] pushint8 10 ............................. <10>
  [ 38] pusharglist 6 ........................... <[#messages: 33, #kicks: 14, #bans: 10]>
  [ 40] pushproplist ............................ <[#messages: 33, #kicks: 14, #bans: 10]>
  [ 41] setlocal 2 .............................. aLevelList = [#messages: 33, #kicks: 14, #bans: 10]
  [ 43] pushint8 25 ............................. <25>
  [ 45] setlocal 3 .............................. iPossessions_purchased = 25
  [ 47] pushint8 47 ............................. <47>
  [ 49] setlocal 4 .............................. iPossessions_total = 47
  [ 51] pushint8 19 ............................. <19>
  [ 53] setlocal 5 .............................. iPossessions_backpack = 19
  [ 55] pushint8 1 .............................. <1>
  [ 57] setlocal 6 .............................. bInfluencer = 1
  [ 59] pushint8 79 ............................. <79>
  [ 61] setlocal 7 .............................. iLogInTotal = 79
  [ 63] getparam 0 .............................. <me>
  [ 65] pushcons 135 ............................ <"getExtendedDenizenInfo_Result() screenName: ">
  [ 67] getparam 1 .............................. <sScreenName>
  [ 69] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName>
  [ 70] pushcons 101 ............................ <", avatarMission: ">
  [ 72] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: ">
  [ 73] getlocal 1 .............................. <sAvatarMission>
  [ 75] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission>
  [ 76] pushcons 136 ............................ <", levelList: ">
  [ 78] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: ">
  [ 79] getlocal 2 .............................. <aLevelList>
  [ 81] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList>
  [ 82] pushcons 137 ............................ <", possessions_purchased: ">
  [ 84] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: ">
  [ 85] getlocal 3 .............................. <iPossessions_purchased>
  [ 87] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased>
  [ 88] pushcons 138 ............................ <", possessions_total: ">
  [ 90] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: ">
  [ 91] getlocal 4 .............................. <iPossessions_total>
  [ 93] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total>
  [ 94] pushcons 139 ............................ <", possessions_backpack: ">
  [ 96] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: ">
  [ 97] getlocal 5 .............................. <iPossessions_backpack>
  [ 99] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack>
  [100] pushcons 140 ............................ <", influencer: ">
  [102] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: ">
  [103] getlocal 6 .............................. <bInfluencer>
  [105] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer>
  [106] pushcons 141 ............................ <", logInTotal: ">
  [108] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: ">
  [109] getlocal 7 .............................. <iLogInTotal>
  [111] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [112] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [114] objcall 20 .............................. me.debug("getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal)
  [116] getglobal 153 ........................... <ElementMgr>
  [118] pusharglist 1 ........................... <ElementMgr>
  [120] extcall 15 .............................. <voidp(ElementMgr)>
  [122] not ..................................... <not voidp(ElementMgr)>
  [123] jmpifz [151] ............................ if not voidp(ElementMgr) then
  [126] getglobal 153 ........................... <ElementMgr>
  [128] getlocal 0 .............................. <iError>
  [130] getparam 1 .............................. <sScreenName>
  [132] getlocal 1 .............................. <sAvatarMission>
  [134] getlocal 2 .............................. <aLevelList>
  [136] getlocal 3 .............................. <iPossessions_purchased>
  [138] getlocal 4 .............................. <iPossessions_total>
  [140] getlocal 5 .............................. <iPossessions_backpack>
  [142] getlocal 6 .............................. <bInfluencer>
  [144] getlocal 7 .............................. <iLogInTotal>
  [146] pusharglistnoret 10 ..................... <ElementMgr, iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal>
  [148] objcall 293 ............................. ElementMgr.getExtendedDenizenInfo_Result(iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal)
  [151] pusharglistnoret 0 ...................... <>
  [153] extcall 71 .............................. return 
  [155] getparam 0 .............................. <me>
  [157] getchainedprop 334 ...................... <me.foDenizenManager>
  [160] getparam 1 .............................. <sScreenName>
  [162] pusharglistnoret 2 ...................... <me.foDenizenManager, sScreenName>
  [164] objcall 273 ............................. me.foDenizenManager.getExtendedDenizenInfo(sScreenName)
  [167] ret
end

on getStatus_Result me, oCaller, iError, iUserCount, iCapacity, sStatus, foServerDateTime
  [  0] getmovieprop 163 ........................ <the runMode>
  [  2] pushcons 142 ............................ <"author">
  [  4] nteq .................................... <the runMode <> "author">
  [  5] jmpifz [ 33] ............................ if the runMode <> "author" then
  [  8] pushcons 143 ............................ <"--> RECEIVED STATUS RESULT: ">
  [ 10] getparam 2 .............................. <iError>
  [ 12] joinstr ................................. <"--> RECEIVED STATUS RESULT: " & iError>
  [ 13] getparam 3 .............................. <iUserCount>
  [ 15] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount>
  [ 16] getparam 4 .............................. <iCapacity>
  [ 18] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity>
  [ 19] getparam 5 .............................. <sStatus>
  [ 21] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus>
  [ 22] getparam 6 .............................. <foServerDateTime>
  [ 24] pusharglist 1 ........................... <foServerDateTime>
  [ 26] objcall 208 ............................. <foServerDateTime.toString()>
  [ 28] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus && foServerDateTime.toString()>
  [ 29] pusharglistnoret 1 ...................... <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus && foServerDateTime.toString()>
  [ 31] extcall 33 .............................. put "--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus && foServerDateTime.toString()
  [ 33] pushcons 144 ............................ <"*******************************">
  [ 35] pushcons 53 ............................. <RETURN>
  [ 37] joinstr ................................. <"*******************************" & RETURN>
  [ 38] pusharglistnoret 1 ...................... <"*******************************" & RETURN>
  [ 40] extcall 33 .............................. put "*******************************" & RETURN
  [ 42] getparam 5 .............................. <sStatus>
  [ 44] pushcons 145 ............................ <"O">
  [ 46] eq ...................................... <sStatus = "O">
  [ 47] jmpifz [ 61] ............................ if sStatus = "O" then
  [ 50] pushsymb 404 ............................ <#studiosOpen>
  [ 53] pusharglistnoret 1 ...................... <#studiosOpen>
  [ 55] extcall 177 ............................. sendAllSprites(#studiosOpen)
  [ 57] pusharglistnoret 0 ...................... <>
  [ 59] extcall 71 .............................. return 
  [ 61] getparam 5 .............................. <sStatus>
  [ 63] pushcons 146 ............................ <"C">
  [ 65] eq ...................................... <sStatus = "C">
  [ 66] jmpifz [ 85] ............................ if sStatus = "C" then
  [ 69] pushsymb 405 ............................ <#studiosClosed>
  [ 72] pusharglistnoret 1 ...................... <#studiosClosed>
  [ 74] extcall 177 ............................. sendAllSprites(#studiosClosed)
  [ 76] pushint8 1 .............................. <1>
  [ 78] setglobal 406 ........................... gCLOSING = 1
  [ 81] pusharglistnoret 0 ...................... <>
  [ 83] extcall 71 .............................. return 
  [ 85] getparam 5 .............................. <sStatus>
  [ 87] pushcons 5 .............................. <"F">
  [ 89] eq ...................................... <sStatus = "F">
  [ 90] jmpifz [109] ............................ if sStatus = "F" then
  [ 93] pushsymb 407 ............................ <#studiosFull>
  [ 96] pusharglistnoret 1 ...................... <#studiosFull>
  [ 98] extcall 177 ............................. sendAllSprites(#studiosFull)
  [100] pushint8 1 .............................. <1>
  [102] setglobal 406 ........................... gCLOSING = 1
  [105] pusharglistnoret 0 ...................... <>
  [107] extcall 71 .............................. return 
  [109] ret
end

on getLoginScreenName_Result me, oCaller, iError, sLoginScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 147 ............................ <"getLoginScreenName_Result() ">
  [  4] getparam 2 .............................. <iError>
  [  6] joinstr ................................. <"getLoginScreenName_Result() " & iError>
  [  7] getparam 3 .............................. <sLoginScreenName>
  [  9] joinpadstr .............................. <"getLoginScreenName_Result() " & iError && sLoginScreenName>
  [ 10] pusharglistnoret 2 ...................... <me, "getLoginScreenName_Result() " & iError && sLoginScreenName>
  [ 12] objcall 20 .............................. me.debug("getLoginScreenName_Result() " & iError && sLoginScreenName)
  [ 14] getparam 2 .............................. <iError>
  [ 16] pushzero ................................ <0>
  [ 17] nteq .................................... <iError <> 0>
  [ 18] jmpifz [113] ............................ if iError <> 0 then
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 148 ............................ <"** DID NOT GET SCREEN NAME FROM COOKIE **">
  [ 25] pusharglistnoret 2 ...................... <me, "** DID NOT GET SCREEN NAME FROM COOKIE **">
  [ 27] objcall 20 .............................. me.debug("** DID NOT GET SCREEN NAME FROM COOKIE **")
  [ 29] pushcons 149 ............................ <"sfsn">
  [ 31] pusharglist 1 ........................... <"sfsn">
  [ 33] extcall 410 ............................. <getPref("sfsn")>
  [ 36] setlocal 0 .............................. sPrefName = getPref("sfsn")
  [ 38] getlocal 0 .............................. <sPrefName>
  [ 40] pusharglist 1 ........................... <sPrefName>
  [ 42] extcall 15 .............................. <voidp(sPrefName)>
  [ 44] not ..................................... <not voidp(sPrefName)>
  [ 45] getlocal 0 .............................. <sPrefName>
  [ 47] pushcons 1 .............................. <EMPTY>
  [ 49] eq ...................................... <sPrefName = EMPTY>
  [ 50] not ..................................... <not (sPrefName = EMPTY)>
  [ 51] and ..................................... <not voidp(sPrefName) and not (sPrefName = EMPTY)>
  [ 52] jmpifz [ 91] ............................ if not voidp(sPrefName) and not (sPrefName = EMPTY) then
  [ 55] getparam 0 .............................. <me>
  [ 57] getlocal 0 .............................. <sPrefName>
  [ 59] pusharglistnoret 2 ...................... <me, sPrefName>
  [ 61] objcall 295 ............................. me.setScreenName(sPrefName)
  [ 64] pushcons 150 ............................ <"inputScreenName">
  [ 66] pusharglist 1 ........................... <"inputScreenName">
  [ 68] extcall 4 ............................... <member("inputScreenName")>
  [ 70] setlocal 1 .............................. oScreenNameMember = member("inputScreenName")
  [ 72] getlocal 1 .............................. <oScreenNameMember>
  [ 74] getobjprop 411 .......................... <oScreenNameMember.memberNum>
  [ 77] pushint8 1 .............................. <1>
  [ 79] inv ..................................... <-1>
  [ 80] nteq .................................... <oScreenNameMember.memberNum <> -1>
  [ 81] jmpifz [ 91] ............................ if oScreenNameMember.memberNum <> -1 then
  [ 84] getlocal 1 .............................. <oScreenNameMember>
  [ 86] getlocal 0 .............................. <sPrefName>
  [ 88] setobjprop 412 .......................... oScreenNameMember.text = sPrefName
  [ 91] pushcons 12 ............................. <"_TIMER_">
  [ 93] pusharglist 1 ........................... <"_TIMER_">
  [ 95] extcall 148 ............................. <script("_TIMER_")>
  [ 97] pushint16 500 ........................... <500>
  [100] pushsymb 276 ............................ <#gotoLogin>
  [103] getparam 0 .............................. <me>
  [105] pusharglistnoret 4 ...................... <script("_TIMER_"), 500, #gotoLogin, me>
  [107] objcall 149 ............................. script("_TIMER_").new(500, #gotoLogin, me)
  [109] pusharglistnoret 0 ...................... <>
  [111] extcall 71 .............................. return 
  [113] getparam 2 .............................. <iError>
  [115] pushzero ................................ <0>
  [116] eq ...................................... <iError = 0>
  [117] jmpifz [174] ............................ if iError = 0 then
  [120] getparam 0 .............................. <me>
  [122] getparam 3 .............................. <sLoginScreenName>
  [124] pusharglistnoret 2 ...................... <me, sLoginScreenName>
  [126] objcall 295 ............................. me.setScreenName(sLoginScreenName)
  [129] pushcons 150 ............................ <"inputScreenName">
  [131] pusharglist 1 ........................... <"inputScreenName">
  [133] extcall 4 ............................... <member("inputScreenName")>
  [135] setlocal 1 .............................. oScreenNameMember = member("inputScreenName")
  [137] getlocal 1 .............................. <oScreenNameMember>
  [139] getobjprop 411 .......................... <oScreenNameMember.memberNum>
  [142] pushint8 1 .............................. <1>
  [144] inv ..................................... <-1>
  [145] nteq .................................... <oScreenNameMember.memberNum <> -1>
  [146] jmpifz [156] ............................ if oScreenNameMember.memberNum <> -1 then
  [149] getlocal 1 .............................. <oScreenNameMember>
  [151] getparam 3 .............................. <sLoginScreenName>
  [153] setobjprop 412 .......................... oScreenNameMember.text = sLoginScreenName
  [156] pushcons 12 ............................. <"_TIMER_">
  [158] pusharglist 1 ........................... <"_TIMER_">
  [160] extcall 148 ............................. <script("_TIMER_")>
  [162] pushint16 700 ........................... <700>
  [165] pushsymb 276 ............................ <#gotoLogin>
  [168] getparam 0 .............................. <me>
  [170] pusharglistnoret 4 ...................... <script("_TIMER_"), 700, #gotoLogin, me>
  [172] objcall 149 ............................. script("_TIMER_").new(700, #gotoLogin, me)
  [174] ret
end

on gotoLogin me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 151 ............................ <"gotoLogin() ">
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 198 ............................. <me.getScreenName()>
  [ 10] joinstr ................................. <"gotoLogin() " & me.getScreenName()>
  [ 11] pusharglistnoret 2 ...................... <me, "gotoLogin() " & me.getScreenName()>
  [ 13] objcall 20 .............................. me.debug("gotoLogin() " & me.getScreenName())
  [ 15] pushcons 152 ............................ <"DenizenManager.gotologin()">
  [ 17] pusharglistnoret 1 ...................... <"DenizenManager.gotologin()">
  [ 19] extcall 33 .............................. put "DenizenManager.gotologin()"
  [ 21] pushsymb 416 ............................ <#next>
  [ 24] pusharglistnoret 1 ...................... <#next>
  [ 26] extcall 417 ............................. go(#next)
  [ 29] ret
end

on loginDenizen_Result me, oCaller, oResult
  [  0] pushcons 153 ............................ <"Director DenizenManager::loginDenizen_Result()">
  [  2] pusharglistnoret 1 ...................... <"Director DenizenManager::loginDenizen_Result()">
  [  4] extcall 33 .............................. put "Director DenizenManager::loginDenizen_Result()"
  [  6] getglobal 167 ........................... <gbTestMode>
  [  8] jmpifz [ 50] ............................ if gbTestMode then
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 332 .......................... <me.sDefaultScreenName>
  [ 18] pusharglistnoret 2 ...................... <me, me.sDefaultScreenName>
  [ 20] objcall 295 ............................. me.setScreenName(me.sDefaultScreenName)
  [ 23] pushcons 12 ............................. <"_TIMER_">
  [ 25] pusharglist 1 ........................... <"_TIMER_">
  [ 27] extcall 148 ............................. <script("_TIMER_")>
  [ 29] pushint16 1000 .......................... <1000>
  [ 32] pushsymb 418 ............................ <#loginUser_Result>
  [ 35] getglobal 153 ........................... <ElementMgr>
  [ 37] pushzero ................................ <0>
  [ 38] pushint8 2 .............................. <2>
  [ 40] pushint8 1 .............................. <1>
  [ 42] pusharglistnoret 7 ...................... <script("_TIMER_"), 1000, #loginUser_Result, ElementMgr, 0, 2, 1>
  [ 44] objcall 149 ............................. script("_TIMER_").new(1000, #loginUser_Result, ElementMgr, 0, 2, 1)
  [ 46] pusharglistnoret 0 ...................... <>
  [ 48] extcall 71 .............................. return 
  [ 50] getparam 2 .............................. <oResult>
  [ 52] pusharglist 1 ........................... <oResult>
  [ 54] objcall 201 ............................. <oResult.getTypeOf()>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 60] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 61] jmpifz [107] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 64] getparam 2 .............................. <oResult>
  [ 66] pusharglist 1 ........................... <oResult>
  [ 68] objcall 202 ............................. <oResult.getOrdinal()>
  [ 70] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 72] getparam 0 .............................. <me>
  [ 74] pushcons 154 ............................ <"loginDenizen_Result() ERROR ">
  [ 76] getlocal 0 .............................. <iError>
  [ 78] joinstr ................................. <"loginDenizen_Result() ERROR " & iError>
  [ 79] pusharglistnoret 2 ...................... <me, "loginDenizen_Result() ERROR " & iError>
  [ 81] objcall 20 .............................. me.debug("loginDenizen_Result() ERROR " & iError)
  [ 83] pushcons 12 ............................. <"_TIMER_">
  [ 85] pusharglist 1 ........................... <"_TIMER_">
  [ 87] extcall 148 ............................. <script("_TIMER_")>
  [ 89] pushint16 1000 .......................... <1000>
  [ 92] pushsymb 418 ............................ <#loginUser_Result>
  [ 95] getglobal 153 ........................... <ElementMgr>
  [ 97] getlocal 0 .............................. <iError>
  [ 99] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #loginUser_Result, ElementMgr, iError>
  [101] objcall 149 ............................. script("_TIMER_").new(1000, #loginUser_Result, ElementMgr, iError)
  [103] pusharglistnoret 0 ...................... <>
  [105] extcall 71 .............................. return 
  [107] getparam 2 .............................. <oResult>
  [109] pusharglist 1 ........................... <oResult>
  [111] objcall 198 ............................. <oResult.getScreenName()>
  [113] setlocal 1 .............................. sNewScreenName = oResult.getScreenName()
  [115] pushcons 155 ............................ <"** RECEIVED LOGIN DENIZEN RESULT: ">
  [117] getlocal 1 .............................. <sNewScreenName>
  [119] joinstr ................................. <"** RECEIVED LOGIN DENIZEN RESULT: " & sNewScreenName>
  [120] pusharglistnoret 1 ...................... <"** RECEIVED LOGIN DENIZEN RESULT: " & sNewScreenName>
  [122] extcall 33 .............................. put "** RECEIVED LOGIN DENIZEN RESULT: " & sNewScreenName
  [124] pushcons 156 ............................ <"********************************">
  [126] pushcons 53 ............................. <RETURN>
  [128] joinstr ................................. <"********************************" & RETURN>
  [129] pusharglistnoret 1 ...................... <"********************************" & RETURN>
  [131] extcall 33 .............................. put "********************************" & RETURN
  [133] getparam 0 .............................. <me>
  [135] getlocal 1 .............................. <sNewScreenName>
  [137] pusharglistnoret 2 ...................... <me, sNewScreenName>
  [139] objcall 295 ............................. me.setScreenName(sNewScreenName)
  [142] pushcons 149 ............................ <"sfsn">
  [144] getparam 0 .............................. <me>
  [146] pusharglist 1 ........................... <me>
  [148] objcall 198 ............................. <me.getScreenName()>
  [150] pusharglistnoret 2 ...................... <"sfsn", me.getScreenName()>
  [152] extcall 419 ............................. setPref("sfsn", me.getScreenName())
  [155] getparam 0 .............................. <me>
  [157] getparam 2 .............................. <oResult>
  [159] pusharglistnoret 2 ...................... <me, oResult>
  [161] objcall 296 ............................. me.setDenizen(oResult)
  [164] getparam 2 .............................. <oResult>
  [166] pusharglist 1 ........................... <oResult>
  [168] objcall 420 ............................. <oResult.getIsBanned()>
  [171] setlocal 2 .............................. bIsBanned = oResult.getIsBanned()
  [173] getlocal 2 .............................. <bIsBanned>
  [175] jmpifz [195] ............................ if bIsBanned then
  [178] pushint8 1 .............................. <1>
  [180] setglobal 406 ........................... gCLOSING = 1
  [183] getglobal 153 ........................... <ElementMgr>
  [185] pushcons 157 ............................ <"ALERT_BANNED">
  [187] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_BANNED">
  [189] objcall 206 ............................. ElementMgr.alert("ALERT_BANNED")
  [191] pusharglistnoret 0 ...................... <>
  [193] extcall 71 .............................. return 
  [195] getglobal 153 ........................... <ElementMgr>
  [197] pusharglist 1 ........................... <ElementMgr>
  [199] extcall 15 .............................. <voidp(ElementMgr)>
  [201] not ..................................... <not voidp(ElementMgr)>
  [202] jmpifz [228] ............................ if not voidp(ElementMgr) then
  [205] pushcons 12 ............................. <"_TIMER_">
  [207] pusharglist 1 ........................... <"_TIMER_">
  [209] extcall 148 ............................. <script("_TIMER_")>
  [211] pushint16 1000 .......................... <1000>
  [214] pushsymb 418 ............................ <#loginUser_Result>
  [217] getglobal 153 ........................... <ElementMgr>
  [219] pushzero ................................ <0>
  [220] pushint8 2 .............................. <2>
  [222] pushint8 1 .............................. <1>
  [224] pusharglistnoret 7 ...................... <script("_TIMER_"), 1000, #loginUser_Result, ElementMgr, 0, 2, 1>
  [226] objcall 149 ............................. script("_TIMER_").new(1000, #loginUser_Result, ElementMgr, 0, 2, 1)
  [228] pushcons 12 ............................. <"_TIMER_">
  [230] pusharglist 1 ........................... <"_TIMER_">
  [232] extcall 148 ............................. <script("_TIMER_")>
  [234] pushint16 1000 .......................... <1000>
  [237] pushsymb 263 ............................ <#isModerator>
  [240] getparam 0 .............................. <me>
  [242] getparam 0 .............................. <me>
  [244] pusharglist 1 ........................... <me>
  [246] objcall 198 ............................. <me.getScreenName()>
  [248] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #isModerator, me, me.getScreenName()>
  [250] objcall 149 ............................. script("_TIMER_").new(1000, #isModerator, me, me.getScreenName())
  [252] pushcons 12 ............................. <"_TIMER_">
  [254] pusharglist 1 ........................... <"_TIMER_">
  [256] extcall 148 ............................. <script("_TIMER_")>
  [258] pushint16 1000 .......................... <1000>
  [261] pushsymb 214 ............................ <#getBackpack>
  [263] getglobal 213 ........................... <oPossessionManager>
  [265] getparam 0 .............................. <me>
  [267] pusharglist 1 ........................... <me>
  [269] objcall 198 ............................. <me.getScreenName()>
  [271] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #getBackpack, oPossessionManager, me.getScreenName()>
  [273] objcall 149 ............................. script("_TIMER_").new(1000, #getBackpack, oPossessionManager, me.getScreenName())
  [275] ret
end

on loginModerator_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 158 ............................ <"loginModerator_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "loginModerator_Result()">
  [  6] objcall 20 .............................. me.debug("loginModerator_Result()")
  [  8] pushzero ................................ <0>
  [  9] setlocal 0 .............................. iError = 0
  [ 11] getparam 2 .............................. <oResult>
  [ 13] pusharglist 1 ........................... <oResult>
  [ 15] objcall 201 ............................. <oResult.getTypeOf()>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 21] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 22] jmpifz [ 47] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then / else
  [ 25] getparam 2 .............................. <oResult>
  [ 27] pusharglist 1 ........................... <oResult>
  [ 29] objcall 202 ............................. <oResult.getOrdinal()>
  [ 31] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 159 ............................ <"loginModerator_Result() ERROR ">
  [ 37] getlocal 0 .............................. <iError>
  [ 39] joinstr ................................. <"loginModerator_Result() ERROR " & iError>
  [ 40] pusharglistnoret 2 ...................... <me, "loginModerator_Result() ERROR " & iError>
  [ 42] objcall 20 .............................. me.debug("loginModerator_Result() ERROR " & iError)
  [ 44] jmp [ 95]
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 2 .............................. <oResult>
  [ 51] pusharglistnoret 2 ...................... <me, oResult>
  [ 53] objcall 296 ............................. me.setDenizen(oResult)
  [ 56] getmovieprop 184 ........................ <the debugPlaybackEnabled>
  [ 58] jmpifz [ 74] ............................ if the debugPlaybackEnabled then
  [ 61] pushcons 160 ............................ <"oResult.getSecret():">
  [ 63] getparam 2 .............................. <oResult>
  [ 65] pusharglist 1 ........................... <oResult>
  [ 67] objcall 195 ............................. <oResult.getSecret()>
  [ 69] joinpadstr .............................. <"oResult.getSecret():" && oResult.getSecret()>
  [ 70] pusharglistnoret 1 ...................... <"oResult.getSecret():" && oResult.getSecret()>
  [ 72] extcall 33 .............................. put "oResult.getSecret():" && oResult.getSecret()
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 3 ............................ <me.spriteNum>
  [ 78] pusharglist 1 ........................... <me.spriteNum>
  [ 80] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 82] pushcons 161 ............................ <"_level0.sSecret">
  [ 84] getparam 2 .............................. <oResult>
  [ 86] pusharglist 1 ........................... <oResult>
  [ 88] objcall 195 ............................. <oResult.getSecret()>
  [ 90] pusharglistnoret 3 ...................... <sprite(me.spriteNum), "_level0.sSecret", oResult.getSecret()>
  [ 92] objcall 423 ............................. sprite(me.spriteNum).setVariable("_level0.sSecret", oResult.getSecret())
  [ 95] pushcons 12 ............................. <"_TIMER_">
  [ 97] pusharglist 1 ........................... <"_TIMER_">
  [ 99] extcall 148 ............................. <script("_TIMER_")>
  [101] pushint16 1000 .......................... <1000>
  [104] pushsymb 278 ............................ <#loginModerator_Result>
  [107] getglobal 153 ........................... <ElementMgr>
  [109] getlocal 0 .............................. <iError>
  [111] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #loginModerator_Result, ElementMgr, iError>
  [113] objcall 149 ............................. script("_TIMER_").new(1000, #loginModerator_Result, ElementMgr, iError)
  [115] ret
end

on logoutDenizen_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 162 ............................ <"logoutDenizen_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "logoutDenizen_Result()">
  [  6] objcall 20 .............................. me.debug("logoutDenizen_Result()")
  [  8] getglobal 167 ........................... <gbTestMode>
  [ 10] jmpifz [ 17] ............................ if gbTestMode then
  [ 13] pusharglistnoret 0 ...................... <>
  [ 15] extcall 71 .............................. return 
  [ 17] getparam 2 .............................. <oResult>
  [ 19] pusharglist 1 ........................... <oResult>
  [ 21] objcall 201 ............................. <oResult.getTypeOf()>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 27] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 28] jmpifz [ 73] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 31] getparam 2 .............................. <oResult>
  [ 33] pusharglist 1 ........................... <oResult>
  [ 35] objcall 202 ............................. <oResult.getOrdinal()>
  [ 37] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 163 ............................ <"logoutDenizen_Result() ERROR ">
  [ 43] getlocal 0 .............................. <iError>
  [ 45] joinstr ................................. <"logoutDenizen_Result() ERROR " & iError>
  [ 46] pusharglistnoret 2 ...................... <me, "logoutDenizen_Result() ERROR " & iError>
  [ 48] objcall 20 .............................. me.debug("logoutDenizen_Result() ERROR " & iError)
  [ 50] getglobal 153 ........................... <ElementMgr>
  [ 52] pusharglist 1 ........................... <ElementMgr>
  [ 54] extcall 15 .............................. <voidp(ElementMgr)>
  [ 56] not ..................................... <not voidp(ElementMgr)>
  [ 57] jmpifz [ 69] ............................ if not voidp(ElementMgr) then
  [ 60] getglobal 153 ........................... <ElementMgr>
  [ 62] getlocal 0 .............................. <iError>
  [ 64] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 66] objcall 279 ............................. ElementMgr.logoutDenizen_Result(iError)
  [ 69] pusharglistnoret 0 ...................... <>
  [ 71] extcall 71 .............................. return 
  [ 73] getglobal 153 ........................... <ElementMgr>
  [ 75] pusharglist 1 ........................... <ElementMgr>
  [ 77] extcall 15 .............................. <voidp(ElementMgr)>
  [ 79] not ..................................... <not voidp(ElementMgr)>
  [ 80] jmpifz [ 91] ............................ if not voidp(ElementMgr) then
  [ 83] getglobal 153 ........................... <ElementMgr>
  [ 85] pushzero ................................ <0>
  [ 86] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 88] objcall 279 ............................. ElementMgr.logoutDenizen_Result(0)
  [ 91] ret
end

on modifyDenizen_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 164 ............................ <"modifyDenizen_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result()">
  [  6] objcall 20 .............................. me.debug("modifyDenizen_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 165 ............................ <"modifyDenizen_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"modifyDenizen_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("modifyDenizen_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 280 ............................. ElementMgr.modifyDenizen_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] getparam 0 .............................. <me>
  [ 66] pushcons 166 ............................ <"modifyDenizen_Result() result: ">
  [ 68] getparam 2 .............................. <oResult>
  [ 70] pusharglist 1 ........................... <oResult>
  [ 72] objcall 208 ............................. <oResult.toString()>
  [ 74] joinstr ................................. <"modifyDenizen_Result() result: " & oResult.toString()>
  [ 75] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result() result: " & oResult.toString()>
  [ 77] objcall 20 .............................. me.debug("modifyDenizen_Result() result: " & oResult.toString())
  [ 79] getglobal 153 ........................... <ElementMgr>
  [ 81] pusharglist 1 ........................... <ElementMgr>
  [ 83] extcall 15 .............................. <voidp(ElementMgr)>
  [ 85] not ..................................... <not voidp(ElementMgr)>
  [ 86] jmpifz [ 97] ............................ if not voidp(ElementMgr) then
  [ 89] getglobal 153 ........................... <ElementMgr>
  [ 91] pushzero ................................ <0>
  [ 92] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 94] objcall 280 ............................. ElementMgr.modifyDenizen_Result(0)
  [ 97] ret
end

on getDenizenByScreenName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 167 ............................ <"getDenizenByScreenName_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result()">
  [  6] objcall 20 .............................. me.debug("getDenizenByScreenName_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 168 ............................ <"sErrorType: ">
  [ 20] getlocal 0 .............................. <sErrorType>
  [ 22] joinstr ................................. <"sErrorType: " & sErrorType>
  [ 23] pusharglistnoret 2 ...................... <me, "sErrorType: " & sErrorType>
  [ 25] objcall 20 .............................. me.debug("sErrorType: " & sErrorType)
  [ 27] getparam 2 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 201 ............................. <oResult.getTypeOf()>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 37] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 38] jmpifz [ 91] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 169 ............................ <"error">
  [ 45] pusharglistnoret 2 ...................... <me, "error">
  [ 47] objcall 20 .............................. me.debug("error")
  [ 49] getparam 2 .............................. <oResult>
  [ 51] pusharglist 1 ........................... <oResult>
  [ 53] objcall 202 ............................. <oResult.getOrdinal()>
  [ 55] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 57] getparam 0 .............................. <me>
  [ 59] pushcons 170 ............................ <"getDenizenByScreenName_Result() ERROR ">
  [ 61] getlocal 1 .............................. <iError>
  [ 63] joinstr ................................. <"getDenizenByScreenName_Result() ERROR " & iError>
  [ 64] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result() ERROR " & iError>
  [ 66] objcall 20 .............................. me.debug("getDenizenByScreenName_Result() ERROR " & iError)
  [ 68] getglobal 153 ........................... <ElementMgr>
  [ 70] pusharglist 1 ........................... <ElementMgr>
  [ 72] extcall 15 .............................. <voidp(ElementMgr)>
  [ 74] not ..................................... <not voidp(ElementMgr)>
  [ 75] jmpifz [ 87] ............................ if not voidp(ElementMgr) then
  [ 78] getglobal 153 ........................... <ElementMgr>
  [ 80] getlocal 1 .............................. <iError>
  [ 82] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 84] objcall 281 ............................. ElementMgr.getDenizenByScreenName_Result(iError)
  [ 87] pusharglistnoret 0 ...................... <>
  [ 89] extcall 71 .............................. return 
  [ 91] pushzero ................................ <0>
  [ 92] setlocal 1 .............................. iError = 0
  [ 94] getparam 2 .............................. <oResult>
  [ 96] pusharglist 1 ........................... <oResult>
  [ 98] objcall 198 ............................. <oResult.getScreenName()>
  [100] setlocal 2 .............................. sScreenName = oResult.getScreenName()
  [102] getparam 0 .............................. <me>
  [104] pushcons 171 ............................ <"sScreenName: ">
  [106] getlocal 2 .............................. <sScreenName>
  [108] joinstr ................................. <"sScreenName: " & sScreenName>
  [109] pusharglistnoret 2 ...................... <me, "sScreenName: " & sScreenName>
  [111] objcall 20 .............................. me.debug("sScreenName: " & sScreenName)
  [113] getparam 2 .............................. <oResult>
  [115] pusharglist 1 ........................... <oResult>
  [117] objcall 424 ............................. <oResult.getLastAccess()>
  [120] setlocal 3 .............................. oLastAccess = oResult.getLastAccess()
  [122] getparam 0 .............................. <me>
  [124] pushcons 172 ............................ <"oLastAccess: ">
  [126] getlocal 3 .............................. <oLastAccess>
  [128] pusharglist 1 ........................... <oLastAccess>
  [130] objcall 208 ............................. <oLastAccess.toString()>
  [132] joinstr ................................. <"oLastAccess: " & oLastAccess.toString()>
  [133] pusharglistnoret 2 ...................... <me, "oLastAccess: " & oLastAccess.toString()>
  [135] objcall 20 .............................. me.debug("oLastAccess: " & oLastAccess.toString())
  [137] getparam 2 .............................. <oResult>
  [139] pusharglist 1 ........................... <oResult>
  [141] objcall 425 ............................. <oResult.getLastSeenIn()>
  [144] setlocal 4 .............................. sLastSeenIn = oResult.getLastSeenIn()
  [146] getparam 0 .............................. <me>
  [148] pushcons 173 ............................ <"sLastSeenIn: ">
  [150] getlocal 4 .............................. <sLastSeenIn>
  [152] joinstr ................................. <"sLastSeenIn: " & sLastSeenIn>
  [153] pusharglistnoret 2 ...................... <me, "sLastSeenIn: " & sLastSeenIn>
  [155] objcall 20 .............................. me.debug("sLastSeenIn: " & sLastSeenIn)
  [157] getparam 2 .............................. <oResult>
  [159] pusharglist 1 ........................... <oResult>
  [161] objcall 426 ............................. <oResult.getLastSeenInName()>
  [164] setlocal 5 .............................. sLastSeenInName = oResult.getLastSeenInName()
  [166] getparam 0 .............................. <me>
  [168] pushcons 174 ............................ <"sLastSeenInName: ">
  [170] getlocal 5 .............................. <sLastSeenInName>
  [172] joinstr ................................. <"sLastSeenInName: " & sLastSeenInName>
  [173] pusharglistnoret 2 ...................... <me, "sLastSeenInName: " & sLastSeenInName>
  [175] objcall 20 .............................. me.debug("sLastSeenInName: " & sLastSeenInName)
  [177] getparam 2 .............................. <oResult>
  [179] pusharglist 1 ........................... <oResult>
  [181] objcall 297 ............................. <oResult.getMissionStatement()>
  [184] setlocal 6 .............................. sAvatarMission = oResult.getMissionStatement()
  [186] getparam 0 .............................. <me>
  [188] pushcons 175 ............................ <"sAvatarMission: ">
  [190] getlocal 6 .............................. <sAvatarMission>
  [192] joinstr ................................. <"sAvatarMission: " & sAvatarMission>
  [193] pusharglistnoret 2 ...................... <me, "sAvatarMission: " & sAvatarMission>
  [195] objcall 20 .............................. me.debug("sAvatarMission: " & sAvatarMission)
  [197] getparam 2 .............................. <oResult>
  [199] pusharglist 1 ........................... <oResult>
  [201] objcall 427 ............................. <oResult.getAvatarDefinition()>
  [204] setlocal 7 .............................. sAvatarString = oResult.getAvatarDefinition()
  [206] getparam 0 .............................. <me>
  [208] pushcons 176 ............................ <"sAvatarString: ">
  [210] getlocal 7 .............................. <sAvatarString>
  [212] joinstr ................................. <"sAvatarString: " & sAvatarString>
  [213] pusharglistnoret 2 ...................... <me, "sAvatarString: " & sAvatarString>
  [215] objcall 20 .............................. me.debug("sAvatarString: " & sAvatarString)
  [217] getparam 0 .............................. <me>
  [219] getparam 2 .............................. <oResult>
  [221] pusharglist 1 ........................... <oResult>
  [223] objcall 428 ............................. <oResult.getGender()>
  [226] pusharglist 2 ........................... <me, oResult.getGender()>
  [228] objcall 251 ............................. <me.getGenderOrdinal(oResult.getGender())>
  [230] setlocal 8 .............................. iGender = me.getGenderOrdinal(oResult.getGender())
  [232] getparam 0 .............................. <me>
  [234] pushcons 177 ............................ <"iGender: ">
  [236] getlocal 8 .............................. <iGender>
  [238] joinstr ................................. <"iGender: " & iGender>
  [239] pusharglistnoret 2 ...................... <me, "iGender: " & iGender>
  [241] objcall 20 .............................. me.debug("iGender: " & iGender)
  [243] getparam 2 .............................. <oResult>
  [245] pusharglist 1 ........................... <oResult>
  [247] objcall 429 ............................. <oResult.getIsOnline()>
  [250] setlocal 9 .............................. bOnline = oResult.getIsOnline()
  [252] getparam 0 .............................. <me>
  [254] pushcons 178 ............................ <"bOnline: ">
  [256] getlocal 9 .............................. <bOnline>
  [258] joinstr ................................. <"bOnline: " & bOnline>
  [259] pusharglistnoret 2 ...................... <me, "bOnline: " & bOnline>
  [261] objcall 20 .............................. me.debug("bOnline: " & bOnline)
  [263] pushint8 1 .............................. <1>
  [265] setlocal 10 ............................. bExists = 1
  [267] getparam 0 .............................. <me>
  [269] pushcons 98 ............................. <"getDenizenByScreenName_Result()  screenName: ">
  [271] getlocal 2 .............................. <sScreenName>
  [273] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName>
  [274] pushcons 99 ............................. <", lastAccess: ">
  [276] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: ">
  [277] getlocal 3 .............................. <oLastAccess>
  [279] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess>
  [280] pushcons 179 ............................ <", lastSeenIn: ">
  [282] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: ">
  [283] getlocal 4 .............................. <sLastSeenIn>
  [285] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn>
  [286] pushcons 101 ............................ <", avatarMission: ">
  [288] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: ">
  [289] getlocal 6 .............................. <sAvatarMission>
  [291] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission>
  [292] pushcons 102 ............................ <", sAvatarString: ">
  [294] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: ">
  [295] getlocal 7 .............................. <sAvatarString>
  [297] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString>
  [298] pushcons 103 ............................ <", bOnline: ">
  [300] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: ">
  [301] getlocal 9 .............................. <bOnline>
  [303] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline>
  [304] pushcons 180 ............................ <", lastSeenInName: ">
  [306] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: ">
  [307] getlocal 5 .............................. <sLastSeenInName>
  [309] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName>
  [310] pushcons 181 ............................ <", Gender: ">
  [312] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: ">
  [313] getlocal 8 .............................. <iGender>
  [315] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: " & iGender>
  [316] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: " & iGender>
  [318] objcall 20 .............................. me.debug("getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: " & iGender)
  [320] getglobal 153 ........................... <ElementMgr>
  [322] pusharglist 1 ........................... <ElementMgr>
  [324] extcall 15 .............................. <voidp(ElementMgr)>
  [326] not ..................................... <not voidp(ElementMgr)>
  [327] jmpifz [357] ............................ if not voidp(ElementMgr) then
  [330] getglobal 153 ........................... <ElementMgr>
  [332] getlocal 1 .............................. <iError>
  [334] getlocal 2 .............................. <sScreenName>
  [336] getlocal 3 .............................. <oLastAccess>
  [338] getlocal 4 .............................. <sLastSeenIn>
  [340] getlocal 6 .............................. <sAvatarMission>
  [342] getlocal 7 .............................. <sAvatarString>
  [344] getlocal 9 .............................. <bOnline>
  [346] getlocal 10 ............................. <bExists>
  [348] getlocal 5 .............................. <sLastSeenInName>
  [350] getlocal 8 .............................. <iGender>
  [352] pusharglistnoret 11 ..................... <ElementMgr, iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender>
  [354] objcall 281 ............................. ElementMgr.getDenizenByScreenName_Result(iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender)
  [357] ret
end

on getDenizenBalance_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 182 ............................ <"getDenizenBalance_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getDenizenBalance_Result()">
  [  6] objcall 20 .............................. me.debug("getDenizenBalance_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] extcall 48 .............................. <integer(oResult)>
  [ 14] setlocal 0 .............................. resultData = integer(oResult)
  [ 16] getlocal 0 .............................. <resultData>
  [ 18] pusharglist 1 ........................... <resultData>
  [ 20] extcall 48 .............................. <integer(resultData)>
  [ 22] pusharglist 1 ........................... <integer(resultData)>
  [ 24] extcall 15 .............................. <voidp(integer(resultData))>
  [ 26] jmpifz [ 39] ............................ if voidp(integer(resultData)) then / else
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1 .............................. iError = 1
  [ 33] pushzero ................................ <0>
  [ 34] setlocal 2 .............................. iBalance = 0
  [ 36] jmp [ 50]
  [ 39] pushzero ................................ <0>
  [ 40] setlocal 1 .............................. iError = 0
  [ 42] getparam 2 .............................. <oResult>
  [ 44] pusharglist 1 ........................... <oResult>
  [ 46] extcall 48 .............................. <integer(oResult)>
  [ 48] setlocal 2 .............................. iBalance = integer(oResult)
  [ 50] getparam 0 .............................. <me>
  [ 52] pushcons 183 ............................ <"getDenizenBalance_Result() ">
  [ 54] getlocal 1 .............................. <iError>
  [ 56] joinstr ................................. <"getDenizenBalance_Result() " & iError>
  [ 57] getlocal 2 .............................. <iBalance>
  [ 59] joinpadstr .............................. <"getDenizenBalance_Result() " & iError && iBalance>
  [ 60] pusharglistnoret 2 ...................... <me, "getDenizenBalance_Result() " & iError && iBalance>
  [ 62] objcall 20 .............................. me.debug("getDenizenBalance_Result() " & iError && iBalance)
  [ 64] getglobal 153 ........................... <ElementMgr>
  [ 66] pusharglist 1 ........................... <ElementMgr>
  [ 68] extcall 15 .............................. <voidp(ElementMgr)>
  [ 70] not ..................................... <not voidp(ElementMgr)>
  [ 71] jmpifz [ 85] ............................ if not voidp(ElementMgr) then
  [ 74] getglobal 153 ........................... <ElementMgr>
  [ 76] getlocal 1 .............................. <iError>
  [ 78] getlocal 2 .............................. <iBalance>
  [ 80] pusharglistnoret 3 ...................... <ElementMgr, iError, iBalance>
  [ 82] objcall 282 ............................. ElementMgr.getDenizenBalance_Result(iError, iBalance)
  [ 85] ret
end

on isModerator_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 184 ............................ <"isModerator_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "isModerator_Result()">
  [  6] objcall 20 .............................. me.debug("isModerator_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 2 .............................. <oResult>
  [ 18] pusharglist 1 ........................... <oResult>
  [ 20] objcall 201 ............................. <oResult.getTypeOf()>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 26] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 27] jmpifz [ 75] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 30] getparam 2 .............................. <oResult>
  [ 32] pusharglist 1 ........................... <oResult>
  [ 34] objcall 202 ............................. <oResult.getOrdinal()>
  [ 36] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 38] getlocal 1 .............................. <iError>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <iError = 0>
  [ 42] jmpifz [ 55] ............................ if iError = 0 then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 1 .............................. <1>
  [ 49] setobjprop 333 .......................... me.bIsModerator = 1
  [ 52] jmp [ 61]
  [ 55] getparam 0 .............................. <me>
  [ 57] pushzero ................................ <0>
  [ 58] setobjprop 333 .......................... me.bIsModerator = 0
  [ 61] getparam 0 .............................. <me>
  [ 63] pushcons 185 ............................ <"isModerator: ">
  [ 65] getparam 0 .............................. <me>
  [ 67] getobjprop 333 .......................... <me.bIsModerator>
  [ 70] joinstr ................................. <"isModerator: " & me.bIsModerator>
  [ 71] pusharglistnoret 2 ...................... <me, "isModerator: " & me.bIsModerator>
  [ 73] objcall 20 .............................. me.debug("isModerator: " & me.bIsModerator)
  [ 75] ret
end

on getModeratorsOnline_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 186 ............................ <"getModeratorsOnline_Result() ">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "getModeratorsOnline_Result() ", 1>
  [  8] objcall 20 .............................. me.debug("getModeratorsOnline_Result() ", 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 187 ............................ <"getModeratorsOnline_Result()">
  [ 14] getparam 2 .............................. <oResult>
  [ 16] pusharglist 1 ........................... <oResult>
  [ 18] objcall 208 ............................. <oResult.toString()>
  [ 20] joinstr ................................. <"getModeratorsOnline_Result()" & oResult.toString()>
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 3 ...................... <me, "getModeratorsOnline_Result()" & oResult.toString(), 1>
  [ 25] objcall 20 .............................. me.debug("getModeratorsOnline_Result()" & oResult.toString(), 1)
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setlocal 0 .............................. aMods = []
  [ 32] getparam 2 .............................. <oResult>
  [ 34] getobjprop 77 ........................... <oResult.length>
  [ 36] setlocal 1 .............................. iLength = oResult.length
  [ 38] getlocal 1 .............................. <iLength>
  [ 40] pushzero ................................ <0>
  [ 41] gt ...................................... <iLength > 0>
  [ 42] jmpifz [ 86] ............................ if iLength > 0 then
  [ 45] pushzero ................................ <0>
  [ 46] setlocal 2
  [ 48] getlocal 2
  [ 50] getlocal 1 .............................. <iLength>
  [ 52] pushint8 1 .............................. <1>
  [ 54] sub ..................................... <iLength - 1>
  [ 55] lteq
  [ 56] jmpifz [ 86] ............................ repeat with i = 0 to iLength - 1
  [ 59] getparam 2 .............................. <oResult>
  [ 61] getlocal 2 .............................. <i>
  [ 63] pusharglist 2 ........................... <oResult, i>
  [ 65] objcall 43 .............................. <oResult[i]>
  [ 67] setlocal 3 .............................. sMod = oResult[i]
  [ 69] getlocal 0 .............................. <aMods>
  [ 71] getlocal 3 .............................. <sMod>
  [ 73] pusharglistnoret 2 ...................... <aMods, sMod>
  [ 75] objcall 55 .............................. aMods.add(sMod)
  [ 77] pushint8 1
  [ 79] getlocal 2
  [ 81] add
  [ 82] setlocal 2
  [ 84] endrepeat [ 48]
  [ 86] getparam 0 .............................. <me>
  [ 88] pushcons 188 ............................ <"getModeratorsOnline_Result() aMods: ">
  [ 90] getlocal 0 .............................. <aMods>
  [ 92] joinstr ................................. <"getModeratorsOnline_Result() aMods: " & aMods>
  [ 93] pushint8 1 .............................. <1>
  [ 95] pusharglistnoret 3 ...................... <me, "getModeratorsOnline_Result() aMods: " & aMods, 1>
  [ 97] objcall 20 .............................. me.debug("getModeratorsOnline_Result() aMods: " & aMods, 1)
  [ 99] getglobal 153 ........................... <ElementMgr>
  [101] getlocal 0 .............................. <aMods>
  [103] pusharglistnoret 2 ...................... <ElementMgr, aMods>
  [105] objcall 284 ............................. ElementMgr.getModeratorsOnline_Result(aMods)
  [108] ret
end

on getOnlineFriends_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 111 ............................ <"getOnlineFriends_Result() ">
  [  4] getparam 2 .............................. <oResult>
  [  6] joinstr ................................. <"getOnlineFriends_Result() " & oResult>
  [  7] pusharglistnoret 2 ...................... <me, "getOnlineFriends_Result() " & oResult>
  [  9] objcall 20 .............................. me.debug("getOnlineFriends_Result() " & oResult)
  [ 11] getparam 2 .............................. <oResult>
  [ 13] getobjprop 77 ........................... <oResult.length>
  [ 15] setlocal 0 .............................. iLength = oResult.length
  [ 17] getparam 0 .............................. <me>
  [ 19] pushcons 189 ............................ <"iLength: ">
  [ 21] getlocal 0 .............................. <iLength>
  [ 23] joinstr ................................. <"iLength: " & iLength>
  [ 24] pusharglistnoret 2 ...................... <me, "iLength: " & iLength>
  [ 26] objcall 20 .............................. me.debug("iLength: " & iLength)
  [ 28] getparam 2 .............................. <oResult>
  [ 30] setlocal 1 .............................. faFriends = oResult
  [ 32] pusharglist 0 ........................... <[]>
  [ 34] pushlist ................................ <[]>
  [ 35] setlocal 2 .............................. aFriends = []
  [ 37] getlocal 1 .............................. <faFriends>
  [ 39] pusharglist 1 ........................... <faFriends>
  [ 41] extcall 15 .............................. <voidp(faFriends)>
  [ 43] not ..................................... <not voidp(faFriends)>
  [ 44] getlocal 1 .............................. <faFriends>
  [ 46] pusharglist 0 ........................... <>
  [ 48] extcall 190 ............................. <VOID>
  [ 50] nteq .................................... <faFriends <> VOID>
  [ 51] and ..................................... <not voidp(faFriends) and (faFriends <> VOID)>
  [ 52] jmpifz [148] ............................ if not voidp(faFriends) and (faFriends <> VOID) then
  [ 55] pushzero ................................ <0>
  [ 56] setlocal 3
  [ 58] getlocal 3
  [ 60] getlocal 1 .............................. <faFriends>
  [ 62] getobjprop 77 ........................... <faFriends.length>
  [ 64] pushint8 1 .............................. <1>
  [ 66] sub ..................................... <faFriends.length - 1>
  [ 67] lteq
  [ 68] jmpifz [148] ............................ repeat with i = 0 to faFriends.length - 1
  [ 71] getlocal 1 .............................. <faFriends>
  [ 73] getlocal 3 .............................. <i>
  [ 75] pusharglist 2 ........................... <faFriends, i>
  [ 77] objcall 43 .............................. <faFriends[i]>
  [ 79] setlocal 4 .............................. oFriend = faFriends[i]
  [ 81] getparam 0 .............................. <me>
  [ 83] getlocal 4 .............................. <oFriend>
  [ 85] pusharglist 2 ........................... <me, oFriend>
  [ 87] objcall 304 ............................. <me.getDenizenPropList(oFriend)>
  [ 90] setlocal 5 .............................. aFriend = me.getDenizenPropList(oFriend)
  [ 92] getlocal 5 .............................. <aFriend>
  [ 94] pushsymb 434 ............................ <#screenName>
  [ 97] pusharglist 2 ........................... <aFriend, #screenName>
  [ 99] objcall 43 .............................. <aFriend[#screenName]>
  [101] pusharglist 1 ........................... <aFriend[#screenName]>
  [103] extcall 15 .............................. <voidp(aFriend[#screenName])>
  [105] jmpifz [111] ............................ if voidp(aFriend[#screenName]) then
  [108] jmp [139] ............................... next repeat
  [111] getlocal 5 .............................. <aFriend>
  [113] pushsymb 435 ............................ <#messagesFrom>
  [116] getlocal 4 .............................. <oFriend>
  [118] pusharglist 1 ........................... <oFriend>
  [120] objcall 436 ............................. <oFriend.getMessagesFrom()>
  [123] pusharglist 1 ........................... <oFriend.getMessagesFrom()>
  [125] extcall 48 .............................. <integer(oFriend.getMessagesFrom())>
  [127] pusharglistnoret 3 ...................... <aFriend, #messagesFrom, integer(oFriend.getMessagesFrom())>
  [129] objcall 73 .............................. aFriend[#messagesFrom] = integer(oFriend.getMessagesFrom())
  [131] getlocal 2 .............................. <aFriends>
  [133] getlocal 5 .............................. <aFriend>
  [135] pusharglistnoret 2 ...................... <aFriends, aFriend>
  [137] objcall 55 .............................. aFriends.add(aFriend)
  [139] pushint8 1
  [141] getlocal 3
  [143] add
  [144] setlocal 3
  [146] endrepeat [ 58]
  [148] getparam 0 .............................. <me>
  [150] pushcons 190 ............................ <"aFriends: ">
  [152] getlocal 2 .............................. <aFriends>
  [154] joinstr ................................. <"aFriends: " & aFriends>
  [155] pusharglistnoret 2 ...................... <me, "aFriends: " & aFriends>
  [157] objcall 20 .............................. me.debug("aFriends: " & aFriends)
  [159] getglobal 153 ........................... <ElementMgr>
  [161] pusharglist 1 ........................... <ElementMgr>
  [163] objcall 437 ............................. <ElementMgr.getMessengerObject()>
  [166] getlocal 2 .............................. <aFriends>
  [168] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), aFriends>
  [170] objcall 438 ............................. ElementMgr.getMessengerObject().updateFriendsStatus(aFriends)
  [173] ret
end

on getMessenger2_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 191 ............................ <"getMessenger2_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getMessenger2_Result()">
  [  6] objcall 20 .............................. me.debug("getMessenger2_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 67] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 192 ............................ <"getMessenger_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getMessenger_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getMessenger_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("getMessenger_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 63] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglist 0 ........................... <[:]>
  [ 57] pushproplist ............................ <[:]>
  [ 58] pusharglistnoret 3 ...................... <ElementMgr, iError, [:]>
  [ 60] objcall 375 ............................. ElementMgr.getMessenger_Result(iError, [:])
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 71 .............................. return 
  [ 67] pushzero ................................ <0>
  [ 68] setlocal 0 .............................. iError = 0
  [ 70] getparam 2 .............................. <oResult>
  [ 72] pusharglist 1 ........................... <oResult>
  [ 74] objcall 442 ............................. <oResult.getTotalEnemyCount()>
  [ 77] pusharglist 1 ........................... <oResult.getTotalEnemyCount()>
  [ 79] extcall 48 .............................. <integer(oResult.getTotalEnemyCount())>
  [ 81] setlocal 1 .............................. iEnemyCount = integer(oResult.getTotalEnemyCount())
  [ 83] getparam 2 .............................. <oResult>
  [ 85] pusharglist 1 ........................... <oResult>
  [ 87] objcall 443 ............................. <oResult.getTotalFriendCount()>
  [ 90] pusharglist 1 ........................... <oResult.getTotalFriendCount()>
  [ 92] extcall 48 .............................. <integer(oResult.getTotalFriendCount())>
  [ 94] setlocal 2 .............................. iFriendCount = integer(oResult.getTotalFriendCount())
  [ 96] getparam 2 .............................. <oResult>
  [ 98] pusharglist 1 ........................... <oResult>
  [100] objcall 444 ............................. <oResult.getTotalInviteCount()>
  [103] pusharglist 1 ........................... <oResult.getTotalInviteCount()>
  [105] extcall 48 .............................. <integer(oResult.getTotalInviteCount())>
  [107] setlocal 3 .............................. iInviteCount = integer(oResult.getTotalInviteCount())
  [109] getparam 2 .............................. <oResult>
  [111] pusharglist 1 ........................... <oResult>
  [113] objcall 445 ............................. <oResult.getTotalMessageCount()>
  [116] pusharglist 1 ........................... <oResult.getTotalMessageCount()>
  [118] extcall 48 .............................. <integer(oResult.getTotalMessageCount())>
  [120] setlocal 4 .............................. iTotalMessageCount = integer(oResult.getTotalMessageCount())
  [122] getparam 0 .............................. <me>
  [124] pushcons 193 ............................ <"iEnemyCount: ">
  [126] getlocal 1 .............................. <iEnemyCount>
  [128] joinstr ................................. <"iEnemyCount: " & iEnemyCount>
  [129] pusharglistnoret 2 ...................... <me, "iEnemyCount: " & iEnemyCount>
  [131] objcall 20 .............................. me.debug("iEnemyCount: " & iEnemyCount)
  [133] getparam 0 .............................. <me>
  [135] pushcons 194 ............................ <"iFriendCount: ">
  [137] getlocal 2 .............................. <iFriendCount>
  [139] joinstr ................................. <"iFriendCount: " & iFriendCount>
  [140] pusharglistnoret 2 ...................... <me, "iFriendCount: " & iFriendCount>
  [142] objcall 20 .............................. me.debug("iFriendCount: " & iFriendCount)
  [144] getparam 0 .............................. <me>
  [146] pushcons 195 ............................ <"iInviteCount: ">
  [148] getlocal 3 .............................. <iInviteCount>
  [150] joinstr ................................. <"iInviteCount: " & iInviteCount>
  [151] pusharglistnoret 2 ...................... <me, "iInviteCount: " & iInviteCount>
  [153] objcall 20 .............................. me.debug("iInviteCount: " & iInviteCount)
  [155] getparam 0 .............................. <me>
  [157] pushcons 196 ............................ <"iTotalMessageCount: ">
  [159] getlocal 4 .............................. <iTotalMessageCount>
  [161] joinstr ................................. <"iTotalMessageCount: " & iTotalMessageCount>
  [162] pusharglistnoret 2 ...................... <me, "iTotalMessageCount: " & iTotalMessageCount>
  [164] objcall 20 .............................. me.debug("iTotalMessageCount: " & iTotalMessageCount)
  [166] pusharglist 0 ........................... <[]>
  [168] pushlist ................................ <[]>
  [169] setlocal 5 .............................. aEnemies = []
  [171] getparam 2 .............................. <oResult>
  [173] pusharglist 1 ........................... <oResult>
  [175] objcall 446 ............................. <oResult.getFriends()>
  [178] setlocal 6 .............................. faFriends = oResult.getFriends()
  [180] pusharglist 0 ........................... <[]>
  [182] pushlist ................................ <[]>
  [183] setlocal 7 .............................. aFriends = []
  [185] getlocal 6 .............................. <faFriends>
  [187] pusharglist 1 ........................... <faFriends>
  [189] extcall 15 .............................. <voidp(faFriends)>
  [191] not ..................................... <not voidp(faFriends)>
  [192] getlocal 6 .............................. <faFriends>
  [194] pusharglist 0 ........................... <>
  [196] extcall 190 ............................. <VOID>
  [198] nteq .................................... <faFriends <> VOID>
  [199] and ..................................... <not voidp(faFriends) and (faFriends <> VOID)>
  [200] jmpifz [296] ............................ if not voidp(faFriends) and (faFriends <> VOID) then
  [203] pushzero ................................ <0>
  [204] setlocal 8
  [206] getlocal 8
  [208] getlocal 6 .............................. <faFriends>
  [210] getobjprop 77 ........................... <faFriends.length>
  [212] pushint8 1 .............................. <1>
  [214] sub ..................................... <faFriends.length - 1>
  [215] lteq
  [216] jmpifz [296] ............................ repeat with i = 0 to faFriends.length - 1
  [219] getlocal 6 .............................. <faFriends>
  [221] getlocal 8 .............................. <i>
  [223] pusharglist 2 ........................... <faFriends, i>
  [225] objcall 43 .............................. <faFriends[i]>
  [227] setlocal 9 .............................. oFriend = faFriends[i]
  [229] getparam 0 .............................. <me>
  [231] getlocal 9 .............................. <oFriend>
  [233] pusharglist 2 ........................... <me, oFriend>
  [235] objcall 304 ............................. <me.getDenizenPropList(oFriend)>
  [238] setlocal 10 ............................. aFriend = me.getDenizenPropList(oFriend)
  [240] getlocal 10 ............................. <aFriend>
  [242] pushsymb 434 ............................ <#screenName>
  [245] pusharglist 2 ........................... <aFriend, #screenName>
  [247] objcall 43 .............................. <aFriend[#screenName]>
  [249] pusharglist 1 ........................... <aFriend[#screenName]>
  [251] extcall 15 .............................. <voidp(aFriend[#screenName])>
  [253] jmpifz [259] ............................ if voidp(aFriend[#screenName]) then
  [256] jmp [287] ............................... next repeat
  [259] getlocal 10 ............................. <aFriend>
  [261] pushsymb 435 ............................ <#messagesFrom>
  [264] getlocal 9 .............................. <oFriend>
  [266] pusharglist 1 ........................... <oFriend>
  [268] objcall 436 ............................. <oFriend.getMessagesFrom()>
  [271] pusharglist 1 ........................... <oFriend.getMessagesFrom()>
  [273] extcall 48 .............................. <integer(oFriend.getMessagesFrom())>
  [275] pusharglistnoret 3 ...................... <aFriend, #messagesFrom, integer(oFriend.getMessagesFrom())>
  [277] objcall 73 .............................. aFriend[#messagesFrom] = integer(oFriend.getMessagesFrom())
  [279] getlocal 7 .............................. <aFriends>
  [281] getlocal 10 ............................. <aFriend>
  [283] pusharglistnoret 2 ...................... <aFriends, aFriend>
  [285] objcall 55 .............................. aFriends.add(aFriend)
  [287] pushint8 1
  [289] getlocal 8
  [291] add
  [292] setlocal 8
  [294] endrepeat [206]
  [296] getparam 0 .............................. <me>
  [298] pushcons 190 ............................ <"aFriends: ">
  [300] getlocal 7 .............................. <aFriends>
  [302] joinstr ................................. <"aFriends: " & aFriends>
  [303] pusharglistnoret 2 ...................... <me, "aFriends: " & aFriends>
  [305] objcall 20 .............................. me.debug("aFriends: " & aFriends)
  [307] getparam 2 .............................. <oResult>
  [309] pusharglist 1 ........................... <oResult>
  [311] objcall 447 ............................. <oResult.getInvites()>
  [314] setlocal 11 ............................. faInvites = oResult.getInvites()
  [316] pusharglist 0 ........................... <[]>
  [318] pushlist ................................ <[]>
  [319] setlocal 12 ............................. aInvites = []
  [321] getlocal 11 ............................. <faInvites>
  [323] pusharglist 1 ........................... <faInvites>
  [325] extcall 15 .............................. <voidp(faInvites)>
  [327] not ..................................... <not voidp(faInvites)>
  [328] getlocal 11 ............................. <faInvites>
  [330] pusharglist 0 ........................... <>
  [332] extcall 190 ............................. <VOID>
  [334] nteq .................................... <faInvites <> VOID>
  [335] and ..................................... <not voidp(faInvites) and (faInvites <> VOID)>
  [336] jmpifz [412] ............................ if not voidp(faInvites) and (faInvites <> VOID) then
  [339] pushzero ................................ <0>
  [340] setlocal 8
  [342] getlocal 8
  [344] getlocal 11 ............................. <faInvites>
  [346] getobjprop 77 ........................... <faInvites.length>
  [348] pushint8 1 .............................. <1>
  [350] sub ..................................... <faInvites.length - 1>
  [351] lteq
  [352] jmpifz [412] ............................ repeat with i = 0 to faInvites.length - 1
  [355] getlocal 11 ............................. <faInvites>
  [357] getlocal 8 .............................. <i>
  [359] pusharglist 2 ........................... <faInvites, i>
  [361] objcall 43 .............................. <faInvites[i]>
  [363] setlocal 13 ............................. oDenizen = faInvites[i]
  [365] getparam 0 .............................. <me>
  [367] getlocal 13 ............................. <oDenizen>
  [369] pusharglist 2 ........................... <me, oDenizen>
  [371] objcall 304 ............................. <me.getDenizenPropList(oDenizen)>
  [374] setlocal 14 ............................. aDenizen = me.getDenizenPropList(oDenizen)
  [376] getlocal 14 ............................. <aDenizen>
  [378] pushsymb 434 ............................ <#screenName>
  [381] pusharglist 2 ........................... <aDenizen, #screenName>
  [383] objcall 43 .............................. <aDenizen[#screenName]>
  [385] pusharglist 1 ........................... <aDenizen[#screenName]>
  [387] extcall 15 .............................. <voidp(aDenizen[#screenName])>
  [389] jmpifz [395] ............................ if voidp(aDenizen[#screenName]) then
  [392] jmp [403] ............................... next repeat
  [395] getlocal 12 ............................. <aInvites>
  [397] getlocal 14 ............................. <aDenizen>
  [399] pusharglistnoret 2 ...................... <aInvites, aDenizen>
  [401] objcall 55 .............................. aInvites.add(aDenizen)
  [403] pushint8 1
  [405] getlocal 8
  [407] add
  [408] setlocal 8
  [410] endrepeat [342]
  [412] getparam 0 .............................. <me>
  [414] pushcons 197 ............................ <"aInvites: ">
  [416] getlocal 12 ............................. <aInvites>
  [418] joinstr ................................. <"aInvites: " & aInvites>
  [419] pusharglistnoret 2 ...................... <me, "aInvites: " & aInvites>
  [421] objcall 20 .............................. me.debug("aInvites: " & aInvites)
  [423] getparam 2 .............................. <oResult>
  [425] pusharglist 1 ........................... <oResult>
  [427] objcall 448 ............................. <oResult.getMessages()>
  [430] setlocal 15 ............................. faMessages = oResult.getMessages()
  [432] pusharglist 0 ........................... <[]>
  [434] pushlist ................................ <[]>
  [435] setlocal 16 ............................. aMessages = []
  [437] getlocal 15 ............................. <faMessages>
  [439] pusharglist 1 ........................... <faMessages>
  [441] extcall 15 .............................. <voidp(faMessages)>
  [443] not ..................................... <not voidp(faMessages)>
  [444] getlocal 15 ............................. <faMessages>
  [446] pusharglist 0 ........................... <>
  [448] extcall 190 ............................. <VOID>
  [450] nteq .................................... <faMessages <> VOID>
  [451] and ..................................... <not voidp(faMessages) and (faMessages <> VOID)>
  [452] jmpifz [528] ............................ if not voidp(faMessages) and (faMessages <> VOID) then
  [455] pushzero ................................ <0>
  [456] setlocal 8
  [458] getlocal 8
  [460] getlocal 15 ............................. <faMessages>
  [462] getobjprop 77 ........................... <faMessages.length>
  [464] pushint8 1 .............................. <1>
  [466] sub ..................................... <faMessages.length - 1>
  [467] lteq
  [468] jmpifz [528] ............................ repeat with i = 0 to faMessages.length - 1
  [471] getlocal 15 ............................. <faMessages>
  [473] getlocal 8 .............................. <i>
  [475] pusharglist 2 ........................... <faMessages, i>
  [477] objcall 43 .............................. <faMessages[i]>
  [479] setlocal 17 ............................. oMessage = faMessages[i]
  [481] getparam 0 .............................. <me>
  [483] getlocal 17 ............................. <oMessage>
  [485] pusharglist 2 ........................... <me, oMessage>
  [487] objcall 303 ............................. <me.getMessagePropList(oMessage)>
  [490] setlocal 18 ............................. aMessage = me.getMessagePropList(oMessage)
  [492] getlocal 18 ............................. <aMessage>
  [494] pushsymb 449 ............................ <#recipient>
  [497] pusharglist 2 ........................... <aMessage, #recipient>
  [499] objcall 43 .............................. <aMessage[#recipient]>
  [501] pusharglist 1 ........................... <aMessage[#recipient]>
  [503] extcall 15 .............................. <voidp(aMessage[#recipient])>
  [505] jmpifz [511] ............................ if voidp(aMessage[#recipient]) then
  [508] jmp [519] ............................... next repeat
  [511] getlocal 16 ............................. <aMessages>
  [513] getlocal 18 ............................. <aMessage>
  [515] pusharglistnoret 2 ...................... <aMessages, aMessage>
  [517] objcall 55 .............................. aMessages.add(aMessage)
  [519] pushint8 1
  [521] getlocal 8
  [523] add
  [524] setlocal 8
  [526] endrepeat [458]
  [528] getparam 0 .............................. <me>
  [530] pushcons 198 ............................ <"aMessages: ">
  [532] getlocal 16 ............................. <aMessages>
  [534] joinstr ................................. <"aMessages: " & aMessages>
  [535] pusharglistnoret 2 ...................... <me, "aMessages: " & aMessages>
  [537] objcall 20 .............................. me.debug("aMessages: " & aMessages)
  [539] getglobal 153 ........................... <ElementMgr>
  [541] pusharglist 1 ........................... <ElementMgr>
  [543] extcall 15 .............................. <voidp(ElementMgr)>
  [545] not ..................................... <not voidp(ElementMgr)>
  [546] jmpifz [574] ............................ if not voidp(ElementMgr) then
  [549] getglobal 153 ........................... <ElementMgr>
  [551] getlocal 0 .............................. <iError>
  [553] getlocal 2 .............................. <iFriendCount>
  [555] getlocal 1 .............................. <iEnemyCount>
  [557] getlocal 3 .............................. <iInviteCount>
  [559] getlocal 4 .............................. <iTotalMessageCount>
  [561] getlocal 7 .............................. <aFriends>
  [563] getlocal 5 .............................. <aEnemies>
  [565] getlocal 12 ............................. <aInvites>
  [567] getlocal 16 ............................. <aMessages>
  [569] pusharglistnoret 10 ..................... <ElementMgr, iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages>
  [571] objcall 375 ............................. ElementMgr.getMessenger_Result(iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages)
  [574] ret
end

on sendMessage_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 199 ............................ <"sendMessage_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "sendMessage_Result()">
  [  6] objcall 20 .............................. me.debug("sendMessage_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 200 ............................ <"sendMessage_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"sendMessage_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "sendMessage_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("sendMessage_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 287 ............................. ElementMgr.sendMessage_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 287 ............................. ElementMgr.sendMessage_Result(iError)
  [ 86] ret
end

on removeMessage_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 201 ............................ <"removeMessage_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "removeMessage_Result()">
  [  6] objcall 20 .............................. me.debug("removeMessage_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 202 ............................ <"removeMessage_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"removeMessage_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "removeMessage_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("removeMessage_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 288 ............................. ElementMgr.removeMessage_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 288 ............................. ElementMgr.removeMessage_Result(iError)
  [ 86] ret
end

on rejectInvitation_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 203 ............................ <"rejectInvitation_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "rejectInvitation_Result()">
  [  6] objcall 20 .............................. me.debug("rejectInvitation_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 204 ............................ <"rejectInvitation_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"rejectInvitation_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "rejectInvitation_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("rejectInvitation_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 289 ............................. ElementMgr.rejectInvitation_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 289 ............................. ElementMgr.rejectInvitation_Result(iError)
  [ 86] ret
end

on acceptInvitation_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 205 ............................ <"acceptInvitation_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "acceptInvitation_Result()">
  [  6] objcall 20 .............................. me.debug("acceptInvitation_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 206 ............................ <"acceptInvitation_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"acceptInvitation_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "acceptInvitation_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("acceptInvitation_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 290 ............................. ElementMgr.acceptInvitation_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 290 ............................. ElementMgr.acceptInvitation_Result(iError)
  [ 86] ret
end

on inviteFriend_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 207 ............................ <"inviteFriend_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "inviteFriend_Result()">
  [  6] objcall 20 .............................. me.debug("inviteFriend_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 208 ............................ <"inviteFriend_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"inviteFriend_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "inviteFriend_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("inviteFriend_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 291 ............................. ElementMgr.inviteFriend_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 291 ............................. ElementMgr.inviteFriend_Result(iError)
  [ 86] ret
end

on removeFriends_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 209 ............................ <"removeFriends_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "removeFriends_Result()">
  [  6] objcall 20 .............................. me.debug("removeFriends_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 210 ............................ <"removeFriend_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"removeFriend_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "removeFriend_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("removeFriend_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 15 .............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 153 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 292 ............................. ElementMgr.removeFriends_Result(iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 0 .............................. iError = 0
  [ 67] getglobal 153 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 15 .............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 153 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 292 ............................. ElementMgr.removeFriends_Result(iError)
  [ 86] ret
end

on getExtendedDenizenInfo_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 211 ............................ <"getExtendedDenizenInfo_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result()">
  [  6] objcall 20 .............................. me.debug("getExtendedDenizenInfo_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 168 ............................ <"sErrorType: ">
  [ 20] getlocal 0 .............................. <sErrorType>
  [ 22] joinstr ................................. <"sErrorType: " & sErrorType>
  [ 23] pusharglistnoret 2 ...................... <me, "sErrorType: " & sErrorType>
  [ 25] objcall 20 .............................. me.debug("sErrorType: " & sErrorType)
  [ 27] getparam 2 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 201 ............................. <oResult.getTypeOf()>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 37] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 38] jmpifz [ 91] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 169 ............................ <"error">
  [ 45] pusharglistnoret 2 ...................... <me, "error">
  [ 47] objcall 20 .............................. me.debug("error")
  [ 49] getparam 2 .............................. <oResult>
  [ 51] pusharglist 1 ........................... <oResult>
  [ 53] objcall 202 ............................. <oResult.getOrdinal()>
  [ 55] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 57] getparam 0 .............................. <me>
  [ 59] pushcons 212 ............................ <"getExtendedDenizenInfo_Result() ERROR ">
  [ 61] getlocal 1 .............................. <iError>
  [ 63] joinstr ................................. <"getExtendedDenizenInfo_Result() ERROR " & iError>
  [ 64] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result() ERROR " & iError>
  [ 66] objcall 20 .............................. me.debug("getExtendedDenizenInfo_Result() ERROR " & iError)
  [ 68] getglobal 153 ........................... <ElementMgr>
  [ 70] pusharglist 1 ........................... <ElementMgr>
  [ 72] extcall 15 .............................. <voidp(ElementMgr)>
  [ 74] not ..................................... <not voidp(ElementMgr)>
  [ 75] jmpifz [ 87] ............................ if not voidp(ElementMgr) then
  [ 78] getglobal 153 ........................... <ElementMgr>
  [ 80] getlocal 1 .............................. <iError>
  [ 82] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 84] objcall 293 ............................. ElementMgr.getExtendedDenizenInfo_Result(iError)
  [ 87] pusharglistnoret 0 ...................... <>
  [ 89] extcall 71 .............................. return 
  [ 91] pushzero ................................ <0>
  [ 92] setlocal 1 .............................. iError = 0
  [ 94] getparam 2 .............................. <oResult>
  [ 96] pusharglist 1 ........................... <oResult>
  [ 98] objcall 198 ............................. <oResult.getScreenName()>
  [100] setlocal 2 .............................. sScreenName = oResult.getScreenName()
  [102] getparam 0 .............................. <me>
  [104] pushcons 171 ............................ <"sScreenName: ">
  [106] getlocal 2 .............................. <sScreenName>
  [108] joinstr ................................. <"sScreenName: " & sScreenName>
  [109] pusharglistnoret 2 ...................... <me, "sScreenName: " & sScreenName>
  [111] objcall 20 .............................. me.debug("sScreenName: " & sScreenName)
  [113] getparam 2 .............................. <oResult>
  [115] pusharglist 1 ........................... <oResult>
  [117] objcall 297 ............................. <oResult.getMissionStatement()>
  [120] setlocal 3 .............................. sAvatarMission = oResult.getMissionStatement()
  [122] getparam 0 .............................. <me>
  [124] pushcons 175 ............................ <"sAvatarMission: ">
  [126] getlocal 3 .............................. <sAvatarMission>
  [128] joinstr ................................. <"sAvatarMission: " & sAvatarMission>
  [129] pusharglistnoret 2 ...................... <me, "sAvatarMission: " & sAvatarMission>
  [131] objcall 20 .............................. me.debug("sAvatarMission: " & sAvatarMission)
  [133] getparam 2 .............................. <oResult>
  [135] pusharglist 1 ........................... <oResult>
  [137] objcall 456 ............................. <oResult.getLevelList()>
  [140] setlocal 4 .............................. aLevelList = oResult.getLevelList()
  [142] getparam 0 .............................. <me>
  [144] pushcons 213 ............................ <"aLevelList: ">
  [146] getlocal 4 .............................. <aLevelList>
  [148] joinstr ................................. <"aLevelList: " & aLevelList>
  [149] pusharglistnoret 2 ...................... <me, "aLevelList: " & aLevelList>
  [151] objcall 20 .............................. me.debug("aLevelList: " & aLevelList)
  [153] getparam 2 .............................. <oResult>
  [155] pusharglist 1 ........................... <oResult>
  [157] objcall 457 ............................. <oResult.getPossessions_purchased()>
  [160] setlocal 5 .............................. iPossessions_purchased = oResult.getPossessions_purchased()
  [162] getparam 0 .............................. <me>
  [164] pushcons 214 ............................ <"iPossessions_purchased: ">
  [166] getlocal 5 .............................. <iPossessions_purchased>
  [168] joinstr ................................. <"iPossessions_purchased: " & iPossessions_purchased>
  [169] pusharglistnoret 2 ...................... <me, "iPossessions_purchased: " & iPossessions_purchased>
  [171] objcall 20 .............................. me.debug("iPossessions_purchased: " & iPossessions_purchased)
  [173] getparam 2 .............................. <oResult>
  [175] pusharglist 1 ........................... <oResult>
  [177] objcall 458 ............................. <oResult.getPossessions_total()>
  [180] setlocal 6 .............................. iPossessions_total = oResult.getPossessions_total()
  [182] getparam 0 .............................. <me>
  [184] pushcons 215 ............................ <"iPossessions_total: ">
  [186] getlocal 6 .............................. <iPossessions_total>
  [188] joinstr ................................. <"iPossessions_total: " & iPossessions_total>
  [189] pusharglistnoret 2 ...................... <me, "iPossessions_total: " & iPossessions_total>
  [191] objcall 20 .............................. me.debug("iPossessions_total: " & iPossessions_total)
  [193] getparam 2 .............................. <oResult>
  [195] pusharglist 1 ........................... <oResult>
  [197] objcall 459 ............................. <oResult.getPossessions_backpack()>
  [200] setlocal 7 .............................. iPossessions_backpack = oResult.getPossessions_backpack()
  [202] getparam 0 .............................. <me>
  [204] pushcons 216 ............................ <"iPossessions_backpack: ">
  [206] getlocal 7 .............................. <iPossessions_backpack>
  [208] joinstr ................................. <"iPossessions_backpack: " & iPossessions_backpack>
  [209] pusharglistnoret 2 ...................... <me, "iPossessions_backpack: " & iPossessions_backpack>
  [211] objcall 20 .............................. me.debug("iPossessions_backpack: " & iPossessions_backpack)
  [213] getparam 2 .............................. <oResult>
  [215] pusharglist 1 ........................... <oResult>
  [217] objcall 460 ............................. <oResult.getIsInfluencer()>
  [220] setlocal 8 .............................. bInfluencer = oResult.getIsInfluencer()
  [222] getparam 0 .............................. <me>
  [224] pushcons 217 ............................ <"bInfluencer: ">
  [226] getlocal 8 .............................. <bInfluencer>
  [228] joinstr ................................. <"bInfluencer: " & bInfluencer>
  [229] pusharglistnoret 2 ...................... <me, "bInfluencer: " & bInfluencer>
  [231] objcall 20 .............................. me.debug("bInfluencer: " & bInfluencer)
  [233] getparam 2 .............................. <oResult>
  [235] pusharglist 1 ........................... <oResult>
  [237] objcall 461 ............................. <oResult.getLogInTotal()>
  [240] setlocal 9 .............................. iLogInTotal = oResult.getLogInTotal()
  [242] getparam 0 .............................. <me>
  [244] pushcons 218 ............................ <"iLogInTotal: ">
  [246] getlocal 9 .............................. <iLogInTotal>
  [248] joinstr ................................. <"iLogInTotal: " & iLogInTotal>
  [249] pusharglistnoret 2 ...................... <me, "iLogInTotal: " & iLogInTotal>
  [251] objcall 20 .............................. me.debug("iLogInTotal: " & iLogInTotal)
  [253] getparam 0 .............................. <me>
  [255] pushcons 135 ............................ <"getExtendedDenizenInfo_Result() screenName: ">
  [257] getlocal 2 .............................. <sScreenName>
  [259] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName>
  [260] pushcons 101 ............................ <", avatarMission: ">
  [262] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: ">
  [263] getlocal 3 .............................. <sAvatarMission>
  [265] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission>
  [266] pushcons 136 ............................ <", levelList: ">
  [268] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: ">
  [269] getlocal 4 .............................. <aLevelList>
  [271] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList>
  [272] pushcons 137 ............................ <", possessions_purchased: ">
  [274] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: ">
  [275] getlocal 5 .............................. <iPossessions_purchased>
  [277] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased>
  [278] pushcons 138 ............................ <", possessions_total: ">
  [280] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: ">
  [281] getlocal 6 .............................. <iPossessions_total>
  [283] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total>
  [284] pushcons 139 ............................ <", possessions_backpack: ">
  [286] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: ">
  [287] getlocal 7 .............................. <iPossessions_backpack>
  [289] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack>
  [290] pushcons 140 ............................ <", influencer: ">
  [292] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: ">
  [293] getlocal 8 .............................. <bInfluencer>
  [295] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer>
  [296] pushcons 141 ............................ <", logInTotal: ">
  [298] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: ">
  [299] getlocal 9 .............................. <iLogInTotal>
  [301] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [302] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [304] objcall 20 .............................. me.debug("getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal)
  [306] getglobal 153 ........................... <ElementMgr>
  [308] pusharglist 1 ........................... <ElementMgr>
  [310] extcall 15 .............................. <voidp(ElementMgr)>
  [312] not ..................................... <not voidp(ElementMgr)>
  [313] jmpifz [341] ............................ if not voidp(ElementMgr) then
  [316] getglobal 153 ........................... <ElementMgr>
  [318] getlocal 1 .............................. <iError>
  [320] getlocal 2 .............................. <sScreenName>
  [322] getlocal 3 .............................. <sAvatarMission>
  [324] getlocal 4 .............................. <aLevelList>
  [326] getlocal 5 .............................. <iPossessions_purchased>
  [328] getlocal 6 .............................. <iPossessions_total>
  [330] getlocal 7 .............................. <iPossessions_backpack>
  [332] getlocal 8 .............................. <bInfluencer>
  [334] getlocal 9 .............................. <iLogInTotal>
  [336] pusharglistnoret 10 ..................... <ElementMgr, iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal>
  [338] objcall 293 ............................. ElementMgr.getExtendedDenizenInfo_Result(iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal)
  [341] ret
end

on onStatus me, oCaller, oXml
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 219 ............................ <"onStatus()">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "onStatus()", 1>
  [  8] objcall 20 .............................. me.debug("onStatus()", 1)
  [ 10] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 3 ............................ <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 2 ............................... <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 71 .............................. return sprite(me.spriteNum)
  [ 12] ret
end

on isMod me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 333 .......................... <me.bIsModerator>
  [  5] pusharglistnoret 1 ...................... <me.bIsModerator>
  [  7] extcall 71 .............................. return me.bIsModerator
  [  9] ret
end

on setScreenName me, sName
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sName>
  [  4] setobjprop 329 .......................... me.sUserScreenName = sName
  [  7] ret
end

on getScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 329 .......................... <me.sUserScreenName>
  [  5] pusharglistnoret 1 ...................... <me.sUserScreenName>
  [  7] extcall 71 .............................. return me.sUserScreenName
  [  9] ret
end

on setDenizen me, _foDenizen
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_foDenizen>
  [  4] setobjprop 462 .......................... me.foDenizen = _foDenizen
  [  7] ret
end

on getDenizen me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 462 .......................... <me.foDenizen>
  [  5] pusharglistnoret 1 ...................... <me.foDenizen>
  [  7] extcall 71 .............................. return me.foDenizen
  [  9] ret
end

on getMissionStatement me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 462 .......................... <me.foDenizen>
  [  5] pusharglist 1 ........................... <me.foDenizen>
  [  7] extcall 15 .............................. <voidp(me.foDenizen)>
  [  9] not ..................................... <not voidp(me.foDenizen)>
  [ 10] jmpifz [ 47] ............................ if not voidp(me.foDenizen) then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 462 ...................... <me.foDenizen>
  [ 18] pusharglist 1 ........................... <me.foDenizen>
  [ 20] objcall 297 ............................. <me.foDenizen.getMissionStatement()>
  [ 23] setlocal 0 .............................. sMission = me.foDenizen.getMissionStatement()
  [ 25] getlocal 0 .............................. <sMission>
  [ 27] pusharglist 1 ........................... <sMission>
  [ 29] extcall 15 .............................. <voidp(sMission)>
  [ 31] jmpifz [ 38] ............................ if voidp(sMission) then
  [ 34] pushcons 1 .............................. <EMPTY>
  [ 36] setlocal 0 .............................. sMission = EMPTY
  [ 38] getlocal 0 .............................. <sMission>
  [ 40] pusharglistnoret 1 ...................... <sMission>
  [ 42] extcall 71 .............................. return sMission
  [ 44] jmp [ 53]
  [ 47] pushcons 1 .............................. <EMPTY>
  [ 49] pusharglistnoret 1 ...................... <EMPTY>
  [ 51] extcall 71 .............................. return EMPTY
  [ 53] pushcons 220 ............................ <"Todo: get real mission statment">
  [ 55] pusharglistnoret 1 ...................... <"Todo: get real mission statment">
  [ 57] extcall 71 .............................. return "Todo: get real mission statment"
  [ 59] ret
end

on getAvatarImage me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 194 ............................. <me.getDenizen()>
  [  6] setlocal 0 .............................. oDenizen = me.getDenizen()
  [  8] getlocal 0 .............................. <oDenizen>
  [ 10] pusharglist 1 ........................... <oDenizen>
  [ 12] extcall 15 .............................. <voidp(oDenizen)>
  [ 14] not ..................................... <not voidp(oDenizen)>
  [ 15] jmpifz [ 27] ............................ if not voidp(oDenizen) then
  [ 18] getlocal 0 .............................. <oDenizen>
  [ 20] pusharglist 1 ........................... <oDenizen>
  [ 22] objcall 427 ............................. <oDenizen.getAvatarDefinition()>
  [ 25] setlocal 1 .............................. sAttributes = oDenizen.getAvatarDefinition()
  [ 27] pushcons 221 ............................ <"AvatarEngine">
  [ 29] pusharglist 1 ........................... <"AvatarEngine">
  [ 31] extcall 4 ............................... <member("AvatarEngine")>
  [ 33] setlocal 2 .............................. oMember = member("AvatarEngine")
  [ 35] getlocal 2 .............................. <oMember>
  [ 37] getobjprop 411 .......................... <oMember.memberNum>
  [ 40] pushzero ................................ <0>
  [ 41] lt ...................................... <oMember.memberNum < 0>
  [ 42] jmpifz [ 49] ............................ if oMember.memberNum < 0 then
  [ 45] pusharglistnoret 0 ...................... <>
  [ 47] extcall 71 .............................. return 
  [ 49] pushcons 221 ............................ <"AvatarEngine">
  [ 51] pusharglist 1 ........................... <"AvatarEngine">
  [ 53] extcall 148 ............................. <script("AvatarEngine")>
  [ 55] getlocal 1 .............................. <sAttributes>
  [ 57] pushint8 100 ............................ <100>
  [ 59] pushint8 1 .............................. <1>
  [ 61] pusharglist 4 ........................... <script("AvatarEngine"), sAttributes, 100, 1>
  [ 63] objcall 149 ............................. <script("AvatarEngine").new(sAttributes, 100, 1)>
  [ 65] setlocal 3 .............................. oAvatar = script("AvatarEngine").new(sAttributes, 100, 1)
  [ 67] getlocal 3 .............................. <oAvatar>
  [ 69] pusharglist 1 ........................... <oAvatar>
  [ 71] objcall 465 ............................. <oAvatar.getPreviewImage()>
  [ 74] setlocal 4 .............................. oPreviewImage = oAvatar.getPreviewImage()
  [ 76] getlocal 4 .............................. <oPreviewImage>
  [ 78] pusharglistnoret 1 ...................... <oPreviewImage>
  [ 80] extcall 71 .............................. return oPreviewImage
  [ 82] ret
end

on getDenizenAvatarImage me, sAttributes
  [  0] pushcons 221 ............................ <"AvatarEngine">
  [  2] pusharglist 1 ........................... <"AvatarEngine">
  [  4] extcall 4 ............................... <member("AvatarEngine")>
  [  6] setlocal 0 .............................. oMember = member("AvatarEngine")
  [  8] getlocal 0 .............................. <oMember>
  [ 10] getobjprop 411 .......................... <oMember.memberNum>
  [ 13] pushzero ................................ <0>
  [ 14] lt ...................................... <oMember.memberNum < 0>
  [ 15] jmpifz [ 22] ............................ if oMember.memberNum < 0 then
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 71 .............................. return 
  [ 22] pushcons 221 ............................ <"AvatarEngine">
  [ 24] pusharglist 1 ........................... <"AvatarEngine">
  [ 26] extcall 148 ............................. <script("AvatarEngine")>
  [ 28] getparam 1 .............................. <sAttributes>
  [ 30] pushint8 100 ............................ <100>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglist 4 ........................... <script("AvatarEngine"), sAttributes, 100, 1>
  [ 36] objcall 149 ............................. <script("AvatarEngine").new(sAttributes, 100, 1)>
  [ 38] setlocal 1 .............................. oAvatar = script("AvatarEngine").new(sAttributes, 100, 1)
  [ 40] getlocal 1 .............................. <oAvatar>
  [ 42] pusharglist 1 ........................... <oAvatar>
  [ 44] objcall 465 ............................. <oAvatar.getPreviewImage()>
  [ 47] setlocal 2 .............................. oPreviewImage = oAvatar.getPreviewImage()
  [ 49] getlocal 2 .............................. <oPreviewImage>
  [ 51] pusharglistnoret 1 ...................... <oPreviewImage>
  [ 53] extcall 71 .............................. return oPreviewImage
  [ 55] ret
end

on getTestDenizens me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aProps = []
  [  5] getlocal 0 .............................. <aProps>
  [  7] pushsymb 434 ............................ <#screenName>
  [ 10] pushcons 222 ............................ <"Aslan">
  [ 12] pushsymb 470 ............................ <#gender>
  [ 15] pushint8 1 .............................. <1>
  [ 17] pushsymb 471 ............................ <#avatarDefinition>
  [ 20] pushcons 223 ............................ <"TODO">
  [ 22] pushsymb 472 ............................ <#mission>
  [ 25] pushcons 224 ............................ <"To rock your world">
  [ 27] pushsymb 473 ............................ <#online>
  [ 30] pushint8 1 .............................. <1>
  [ 32] pushsymb 474 ............................ <#lastAccess>
  [ 35] pushcons 93 ............................. <"Date">
  [ 37] pusharglist 1 ........................... <"Date">
  [ 39] extcall 36 .............................. <newObject("Date")>
  [ 41] pushsymb 475 ............................ <#lastSeenIn>
  [ 44] pushcons 225 ............................ <"Aslan2">
  [ 46] pushsymb 476 ............................ <#lastSeenInName>
  [ 49] pushcons 226 ............................ <"TheLion">
  [ 51] pusharglist 16 .......................... <[#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [ 53] pushproplist ............................ <[#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [ 54] pusharglistnoret 2 ...................... <aProps, [#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [ 56] objcall 55 .............................. aProps.add([#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [ 58] getlocal 0 .............................. <aProps>
  [ 60] pushsymb 434 ............................ <#screenName>
  [ 63] pushcons 227 ............................ <"Jarod">
  [ 65] pushsymb 470 ............................ <#gender>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pushsymb 471 ............................ <#avatarDefinition>
  [ 73] pushcons 223 ............................ <"TODO">
  [ 75] pushsymb 472 ............................ <#mission>
  [ 78] pushcons 224 ............................ <"To rock your world">
  [ 80] pushsymb 473 ............................ <#online>
  [ 83] pushzero ................................ <0>
  [ 84] pushsymb 474 ............................ <#lastAccess>
  [ 87] pushcons 93 ............................. <"Date">
  [ 89] pusharglist 1 ........................... <"Date">
  [ 91] extcall 36 .............................. <newObject("Date")>
  [ 93] pushsymb 475 ............................ <#lastSeenIn>
  [ 96] pushcons 225 ............................ <"Aslan2">
  [ 98] pushsymb 476 ............................ <#lastSeenInName>
  [101] pushcons 226 ............................ <"TheLion">
  [103] pusharglist 16 .......................... <[#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [105] pushproplist ............................ <[#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [106] pusharglistnoret 2 ...................... <aProps, [#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [108] objcall 55 .............................. aProps.add([#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [110] getlocal 0 .............................. <aProps>
  [112] pushsymb 434 ............................ <#screenName>
  [115] pushcons 228 ............................ <"Mark">
  [117] pushsymb 470 ............................ <#gender>
  [120] pushint8 1 .............................. <1>
  [122] pushsymb 471 ............................ <#avatarDefinition>
  [125] pushcons 223 ............................ <"TODO">
  [127] pushsymb 472 ............................ <#mission>
  [130] pushcons 224 ............................ <"To rock your world">
  [132] pushsymb 473 ............................ <#online>
  [135] pushint8 1 .............................. <1>
  [137] pushsymb 474 ............................ <#lastAccess>
  [140] pushcons 93 ............................. <"Date">
  [142] pusharglist 1 ........................... <"Date">
  [144] extcall 36 .............................. <newObject("Date")>
  [146] pushsymb 475 ............................ <#lastSeenIn>
  [149] pushcons 225 ............................ <"Aslan2">
  [151] pushsymb 476 ............................ <#lastSeenInName>
  [154] pushcons 226 ............................ <"TheLion">
  [156] pusharglist 16 .......................... <[#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [158] pushproplist ............................ <[#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [159] pusharglistnoret 2 ...................... <aProps, [#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [161] objcall 55 .............................. aProps.add([#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [163] getlocal 0 .............................. <aProps>
  [165] pushsymb 434 ............................ <#screenName>
  [168] pushcons 229 ............................ <"Paul">
  [170] pushsymb 470 ............................ <#gender>
  [173] pushint8 1 .............................. <1>
  [175] pushsymb 471 ............................ <#avatarDefinition>
  [178] pushcons 223 ............................ <"TODO">
  [180] pushsymb 472 ............................ <#mission>
  [183] pushcons 224 ............................ <"To rock your world">
  [185] pushsymb 473 ............................ <#online>
  [188] pushzero ................................ <0>
  [189] pushsymb 474 ............................ <#lastAccess>
  [192] pushcons 93 ............................. <"Date">
  [194] pusharglist 1 ........................... <"Date">
  [196] extcall 36 .............................. <newObject("Date")>
  [198] pushsymb 475 ............................ <#lastSeenIn>
  [201] pushcons 225 ............................ <"Aslan2">
  [203] pushsymb 476 ............................ <#lastSeenInName>
  [206] pushcons 226 ............................ <"TheLion">
  [208] pusharglist 16 .......................... <[#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [210] pushproplist ............................ <[#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [211] pusharglistnoret 2 ...................... <aProps, [#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [213] objcall 55 .............................. aProps.add([#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [215] getlocal 0 .............................. <aProps>
  [217] pushsymb 434 ............................ <#screenName>
  [220] pushcons 230 ............................ <"George">
  [222] pushsymb 470 ............................ <#gender>
  [225] pushint8 1 .............................. <1>
  [227] pushsymb 471 ............................ <#avatarDefinition>
  [230] pushcons 223 ............................ <"TODO">
  [232] pushsymb 472 ............................ <#mission>
  [235] pushcons 224 ............................ <"To rock your world">
  [237] pushsymb 473 ............................ <#online>
  [240] pushint8 1 .............................. <1>
  [242] pushsymb 474 ............................ <#lastAccess>
  [245] pushcons 93 ............................. <"Date">
  [247] pusharglist 1 ........................... <"Date">
  [249] extcall 36 .............................. <newObject("Date")>
  [251] pushsymb 475 ............................ <#lastSeenIn>
  [254] pushcons 225 ............................ <"Aslan2">
  [256] pushsymb 476 ............................ <#lastSeenInName>
  [259] pushcons 226 ............................ <"TheLion">
  [261] pusharglist 16 .......................... <[#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [263] pushproplist ............................ <[#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [264] pusharglistnoret 2 ...................... <aProps, [#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [266] objcall 55 .............................. aProps.add([#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [268] getlocal 0 .............................. <aProps>
  [270] pusharglistnoret 1 ...................... <aProps>
  [272] extcall 71 .............................. return aProps
  [274] ret
end

on getTestFriends me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 300 ............................. <me.getTestDenizens()>
  [  7] setlocal 0 .............................. aProps = me.getTestDenizens()
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 1
  [ 13] getlocal 1
  [ 15] getlocal 0 .............................. <aProps>
  [ 17] getobjprop 42 ........................... <aProps.count>
  [ 19] lteq
  [ 20] jmpifz [ 53] ............................ repeat with i = 1 to aProps.count
  [ 23] getlocal 0 .............................. <aProps>
  [ 25] getlocal 1 .............................. <i>
  [ 27] pusharglist 2 ........................... <aProps, i>
  [ 29] objcall 43 .............................. <aProps[i]>
  [ 31] pushsymb 435 ............................ <#messagesFrom>
  [ 34] pushint8 10 ............................. <10>
  [ 36] pusharglist 1 ........................... <10>
  [ 38] extcall 246 ............................. <random(10)>
  [ 40] pusharglistnoret 3 ...................... <aProps[i], #messagesFrom, random(10)>
  [ 42] objcall 73 .............................. aProps[i][#messagesFrom] = random(10)
  [ 44] pushint8 1
  [ 46] getlocal 1
  [ 48] add
  [ 49] setlocal 1
  [ 51] endrepeat [ 13]
  [ 53] getlocal 0 .............................. <aProps>
  [ 55] pusharglistnoret 1 ...................... <aProps>
  [ 57] extcall 71 .............................. return aProps
  [ 59] ret
end

on getTestMessages me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aMessages = []
  [  5] getlocal 0 .............................. <aMessages>
  [  7] pushsymb 478 ............................ <#sender>
  [ 10] pushcons 222 ............................ <"Aslan">
  [ 12] pushsymb 449 ............................ <#recipient>
  [ 15] pushcons 222 ............................ <"Aslan">
  [ 17] pushsymb 479 ............................ <#message>
  [ 20] pushcons 231 ............................ <"Hi I'm Aslan">
  [ 22] pushsymb 480 ............................ <#date>
  [ 25] pushcons 93 ............................. <"Date">
  [ 27] pusharglist 1 ........................... <"Date">
  [ 29] extcall 36 .............................. <newObject("Date")>
  [ 31] pusharglist 8 ........................... <[#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")]>
  [ 33] pushproplist ............................ <[#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")]>
  [ 34] pusharglistnoret 2 ...................... <aMessages, [#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")]>
  [ 36] objcall 55 .............................. aMessages.add([#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")])
  [ 38] getlocal 0 .............................. <aMessages>
  [ 40] pushsymb 478 ............................ <#sender>
  [ 43] pushcons 227 ............................ <"Jarod">
  [ 45] pushsymb 449 ............................ <#recipient>
  [ 48] pushcons 222 ............................ <"Aslan">
  [ 50] pushsymb 479 ............................ <#message>
  [ 53] pushcons 232 ............................ <"Hi I'm Jarod">
  [ 55] pushsymb 480 ............................ <#date>
  [ 58] pushcons 93 ............................. <"Date">
  [ 60] pusharglist 1 ........................... <"Date">
  [ 62] extcall 36 .............................. <newObject("Date")>
  [ 64] pusharglist 8 ........................... <[#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")]>
  [ 66] pushproplist ............................ <[#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")]>
  [ 67] pusharglistnoret 2 ...................... <aMessages, [#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")]>
  [ 69] objcall 55 .............................. aMessages.add([#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")])
  [ 71] getlocal 0 .............................. <aMessages>
  [ 73] pushsymb 478 ............................ <#sender>
  [ 76] pushcons 228 ............................ <"Mark">
  [ 78] pushsymb 449 ............................ <#recipient>
  [ 81] pushcons 222 ............................ <"Aslan">
  [ 83] pushsymb 479 ............................ <#message>
  [ 86] pushcons 233 ............................ <"Hi I'm Mark">
  [ 88] pushsymb 480 ............................ <#date>
  [ 91] pushcons 93 ............................. <"Date">
  [ 93] pusharglist 1 ........................... <"Date">
  [ 95] extcall 36 .............................. <newObject("Date")>
  [ 97] pusharglist 8 ........................... <[#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")]>
  [ 99] pushproplist ............................ <[#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")]>
  [100] pusharglistnoret 2 ...................... <aMessages, [#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")]>
  [102] objcall 55 .............................. aMessages.add([#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")])
  [104] getlocal 0 .............................. <aMessages>
  [106] pushsymb 478 ............................ <#sender>
  [109] pushcons 229 ............................ <"Paul">
  [111] pushsymb 449 ............................ <#recipient>
  [114] pushcons 222 ............................ <"Aslan">
  [116] pushsymb 479 ............................ <#message>
  [119] pushcons 234 ............................ <"Hi I'm Paul">
  [121] pushsymb 480 ............................ <#date>
  [124] pushcons 93 ............................. <"Date">
  [126] pusharglist 1 ........................... <"Date">
  [128] extcall 36 .............................. <newObject("Date")>
  [130] pusharglist 8 ........................... <[#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")]>
  [132] pushproplist ............................ <[#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")]>
  [133] pusharglistnoret 2 ...................... <aMessages, [#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")]>
  [135] objcall 55 .............................. aMessages.add([#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")])
  [137] getlocal 0 .............................. <aMessages>
  [139] pushsymb 478 ............................ <#sender>
  [142] pushcons 230 ............................ <"George">
  [144] pushsymb 449 ............................ <#recipient>
  [147] pushcons 222 ............................ <"Aslan">
  [149] pushsymb 479 ............................ <#message>
  [152] pushcons 235 ............................ <"Hi I'm George">
  [154] pushsymb 480 ............................ <#date>
  [157] pushcons 93 ............................. <"Date">
  [159] pusharglist 1 ........................... <"Date">
  [161] extcall 36 .............................. <newObject("Date")>
  [163] pusharglist 8 ........................... <[#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")]>
  [165] pushproplist ............................ <[#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")]>
  [166] pusharglistnoret 2 ...................... <aMessages, [#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")]>
  [168] objcall 55 .............................. aMessages.add([#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")])
  [170] getlocal 0 .............................. <aMessages>
  [172] pusharglistnoret 1 ...................... <aMessages>
  [174] extcall 71 .............................. return aMessages
  [176] ret
end

on getMessagePropList me, oRC
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aProps = [:]
  [  5] getlocal 0 .............................. <aProps>
  [  7] pushsymb 449 ............................ <#recipient>
  [ 10] getparam 1 .............................. <oRC>
  [ 12] pusharglist 1 ........................... <oRC>
  [ 14] objcall 481 ............................. <oRC.getRecipient()>
  [ 17] pusharglistnoret 3 ...................... <aProps, #recipient, oRC.getRecipient()>
  [ 19] objcall 73 .............................. aProps[#recipient] = oRC.getRecipient()
  [ 21] getlocal 0 .............................. <aProps>
  [ 23] pushsymb 478 ............................ <#sender>
  [ 26] getparam 1 .............................. <oRC>
  [ 28] pusharglist 1 ........................... <oRC>
  [ 30] objcall 482 ............................. <oRC.getSender()>
  [ 33] pusharglistnoret 3 ...................... <aProps, #sender, oRC.getSender()>
  [ 35] objcall 73 .............................. aProps[#sender] = oRC.getSender()
  [ 37] getlocal 0 .............................. <aProps>
  [ 39] pushsymb 479 ............................ <#message>
  [ 42] getparam 1 .............................. <oRC>
  [ 44] pusharglist 1 ........................... <oRC>
  [ 46] objcall 483 ............................. <oRC.getText()>
  [ 49] pusharglistnoret 3 ...................... <aProps, #message, oRC.getText()>
  [ 51] objcall 73 .............................. aProps[#message] = oRC.getText()
  [ 53] getlocal 0 .............................. <aProps>
  [ 55] pushsymb 484 ............................ <#sentOn>
  [ 58] getparam 1 .............................. <oRC>
  [ 60] pusharglist 1 ........................... <oRC>
  [ 62] objcall 485 ............................. <oRC.getSentOn()>
  [ 65] pusharglistnoret 3 ...................... <aProps, #sentOn, oRC.getSentOn()>
  [ 67] objcall 73 .............................. aProps[#sentOn] = oRC.getSentOn()
  [ 69] getlocal 0 .............................. <aProps>
  [ 71] pushsymb 486 ............................ <#messageHash>
  [ 74] getparam 1 .............................. <oRC>
  [ 76] pusharglist 1 ........................... <oRC>
  [ 78] objcall 487 ............................. <oRC.getMessageHash()>
  [ 81] pusharglistnoret 3 ...................... <aProps, #messageHash, oRC.getMessageHash()>
  [ 83] objcall 73 .............................. aProps[#messageHash] = oRC.getMessageHash()
  [ 85] getlocal 0 .............................. <aProps>
  [ 87] pusharglistnoret 1 ...................... <aProps>
  [ 89] extcall 71 .............................. return aProps
  [ 91] ret
end

on getDenizenPropList me, oDenizen
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aProps = [:]
  [  5] getlocal 0 .............................. <aProps>
  [  7] pushsymb 434 ............................ <#screenName>
  [ 10] getparam 1 .............................. <oDenizen>
  [ 12] pusharglist 1 ........................... <oDenizen>
  [ 14] objcall 198 ............................. <oDenizen.getScreenName()>
  [ 16] pusharglistnoret 3 ...................... <aProps, #screenName, oDenizen.getScreenName()>
  [ 18] objcall 73 .............................. aProps[#screenName] = oDenizen.getScreenName()
  [ 20] getlocal 0 .............................. <aProps>
  [ 22] pushsymb 471 ............................ <#avatarDefinition>
  [ 25] getparam 1 .............................. <oDenizen>
  [ 27] pusharglist 1 ........................... <oDenizen>
  [ 29] objcall 427 ............................. <oDenizen.getAvatarDefinition()>
  [ 32] pusharglistnoret 3 ...................... <aProps, #avatarDefinition, oDenizen.getAvatarDefinition()>
  [ 34] objcall 73 .............................. aProps[#avatarDefinition] = oDenizen.getAvatarDefinition()
  [ 36] getparam 0 .............................. <me>
  [ 38] getparam 1 .............................. <oDenizen>
  [ 40] pusharglist 1 ........................... <oDenizen>
  [ 42] objcall 428 ............................. <oDenizen.getGender()>
  [ 45] pusharglist 2 ........................... <me, oDenizen.getGender()>
  [ 47] objcall 251 ............................. <me.getGenderOrdinal(oDenizen.getGender())>
  [ 49] setlocal 1 .............................. iGender = me.getGenderOrdinal(oDenizen.getGender())
  [ 51] getlocal 0 .............................. <aProps>
  [ 53] pushsymb 470 ............................ <#gender>
  [ 56] getlocal 1 .............................. <iGender>
  [ 58] pusharglistnoret 3 ...................... <aProps, #gender, iGender>
  [ 60] objcall 73 .............................. aProps[#gender] = iGender
  [ 62] getlocal 0 .............................. <aProps>
  [ 64] pushsymb 472 ............................ <#mission>
  [ 67] getparam 1 .............................. <oDenizen>
  [ 69] pusharglist 1 ........................... <oDenizen>
  [ 71] objcall 297 ............................. <oDenizen.getMissionStatement()>
  [ 74] pusharglistnoret 3 ...................... <aProps, #mission, oDenizen.getMissionStatement()>
  [ 76] objcall 73 .............................. aProps[#mission] = oDenizen.getMissionStatement()
  [ 78] getlocal 0 .............................. <aProps>
  [ 80] pushsymb 475 ............................ <#lastSeenIn>
  [ 83] getparam 1 .............................. <oDenizen>
  [ 85] pusharglist 1 ........................... <oDenizen>
  [ 87] objcall 425 ............................. <oDenizen.getLastSeenIn()>
  [ 90] pusharglistnoret 3 ...................... <aProps, #lastSeenIn, oDenizen.getLastSeenIn()>
  [ 92] objcall 73 .............................. aProps[#lastSeenIn] = oDenizen.getLastSeenIn()
  [ 94] getlocal 0 .............................. <aProps>
  [ 96] pushsymb 476 ............................ <#lastSeenInName>
  [ 99] getparam 1 .............................. <oDenizen>
  [101] pusharglist 1 ........................... <oDenizen>
  [103] objcall 426 ............................. <oDenizen.getLastSeenInName()>
  [106] pusharglistnoret 3 ...................... <aProps, #lastSeenInName, oDenizen.getLastSeenInName()>
  [108] objcall 73 .............................. aProps[#lastSeenInName] = oDenizen.getLastSeenInName()
  [110] getlocal 0 .............................. <aProps>
  [112] pushsymb 474 ............................ <#lastAccess>
  [115] getparam 1 .............................. <oDenizen>
  [117] pusharglist 1 ........................... <oDenizen>
  [119] objcall 424 ............................. <oDenizen.getLastAccess()>
  [122] pusharglistnoret 3 ...................... <aProps, #lastAccess, oDenizen.getLastAccess()>
  [124] objcall 73 .............................. aProps[#lastAccess] = oDenizen.getLastAccess()
  [126] getlocal 0 .............................. <aProps>
  [128] pushsymb 473 ............................ <#online>
  [131] getparam 1 .............................. <oDenizen>
  [133] pusharglist 1 ........................... <oDenizen>
  [135] objcall 429 ............................. <oDenizen.getIsOnline()>
  [138] pusharglistnoret 3 ...................... <aProps, #online, oDenizen.getIsOnline()>
  [140] objcall 73 .............................. aProps[#online] = oDenizen.getIsOnline()
  [142] getlocal 0 .............................. <aProps>
  [144] pusharglistnoret 1 ...................... <aProps>
  [146] extcall 71 .............................. return aProps
  [148] ret
end

on getCokesDrank me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 326 .......................... <me.iCokesDrank>
  [  5] pusharglistnoret 1 ...................... <me.iCokesDrank>
  [  7] extcall 71 .............................. return me.iCokesDrank
  [  9] ret
end

on setCokesDrank me, i
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <i>
  [  4] setobjprop 326 .......................... me.iCokesDrank = i
  [  7] ret
end

on getBackpack me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 489 .......................... <me.foBackpack>
  [  5] pusharglistnoret 1 ...................... <me.foBackpack>
  [  7] extcall 71 .............................. return me.foBackpack
  [  9] ret
end

on setBackPack me, _foBackPack
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_foBackPack>
  [  4] setobjprop 489 .......................... me.foBackpack = _foBackPack
  [  7] ret
end

on getEnvironment me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 161 ...................... <me.fo_level0>
  [  4] pusharglist 1 ........................... <me.fo_level0>
  [  6] objcall 308 ............................. <me.fo_level0.getEnvironment()>
  [  9] setlocal 0 .............................. sEnv = me.fo_level0.getEnvironment()
  [ 11] getlocal 0 .............................. <sEnv>
  [ 13] pusharglistnoret 1 ...................... <sEnv>
  [ 15] extcall 71 .............................. return sEnv
  [ 17] ret
end

on isFTMmember me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 27] objcall 309 ............................. me.foDenizenManager.isFTMmember(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 30] ret
end

on getGenres me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 27] objcall 310 ............................. me.foDenizenManager.getGenres(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 30] ret
end

on getArtistsByGenre me, whatgenre
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] getparam 1 .............................. <whatgenre>
  [ 27] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatgenre>
  [ 29] objcall 311 ............................. me.foDenizenManager.getArtistsByGenre(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatgenre)
  [ 32] ret
end

on getSongsByArtist me, whatartist
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] getparam 1 .............................. <whatartist>
  [ 27] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatartist>
  [ 29] objcall 312 ............................. me.foDenizenManager.getSongsByArtist(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatartist)
  [ 32] ret
end

on getPlaylist me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 27] objcall 313 ............................. me.foDenizenManager.getPlaylist(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 30] ret
end

on addToPlayList me, mysongid
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] getparam 1 .............................. <mysongid>
  [ 27] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid>
  [ 29] objcall 314 ............................. me.foDenizenManager.addToPlayList(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid)
  [ 32] ret
end

on removeFromPlaylist me, mysongid
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] getparam 1 .............................. <mysongid>
  [ 27] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid>
  [ 29] objcall 315 ............................. me.foDenizenManager.removeFromPlaylist(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid)
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 334 ...................... <me.foDenizenManager>
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglist 1 ........................... <me>
  [ 41] objcall 194 ............................. <me.getDenizen()>
  [ 43] pusharglist 1 ........................... <me.getDenizen()>
  [ 45] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglist 1 ........................... <me>
  [ 51] objcall 194 ............................. <me.getDenizen()>
  [ 53] pusharglist 1 ........................... <me.getDenizen()>
  [ 55] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 57] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 59] objcall 313 ............................. me.foDenizenManager.getPlaylist(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 62] ret
end

on getAvailableTokens me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 334 ...................... <me.foDenizenManager>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 194 ............................. <me.getDenizen()>
  [ 11] pusharglist 1 ........................... <me.getDenizen()>
  [ 13] objcall 198 ............................. <me.getDenizen().getScreenName()>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 194 ............................. <me.getDenizen()>
  [ 21] pusharglist 1 ........................... <me.getDenizen()>
  [ 23] objcall 195 ............................. <me.getDenizen().getSecret()>
  [ 25] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 27] objcall 316 ............................. me.foDenizenManager.getAvailableTokens(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 30] ret
end

on getAvailableTokens_result me, oCaller, oResult
  [  0] pushcons 236 ............................ <"cc.jukebox.tokennum">
  [  2] pusharglist 1 ........................... <"cc.jukebox.tokennum">
  [  4] extcall 4 ............................... <member("cc.jukebox.tokennum")>
  [  6] pushcons 237 ............................ <"Tokens left:">
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] extcall 48 .............................. <integer(oResult)>
  [ 14] joinpadstr .............................. <"Tokens left:" && integer(oResult)>
  [ 15] setobjprop 412 .......................... member("cc.jukebox.tokennum").text = "Tokens left:" && integer(oResult)
  [ 18] ret
end

on isFtmMember_result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 238 ............................ <"isFTMmember_result()">
  [  4] pusharglistnoret 2 ...................... <me, "isFTMmember_result()">
  [  6] objcall 20 .............................. me.debug("isFTMmember_result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 2 .............................. <oResult>
  [ 18] pusharglist 1 ........................... <oResult>
  [ 20] objcall 201 ............................. <oResult.getTypeOf()>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 26] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 27] jmpifz [105] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 30] getparam 2 .............................. <oResult>
  [ 32] pusharglist 1 ........................... <oResult>
  [ 34] objcall 202 ............................. <oResult.getOrdinal()>
  [ 36] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 38] getlocal 1 .............................. <iError>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <iError = 0>
  [ 42] jmpifz [ 55] ............................ if iError = 0 then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 1 .............................. <1>
  [ 49] setobjprop 495 .......................... me.bisFTMmember = 1
  [ 52] jmp [ 59]
  [ 55] pushzero ................................ <0>
  [ 56] setprop 495 ............................. bisFTMmember = 0
  [ 59] getparam 0 .............................. <me>
  [ 61] pushcons 239 ............................ <"isFTMmember: ">
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 495 .......................... <me.bisFTMmember>
  [ 68] joinstr ................................. <"isFTMmember: " & me.bisFTMmember>
  [ 69] pusharglistnoret 2 ...................... <me, "isFTMmember: " & me.bisFTMmember>
  [ 71] objcall 20 .............................. me.debug("isFTMmember: " & me.bisFTMmember)
  [ 73] pushcons 240 ............................ <"isFTMmember_result :">
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 495 .......................... <me.bisFTMmember>
  [ 80] joinpadstr .............................. <"isFTMmember_result :" && me.bisFTMmember>
  [ 81] pusharglistnoret 1 ...................... <"isFTMmember_result :" && me.bisFTMmember>
  [ 83] extcall 33 .............................. put "isFTMmember_result :" && me.bisFTMmember
  [ 85] getglobal 153 ........................... <ElementMgr>
  [ 87] pusharglistnoret 1 ...................... <ElementMgr>
  [ 89] objcall 496 ............................. ElementMgr.openJukebox()
  [ 92] getglobal 153 ........................... <ElementMgr>
  [ 94] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 97] getparam 0 .............................. <me>
  [ 99] getobjprop 495 .......................... <me.bisFTMmember>
  [102] setobjprop 309 .......................... ElementMgr.oJukebox.isFTMmember = me.bisFTMmember
  [105] ret
end

on getgenres_result me, oCaller, oResult
  [  0] getglobal 76 ............................ <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 498 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. mygenres = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getobjprop 501 .......................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglist 2 ........................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1>
  [ 28] extcall 499 ............................. <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1)>
  [ 31] pushsymb 502 ............................ <#cataloglist>
  [ 34] eq ...................................... <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #cataloglist>
  [ 35] jmpifz [ 80] ............................ if getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #cataloglist then
  [ 38] getglobal 153 ........................... <ElementMgr>
  [ 40] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 43] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 45] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 48] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 51] getchainedprop 502 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 54] getlocal 0 .............................. <mygenres>
  [ 56] setobjprop 503 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.pContentlist = mygenres
  [ 59] getglobal 153 ........................... <ElementMgr>
  [ 61] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 64] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 66] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 69] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 72] getchainedprop 502 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 75] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 77] objcall 504 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.updatecontent()
  [ 80] ret
end

on getArtistsByGenre_result me, oCaller, oResult
  [  0] getglobal 76 ............................ <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 498 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. myartists = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] getchainedprop 502 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 27] getlocal 0 .............................. <myartists>
  [ 29] setobjprop 503 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.pContentlist = myartists
  [ 32] getglobal 153 ........................... <ElementMgr>
  [ 34] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 37] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 39] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 42] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 45] getchainedprop 502 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 48] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 50] objcall 504 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.updatecontent()
  [ 53] ret
end

on getSongsByArtist_result me, oCaller, oResult
  [  0] getglobal 76 ............................ <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 498 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. mysongs = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] getchainedprop 502 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 27] getlocal 0 .............................. <mysongs>
  [ 29] setobjprop 503 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.pContentlist = mysongs
  [ 32] getglobal 153 ........................... <ElementMgr>
  [ 34] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 37] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 39] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 42] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 45] getchainedprop 502 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 48] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 50] objcall 504 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.updatecontent()
  [ 53] ret
end

on getPlaylist_Result me, oCaller, oResult
  [  0] getglobal 76 ............................ <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 498 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. mysongs = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getobjprop 501 .......................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglist 2 ........................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1>
  [ 28] extcall 499 ............................. <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1)>
  [ 31] pushsymb 508 ............................ <#playList>
  [ 34] eq ...................................... <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #playList>
  [ 35] jmpifz [ 80] ............................ if getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #playList then
  [ 38] getglobal 153 ........................... <ElementMgr>
  [ 40] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 43] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 45] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 48] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 51] getchainedprop 508 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 54] getlocal 0 .............................. <mysongs>
  [ 56] setobjprop 503 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList.pContentlist = mysongs
  [ 59] getglobal 153 ........................... <ElementMgr>
  [ 61] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 64] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 66] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 69] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 72] getchainedprop 508 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 75] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 77] objcall 504 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList.updatecontent()
  [ 80] ret
end

on addToPlaylist_Result me, oCaller, oResult
  [  0] getparam 2 .............................. <oResult>
  [  2] peek 0 .................................. case oResult of
  [  4] pushzero ................................ <0>
  [  5] eq
  [  6] jmpifz [ 20] ............................ (case) 0:
  [  9] getglobal 153 ........................... <ElementMgr>
  [ 11] pushcons 241 ............................ <"ALERT_IJ_0">
  [ 13] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_0">
  [ 15] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_0")
  [ 17] jmp [112]
  [ 20] peek 0
  [ 22] pushint8 1 .............................. <1>
  [ 24] eq
  [ 25] jmpifz [ 39] ............................ (case) 1:
  [ 28] getglobal 153 ........................... <ElementMgr>
  [ 30] pushcons 242 ............................ <"ALERT_IJ_1">
  [ 32] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_1">
  [ 34] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_1")
  [ 36] jmp [112]
  [ 39] peek 0
  [ 41] pushint8 2 .............................. <2>
  [ 43] eq
  [ 44] jmpifz [ 58] ............................ (case) 2:
  [ 47] getglobal 153 ........................... <ElementMgr>
  [ 49] pushcons 243 ............................ <"ALERT_IJ_2">
  [ 51] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_2">
  [ 53] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_2")
  [ 55] jmp [112]
  [ 58] peek 0
  [ 60] pushint8 3 .............................. <3>
  [ 62] eq
  [ 63] jmpifz [ 77] ............................ (case) 3:
  [ 66] getglobal 153 ........................... <ElementMgr>
  [ 68] pushcons 244 ............................ <"ALERT_IJ_3">
  [ 70] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_3">
  [ 72] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_3")
  [ 74] jmp [112]
  [ 77] peek 0
  [ 79] pushint8 4 .............................. <4>
  [ 81] eq
  [ 82] jmpifz [ 96] ............................ (case) 4:
  [ 85] getglobal 153 ........................... <ElementMgr>
  [ 87] pushcons 245 ............................ <"ALERT_IJ_4">
  [ 89] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_4">
  [ 91] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_4")
  [ 93] jmp [112]
  [ 96] peek 0
  [ 98] pushint8 5 .............................. <5>
  [100] eq
  [101] jmpifz [112] ............................ (case) 5:
  [104] getglobal 153 ........................... <ElementMgr>
  [106] pushcons 246 ............................ <"ALERT_IJ_5">
  [108] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_5">
  [110] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_5")
  [112] pop 1 ................................... end case
  [114] ret
end

on removeFromPlaylist_Result me, oCaller, oResult
  [  0] getparam 2 .............................. <oResult>
  [  2] peek 0 .................................. case oResult of
  [  4] pushzero ................................ <0>
  [  5] eq
  [  6] jmpifz [ 33] ............................ (case) 0:
  [  9] getglobal 153 ........................... <ElementMgr>
  [ 11] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 14] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 16] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 19] getchainedprop 501 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 22] getchainedprop 508 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 25] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 27] objcall 504 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList.updatecontent()
  [ 30] jmp [106]
  [ 33] peek 0
  [ 35] pushint8 1 .............................. <1>
  [ 37] eq
  [ 38] jmpifz [ 52] ............................ (case) 1:
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] pushcons 242 ............................ <"ALERT_IJ_1">
  [ 45] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_1">
  [ 47] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_1")
  [ 49] jmp [106]
  [ 52] peek 0
  [ 54] pushint8 2 .............................. <2>
  [ 56] eq
  [ 57] jmpifz [ 71] ............................ (case) 2:
  [ 60] getglobal 153 ........................... <ElementMgr>
  [ 62] pushcons 243 ............................ <"ALERT_IJ_2">
  [ 64] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_2">
  [ 66] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_2")
  [ 68] jmp [106]
  [ 71] peek 0
  [ 73] pushint8 3 .............................. <3>
  [ 75] eq
  [ 76] jmpifz [ 90] ............................ (case) 3:
  [ 79] getglobal 153 ........................... <ElementMgr>
  [ 81] pushcons 244 ............................ <"ALERT_IJ_3">
  [ 83] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_3">
  [ 85] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_3")
  [ 87] jmp [106]
  [ 90] peek 0
  [ 92] pushint8 4 .............................. <4>
  [ 94] eq
  [ 95] jmpifz [106] ............................ (case) 4:
  [ 98] getglobal 153 ........................... <ElementMgr>
  [100] pushcons 245 ............................ <"ALERT_IJ_4">
  [102] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_4">
  [104] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_4")
  [106] pop 1 ................................... end case
  [108] ret
end

on getTip_Result me, oCaller, oResult
  [  0] pushcons 247 ............................ <"getTip_Result(): Tip of the day - oResult:">
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 1 ........................... <oResult>
  [  6] extcall 185 ............................. <ilk(oResult)>
  [  8] joinpadstr .............................. <"getTip_Result(): Tip of the day - oResult:" && ilk(oResult)>
  [  9] getparam 2 .............................. <oResult>
  [ 11] joinpadstr .............................. <"getTip_Result(): Tip of the day - oResult:" && ilk(oResult) && oResult>
  [ 12] pusharglistnoret 1 ...................... <"getTip_Result(): Tip of the day - oResult:" && ilk(oResult) && oResult>
  [ 14] extcall 33 .............................. put "getTip_Result(): Tip of the day - oResult:" && ilk(oResult) && oResult
  [ 16] pushcons 248 ............................ <"Tip">
  [ 18] pusharglist 1 ........................... <"Tip">
  [ 20] extcall 4 ............................... <member("Tip")>
  [ 22] getparam 2 .............................. <oResult>
  [ 24] setobjprop 412 .......................... member("Tip").text = oResult
  [ 27] ret
end
