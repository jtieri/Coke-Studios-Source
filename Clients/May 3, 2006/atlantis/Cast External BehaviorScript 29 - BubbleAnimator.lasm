property iSprite, sCastLib, iDiameter, iIndexY, iStartY, iStartX, iSpeed, iStartSpeed, iAcceleration, iState, iTimer, iTimeLength, iWaitTimer, iWaitTimeLength, iWaitRandomTimeMax, iWaitRandomTimeLength, bDebug

on new me, _iSprite
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 12 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushcons 0 .............................. <"new() leakingbubble animator">
  [  9] pusharglistnoret 2 ...................... <me, "new() leakingbubble animator">
  [ 11] objcall 6 ............................... me.debug("new() leakingbubble animator")
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 1 .............................. <_iSprite>
  [ 17] setobjprop 13 ........................... me.iSprite = _iSprite
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 3 ............................... me.init()
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglistnoret 1 ...................... <me>
  [ 29] extcall 14 .............................. return me
  [ 31] ret
end

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 1 .............................. <"beginSprite() leakingbubble animator">
  [  4] pusharglistnoret 2 ...................... <me, "beginSprite() leakingbubble animator">
  [  6] objcall 6 ............................... me.debug("beginSprite() leakingbubble animator")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 17 ........................... <me.spriteNum>
  [ 14] setobjprop 13 ........................... me.iSprite = me.spriteNum
  [ 16] getparam 0 .............................. <me>
  [ 18] pushsymb 135 ............................ <#authoring>
  [ 20] pusharglistnoret 2 ...................... <me, #authoring>
  [ 22] objcall 3 ............................... me.init(#authoring)
  [ 24] ret
end

on endSprite me
  [  0] pushcons 2 .............................. <"endsprite called">
  [  2] pusharglistnoret 1 ...................... <"endsprite called">
  [  4] extcall 18 .............................. put "endsprite called"
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 13 ........................... <me.iSprite>
  [ 10] pusharglist 1 ........................... <me.iSprite>
  [ 12] extcall 20 .............................. <sprite(me.iSprite)>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 114 .......................... <me.iStartX>
  [ 18] setobjprop 113 .......................... sprite(me.iSprite).locH = me.iStartX
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 13 ........................... <me.iSprite>
  [ 24] pusharglist 1 ........................... <me.iSprite>
  [ 26] extcall 20 .............................. <sprite(me.iSprite)>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 116 .......................... <me.iStartY>
  [ 32] setobjprop 115 .......................... sprite(me.iSprite).locV = me.iStartY
  [ 34] ret
end

on init me, theMode
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 13 ........................... <me.iSprite>
  [  4] pusharglist 1 ........................... <me.iSprite>
  [  6] extcall 26 .............................. <voidp(me.iSprite)>
  [  8] jmpifz [ 15] ............................ if voidp(me.iSprite) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 14 .............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] pushint16 6000 .......................... <6000>
  [ 20] pushint16 10000 ......................... <10000>
  [ 23] pusharglist 1 ........................... <10000>
  [ 25] extcall 38 .............................. <random(10000)>
  [ 27] add ..................................... <6000 + random(10000)>
  [ 28] setobjprop 41 ........................... me.iWaitTimeLength = 6000 + random(10000)
  [ 30] getparam 0 .............................. <me>
  [ 32] pushint16 3000 .......................... <3000>
  [ 35] pushint16 10000 ......................... <10000>
  [ 38] pusharglist 1 ........................... <10000>
  [ 40] extcall 38 .............................. <random(10000)>
  [ 42] add ..................................... <3000 + random(10000)>
  [ 43] setobjprop 37 ........................... me.iWaitRandomTimeMax = 3000 + random(10000)
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 5 .............................. <5>
  [ 49] pushint8 4 .............................. <4>
  [ 51] pusharglist 1 ........................... <4>
  [ 53] extcall 38 .............................. <random(4)>
  [ 55] add ..................................... <5 + random(4)>
  [ 56] setobjprop 132 .......................... me.iDiameter = 5 + random(4)
  [ 58] getparam 0 .............................. <me>
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 13 ........................... <me.iSprite>
  [ 64] pusharglist 1 ........................... <me.iSprite>
  [ 66] extcall 20 .............................. <sprite(me.iSprite)>
  [ 68] getobjprop 113 .......................... <sprite(me.iSprite).locH>
  [ 70] setobjprop 114 .......................... me.iStartX = sprite(me.iSprite).locH
  [ 72] getparam 0 .............................. <me>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 13 ........................... <me.iSprite>
  [ 78] pusharglist 1 ........................... <me.iSprite>
  [ 80] extcall 20 .............................. <sprite(me.iSprite)>
  [ 82] getobjprop 115 .......................... <sprite(me.iSprite).locV>
  [ 84] setobjprop 116 .......................... me.iStartY = sprite(me.iSprite).locV
  [ 86] getparam 0 .............................. <me>
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 13 ........................... <me.iSprite>
  [ 92] pusharglist 1 ........................... <me.iSprite>
  [ 94] extcall 20 .............................. <sprite(me.iSprite)>
  [ 96] getobjprop 115 .......................... <sprite(me.iSprite).locV>
  [ 98] setobjprop 117 .......................... me.iIndexY = sprite(me.iSprite).locV
  [100] getparam 0 .............................. <me>
  [102] getobjprop 13 ........................... <me.iSprite>
  [104] pusharglist 1 ........................... <me.iSprite>
  [106] extcall 20 .............................. <sprite(me.iSprite)>
  [108] getparam 0 .............................. <me>
  [110] getobjprop 132 .......................... <me.iDiameter>
  [112] setobjprop 133 .......................... sprite(me.iSprite).width = me.iDiameter
  [114] getparam 0 .............................. <me>
  [116] getobjprop 13 ........................... <me.iSprite>
  [118] pusharglist 1 ........................... <me.iSprite>
  [120] extcall 20 .............................. <sprite(me.iSprite)>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 132 .......................... <me.iDiameter>
  [126] setobjprop 134 .......................... sprite(me.iSprite).height = me.iDiameter
  [128] getparam 0 .............................. <me>
  [130] pushint8 1 .............................. <1>
  [132] setobjprop 119 .......................... me.iStartSpeed = 1
  [134] getparam 0 .............................. <me>
  [136] getparam 0 .............................. <me>
  [138] getobjprop 119 .......................... <me.iStartSpeed>
  [140] setobjprop 121 .......................... me.iSpeed = me.iStartSpeed
  [142] getparam 0 .............................. <me>
  [144] pushfloat32 0.5 ......................... <0.5>
  [149] setobjprop 120 .......................... me.iAcceleration = 0.5
  [151] getparam 0 .............................. <me>
  [153] pushzero ................................ <0>
  [154] setobjprop 33 ........................... me.iState = 0
  [156] getparam 0 .............................. <me>
  [158] getmovieprop 34 ......................... <the milliSeconds>
  [160] setobjprop 35 ........................... me.iTimer = the milliSeconds
  [162] getparam 0 .............................. <me>
  [164] pushint8 75 ............................. <75>
  [166] setobjprop 36 ........................... me.iTimeLength = 75
  [168] getparam 0 .............................. <me>
  [170] getparam 0 .............................. <me>
  [172] getobjprop 37 ........................... <me.iWaitRandomTimeMax>
  [174] pusharglist 1 ........................... <me.iWaitRandomTimeMax>
  [176] extcall 38 .............................. <random(me.iWaitRandomTimeMax)>
  [178] setobjprop 39 ........................... me.iWaitRandomTimeLength = random(me.iWaitRandomTimeMax)
  [180] getparam 0 .............................. <me>
  [182] getmovieprop 34 ......................... <the milliSeconds>
  [184] setobjprop 40 ........................... me.iWaitTimer = the milliSeconds
  [186] getparam 1 .............................. <theMode>
  [188] pushsymb 135 ............................ <#authoring>
  [190] nteq .................................... <theMode <> #authoring>
  [191] jmpifz [207] ............................ if theMode <> #authoring then
  [194] getparam 0 .............................. <me>
  [196] getobjprop 13 ........................... <me.iSprite>
  [198] pusharglist 1 ........................... <me.iSprite>
  [200] extcall 20 .............................. <sprite(me.iSprite)>
  [202] pushint8 100 ............................ <100>
  [204] inv ..................................... <-100>
  [205] setobjprop 113 .......................... sprite(me.iSprite).locH = -100
  [207] getparam 0 .............................. <me>
  [209] pushcons 3 .............................. <"finished init leakingbubble animator">
  [211] pusharglistnoret 2 ...................... <me, "finished init leakingbubble animator">
  [213] objcall 6 ............................... me.debug("finished init leakingbubble animator")
  [215] ret
end

on exitFrame me
  [  0] getmovieprop 34 ......................... <the milliSeconds>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 40 ........................... <me.iWaitTimer>
  [  6] sub ..................................... <the milliSeconds - me.iWaitTimer>
  [  7] setlocal 0 .............................. iElapsedWait = the milliSeconds - me.iWaitTimer
  [  9] getlocal 0 .............................. <iElapsedWait>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 41 ........................... <me.iWaitTimeLength>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 39 ........................... <me.iWaitRandomTimeLength>
  [ 19] add ..................................... <me.iWaitTimeLength + me.iWaitRandomTimeLength>
  [ 20] gteq .................................... <iElapsedWait >= (me.iWaitTimeLength + me.iWaitRandomTimeLength)>
  [ 21] jmpifz [ 30] ............................ if iElapsedWait >= (me.iWaitTimeLength + me.iWaitRandomTimeLength) then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushint8 1 .............................. <1>
  [ 28] setobjprop 33 ........................... me.iState = 1
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 33 ........................... <me.iState>
  [ 34] pushint8 1 .............................. <1>
  [ 36] eq ...................................... <me.iState = 1>
  [ 37] jmpifz [149] ............................ if me.iState = 1 then
  [ 40] getmovieprop 34 ......................... <the milliSeconds>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 35 ........................... <me.iTimer>
  [ 46] sub ..................................... <the milliSeconds - me.iTimer>
  [ 47] setlocal 1 .............................. iElapsedTime = the milliSeconds - me.iTimer
  [ 49] getlocal 1 .............................. <iElapsedTime>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 36 ........................... <me.iTimeLength>
  [ 55] gteq .................................... <iElapsedTime >= me.iTimeLength>
  [ 56] jmpifz [149] ............................ if iElapsedTime >= me.iTimeLength then
  [ 59] getparam 0 .............................. <me>
  [ 61] pushint8 1 .............................. <1>
  [ 63] inv ..................................... <-1>
  [ 64] pusharglistnoret 2 ...................... <me, -1>
  [ 66] objcall 10 .............................. me.nextFrame(-1)
  [ 68] getparam 0 .............................. <me>
  [ 70] getmovieprop 34 ......................... <the milliSeconds>
  [ 72] setobjprop 35 ........................... me.iTimer = the milliSeconds
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 13 ........................... <me.iSprite>
  [ 78] pusharglist 1 ........................... <me.iSprite>
  [ 80] extcall 20 .............................. <sprite(me.iSprite)>
  [ 82] getobjprop 115 .......................... <sprite(me.iSprite).locV>
  [ 84] pushint8 10 ............................. <10>
  [ 86] inv ..................................... <-10>
  [ 87] lt ...................................... <sprite(me.iSprite).locV < -10>
  [ 88] jmpifz [149] ............................ if sprite(me.iSprite).locV < -10 then
  [ 91] getparam 0 .............................. <me>
  [ 93] pushzero ................................ <0>
  [ 94] setobjprop 33 ........................... me.iState = 0
  [ 96] getparam 0 .............................. <me>
  [ 98] getmovieprop 34 ......................... <the milliSeconds>
  [100] setobjprop 40 ........................... me.iWaitTimer = the milliSeconds
  [102] getparam 0 .............................. <me>
  [104] getparam 0 .............................. <me>
  [106] getobjprop 37 ........................... <me.iWaitRandomTimeMax>
  [108] pusharglist 1 ........................... <me.iWaitRandomTimeMax>
  [110] extcall 38 .............................. <random(me.iWaitRandomTimeMax)>
  [112] setobjprop 39 ........................... me.iWaitRandomTimeLength = random(me.iWaitRandomTimeMax)
  [114] getparam 0 .............................. <me>
  [116] getobjprop 13 ........................... <me.iSprite>
  [118] pusharglist 1 ........................... <me.iSprite>
  [120] extcall 20 .............................. <sprite(me.iSprite)>
  [122] pushint8 100 ............................ <100>
  [124] inv ..................................... <-100>
  [125] setobjprop 113 .......................... sprite(me.iSprite).locH = -100
  [127] getparam 0 .............................. <me>
  [129] getobjprop 13 ........................... <me.iSprite>
  [131] pusharglist 1 ........................... <me.iSprite>
  [133] extcall 20 .............................. <sprite(me.iSprite)>
  [135] getparam 0 .............................. <me>
  [137] getobjprop 116 .......................... <me.iStartY>
  [139] setobjprop 115 .......................... sprite(me.iSprite).locV = me.iStartY
  [141] getparam 0 .............................. <me>
  [143] getparam 0 .............................. <me>
  [145] getobjprop 119 .......................... <me.iStartSpeed>
  [147] setobjprop 121 .......................... me.iSpeed = me.iStartSpeed
  [149] ret
end

on destroy me
  [  0] pushcons 4 .............................. <"*********** DESTROY SPRITE leakingbubble ANIMATRIX **********">
  [  2] pusharglistnoret 1 ...................... <"*********** DESTROY SPRITE leakingbubble ANIMATRIX **********">
  [  4] extcall 18 .............................. put "*********** DESTROY SPRITE leakingbubble ANIMATRIX **********"
  [  6] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 12 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 5 .............................. <"leakingbubbleAnim: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"leakingbubbleAnim: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"leakingbubbleAnim: " & sMessage>
  [ 17] extcall 18 .............................. put "leakingbubbleAnim: " & sMessage
  [ 19] ret
end

on startPerformance me
  [  0] getparam 0 .............................. <me>
  [  2] getmovieprop 34 ......................... <the milliSeconds>
  [  4] setobjprop 35 ........................... me.iTimer = the milliSeconds
  [  6] getparam 0 .............................. <me>
  [  8] pushint8 1 .............................. <1>
  [ 10] setobjprop 33 ........................... me.iState = 1
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 13 ........................... <me.iSprite>
  [ 16] pusharglist 1 ........................... <me.iSprite>
  [ 18] extcall 20 .............................. <sprite(me.iSprite)>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 114 .......................... <me.iStartX>
  [ 24] setobjprop 113 .......................... sprite(me.iSprite).locH = me.iStartX
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 13 ........................... <me.iSprite>
  [ 30] pusharglist 1 ........................... <me.iSprite>
  [ 32] extcall 20 .............................. <sprite(me.iSprite)>
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 116 .......................... <me.iStartY>
  [ 38] setobjprop 115 .......................... sprite(me.iSprite).locV = me.iStartY
  [ 40] ret
end

on stopPerformance me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 33 ........................... me.iState = 0
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 13 ........................... <me.iSprite>
  [  9] pusharglist 1 ........................... <me.iSprite>
  [ 11] extcall 20 .............................. <sprite(me.iSprite)>
  [ 13] pushint8 100 ............................ <100>
  [ 15] inv ..................................... <-100>
  [ 16] setobjprop 113 .......................... sprite(me.iSprite).locH = -100
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 13 ........................... <me.iSprite>
  [ 22] pusharglist 1 ........................... <me.iSprite>
  [ 24] extcall 20 .............................. <sprite(me.iSprite)>
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 116 .......................... <me.iStartY>
  [ 30] setobjprop 115 .......................... sprite(me.iSprite).locV = me.iStartY
  [ 32] ret
end

on nextFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 121 .......................... <me.iSpeed>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 120 .......................... <me.iAcceleration>
  [ 10] add ..................................... <me.iSpeed + me.iAcceleration>
  [ 11] setobjprop 121 .......................... me.iSpeed = me.iSpeed + me.iAcceleration
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 13 ........................... <me.iSprite>
  [ 17] pusharglist 1 ........................... <me.iSprite>
  [ 19] extcall 20 .............................. <sprite(me.iSprite)>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 13 ........................... <me.iSprite>
  [ 25] pusharglist 1 ........................... <me.iSprite>
  [ 27] extcall 20 .............................. <sprite(me.iSprite)>
  [ 29] getobjprop 115 .......................... <sprite(me.iSprite).locV>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 121 .......................... <me.iSpeed>
  [ 35] sub ..................................... <sprite(me.iSprite).locV - me.iSpeed>
  [ 36] setobjprop 115 .......................... sprite(me.iSprite).locV = sprite(me.iSprite).locV - me.iSpeed
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 13 ........................... <me.iSprite>
  [ 42] pusharglist 1 ........................... <me.iSprite>
  [ 44] extcall 20 .............................. <sprite(me.iSprite)>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 114 .......................... <me.iStartX>
  [ 50] pushint8 5 .............................. <5>
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 116 .......................... <me.iStartY>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 13 ........................... <me.iSprite>
  [ 60] pusharglist 1 ........................... <me.iSprite>
  [ 62] extcall 20 .............................. <sprite(me.iSprite)>
  [ 64] getobjprop 115 .......................... <sprite(me.iSprite).locV>
  [ 66] sub ..................................... <me.iStartY - sprite(me.iSprite).locV>
  [ 67] pusharglist 1 ........................... <me.iStartY - sprite(me.iSprite).locV>
  [ 69] extcall 123 ............................. <float(me.iStartY - sprite(me.iSprite).locV)>
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 116 .......................... <me.iStartY>
  [ 75] div ..................................... <float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY>
  [ 76] pushint16 270 ........................... <270>
  [ 79] mul ..................................... <float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270>
  [ 80] pushint16 180 ........................... <180>
  [ 83] div ..................................... <float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180>
  [ 84] pusharglist 0 ........................... <>
  [ 86] extcall 124 ............................. <PI>
  [ 88] mul ..................................... <float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180 * PI>
  [ 89] pusharglist 1 ........................... <float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180 * PI>
  [ 91] extcall 122 ............................. <sin(float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180 * PI)>
  [ 93] mul ..................................... <5 * sin(float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180 * PI)>
  [ 94] add ..................................... <me.iStartX + (5 * sin(float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180 * PI))>
  [ 95] setobjprop 113 .......................... sprite(me.iSprite).locH = me.iStartX + (5 * sin(float(me.iStartY - sprite(me.iSprite).locV) / me.iStartY * 270 / 180 * PI))
  [ 97] ret
end
