property pSprite, pAction, pTargetMarker, sKeysAllowed, sFilterType, iCharLimit, aKeyCodeList, sPassword
global oUserDisplayManager, oPrivateDisplayManager, oEditStudioManager, oDenizenManager

on getPropertyDescriptionList me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. mylist = [:]
  [  5] getlocal 0 .............................. <mylist>
  [  7] pushsymb 521 ............................ <#sFilterType>
  [ 10] pushsymb 88 ............................. <#comment>
  [ 12] pushcons 0 .............................. <"Filter type:">
  [ 14] pushsymb 89 ............................. <#format>
  [ 16] pushsymb 94 ............................. <#string>
  [ 18] pushsymb 91 ............................. <#default>
  [ 20] pushcons 1 .............................. <"search">
  [ 22] pushsymb 97 ............................. <#range>
  [ 24] pushcons 1 .............................. <"search">
  [ 26] pushcons 2 .............................. <"name">
  [ 28] pushcons 3 .............................. <"description">
  [ 30] pushcons 4 .............................. <"password">
  [ 32] pushcons 5 .............................. <"message">
  [ 34] pushcons 6 .............................. <"hours">
  [ 36] pusharglist 6 ........................... <["search", "name", "description", "password", "message", "hours"]>
  [ 38] pushlist ................................ <["search", "name", "description", "password", "message", "hours"]>
  [ 39] pusharglist 8 ........................... <[#comment: "Filter type:", #format: #string, #default: "search", #range: ["search", "name", "description", "password", "message", "hours"]]>
  [ 41] pushproplist ............................ <[#comment: "Filter type:", #format: #string, #default: "search", #range: ["search", "name", "description", "password", "message", "hours"]]>
  [ 42] pusharglistnoret 3 ...................... <mylist, #sFilterType, [#comment: "Filter type:", #format: #string, #default: "search", #range: ["search", "name", "description", "password", "message", "hours"]]>
  [ 44] objcall 68 .............................. mylist[#sFilterType] = [#comment: "Filter type:", #format: #string, #default: "search", #range: ["search", "name", "description", "password", "message", "hours"]]
  [ 46] getlocal 0 .............................. <mylist>
  [ 48] pushsymb 522 ............................ <#iCharLimit>
  [ 51] pushsymb 88 ............................. <#comment>
  [ 53] pushcons 7 .............................. <"Char limit(14,30,etc.):">
  [ 55] pushsymb 89 ............................. <#format>
  [ 57] pushsymb 99 ............................. <#integer>
  [ 59] pushsymb 91 ............................. <#default>
  [ 61] pushint8 14 ............................. <14>
  [ 63] pusharglist 6 ........................... <[#comment: "Char limit(14,30,etc.):", #format: #integer, #default: 14]>
  [ 65] pushproplist ............................ <[#comment: "Char limit(14,30,etc.):", #format: #integer, #default: 14]>
  [ 66] pusharglistnoret 3 ...................... <mylist, #iCharLimit, [#comment: "Char limit(14,30,etc.):", #format: #integer, #default: 14]>
  [ 68] objcall 68 .............................. mylist[#iCharLimit] = [#comment: "Char limit(14,30,etc.):", #format: #integer, #default: 14]
  [ 70] getlocal 0 .............................. <mylist>
  [ 72] pushsymb 466 ............................ <#pTargetMarker>
  [ 75] pushsymb 88 ............................. <#comment>
  [ 77] pushcons 8 .............................. <"Marker to go to:">
  [ 79] pushsymb 89 ............................. <#format>
  [ 81] pushsymb 467 ............................ <#marker>
  [ 84] pushsymb 91 ............................. <#default>
  [ 86] pushcons 9 .............................. <EMPTY>
  [ 88] pusharglist 6 ........................... <[#comment: "Marker to go to:", #format: #marker, #default: EMPTY]>
  [ 90] pushproplist ............................ <[#comment: "Marker to go to:", #format: #marker, #default: EMPTY]>
  [ 91] pusharglistnoret 3 ...................... <mylist, #pTargetMarker, [#comment: "Marker to go to:", #format: #marker, #default: EMPTY]>
  [ 93] objcall 68 .............................. mylist[#pTargetMarker] = [#comment: "Marker to go to:", #format: #marker, #default: EMPTY]
  [ 95] getlocal 0 .............................. <mylist>
  [ 97] pushsymb 96 ............................. <#pAction>
  [ 99] pushsymb 88 ............................. <#comment>
  [101] pushcons 10 ............................. <"Action:">
  [103] pushsymb 89 ............................. <#format>
  [105] pushsymb 94 ............................. <#string>
  [107] pushsymb 91 ............................. <#default>
  [109] pushcons 11 ............................. <"BEEP">
  [111] pushsymb 97 ............................. <#range>
  [113] pushcons 11 ............................. <"BEEP">
  [115] pushcons 12 ............................. <"go pTargetMarker">
  [117] pushcons 13 ............................. <"searchPrivateStudio(me)">
  [119] pushcons 14 ............................. <"searchUser(me)">
  [121] pushcons 15 ............................. <"editUserMissionMessage(me)">
  [123] pushcons 16 ............................. <"editStudioMessage(me)">
  [125] pushcons 17 ............................. <"logInMessage(me)">
  [127] pushcons 18 ............................. <"nothing">
  [129] pusharglist 8 ........................... <["BEEP", "go pTargetMarker", "searchPrivateStudio(me)", "searchUser(me)", "editUserMissionMessage(me)", "editStudioMessage(me)", "logInMessage(me)", "nothing"]>
  [131] pushlist ................................ <["BEEP", "go pTargetMarker", "searchPrivateStudio(me)", "searchUser(me)", "editUserMissionMessage(me)", "editStudioMessage(me)", "logInMessage(me)", "nothing"]>
  [132] pusharglist 8 ........................... <[#comment: "Action:", #format: #string, #default: "BEEP", #range: ["BEEP", "go pTargetMarker", "searchPrivateStudio(me)", "searchUser(me)", "editUserMissionMessage(me)", "editStudioMessage(me)", "logInMessage(me)", "nothing"]]>
  [134] pushproplist ............................ <[#comment: "Action:", #format: #string, #default: "BEEP", #range: ["BEEP", "go pTargetMarker", "searchPrivateStudio(me)", "searchUser(me)", "editUserMissionMessage(me)", "editStudioMessage(me)", "logInMessage(me)", "nothing"]]>
  [135] pusharglistnoret 3 ...................... <mylist, #pAction, [#comment: "Action:", #format: #string, #default: "BEEP", #range: ["BEEP", "go pTargetMarker", "searchPrivateStudio(me)", "searchUser(me)", "editUserMissionMessage(me)", "editStudioMessage(me)", "logInMessage(me)", "nothing"]]>
  [137] objcall 68 .............................. mylist[#pAction] = [#comment: "Action:", #format: #string, #default: "BEEP", #range: ["BEEP", "go pTargetMarker", "searchPrivateStudio(me)", "searchUser(me)", "editUserMissionMessage(me)", "editStudioMessage(me)", "logInMessage(me)", "nothing"]]
  [139] getlocal 0 .............................. <mylist>
  [141] pusharglistnoret 1 ...................... <mylist>
  [143] extcall 31 .............................. return mylist
  [145] ret
end

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 13 ........................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 12 .............................. <sprite(me.spriteNum)>
  [  8] setprop 11 .............................. pSprite = sprite(me.spriteNum)
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 521 .......................... <me.sFilterType>
  [ 15] peek 0 .................................. case me.sFilterType of
  [ 17] pushcons 1 .............................. <"search">
  [ 19] eq
  [ 20] jmpifz [ 47] ............................ (case) "search":
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 19 ............................. <"filterKeys_search">
  [ 27] pusharglist 1 ........................... <"filterKeys_search">
  [ 29] extcall 14 .............................. <member("filterKeys_search")>
  [ 31] getobjprop 15 ........................... <member("filterKeys_search").text>
  [ 33] setobjprop 523 .......................... me.sKeysAllowed = member("filterKeys_search").text
  [ 36] getprop 11 .............................. <pSprite>
  [ 38] getchainedprop 14 ....................... <pSprite.member>
  [ 40] pushcons 9 .............................. <EMPTY>
  [ 42] setobjprop 15 ........................... pSprite.member.text = EMPTY
  [ 44] jmp [179]
  [ 47] peek 0
  [ 49] pushcons 2 .............................. <"name">
  [ 51] eq
  [ 52] jmpifz [ 71] ............................ (case) "name":
  [ 55] getparam 0 .............................. <me>
  [ 57] pushcons 20 ............................. <"filterKeys_name">
  [ 59] pusharglist 1 ........................... <"filterKeys_name">
  [ 61] extcall 14 .............................. <member("filterKeys_name")>
  [ 63] getobjprop 15 ........................... <member("filterKeys_name").text>
  [ 65] setobjprop 523 .......................... me.sKeysAllowed = member("filterKeys_name").text
  [ 68] jmp [179]
  [ 71] peek 0
  [ 73] pushcons 3 .............................. <"description">
  [ 75] eq
  [ 76] jmpifz [ 95] ............................ (case) "description":
  [ 79] getparam 0 .............................. <me>
  [ 81] pushcons 21 ............................. <"filterKeys_desc">
  [ 83] pusharglist 1 ........................... <"filterKeys_desc">
  [ 85] extcall 14 .............................. <member("filterKeys_desc")>
  [ 87] getobjprop 15 ........................... <member("filterKeys_desc").text>
  [ 89] setobjprop 523 .......................... me.sKeysAllowed = member("filterKeys_desc").text
  [ 92] jmp [179]
  [ 95] peek 0
  [ 97] pushcons 4 .............................. <"password">
  [ 99] eq
  [100] jmpifz [134] ............................ (case) "password":
  [103] getparam 0 .............................. <me>
  [105] pushcons 22 ............................. <"filterKeys_pass">
  [107] pusharglist 1 ........................... <"filterKeys_pass">
  [109] extcall 14 .............................. <member("filterKeys_pass")>
  [111] getobjprop 15 ........................... <member("filterKeys_pass").text>
  [113] setobjprop 523 .......................... me.sKeysAllowed = member("filterKeys_pass").text
  [116] getprop 11 .............................. <pSprite>
  [118] getchainedprop 14 ....................... <pSprite.member>
  [120] pushcons 9 .............................. <EMPTY>
  [122] setobjprop 15 ........................... pSprite.member.text = EMPTY
  [124] getparam 0 .............................. <me>
  [126] pushcons 9 .............................. <EMPTY>
  [128] setobjprop 524 .......................... me.sPassword = EMPTY
  [131] jmp [179]
  [134] peek 0
  [136] pushcons 5 .............................. <"message">
  [138] eq
  [139] jmpifz [158] ............................ (case) "message":
  [142] getparam 0 .............................. <me>
  [144] pushcons 23 ............................. <"filterKeys_message">
  [146] pusharglist 1 ........................... <"filterKeys_message">
  [148] extcall 14 .............................. <member("filterKeys_message")>
  [150] getobjprop 15 ........................... <member("filterKeys_message").text>
  [152] setobjprop 523 .......................... me.sKeysAllowed = member("filterKeys_message").text
  [155] jmp [179]
  [158] peek 0
  [160] pushcons 6 .............................. <"hours">
  [162] eq
  [163] jmpifz [179] ............................ (case) "hours":
  [166] getparam 0 .............................. <me>
  [168] pushcons 24 ............................. <"filterKeys_hours">
  [170] pusharglist 1 ........................... <"filterKeys_hours">
  [172] extcall 14 .............................. <member("filterKeys_hours")>
  [174] getobjprop 15 ........................... <member("filterKeys_hours").text>
  [176] setobjprop 523 .......................... me.sKeysAllowed = member("filterKeys_hours").text
  [179] pop 1 ................................... end case
  [181] getparam 0 .............................. <me>
  [183] pushint8 48 ............................. <48>
  [185] pushint8 51 ............................. <51>
  [187] pushint8 117 ............................ <117>
  [189] pushint8 115 ............................ <115>
  [191] pushint8 116 ............................ <116>
  [193] pushint8 119 ............................ <119>
  [195] pushint8 121 ............................ <121>
  [197] pushint8 123 ............................ <123>
  [199] pushint8 124 ............................ <124>
  [201] pushint8 125 ............................ <125>
  [203] pushint8 126 ............................ <126>
  [205] pusharglist 11 .......................... <[48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126]>
  [207] pushlist ................................ <[48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126]>
  [208] setobjprop 525 .......................... me.aKeyCodeList = [48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126]
  [211] ret
end

on getPassword me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 524 .......................... <me.sPassword>
  [  5] pusharglistnoret 1 ...................... <me.sPassword>
  [  7] extcall 31 .............................. return me.sPassword
  [  9] ret
end

on keyDown me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 523 .......................... <me.sKeysAllowed>
  [  5] pusharglist 0 ........................... <>
  [  7] thebuiltin 526 .......................... <the key>
  [ 10] containsstr ............................. <me.sKeysAllowed contains the key>
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 525 ...................... <me.aKeyCodeList>
  [ 16] pusharglist 0 ........................... <>
  [ 18] thebuiltin 318 .......................... <the keyCode>
  [ 21] pusharglist 2 ........................... <me.aKeyCodeList, the keyCode>
  [ 23] objcall 151 ............................. <me.aKeyCodeList.getPos(the keyCode)>
  [ 25] or ...................................... <(me.sKeysAllowed contains the key) or me.aKeyCodeList.getPos(the keyCode)>
  [ 26] jmpifz [325] ............................ if (me.sKeysAllowed contains the key) or me.aKeyCodeList.getPos(the keyCode) then / else
  [ 29] getprop 11 .............................. <pSprite>
  [ 31] getchainedprop 14 ....................... <pSprite.member>
  [ 33] getchainedprop 15 ....................... <pSprite.member.text>
  [ 35] pushsymb 65 ............................. <#char>
  [ 37] pusharglist 2 ........................... <pSprite.member.text, #char>
  [ 39] objcall 32 .............................. <pSprite.member.text.char.count>
  [ 41] getparam 0 .............................. <me>
  [ 43] getobjprop 522 .......................... <me.iCharLimit>
  [ 46] eq ...................................... <pSprite.member.text.char.count = me.iCharLimit>
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 525 ...................... <me.aKeyCodeList>
  [ 52] pusharglist 0 ........................... <>
  [ 54] thebuiltin 318 .......................... <the keyCode>
  [ 57] pusharglist 2 ........................... <me.aKeyCodeList, the keyCode>
  [ 59] objcall 151 ............................. <me.aKeyCodeList.getPos(the keyCode)>
  [ 61] pushzero ................................ <0>
  [ 62] eq ...................................... <me.aKeyCodeList.getPos(the keyCode) = 0>
  [ 63] and ..................................... <(pSprite.member.text.char.count = me.iCharLimit) and (me.aKeyCodeList.getPos(the keyCode) = 0)>
  [ 64] jmpifz [ 75] ............................ if (pSprite.member.text.char.count = me.iCharLimit) and (me.aKeyCodeList.getPos(the keyCode) = 0) then / else
  [ 67] pusharglistnoret 0 ...................... <>
  [ 69] extcall 527 ............................. stopEvent()
  [ 72] jmp [322]
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 521 .......................... <me.sFilterType>
  [ 80] pushcons 4 .............................. <"password">
  [ 82] eq ...................................... <me.sFilterType = "password">
  [ 83] jmpifz [317] ............................ if me.sFilterType = "password" then / else
  [ 86] getparam 0 .............................. <me>
  [ 88] getobjprop 523 .......................... <me.sKeysAllowed>
  [ 91] pusharglist 0 ........................... <>
  [ 93] thebuiltin 526 .......................... <the key>
  [ 96] containsstr ............................. <me.sKeysAllowed contains the key>
  [ 97] jmpifz [162] ............................ if me.sKeysAllowed contains the key then / else
  [100] pushcons 9 .............................. <EMPTY>
  [102] setlocal 0 .............................. sBulletText = EMPTY
  [104] pusharglist 0 ........................... <>
  [106] thebuiltin 526 .......................... <the key>
  [109] setlocal 1 .............................. k = the key
  [111] getlocal 1 .............................. <k>
  [113] pushvarref 524 .......................... <sPassword>
  [116] put 35 .................................. put k after sPassword
  [118] pushint8 1 .............................. <1>
  [120] setlocal 2
  [122] getlocal 2
  [124] getprop 524 ............................. <sPassword>
  [127] pushsymb 65 ............................. <#char>
  [129] pusharglist 2 ........................... <sPassword, #char>
  [131] objcall 32 .............................. <sPassword.char.count>
  [133] lteq
  [134] jmpifz [151] ............................ repeat with i = 1 to sPassword.char.count
  [137] pushcons 25 ............................. <"*">
  [139] pushzero ................................ <0>
  [140] put 37 .................................. put "*" after sBulletText
  [142] pushint8 1
  [144] getlocal 2
  [146] add
  [147] setlocal 2
  [149] endrepeat [122]
  [151] getprop 11 .............................. <pSprite>
  [153] getchainedprop 14 ....................... <pSprite.member>
  [155] getlocal 0 .............................. <sBulletText>
  [157] setobjprop 15 ........................... pSprite.member.text = sBulletText
  [159] jmp [314]
  [162] pusharglist 0 ........................... <>
  [164] thebuiltin 318 .......................... <the keyCode>
  [167] pushint8 51 ............................. <51>
  [169] eq ...................................... <the keyCode = 51>
  [170] jmpifz [280] ............................ if the keyCode = 51 then / else
  [173] pushcons 9 .............................. <EMPTY>
  [175] setlocal 0 .............................. sBulletText = EMPTY
  [177] getparam 0 .............................. <me>
  [179] getchainedprop 524 ...................... <me.sPassword>
  [182] pushsymb 65 ............................. <#char>
  [184] pusharglist 2 ........................... <me.sPassword, #char>
  [186] objcall 32 .............................. <me.sPassword.char.count>
  [188] pushint8 1 .............................. <1>
  [190] gt ...................................... <me.sPassword.char.count > 1>
  [191] jmpifz [229] ............................ if me.sPassword.char.count > 1 then / else
  [194] getparam 0 .............................. <me>
  [196] getparam 0 .............................. <me>
  [198] getchainedprop 524 ...................... <me.sPassword>
  [201] pushsymb 65 ............................. <#char>
  [203] pushint8 1 .............................. <1>
  [205] getparam 0 .............................. <me>
  [207] getchainedprop 524 ...................... <me.sPassword>
  [210] pushsymb 65 ............................. <#char>
  [212] pusharglist 2 ........................... <me.sPassword, #char>
  [214] objcall 32 .............................. <me.sPassword.char.count>
  [216] pushint8 1 .............................. <1>
  [218] sub ..................................... <me.sPassword.char.count - 1>
  [219] pusharglist 4 ........................... <me.sPassword, #char, 1, me.sPassword.char.count - 1>
  [221] objcall 66 .............................. <me.sPassword.char[1..me.sPassword.char.count - 1]>
  [223] setobjprop 524 .......................... me.sPassword = me.sPassword.char[1..me.sPassword.char.count - 1]
  [226] jmp [236]
  [229] getparam 0 .............................. <me>
  [231] pushcons 9 .............................. <EMPTY>
  [233] setobjprop 524 .......................... me.sPassword = EMPTY
  [236] pushint8 1 .............................. <1>
  [238] setlocal 2
  [240] getlocal 2
  [242] getprop 524 ............................. <sPassword>
  [245] pushsymb 65 ............................. <#char>
  [247] pusharglist 2 ........................... <sPassword, #char>
  [249] objcall 32 .............................. <sPassword.char.count>
  [251] lteq
  [252] jmpifz [269] ............................ repeat with i = 1 to sPassword.char.count
  [255] pushcons 25 ............................. <"*">
  [257] pushzero ................................ <0>
  [258] put 37 .................................. put "*" after sBulletText
  [260] pushint8 1
  [262] getlocal 2
  [264] add
  [265] setlocal 2
  [267] endrepeat [240]
  [269] getprop 11 .............................. <pSprite>
  [271] getchainedprop 14 ....................... <pSprite.member>
  [273] getlocal 0 .............................. <sBulletText>
  [275] setobjprop 15 ........................... pSprite.member.text = sBulletText
  [277] jmp [314]
  [280] pusharglist 0 ........................... <>
  [282] thebuiltin 318 .......................... <the keyCode>
  [285] pushint8 117 ............................ <117>
  [287] eq ...................................... <the keyCode = 117>
  [288] jmpifz [309] ............................ if the keyCode = 117 then / else
  [291] getparam 0 .............................. <me>
  [293] pushcons 9 .............................. <EMPTY>
  [295] setobjprop 524 .......................... me.sPassword = EMPTY
  [298] getprop 11 .............................. <pSprite>
  [300] getchainedprop 14 ....................... <pSprite.member>
  [302] pushcons 9 .............................. <EMPTY>
  [304] setobjprop 15 ........................... pSprite.member.text = EMPTY
  [306] jmp [314]
  [309] pusharglistnoret 0 ...................... <>
  [311] extcall 527 ............................. stopEvent()
  [314] jmp [322]
  [317] pusharglistnoret 0 ...................... <>
  [319] extcall 451 ............................. pass()
  [322] jmp [369]
  [325] pusharglist 0 ........................... <>
  [327] thebuiltin 526 .......................... <the key>
  [330] pushcons 26 ............................. <RETURN>
  [332] eq ...................................... <the key = RETURN>
  [333] jmpifz [364] ............................ if the key = RETURN then / else
  [336] getparam 0 .............................. <me>
  [338] getobjprop 521 .......................... <me.sFilterType>
  [341] pushcons 5 .............................. <"message">
  [343] eq ...................................... <me.sFilterType = "message">
  [344] jmpifz [355] ............................ if me.sFilterType = "message" then / else
  [347] pusharglistnoret 0 ...................... <>
  [349] extcall 451 ............................. pass()
  [352] jmp [361]
  [355] getprop 96 .............................. <pAction>
  [357] pusharglistnoret 1 ...................... <pAction>
  [359] extcall 185 ............................. do(pAction)
  [361] jmp [369]
  [364] pusharglistnoret 0 ...................... <>
  [366] extcall 527 ............................. stopEvent()
  [369] ret
end

on searchPrivateStudio me
  [  0] getglobal 194 ........................... <oPrivateDisplayManager>
  [  2] getprop 11 .............................. <pSprite>
  [  4] getchainedprop 14 ....................... <pSprite.member>
  [  6] getobjprop 15 ........................... <pSprite.member.text>
  [  8] setobjprop 334 .......................... oPrivateDisplayManager.pSearchText = pSprite.member.text
  [ 11] getglobal 194 ........................... <oPrivateDisplayManager>
  [ 13] pushint8 1 .............................. <1>
  [ 15] setobjprop 335 .......................... oPrivateDisplayManager.pSearchEntered = 1
  [ 18] ret
end

on searchUser me
  [  0] getprop 11 .............................. <pSprite>
  [  2] getchainedprop 14 ....................... <pSprite.member>
  [  4] getobjprop 15 ........................... <pSprite.member.text>
  [  6] setlocal 0 .............................. sDenizenName = pSprite.member.text
  [  8] pushcons 27 ............................. <"studioName">
  [ 10] setlocal 1 .............................. sStudioName = "studioName"
  [ 12] pushcons 28 ............................. <"studioOwner">
  [ 14] setlocal 2 .............................. sStudioOwner = "studioOwner"
  [ 16] getglobal 69 ............................ <oDenizenManager>
  [ 18] getlocal 0 .............................. <sDenizenName>
  [ 20] pusharglistnoret 2 ...................... <oDenizenManager, sDenizenName>
  [ 22] objcall 70 .............................. oDenizenManager.getDenizenByScreenName(sDenizenName)
  [ 24] getglobal 52 ............................ <oUserDisplayManager>
  [ 26] getlocal 0 .............................. <sDenizenName>
  [ 28] getlocal 1 .............................. <sStudioName>
  [ 30] getlocal 2 .............................. <sStudioOwner>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 5 ...................... <oUserDisplayManager, sDenizenName, sStudioName, sStudioOwner, 0>
  [ 35] objcall 53 .............................. oUserDisplayManager.displayExtendedUserInfo(sDenizenName, sStudioName, sStudioOwner, 0)
  [ 37] ret
end

on editUserMissionMessage me
  [  0] pushsymb 461 ............................ <#editUserMission>
  [  3] pusharglistnoret 1 ...................... <#editUserMission>
  [  5] extcall 139 ............................. sendAllSprites(#editUserMission)
  [  7] ret
end

on editStudioMessage me
  [  0] pushsymb 460 ............................ <#editStudio>
  [  3] pusharglistnoret 1 ...................... <#editStudio>
  [  5] extcall 139 ............................. sendAllSprites(#editStudio)
  [  7] ret
end

on logInMessage me
  [  0] pushsymb 202 ............................ <#logIn>
  [  2] pusharglistnoret 1 ...................... <#logIn>
  [  4] extcall 139 ............................. sendAllSprites(#logIn)
  [  6] ret
end
