property ancestor, aCurrentDirection, oEngine, iSprite, iShadowSprite, oPreviewMember, sMission, sScreenName, bPerforming, bDrinking, sDrawOrder, sShadowDrawOrder, iHitTestColor1, iHitTestColor2, iGridY, sPosId, bTrading, bBot, bOnStandOn
global oIsoScene, oStudioMap, oStudio, oPossessionStudio, oDenizenManager, gDrinking

on new me, sID, _iScale, _sAttributes, _sScreenName, _sMission, _bBot
  [  0] getparam 0 .............................. <me>
  [  2] getparam 4 .............................. <_sScreenName>
  [  4] setobjprop 770 .......................... me.sScreenName = _sScreenName
  [  7] getparam 0 .............................. <me>
  [  9] getparam 5 .............................. <_sMission>
  [ 11] setobjprop 771 .......................... me.sMission = _sMission
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 6 .............................. <_bBot>
  [ 18] setobjprop 772 .......................... me.bBot = _bBot
  [ 21] getparam 0 .............................. <me>
  [ 23] getglobal 88 ............................ <oIsoScene>
  [ 25] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 27] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [ 29] objcall 482 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 32] setobjprop 636 .......................... me.iSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 636 .......................... <me.iSprite>
  [ 40] pusharglist 1 ........................... <me.iSprite>
  [ 42] extcall 481 ............................. <sprite(me.iSprite)>
  [ 45] pushint8 1 .............................. <1>
  [ 47] setobjprop 493 .......................... sprite(me.iSprite).visible = 1
  [ 50] getparam 0 .............................. <me>
  [ 52] getglobal 88 ............................ <oIsoScene>
  [ 54] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 56] pusharglist 1 ........................... <oIsoScene.oSpriteManager>
  [ 58] objcall 482 ............................. <oIsoScene.oSpriteManager.getPooledSprite()>
  [ 61] setobjprop 773 .......................... me.iShadowSprite = oIsoScene.oSpriteManager.getPooledSprite()
  [ 64] getparam 0 .............................. <me>
  [ 66] getobjprop 773 .......................... <me.iShadowSprite>
  [ 69] pusharglist 1 ........................... <me.iShadowSprite>
  [ 71] extcall 481 ............................. <sprite(me.iShadowSprite)>
  [ 74] pushint8 1 .............................. <1>
  [ 76] setobjprop 493 .......................... sprite(me.iShadowSprite).visible = 1
  [ 79] getglobal 156 ........................... <oStudioMap>
  [ 81] pusharglist 1 ........................... <oStudioMap>
  [ 83] objcall 774 ............................. <oStudioMap.getLocation()>
  [ 86] pushint8 18 ............................. <18>
  [ 88] eq ...................................... <oStudioMap.getLocation() = 18>
  [ 89] jmpifz [123] ............................ if oStudioMap.getLocation() = 18 then / else
  [ 92] getparam 3 .............................. <_sAttributes>
  [ 94] pusharglist 1 ........................... <_sAttributes>
  [ 96] extcall 775 ............................. <fishifyAvatarString(_sAttributes)>
  [ 99] setlocal 0 .............................. sFishyString = fishifyAvatarString(_sAttributes)
  [101] getparam 0 .............................. <me>
  [103] pushcons 0 .............................. <"AvatarEngine">
  [105] pusharglist 1 ........................... <"AvatarEngine">
  [107] extcall 57 .............................. <script("AvatarEngine")>
  [109] getlocal 0 .............................. <sFishyString>
  [111] getparam 2 .............................. <_iScale>
  [113] pusharglist 3 ........................... <script("AvatarEngine"), sFishyString, _iScale>
  [115] extcall 0 ............................... <new(script("AvatarEngine"), sFishyString, _iScale)>
  [117] setobjprop 776 .......................... me.oEngine = new(script("AvatarEngine"), sFishyString, _iScale)
  [120] jmp [142]
  [123] getparam 0 .............................. <me>
  [125] pushcons 0 .............................. <"AvatarEngine">
  [127] pusharglist 1 ........................... <"AvatarEngine">
  [129] extcall 57 .............................. <script("AvatarEngine")>
  [131] getparam 3 .............................. <_sAttributes>
  [133] getparam 2 .............................. <_iScale>
  [135] pusharglist 3 ........................... <script("AvatarEngine"), _sAttributes, _iScale>
  [137] extcall 0 ............................... <new(script("AvatarEngine"), _sAttributes, _iScale)>
  [139] setobjprop 776 .......................... me.oEngine = new(script("AvatarEngine"), _sAttributes, _iScale)
  [142] getparam 0 .............................. <me>
  [144] getchainedprop 776 ...................... <me.oEngine>
  [147] getparam 0 .............................. <me>
  [149] getobjprop 636 .......................... <me.iSprite>
  [152] getparam 0 .............................. <me>
  [154] getobjprop 773 .......................... <me.iShadowSprite>
  [157] pusharglistnoret 3 ...................... <me.oEngine, me.iSprite, me.iShadowSprite>
  [159] objcall 777 ............................. me.oEngine.initSprites(me.iSprite, me.iShadowSprite)
  [162] getparam 0 .............................. <me>
  [164] getobjprop 636 .......................... <me.iSprite>
  [167] pusharglist 1 ........................... <me.iSprite>
  [169] extcall 481 ............................. <sprite(me.iSprite)>
  [172] getchainedprop 635 ...................... <sprite(me.iSprite).scriptInstanceList>
  [175] pushcons 1 .............................. <"SceneItemScript">
  [177] pusharglist 1 ........................... <"SceneItemScript">
  [179] extcall 57 .............................. <script("SceneItemScript")>
  [181] getparam 0 .............................. <me>
  [183] pusharglist 2 ........................... <script("SceneItemScript"), me>
  [185] objcall 0 ............................... <script("SceneItemScript").new(me)>
  [187] pusharglistnoret 2 ...................... <sprite(me.iSprite).scriptInstanceList, script("SceneItemScript").new(me)>
  [189] objcall 135 ............................. sprite(me.iSprite).scriptInstanceList.add(script("SceneItemScript").new(me))
  [191] getparam 0 .............................. <me>
  [193] pushcons 2 .............................. <"IsoSprite">
  [195] pusharglist 1 ........................... <"IsoSprite">
  [197] extcall 57 .............................. <script("IsoSprite")>
  [199] pusharglist 1 ........................... <script("IsoSprite")>
  [201] objcall 778 ............................. <script("IsoSprite").rawNew()>
  [204] setobjprop 779 .......................... me.ancestor = script("IsoSprite").rawNew()
  [207] pushsymb 0 .............................. <#new>
  [209] getparam 0 .............................. <me>
  [211] getparam 1 .............................. <sID>
  [213] pusharglistnoret 3 ...................... <#new, me, sID>
  [215] extcall 780 ............................. callAncestor(#new, me, sID)
  [218] getparam 0 .............................. <me>
  [220] getparam 0 .............................. <me>
  [222] getchainedprop 776 ...................... <me.oEngine>
  [225] pusharglist 1 ........................... <me.oEngine>
  [227] objcall 669 ............................. <me.oEngine.getFPS()>
  [230] pusharglistnoret 2 ...................... <me, me.oEngine.getFPS()>
  [232] objcall 670 ............................. me.setFPS(me.oEngine.getFPS())
  [235] getparam 0 .............................. <me>
  [237] pushint8 100 ............................ <100>
  [239] setobjprop 683 .......................... me.iScale = 100
  [242] getparam 0 .............................. <me>
  [244] pushint8 2 .............................. <2>
  [246] setobjprop 686 .......................... me.iSpeed = 2
  [249] getparam 0 .............................. <me>
  [251] getparam 0 .............................. <me>
  [253] getobjprop 697 .......................... <me.down>
  [256] setobjprop 781 .......................... me.aCurrentDirection = me.down
  [259] getparam 0 .............................. <me>
  [261] pushint8 6 .............................. <6>
  [263] setobjprop 686 .......................... me.iSpeed = 6
  [266] getparam 0 .............................. <me>
  [268] pushzero ................................ <0>
  [269] setobjprop 782 .......................... me.bPerforming = 0
  [272] getparam 0 .............................. <me>
  [274] pushzero ................................ <0>
  [275] setobjprop 783 .......................... me.bDrinking = 0
  [278] getparam 0 .............................. <me>
  [280] pushcons 3 .............................. <"av">
  [282] setobjprop 784 .......................... me.sDrawOrder = "av"
  [285] getparam 0 .............................. <me>
  [287] pushcons 4 .............................. <"avsd">
  [289] setobjprop 785 .......................... me.sShadowDrawOrder = "avsd"
  [292] getparam 0 .............................. <me>
  [294] pushzero ................................ <0>
  [295] setobjprop 277 .......................... me.iGridY = 0
  [298] getparam 0 .............................. <me>
  [300] pushzero ................................ <0>
  [301] setobjprop 272 .......................... me.bTrading = 0
  [304] getparam 0 .............................. <me>
  [306] pushzero ................................ <0>
  [307] setobjprop 786 .......................... me.bOnStandOn = 0
  [310] getparam 0 .............................. <me>
  [312] pushint32 65535 ......................... <65535>
  [317] setobjprop 787 .......................... me.iHitTestColor1 = 65535
  [320] getparam 0 .............................. <me>
  [322] pushint16 32767 ......................... <32767>
  [325] setobjprop 788 .......................... me.iHitTestColor2 = 32767
  [328] getglobal 88 ............................ <oIsoScene>
  [330] getchainedprop 127 ...................... <oIsoScene.oAvatars>
  [332] getparam 0 .............................. <me>
  [334] pusharglistnoret 2 ...................... <oIsoScene.oAvatars, me>
  [336] objcall 789 ............................. oIsoScene.oAvatars.addItem(me)
  [339] getparam 0 .............................. <me>
  [341] pushint8 100 ............................ <100>
  [343] inv ..................................... <-100>
  [344] setobjprop 285 .......................... me.sPosId = -100
  [347] getmovieprop 134 ........................ <the actorList>
  [349] getparam 0 .............................. <me>
  [351] pusharglistnoret 2 ...................... <the actorList, me>
  [353] objcall 135 ............................. (the actorList).add(me)
  [355] getparam 0 .............................. <me>
  [357] pusharglistnoret 1 ...................... <me>
  [359] extcall 93 .............................. return me
  [361] ret
end

on getSprites me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 636 .......................... <me.iSprite>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 773 .......................... <me.iShadowSprite>
  [ 10] pusharglist 2 ........................... <[me.iSprite, me.iShadowSprite]>
  [ 12] pushlist ................................ <[me.iSprite, me.iShadowSprite]>
  [ 13] pusharglistnoret 1 ...................... <[me.iSprite, me.iShadowSprite]>
  [ 15] extcall 93 .............................. return [me.iSprite, me.iShadowSprite]
  [ 17] ret
end

on getSprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 636 .......................... <me.iSprite>
  [  5] pusharglistnoret 1 ...................... <me.iSprite>
  [  7] extcall 93 .............................. return me.iSprite
  [  9] ret
end

on equals me, _oItem
  [  0] getparam 1 .............................. <_oItem>
  [  2] pusharglist 1 ........................... <_oItem>
  [  4] extcall 106 ............................. <voidp(_oItem)>
  [  6] jmpifz [ 14] ............................ if voidp(_oItem) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 93 .............................. return 0
  [ 14] getparam 1 .............................. <_oItem>
  [ 16] pusharglist 1 ........................... <_oItem>
  [ 18] objcall 154 ............................. <_oItem.isAvatar()>
  [ 20] not ..................................... <not _oItem.isAvatar()>
  [ 21] jmpifz [ 29] ............................ if not _oItem.isAvatar() then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 93 .............................. return 0
  [ 29] getparam 0 .............................. <me>
  [ 31] pusharglist 1 ........................... <me>
  [ 33] objcall 155 ............................. <me.getScreenName()>
  [ 35] getparam 1 .............................. <_oItem>
  [ 37] pusharglist 1 ........................... <_oItem>
  [ 39] objcall 155 ............................. <_oItem.getScreenName()>
  [ 41] eq ...................................... <me.getScreenName() = _oItem.getScreenName()>
  [ 42] pusharglistnoret 1 ...................... <me.getScreenName() = _oItem.getScreenName()>
  [ 44] extcall 93 .............................. return me.getScreenName() = _oItem.getScreenName()
  [ 46] ret
end

on mouseDownEvent me, iSpriteNum, bDoubleClick
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 5 .............................. <"mouseDownEvent()">
  [  4] pusharglistnoret 2 ...................... <me, "mouseDownEvent()">
  [  6] objcall 50 .............................. me.debug("mouseDownEvent()")
  [  8] getparam 2 .............................. <bDoubleClick>
  [ 10] jmpifz [ 18] ............................ if bDoubleClick then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 93 .............................. return 0
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 764 ............................. <me.hitTestAll()>
  [ 25] setparam 1 .............................. iSpriteNum = me.hitTestAll()
  [ 27] getparam 1 .............................. <iSpriteNum>
  [ 29] pusharglist 1 ........................... <iSpriteNum>
  [ 31] extcall 106 ............................. <voidp(iSpriteNum)>
  [ 33] not ..................................... <not voidp(iSpriteNum)>
  [ 34] setlocal 0 .............................. bHitTest = not voidp(iSpriteNum)
  [ 36] getlocal 0 .............................. <bHitTest>
  [ 38] jmpifz [ 49] ............................ if bHitTest then
  [ 41] getglobal 88 ............................ <oIsoScene>
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglistnoret 2 ...................... <oIsoScene, me>
  [ 47] objcall 49 .............................. oIsoScene.createAvatarIndicator(me)
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglist 1 ........................... <me>
  [ 53] objcall 155 ............................. <me.getScreenName()>
  [ 55] getglobal 198 ........................... <oDenizenManager>
  [ 57] pusharglist 1 ........................... <oDenizenManager>
  [ 59] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 61] eq ...................................... <me.getScreenName() = oDenizenManager.getScreenName()>
  [ 62] setlocal 1 .............................. bIsMe = me.getScreenName() = oDenizenManager.getScreenName()
  [ 64] getlocal 1 .............................. <bIsMe>
  [ 66] not ..................................... <not bIsMe>
  [ 67] jmpifz [105] ............................ if not bIsMe then
  [ 70] getglobal 88 ............................ <oIsoScene>
  [ 72] getchainedprop 127 ...................... <oIsoScene.oAvatars>
  [ 74] getglobal 198 ........................... <oDenizenManager>
  [ 76] pusharglist 1 ........................... <oDenizenManager>
  [ 78] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 80] pusharglist 2 ........................... <oIsoScene.oAvatars, oDenizenManager.getScreenName()>
  [ 82] objcall 206 ............................. <oIsoScene.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [ 84] setlocal 2 .............................. oMyAvatar = oIsoScene.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [ 86] getlocal 2 .............................. <oMyAvatar>
  [ 88] pusharglist 1 ........................... <oMyAvatar>
  [ 90] extcall 106 ............................. <voidp(oMyAvatar)>
  [ 92] not ..................................... <not voidp(oMyAvatar)>
  [ 93] jmpifz [105] ............................ if not voidp(oMyAvatar) then
  [ 96] getlocal 2 .............................. <oMyAvatar>
  [ 98] getparam 0 .............................. <me>
  [100] pusharglistnoret 2 ...................... <oMyAvatar, me>
  [102] objcall 729 ............................. oMyAvatar.faceAvatar(me)
  [105] getlocal 0 .............................. <bHitTest>
  [107] pusharglistnoret 1 ...................... <bHitTest>
  [109] extcall 93 .............................. return bHitTest
  [111] ret
end

on faceAvatar me, oAvatar
  [  0] getparam 1 .............................. <oAvatar>
  [  2] pusharglist 1 ........................... <oAvatar>
  [  4] extcall 106 ............................. <voidp(oAvatar)>
  [  6] jmpifz [ 13] ............................ if voidp(oAvatar) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 207 ............................. <me.getSquare()>
  [ 19] setlocal 0 .............................. oSquare1 = me.getSquare()
  [ 21] getparam 1 .............................. <oAvatar>
  [ 23] pusharglist 1 ........................... <oAvatar>
  [ 25] objcall 207 ............................. <oAvatar.getSquare()>
  [ 27] setlocal 1 .............................. oSquare2 = oAvatar.getSquare()
  [ 29] getglobal 88 ............................ <oIsoScene>
  [ 31] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 33] getlocal 0 .............................. <oSquare1>
  [ 35] getlocal 1 .............................. <oSquare2>
  [ 37] pusharglist 3 ........................... <oIsoScene.oGrid, oSquare1, oSquare2>
  [ 39] objcall 455 ............................. <oIsoScene.oGrid.getDirectionToSquare(oSquare1, oSquare2)>
  [ 42] setlocal 2 .............................. iDir = oIsoScene.oGrid.getDirectionToSquare(oSquare1, oSquare2)
  [ 44] getparam 0 .............................. <me>
  [ 46] pushcons 6 .............................. <"faceAvatar() iDir: ">
  [ 48] getlocal 2 .............................. <iDir>
  [ 50] joinstr ................................. <"faceAvatar() iDir: " & iDir>
  [ 51] pushcons 7 .............................. <": ">
  [ 53] joinstr ................................. <"faceAvatar() iDir: " & iDir & ": ">
  [ 54] getparam 1 .............................. <oAvatar>
  [ 56] pusharglist 1 ........................... <oAvatar>
  [ 58] objcall 155 ............................. <oAvatar.getScreenName()>
  [ 60] joinstr ................................. <"faceAvatar() iDir: " & iDir & ": " & oAvatar.getScreenName()>
  [ 61] pusharglistnoret 2 ...................... <me, "faceAvatar() iDir: " & iDir & ": " & oAvatar.getScreenName()>
  [ 63] objcall 50 .............................. me.debug("faceAvatar() iDir: " & iDir & ": " & oAvatar.getScreenName())
  [ 65] getlocal 2 .............................. <iDir>
  [ 67] pusharglist 1 ........................... <iDir>
  [ 69] extcall 106 ............................. <voidp(iDir)>
  [ 71] jmpifz [ 78] ............................ if voidp(iDir) then
  [ 74] pusharglistnoret 0 ...................... <>
  [ 76] extcall 93 .............................. return 
  [ 78] getglobal 228 ........................... <oStudio>
  [ 80] pusharglist 1 ........................... <oStudio>
  [ 82] extcall 106 ............................. <voidp(oStudio)>
  [ 84] not ..................................... <not voidp(oStudio)>
  [ 85] jmpifz [113] ............................ if not voidp(oStudio) then
  [ 88] getglobal 228 ........................... <oStudio>
  [ 90] pusharglist 0 ........................... <>
  [ 92] extcall 132 ............................. <VOID>
  [ 94] pusharglist 0 ........................... <>
  [ 96] extcall 132 ............................. <VOID>
  [ 98] pusharglist 0 ........................... <>
  [100] extcall 132 ............................. <VOID>
  [102] getlocal 2 .............................. <iDir>
  [104] pusharglist 0 ........................... <>
  [106] extcall 132 ............................. <VOID>
  [108] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, iDir, VOID>
  [110] objcall 798 ............................. oStudio.sendUpdateAvatar(VOID, VOID, VOID, iDir, VOID)
  [113] ret
end

on mouseIsOverITem me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 731 ............................. <me.hitTest()>
  [  7] jmpifz [ 19] ............................ if me.hitTest() then / else
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 93 .............................. return 1
  [ 16] jmp [ 24]
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 93 .............................. return 0
  [ 24] ret
end

on getSpritesUnderMouse me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aSpritesUnderMouse = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 728 ............................. <me.getSprites()>
  [ 12] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 14] getlocal 1 .............................. <_aSprites>
  [ 16] peek 0
  [ 18] pusharglist 1
  [ 20] extcall 150
  [ 22] pushint8 1
  [ 24] peek 0
  [ 26] peek 2
  [ 28] lteq
  [ 29] jmpifz [ 88] ............................ repeat with _iSprite in _aSprites
  [ 32] peek 2
  [ 34] peek 1
  [ 36] pusharglist 2
  [ 38] extcall 151
  [ 40] setlocal 2
  [ 42] getlocal 2 .............................. <_iSprite>
  [ 44] pusharglist 1 ........................... <_iSprite>
  [ 46] extcall 799 ............................. <rollover(_iSprite)>
  [ 49] jmpifz [ 83] ............................ if rollover(_iSprite) then
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 2 .............................. <_iSprite>
  [ 56] pusharglist 2 ........................... <me, _iSprite>
  [ 58] objcall 731 ............................. <me.hitTest(_iSprite)>
  [ 61] jmpifz [ 83] ............................ if me.hitTest(_iSprite) then
  [ 64] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 66] getlocal 2 .............................. <_iSprite>
  [ 68] pusharglist 1 ........................... <_iSprite>
  [ 70] extcall 481 ............................. <sprite(_iSprite)>
  [ 73] getobjprop 511 .......................... <sprite(_iSprite).locZ>
  [ 76] getlocal 2 .............................. <_iSprite>
  [ 78] pusharglistnoret 3 ...................... <aSpritesUnderMouse, sprite(_iSprite).locZ, _iSprite>
  [ 80] objcall 388 ............................. aSpritesUnderMouse.addProp(sprite(_iSprite).locZ, _iSprite)
  [ 83] pushint8 1
  [ 85] add
  [ 86] endrepeat [ 24]
  [ 88] pop 3
  [ 90] getlocal 0 .............................. <aSpritesUnderMouse>
  [ 92] pusharglistnoret 1 ...................... <aSpritesUnderMouse>
  [ 94] extcall 93 .............................. return aSpritesUnderMouse
  [ 96] ret
end

on hitTest me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] getobjprop 801 .......................... <me.oEngine.iImageSprite>
  [  8] pusharglist 1 ........................... <me.oEngine.iImageSprite>
  [ 10] extcall 481 ............................. <sprite(me.oEngine.iImageSprite)>
  [ 13] setlocal 0 .............................. _oSprite = sprite(me.oEngine.iImageSprite)
  [ 15] getlocal 0 .............................. <_oSprite>
  [ 17] getobjprop 163 .......................... <_oSprite.member>
  [ 19] setlocal 1 .............................. _oMember = _oSprite.member
  [ 21] getlocal 1 .............................. <_oMember>
  [ 23] pusharglist 1 ........................... <_oMember>
  [ 25] extcall 106 ............................. <voidp(_oMember)>
  [ 27] jmpifz [ 34] ............................ if voidp(_oMember) then
  [ 30] pusharglistnoret 0 ...................... <>
  [ 32] extcall 93 .............................. return 
  [ 34] getlocal 1 .............................. <_oMember>
  [ 36] getobjprop 639 .......................... <_oMember.memberNum>
  [ 39] pushzero ................................ <0>
  [ 40] lteq .................................... <_oMember.memberNum <= 0>
  [ 41] jmpifz [ 49] ............................ if _oMember.memberNum <= 0 then
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 1 ...................... <0>
  [ 47] extcall 93 .............................. return 0
  [ 49] getlocal 0 .............................. <_oSprite>
  [ 51] getmovieprop 802 ........................ <the mouseLoc>
  [ 54] pusharglist 2 ........................... <_oSprite, the mouseLoc>
  [ 56] objcall 803 ............................. <_oSprite.mapStageToMember(the mouseLoc)>
  [ 59] setlocal 2 .............................. _oMemberLoc = _oSprite.mapStageToMember(the mouseLoc)
  [ 61] getlocal 2 .............................. <_oMemberLoc>
  [ 63] pusharglist 1 ........................... <_oMemberLoc>
  [ 65] extcall 106 ............................. <voidp(_oMemberLoc)>
  [ 67] jmpifz [ 75] ............................ if voidp(_oMemberLoc) then
  [ 70] pushzero ................................ <0>
  [ 71] pusharglistnoret 1 ...................... <0>
  [ 73] extcall 93 .............................. return 0
  [ 75] getlocal 0 .............................. <_oSprite>
  [ 77] getobjprop 163 .......................... <_oSprite.member>
  [ 79] setlocal 1 .............................. _oMember = _oSprite.member
  [ 81] getlocal 1 .............................. <_oMember>
  [ 83] getobjprop 505 .......................... <_oMember.image>
  [ 86] setlocal 3 .............................. _oImage = _oMember.image
  [ 88] getlocal 3 .............................. <_oImage>
  [ 90] getlocal 2 .............................. <_oMemberLoc>
  [ 92] pushsymb 108 ............................ <#integer>
  [ 94] pusharglist 3 ........................... <_oImage, _oMemberLoc, #integer>
  [ 96] objcall 804 ............................. <_oImage.getPixel(_oMemberLoc, #integer)>
  [ 99] setlocal 4 .............................. _iPixelColor = _oImage.getPixel(_oMemberLoc, #integer)
  [101] getlocal 4 .............................. <_iPixelColor>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 787 .......................... <me.iHitTestColor1>
  [108] eq ...................................... <_iPixelColor = me.iHitTestColor1>
  [109] jmpifz [117] ............................ if _iPixelColor = me.iHitTestColor1 then
  [112] pushzero ................................ <0>
  [113] pusharglistnoret 1 ...................... <0>
  [115] extcall 93 .............................. return 0
  [117] getlocal 4 .............................. <_iPixelColor>
  [119] getparam 0 .............................. <me>
  [121] getobjprop 788 .......................... <me.iHitTestColor2>
  [124] eq ...................................... <_iPixelColor = me.iHitTestColor2>
  [125] jmpifz [133] ............................ if _iPixelColor = me.iHitTestColor2 then
  [128] pushzero ................................ <0>
  [129] pusharglistnoret 1 ...................... <0>
  [131] extcall 93 .............................. return 0
  [133] pushint8 1 .............................. <1>
  [135] pusharglistnoret 1 ...................... <1>
  [137] extcall 93 .............................. return 1
  [139] ret
end

on rotate me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglistnoret 1 ...................... <me.oEngine>
  [  7] objcall 293 ............................. me.oEngine.rotate()
  [ 10] ret
end

on getScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 770 .......................... <me.sScreenName>
  [  5] pusharglistnoret 1 ...................... <me.sScreenName>
  [  7] extcall 93 .............................. return me.sScreenName
  [  9] ret
end

on getMission me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 771 .......................... <me.sMission>
  [  5] pusharglistnoret 1 ...................... <me.sMission>
  [  7] extcall 93 .............................. return me.sMission
  [  9] ret
end

on getDrag me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on deleteItem me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 127 ...................... <oIsoScene.oAvatars>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglistnoret 2 ...................... <oIsoScene.oAvatars, me>
  [  8] objcall 809 ............................. oIsoScene.oAvatars.removeItem(me)
  [ 11] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 733 ............................. <me.oEngine.getPreviewImage()>
  [ 10] pusharglistnoret 1 ...................... <me.oEngine.getPreviewImage()>
  [ 12] extcall 93 .............................. return me.oEngine.getPreviewImage()
  [ 14] ret
end

on getEngine me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 776 .......................... <me.oEngine>
  [  5] pusharglistnoret 1 ...................... <me.oEngine>
  [  7] extcall 93 .............................. return me.oEngine
  [  9] ret
end

on setItemsAllowedOnTop me, _bItemsAllowedOnTop
  [  0] ret
end

on getItemsAllowedOnTop me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on destroy me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 636 .......................... <me.iSprite>
  [  9] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.iSprite>
  [ 11] objcall 535 ............................. oIsoScene.oSpriteManager.returnPooledSprite(me.iSprite)
  [ 14] getglobal 88 ............................ <oIsoScene>
  [ 16] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 773 .......................... <me.iShadowSprite>
  [ 23] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.iShadowSprite>
  [ 25] objcall 535 ............................. oIsoScene.oSpriteManager.returnPooledSprite(me.iShadowSprite)
  [ 28] getmovieprop 134 ........................ <the actorList>
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 2 ...................... <the actorList, me>
  [ 34] objcall 359 ............................. (the actorList).deleteOne(me)
  [ 37] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 636 .......................... <me.iSprite>
  [  5] pusharglist 1 ........................... <me.iSprite>
  [  7] extcall 481 ............................. <sprite(me.iSprite)>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 636 .......................... <me.iSprite>
  [ 15] pusharglist 1 ........................... <me.iSprite>
  [ 17] extcall 481 ............................. <sprite(me.iSprite)>
  [ 20] getobjprop 493 .......................... <sprite(me.iSprite).visible>
  [ 23] not ..................................... <not sprite(me.iSprite).visible>
  [ 24] setobjprop 493 .......................... sprite(me.iSprite).visible = not sprite(me.iSprite).visible
  [ 27] ret
end

on createSprite me, _sMember
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] getobjprop 801 .......................... <me.oEngine.iImageSprite>
  [  8] pusharglist 1 ........................... <me.oEngine.iImageSprite>
  [ 10] extcall 481 ............................. <sprite(me.oEngine.iImageSprite)>
  [ 13] pusharglistnoret 1 ...................... <sprite(me.oEngine.iImageSprite)>
  [ 15] extcall 93 .............................. return sprite(me.oEngine.iImageSprite)
  [ 17] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 7 ............................... <me.oEngine.stepFrame()>
  [  9] setlocal 0 .............................. bDoFrameEvent = me.oEngine.stepFrame()
  [ 11] getlocal 0 .............................. <bDoFrameEvent>
  [ 13] jmpifz [ 23] ............................ if bDoFrameEvent then
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 672 ............................. me.doFrameEvent()
  [ 23] ret
end

on doFrameEvent me
  [  0] pushsymb 672 ............................ <#doFrameEvent>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 2 ...................... <#doFrameEvent, me>
  [  7] extcall 780 ............................. callAncestor(#doFrameEvent, me)
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 155 ............................. <me.getScreenName()>
  [ 16] getglobal 198 ........................... <oDenizenManager>
  [ 18] pusharglist 1 ........................... <oDenizenManager>
  [ 20] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 22] eq ...................................... <me.getScreenName() = oDenizenManager.getScreenName()>
  [ 23] jmpifz [ 36] ............................ if me.getScreenName() = oDenizenManager.getScreenName() then
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 752 ............................. <me.isDrinking()>
  [ 33] setglobal 812 ........................... gDrinking = me.isDrinking()
  [ 36] ret
end

on setAvatar me, oAvatar
  [  0] ret
end

on display me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 242 .......................... <me.oSquare>
  [  4] pusharglist 1 ........................... <me.oSquare>
  [  6] extcall 106 ............................. <voidp(me.oSquare)>
  [  8] jmpifz [ 15] ............................ if voidp(me.oSquare) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 93 .............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 776 ...................... <me.oEngine>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 331 .......................... <me.oViewPoint>
  [ 25] pusharglistnoret 2 ...................... <me.oEngine, me.oViewPoint>
  [ 27] objcall 813 ............................. me.oEngine.setLoc(me.oViewPoint)
  [ 30] getparam 0 .............................. <me>
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 784 .......................... <me.sDrawOrder>
  [ 39] pusharglist 2 ........................... <me, me.sDrawOrder>
  [ 41] objcall 762 ............................. <me.calculateZOrder(me.sDrawOrder)>
  [ 44] setobjprop 501 .......................... me.iDepth = me.calculateZOrder(me.sDrawOrder)
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 785 .......................... <me.sShadowDrawOrder>
  [ 54] pusharglist 2 ........................... <me, me.sShadowDrawOrder>
  [ 56] objcall 762 ............................. <me.calculateZOrder(me.sShadowDrawOrder)>
  [ 59] setlocal 0 .............................. iShadowDepth = me.calculateZOrder(me.sShadowDrawOrder)
  [ 61] getglobal 156 ........................... <oStudioMap>
  [ 63] pusharglist 1 ........................... <oStudioMap>
  [ 65] objcall 157 ............................. <oStudioMap.isPrivate()>
  [ 67] jmpifz [118] ............................ if oStudioMap.isPrivate() then
  [ 70] getparam 0 .............................. <me>
  [ 72] getchainedprop 242 ...................... <me.oSquare>
  [ 74] getglobal 88 ............................ <oIsoScene>
  [ 76] getchainedprop 120 ...................... <oIsoScene.oDoor>
  [ 78] getobjprop 242 .......................... <oIsoScene.oDoor.oSquare>
  [ 80] pusharglist 2 ........................... <me.oSquare, oIsoScene.oDoor.oSquare>
  [ 82] objcall 243 ............................. <me.oSquare.equals(oIsoScene.oDoor.oSquare)>
  [ 84] jmpifz [118] ............................ if me.oSquare.equals(oIsoScene.oDoor.oSquare) then
  [ 87] getparam 0 .............................. <me>
  [ 89] getglobal 88 ............................ <oIsoScene>
  [ 91] getchainedprop 120 ...................... <oIsoScene.oDoor>
  [ 93] pusharglist 1 ........................... <oIsoScene.oDoor>
  [ 95] objcall 814 ............................. <oIsoScene.oDoor.getLowestZ()>
  [ 98] pushint8 2 .............................. <2>
  [100] sub ..................................... <oIsoScene.oDoor.getLowestZ() - 2>
  [101] setobjprop 501 .......................... me.iDepth = oIsoScene.oDoor.getLowestZ() - 2
  [104] getglobal 88 ............................ <oIsoScene>
  [106] getchainedprop 120 ...................... <oIsoScene.oDoor>
  [108] pusharglist 1 ........................... <oIsoScene.oDoor>
  [110] objcall 814 ............................. <oIsoScene.oDoor.getLowestZ()>
  [113] pushint8 3 .............................. <3>
  [115] sub ..................................... <oIsoScene.oDoor.getLowestZ() - 3>
  [116] setlocal 0 .............................. iShadowDepth = oIsoScene.oDoor.getLowestZ() - 3
  [118] getparam 0 .............................. <me>
  [120] getchainedprop 776 ...................... <me.oEngine>
  [123] getparam 0 .............................. <me>
  [125] getobjprop 501 .......................... <me.iDepth>
  [128] getlocal 0 .............................. <iShadowDepth>
  [130] pusharglistnoret 3 ...................... <me.oEngine, me.iDepth, iShadowDepth>
  [132] objcall 815 ............................. me.oEngine.setDepth(me.iDepth, iShadowDepth)
  [135] ret
end

on animateAlongPath me, _aPath, iTimeDelta
  [  0] pushsymb 705 ............................ <#animateAlongPath>
  [  3] getparam 0 .............................. <me>
  [  5] getparam 1 .............................. <_aPath>
  [  7] getparam 2 .............................. <iTimeDelta>
  [  9] pusharglistnoret 4 ...................... <#animateAlongPath, me, _aPath, iTimeDelta>
  [ 11] extcall 780 ............................. callAncestor(#animateAlongPath, me, _aPath, iTimeDelta)
  [ 14] ret
end

on nextPath me
  [  0] pushsymb 664 ............................ <#nextPath>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 2 ...................... <#nextPath, me>
  [  7] extcall 780 ............................. callAncestor(#nextPath, me)
  [ 10] ret
end

on stopPathAnimation me
  [  0] pushsymb 666 ............................ <#stopPathAnimation>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 2 ...................... <#stopPathAnimation, me>
  [  7] extcall 780 ............................. callAncestor(#stopPathAnimation, me)
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 687 .......................... <me.bMoving>
  [ 15] not ..................................... <not me.bMoving>
  [ 16] jmpifz [ 33] ............................ if not me.bMoving then
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 742 ............................. me.updateStatus()
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] objcall 739 ............................. me.checkForTeleporter()
  [ 33] ret
end

on animateToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 245 ............................. me.walk()
  [  6] pushsymb 671 ............................ <#animateToSquare>
  [  9] getparam 0 .............................. <me>
  [ 11] getparam 1 .............................. <_oSquare>
  [ 13] pusharglistnoret 3 ...................... <#animateToSquare, me, _oSquare>
  [ 15] extcall 780 ............................. callAncestor(#animateToSquare, me, _oSquare)
  [ 18] ret
end

on applyDirection me, aDirection
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 8 .............................. <"applyDirection()">
  [  4] pusharglistnoret 2 ...................... <me, "applyDirection()">
  [  6] objcall 50 .............................. me.debug("applyDirection()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <aDirection>
  [ 12] pusharglist 2 ........................... <me, aDirection>
  [ 14] objcall 738 ............................. <me.roundPoint(aDirection)>
  [ 17] setparam 1 .............................. aDirection = me.roundPoint(aDirection)
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <aDirection>
  [ 23] setobjprop 781 .......................... me.aCurrentDirection = aDirection
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 702 ...................... <me.aDirections>
  [ 31] getparam 1 .............................. <aDirection>
  [ 33] pusharglist 2 ........................... <me.aDirections, aDirection>
  [ 35] objcall 817 ............................. <me.aDirections.getPos(aDirection)>
  [ 38] setlocal 0 .............................. iIndex = me.aDirections.getPos(aDirection)
  [ 40] getparam 0 .............................. <me>
  [ 42] getchainedprop 776 ...................... <me.oEngine>
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 2 ...................... <me.oEngine, 0>
  [ 48] objcall 818 ............................. me.oEngine.lookStraight(0)
  [ 51] getlocal 0 .............................. <iIndex>
  [ 53] pushzero ................................ <0>
  [ 54] gt ...................................... <iIndex > 0>
  [ 55] jmpifz [ 73] ............................ if iIndex > 0 then
  [ 58] getparam 0 .............................. <me>
  [ 60] getchainedprop 776 ...................... <me.oEngine>
  [ 63] getlocal 0 .............................. <iIndex>
  [ 65] pushint8 1 .............................. <1>
  [ 67] sub ..................................... <iIndex - 1>
  [ 68] pusharglistnoret 2 ...................... <me.oEngine, iIndex - 1>
  [ 70] objcall 819 ............................. me.oEngine.changeDirection(iIndex - 1)
  [ 73] ret
end

on roundPoint me, Op
  [  0] getparam 1 .............................. <Op>
  [  2] getparam 1 .............................. <Op>
  [  4] getobjprop 328 .......................... <Op.locH>
  [  7] pusharglist 1 ........................... <Op.locH>
  [  9] extcall 108 ............................. <integer(Op.locH)>
  [ 11] setobjprop 328 .......................... Op.locH = integer(Op.locH)
  [ 14] getparam 1 .............................. <Op>
  [ 16] getparam 1 .............................. <Op>
  [ 18] getobjprop 329 .......................... <Op.locV>
  [ 21] pusharglist 1 ........................... <Op.locV>
  [ 23] extcall 108 ............................. <integer(Op.locV)>
  [ 25] setobjprop 329 .......................... Op.locV = integer(Op.locV)
  [ 28] getparam 1 .............................. <Op>
  [ 30] pusharglistnoret 1 ...................... <Op>
  [ 32] extcall 93 .............................. return Op
  [ 34] ret
end

on checkForTeleporter me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 242 .......................... <me.oSquare>
  [  8] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 10] objcall 208 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [ 12] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [ 14] getlocal 0 .............................. <oItem>
  [ 16] pusharglist 1 ........................... <oItem>
  [ 18] extcall 106 ............................. <voidp(oItem)>
  [ 20] not ..................................... <not voidp(oItem)>
  [ 21] jmpifz [ 73] ............................ if not voidp(oItem) then
  [ 24] getlocal 0 .............................. <oItem>
  [ 26] getchainedprop 821 ...................... <oItem.oAction>
  [ 29] pusharglistnoret 1 ...................... <oItem.oAction>
  [ 31] objcall 822 ............................. oItem.oAction.turnOn()
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglist 1 ........................... <me>
  [ 38] objcall 155 ............................. <me.getScreenName()>
  [ 40] getglobal 198 ........................... <oDenizenManager>
  [ 42] pusharglist 1 ........................... <oDenizenManager>
  [ 44] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 46] eq ...................................... <me.getScreenName() = oDenizenManager.getScreenName()>
  [ 47] jmpifz [ 73] ............................ if me.getScreenName() = oDenizenManager.getScreenName() then
  [ 50] pushcons 9 .............................. <"_TIMER_">
  [ 52] pusharglist 1 ........................... <"_TIMER_">
  [ 54] extcall 57 .............................. <script("_TIMER_")>
  [ 56] pushint16 2000 .......................... <2000>
  [ 59] pushsymb 740 ............................ <#goToStudioViaTeleporter>
  [ 62] getparam 0 .............................. <me>
  [ 64] getlocal 0 .............................. <oItem>
  [ 66] getobjprop 285 .......................... <oItem.sPosId>
  [ 69] pusharglistnoret 5 ...................... <script("_TIMER_"), 2000, #goToStudioViaTeleporter, me, oItem.sPosId>
  [ 71] objcall 0 ............................... script("_TIMER_").new(2000, #goToStudioViaTeleporter, me, oItem.sPosId)
  [ 73] ret
end

on moveToSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 779 ...................... <me.ancestor>
  [  5] getparam 1 .............................. <_oSquare>
  [  7] pusharglistnoret 2 ...................... <me.ancestor, _oSquare>
  [  9] objcall 244 ............................. me.ancestor.moveToSquare(_oSquare)
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 742 ............................. me.updateStatus()
  [ 18] getglobal 198 ........................... <oDenizenManager>
  [ 20] pusharglist 1 ........................... <oDenizenManager>
  [ 22] extcall 106 ............................. <voidp(oDenizenManager)>
  [ 24] jmpifz [ 31] ............................ if voidp(oDenizenManager) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 93 .............................. return 
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 155 ............................. <me.getScreenName()>
  [ 37] getglobal 198 ........................... <oDenizenManager>
  [ 39] pusharglist 1 ........................... <oDenizenManager>
  [ 41] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 43] eq ...................................... <me.getScreenName() = oDenizenManager.getScreenName()>
  [ 44] jmpifz [ 94] ............................ if me.getScreenName() = oDenizenManager.getScreenName() then
  [ 47] getglobal 88 ............................ <oIsoScene>
  [ 49] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 242 .......................... <me.oSquare>
  [ 55] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 57] objcall 208 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [ 59] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [ 61] getlocal 0 .............................. <oItem>
  [ 63] pusharglist 1 ........................... <oItem>
  [ 65] extcall 106 ............................. <voidp(oItem)>
  [ 67] not ..................................... <not voidp(oItem)>
  [ 68] jmpifz [ 94] ............................ if not voidp(oItem) then
  [ 71] pushcons 9 .............................. <"_TIMER_">
  [ 73] pusharglist 1 ........................... <"_TIMER_">
  [ 75] extcall 57 .............................. <script("_TIMER_")>
  [ 77] pushint16 1200 .......................... <1200>
  [ 80] pushsymb 741 ............................ <#moveToFrontOfTeleporter>
  [ 83] getparam 0 .............................. <me>
  [ 85] getlocal 0 .............................. <oItem>
  [ 87] getobjprop 285 .......................... <oItem.sPosId>
  [ 90] pusharglistnoret 5 ...................... <script("_TIMER_"), 1200, #moveToFrontOfTeleporter, me, oItem.sPosId>
  [ 92] objcall 0 ............................... script("_TIMER_").new(1200, #moveToFrontOfTeleporter, me, oItem.sPosId)
  [ 94] ret
end

on goToStudioViaTeleporter me, iTeleporterId
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 242 .......................... <me.oSquare>
  [  8] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 10] objcall 208 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [ 12] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [ 14] getlocal 0 .............................. <oItem>
  [ 16] pusharglist 1 ........................... <oItem>
  [ 18] extcall 106 ............................. <voidp(oItem)>
  [ 20] jmpifz [ 27] ............................ if voidp(oItem) then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 93 .............................. return 
  [ 27] getglobal 296 ........................... <oPossessionStudio>
  [ 30] pusharglist 1 ........................... <oPossessionStudio>
  [ 32] extcall 106 ............................. <voidp(oPossessionStudio)>
  [ 34] not ..................................... <not voidp(oPossessionStudio)>
  [ 35] jmpifz [ 48] ............................ if not voidp(oPossessionStudio) then
  [ 38] getglobal 296 ........................... <oPossessionStudio>
  [ 41] getparam 1 .............................. <iTeleporterId>
  [ 43] pusharglistnoret 2 ...................... <oPossessionStudio, iTeleporterId>
  [ 45] objcall 823 ............................. oPossessionStudio.sendTeleport(iTeleporterId)
  [ 48] ret
end

on moveToFrontOfTeleporter me, iTeleporterId
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [  4] getparam 1 .............................. <iTeleporterId>
  [  6] pusharglist 2 ........................... <oIsoScene.oFurniture, iTeleporterId>
  [  8] objcall 37 .............................. <oIsoScene.oFurniture.getItemByPossessionId(iTeleporterId)>
  [ 10] setlocal 0 .............................. oItem = oIsoScene.oFurniture.getItemByPossessionId(iTeleporterId)
  [ 12] getlocal 0 .............................. <oItem>
  [ 14] pusharglist 1 ........................... <oItem>
  [ 16] extcall 106 ............................. <voidp(oItem)>
  [ 18] not ..................................... <not voidp(oItem)>
  [ 19] jmpifz [ 44] ............................ if not voidp(oItem) then
  [ 22] getlocal 0 .............................. <oItem>
  [ 24] pusharglist 1 ........................... <oItem>
  [ 26] objcall 207 ............................. <oItem.getSquare()>
  [ 28] getparam 0 .............................. <me>
  [ 30] getobjprop 242 .......................... <me.oSquare>
  [ 32] eq ...................................... <oItem.getSquare() = me.oSquare>
  [ 33] jmpifz [ 44] ............................ if oItem.getSquare() = me.oSquare then
  [ 36] getglobal 88 ............................ <oIsoScene>
  [ 38] getlocal 0 .............................. <oItem>
  [ 40] pusharglistnoret 2 ...................... <oIsoScene, oItem>
  [ 42] objcall 18 .............................. oIsoScene.moveAvatarToFrontOfItem(oItem)
  [ 44] ret
end

on updateStatus me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 242 .......................... <me.oSquare>
  [  8] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [ 10] objcall 825 ............................. <oIsoScene.oFurniture.getSeatableItemAtSquareWithGreatestHeightOffset(me.oSquare)>
  [ 13] setlocal 0 .............................. oSeatableItem = oIsoScene.oFurniture.getSeatableItemAtSquareWithGreatestHeightOffset(me.oSquare)
  [ 15] getlocal 0 .............................. <oSeatableItem>
  [ 17] pusharglist 1 ........................... <oSeatableItem>
  [ 19] extcall 106 ............................. <voidp(oSeatableItem)>
  [ 21] not ..................................... <not voidp(oSeatableItem)>
  [ 22] setlocal 1 .............................. bIsSeatable = not voidp(oSeatableItem)
  [ 24] getlocal 1 .............................. <bIsSeatable>
  [ 26] jmpifz [ 49] ............................ if bIsSeatable then / else
  [ 29] getlocal 0 .............................. <oSeatableItem>
  [ 31] pusharglist 1 ........................... <oSeatableItem>
  [ 33] objcall 254 ............................. <oSeatableItem.getDirection()>
  [ 35] setlocal 2 .............................. iDir = oSeatableItem.getDirection()
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 2 .............................. <iDir>
  [ 41] pusharglistnoret 2 ...................... <me, iDir>
  [ 43] objcall 745 ............................. me.sit(iDir)
  [ 46] jmp [ 56]
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglistnoret 1 ...................... <me>
  [ 53] objcall 744 ............................. me.stand()
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 746 ............................. <me.isSitting()>
  [ 63] setlocal 3 .............................. bSitting = me.isSitting()
  [ 65] pushzero ................................ <0>
  [ 66] setlocal 4 .............................. _iOffset = 0
  [ 68] pushzero ................................ <0>
  [ 69] setlocal 5 .............................. _iGridY = 0
  [ 71] getlocal 1 .............................. <bIsSeatable>
  [ 73] jmpifz [ 93] ............................ if bIsSeatable then
  [ 76] getlocal 0 .............................. <oSeatableItem>
  [ 78] pusharglist 1 ........................... <oSeatableItem>
  [ 80] objcall 204 ............................. <oSeatableItem.getHeightOffset()>
  [ 82] setlocal 4 .............................. _iOffset = oSeatableItem.getHeightOffset()
  [ 84] getlocal 0 .............................. <oSeatableItem>
  [ 86] pusharglist 1 ........................... <oSeatableItem>
  [ 88] objcall 760 ............................. <oSeatableItem.getGridY()>
  [ 91] setlocal 5 .............................. _iGridY = oSeatableItem.getGridY()
  [ 93] getlocal 1 .............................. <bIsSeatable>
  [ 95] not ..................................... <not bIsSeatable>
  [ 96] jmpifz [227] ............................ if not bIsSeatable then
  [ 99] getglobal 88 ............................ <oIsoScene>
  [101] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 242 .......................... <me.oSquare>
  [107] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [109] objcall 208 ............................. <oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)>
  [111] setlocal 6 .............................. oTeleporter = oIsoScene.oFurniture.getTeleporterAtSquare(me.oSquare)
  [113] getlocal 6 .............................. <oTeleporter>
  [115] pusharglist 1 ........................... <oTeleporter>
  [117] extcall 106 ............................. <voidp(oTeleporter)>
  [119] not ..................................... <not voidp(oTeleporter)>
  [120] jmpifz [150] ............................ if not voidp(oTeleporter) then
  [123] getlocal 6 .............................. <oTeleporter>
  [125] getchainedprop 821 ...................... <oTeleporter.oAction>
  [128] pusharglistnoret 1 ...................... <oTeleporter.oAction>
  [130] objcall 822 ............................. oTeleporter.oAction.turnOn()
  [133] getlocal 6 .............................. <oTeleporter>
  [135] pusharglist 1 ........................... <oTeleporter>
  [137] objcall 254 ............................. <oTeleporter.getDirection()>
  [139] setlocal 2 .............................. iDir = oTeleporter.getDirection()
  [141] getparam 0 .............................. <me>
  [143] getlocal 2 .............................. <iDir>
  [145] pusharglistnoret 2 ...................... <me, iDir>
  [147] objcall 754 ............................. me.faceDirection(iDir)
  [150] getglobal 88 ............................ <oIsoScene>
  [152] getchainedprop 125 ...................... <oIsoScene.oFurniture>
  [154] getparam 0 .............................. <me>
  [156] getobjprop 242 .......................... <me.oSquare>
  [158] pusharglist 2 ........................... <oIsoScene.oFurniture, me.oSquare>
  [160] objcall 826 ............................. <oIsoScene.oFurniture.getStandOnAtSquare(me.oSquare)>
  [163] setlocal 7 .............................. oStandOn = oIsoScene.oFurniture.getStandOnAtSquare(me.oSquare)
  [165] getlocal 7 .............................. <oStandOn>
  [167] pusharglist 1 ........................... <oStandOn>
  [169] extcall 106 ............................. <voidp(oStandOn)>
  [171] jmpifz [183] ............................ if voidp(oStandOn) then / else
  [174] getparam 0 .............................. <me>
  [176] pushzero ................................ <0>
  [177] setobjprop 786 .......................... me.bOnStandOn = 0
  [180] jmp [227]
  [183] getlocal 7 .............................. <oStandOn>
  [185] pusharglist 1 ........................... <oStandOn>
  [187] objcall 254 ............................. <oStandOn.getDirection()>
  [189] setlocal 2 .............................. iDir = oStandOn.getDirection()
  [191] getparam 0 .............................. <me>
  [193] getlocal 2 .............................. <iDir>
  [195] pusharglistnoret 2 ...................... <me, iDir>
  [197] objcall 754 ............................. me.faceDirection(iDir)
  [200] getparam 0 .............................. <me>
  [202] getobjprop 786 .......................... <me.bOnStandOn>
  [205] pushzero ................................ <0>
  [206] eq ...................................... <me.bOnStandOn = 0>
  [207] jmpifz [227] ............................ if me.bOnStandOn = 0 then
  [210] getparam 0 .............................. <me>
  [212] pushint8 1 .............................. <1>
  [214] setobjprop 786 .......................... me.bOnStandOn = 1
  [217] getlocal 7 .............................. <oStandOn>
  [219] getchainedprop 821 ...................... <oStandOn.oAction>
  [222] pusharglistnoret 1 ...................... <oStandOn.oAction>
  [224] objcall 827 ............................. oStandOn.oAction.standOn()
  [227] getparam 0 .............................. <me>
  [229] getlocal 4 .............................. <_iOffset>
  [231] pusharglistnoret 2 ...................... <me, _iOffset>
  [233] objcall 681 ............................. me.setHeightOffset(_iOffset)
  [236] getparam 0 .............................. <me>
  [238] getlocal 5 .............................. <_iGridY>
  [240] pusharglistnoret 2 ...................... <me, _iGridY>
  [242] objcall 761 ............................. me.setGridY(_iGridY)
  [245] getparam 0 .............................. <me>
  [247] pusharglistnoret 1 ...................... <me>
  [249] objcall 265 ............................. me.display()
  [252] ret
end

on stopAnimation me
  [  0] pushsymb 743 ............................ <#stopAnimation>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 2 ...................... <#stopAnimation, me>
  [  7] extcall 780 ............................. callAncestor(#stopAnimation, me)
  [ 10] ret
end

on stand me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglistnoret 1 ...................... <me.oEngine>
  [  7] objcall 744 ............................. me.oEngine.stand()
  [ 10] ret
end

on walk me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 833 ............................. <me.oEngine.isWalking()>
  [ 10] not ..................................... <not me.oEngine.isWalking()>
  [ 11] jmpifz [ 39] ............................ if not me.oEngine.isWalking() then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 2 ...................... <me, 0>
  [ 19] objcall 761 ............................. me.setGridY(0)
  [ 22] getparam 0 .............................. <me>
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 2 ...................... <me, 0>
  [ 27] objcall 681 ............................. me.setHeightOffset(0)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 776 ...................... <me.oEngine>
  [ 35] pusharglistnoret 1 ...................... <me.oEngine>
  [ 37] objcall 245 ............................. me.oEngine.walk()
  [ 39] ret
end

on sit me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iDir>
  [  4] pusharglistnoret 2 ...................... <me, iDir>
  [  6] objcall 754 ............................. me.faceDirection(iDir)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 749 ............................. <me.isDancing()>
  [ 16] jmpifz [ 26] ............................ if me.isDancing() then
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 748 ............................. me.stopDancing()
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 776 ...................... <me.oEngine>
  [ 31] pusharglistnoret 1 ...................... <me.oEngine>
  [ 33] objcall 745 ............................. me.oEngine.sit()
  [ 36] ret
end

on isSitting me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 746 ............................. <me.oEngine.isSitting()>
  [ 10] pusharglistnoret 1 ...................... <me.oEngine.isSitting()>
  [ 12] extcall 93 .............................. return me.oEngine.isSitting()
  [ 14] ret
end

on dance me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglistnoret 2 ...................... <me.oEngine, 1>
  [  9] objcall 747 ............................. me.oEngine.dance(1)
  [ 12] ret
end

on stopDancing me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pushzero ................................ <0>
  [  6] pusharglistnoret 2 ...................... <me.oEngine, 0>
  [  8] objcall 747 ............................. me.oEngine.dance(0)
  [ 11] ret
end

on isDancing me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] getobjprop 834 .......................... <me.oEngine.bDance>
  [  8] pusharglistnoret 1 ...................... <me.oEngine.bDance>
  [ 10] extcall 93 .............................. return me.oEngine.bDance
  [ 12] ret
end

on setPerforming me, _bPerforming
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bPerforming>
  [  4] setobjprop 782 .......................... me.bPerforming = _bPerforming
  [  7] ret
end

on isPerforming me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 782 .......................... <me.bPerforming>
  [  5] pusharglistnoret 1 ...................... <me.bPerforming>
  [  7] extcall 93 .............................. return me.bPerforming
  [  9] ret
end

on isDrinking me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 836 ............................. <me.oEngine.isCarrying()>
  [ 10] pusharglistnoret 1 ...................... <me.oEngine.isCarrying()>
  [ 12] extcall 93 .............................. return me.oEngine.isCarrying()
  [ 14] ret
end

on chat me, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] getparam 1 .............................. <sMessage>
  [  7] pusharglistnoret 2 ...................... <me.oEngine, sMessage>
  [  9] objcall 753 ............................. me.oEngine.chat(sMessage)
  [ 12] ret
end

on faceDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 702 ............................ <#aDirections>
  [  5] getparam 1 .............................. <iDir>
  [  7] pushint8 1 .............................. <1>
  [  9] add ..................................... <iDir + 1>
  [ 10] pusharglist 3 ........................... <me, #aDirections, iDir + 1>
  [ 12] objcall 611 ............................. <me.aDirections[iDir + 1]>
  [ 15] setlocal 0 .............................. aDir = me.aDirections[iDir + 1]
  [ 17] getlocal 0 .............................. <aDir>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglist 2 ........................... <aDir, 1>
  [ 23] objcall 151 ............................. <aDir[1]>
  [ 25] getlocal 0 .............................. <aDir>
  [ 27] pushint8 2 .............................. <2>
  [ 29] pusharglist 2 ........................... <aDir, 2>
  [ 31] objcall 151 ............................. <aDir[2]>
  [ 33] pusharglist 2 ........................... <aDir[1], aDir[2]>
  [ 35] extcall 325 ............................. <point(aDir[1], aDir[2])>
  [ 38] setlocal 1 .............................. oDir = point(aDir[1], aDir[2])
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 1 .............................. <oDir>
  [ 44] pusharglistnoret 2 ...................... <me, oDir>
  [ 46] objcall 673 ............................. me.applyDirection(oDir)
  [ 49] ret
end

on existsAtSquare me, _oSquare
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 207 ............................. <me.getSquare()>
  [  6] getparam 1 .............................. <_oSquare>
  [  8] pusharglist 2 ........................... <me.getSquare(), _oSquare>
  [ 10] objcall 243 ............................. <me.getSquare().equals(_oSquare)>
  [ 12] jmpifz [ 24] ............................ if me.getSquare().equals(_oSquare) then / else
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 1 ...................... <1>
  [ 19] extcall 93 .............................. return 1
  [ 21] jmp [ 29]
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 93 .............................. return 0
  [ 29] ret
end

on isWallItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on isFurniItem me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on isAvatar me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 93 .............................. return 1
  [  6] ret
end

on isBurnedCd me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 93 .............................. return 0
  [  5] ret
end

on displayThumbsUp me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglistnoret 2 ...................... <me, 1>
  [  6] objcall 758 ............................. me.showVoteICon(1)
  [  9] ret
end

on displayThumbsDown me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 758 ............................. me.showVoteICon(0)
  [  8] ret
end

on showVoteICon me, bState
  [  0] pushcons 10 ............................. <"VoteIndicator">
  [  2] pusharglist 1 ........................... <"VoteIndicator">
  [  4] extcall 57 .............................. <script("VoteIndicator")>
  [  6] getparam 1 .............................. <bState>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 636 .......................... <me.iSprite>
  [ 13] pusharglistnoret 3 ...................... <script("VoteIndicator"), bState, me.iSprite>
  [ 15] objcall 0 ............................... script("VoteIndicator").new(bState, me.iSprite)
  [ 17] ret
end

on drinkCoke me
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 783 .......................... me.bDrinking = 1
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 776 ...................... <me.oEngine>
  [ 12] pushcons 11 ............................. <"crr">
  [ 14] pusharglistnoret 2 ...................... <me.oEngine, "crr">
  [ 16] objcall 838 ............................. me.oEngine.setItemAction("crr")
  [ 19] ret
end

on getGridY me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 277 .......................... <me.iGridY>
  [  5] pusharglistnoret 1 ...................... <me.iGridY>
  [  7] extcall 93 .............................. return me.iGridY
  [  9] ret
end

on setGridY me, _iGridY
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iGridY>
  [  4] setobjprop 277 .......................... me.iGridY = _iGridY
  [  7] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] getparam 1 .............................. <_iHeightOffset>
  [  7] pusharglistnoret 2 ...................... <me.oEngine, _iHeightOffset>
  [  9] objcall 681 ............................. me.oEngine.setHeightOffset(_iHeightOffset)
  [ 12] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 776 ...................... <me.oEngine>
  [  5] pusharglist 1 ........................... <me.oEngine>
  [  7] objcall 204 ............................. <me.oEngine.getHeightOffset()>
  [  9] pusharglistnoret 1 ...................... <me.oEngine.getHeightOffset()>
  [ 11] extcall 93 .............................. return me.oEngine.getHeightOffset()
  [ 13] ret
end

on calculateZOrder me, sOrder
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 242 .......................... <me.oSquare>
  [  4] pusharglist 1 ........................... <me.oSquare>
  [  6] extcall 106 ............................. <voidp(me.oSquare)>
  [  8] jmpifz [ 15] ............................ if voidp(me.oSquare) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 93 .............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 242 ...................... <me.oSquare>
  [ 19] getparam 1 .............................. <sOrder>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 277 .......................... <me.iGridY>
  [ 26] pusharglist 3 ........................... <me.oSquare, sOrder, me.iGridY>
  [ 28] objcall 499 ............................. <me.oSquare.getDepthFromMap(sOrder, me.iGridY)>
  [ 31] setlocal 0 .............................. iZ = me.oSquare.getDepthFromMap(sOrder, me.iGridY)
  [ 33] getlocal 0 .............................. <iZ>
  [ 35] pusharglistnoret 1 ...................... <iZ>
  [ 37] extcall 93 .............................. return iZ
  [ 39] ret
end

on getSquare me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 242 .......................... <me.oSquare>
  [  4] pusharglistnoret 1 ...................... <me.oSquare>
  [  6] extcall 93 .............................. return me.oSquare
  [  8] ret
end

on toString me
  [  0] pushcons 12 ............................. <"[AVATAR] ">
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 155 ............................. <me.getScreenName()>
  [  8] joinstr ................................. <"[AVATAR] " & me.getScreenName()>
  [  9] pusharglistnoret 1 ...................... <"[AVATAR] " & me.getScreenName()>
  [ 11] extcall 93 .............................. return "[AVATAR] " & me.getScreenName()
  [ 13] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 779 ...................... <me.ancestor>
  [  5] pushcons 13 ............................. <"isoengine::Avatar:: ">
  [  7] getparam 1 .............................. <sMessage>
  [  9] joinstr ................................. <"isoengine::Avatar:: " & sMessage>
  [ 10] getparam 2 .............................. <bForce>
  [ 12] pusharglistnoret 3 ...................... <me.ancestor, "isoengine::Avatar:: " & sMessage, bForce>
  [ 14] objcall 50 .............................. me.ancestor.debug("isoengine::Avatar:: " & sMessage, bForce)
  [ 16] ret
end

on rolloverObject me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 150
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 58] ............................ repeat with _iSprite in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 151
  [ 35] setlocal 1
  [ 37] getlocal 1 .............................. <_iSprite>
  [ 39] pusharglist 1 ........................... <_iSprite>
  [ 41] extcall 799 ............................. <rollover(_iSprite)>
  [ 44] jmpifz [ 53] ............................ if rollover(_iSprite) then
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 93 .............................. return 1
  [ 53] pushint8 1
  [ 55] add
  [ 56] endrepeat [ 19]
  [ 58] pop 3
  [ 60] pushzero ................................ <0>
  [ 61] pusharglistnoret 1 ...................... <0>
  [ 63] extcall 93 .............................. return 0
  [ 65] ret
end

on getHighestDepth me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. iHighestDepth = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 728 ............................. <me.getSprites()>
  [ 10] setlocal 1 .............................. _aSprites = me.getSprites()
  [ 12] getlocal 1 .............................. <_aSprites>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 150
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 73] ............................ repeat with _iSprite in _aSprites
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 151
  [ 38] setlocal 2
  [ 40] getlocal 2 .............................. <_iSprite>
  [ 42] pusharglist 1 ........................... <_iSprite>
  [ 44] extcall 481 ............................. <sprite(_iSprite)>
  [ 47] getobjprop 511 .......................... <sprite(_iSprite).locZ>
  [ 50] getlocal 0 .............................. <iHighestDepth>
  [ 52] gt ...................................... <sprite(_iSprite).locZ > iHighestDepth>
  [ 53] jmpifz [ 68] ............................ if sprite(_iSprite).locZ > iHighestDepth then
  [ 56] getlocal 2 .............................. <_iSprite>
  [ 58] pusharglist 1 ........................... <_iSprite>
  [ 60] extcall 481 ............................. <sprite(_iSprite)>
  [ 63] getobjprop 511 .......................... <sprite(_iSprite).locZ>
  [ 66] setlocal 0 .............................. iHighestDepth = sprite(_iSprite).locZ
  [ 68] pushint8 1
  [ 70] add
  [ 71] endrepeat [ 22]
  [ 73] pop 3
  [ 75] getlocal 0 .............................. <iHighestDepth>
  [ 77] pusharglistnoret 1 ...................... <iHighestDepth>
  [ 79] extcall 93 .............................. return iHighestDepth
  [ 81] ret
end

on hitTestAll me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 728 ............................. <me.getSprites()>
  [  7] setlocal 0 .............................. _aSprites = me.getSprites()
  [  9] getlocal 0 .............................. <_aSprites>
  [ 11] peek 0
  [ 13] pusharglist 1
  [ 15] extcall 150
  [ 17] pushint8 1
  [ 19] peek 0
  [ 21] peek 2
  [ 23] lteq
  [ 24] jmpifz [ 60] ............................ repeat with i in _aSprites
  [ 27] peek 2
  [ 29] peek 1
  [ 31] pusharglist 2
  [ 33] extcall 151
  [ 35] setlocal 1
  [ 37] getparam 0 .............................. <me>
  [ 39] getlocal 1 .............................. <i>
  [ 41] pusharglist 2 ........................... <me, i>
  [ 43] objcall 731 ............................. <me.hitTest(i)>
  [ 46] jmpifz [ 55] ............................ if me.hitTest(i) then
  [ 49] getlocal 1 .............................. <i>
  [ 51] pusharglistnoret 1 ...................... <i>
  [ 53] extcall 93 .............................. return i
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 19]
  [ 60] pop 3
  [ 62] pusharglist 0 ........................... <>
  [ 64] extcall 132 ............................. <VOID>
  [ 66] pusharglistnoret 1 ...................... <VOID>
  [ 68] extcall 93 .............................. return VOID
  [ 70] ret
end

on setTrading me, bStatus
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <bStatus>
  [  4] setobjprop 272 .......................... me.bTrading = bStatus
  [  7] ret
end

on isTrading me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 272 .......................... <me.bTrading>
  [  5] pusharglistnoret 1 ...................... <me.bTrading>
  [  7] extcall 93 .............................. return me.bTrading
  [  9] ret
end

on hearChat me, oFromAvatar
  [  0] pushfloat32 3.5 ......................... <3.5>
  [  5] setlocal 0 .............................. iMaxLookDistance = 3.5
  [  7] getglobal 88 ............................ <oIsoScene>
  [  9] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 11] getparam 1 .............................. <oFromAvatar>
  [ 13] pusharglist 1 ........................... <oFromAvatar>
  [ 15] objcall 207 ............................. <oFromAvatar.getSquare()>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 207 ............................. <me.getSquare()>
  [ 23] pusharglist 3 ........................... <oIsoScene.oGrid, oFromAvatar.getSquare(), me.getSquare()>
  [ 25] objcall 454 ............................. <oIsoScene.oGrid.getDistanceBetweenSquares(oFromAvatar.getSquare(), me.getSquare())>
  [ 28] pusharglist 1 ........................... <oIsoScene.oGrid.getDistanceBetweenSquares(oFromAvatar.getSquare(), me.getSquare())>
  [ 30] extcall 108 ............................. <integer(oIsoScene.oGrid.getDistanceBetweenSquares(oFromAvatar.getSquare(), me.getSquare()))>
  [ 32] setlocal 1 .............................. iDistance = integer(oIsoScene.oGrid.getDistanceBetweenSquares(oFromAvatar.getSquare(), me.getSquare()))
  [ 34] getlocal 1 .............................. <iDistance>
  [ 36] getlocal 0 .............................. <iMaxLookDistance>
  [ 38] lteq .................................... <iDistance <= iMaxLookDistance>
  [ 39] jmpifz [353] ............................ if iDistance <= iMaxLookDistance then
  [ 42] getparam 0 .............................. <me>
  [ 44] getchainedprop 776 ...................... <me.oEngine>
  [ 47] pusharglist 1 ........................... <me.oEngine>
  [ 49] objcall 254 ............................. <me.oEngine.getDirection()>
  [ 51] setlocal 2 .............................. iMyDirection = me.oEngine.getDirection()
  [ 53] getlocal 2 .............................. <iMyDirection>
  [ 55] pushint8 45 ............................. <45>
  [ 57] mul ..................................... <iMyDirection * 45>
  [ 58] pushint8 90 ............................. <90>
  [ 60] sub ..................................... <(iMyDirection * 45) - 90>
  [ 61] setlocal 3 .............................. iMyAngle = (iMyDirection * 45) - 90
  [ 63] getlocal 3 .............................. <iMyAngle>
  [ 65] pushzero ................................ <0>
  [ 66] lt ...................................... <iMyAngle < 0>
  [ 67] jmpifz [ 78] ............................ if iMyAngle < 0 then
  [ 70] pushint16 360 ........................... <360>
  [ 73] getlocal 3 .............................. <iMyAngle>
  [ 75] add ..................................... <360 + iMyAngle>
  [ 76] setlocal 3 .............................. iMyAngle = 360 + iMyAngle
  [ 78] pushcons 14 ............................. <"Math">
  [ 80] pusharglist 1 ........................... <"Math">
  [ 82] extcall 60 .............................. <newObject("Math")>
  [ 84] setlocal 4 .............................. fMathObj = newObject("Math")
  [ 86] getparam 1 .............................. <oFromAvatar>
  [ 88] pusharglist 1 ........................... <oFromAvatar>
  [ 90] objcall 207 ............................. <oFromAvatar.getSquare()>
  [ 92] pusharglist 1 ........................... <oFromAvatar.getSquare()>
  [ 94] objcall 559 ............................. <oFromAvatar.getSquare().getRow()>
  [ 97] getparam 0 .............................. <me>
  [ 99] pusharglist 1 ........................... <me>
  [101] objcall 207 ............................. <me.getSquare()>
  [103] pusharglist 1 ........................... <me.getSquare()>
  [105] objcall 559 ............................. <me.getSquare().getRow()>
  [108] sub ..................................... <oFromAvatar.getSquare().getRow() - me.getSquare().getRow()>
  [109] setlocal 5 .............................. iRowDif = oFromAvatar.getSquare().getRow() - me.getSquare().getRow()
  [111] getparam 1 .............................. <oFromAvatar>
  [113] pusharglist 1 ........................... <oFromAvatar>
  [115] objcall 207 ............................. <oFromAvatar.getSquare()>
  [117] pusharglist 1 ........................... <oFromAvatar.getSquare()>
  [119] objcall 560 ............................. <oFromAvatar.getSquare().getCol()>
  [122] getparam 0 .............................. <me>
  [124] pusharglist 1 ........................... <me>
  [126] objcall 207 ............................. <me.getSquare()>
  [128] pusharglist 1 ........................... <me.getSquare()>
  [130] objcall 560 ............................. <me.getSquare().getCol()>
  [133] sub ..................................... <oFromAvatar.getSquare().getCol() - me.getSquare().getCol()>
  [134] setlocal 6 .............................. iColDif = oFromAvatar.getSquare().getCol() - me.getSquare().getCol()
  [136] getlocal 4 .............................. <fMathObj>
  [138] getlocal 5 .............................. <iRowDif>
  [140] getlocal 6 .............................. <iColDif>
  [142] pusharglist 3 ........................... <fMathObj, iRowDif, iColDif>
  [144] objcall 841 ............................. <fMathObj.atan2(iRowDif, iColDif)>
  [147] getlocal 4 .............................. <fMathObj>
  [149] getobjprop 415 .......................... <fMathObj.pi>
  [152] div ..................................... <fMathObj.atan2(iRowDif, iColDif) / fMathObj.pi>
  [153] pushint16 180 ........................... <180>
  [156] mul ..................................... <fMathObj.atan2(iRowDif, iColDif) / fMathObj.pi * 180>
  [157] setlocal 7 .............................. iAngleToChatter = fMathObj.atan2(iRowDif, iColDif) / fMathObj.pi * 180
  [159] getlocal 7 .............................. <iAngleToChatter>
  [161] pushint16 360 ........................... <360>
  [164] mod ..................................... <iAngleToChatter mod 360>
  [165] setlocal 7 .............................. iAngleToChatter = iAngleToChatter mod 360
  [167] getlocal 7 .............................. <iAngleToChatter>
  [169] pushzero ................................ <0>
  [170] lt ...................................... <iAngleToChatter < 0>
  [171] jmpifz [182] ............................ if iAngleToChatter < 0 then
  [174] pushint16 360 ........................... <360>
  [177] getlocal 7 .............................. <iAngleToChatter>
  [179] add ..................................... <360 + iAngleToChatter>
  [180] setlocal 7 .............................. iAngleToChatter = 360 + iAngleToChatter
  [182] getlocal 7 .............................. <iAngleToChatter>
  [184] getlocal 3 .............................. <iMyAngle>
  [186] sub ..................................... <iAngleToChatter - iMyAngle>
  [187] setlocal 8 .............................. iRelAngleToChatter = iAngleToChatter - iMyAngle
  [189] getlocal 8 .............................. <iRelAngleToChatter>
  [191] pushint16 180 ........................... <180>
  [194] inv ..................................... <-180>
  [195] lt ...................................... <iRelAngleToChatter < -180>
  [196] jmpifz [207] ............................ if iRelAngleToChatter < -180 then
  [199] getlocal 8 .............................. <iRelAngleToChatter>
  [201] pushint16 360 ........................... <360>
  [204] add ..................................... <iRelAngleToChatter + 360>
  [205] setlocal 8 .............................. iRelAngleToChatter = iRelAngleToChatter + 360
  [207] getlocal 8 .............................. <iRelAngleToChatter>
  [209] pushint16 180 ........................... <180>
  [212] gt ...................................... <iRelAngleToChatter > 180>
  [213] jmpifz [224] ............................ if iRelAngleToChatter > 180 then
  [216] getlocal 8 .............................. <iRelAngleToChatter>
  [218] pushint16 360 ........................... <360>
  [221] sub ..................................... <iRelAngleToChatter - 360>
  [222] setlocal 8 .............................. iRelAngleToChatter = iRelAngleToChatter - 360
  [224] getlocal 8 .............................. <iRelAngleToChatter>
  [226] pushint8 90 ............................. <90>
  [228] inv ..................................... <-90>
  [229] gteq .................................... <iRelAngleToChatter >= -90>
  [230] getlocal 8 .............................. <iRelAngleToChatter>
  [232] pushint8 90 ............................. <90>
  [234] lteq .................................... <iRelAngleToChatter <= 90>
  [235] and ..................................... <(iRelAngleToChatter >= -90) and (iRelAngleToChatter <= 90)>
  [236] jmpifz [349] ............................ if (iRelAngleToChatter >= -90) and (iRelAngleToChatter <= 90) then / else
  [239] getlocal 8 .............................. <iRelAngleToChatter>
  [241] pushint8 30 ............................. <30>
  [243] inv ..................................... <-30>
  [244] gteq .................................... <iRelAngleToChatter >= -30>
  [245] getlocal 8 .............................. <iRelAngleToChatter>
  [247] pushint8 30 ............................. <30>
  [249] lteq .................................... <iRelAngleToChatter <= 30>
  [250] and ..................................... <(iRelAngleToChatter >= -30) and (iRelAngleToChatter <= 30)>
  [251] jmpifz [260] ............................ if (iRelAngleToChatter >= -30) and (iRelAngleToChatter <= 30) then / else
  [254] pushzero ................................ <0>
  [255] setlocal 9 .............................. iTurnDir = 0
  [257] jmp [276]
  [260] getlocal 8 .............................. <iRelAngleToChatter>
  [262] getlocal 8 .............................. <iRelAngleToChatter>
  [264] pusharglist 1 ........................... <iRelAngleToChatter>
  [266] extcall 496 ............................. <abs(iRelAngleToChatter)>
  [269] div ..................................... <iRelAngleToChatter / abs(iRelAngleToChatter)>
  [270] pusharglist 1 ........................... <iRelAngleToChatter / abs(iRelAngleToChatter)>
  [272] extcall 108 ............................. <integer(iRelAngleToChatter / abs(iRelAngleToChatter))>
  [274] setlocal 9 .............................. iTurnDir = integer(iRelAngleToChatter / abs(iRelAngleToChatter))
  [276] getlocal 9 .............................. <iTurnDir>
  [278] peek 0 .................................. case iTurnDir of
  [280] pushint8 1 .............................. <1>
  [282] eq
  [283] jmpifz [301] ............................ (case) 1:
  [286] getparam 0 .............................. <me>
  [288] getchainedprop 776 ...................... <me.oEngine>
  [291] pushint8 1 .............................. <1>
  [293] pusharglistnoret 2 ...................... <me.oEngine, 1>
  [295] objcall 842 ............................. me.oEngine.lookRight(1)
  [298] jmp [344]
  [301] peek 0
  [303] pushint8 1 .............................. <1>
  [305] inv ..................................... <-1>
  [306] eq
  [307] jmpifz [325] ............................ (case) (-1):
  [310] getparam 0 .............................. <me>
  [312] getchainedprop 776 ...................... <me.oEngine>
  [315] pushint8 1 .............................. <1>
  [317] pusharglistnoret 2 ...................... <me.oEngine, 1>
  [319] objcall 843 ............................. me.oEngine.lookLeft(1)
  [322] jmp [344]
  [325] peek 0
  [327] pushzero ................................ <0>
  [328] eq
  [329] jmpifz [344] ............................ (case) 0:
  [332] getparam 0 .............................. <me>
  [334] getchainedprop 776 ...................... <me.oEngine>
  [337] pushint8 1 .............................. <1>
  [339] pusharglistnoret 2 ...................... <me.oEngine, 1>
  [341] objcall 818 ............................. me.oEngine.lookStraight(1)
  [344] pop 1 ................................... end case
  [346] jmp [353]
  [349] pusharglistnoret 0 ...................... <>
  [351] extcall 93 .............................. return 
  [353] ret
end

on isBot me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 772 .......................... <me.bBot>
  [  5] pusharglistnoret 1 ...................... <me.bBot>
  [  7] extcall 93 .............................. return me.bBot
  [  9] ret
end

on setBot me, _bBot
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bBot>
  [  4] setobjprop 772 .......................... me.bBot = _bBot
  [  7] ret
end
