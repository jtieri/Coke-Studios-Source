property iShapeSprite, aTileSprites, aPatterns, sCastLib
global oIsoScene

on new me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 983 ............................. <me.loadPatterns()>
  [  9] setobjprop 988 .......................... me.aPatterns = me.loadPatterns()
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 132 ............................. <VOID>
  [ 18] setobjprop 989 .......................... me.iShapeSprite = VOID
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setobjprop 990 .......................... me.aTileSprites = []
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 0 .............................. <"Studio">
  [ 33] setobjprop 284 .......................... me.sCastLib = "Studio"
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] extcall 93 .............................. return me
  [ 42] ret
end

on Init me, oXml
  [  0] getparam 1 .............................. <oXml>
  [  2] pusharglist 1 ........................... <oXml>
  [  4] extcall 106 ............................. <voidp(oXml)>
  [  6] jmpifz [ 13] ............................ if voidp(oXml) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 1 .............................. <oXml>
  [ 15] pushcons 1 .............................. <"Shape">
  [ 17] pusharglist 2 ........................... <oXml, "Shape">
  [ 19] extcall 180 ............................. <getNode(oXml, "Shape")>
  [ 21] setlocal 0 .............................. oShapeNode = getNode(oXml, "Shape")
  [ 23] getlocal 0 .............................. <oShapeNode>
  [ 25] pusharglist 1 ........................... <oShapeNode>
  [ 27] extcall 106 ............................. <voidp(oShapeNode)>
  [ 29] not ..................................... <not voidp(oShapeNode)>
  [ 30] jmpifz [ 55] ............................ if not voidp(oShapeNode) then
  [ 33] getglobal 88 ............................ <oIsoScene>
  [ 35] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 37] getlocal 0 .............................. <oShapeNode>
  [ 39] pusharglist 2 ........................... <oIsoScene.oSpriteManager, oShapeNode>
  [ 41] objcall 623 ............................. <oIsoScene.oSpriteManager.buildSpriteProps(oShapeNode)>
  [ 44] setlocal 1 .............................. aProps = oIsoScene.oSpriteManager.buildSpriteProps(oShapeNode)
  [ 46] getparam 0 .............................. <me>
  [ 48] getlocal 1 .............................. <aProps>
  [ 50] pusharglistnoret 2 ...................... <me, aProps>
  [ 52] objcall 980 ............................. me.drawFloorShape(aProps)
  [ 55] getparam 1 .............................. <oXml>
  [ 57] pushcons 2 .............................. <"FloorTiles">
  [ 59] pusharglist 2 ........................... <oXml, "FloorTiles">
  [ 61] extcall 180 ............................. <getNode(oXml, "FloorTiles")>
  [ 63] setlocal 2 .............................. oFloorTiles = getNode(oXml, "FloorTiles")
  [ 65] getlocal 2 .............................. <oFloorTiles>
  [ 67] pusharglist 1 ........................... <oFloorTiles>
  [ 69] extcall 106 ............................. <voidp(oFloorTiles)>
  [ 71] not ..................................... <not voidp(oFloorTiles)>
  [ 72] jmpifz [230] ............................ if not voidp(oFloorTiles) then
  [ 75] getglobal 88 ............................ <oIsoScene>
  [ 77] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 79] getlocal 2 .............................. <oFloorTiles>
  [ 81] pusharglist 2 ........................... <oIsoScene.oSpriteManager, oFloorTiles>
  [ 83] objcall 623 ............................. <oIsoScene.oSpriteManager.buildSpriteProps(oFloorTiles)>
  [ 86] setlocal 1 .............................. aProps = oIsoScene.oSpriteManager.buildSpriteProps(oFloorTiles)
  [ 88] getlocal 2 .............................. <oFloorTiles>
  [ 90] pushcons 3 .............................. <"FloorTile">
  [ 92] pusharglist 2 ........................... <oFloorTiles, "FloorTile">
  [ 94] extcall 979 ............................. <getNodes(oFloorTiles, "FloorTile")>
  [ 97] setlocal 3 .............................. aFloorTiles = getNodes(oFloorTiles, "FloorTile")
  [ 99] getlocal 3 .............................. <aFloorTiles>
  [101] getobjprop 150 .......................... <aFloorTiles.count>
  [103] setlocal 4
  [105] getlocal 4
  [107] pushint8 1 .............................. <1>
  [109] gteq
  [110] jmpifz [230] ............................ repeat with i = aFloorTiles.count down to 1
  [113] getlocal 3 .............................. <aFloorTiles>
  [115] getlocal 4 .............................. <i>
  [117] pusharglist 2 ........................... <aFloorTiles, i>
  [119] objcall 151 ............................. <aFloorTiles[i]>
  [121] setlocal 5 .............................. oFloorTile = aFloorTiles[i]
  [123] getlocal 5 .............................. <oFloorTile>
  [125] pusharglist 1 ........................... <oFloorTile>
  [127] objcall 263 ............................. <oFloorTile.toString()>
  [130] setlocal 6 .............................. sFloorTile = oFloorTile.toString()
  [132] getlocal 5 .............................. <oFloorTile>
  [134] getchainedprop 109 ...................... <oFloorTile.attributes>
  [136] getobjprop 645 .......................... <oFloorTile.attributes.row>
  [139] pusharglist 1 ........................... <oFloorTile.attributes.row>
  [141] extcall 108 ............................. <integer(oFloorTile.attributes.row)>
  [143] setlocal 7 .............................. iRow = integer(oFloorTile.attributes.row)
  [145] getlocal 5 .............................. <oFloorTile>
  [147] getchainedprop 109 ...................... <oFloorTile.attributes>
  [149] getobjprop 646 .......................... <oFloorTile.attributes.col>
  [152] pusharglist 1 ........................... <oFloorTile.attributes.col>
  [154] extcall 108 ............................. <integer(oFloorTile.attributes.col)>
  [156] setlocal 8 .............................. iCol = integer(oFloorTile.attributes.col)
  [158] pushzero ................................ <0>
  [159] setlocal 9 .............................. iXOff = 0
  [161] pushzero ................................ <0>
  [162] setlocal 10 ............................. iYOff = 0
  [164] getlocal 6 .............................. <sFloorTile>
  [166] pushcons 4 .............................. <"xoff=">
  [168] containsstr ............................. <sFloorTile contains "xoff=">
  [169] jmpifz [184] ............................ if sFloorTile contains "xoff=" then
  [172] getlocal 5 .............................. <oFloorTile>
  [174] getchainedprop 109 ...................... <oFloorTile.attributes>
  [176] getobjprop 112 .......................... <oFloorTile.attributes.xoff>
  [178] pusharglist 1 ........................... <oFloorTile.attributes.xoff>
  [180] extcall 108 ............................. <integer(oFloorTile.attributes.xoff)>
  [182] setlocal 9 .............................. iXOff = integer(oFloorTile.attributes.xoff)
  [184] getlocal 6 .............................. <sFloorTile>
  [186] pushcons 5 .............................. <"yoff=">
  [188] containsstr ............................. <sFloorTile contains "yoff=">
  [189] jmpifz [204] ............................ if sFloorTile contains "yoff=" then
  [192] getlocal 5 .............................. <oFloorTile>
  [194] getchainedprop 109 ...................... <oFloorTile.attributes>
  [196] getobjprop 113 .......................... <oFloorTile.attributes.yoff>
  [198] pusharglist 1 ........................... <oFloorTile.attributes.yoff>
  [200] extcall 108 ............................. <integer(oFloorTile.attributes.yoff)>
  [202] setlocal 10 ............................. iYOff = integer(oFloorTile.attributes.yoff)
  [204] getparam 0 .............................. <me>
  [206] getlocal 7 .............................. <iRow>
  [208] getlocal 8 .............................. <iCol>
  [210] getlocal 1 .............................. <aProps>
  [212] getlocal 9 .............................. <iXOff>
  [214] getlocal 10 ............................. <iYOff>
  [216] pusharglistnoret 6 ...................... <me, iRow, iCol, aProps, iXOff, iYOff>
  [218] objcall 981 ............................. me.drawFloortile(iRow, iCol, aProps, iXOff, iYOff)
  [221] pushint8 -1
  [223] getlocal 4
  [225] add
  [226] setlocal 4
  [228] endrepeat [105]
  [230] ret
end

on drawFloorShape me, aProps
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 1 .............................. <aProps>
  [  6] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [  8] objcall 622 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [ 11] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [ 13] getlocal 0 .............................. <iSprite>
  [ 15] pusharglist 1 ........................... <iSprite>
  [ 17] extcall 481 ............................. <sprite(iSprite)>
  [ 20] getlocal 0 .............................. <iSprite>
  [ 22] pusharglist 1 ........................... <iSprite>
  [ 24] extcall 481 ............................. <sprite(iSprite)>
  [ 27] getobjprop 328 .......................... <sprite(iSprite).locH>
  [ 30] pushint8 1 .............................. <1>
  [ 32] sub ..................................... <sprite(iSprite).locH - 1>
  [ 33] setobjprop 328 .......................... sprite(iSprite).locH = sprite(iSprite).locH - 1
  [ 36] getlocal 0 .............................. <iSprite>
  [ 38] pusharglist 1 ........................... <iSprite>
  [ 40] extcall 481 ............................. <sprite(iSprite)>
  [ 43] getlocal 0 .............................. <iSprite>
  [ 45] pusharglist 1 ........................... <iSprite>
  [ 47] extcall 481 ............................. <sprite(iSprite)>
  [ 50] getobjprop 329 .......................... <sprite(iSprite).locV>
  [ 53] pushint8 2 .............................. <2>
  [ 55] sub ..................................... <sprite(iSprite).locV - 2>
  [ 56] setobjprop 329 .......................... sprite(iSprite).locV = sprite(iSprite).locV - 2
  [ 59] getparam 0 .............................. <me>
  [ 61] getlocal 0 .............................. <iSprite>
  [ 63] setobjprop 989 .......................... me.iShapeSprite = iSprite
  [ 66] getparam 0 .............................. <me>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pushint8 1 .............................. <1>
  [ 72] getparam 0 .............................. <me>
  [ 74] getobjprop 989 .......................... <me.iShapeSprite>
  [ 77] pusharglistnoret 4 ...................... <me, 1, 1, me.iShapeSprite>
  [ 79] objcall 984 ............................. me.setPattern(1, 1, me.iShapeSprite)
  [ 82] ret
end

on drawFloortile me, iRow, iCol, aProps, iXOff, iYOff
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [  4] getparam 1 .............................. <iRow>
  [  6] getparam 2 .............................. <iCol>
  [  8] pusharglist 3 ........................... <oIsoScene.oGrid, iRow, iCol>
  [ 10] objcall 314 ............................. <oIsoScene.oGrid.getSquareByRowCol(iRow, iCol)>
  [ 13] setlocal 0 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(iRow, iCol)
  [ 15] getlocal 0 .............................. <oSquare>
  [ 17] getchainedprop 342 ...................... <oSquare.oViewPoints>
  [ 20] getobjprop 340 .......................... <oSquare.oViewPoints.bl>
  [ 23] setlocal 1 .............................. oLoc = oSquare.oViewPoints.bl
  [ 25] getparam 3 .............................. <aProps>
  [ 27] pushsymb 146 ............................ <#x>
  [ 29] getlocal 1 .............................. <oLoc>
  [ 31] getobjprop 328 .......................... <oLoc.locH>
  [ 34] pusharglistnoret 3 ...................... <aProps, #x, oLoc.locH>
  [ 36] objcall 919 ............................. aProps[#x] = oLoc.locH
  [ 39] getparam 3 .............................. <aProps>
  [ 41] pushsymb 344 ............................ <#y>
  [ 44] getlocal 1 .............................. <oLoc>
  [ 46] getobjprop 329 .......................... <oLoc.locV>
  [ 49] pusharglistnoret 3 ...................... <aProps, #y, oLoc.locV>
  [ 51] objcall 919 ............................. aProps[#y] = oLoc.locV
  [ 54] getglobal 88 ............................ <oIsoScene>
  [ 56] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 58] getparam 3 .............................. <aProps>
  [ 60] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [ 62] objcall 622 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [ 65] setlocal 2 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [ 67] getparam 4 .............................. <iXOff>
  [ 69] pusharglist 1 ........................... <iXOff>
  [ 71] extcall 106 ............................. <voidp(iXOff)>
  [ 73] not ..................................... <not voidp(iXOff)>
  [ 74] jmpifz [100] ............................ if not voidp(iXOff) then
  [ 77] getlocal 2 .............................. <iSprite>
  [ 79] pusharglist 1 ........................... <iSprite>
  [ 81] extcall 481 ............................. <sprite(iSprite)>
  [ 84] getlocal 2 .............................. <iSprite>
  [ 86] pusharglist 1 ........................... <iSprite>
  [ 88] extcall 481 ............................. <sprite(iSprite)>
  [ 91] getobjprop 328 .......................... <sprite(iSprite).locH>
  [ 94] getparam 4 .............................. <iXOff>
  [ 96] add ..................................... <sprite(iSprite).locH + iXOff>
  [ 97] setobjprop 328 .......................... sprite(iSprite).locH = sprite(iSprite).locH + iXOff
  [100] getparam 5 .............................. <iYOff>
  [102] pusharglist 1 ........................... <iYOff>
  [104] extcall 106 ............................. <voidp(iYOff)>
  [106] not ..................................... <not voidp(iYOff)>
  [107] jmpifz [133] ............................ if not voidp(iYOff) then
  [110] getlocal 2 .............................. <iSprite>
  [112] pusharglist 1 ........................... <iSprite>
  [114] extcall 481 ............................. <sprite(iSprite)>
  [117] getlocal 2 .............................. <iSprite>
  [119] pusharglist 1 ........................... <iSprite>
  [121] extcall 481 ............................. <sprite(iSprite)>
  [124] getobjprop 329 .......................... <sprite(iSprite).locV>
  [127] getparam 5 .............................. <iYOff>
  [129] add ..................................... <sprite(iSprite).locV + iYOff>
  [130] setobjprop 329 .......................... sprite(iSprite).locV = sprite(iSprite).locV + iYOff
  [133] getlocal 2 .............................. <iSprite>
  [135] pusharglist 1 ........................... <iSprite>
  [137] extcall 481 ............................. <sprite(iSprite)>
  [140] getlocal 2 .............................. <iSprite>
  [142] pusharglist 1 ........................... <iSprite>
  [144] extcall 481 ............................. <sprite(iSprite)>
  [147] getobjprop 328 .......................... <sprite(iSprite).locH>
  [150] pushzero ................................ <0>
  [151] sub ..................................... <sprite(iSprite).locH - 0>
  [152] setobjprop 328 .......................... sprite(iSprite).locH = sprite(iSprite).locH - 0
  [155] getlocal 2 .............................. <iSprite>
  [157] pusharglist 1 ........................... <iSprite>
  [159] extcall 481 ............................. <sprite(iSprite)>
  [162] getlocal 2 .............................. <iSprite>
  [164] pusharglist 1 ........................... <iSprite>
  [166] extcall 481 ............................. <sprite(iSprite)>
  [169] getobjprop 329 .......................... <sprite(iSprite).locV>
  [172] pushzero ................................ <0>
  [173] sub ..................................... <sprite(iSprite).locV - 0>
  [174] setobjprop 329 .......................... sprite(iSprite).locV = sprite(iSprite).locV - 0
  [177] getparam 0 .............................. <me>
  [179] getchainedprop 990 ...................... <me.aTileSprites>
  [182] getlocal 2 .............................. <iSprite>
  [184] pusharglistnoret 2 ...................... <me.aTileSprites, iSprite>
  [186] objcall 135 ............................. me.aTileSprites.add(iSprite)
  [188] getparam 0 .............................. <me>
  [190] pushint8 1 .............................. <1>
  [192] pushint8 1 .............................. <1>
  [194] getlocal 2 .............................. <iSprite>
  [196] pusharglistnoret 4 ...................... <me, 1, 1, iSprite>
  [198] objcall 984 ............................. me.setPattern(1, 1, iSprite)
  [201] ret
end

on mouseDownEvent me, iSprite, oSprite
  [  0] ret
end

on mouseIsOverFloor me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bRollover = 0
  [  3] pushint8 1 .............................. <1>
  [  5] setlocal 1
  [  7] getlocal 1
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 990 ............................ <#aTileSprites>
  [ 14] pusharglist 2 ........................... <me, #aTileSprites>
  [ 16] objcall 150 ............................. <me.aTileSprites.count>
  [ 18] lteq
  [ 19] jmpifz [ 58] ............................ repeat with i = 1 to me.aTileSprites.count
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 990 ............................ <#aTileSprites>
  [ 27] getlocal 1 .............................. <i>
  [ 29] pusharglist 3 ........................... <me, #aTileSprites, i>
  [ 31] objcall 611 ............................. <me.aTileSprites[i]>
  [ 34] pusharglist 1 ........................... <me.aTileSprites[i]>
  [ 36] extcall 799 ............................. <rollover(me.aTileSprites[i])>
  [ 39] jmpifz [ 49] ............................ if rollover(me.aTileSprites[i]) then
  [ 42] pushint8 1 .............................. <1>
  [ 44] setlocal 0 .............................. bRollover = 1
  [ 46] jmp [ 58] ............................... exit repeat
  [ 49] pushint8 1
  [ 51] getlocal 1
  [ 53] add
  [ 54] setlocal 1
  [ 56] endrepeat [  7]
  [ 58] getlocal 0 .............................. <bRollover>
  [ 60] pusharglistnoret 1 ...................... <bRollover>
  [ 62] extcall 93 .............................. return bRollover
  [ 64] ret
end

on destroy me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 989 .......................... <me.iShapeSprite>
  [  9] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.iShapeSprite>
  [ 11] objcall 535 ............................. oIsoScene.oSpriteManager.returnPooledSprite(me.iShapeSprite)
  [ 14] getglobal 88 ............................ <oIsoScene>
  [ 16] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 990 .......................... <me.aTileSprites>
  [ 23] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.aTileSprites>
  [ 25] objcall 620 ............................. oIsoScene.oSpriteManager.returnPooledSprites(me.aTileSprites)
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 0 ........................... <[]>
  [ 32] pushlist ................................ <[]>
  [ 33] setobjprop 990 .......................... me.aTileSprites = []
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 0 ........................... <>
  [ 40] extcall 132 ............................. <VOID>
  [ 42] setobjprop 989 .......................... me.iShapeSprite = VOID
  [ 45] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 990 .......................... <me.aTileSprites>
  [  5] peek 0
  [  7] pusharglist 1
  [  9] extcall 150
  [ 11] pushint8 1
  [ 13] peek 0
  [ 15] peek 2
  [ 17] lteq
  [ 18] jmpifz [ 80] ............................ repeat with i in me.aTileSprites
  [ 21] peek 2
  [ 23] peek 1
  [ 25] pusharglist 2
  [ 27] extcall 151
  [ 29] setlocal 0
  [ 31] pusharglist 0 ........................... <>
  [ 33] thebuiltin 266 .......................... <the optionDown>
  [ 36] jmpifz [ 54] ............................ if the optionDown then
  [ 39] getlocal 0 .............................. <i>
  [ 41] pusharglist 1 ........................... <i>
  [ 43] extcall 481 ............................. <sprite(i)>
  [ 46] pushint8 1 .............................. <1>
  [ 48] setobjprop 493 .......................... sprite(i).visible = 1
  [ 51] jmp [ 75] ............................... next repeat
  [ 54] getlocal 0 .............................. <i>
  [ 56] pusharglist 1 ........................... <i>
  [ 58] extcall 481 ............................. <sprite(i)>
  [ 61] getlocal 0 .............................. <i>
  [ 63] pusharglist 1 ........................... <i>
  [ 65] extcall 481 ............................. <sprite(i)>
  [ 68] getobjprop 493 .......................... <sprite(i).visible>
  [ 71] not ..................................... <not sprite(i).visible>
  [ 72] setobjprop 493 .......................... sprite(i).visible = not sprite(i).visible
  [ 75] pushint8 1
  [ 77] add
  [ 78] endrepeat [ 13]
  [ 80] pop 3
  [ 82] getparam 0 .............................. <me>
  [ 84] getobjprop 989 .......................... <me.iShapeSprite>
  [ 87] pusharglist 1 ........................... <me.iShapeSprite>
  [ 89] extcall 106 ............................. <voidp(me.iShapeSprite)>
  [ 91] not ..................................... <not voidp(me.iShapeSprite)>
  [ 92] jmpifz [122] ............................ if not voidp(me.iShapeSprite) then
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 989 .......................... <me.iShapeSprite>
  [100] pusharglist 1 ........................... <me.iShapeSprite>
  [102] extcall 481 ............................. <sprite(me.iShapeSprite)>
  [105] getparam 0 .............................. <me>
  [107] getobjprop 989 .......................... <me.iShapeSprite>
  [110] pusharglist 1 ........................... <me.iShapeSprite>
  [112] extcall 481 ............................. <sprite(me.iShapeSprite)>
  [115] getobjprop 493 .......................... <sprite(me.iShapeSprite).visible>
  [118] not ..................................... <not sprite(me.iShapeSprite).visible>
  [119] setobjprop 493 .......................... sprite(me.iShapeSprite).visible = not sprite(me.iShapeSprite).visible
  [122] ret
end

on hideDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 990 .......................... <me.aTileSprites>
  [  5] peek 0
  [  7] pusharglist 1
  [  9] extcall 150
  [ 11] pushint8 1
  [ 13] peek 0
  [ 15] peek 2
  [ 17] lteq
  [ 18] jmpifz [ 47] ............................ repeat with i in me.aTileSprites
  [ 21] peek 2
  [ 23] peek 1
  [ 25] pusharglist 2
  [ 27] extcall 151
  [ 29] setlocal 0
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 1 ........................... <i>
  [ 35] extcall 481 ............................. <sprite(i)>
  [ 38] pushzero ................................ <0>
  [ 39] setobjprop 493 .......................... sprite(i).visible = 0
  [ 42] pushint8 1
  [ 44] add
  [ 45] endrepeat [ 13]
  [ 47] pop 3
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 989 .......................... <me.iShapeSprite>
  [ 54] pusharglist 1 ........................... <me.iShapeSprite>
  [ 56] extcall 106 ............................. <voidp(me.iShapeSprite)>
  [ 58] not ..................................... <not voidp(me.iShapeSprite)>
  [ 59] jmpifz [ 76] ............................ if not voidp(me.iShapeSprite) then
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 989 .......................... <me.iShapeSprite>
  [ 67] pusharglist 1 ........................... <me.iShapeSprite>
  [ 69] extcall 481 ............................. <sprite(me.iShapeSprite)>
  [ 72] pushzero ................................ <0>
  [ 73] setobjprop 493 .......................... sprite(me.iShapeSprite).visible = 0
  [ 76] ret
end

on loadPatterns me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aFloorPatterns = [:]
  [  5] pushcons 6 .............................. <"floorpattern_patterns_index">
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 284 .......................... <me.sCastLib>
  [ 12] pusharglist 2 ........................... <"floorpattern_patterns_index", me.sCastLib>
  [ 14] extcall 163 ............................. <member("floorpattern_patterns_index", me.sCastLib)>
  [ 16] setlocal 1 .............................. oPatternMember = member("floorpattern_patterns_index", me.sCastLib)
  [ 18] getlocal 1 .............................. <oPatternMember>
  [ 20] getobjprop 639 .......................... <oPatternMember.memberNum>
  [ 23] pushint8 1 .............................. <1>
  [ 25] inv ..................................... <-1>
  [ 26] eq ...................................... <oPatternMember.memberNum = -1>
  [ 27] jmpifz [ 36] ............................ if oPatternMember.memberNum = -1 then
  [ 30] getlocal 0 .............................. <aFloorPatterns>
  [ 32] pusharglistnoret 1 ...................... <aFloorPatterns>
  [ 34] extcall 93 .............................. return aFloorPatterns
  [ 36] getlocal 1 .............................. <oPatternMember>
  [ 38] getobjprop 164 .......................... <oPatternMember.text>
  [ 40] setlocal 2 .............................. sPatternText = oPatternMember.text
  [ 42] pushint8 1 .............................. <1>
  [ 44] setlocal 3
  [ 46] getlocal 3
  [ 48] getlocal 2 .............................. <sPatternText>
  [ 50] pushsymb 997 ............................ <#lines>
  [ 53] pusharglist 2 ........................... <sPatternText, #lines>
  [ 55] objcall 150 ............................. <sPatternText.lines.count>
  [ 57] lteq
  [ 58] jmpifz [212] ............................ repeat with i = 1 to sPatternText.lines.count
  [ 61] getlocal 2 .............................. <sPatternText>
  [ 63] pushsymb 998 ............................ <#line>
  [ 66] getlocal 3 .............................. <i>
  [ 68] pusharglist 3 ........................... <sPatternText, #line, i>
  [ 70] objcall 611 ............................. <sPatternText.line[i]>
  [ 73] setlocal 4 .............................. sPatternLine = sPatternText.line[i]
  [ 75] getlocal 4 .............................. <sPatternLine>
  [ 77] pusharglist 1 ........................... <sPatternLine>
  [ 79] extcall 999 ............................. <value(sPatternLine)>
  [ 82] setlocal 5 .............................. aPatternList = value(sPatternLine)
  [ 84] getlocal 5 .............................. <aPatternList>
  [ 86] getobjprop 161 .......................... <aPatternList.name>
  [ 88] setlocal 6 .............................. sPatternName = aPatternList.name
  [ 90] getlocal 5 .............................. <aPatternList>
  [ 92] getobjprop 1000 ......................... <aPatternList.field>
  [ 95] setlocal 7 .............................. sColorField = aPatternList.field
  [ 97] pusharglist 0 ........................... <[]>
  [ 99] pushlist ................................ <[]>
  [100] setlocal 8 .............................. aColors = []
  [102] getlocal 7 .............................. <sColorField>
  [104] getparam 0 .............................. <me>
  [106] getobjprop 284 .......................... <me.sCastLib>
  [109] pusharglist 2 ........................... <sColorField, me.sCastLib>
  [111] extcall 163 ............................. <member(sColorField, me.sCastLib)>
  [113] setlocal 9 .............................. oColorsMember = member(sColorField, me.sCastLib)
  [115] getlocal 9 .............................. <oColorsMember>
  [117] getobjprop 164 .......................... <oColorsMember.text>
  [119] setlocal 10 ............................. sColorsText = oColorsMember.text
  [121] pushint8 1 .............................. <1>
  [123] setlocal 11
  [125] getlocal 11
  [127] getlocal 10 ............................. <sColorsText>
  [129] pushsymb 997 ............................ <#lines>
  [132] pusharglist 2 ........................... <sColorsText, #lines>
  [134] objcall 150 ............................. <sColorsText.lines.count>
  [136] lteq
  [137] jmpifz [180] ............................ repeat with ii = 1 to sColorsText.lines.count
  [140] getlocal 10 ............................. <sColorsText>
  [142] pushsymb 998 ............................ <#line>
  [145] getlocal 11 ............................. <ii>
  [147] pusharglist 3 ........................... <sColorsText, #line, ii>
  [149] objcall 611 ............................. <sColorsText.line[ii]>
  [152] setlocal 12 ............................. sColorLine = sColorsText.line[ii]
  [154] getlocal 12 ............................. <sColorLine>
  [156] pusharglist 1 ........................... <sColorLine>
  [158] extcall 999 ............................. <value(sColorLine)>
  [161] setlocal 13 ............................. aColorsList = value(sColorLine)
  [163] getlocal 8 .............................. <aColors>
  [165] getlocal 13 ............................. <aColorsList>
  [167] pusharglistnoret 2 ...................... <aColors, aColorsList>
  [169] objcall 135 ............................. aColors.add(aColorsList)
  [171] pushint8 1
  [173] getlocal 11
  [175] add
  [176] setlocal 11
  [178] endrepeat [125]
  [180] getlocal 8 .............................. <aColors>
  [182] pusharglist 1 ........................... <aColors>
  [184] extcall 106 ............................. <voidp(aColors)>
  [186] jmpifz [192] ............................ if voidp(aColors) then
  [189] jmp [203] ............................... next repeat
  [192] getlocal 0 .............................. <aFloorPatterns>
  [194] getlocal 6 .............................. <sPatternName>
  [196] getlocal 8 .............................. <aColors>
  [198] pusharglistnoret 3 ...................... <aFloorPatterns, sPatternName, aColors>
  [200] objcall 388 ............................. aFloorPatterns.addProp(sPatternName, aColors)
  [203] pushint8 1
  [205] getlocal 3
  [207] add
  [208] setlocal 3
  [210] endrepeat [ 46]
  [212] getlocal 0 .............................. <aFloorPatterns>
  [214] pusharglistnoret 1 ...................... <aFloorPatterns>
  [216] extcall 93 .............................. return aFloorPatterns
  [218] ret
end

on setPattern me, iPatternIndex, iColorIndex, iSprite
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 988 ............................ <#aPatterns>
  [  5] pusharglist 2 ........................... <me, #aPatterns>
  [  7] objcall 150 ............................. <me.aPatterns.count>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <me.aPatterns.count = 0>
  [ 11] jmpifz [ 18] ............................ if me.aPatterns.count = 0 then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 93 .............................. return 
  [ 18] getparam 1 .............................. <iPatternIndex>
  [ 20] pusharglist 1 ........................... <iPatternIndex>
  [ 22] extcall 106 ............................. <voidp(iPatternIndex)>
  [ 24] jmpifz [ 31] ............................ if voidp(iPatternIndex) then
  [ 27] pushint8 1 .............................. <1>
  [ 29] setparam 1 .............................. iPatternIndex = 1
  [ 31] getparam 2 .............................. <iColorIndex>
  [ 33] pusharglist 1 ........................... <iColorIndex>
  [ 35] extcall 106 ............................. <voidp(iColorIndex)>
  [ 37] jmpifz [ 44] ............................ if voidp(iColorIndex) then
  [ 40] pushint8 1 .............................. <1>
  [ 42] setparam 2 .............................. iColorIndex = 1
  [ 44] getparam 1 .............................. <iPatternIndex>
  [ 46] pushint8 1 .............................. <1>
  [ 48] lt ...................................... <iPatternIndex < 1>
  [ 49] getparam 1 .............................. <iPatternIndex>
  [ 51] getparam 0 .............................. <me>
  [ 53] pushsymb 988 ............................ <#aPatterns>
  [ 56] pusharglist 2 ........................... <me, #aPatterns>
  [ 58] objcall 150 ............................. <me.aPatterns.count>
  [ 60] gt ...................................... <iPatternIndex > me.aPatterns.count>
  [ 61] or ...................................... <(iPatternIndex < 1) or (iPatternIndex > me.aPatterns.count)>
  [ 62] jmpifz [ 69] ............................ if (iPatternIndex < 1) or (iPatternIndex > me.aPatterns.count) then
  [ 65] pushint8 1 .............................. <1>
  [ 67] setparam 1 .............................. iPatternIndex = 1
  [ 69] getparam 0 .............................. <me>
  [ 71] getchainedprop 988 ...................... <me.aPatterns>
  [ 74] getparam 1 .............................. <iPatternIndex>
  [ 76] pusharglist 2 ........................... <me.aPatterns, iPatternIndex>
  [ 78] objcall 957 ............................. <me.aPatterns.getPropAt(iPatternIndex)>
  [ 81] setlocal 0 .............................. sPatternName = me.aPatterns.getPropAt(iPatternIndex)
  [ 83] getparam 0 .............................. <me>
  [ 85] pushsymb 988 ............................ <#aPatterns>
  [ 88] getparam 1 .............................. <iPatternIndex>
  [ 90] pusharglist 3 ........................... <me, #aPatterns, iPatternIndex>
  [ 92] objcall 611 ............................. <me.aPatterns[iPatternIndex]>
  [ 95] setlocal 1 .............................. aColors = me.aPatterns[iPatternIndex]
  [ 97] getparam 2 .............................. <iColorIndex>
  [ 99] pushint8 1 .............................. <1>
  [101] lt ...................................... <iColorIndex < 1>
  [102] getparam 2 .............................. <iColorIndex>
  [104] getlocal 1 .............................. <aColors>
  [106] getobjprop 150 .......................... <aColors.count>
  [108] gt ...................................... <iColorIndex > aColors.count>
  [109] or ...................................... <(iColorIndex < 1) or (iColorIndex > aColors.count)>
  [110] jmpifz [117] ............................ if (iColorIndex < 1) or (iColorIndex > aColors.count) then
  [113] pushint8 1 .............................. <1>
  [115] setparam 2 .............................. iColorIndex = 1
  [117] getlocal 1 .............................. <aColors>
  [119] getparam 2 .............................. <iColorIndex>
  [121] pusharglist 2 ........................... <aColors, iColorIndex>
  [123] objcall 151 ............................. <aColors[iColorIndex]>
  [125] setlocal 2 .............................. aColorData = aColors[iColorIndex]
  [127] getlocal 2 .............................. <aColorData>
  [129] pusharglist 0 ........................... <>
  [131] extcall 132 ............................. <VOID>
  [133] eq ...................................... <aColorData = VOID>
  [134] jmpifz [142] ............................ if aColorData = VOID then
  [137] pusharglistnoret 0 ...................... <>
  [139] extcall 258 ............................. nothing()
  [142] getparam 3 .............................. <iSprite>
  [144] getparam 0 .............................. <me>
  [146] getobjprop 989 .......................... <me.iShapeSprite>
  [149] eq ...................................... <iSprite = me.iShapeSprite>
  [150] jmpifz [173] ............................ if iSprite = me.iShapeSprite then
  [153] getparam 0 .............................. <me>
  [155] getlocal 0 .............................. <sPatternName>
  [157] getlocal 2 .............................. <aColorData>
  [159] getparam 0 .............................. <me>
  [161] getobjprop 989 .......................... <me.iShapeSprite>
  [164] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, me.iShapeSprite>
  [166] objcall 985 ............................. me.displayShapePattern(sPatternName, aColorData, me.iShapeSprite)
  [169] pusharglistnoret 0 ...................... <>
  [171] extcall 93 .............................. return 
  [173] getparam 3 .............................. <iSprite>
  [175] pusharglist 1 ........................... <iSprite>
  [177] extcall 106 ............................. <voidp(iSprite)>
  [179] jmpifz [252] ............................ if voidp(iSprite) then / else
  [182] getparam 0 .............................. <me>
  [184] getlocal 0 .............................. <sPatternName>
  [186] getlocal 2 .............................. <aColorData>
  [188] getparam 0 .............................. <me>
  [190] getobjprop 989 .......................... <me.iShapeSprite>
  [193] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, me.iShapeSprite>
  [195] objcall 985 ............................. me.displayShapePattern(sPatternName, aColorData, me.iShapeSprite)
  [198] getparam 0 .............................. <me>
  [200] getobjprop 990 .......................... <me.aTileSprites>
  [203] peek 0
  [205] pusharglist 1
  [207] extcall 150
  [209] pushint8 1
  [211] peek 0
  [213] peek 2
  [215] lteq
  [216] jmpifz [247] ............................ repeat with i in me.aTileSprites
  [219] peek 2
  [221] peek 1
  [223] pusharglist 2
  [225] extcall 151
  [227] setlocal 3
  [229] getparam 0 .............................. <me>
  [231] getlocal 0 .............................. <sPatternName>
  [233] getlocal 2 .............................. <aColorData>
  [235] getlocal 3 .............................. <i>
  [237] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, i>
  [239] objcall 986 ............................. me.displayPattern(sPatternName, aColorData, i)
  [242] pushint8 1
  [244] add
  [245] endrepeat [211]
  [247] pop 3
  [249] jmp [265]
  [252] getparam 0 .............................. <me>
  [254] getlocal 0 .............................. <sPatternName>
  [256] getlocal 2 .............................. <aColorData>
  [258] getparam 3 .............................. <iSprite>
  [260] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, iSprite>
  [262] objcall 986 ............................. me.displayPattern(sPatternName, aColorData, iSprite)
  [265] ret
end

on displayShapePattern me, sPatternName, aColorData, iSprite
  [  0] getparam 3 .............................. <iSprite>
  [  2] pusharglist 1 ........................... <iSprite>
  [  4] extcall 481 ............................. <sprite(iSprite)>
  [  7] getchainedprop 163 ...................... <sprite(iSprite).member>
  [  9] getparam 2 .............................. <aColorData>
  [ 11] getobjprop 1016 ......................... <aColorData.startcolor>
  [ 14] setobjprop 1017 ......................... sprite(iSprite).member.fillColor = aColorData.startcolor
  [ 17] getparam 3 .............................. <iSprite>
  [ 19] pusharglist 1 ........................... <iSprite>
  [ 21] extcall 481 ............................. <sprite(iSprite)>
  [ 24] getchainedprop 163 ...................... <sprite(iSprite).member>
  [ 26] getparam 2 .............................. <aColorData>
  [ 28] getobjprop 1018 ......................... <aColorData.endColor>
  [ 31] setobjprop 1018 ......................... sprite(iSprite).member.endColor = aColorData.endColor
  [ 34] getparam 3 .............................. <iSprite>
  [ 36] pusharglist 1 ........................... <iSprite>
  [ 38] extcall 481 ............................. <sprite(iSprite)>
  [ 41] getparam 2 .............................. <aColorData>
  [ 43] getobjprop 1019 ......................... <aColorData.shapeBlend>
  [ 46] setobjprop 492 .......................... sprite(iSprite).blend = aColorData.shapeBlend
  [ 49] getparam 3 .............................. <iSprite>
  [ 51] pusharglist 1 ........................... <iSprite>
  [ 53] extcall 481 ............................. <sprite(iSprite)>
  [ 56] getparam 2 .............................. <aColorData>
  [ 58] getobjprop 1020 ......................... <aColorData.texturecolor>
  [ 61] setobjprop 523 .......................... sprite(iSprite).color = aColorData.texturecolor
  [ 64] ret
end

on displayPattern me, sPatternName, aColorData, iSprite
  [  0] getparam 3 .............................. <iSprite>
  [  2] pusharglist 1 ........................... <iSprite>
  [  4] extcall 481 ............................. <sprite(iSprite)>
  [  7] getchainedprop 163 ...................... <sprite(iSprite).member>
  [  9] pushcons 7 .............................. <"floor_">
  [ 11] getparam 2 .............................. <aColorData>
  [ 13] getobjprop 640 .......................... <aColorData.palette>
  [ 16] joinstr ................................. <"floor_" & aColorData.palette>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 284 .......................... <me.sCastLib>
  [ 22] pusharglist 2 ........................... <"floor_" & aColorData.palette, me.sCastLib>
  [ 24] extcall 163 ............................. <member("floor_" & aColorData.palette, me.sCastLib)>
  [ 26] setobjprop 640 .......................... sprite(iSprite).member.palette = member("floor_" & aColorData.palette, me.sCastLib)
  [ 29] getparam 3 .............................. <iSprite>
  [ 31] pusharglist 1 ........................... <iSprite>
  [ 33] extcall 481 ............................. <sprite(iSprite)>
  [ 36] getparam 2 .............................. <aColorData>
  [ 38] getobjprop 1021 ......................... <aColorData.textureBlend>
  [ 41] setobjprop 492 .......................... sprite(iSprite).blend = aColorData.textureBlend
  [ 44] ret
end

on setRandomPattern me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 988 ............................ <#aPatterns>
  [  5] pusharglist 2 ........................... <me, #aPatterns>
  [  7] objcall 150 ............................. <me.aPatterns.count>
  [  9] pusharglist 1 ........................... <me.aPatterns.count>
  [ 11] extcall 498 ............................. <random(me.aPatterns.count)>
  [ 14] setlocal 0 .............................. iPatternIndex = random(me.aPatterns.count)
  [ 16] getparam 0 .............................. <me>
  [ 18] pushsymb 988 ............................ <#aPatterns>
  [ 21] getlocal 0 .............................. <iPatternIndex>
  [ 23] pusharglist 3 ........................... <me, #aPatterns, iPatternIndex>
  [ 25] objcall 611 ............................. <me.aPatterns[iPatternIndex]>
  [ 28] setlocal 1 .............................. aColors = me.aPatterns[iPatternIndex]
  [ 30] getlocal 1 .............................. <aColors>
  [ 32] getobjprop 150 .......................... <aColors.count>
  [ 34] pusharglist 1 ........................... <aColors.count>
  [ 36] extcall 498 ............................. <random(aColors.count)>
  [ 39] setlocal 2 .............................. iColorIndex = random(aColors.count)
  [ 41] getparam 0 .............................. <me>
  [ 43] getlocal 0 .............................. <iPatternIndex>
  [ 45] getlocal 2 .............................. <iColorIndex>
  [ 47] pusharglistnoret 3 ...................... <me, iPatternIndex, iColorIndex>
  [ 49] objcall 984 ............................. me.setPattern(iPatternIndex, iColorIndex)
  [ 52] ret
end
