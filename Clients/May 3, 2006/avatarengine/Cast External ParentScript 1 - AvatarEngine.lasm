property sPartCast, sAvatarCast, iWidth, iHeight, iColorDepth, iAlphaDepth, iDefaultInk, sDefaultString, aAttributes, aConfigSettings, aRuntimeConfig, aDirectionMap, aDrawOrder, aDefDrawOrder, iDirection, aCurrDrawSettings, oPoint, iScale, iShadowSprite, iImageSprite, iAnimStep, iAnimStepMax, sBodyAction, sFaceAction, sItemAction, iFPS, iFPSTimer, iFPSTimerLength, bBlink, iBlinkTimer, iBlinkTimerLength, bChatting, iChatTimer, iChatTimerLength, bEmote, iEmoteTimer, iEmoteTimerLength, bDance, aDanceOverride, bCarry, iCarryTimer, iCarryTimerLength, bDrink, iDrinkTimer, iDrinkTimerLength, iDrinkWaitTimerLength, iDrinkActionTimerLength, bSleep, iSleepTimer, iSleepTimerLength, oImageMember, oBuffer, aSourceImages, bUseSprites, oBufferBGColor, oSpriteBgColor, iSpriteInk, oPreviewImage, iHeightOffset, iDither, bDoFloodFill, iDrawTime, iDrawCount, iDisplayTime, iDisplayCount, iFrameTime, iFrameCount, bDisplayStatus
global oStudioMap, oDenizenManager

on new me, _sAttributes, _iScale, _bPreviewOnly
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 80 ........................... me.bDisplayStatus = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushcons 0 .............................. <"people">
  [  9] setobjprop 81 ........................... me.sPartCast = "people"
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 1 .............................. <"AvatarEngine">
  [ 15] setobjprop 82 ........................... me.sAvatarCast = "AvatarEngine"
  [ 17] getparam 0 .............................. <me>
  [ 19] pushfloat32 77.0 ........................ <77.0>
  [ 24] setobjprop 83 ........................... me.iWidth = 77.0
  [ 26] getparam 0 .............................. <me>
  [ 28] pushfloat32 110.0 ....................... <110.0>
  [ 33] setobjprop 84 ........................... me.iHeight = 110.0
  [ 35] getparam 2 .............................. <_iScale>
  [ 37] pusharglist 1 ........................... <_iScale>
  [ 39] extcall 85 .............................. <voidp(_iScale)>
  [ 41] not ..................................... <not voidp(_iScale)>
  [ 42] jmpifz [ 54] ............................ if not voidp(_iScale) then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] getparam 2 .............................. <_iScale>
  [ 49] setobjprop 86 ........................... me.iScale = _iScale
  [ 51] jmp [ 60]
  [ 54] getparam 0 .............................. <me>
  [ 56] pushint8 100 ............................ <100>
  [ 58] setobjprop 86 ........................... me.iScale = 100
  [ 60] getparam 0 .............................. <me>
  [ 62] pushint8 2 .............................. <2>
  [ 64] setobjprop 87 ........................... me.iDirection = 2
  [ 66] getparam 0 .............................. <me>
  [ 68] pushint8 90 ............................. <90>
  [ 70] pushint16 275 ........................... <275>
  [ 73] pusharglist 2 ........................... <90, 275>
  [ 75] extcall 88 .............................. <point(90, 275)>
  [ 77] setobjprop 89 ........................... me.oPoint = point(90, 275)
  [ 79] getmovieprop 90 ......................... <the platform>
  [ 81] pushcons 2 .............................. <"windows">
  [ 83] containsstr ............................. <the platform contains "windows">
  [ 84] jmpifz [ 96] ............................ if the platform contains "windows" then / else
  [ 87] getparam 0 .............................. <me>
  [ 89] pushint8 16 ............................. <16>
  [ 91] setobjprop 91 ........................... me.iColorDepth = 16
  [ 93] jmp [102]
  [ 96] getparam 0 .............................. <me>
  [ 98] pushint8 32 ............................. <32>
  [100] setobjprop 91 ........................... me.iColorDepth = 32
  [102] getparam 0 .............................. <me>
  [104] pushzero ................................ <0>
  [105] setobjprop 92 ........................... me.iAlphaDepth = 0
  [107] getparam 0 .............................. <me>
  [109] pushint8 41 ............................. <41>
  [111] setobjprop 93 ........................... me.iDefaultInk = 41
  [113] getparam 0 .............................. <me>
  [115] pusharglist 0 ........................... <[:]>
  [117] pushproplist ............................ <[:]>
  [118] setobjprop 94 ........................... me.aSourceImages = [:]
  [120] getparam 0 .............................. <me>
  [122] pushint16 255 ........................... <255>
  [125] pushint16 255 ........................... <255>
  [128] pushint16 255 ........................... <255>
  [131] pusharglist 3 ........................... <255, 255, 255>
  [133] extcall 95 .............................. <rgb(255, 255, 255)>
  [135] setobjprop 96 ........................... me.oSpriteBgColor = rgb(255, 255, 255)
  [137] getparam 0 .............................. <me>
  [139] pushint8 100 ............................ <100>
  [141] pushint8 100 ............................ <100>
  [143] pushint8 100 ............................ <100>
  [145] pusharglist 3 ........................... <100, 100, 100>
  [147] extcall 95 .............................. <rgb(100, 100, 100)>
  [149] setobjprop 97 ........................... me.oBufferBGColor = rgb(100, 100, 100)
  [151] getparam 0 .............................. <me>
  [153] pushint8 36 ............................. <36>
  [155] setobjprop 98 ........................... me.iSpriteInk = 36
  [157] getparam 0 .............................. <me>
  [159] pushzero ................................ <0>
  [160] setobjprop 99 ........................... me.iAnimStep = 0
  [162] getparam 0 .............................. <me>
  [164] pushint8 7 .............................. <7>
  [166] setobjprop 100 .......................... me.iAnimStepMax = 7
  [168] getparam 0 .............................. <me>
  [170] pushcons 3 .............................. <"std">
  [172] setobjprop 101 .......................... me.sBodyAction = "std"
  [174] getparam 0 .............................. <me>
  [176] pushcons 3 .............................. <"std">
  [178] setobjprop 102 .......................... me.sFaceAction = "std"
  [180] getparam 0 .............................. <me>
  [182] pushcons 4 .............................. <EMPTY>
  [184] setobjprop 103 .......................... me.sItemAction = EMPTY
  [186] getparam 0 .............................. <me>
  [188] pushint8 15 ............................. <15>
  [190] setobjprop 104 .......................... me.iFPS = 15
  [192] getparam 0 .............................. <me>
  [194] getmovieprop 105 ........................ <the milliSeconds>
  [196] setobjprop 106 .......................... me.iFPSTimer = the milliSeconds
  [198] getparam 0 .............................. <me>
  [200] pushint16 1000 .......................... <1000>
  [203] getparam 0 .............................. <me>
  [205] getobjprop 104 .......................... <me.iFPS>
  [207] div ..................................... <1000 / me.iFPS>
  [208] setobjprop 107 .......................... me.iFPSTimerLength = 1000 / me.iFPS
  [210] getparam 0 .............................. <me>
  [212] pushint8 1 .............................. <1>
  [214] setobjprop 108 .......................... me.bBlink = 1
  [216] getparam 0 .............................. <me>
  [218] getmovieprop 105 ........................ <the milliSeconds>
  [220] setobjprop 109 .......................... me.iBlinkTimer = the milliSeconds
  [222] getparam 0 .............................. <me>
  [224] pushint16 3000 .......................... <3000>
  [227] setobjprop 110 .......................... me.iBlinkTimerLength = 3000
  [229] getparam 0 .............................. <me>
  [231] getmovieprop 105 ........................ <the milliSeconds>
  [233] setobjprop 111 .......................... me.iChatTimer = the milliSeconds
  [235] getparam 0 .............................. <me>
  [237] pushint16 1000 .......................... <1000>
  [240] setobjprop 112 .......................... me.iChatTimerLength = 1000
  [242] getparam 0 .............................. <me>
  [244] pushzero ................................ <0>
  [245] setobjprop 113 .......................... me.bChatting = 0
  [247] getparam 0 .............................. <me>
  [249] pushzero ................................ <0>
  [250] setobjprop 114 .......................... me.bEmote = 0
  [252] getparam 0 .............................. <me>
  [254] getmovieprop 105 ........................ <the milliSeconds>
  [256] setobjprop 115 .......................... me.iEmoteTimer = the milliSeconds
  [258] getparam 0 .............................. <me>
  [260] pushint16 5000 .......................... <5000>
  [263] setobjprop 116 .......................... me.iEmoteTimerLength = 5000
  [265] getparam 0 .............................. <me>
  [267] pushzero ................................ <0>
  [268] setobjprop 117 .......................... me.bDance = 0
  [270] getparam 0 .............................. <me>
  [272] pushzero ................................ <0>
  [273] setobjprop 118 .......................... me.bCarry = 0
  [275] getparam 0 .............................. <me>
  [277] getmovieprop 105 ........................ <the milliSeconds>
  [279] setobjprop 119 .......................... me.iCarryTimer = the milliSeconds
  [281] getparam 0 .............................. <me>
  [283] pushint16 300 ........................... <300>
  [286] pushint16 1000 .......................... <1000>
  [289] mul ..................................... <300 * 1000>
  [290] setobjprop 120 .......................... me.iCarryTimerLength = 300 * 1000
  [292] getparam 0 .............................. <me>
  [294] pushzero ................................ <0>
  [295] setobjprop 121 .......................... me.bDrink = 0
  [297] getparam 0 .............................. <me>
  [299] getmovieprop 105 ........................ <the milliSeconds>
  [301] setobjprop 122 .......................... me.iDrinkTimer = the milliSeconds
  [303] getparam 0 .............................. <me>
  [305] pushint16 5000 .......................... <5000>
  [308] setobjprop 123 .......................... me.iDrinkWaitTimerLength = 5000
  [310] getparam 0 .............................. <me>
  [312] pushint16 400 ........................... <400>
  [315] setobjprop 124 .......................... me.iDrinkActionTimerLength = 400
  [317] getparam 0 .............................. <me>
  [319] getparam 0 .............................. <me>
  [321] getobjprop 123 .......................... <me.iDrinkWaitTimerLength>
  [323] setobjprop 125 .......................... me.iDrinkTimerLength = me.iDrinkWaitTimerLength
  [325] getparam 0 .............................. <me>
  [327] pushzero ................................ <0>
  [328] setobjprop 126 .......................... me.bSleep = 0
  [330] getparam 0 .............................. <me>
  [332] getmovieprop 105 ........................ <the milliSeconds>
  [334] setobjprop 127 .......................... me.iSleepTimer = the milliSeconds
  [336] getparam 0 .............................. <me>
  [338] pushint32 300000 ........................ <300000>
  [343] setobjprop 128 .......................... me.iSleepTimerLength = 300000
  [345] getparam 0 .............................. <me>
  [347] pusharglistnoret 1 ...................... <me>
  [349] objcall 10 .............................. me.setDefaultString()
  [351] getparam 0 .............................. <me>
  [353] getparam 1 .............................. <_sAttributes>
  [355] pusharglistnoret 2 ...................... <me, _sAttributes>
  [357] objcall 11 .............................. me.setAttributes(_sAttributes)
  [359] getparam 0 .............................. <me>
  [361] pusharglistnoret 1 ...................... <me>
  [363] objcall 13 .............................. me.setConfigSettings()
  [365] getparam 0 .............................. <me>
  [367] pusharglistnoret 1 ...................... <me>
  [369] objcall 14 .............................. me.setRuntimeConfig()
  [371] getparam 0 .............................. <me>
  [373] pusharglistnoret 1 ...................... <me>
  [375] objcall 16 .............................. me.setDirectionMap()
  [377] getparam 0 .............................. <me>
  [379] pushsymb 129 ............................ <#lh>
  [381] pushsymb 130 ............................ <#ls>
  [383] pushsymb 131 ............................ <#bd>
  [385] pushsymb 132 ............................ <#sh>
  [387] pushsymb 133 ............................ <#lg>
  [389] pushsymb 134 ............................ <#ch>
  [391] pushsymb 135 ............................ <#ri>
  [393] pushsymb 136 ............................ <#rh>
  [395] pushsymb 137 ............................ <#rs>
  [397] pushsymb 138 ............................ <#hd>
  [399] pushsymb 139 ............................ <#fc>
  [401] pushsymb 140 ............................ <#ey>
  [403] pushsymb 141 ............................ <#hr>
  [405] pushsymb 142 ............................ <#ht>
  [407] pusharglist 14 .......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [409] pushlist ................................ <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [410] setobjprop 143 .......................... me.aDefDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]
  [412] getparam 0 .............................. <me>
  [414] pusharglistnoret 1 ...................... <me>
  [416] objcall 17 .............................. me.setDrawOrder()
  [418] getparam 0 .............................. <me>
  [420] pusharglistnoret 1 ...................... <me>
  [422] objcall 15 .............................. me.setDanceOverride()
  [424] getparam 0 .............................. <me>
  [426] pushzero ................................ <0>
  [427] setobjprop 144 .......................... me.iDither = 0
  [429] getparam 0 .............................. <me>
  [431] getparam 3 .............................. <_bPreviewOnly>
  [433] pusharglistnoret 2 ...................... <me, _bPreviewOnly>
  [435] objcall 1 ............................... me.setFloodFill(_bPreviewOnly)
  [437] getparam 0 .............................. <me>
  [439] pusharglistnoret 1 ...................... <me>
  [441] objcall 6 ............................... me.createBuffer()
  [443] getparam 0 .............................. <me>
  [445] getparam 0 .............................. <me>
  [447] getobjprop 86 ........................... <me.iScale>
  [449] pusharglistnoret 2 ...................... <me, me.iScale>
  [451] objcall 45 .............................. me.setScale(me.iScale)
  [453] getparam 0 .............................. <me>
  [455] pushzero ................................ <0>
  [456] setobjprop 145 .......................... me.iHeightOffset = 0
  [458] getparam 0 .............................. <me>
  [460] pusharglistnoret 1 ...................... <me>
  [462] objcall 23 .............................. me.draw()
  [464] getparam 0 .............................. <me>
  [466] getparam 0 .............................. <me>
  [468] getchainedprop 146 ...................... <me.oBuffer>
  [470] pusharglist 1 ........................... <me.oBuffer>
  [472] objcall 147 ............................. <me.oBuffer.duplicate()>
  [474] setobjprop 148 .......................... me.oPreviewImage = me.oBuffer.duplicate()
  [476] getparam 0 .............................. <me>
  [478] pusharglistnoret 1 ...................... <me>
  [480] extcall 149 ............................. return me
  [482] ret
end

on setFloodFill me, _bPreviewOnly
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 154 .......................... me.bDoFloodFill = 0
  [  5] getparam 1 .............................. <_bPreviewOnly>
  [  7] jmpifz [ 27] ............................ if _bPreviewOnly then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushzero ................................ <0>
  [ 13] setobjprop 154 .......................... me.bDoFloodFill = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 96 ........................... <me.oSpriteBgColor>
  [ 21] setobjprop 97 ........................... me.oBufferBGColor = me.oSpriteBgColor
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 149 ............................. return 
  [ 27] getglobal 155 ........................... <oStudioMap>
  [ 29] pusharglist 1 ........................... <oStudioMap>
  [ 31] extcall 85 .............................. <voidp(oStudioMap)>
  [ 33] not ..................................... <not voidp(oStudioMap)>
  [ 34] jmpifz [ 71] ............................ if not voidp(oStudioMap) then / else
  [ 37] getglobal 155 ........................... <oStudioMap>
  [ 39] pusharglist 1 ........................... <oStudioMap>
  [ 41] objcall 156 ............................. <oStudioMap.isPrivate()>
  [ 43] jmpifz [ 62] ............................ if oStudioMap.isPrivate() then / else
  [ 46] getparam 0 .............................. <me>
  [ 48] pushzero ................................ <0>
  [ 49] setobjprop 154 .......................... me.bDoFloodFill = 0
  [ 51] getparam 0 .............................. <me>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 96 ........................... <me.oSpriteBgColor>
  [ 57] setobjprop 97 ........................... me.oBufferBGColor = me.oSpriteBgColor
  [ 59] jmp [ 68]
  [ 62] getparam 0 .............................. <me>
  [ 64] pushint8 1 .............................. <1>
  [ 66] setobjprop 154 .......................... me.bDoFloodFill = 1
  [ 68] jmp [ 84]
  [ 71] getparam 0 .............................. <me>
  [ 73] pushzero ................................ <0>
  [ 74] setobjprop 154 .......................... me.bDoFloodFill = 0
  [ 76] getparam 0 .............................. <me>
  [ 78] getparam 0 .............................. <me>
  [ 80] getobjprop 96 ........................... <me.oSpriteBgColor>
  [ 82] setobjprop 97 ........................... me.oBufferBGColor = me.oSpriteBgColor
  [ 84] ret
end

on getFPS me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.iFPS>
  [  4] pusharglistnoret 1 ...................... <me.iFPS>
  [  6] extcall 149 ............................. return me.iFPS
  [  8] ret
end

on initSprites me, _iImageSprite, _iShadowSprite
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iImageSprite>
  [  4] setobjprop 157 .......................... me.iImageSprite = _iImageSprite
  [  6] getparam 0 .............................. <me>
  [  8] getparam 2 .............................. <_iShadowSprite>
  [ 10] setobjprop 158 .......................... me.iShadowSprite = _iShadowSprite
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglistnoret 1 ...................... <me>
  [ 16] objcall 7 ............................... me.createMember()
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 8 ............................... me.createSprites()
  [ 24] ret
end

on getPreviewImage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 148 .......................... <me.oPreviewImage>
  [  4] pusharglistnoret 1 ...................... <me.oPreviewImage>
  [  6] extcall 149 ............................. return me.oPreviewImage
  [  8] ret
end

on end me
  [  0] ret
end

on createBuffer me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 83 ........................... <me.iWidth>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 84 ........................... <me.iHeight>
  [ 10] pushint8 20 ............................. <20>
  [ 12] add ..................................... <me.iHeight + 20>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 91 ........................... <me.iColorDepth>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 92 ........................... <me.iAlphaDepth>
  [ 21] pusharglist 4 ........................... <me.iWidth, me.iHeight + 20, me.iColorDepth, me.iAlphaDepth>
  [ 23] extcall 161 ............................. <image(me.iWidth, me.iHeight + 20, me.iColorDepth, me.iAlphaDepth)>
  [ 25] setobjprop 146 .......................... me.oBuffer = image(me.iWidth, me.iHeight + 20, me.iColorDepth, me.iAlphaDepth)
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 146 ...................... <me.oBuffer>
  [ 31] getparam 0 .............................. <me>
  [ 33] getchainedprop 146 ...................... <me.oBuffer>
  [ 35] getobjprop 162 .......................... <me.oBuffer.rect>
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 97 ........................... <me.oBufferBGColor>
  [ 41] pusharglistnoret 3 ...................... <me.oBuffer, me.oBuffer.rect, me.oBufferBGColor>
  [ 43] objcall 163 ............................. me.oBuffer.fill(me.oBuffer.rect, me.oBufferBGColor)
  [ 45] ret
end

on createMember me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 157 .......................... <me.iImageSprite>
  [  4] pusharglist 1 ........................... <me.iImageSprite>
  [  6] extcall 164 ............................. <string(me.iImageSprite)>
  [  8] setlocal 0 .............................. sName = string(me.iImageSprite)
  [ 10] getlocal 0 .............................. <sName>
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 82 ........................... <me.sAvatarCast>
  [ 16] pusharglist 2 ........................... <sName, me.sAvatarCast>
  [ 18] extcall 165 ............................. <member(sName, me.sAvatarCast)>
  [ 20] setlocal 1 .............................. oExistingMember = member(sName, me.sAvatarCast)
  [ 22] getlocal 1 .............................. <oExistingMember>
  [ 24] getobjprop 166 .......................... <oExistingMember.memberNum>
  [ 26] pushzero ................................ <0>
  [ 27] lteq .................................... <oExistingMember.memberNum <= 0>
  [ 28] jmpifz [ 52] ............................ if oExistingMember.memberNum <= 0 then / else
  [ 31] getparam 0 .............................. <me>
  [ 33] pushsymb 167 ............................ <#bitmap>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 82 ........................... <me.sAvatarCast>
  [ 39] pusharglist 1 ........................... <me.sAvatarCast>
  [ 41] extcall 168 ............................. <castLib(me.sAvatarCast)>
  [ 43] pusharglist 2 ........................... <#bitmap, castLib(me.sAvatarCast)>
  [ 45] extcall 0 ............................... <new(#bitmap, castLib(me.sAvatarCast))>
  [ 47] setobjprop 169 .......................... me.oImageMember = new(#bitmap, castLib(me.sAvatarCast))
  [ 49] jmp [ 58]
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 1 .............................. <oExistingMember>
  [ 56] setobjprop 169 .......................... me.oImageMember = oExistingMember
  [ 58] getparam 0 .............................. <me>
  [ 60] getchainedprop 169 ...................... <me.oImageMember>
  [ 62] getlocal 0 .............................. <sName>
  [ 64] setobjprop 170 .......................... me.oImageMember.name = sName
  [ 66] getparam 0 .............................. <me>
  [ 68] getchainedprop 146 ...................... <me.oBuffer>
  [ 70] getobjprop 171 .......................... <me.oBuffer.width>
  [ 72] getparam 0 .............................. <me>
  [ 74] getobjprop 86 ........................... <me.iScale>
  [ 76] pushcons 5 .............................. <0.01>
  [ 78] mul ..................................... <me.iScale * 0.01>
  [ 79] mul ..................................... <me.oBuffer.width * (me.iScale * 0.01)>
  [ 80] getparam 0 .............................. <me>
  [ 82] getchainedprop 146 ...................... <me.oBuffer>
  [ 84] getobjprop 172 .......................... <me.oBuffer.height>
  [ 86] getparam 0 .............................. <me>
  [ 88] getobjprop 86 ........................... <me.iScale>
  [ 90] pushcons 5 .............................. <0.01>
  [ 92] mul ..................................... <me.iScale * 0.01>
  [ 93] mul ..................................... <me.oBuffer.height * (me.iScale * 0.01)>
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 91 ........................... <me.iColorDepth>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 92 ........................... <me.iAlphaDepth>
  [102] pusharglist 4 ........................... <me.oBuffer.width * (me.iScale * 0.01), me.oBuffer.height * (me.iScale * 0.01), me.iColorDepth, me.iAlphaDepth>
  [104] extcall 161 ............................. <image(me.oBuffer.width * (me.iScale * 0.01), me.oBuffer.height * (me.iScale * 0.01), me.iColorDepth, me.iAlphaDepth)>
  [106] setlocal 2 .............................. oMemberImage = image(me.oBuffer.width * (me.iScale * 0.01), me.oBuffer.height * (me.iScale * 0.01), me.iColorDepth, me.iAlphaDepth)
  [108] getlocal 2 .............................. <oMemberImage>
  [110] getparam 0 .............................. <me>
  [112] getobjprop 146 .......................... <me.oBuffer>
  [114] getparam 0 .............................. <me>
  [116] getchainedprop 146 ...................... <me.oBuffer>
  [118] getobjprop 162 .......................... <me.oBuffer.rect>
  [120] getparam 0 .............................. <me>
  [122] getobjprop 86 ........................... <me.iScale>
  [124] pushcons 5 .............................. <0.01>
  [126] mul ..................................... <me.iScale * 0.01>
  [127] mul ..................................... <me.oBuffer.rect * (me.iScale * 0.01)>
  [128] getparam 0 .............................. <me>
  [130] getchainedprop 146 ...................... <me.oBuffer>
  [132] getobjprop 162 .......................... <me.oBuffer.rect>
  [134] pusharglistnoret 4 ...................... <oMemberImage, me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect>
  [136] objcall 173 ............................. oMemberImage.copyPixels(me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect)
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 169 ...................... <me.oImageMember>
  [142] getlocal 2 .............................. <oMemberImage>
  [144] setobjprop 161 .......................... me.oImageMember.image = oMemberImage
  [146] getparam 0 .............................. <me>
  [148] getchainedprop 169 ...................... <me.oImageMember>
  [150] getparam 0 .............................. <me>
  [152] getobjprop 83 ........................... <me.iWidth>
  [154] getparam 0 .............................. <me>
  [156] getobjprop 86 ........................... <me.iScale>
  [158] pushcons 5 .............................. <0.01>
  [160] mul ..................................... <me.iScale * 0.01>
  [161] mul ..................................... <me.iWidth * (me.iScale * 0.01)>
  [162] pushint8 2 .............................. <2>
  [164] div ..................................... <me.iWidth * (me.iScale * 0.01) / 2>
  [165] getparam 0 .............................. <me>
  [167] getobjprop 84 ........................... <me.iHeight>
  [169] getparam 0 .............................. <me>
  [171] getobjprop 86 ........................... <me.iScale>
  [173] pushcons 5 .............................. <0.01>
  [175] mul ..................................... <me.iScale * 0.01>
  [176] mul ..................................... <me.iHeight * (me.iScale * 0.01)>
  [177] pusharglist 2 ........................... <me.iWidth * (me.iScale * 0.01) / 2, me.iHeight * (me.iScale * 0.01)>
  [179] extcall 88 .............................. <point(me.iWidth * (me.iScale * 0.01) / 2, me.iHeight * (me.iScale * 0.01))>
  [181] setobjprop 174 .......................... me.oImageMember.regPoint = point(me.iWidth * (me.iScale * 0.01) / 2, me.iHeight * (me.iScale * 0.01))
  [183] ret
end

on createSprites me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 157 .......................... <me.iImageSprite>
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 2 ...................... <me.iImageSprite, 1>
  [  8] extcall 178 ............................. puppetSprite(me.iImageSprite, 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 157 .......................... <me.iImageSprite>
  [ 14] pusharglist 1 ........................... <me.iImageSprite>
  [ 16] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 169 .......................... <me.oImageMember>
  [ 22] setobjprop 165 .......................... sprite(me.iImageSprite).member = me.oImageMember
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 154 .......................... <me.bDoFloodFill>
  [ 28] jmpifz [ 48] ............................ if me.bDoFloodFill then / else
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 157 .......................... <me.iImageSprite>
  [ 35] pusharglist 1 ........................... <me.iImageSprite>
  [ 37] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 96 ........................... <me.oSpriteBgColor>
  [ 43] setobjprop 180 .......................... sprite(me.iImageSprite).bgColor = me.oSpriteBgColor
  [ 45] jmp [ 62]
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 157 .......................... <me.iImageSprite>
  [ 52] pusharglist 1 ........................... <me.iImageSprite>
  [ 54] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 97 ........................... <me.oBufferBGColor>
  [ 60] setobjprop 180 .......................... sprite(me.iImageSprite).bgColor = me.oBufferBGColor
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 157 .......................... <me.iImageSprite>
  [ 66] pusharglist 1 ........................... <me.iImageSprite>
  [ 68] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 70] getparam 0 .............................. <me>
  [ 72] getobjprop 98 ........................... <me.iSpriteInk>
  [ 74] setobjprop 181 .......................... sprite(me.iImageSprite).ink = me.iSpriteInk
  [ 76] getparam 0 .............................. <me>
  [ 78] getobjprop 158 .......................... <me.iShadowSprite>
  [ 80] pushint8 1 .............................. <1>
  [ 82] pusharglistnoret 2 ...................... <me.iShadowSprite, 1>
  [ 84] extcall 178 ............................. puppetSprite(me.iShadowSprite, 1)
  [ 86] pushcons 6 .............................. <"human_shadow_sh">
  [ 88] setlocal 0 .............................. sShadowMember = "human_shadow_sh"
  [ 90] getglobal 155 ........................... <oStudioMap>
  [ 92] pusharglist 1 ........................... <oStudioMap>
  [ 94] extcall 85 .............................. <voidp(oStudioMap)>
  [ 96] not ..................................... <not voidp(oStudioMap)>
  [ 97] jmpifz [113] ............................ if not voidp(oStudioMap) then
  [100] getglobal 155 ........................... <oStudioMap>
  [102] pusharglist 1 ........................... <oStudioMap>
  [104] objcall 156 ............................. <oStudioMap.isPrivate()>
  [106] jmpifz [113] ............................ if oStudioMap.isPrivate() then
  [109] pushcons 7 .............................. <"human_shadow_h">
  [111] setlocal 0 .............................. sShadowMember = "human_shadow_h"
  [113] getparam 0 .............................. <me>
  [115] getobjprop 158 .......................... <me.iShadowSprite>
  [117] pusharglist 1 ........................... <me.iShadowSprite>
  [119] extcall 179 ............................. <sprite(me.iShadowSprite)>
  [121] getlocal 0 .............................. <sShadowMember>
  [123] pushcons 1 .............................. <"AvatarEngine">
  [125] pusharglist 2 ........................... <sShadowMember, "AvatarEngine">
  [127] extcall 165 ............................. <member(sShadowMember, "AvatarEngine")>
  [129] setobjprop 165 .......................... sprite(me.iShadowSprite).member = member(sShadowMember, "AvatarEngine")
  [131] ret
end

on getBuffer me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 146 .......................... <me.oBuffer>
  [  4] pusharglistnoret 1 ...................... <me.oBuffer>
  [  6] extcall 149 ............................. return me.oBuffer
  [  8] ret
end

on setDefaultString me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 8 .............................. <"hr=017/238,238,238&hd=001/115,92,69&ey=001/238,238,238&fc=001/115,92,69&bd=001/115,92,69&lh=001/115,92,69&rh=001/115,92,69&ch=001/255,166,193&ls=002/255,166,193&rs=002/255,166,193&lg=009/238,238,238&sh=005/238,238,238">
  [  4] setobjprop 183 .......................... me.sDefaultString = "hr=017/238,238,238&hd=001/115,92,69&ey=001/238,238,238&fc=001/115,92,69&bd=001/115,92,69&lh=001/115,92,69&rh=001/115,92,69&ch=001/255,166,193&ls=002/255,166,193&rs=002/255,166,193&lg=009/238,238,238&sh=005/238,238,238"
  [  6] ret
end

on setAttributes me, sString
  [  0] getparam 1 .............................. <sString>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 184 ............................. <VOID>
  [  6] eq ...................................... <sString = VOID>
  [  7] jmpifz [ 16] ............................ if sString = VOID then
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 183 .......................... <me.sDefaultString>
  [ 14] setparam 1 .............................. sString = me.sDefaultString
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 0 ........................... <[:]>
  [ 20] pushproplist ............................ <[:]>
  [ 21] setobjprop 185 .......................... me.aAttributes = [:]
  [ 23] pushcons 9 .............................. <"&">
  [ 25] setmovieprop 186 ........................ the itemDelimiter = "&"
  [ 27] getparam 1 .............................. <sString>
  [ 29] pushsymb 187 ............................ <#items>
  [ 31] pusharglist 2 ........................... <sString, #items>
  [ 33] objcall 188 ............................. <sString.items.count>
  [ 35] setlocal 0 .............................. iNumParts = sString.items.count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setlocal 1
  [ 41] getlocal 1
  [ 43] getlocal 0 .............................. <iNumParts>
  [ 45] lteq
  [ 46] jmpifz [275] ............................ repeat with i = 1 to iNumParts
  [ 49] pushcons 9 .............................. <"&">
  [ 51] setmovieprop 186 ........................ the itemDelimiter = "&"
  [ 53] getparam 1 .............................. <sString>
  [ 55] pushsymb 189 ............................ <#item>
  [ 57] getlocal 1 .............................. <i>
  [ 59] pusharglist 3 ........................... <sString, #item, i>
  [ 61] objcall 190 ............................. <sString.item[i]>
  [ 63] setlocal 2 .............................. sTotalPart = sString.item[i]
  [ 65] pushcons 10 ............................. <"=">
  [ 67] setmovieprop 186 ........................ the itemDelimiter = "="
  [ 69] getlocal 2 .............................. <sTotalPart>
  [ 71] pushsymb 189 ............................ <#item>
  [ 73] pushint8 1 .............................. <1>
  [ 75] pusharglist 3 ........................... <sTotalPart, #item, 1>
  [ 77] objcall 190 ............................. <sTotalPart.item[1]>
  [ 79] setlocal 3 .............................. sPart = sTotalPart.item[1]
  [ 81] getlocal 2 .............................. <sTotalPart>
  [ 83] pushsymb 189 ............................ <#item>
  [ 85] pushint8 2 .............................. <2>
  [ 87] pusharglist 3 ........................... <sTotalPart, #item, 2>
  [ 89] objcall 190 ............................. <sTotalPart.item[2]>
  [ 91] setlocal 4 .............................. sPartCodeAndColor = sTotalPart.item[2]
  [ 93] pushcons 11 ............................. <"/">
  [ 95] setmovieprop 186 ........................ the itemDelimiter = "/"
  [ 97] getlocal 4 .............................. <sPartCodeAndColor>
  [ 99] pushsymb 189 ............................ <#item>
  [101] pushint8 1 .............................. <1>
  [103] pusharglist 3 ........................... <sPartCodeAndColor, #item, 1>
  [105] objcall 190 ............................. <sPartCodeAndColor.item[1]>
  [107] setlocal 5 .............................. sPartCode = sPartCodeAndColor.item[1]
  [109] getlocal 4 .............................. <sPartCodeAndColor>
  [111] pushsymb 189 ............................ <#item>
  [113] pushint8 2 .............................. <2>
  [115] pusharglist 3 ........................... <sPartCodeAndColor, #item, 2>
  [117] objcall 190 ............................. <sPartCodeAndColor.item[2]>
  [119] setlocal 6 .............................. sColorParts = sPartCodeAndColor.item[2]
  [121] pushcons 12 ............................. <",">
  [123] setmovieprop 186 ........................ the itemDelimiter = ","
  [125] getlocal 6 .............................. <sColorParts>
  [127] pushsymb 187 ............................ <#items>
  [129] pusharglist 2 ........................... <sColorParts, #items>
  [131] objcall 188 ............................. <sColorParts.items.count>
  [133] setlocal 7 .............................. iColorLength = sColorParts.items.count
  [135] getlocal 6 .............................. <sColorParts>
  [137] pushsymb 189 ............................ <#item>
  [139] pushint8 1 .............................. <1>
  [141] pusharglist 3 ........................... <sColorParts, #item, 1>
  [143] objcall 190 ............................. <sColorParts.item[1]>
  [145] pusharglist 1 ........................... <sColorParts.item[1]>
  [147] extcall 191 ............................. <integer(sColorParts.item[1])>
  [149] setlocal 8 .............................. iR = integer(sColorParts.item[1])
  [151] getlocal 6 .............................. <sColorParts>
  [153] pushsymb 189 ............................ <#item>
  [155] pushint8 2 .............................. <2>
  [157] pusharglist 3 ........................... <sColorParts, #item, 2>
  [159] objcall 190 ............................. <sColorParts.item[2]>
  [161] pusharglist 1 ........................... <sColorParts.item[2]>
  [163] extcall 191 ............................. <integer(sColorParts.item[2])>
  [165] setlocal 9 .............................. iG = integer(sColorParts.item[2])
  [167] getlocal 6 .............................. <sColorParts>
  [169] pushsymb 189 ............................ <#item>
  [171] pushint8 3 .............................. <3>
  [173] pusharglist 3 ........................... <sColorParts, #item, 3>
  [175] objcall 190 ............................. <sColorParts.item[3]>
  [177] pusharglist 1 ........................... <sColorParts.item[3]>
  [179] extcall 191 ............................. <integer(sColorParts.item[3])>
  [181] setlocal 10 ............................. iB = integer(sColorParts.item[3])
  [183] getlocal 7 .............................. <iColorLength>
  [185] pushint8 1 .............................. <1>
  [187] eq ...................................... <iColorLength = 1>
  [188] jmpifz [204] ............................ if iColorLength = 1 then / else
  [191] pushsymb 193 ............................ <#paletteIndex>
  [193] getlocal 8 .............................. <iR>
  [195] pusharglist 2 ........................... <#paletteIndex, iR>
  [197] extcall 192 ............................. <color(#paletteIndex, iR)>
  [199] setlocal 11 ............................. oColor = color(#paletteIndex, iR)
  [201] jmp [216]
  [204] getlocal 8 .............................. <iR>
  [206] getlocal 9 .............................. <iG>
  [208] getlocal 10 ............................. <iB>
  [210] pusharglist 3 ........................... <iR, iG, iB>
  [212] extcall 95 .............................. <rgb(iR, iG, iB)>
  [214] setlocal 11 ............................. oColor = rgb(iR, iG, iB)
  [216] getlocal 3 .............................. <sPart>
  [218] pushcons 13 ............................. <"ey">
  [220] eq ...................................... <sPart = "ey">
  [221] jmpifz [241] ............................ if sPart = "ey" then
  [224] pushsymb 95 ............................. <#rgb>
  [226] pushint16 255 ........................... <255>
  [229] pushint16 255 ........................... <255>
  [232] pushint16 255 ........................... <255>
  [235] pusharglist 4 ........................... <#rgb, 255, 255, 255>
  [237] extcall 192 ............................. <color(#rgb, 255, 255, 255)>
  [239] setlocal 11 ............................. oColor = color(#rgb, 255, 255, 255)
  [241] pushsymb 194 ............................ <#prtCd>
  [243] getlocal 5 .............................. <sPartCode>
  [245] pushsymb 195 ............................ <#clr>
  [247] getlocal 11 ............................. <oColor>
  [249] pusharglist 4 ........................... <[#prtCd: sPartCode, #clr: oColor]>
  [251] pushproplist ............................ <[#prtCd: sPartCode, #clr: oColor]>
  [252] setlocal 12 ............................. aPart = [#prtCd: sPartCode, #clr: oColor]
  [254] getparam 0 .............................. <me>
  [256] pushsymb 185 ............................ <#aAttributes>
  [258] getlocal 3 .............................. <sPart>
  [260] getlocal 12 ............................. <aPart>
  [262] pusharglistnoret 4 ...................... <me, #aAttributes, sPart, aPart>
  [264] objcall 196 ............................. me.aAttributes[sPart] = aPart
  [266] pushint8 1
  [268] getlocal 1
  [270] add
  [271] setlocal 1
  [273] endrepeat [ 41]
  [275] getparam 0 .............................. <me>
  [277] pushsymb 185 ............................ <#aAttributes>
  [279] pushcons 14 ............................. <"ri">
  [281] pushsymb 194 ............................ <#prtCd>
  [283] pushcons 15 ............................. <"001">
  [285] pushsymb 195 ............................ <#clr>
  [287] pushsymb 95 ............................. <#rgb>
  [289] pushint16 255 ........................... <255>
  [292] pushint16 255 ........................... <255>
  [295] pushint16 255 ........................... <255>
  [298] pusharglist 4 ........................... <#rgb, 255, 255, 255>
  [300] extcall 192 ............................. <color(#rgb, 255, 255, 255)>
  [302] pusharglist 4 ........................... <[#prtCd: "001", #clr: color(#rgb, 255, 255, 255)]>
  [304] pushproplist ............................ <[#prtCd: "001", #clr: color(#rgb, 255, 255, 255)]>
  [305] pusharglistnoret 4 ...................... <me, #aAttributes, "ri", [#prtCd: "001", #clr: color(#rgb, 255, 255, 255)]>
  [307] objcall 196 ............................. me.aAttributes["ri"] = [#prtCd: "001", #clr: color(#rgb, 255, 255, 255)]
  [309] ret
end

on generateAttributeString me
  [  0] pushcons 4 .............................. <EMPTY>
  [  2] setlocal 0 .............................. s = EMPTY
  [  4] pushint8 1 .............................. <1>
  [  6] setlocal 1
  [  8] getlocal 1
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 185 ............................ <#aAttributes>
  [ 14] pusharglist 2 ........................... <me, #aAttributes>
  [ 16] objcall 188 ............................. <me.aAttributes.count>
  [ 18] lteq
  [ 19] jmpifz [146] ............................ repeat with i = 1 to me.aAttributes.count
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 185 ...................... <me.aAttributes>
  [ 26] getlocal 1 .............................. <i>
  [ 28] pusharglist 2 ........................... <me.aAttributes, i>
  [ 30] objcall 211 ............................. <me.aAttributes.getPropAt(i)>
  [ 32] setlocal 2 .............................. sPart = me.aAttributes.getPropAt(i)
  [ 34] getparam 0 .............................. <me>
  [ 36] pushsymb 185 ............................ <#aAttributes>
  [ 38] getlocal 2 .............................. <sPart>
  [ 40] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [ 42] objcall 212 ............................. <me.aAttributes[sPart]>
  [ 44] pushsymb 194 ............................ <#prtCd>
  [ 46] pusharglist 2 ........................... <me.aAttributes[sPart], #prtCd>
  [ 48] objcall 213 ............................. <me.aAttributes[sPart][#prtCd]>
  [ 50] setlocal 3 .............................. sPartCode = me.aAttributes[sPart][#prtCd]
  [ 52] getparam 0 .............................. <me>
  [ 54] pushsymb 185 ............................ <#aAttributes>
  [ 56] getlocal 2 .............................. <sPart>
  [ 58] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [ 60] objcall 212 ............................. <me.aAttributes[sPart]>
  [ 62] pushsymb 195 ............................ <#clr>
  [ 64] pusharglist 2 ........................... <me.aAttributes[sPart], #clr>
  [ 66] objcall 213 ............................. <me.aAttributes[sPart][#clr]>
  [ 68] setlocal 4 .............................. oColor = me.aAttributes[sPart][#clr]
  [ 70] getlocal 2 .............................. <sPart>
  [ 72] pushcons 14 ............................. <"ri">
  [ 74] eq ...................................... <sPart = "ri">
  [ 75] jmpifz [ 81] ............................ if sPart = "ri" then
  [ 78] jmp [137] ............................... next repeat
  [ 81] getlocal 2 .............................. <sPart>
  [ 83] pushcons 10 ............................. <"=">
  [ 85] joinstr ................................. <sPart & "=">
  [ 86] getlocal 3 .............................. <sPartCode>
  [ 88] joinstr ................................. <sPart & "=" & sPartCode>
  [ 89] pushcons 11 ............................. <"/">
  [ 91] joinstr ................................. <sPart & "=" & sPartCode & "/">
  [ 92] getlocal 4 .............................. <oColor>
  [ 94] getobjprop 214 .......................... <oColor.red>
  [ 96] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red>
  [ 97] pushcons 12 ............................. <",">
  [ 99] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & ",">
  [100] getlocal 4 .............................. <oColor>
  [102] getobjprop 215 .......................... <oColor.green>
  [104] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green>
  [105] pushcons 12 ............................. <",">
  [107] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green & ",">
  [108] getlocal 4 .............................. <oColor>
  [110] getobjprop 216 .......................... <oColor.blue>
  [112] joinstr ................................. <sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green & "," & oColor.blue>
  [113] setlocal 5 .............................. sP = sPart & "=" & sPartCode & "/" & oColor.red & "," & oColor.green & "," & oColor.blue
  [115] getlocal 0 .............................. <s>
  [117] pushcons 4 .............................. <EMPTY>
  [119] nteq .................................... <s <> EMPTY>
  [120] jmpifz [130] ............................ if s <> EMPTY then
  [123] getlocal 0 .............................. <s>
  [125] pushcons 9 .............................. <"&">
  [127] joinstr ................................. <s & "&">
  [128] setlocal 0 .............................. s = s & "&"
  [130] getlocal 0 .............................. <s>
  [132] getlocal 5 .............................. <sP>
  [134] joinstr ................................. <s & sP>
  [135] setlocal 0 .............................. s = s & sP
  [137] pushint8 1
  [139] getlocal 1
  [141] add
  [142] setlocal 1
  [144] endrepeat [  8]
  [146] getlocal 0 .............................. <s>
  [148] pusharglistnoret 1 ...................... <s>
  [150] extcall 149 ............................. return s
  [152] ret
end

on setConfigSettings me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 16 ............................. <"AvatarConfigSettings">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 82 ........................... <me.sAvatarCast>
  [  8] pusharglist 2 ........................... <"AvatarConfigSettings", me.sAvatarCast>
  [ 10] extcall 165 ............................. <member("AvatarConfigSettings", me.sAvatarCast)>
  [ 12] getobjprop 220 .......................... <member("AvatarConfigSettings", me.sAvatarCast).text>
  [ 14] pusharglist 1 ........................... <member("AvatarConfigSettings", me.sAvatarCast).text>
  [ 16] extcall 219 ............................. <value(member("AvatarConfigSettings", me.sAvatarCast).text)>
  [ 18] setobjprop 221 .......................... me.aConfigSettings = value(member("AvatarConfigSettings", me.sAvatarCast).text)
  [ 20] ret
end

on setRuntimeConfig me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 222 .......................... me.aRuntimeConfig = [:]
  [  7] getparam 0 .............................. <me>
  [  9] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 11] pushsymb 131 ............................ <#bd>
  [ 13] pushsymb 223 ............................ <#act>
  [ 15] pushsymb 224 ............................ <#std>
  [ 17] pushsymb 225 ............................ <#anim>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pushsymb 226 ............................ <#animIndex>
  [ 23] pushzero ................................ <0>
  [ 24] pushsymb 227 ............................ <#Active>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pushsymb 228 ............................ <#dirOff>
  [ 30] pushzero ................................ <0>
  [ 31] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 33] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 34] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #bd, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 36] objcall 196 ............................. me.aRuntimeConfig[#bd] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [ 38] getparam 0 .............................. <me>
  [ 40] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 42] pushsymb 138 ............................ <#hd>
  [ 44] pushsymb 223 ............................ <#act>
  [ 46] pushsymb 224 ............................ <#std>
  [ 48] pushsymb 225 ............................ <#anim>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pushsymb 226 ............................ <#animIndex>
  [ 54] pushzero ................................ <0>
  [ 55] pushsymb 227 ............................ <#Active>
  [ 57] pushint8 1 .............................. <1>
  [ 59] pushsymb 228 ............................ <#dirOff>
  [ 61] pushzero ................................ <0>
  [ 62] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 64] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 65] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #hd, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 67] objcall 196 ............................. me.aRuntimeConfig[#hd] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [ 69] getparam 0 .............................. <me>
  [ 71] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 73] pushsymb 139 ............................ <#fc>
  [ 75] pushsymb 223 ............................ <#act>
  [ 77] pushsymb 224 ............................ <#std>
  [ 79] pushsymb 225 ............................ <#anim>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pushsymb 226 ............................ <#animIndex>
  [ 85] pushzero ................................ <0>
  [ 86] pushsymb 227 ............................ <#Active>
  [ 88] pushint8 1 .............................. <1>
  [ 90] pushsymb 228 ............................ <#dirOff>
  [ 92] pushzero ................................ <0>
  [ 93] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 95] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 96] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #fc, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [ 98] objcall 196 ............................. me.aRuntimeConfig[#fc] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [100] getparam 0 .............................. <me>
  [102] pushsymb 222 ............................ <#aRuntimeConfig>
  [104] pushsymb 140 ............................ <#ey>
  [106] pushsymb 223 ............................ <#act>
  [108] pushsymb 224 ............................ <#std>
  [110] pushsymb 225 ............................ <#anim>
  [112] pushint8 1 .............................. <1>
  [114] pushsymb 226 ............................ <#animIndex>
  [116] pushzero ................................ <0>
  [117] pushsymb 227 ............................ <#Active>
  [119] pushint8 1 .............................. <1>
  [121] pushsymb 228 ............................ <#dirOff>
  [123] pushzero ................................ <0>
  [124] pushsymb 181 ............................ <#ink>
  [126] pushint8 36 ............................. <36>
  [128] pusharglist 12 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]>
  [130] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]>
  [131] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ey, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]>
  [133] objcall 196 ............................. me.aRuntimeConfig[#ey] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0, #ink: 36]
  [135] getparam 0 .............................. <me>
  [137] pushsymb 222 ............................ <#aRuntimeConfig>
  [139] pushsymb 141 ............................ <#hr>
  [141] pushsymb 223 ............................ <#act>
  [143] pushsymb 224 ............................ <#std>
  [145] pushsymb 225 ............................ <#anim>
  [147] pushint8 1 .............................. <1>
  [149] pushsymb 226 ............................ <#animIndex>
  [151] pushzero ................................ <0>
  [152] pushsymb 227 ............................ <#Active>
  [154] pushint8 1 .............................. <1>
  [156] pushsymb 228 ............................ <#dirOff>
  [158] pushzero ................................ <0>
  [159] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [161] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [162] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #hr, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [164] objcall 196 ............................. me.aRuntimeConfig[#hr] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [166] getparam 0 .............................. <me>
  [168] pushsymb 222 ............................ <#aRuntimeConfig>
  [170] pushsymb 132 ............................ <#sh>
  [172] pushsymb 223 ............................ <#act>
  [174] pushsymb 224 ............................ <#std>
  [176] pushsymb 225 ............................ <#anim>
  [178] pushint8 1 .............................. <1>
  [180] pushsymb 226 ............................ <#animIndex>
  [182] pushzero ................................ <0>
  [183] pushsymb 227 ............................ <#Active>
  [185] pushint8 1 .............................. <1>
  [187] pushsymb 228 ............................ <#dirOff>
  [189] pushzero ................................ <0>
  [190] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [192] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [193] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #sh, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [195] objcall 196 ............................. me.aRuntimeConfig[#sh] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [197] getparam 0 .............................. <me>
  [199] pushsymb 222 ............................ <#aRuntimeConfig>
  [201] pushsymb 133 ............................ <#lg>
  [203] pushsymb 223 ............................ <#act>
  [205] pushsymb 224 ............................ <#std>
  [207] pushsymb 225 ............................ <#anim>
  [209] pushint8 1 .............................. <1>
  [211] pushsymb 226 ............................ <#animIndex>
  [213] pushzero ................................ <0>
  [214] pushsymb 227 ............................ <#Active>
  [216] pushint8 1 .............................. <1>
  [218] pushsymb 228 ............................ <#dirOff>
  [220] pushzero ................................ <0>
  [221] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [223] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [224] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #lg, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [226] objcall 196 ............................. me.aRuntimeConfig[#lg] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [228] getparam 0 .............................. <me>
  [230] pushsymb 222 ............................ <#aRuntimeConfig>
  [232] pushsymb 129 ............................ <#lh>
  [234] pushsymb 223 ............................ <#act>
  [236] pushsymb 224 ............................ <#std>
  [238] pushsymb 225 ............................ <#anim>
  [240] pushint8 1 .............................. <1>
  [242] pushsymb 226 ............................ <#animIndex>
  [244] pushzero ................................ <0>
  [245] pushsymb 227 ............................ <#Active>
  [247] pushint8 1 .............................. <1>
  [249] pushsymb 228 ............................ <#dirOff>
  [251] pushzero ................................ <0>
  [252] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [254] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [255] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #lh, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [257] objcall 196 ............................. me.aRuntimeConfig[#lh] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [259] getparam 0 .............................. <me>
  [261] pushsymb 222 ............................ <#aRuntimeConfig>
  [263] pushsymb 136 ............................ <#rh>
  [265] pushsymb 223 ............................ <#act>
  [267] pushsymb 224 ............................ <#std>
  [269] pushsymb 225 ............................ <#anim>
  [271] pushint8 1 .............................. <1>
  [273] pushsymb 226 ............................ <#animIndex>
  [275] pushzero ................................ <0>
  [276] pushsymb 227 ............................ <#Active>
  [278] pushint8 1 .............................. <1>
  [280] pushsymb 228 ............................ <#dirOff>
  [282] pushzero ................................ <0>
  [283] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [285] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [286] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #rh, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [288] objcall 196 ............................. me.aRuntimeConfig[#rh] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [290] getparam 0 .............................. <me>
  [292] pushsymb 222 ............................ <#aRuntimeConfig>
  [294] pushsymb 134 ............................ <#ch>
  [296] pushsymb 223 ............................ <#act>
  [298] pushsymb 224 ............................ <#std>
  [300] pushsymb 225 ............................ <#anim>
  [302] pushint8 1 .............................. <1>
  [304] pushsymb 226 ............................ <#animIndex>
  [306] pushzero ................................ <0>
  [307] pushsymb 227 ............................ <#Active>
  [309] pushint8 1 .............................. <1>
  [311] pushsymb 228 ............................ <#dirOff>
  [313] pushzero ................................ <0>
  [314] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [316] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [317] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ch, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [319] objcall 196 ............................. me.aRuntimeConfig[#ch] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [321] getparam 0 .............................. <me>
  [323] pushsymb 222 ............................ <#aRuntimeConfig>
  [325] pushsymb 137 ............................ <#rs>
  [327] pushsymb 223 ............................ <#act>
  [329] pushsymb 224 ............................ <#std>
  [331] pushsymb 225 ............................ <#anim>
  [333] pushint8 1 .............................. <1>
  [335] pushsymb 226 ............................ <#animIndex>
  [337] pushzero ................................ <0>
  [338] pushsymb 227 ............................ <#Active>
  [340] pushint8 1 .............................. <1>
  [342] pushsymb 228 ............................ <#dirOff>
  [344] pushzero ................................ <0>
  [345] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [347] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [348] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #rs, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [350] objcall 196 ............................. me.aRuntimeConfig[#rs] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [352] getparam 0 .............................. <me>
  [354] pushsymb 222 ............................ <#aRuntimeConfig>
  [356] pushsymb 130 ............................ <#ls>
  [358] pushsymb 223 ............................ <#act>
  [360] pushsymb 224 ............................ <#std>
  [362] pushsymb 225 ............................ <#anim>
  [364] pushint8 1 .............................. <1>
  [366] pushsymb 226 ............................ <#animIndex>
  [368] pushzero ................................ <0>
  [369] pushsymb 227 ............................ <#Active>
  [371] pushint8 1 .............................. <1>
  [373] pushsymb 228 ............................ <#dirOff>
  [375] pushzero ................................ <0>
  [376] pusharglist 10 .......................... <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [378] pushproplist ............................ <[#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [379] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ls, [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]>
  [381] objcall 196 ............................. me.aRuntimeConfig[#ls] = [#act: #std, #anim: 1, #animIndex: 0, #Active: 1, #dirOff: 0]
  [383] getparam 0 .............................. <me>
  [385] pushsymb 222 ............................ <#aRuntimeConfig>
  [387] pushsymb 135 ............................ <#ri>
  [389] pushsymb 223 ............................ <#act>
  [391] pushsymb 229 ............................ <#crr>
  [393] pushsymb 225 ............................ <#anim>
  [395] pushint8 1 .............................. <1>
  [397] pushsymb 226 ............................ <#animIndex>
  [399] pushzero ................................ <0>
  [400] pushsymb 227 ............................ <#Active>
  [402] pushzero ................................ <0>
  [403] pushsymb 228 ............................ <#dirOff>
  [405] pushzero ................................ <0>
  [406] pusharglist 10 .......................... <[#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]>
  [408] pushproplist ............................ <[#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]>
  [409] pusharglistnoret 4 ...................... <me, #aRuntimeConfig, #ri, [#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]>
  [411] objcall 196 ............................. me.aRuntimeConfig[#ri] = [#act: #crr, #anim: 1, #animIndex: 0, #Active: 0, #dirOff: 0]
  [413] ret
end

on setDanceOverride me
  [  0] pushzero ................................ <0>
  [  1] pushzero ................................ <0>
  [  2] pusharglist 2 ........................... <0, 0>
  [  4] extcall 88 .............................. <point(0, 0)>
  [  6] pushzero ................................ <0>
  [  7] pushzero ................................ <0>
  [  8] pusharglist 2 ........................... <0, 0>
  [ 10] extcall 88 .............................. <point(0, 0)>
  [ 12] pushzero ................................ <0>
  [ 13] pushint8 1 .............................. <1>
  [ 15] inv ..................................... <-1>
  [ 16] pusharglist 2 ........................... <0, -1>
  [ 18] extcall 88 .............................. <point(0, -1)>
  [ 20] pushzero ................................ <0>
  [ 21] pushint8 1 .............................. <1>
  [ 23] inv ..................................... <-1>
  [ 24] pusharglist 2 ........................... <0, -1>
  [ 26] extcall 88 .............................. <point(0, -1)>
  [ 28] pushzero ................................ <0>
  [ 29] pushzero ................................ <0>
  [ 30] pusharglist 2 ........................... <0, 0>
  [ 32] extcall 88 .............................. <point(0, 0)>
  [ 34] pushzero ................................ <0>
  [ 35] pushzero ................................ <0>
  [ 36] pusharglist 2 ........................... <0, 0>
  [ 38] extcall 88 .............................. <point(0, 0)>
  [ 40] pushzero ................................ <0>
  [ 41] pushint8 1 .............................. <1>
  [ 43] inv ..................................... <-1>
  [ 44] pusharglist 2 ........................... <0, -1>
  [ 46] extcall 88 .............................. <point(0, -1)>
  [ 48] pushzero ................................ <0>
  [ 49] pushint8 1 .............................. <1>
  [ 51] inv ..................................... <-1>
  [ 52] pusharglist 2 ........................... <0, -1>
  [ 54] extcall 88 .............................. <point(0, -1)>
  [ 56] pusharglist 8 ........................... <[point(0, 0), point(0, 0), point(0, -1), point(0, -1), point(0, 0), point(0, 0), point(0, -1), point(0, -1)]>
  [ 58] pushlist ................................ <[point(0, 0), point(0, 0), point(0, -1), point(0, -1), point(0, 0), point(0, 0), point(0, -1), point(0, -1)]>
  [ 59] setlocal 0 .............................. aLocOff = [point(0, 0), point(0, 0), point(0, -1), point(0, -1), point(0, 0), point(0, 0), point(0, -1), point(0, -1)]
  [ 61] pushint8 1 .............................. <1>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pushint8 1 .............................. <1>
  [ 67] pushint8 1 .............................. <1>
  [ 69] pushint8 1 .............................. <1>
  [ 71] inv ..................................... <-1>
  [ 72] pushint8 1 .............................. <1>
  [ 74] inv ..................................... <-1>
  [ 75] pushint8 1 .............................. <1>
  [ 77] inv ..................................... <-1>
  [ 78] pushint8 1 .............................. <1>
  [ 80] inv ..................................... <-1>
  [ 81] pusharglist 8 ........................... <[1, 1, 1, 1, -1, -1, -1, -1]>
  [ 83] pushlist ................................ <[1, 1, 1, 1, -1, -1, -1, -1]>
  [ 84] setlocal 1 .............................. aDirOff = [1, 1, 1, 1, -1, -1, -1, -1]
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglist 0 ........................... <[:]>
  [ 90] pushproplist ............................ <[:]>
  [ 91] setobjprop 230 .......................... me.aDanceOverride = [:]
  [ 93] getparam 0 .............................. <me>
  [ 95] pushsymb 230 ............................ <#aDanceOverride>
  [ 97] pushsymb 131 ............................ <#bd>
  [ 99] pusharglist 0 ........................... <[:]>
  [101] pushproplist ............................ <[:]>
  [102] pusharglistnoret 4 ...................... <me, #aDanceOverride, #bd, [:]>
  [104] objcall 196 ............................. me.aDanceOverride[#bd] = [:]
  [106] getparam 0 .............................. <me>
  [108] pushsymb 230 ............................ <#aDanceOverride>
  [110] pushsymb 131 ............................ <#bd>
  [112] pusharglist 3 ........................... <me, #aDanceOverride, #bd>
  [114] objcall 212 ............................. <me.aDanceOverride[#bd]>
  [116] pushsymb 231 ............................ <#prts>
  [118] pushsymb 223 ............................ <#act>
  [120] pushcons 3 .............................. <"std">
  [122] pushsymb 232 ............................ <#fr>
  [124] pushzero ................................ <0>
  [125] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [127] pushproplist ............................ <[#act: "std", #fr: 0]>
  [128] pushsymb 223 ............................ <#act>
  [130] pushcons 3 .............................. <"std">
  [132] pushsymb 232 ............................ <#fr>
  [134] pushzero ................................ <0>
  [135] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [137] pushproplist ............................ <[#act: "std", #fr: 0]>
  [138] pushsymb 223 ............................ <#act>
  [140] pushcons 17 ............................. <"wlk">
  [142] pushsymb 232 ............................ <#fr>
  [144] pushzero ................................ <0>
  [145] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [147] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [148] pushsymb 223 ............................ <#act>
  [150] pushcons 17 ............................. <"wlk">
  [152] pushsymb 232 ............................ <#fr>
  [154] pushzero ................................ <0>
  [155] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [157] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [158] pushsymb 223 ............................ <#act>
  [160] pushcons 3 .............................. <"std">
  [162] pushsymb 232 ............................ <#fr>
  [164] pushzero ................................ <0>
  [165] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [167] pushproplist ............................ <[#act: "std", #fr: 0]>
  [168] pushsymb 223 ............................ <#act>
  [170] pushcons 3 .............................. <"std">
  [172] pushsymb 232 ............................ <#fr>
  [174] pushzero ................................ <0>
  [175] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [177] pushproplist ............................ <[#act: "std", #fr: 0]>
  [178] pushsymb 223 ............................ <#act>
  [180] pushcons 17 ............................. <"wlk">
  [182] pushsymb 232 ............................ <#fr>
  [184] pushint8 2 .............................. <2>
  [186] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [188] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [189] pushsymb 223 ............................ <#act>
  [191] pushcons 17 ............................. <"wlk">
  [193] pushsymb 232 ............................ <#fr>
  [195] pushint8 2 .............................. <2>
  [197] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [199] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [200] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [202] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [203] pusharglistnoret 3 ...................... <me.aDanceOverride[#bd], #prts, [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [205] objcall 233 ............................. me.aDanceOverride[#bd][#prts] = [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]
  [207] getparam 0 .............................. <me>
  [209] pushsymb 230 ............................ <#aDanceOverride>
  [211] pushsymb 133 ............................ <#lg>
  [213] pusharglist 0 ........................... <[:]>
  [215] pushproplist ............................ <[:]>
  [216] pusharglistnoret 4 ...................... <me, #aDanceOverride, #lg, [:]>
  [218] objcall 196 ............................. me.aDanceOverride[#lg] = [:]
  [220] getparam 0 .............................. <me>
  [222] pushsymb 230 ............................ <#aDanceOverride>
  [224] pushsymb 133 ............................ <#lg>
  [226] pusharglist 3 ........................... <me, #aDanceOverride, #lg>
  [228] objcall 212 ............................. <me.aDanceOverride[#lg]>
  [230] pushsymb 231 ............................ <#prts>
  [232] pushsymb 223 ............................ <#act>
  [234] pushcons 3 .............................. <"std">
  [236] pushsymb 232 ............................ <#fr>
  [238] pushzero ................................ <0>
  [239] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [241] pushproplist ............................ <[#act: "std", #fr: 0]>
  [242] pushsymb 223 ............................ <#act>
  [244] pushcons 3 .............................. <"std">
  [246] pushsymb 232 ............................ <#fr>
  [248] pushzero ................................ <0>
  [249] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [251] pushproplist ............................ <[#act: "std", #fr: 0]>
  [252] pushsymb 223 ............................ <#act>
  [254] pushcons 17 ............................. <"wlk">
  [256] pushsymb 232 ............................ <#fr>
  [258] pushzero ................................ <0>
  [259] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [261] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [262] pushsymb 223 ............................ <#act>
  [264] pushcons 17 ............................. <"wlk">
  [266] pushsymb 232 ............................ <#fr>
  [268] pushzero ................................ <0>
  [269] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [271] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [272] pushsymb 223 ............................ <#act>
  [274] pushcons 3 .............................. <"std">
  [276] pushsymb 232 ............................ <#fr>
  [278] pushzero ................................ <0>
  [279] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [281] pushproplist ............................ <[#act: "std", #fr: 0]>
  [282] pushsymb 223 ............................ <#act>
  [284] pushcons 3 .............................. <"std">
  [286] pushsymb 232 ............................ <#fr>
  [288] pushzero ................................ <0>
  [289] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [291] pushproplist ............................ <[#act: "std", #fr: 0]>
  [292] pushsymb 223 ............................ <#act>
  [294] pushcons 17 ............................. <"wlk">
  [296] pushsymb 232 ............................ <#fr>
  [298] pushint8 2 .............................. <2>
  [300] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [302] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [303] pushsymb 223 ............................ <#act>
  [305] pushcons 17 ............................. <"wlk">
  [307] pushsymb 232 ............................ <#fr>
  [309] pushint8 2 .............................. <2>
  [311] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [313] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [314] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [316] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [317] pusharglistnoret 3 ...................... <me.aDanceOverride[#lg], #prts, [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [319] objcall 233 ............................. me.aDanceOverride[#lg][#prts] = [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]
  [321] getparam 0 .............................. <me>
  [323] pushsymb 230 ............................ <#aDanceOverride>
  [325] pushsymb 132 ............................ <#sh>
  [327] pusharglist 0 ........................... <[:]>
  [329] pushproplist ............................ <[:]>
  [330] pusharglistnoret 4 ...................... <me, #aDanceOverride, #sh, [:]>
  [332] objcall 196 ............................. me.aDanceOverride[#sh] = [:]
  [334] getparam 0 .............................. <me>
  [336] pushsymb 230 ............................ <#aDanceOverride>
  [338] pushsymb 132 ............................ <#sh>
  [340] pusharglist 3 ........................... <me, #aDanceOverride, #sh>
  [342] objcall 212 ............................. <me.aDanceOverride[#sh]>
  [344] pushsymb 231 ............................ <#prts>
  [346] pushsymb 223 ............................ <#act>
  [348] pushcons 3 .............................. <"std">
  [350] pushsymb 232 ............................ <#fr>
  [352] pushzero ................................ <0>
  [353] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [355] pushproplist ............................ <[#act: "std", #fr: 0]>
  [356] pushsymb 223 ............................ <#act>
  [358] pushcons 3 .............................. <"std">
  [360] pushsymb 232 ............................ <#fr>
  [362] pushzero ................................ <0>
  [363] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [365] pushproplist ............................ <[#act: "std", #fr: 0]>
  [366] pushsymb 223 ............................ <#act>
  [368] pushcons 17 ............................. <"wlk">
  [370] pushsymb 232 ............................ <#fr>
  [372] pushzero ................................ <0>
  [373] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [375] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [376] pushsymb 223 ............................ <#act>
  [378] pushcons 17 ............................. <"wlk">
  [380] pushsymb 232 ............................ <#fr>
  [382] pushzero ................................ <0>
  [383] pusharglist 4 ........................... <[#act: "wlk", #fr: 0]>
  [385] pushproplist ............................ <[#act: "wlk", #fr: 0]>
  [386] pushsymb 223 ............................ <#act>
  [388] pushcons 3 .............................. <"std">
  [390] pushsymb 232 ............................ <#fr>
  [392] pushzero ................................ <0>
  [393] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [395] pushproplist ............................ <[#act: "std", #fr: 0]>
  [396] pushsymb 223 ............................ <#act>
  [398] pushcons 3 .............................. <"std">
  [400] pushsymb 232 ............................ <#fr>
  [402] pushzero ................................ <0>
  [403] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [405] pushproplist ............................ <[#act: "std", #fr: 0]>
  [406] pushsymb 223 ............................ <#act>
  [408] pushcons 17 ............................. <"wlk">
  [410] pushsymb 232 ............................ <#fr>
  [412] pushint8 2 .............................. <2>
  [414] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [416] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [417] pushsymb 223 ............................ <#act>
  [419] pushcons 17 ............................. <"wlk">
  [421] pushsymb 232 ............................ <#fr>
  [423] pushint8 2 .............................. <2>
  [425] pusharglist 4 ........................... <[#act: "wlk", #fr: 2]>
  [427] pushproplist ............................ <[#act: "wlk", #fr: 2]>
  [428] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [430] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [431] pusharglistnoret 3 ...................... <me.aDanceOverride[#sh], #prts, [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]>
  [433] objcall 233 ............................. me.aDanceOverride[#sh][#prts] = [[#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 0], [#act: "wlk", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 2], [#act: "wlk", #fr: 2]]
  [435] getparam 0 .............................. <me>
  [437] pushsymb 230 ............................ <#aDanceOverride>
  [439] pushsymb 129 ............................ <#lh>
  [441] pusharglist 0 ........................... <[:]>
  [443] pushproplist ............................ <[:]>
  [444] pusharglistnoret 4 ...................... <me, #aDanceOverride, #lh, [:]>
  [446] objcall 196 ............................. me.aDanceOverride[#lh] = [:]
  [448] getparam 0 .............................. <me>
  [450] pushsymb 230 ............................ <#aDanceOverride>
  [452] pushsymb 129 ............................ <#lh>
  [454] pusharglist 3 ........................... <me, #aDanceOverride, #lh>
  [456] objcall 212 ............................. <me.aDanceOverride[#lh]>
  [458] pushsymb 231 ............................ <#prts>
  [460] pushsymb 223 ............................ <#act>
  [462] pushcons 18 ............................. <"crr">
  [464] pushsymb 232 ............................ <#fr>
  [466] pushzero ................................ <0>
  [467] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [469] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [470] pushsymb 223 ............................ <#act>
  [472] pushcons 17 ............................. <"wlk">
  [474] pushsymb 232 ............................ <#fr>
  [476] pushint8 1 .............................. <1>
  [478] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [480] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [481] pushsymb 223 ............................ <#act>
  [483] pushcons 3 .............................. <"std">
  [485] pushsymb 232 ............................ <#fr>
  [487] pushzero ................................ <0>
  [488] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [490] pushproplist ............................ <[#act: "std", #fr: 0]>
  [491] pushsymb 223 ............................ <#act>
  [493] pushcons 3 .............................. <"std">
  [495] pushsymb 232 ............................ <#fr>
  [497] pushzero ................................ <0>
  [498] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [500] pushproplist ............................ <[#act: "std", #fr: 0]>
  [501] pushsymb 223 ............................ <#act>
  [503] pushcons 3 .............................. <"std">
  [505] pushsymb 232 ............................ <#fr>
  [507] pushzero ................................ <0>
  [508] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [510] pushproplist ............................ <[#act: "std", #fr: 0]>
  [511] pushsymb 223 ............................ <#act>
  [513] pushcons 17 ............................. <"wlk">
  [515] pushsymb 232 ............................ <#fr>
  [517] pushint8 1 .............................. <1>
  [519] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [521] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [522] pushsymb 223 ............................ <#act>
  [524] pushcons 18 ............................. <"crr">
  [526] pushsymb 232 ............................ <#fr>
  [528] pushzero ................................ <0>
  [529] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [531] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [532] pushsymb 223 ............................ <#act>
  [534] pushcons 18 ............................. <"crr">
  [536] pushsymb 232 ............................ <#fr>
  [538] pushzero ................................ <0>
  [539] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [541] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [542] pusharglist 8 ........................... <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [544] pushlist ................................ <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [545] pusharglistnoret 3 ...................... <me.aDanceOverride[#lh], #prts, [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [547] objcall 233 ............................. me.aDanceOverride[#lh][#prts] = [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]
  [549] getparam 0 .............................. <me>
  [551] pushsymb 230 ............................ <#aDanceOverride>
  [553] pushsymb 129 ............................ <#lh>
  [555] pusharglist 3 ........................... <me, #aDanceOverride, #lh>
  [557] objcall 212 ............................. <me.aDanceOverride[#lh]>
  [559] pushsymb 234 ............................ <#locOff>
  [561] getlocal 0 .............................. <aLocOff>
  [563] pusharglistnoret 3 ...................... <me.aDanceOverride[#lh], #locOff, aLocOff>
  [565] objcall 233 ............................. me.aDanceOverride[#lh][#locOff] = aLocOff
  [567] getparam 0 .............................. <me>
  [569] pushsymb 230 ............................ <#aDanceOverride>
  [571] pushsymb 130 ............................ <#ls>
  [573] pusharglist 0 ........................... <[:]>
  [575] pushproplist ............................ <[:]>
  [576] pusharglistnoret 4 ...................... <me, #aDanceOverride, #ls, [:]>
  [578] objcall 196 ............................. me.aDanceOverride[#ls] = [:]
  [580] getparam 0 .............................. <me>
  [582] pushsymb 230 ............................ <#aDanceOverride>
  [584] pushsymb 130 ............................ <#ls>
  [586] pusharglist 3 ........................... <me, #aDanceOverride, #ls>
  [588] objcall 212 ............................. <me.aDanceOverride[#ls]>
  [590] pushsymb 231 ............................ <#prts>
  [592] pushsymb 223 ............................ <#act>
  [594] pushcons 18 ............................. <"crr">
  [596] pushsymb 232 ............................ <#fr>
  [598] pushzero ................................ <0>
  [599] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [601] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [602] pushsymb 223 ............................ <#act>
  [604] pushcons 17 ............................. <"wlk">
  [606] pushsymb 232 ............................ <#fr>
  [608] pushint8 1 .............................. <1>
  [610] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [612] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [613] pushsymb 223 ............................ <#act>
  [615] pushcons 3 .............................. <"std">
  [617] pushsymb 232 ............................ <#fr>
  [619] pushzero ................................ <0>
  [620] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [622] pushproplist ............................ <[#act: "std", #fr: 0]>
  [623] pushsymb 223 ............................ <#act>
  [625] pushcons 3 .............................. <"std">
  [627] pushsymb 232 ............................ <#fr>
  [629] pushzero ................................ <0>
  [630] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [632] pushproplist ............................ <[#act: "std", #fr: 0]>
  [633] pushsymb 223 ............................ <#act>
  [635] pushcons 3 .............................. <"std">
  [637] pushsymb 232 ............................ <#fr>
  [639] pushzero ................................ <0>
  [640] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [642] pushproplist ............................ <[#act: "std", #fr: 0]>
  [643] pushsymb 223 ............................ <#act>
  [645] pushcons 17 ............................. <"wlk">
  [647] pushsymb 232 ............................ <#fr>
  [649] pushint8 1 .............................. <1>
  [651] pusharglist 4 ........................... <[#act: "wlk", #fr: 1]>
  [653] pushproplist ............................ <[#act: "wlk", #fr: 1]>
  [654] pushsymb 223 ............................ <#act>
  [656] pushcons 18 ............................. <"crr">
  [658] pushsymb 232 ............................ <#fr>
  [660] pushzero ................................ <0>
  [661] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [663] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [664] pushsymb 223 ............................ <#act>
  [666] pushcons 18 ............................. <"crr">
  [668] pushsymb 232 ............................ <#fr>
  [670] pushzero ................................ <0>
  [671] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [673] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [674] pusharglist 8 ........................... <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [676] pushlist ................................ <[[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [677] pusharglistnoret 3 ...................... <me.aDanceOverride[#ls], #prts, [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]>
  [679] objcall 233 ............................. me.aDanceOverride[#ls][#prts] = [[#act: "crr", #fr: 0], [#act: "wlk", #fr: 1], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "std", #fr: 0], [#act: "wlk", #fr: 1], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0]]
  [681] getparam 0 .............................. <me>
  [683] pushsymb 230 ............................ <#aDanceOverride>
  [685] pushsymb 130 ............................ <#ls>
  [687] pusharglist 3 ........................... <me, #aDanceOverride, #ls>
  [689] objcall 212 ............................. <me.aDanceOverride[#ls]>
  [691] pushsymb 234 ............................ <#locOff>
  [693] getlocal 0 .............................. <aLocOff>
  [695] pusharglistnoret 3 ...................... <me.aDanceOverride[#ls], #locOff, aLocOff>
  [697] objcall 233 ............................. me.aDanceOverride[#ls][#locOff] = aLocOff
  [699] getparam 0 .............................. <me>
  [701] pushsymb 230 ............................ <#aDanceOverride>
  [703] pushsymb 136 ............................ <#rh>
  [705] pusharglist 0 ........................... <[:]>
  [707] pushproplist ............................ <[:]>
  [708] pusharglistnoret 4 ...................... <me, #aDanceOverride, #rh, [:]>
  [710] objcall 196 ............................. me.aDanceOverride[#rh] = [:]
  [712] getparam 0 .............................. <me>
  [714] pushsymb 230 ............................ <#aDanceOverride>
  [716] pushsymb 136 ............................ <#rh>
  [718] pusharglist 3 ........................... <me, #aDanceOverride, #rh>
  [720] objcall 212 ............................. <me.aDanceOverride[#rh]>
  [722] pushsymb 231 ............................ <#prts>
  [724] pushsymb 223 ............................ <#act>
  [726] pushcons 3 .............................. <"std">
  [728] pushsymb 232 ............................ <#fr>
  [730] pushzero ................................ <0>
  [731] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [733] pushproplist ............................ <[#act: "std", #fr: 0]>
  [734] pushsymb 223 ............................ <#act>
  [736] pushcons 17 ............................. <"wlk">
  [738] pushsymb 232 ............................ <#fr>
  [740] pushint8 3 .............................. <3>
  [742] pusharglist 4 ........................... <[#act: "wlk", #fr: 3]>
  [744] pushproplist ............................ <[#act: "wlk", #fr: 3]>
  [745] pushsymb 223 ............................ <#act>
  [747] pushcons 18 ............................. <"crr">
  [749] pushsymb 232 ............................ <#fr>
  [751] pushzero ................................ <0>
  [752] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [754] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [755] pushsymb 223 ............................ <#act>
  [757] pushcons 18 ............................. <"crr">
  [759] pushsymb 232 ............................ <#fr>
  [761] pushzero ................................ <0>
  [762] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [764] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [765] pushsymb 223 ............................ <#act>
  [767] pushcons 18 ............................. <"crr">
  [769] pushsymb 232 ............................ <#fr>
  [771] pushzero ................................ <0>
  [772] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [774] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [775] pushsymb 223 ............................ <#act>
  [777] pushcons 17 ............................. <"wlk">
  [779] pushsymb 232 ............................ <#fr>
  [781] pushint8 3 .............................. <3>
  [783] pusharglist 4 ........................... <[#act: "wlk", #fr: 3]>
  [785] pushproplist ............................ <[#act: "wlk", #fr: 3]>
  [786] pushsymb 223 ............................ <#act>
  [788] pushcons 3 .............................. <"std">
  [790] pushsymb 232 ............................ <#fr>
  [792] pushzero ................................ <0>
  [793] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [795] pushproplist ............................ <[#act: "std", #fr: 0]>
  [796] pushsymb 223 ............................ <#act>
  [798] pushcons 3 .............................. <"std">
  [800] pushsymb 232 ............................ <#fr>
  [802] pushzero ................................ <0>
  [803] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [805] pushproplist ............................ <[#act: "std", #fr: 0]>
  [806] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [808] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [809] pusharglistnoret 3 ...................... <me.aDanceOverride[#rh], #prts, [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [811] objcall 233 ............................. me.aDanceOverride[#rh][#prts] = [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]
  [813] getparam 0 .............................. <me>
  [815] pushsymb 230 ............................ <#aDanceOverride>
  [817] pushsymb 136 ............................ <#rh>
  [819] pusharglist 3 ........................... <me, #aDanceOverride, #rh>
  [821] objcall 212 ............................. <me.aDanceOverride[#rh]>
  [823] pushsymb 234 ............................ <#locOff>
  [825] getlocal 0 .............................. <aLocOff>
  [827] pusharglistnoret 3 ...................... <me.aDanceOverride[#rh], #locOff, aLocOff>
  [829] objcall 233 ............................. me.aDanceOverride[#rh][#locOff] = aLocOff
  [831] getparam 0 .............................. <me>
  [833] pushsymb 230 ............................ <#aDanceOverride>
  [835] pushsymb 137 ............................ <#rs>
  [837] pusharglist 0 ........................... <[:]>
  [839] pushproplist ............................ <[:]>
  [840] pusharglistnoret 4 ...................... <me, #aDanceOverride, #rs, [:]>
  [842] objcall 196 ............................. me.aDanceOverride[#rs] = [:]
  [844] getparam 0 .............................. <me>
  [846] pushsymb 230 ............................ <#aDanceOverride>
  [848] pushsymb 137 ............................ <#rs>
  [850] pusharglist 3 ........................... <me, #aDanceOverride, #rs>
  [852] objcall 212 ............................. <me.aDanceOverride[#rs]>
  [854] pushsymb 231 ............................ <#prts>
  [856] pushsymb 223 ............................ <#act>
  [858] pushcons 3 .............................. <"std">
  [860] pushsymb 232 ............................ <#fr>
  [862] pushzero ................................ <0>
  [863] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [865] pushproplist ............................ <[#act: "std", #fr: 0]>
  [866] pushsymb 223 ............................ <#act>
  [868] pushcons 17 ............................. <"wlk">
  [870] pushsymb 232 ............................ <#fr>
  [872] pushint8 3 .............................. <3>
  [874] pusharglist 4 ........................... <[#act: "wlk", #fr: 3]>
  [876] pushproplist ............................ <[#act: "wlk", #fr: 3]>
  [877] pushsymb 223 ............................ <#act>
  [879] pushcons 18 ............................. <"crr">
  [881] pushsymb 232 ............................ <#fr>
  [883] pushzero ................................ <0>
  [884] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [886] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [887] pushsymb 223 ............................ <#act>
  [889] pushcons 18 ............................. <"crr">
  [891] pushsymb 232 ............................ <#fr>
  [893] pushzero ................................ <0>
  [894] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [896] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [897] pushsymb 223 ............................ <#act>
  [899] pushcons 18 ............................. <"crr">
  [901] pushsymb 232 ............................ <#fr>
  [903] pushzero ................................ <0>
  [904] pusharglist 4 ........................... <[#act: "crr", #fr: 0]>
  [906] pushproplist ............................ <[#act: "crr", #fr: 0]>
  [907] pushsymb 223 ............................ <#act>
  [909] pushcons 17 ............................. <"wlk">
  [911] pushsymb 232 ............................ <#fr>
  [913] pushint8 3 .............................. <3>
  [915] pusharglist 4 ........................... <[#act: "wlk", #fr: 3]>
  [917] pushproplist ............................ <[#act: "wlk", #fr: 3]>
  [918] pushsymb 223 ............................ <#act>
  [920] pushcons 3 .............................. <"std">
  [922] pushsymb 232 ............................ <#fr>
  [924] pushzero ................................ <0>
  [925] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [927] pushproplist ............................ <[#act: "std", #fr: 0]>
  [928] pushsymb 223 ............................ <#act>
  [930] pushcons 3 .............................. <"std">
  [932] pushsymb 232 ............................ <#fr>
  [934] pushzero ................................ <0>
  [935] pusharglist 4 ........................... <[#act: "std", #fr: 0]>
  [937] pushproplist ............................ <[#act: "std", #fr: 0]>
  [938] pusharglist 8 ........................... <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [940] pushlist ................................ <[[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [941] pusharglistnoret 3 ...................... <me.aDanceOverride[#rs], #prts, [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]>
  [943] objcall 233 ............................. me.aDanceOverride[#rs][#prts] = [[#act: "std", #fr: 0], [#act: "wlk", #fr: 3], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "crr", #fr: 0], [#act: "wlk", #fr: 3], [#act: "std", #fr: 0], [#act: "std", #fr: 0]]
  [945] getparam 0 .............................. <me>
  [947] pushsymb 230 ............................ <#aDanceOverride>
  [949] pushsymb 137 ............................ <#rs>
  [951] pusharglist 3 ........................... <me, #aDanceOverride, #rs>
  [953] objcall 212 ............................. <me.aDanceOverride[#rs]>
  [955] pushsymb 234 ............................ <#locOff>
  [957] getlocal 0 .............................. <aLocOff>
  [959] pusharglistnoret 3 ...................... <me.aDanceOverride[#rs], #locOff, aLocOff>
  [961] objcall 233 ............................. me.aDanceOverride[#rs][#locOff] = aLocOff
  [963] getparam 0 .............................. <me>
  [965] pushsymb 230 ............................ <#aDanceOverride>
  [967] pushsymb 134 ............................ <#ch>
  [969] pusharglist 0 ........................... <[:]>
  [971] pushproplist ............................ <[:]>
  [972] pusharglistnoret 4 ...................... <me, #aDanceOverride, #ch, [:]>
  [974] objcall 196 ............................. me.aDanceOverride[#ch] = [:]
  [976] getparam 0 .............................. <me>
  [978] pushsymb 230 ............................ <#aDanceOverride>
  [980] pushsymb 134 ............................ <#ch>
  [982] pusharglist 3 ........................... <me, #aDanceOverride, #ch>
  [984] objcall 212 ............................. <me.aDanceOverride[#ch]>
  [986] pushsymb 234 ............................ <#locOff>
  [988] getlocal 0 .............................. <aLocOff>
  [990] pusharglistnoret 3 ...................... <me.aDanceOverride[#ch], #locOff, aLocOff>
  [992] objcall 233 ............................. me.aDanceOverride[#ch][#locOff] = aLocOff
  [994] getparam 0 .............................. <me>
  [996] pushsymb 230 ............................ <#aDanceOverride>
  [998] pushsymb 138 ............................ <#hd>
  [1000] pusharglist 0 .......................... <[:]>
  [1002] pushproplist ........................... <[:]>
  [1003] pusharglistnoret 4 ..................... <me, #aDanceOverride, #hd, [:]>
  [1005] objcall 196 ............................ me.aDanceOverride[#hd] = [:]
  [1007] getparam 0 ............................. <me>
  [1009] pushsymb 230 ........................... <#aDanceOverride>
  [1011] pushsymb 138 ........................... <#hd>
  [1013] pusharglist 3 .......................... <me, #aDanceOverride, #hd>
  [1015] objcall 212 ............................ <me.aDanceOverride[#hd]>
  [1017] pushsymb 234 ........................... <#locOff>
  [1019] getlocal 0 ............................. <aLocOff>
  [1021] pusharglistnoret 3 ..................... <me.aDanceOverride[#hd], #locOff, aLocOff>
  [1023] objcall 233 ............................ me.aDanceOverride[#hd][#locOff] = aLocOff
  [1025] getparam 0 ............................. <me>
  [1027] pushsymb 230 ........................... <#aDanceOverride>
  [1029] pushsymb 138 ........................... <#hd>
  [1031] pusharglist 3 .......................... <me, #aDanceOverride, #hd>
  [1033] objcall 212 ............................ <me.aDanceOverride[#hd]>
  [1035] pushsymb 228 ........................... <#dirOff>
  [1037] getlocal 1 ............................. <aDirOff>
  [1039] pusharglistnoret 3 ..................... <me.aDanceOverride[#hd], #dirOff, aDirOff>
  [1041] objcall 233 ............................ me.aDanceOverride[#hd][#dirOff] = aDirOff
  [1043] getparam 0 ............................. <me>
  [1045] pushsymb 230 ........................... <#aDanceOverride>
  [1047] pushsymb 139 ........................... <#fc>
  [1049] pusharglist 0 .......................... <[:]>
  [1051] pushproplist ........................... <[:]>
  [1052] pusharglistnoret 4 ..................... <me, #aDanceOverride, #fc, [:]>
  [1054] objcall 196 ............................ me.aDanceOverride[#fc] = [:]
  [1056] getparam 0 ............................. <me>
  [1058] pushsymb 230 ........................... <#aDanceOverride>
  [1060] pushsymb 139 ........................... <#fc>
  [1062] pusharglist 3 .......................... <me, #aDanceOverride, #fc>
  [1064] objcall 212 ............................ <me.aDanceOverride[#fc]>
  [1066] pushsymb 234 ........................... <#locOff>
  [1068] getlocal 0 ............................. <aLocOff>
  [1070] pusharglistnoret 3 ..................... <me.aDanceOverride[#fc], #locOff, aLocOff>
  [1072] objcall 233 ............................ me.aDanceOverride[#fc][#locOff] = aLocOff
  [1074] getparam 0 ............................. <me>
  [1076] pushsymb 230 ........................... <#aDanceOverride>
  [1078] pushsymb 139 ........................... <#fc>
  [1080] pusharglist 3 .......................... <me, #aDanceOverride, #fc>
  [1082] objcall 212 ............................ <me.aDanceOverride[#fc]>
  [1084] pushsymb 228 ........................... <#dirOff>
  [1086] getlocal 1 ............................. <aDirOff>
  [1088] pusharglistnoret 3 ..................... <me.aDanceOverride[#fc], #dirOff, aDirOff>
  [1090] objcall 233 ............................ me.aDanceOverride[#fc][#dirOff] = aDirOff
  [1092] getparam 0 ............................. <me>
  [1094] pushsymb 230 ........................... <#aDanceOverride>
  [1096] pushsymb 140 ........................... <#ey>
  [1098] pusharglist 0 .......................... <[:]>
  [1100] pushproplist ........................... <[:]>
  [1101] pusharglistnoret 4 ..................... <me, #aDanceOverride, #ey, [:]>
  [1103] objcall 196 ............................ me.aDanceOverride[#ey] = [:]
  [1105] getparam 0 ............................. <me>
  [1107] pushsymb 230 ........................... <#aDanceOverride>
  [1109] pushsymb 140 ........................... <#ey>
  [1111] pusharglist 3 .......................... <me, #aDanceOverride, #ey>
  [1113] objcall 212 ............................ <me.aDanceOverride[#ey]>
  [1115] pushsymb 234 ........................... <#locOff>
  [1117] getlocal 0 ............................. <aLocOff>
  [1119] pusharglistnoret 3 ..................... <me.aDanceOverride[#ey], #locOff, aLocOff>
  [1121] objcall 233 ............................ me.aDanceOverride[#ey][#locOff] = aLocOff
  [1123] getparam 0 ............................. <me>
  [1125] pushsymb 230 ........................... <#aDanceOverride>
  [1127] pushsymb 140 ........................... <#ey>
  [1129] pusharglist 3 .......................... <me, #aDanceOverride, #ey>
  [1131] objcall 212 ............................ <me.aDanceOverride[#ey]>
  [1133] pushsymb 228 ........................... <#dirOff>
  [1135] getlocal 1 ............................. <aDirOff>
  [1137] pusharglistnoret 3 ..................... <me.aDanceOverride[#ey], #dirOff, aDirOff>
  [1139] objcall 233 ............................ me.aDanceOverride[#ey][#dirOff] = aDirOff
  [1141] getparam 0 ............................. <me>
  [1143] pushsymb 230 ........................... <#aDanceOverride>
  [1145] pushsymb 141 ........................... <#hr>
  [1147] pusharglist 0 .......................... <[:]>
  [1149] pushproplist ........................... <[:]>
  [1150] pusharglistnoret 4 ..................... <me, #aDanceOverride, #hr, [:]>
  [1152] objcall 196 ............................ me.aDanceOverride[#hr] = [:]
  [1154] getparam 0 ............................. <me>
  [1156] pushsymb 230 ........................... <#aDanceOverride>
  [1158] pushsymb 141 ........................... <#hr>
  [1160] pusharglist 3 .......................... <me, #aDanceOverride, #hr>
  [1162] objcall 212 ............................ <me.aDanceOverride[#hr]>
  [1164] pushsymb 234 ........................... <#locOff>
  [1166] getlocal 0 ............................. <aLocOff>
  [1168] pusharglistnoret 3 ..................... <me.aDanceOverride[#hr], #locOff, aLocOff>
  [1170] objcall 233 ............................ me.aDanceOverride[#hr][#locOff] = aLocOff
  [1172] getparam 0 ............................. <me>
  [1174] pushsymb 230 ........................... <#aDanceOverride>
  [1176] pushsymb 141 ........................... <#hr>
  [1178] pusharglist 3 .......................... <me, #aDanceOverride, #hr>
  [1180] objcall 212 ............................ <me.aDanceOverride[#hr]>
  [1182] pushsymb 228 ........................... <#dirOff>
  [1184] getlocal 1 ............................. <aDirOff>
  [1186] pusharglistnoret 3 ..................... <me.aDanceOverride[#hr], #dirOff, aDirOff>
  [1188] objcall 233 ............................ me.aDanceOverride[#hr][#dirOff] = aDirOff
  [1190] getparam 0 ............................. <me>
  [1192] pushsymb 230 ........................... <#aDanceOverride>
  [1194] pushsymb 135 ........................... <#ri>
  [1196] pusharglist 0 .......................... <[:]>
  [1198] pushproplist ........................... <[:]>
  [1199] pusharglistnoret 4 ..................... <me, #aDanceOverride, #ri, [:]>
  [1201] objcall 196 ............................ me.aDanceOverride[#ri] = [:]
  [1203] getparam 0 ............................. <me>
  [1205] pushsymb 230 ........................... <#aDanceOverride>
  [1207] pushsymb 135 ........................... <#ri>
  [1209] pusharglist 3 .......................... <me, #aDanceOverride, #ri>
  [1211] objcall 212 ............................ <me.aDanceOverride[#ri]>
  [1213] pushsymb 234 ........................... <#locOff>
  [1215] getlocal 0 ............................. <aLocOff>
  [1217] pusharglistnoret 3 ..................... <me.aDanceOverride[#ri], #locOff, aLocOff>
  [1219] objcall 233 ............................ me.aDanceOverride[#ri][#locOff] = aLocOff
  [1221] ret
end

on setDirectionMap me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pushint8 6 .............................. <6>
  [  5] pushint8 1 .............................. <1>
  [  7] pushint8 5 .............................. <5>
  [  9] pushint8 2 .............................. <2>
  [ 11] pushint8 4 .............................. <4>
  [ 13] pushint8 3 .............................. <3>
  [ 15] pushint8 7 .............................. <7>
  [ 17] pushint8 4 .............................. <4>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pushint8 5 .............................. <5>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pushint8 6 .............................. <6>
  [ 27] pushzero ................................ <0>
  [ 28] pushint8 7 .............................. <7>
  [ 30] pushint8 3 .............................. <3>
  [ 32] pusharglist 16 .......................... <[0: 6, 1: 5, 2: 4, 3: 7, 4: 2, 5: 1, 6: 0, 7: 3]>
  [ 34] pushproplist ............................ <[0: 6, 1: 5, 2: 4, 3: 7, 4: 2, 5: 1, 6: 0, 7: 3]>
  [ 35] setobjprop 237 .......................... me.aDirectionMap = [0: 6, 1: 5, 2: 4, 3: 7, 4: 2, 5: 1, 6: 0, 7: 3]
  [ 37] ret
end

on setDrawOrder me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 87 ........................... <me.iDirection>
  [  4] peek 0 .................................. case me.iDirection of
  [  6] pushint8 1 .............................. <1>
  [  8] eq
  [  9] jmpifz [ 48] ............................ (case) 1:
  [ 12] getparam 0 .............................. <me>
  [ 14] pushsymb 131 ............................ <#bd>
  [ 16] pushsymb 132 ............................ <#sh>
  [ 18] pushsymb 133 ............................ <#lg>
  [ 20] pushsymb 129 ............................ <#lh>
  [ 22] pushsymb 130 ............................ <#ls>
  [ 24] pushsymb 134 ............................ <#ch>
  [ 26] pushsymb 138 ............................ <#hd>
  [ 28] pushsymb 139 ............................ <#fc>
  [ 30] pushsymb 140 ............................ <#ey>
  [ 32] pushsymb 135 ............................ <#ri>
  [ 34] pushsymb 136 ............................ <#rh>
  [ 36] pushsymb 137 ............................ <#rs>
  [ 38] pushsymb 141 ............................ <#hr>
  [ 40] pusharglist 13 .......................... <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [ 42] pushlist ................................ <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [ 43] setobjprop 238 .......................... me.aDrawOrder = [#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [ 45] jmp [393]
  [ 48] peek 0
  [ 50] pushint8 5 .............................. <5>
  [ 52] eq
  [ 53] jmpifz [ 92] ............................ (case) 5:
  [ 56] getparam 0 .............................. <me>
  [ 58] pushsymb 131 ............................ <#bd>
  [ 60] pushsymb 132 ............................ <#sh>
  [ 62] pushsymb 133 ............................ <#lg>
  [ 64] pushsymb 129 ............................ <#lh>
  [ 66] pushsymb 130 ............................ <#ls>
  [ 68] pushsymb 134 ............................ <#ch>
  [ 70] pushsymb 138 ............................ <#hd>
  [ 72] pushsymb 139 ............................ <#fc>
  [ 74] pushsymb 140 ............................ <#ey>
  [ 76] pushsymb 135 ............................ <#ri>
  [ 78] pushsymb 136 ............................ <#rh>
  [ 80] pushsymb 137 ............................ <#rs>
  [ 82] pushsymb 141 ............................ <#hr>
  [ 84] pusharglist 13 .......................... <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [ 86] pushlist ................................ <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [ 87] setobjprop 238 .......................... me.aDrawOrder = [#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [ 89] jmp [393]
  [ 92] peek 0
  [ 94] pushint8 4 .............................. <4>
  [ 96] nteq
  [ 97] jmpifz [108] ............................ (case) 4, ...
  [100] peek 0
  [102] pushint8 2 .............................. <2>
  [104] eq
  [105] jmpifz [197] ............................ (case) ..., 2:
  [108] getparam 0 .............................. <me>
  [110] getobjprop 117 .......................... <me.bDance>
  [112] getparam 0 .............................. <me>
  [114] pusharglist 1 ........................... <me>
  [116] objcall 56 .............................. <me.isWalking()>
  [118] not ..................................... <not me.isWalking()>
  [119] and ..................................... <me.bDance and not me.isWalking()>
  [120] jmpifz [161] ............................ if me.bDance and not me.isWalking() then / else
  [123] getparam 0 .............................. <me>
  [125] pushsymb 129 ............................ <#lh>
  [127] pushsymb 130 ............................ <#ls>
  [129] pushsymb 131 ............................ <#bd>
  [131] pushsymb 132 ............................ <#sh>
  [133] pushsymb 133 ............................ <#lg>
  [135] pushsymb 134 ............................ <#ch>
  [137] pushsymb 135 ............................ <#ri>
  [139] pushsymb 136 ............................ <#rh>
  [141] pushsymb 137 ............................ <#rs>
  [143] pushsymb 138 ............................ <#hd>
  [145] pushsymb 139 ............................ <#fc>
  [147] pushsymb 140 ............................ <#ey>
  [149] pushsymb 141 ............................ <#hr>
  [151] pushsymb 142 ............................ <#ht>
  [153] pusharglist 14 .......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [155] pushlist ................................ <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [156] setobjprop 238 .......................... me.aDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]
  [158] jmp [194]
  [161] getparam 0 .............................. <me>
  [163] pushsymb 131 ............................ <#bd>
  [165] pushsymb 132 ............................ <#sh>
  [167] pushsymb 133 ............................ <#lg>
  [169] pushsymb 129 ............................ <#lh>
  [171] pushsymb 130 ............................ <#ls>
  [173] pushsymb 134 ............................ <#ch>
  [175] pushsymb 138 ............................ <#hd>
  [177] pushsymb 139 ............................ <#fc>
  [179] pushsymb 140 ............................ <#ey>
  [181] pushsymb 135 ............................ <#ri>
  [183] pushsymb 136 ............................ <#rh>
  [185] pushsymb 137 ............................ <#rs>
  [187] pushsymb 141 ............................ <#hr>
  [189] pusharglist 13 .......................... <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [191] pushlist ................................ <[#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [192] setobjprop 238 .......................... me.aDrawOrder = [#bd, #sh, #lg, #lh, #ls, #ch, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [194] jmp [393]
  [197] peek 0
  [199] pushint8 3 .............................. <3>
  [201] eq
  [202] jmpifz [241] ............................ (case) 3:
  [205] getparam 0 .............................. <me>
  [207] pushsymb 131 ............................ <#bd>
  [209] pushsymb 132 ............................ <#sh>
  [211] pushsymb 133 ............................ <#lg>
  [213] pushsymb 134 ............................ <#ch>
  [215] pushsymb 129 ............................ <#lh>
  [217] pushsymb 130 ............................ <#ls>
  [219] pushsymb 138 ............................ <#hd>
  [221] pushsymb 139 ............................ <#fc>
  [223] pushsymb 140 ............................ <#ey>
  [225] pushsymb 135 ............................ <#ri>
  [227] pushsymb 136 ............................ <#rh>
  [229] pushsymb 137 ............................ <#rs>
  [231] pushsymb 141 ............................ <#hr>
  [233] pusharglist 13 .......................... <[#bd, #sh, #lg, #ch, #lh, #ls, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [235] pushlist ................................ <[#bd, #sh, #lg, #ch, #lh, #ls, #hd, #fc, #ey, #ri, #rh, #rs, #hr]>
  [236] setobjprop 238 .......................... me.aDrawOrder = [#bd, #sh, #lg, #ch, #lh, #ls, #hd, #fc, #ey, #ri, #rh, #rs, #hr]
  [238] jmp [393]
  [241] peek 0
  [243] pushint8 7 .............................. <7>
  [245] eq
  [246] jmpifz [283] ............................ (case) 7:
  [249] getparam 0 .............................. <me>
  [251] pushsymb 129 ............................ <#lh>
  [253] pushsymb 130 ............................ <#ls>
  [255] pushsymb 131 ............................ <#bd>
  [257] pushsymb 132 ............................ <#sh>
  [259] pushsymb 133 ............................ <#lg>
  [261] pushsymb 134 ............................ <#ch>
  [263] pushsymb 135 ............................ <#ri>
  [265] pushsymb 136 ............................ <#rh>
  [267] pushsymb 137 ............................ <#rs>
  [269] pushsymb 138 ............................ <#hd>
  [271] pushsymb 141 ............................ <#hr>
  [273] pushsymb 142 ............................ <#ht>
  [275] pusharglist 12 .......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]>
  [277] pushlist ................................ <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]>
  [278] setobjprop 238 .......................... me.aDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]
  [280] jmp [393]
  [283] peek 0
  [285] pushint8 6 .............................. <6>
  [287] nteq
  [288] jmpifz [298] ............................ (case) 6, ...
  [291] peek 0
  [293] pushzero ................................ <0>
  [294] eq
  [295] jmpifz [385] ............................ (case) ..., 0:
  [298] getparam 0 .............................. <me>
  [300] getobjprop 117 .......................... <me.bDance>
  [302] getparam 0 .............................. <me>
  [304] pusharglist 1 ........................... <me>
  [306] objcall 56 .............................. <me.isWalking()>
  [308] not ..................................... <not me.isWalking()>
  [309] and ..................................... <me.bDance and not me.isWalking()>
  [310] jmpifz [351] ............................ if me.bDance and not me.isWalking() then / else
  [313] getparam 0 .............................. <me>
  [315] pushsymb 129 ............................ <#lh>
  [317] pushsymb 130 ............................ <#ls>
  [319] pushsymb 131 ............................ <#bd>
  [321] pushsymb 132 ............................ <#sh>
  [323] pushsymb 133 ............................ <#lg>
  [325] pushsymb 134 ............................ <#ch>
  [327] pushsymb 135 ............................ <#ri>
  [329] pushsymb 136 ............................ <#rh>
  [331] pushsymb 137 ............................ <#rs>
  [333] pushsymb 138 ............................ <#hd>
  [335] pushsymb 139 ............................ <#fc>
  [337] pushsymb 140 ............................ <#ey>
  [339] pushsymb 141 ............................ <#hr>
  [341] pushsymb 142 ............................ <#ht>
  [343] pusharglist 14 .......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [345] pushlist ................................ <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]>
  [346] setobjprop 238 .......................... me.aDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #fc, #ey, #hr, #ht]
  [348] jmp [382]
  [351] getparam 0 .............................. <me>
  [353] pushsymb 129 ............................ <#lh>
  [355] pushsymb 130 ............................ <#ls>
  [357] pushsymb 131 ............................ <#bd>
  [359] pushsymb 132 ............................ <#sh>
  [361] pushsymb 133 ............................ <#lg>
  [363] pushsymb 134 ............................ <#ch>
  [365] pushsymb 135 ............................ <#ri>
  [367] pushsymb 136 ............................ <#rh>
  [369] pushsymb 137 ............................ <#rs>
  [371] pushsymb 138 ............................ <#hd>
  [373] pushsymb 141 ............................ <#hr>
  [375] pushsymb 142 ............................ <#ht>
  [377] pusharglist 12 .......................... <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]>
  [379] pushlist ................................ <[#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]>
  [380] setobjprop 238 .......................... me.aDrawOrder = [#lh, #ls, #bd, #sh, #lg, #ch, #ri, #rh, #rs, #hd, #hr, #ht]
  [382] jmp [393] ............................... (case) otherwise:
  [385] getparam 0 .............................. <me>
  [387] getparam 0 .............................. <me>
  [389] getobjprop 143 .......................... <me.aDefDrawOrder>
  [391] setobjprop 238 .......................... me.aDrawOrder = me.aDefDrawOrder
  [393] pop 1 ................................... end case
  [395] ret
end

on stepFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 80 ........................... <me.bDisplayStatus>
  [  4] jmpifz [ 13] ............................ if me.bDisplayStatus then
  [  7] getparam 0 .............................. <me>
  [  9] pusharglistnoret 1 ...................... <me>
  [ 11] objcall 19 .............................. me.displayDrawStatus()
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 104 .......................... <me.iFPS>
  [ 17] pushzero ................................ <0>
  [ 18] gt ...................................... <me.iFPS > 0>
  [ 19] jmpifz [ 53] ............................ if me.iFPS > 0 then
  [ 22] getmovieprop 105 ........................ <the milliSeconds>
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 106 .......................... <me.iFPSTimer>
  [ 28] sub ..................................... <the milliSeconds - me.iFPSTimer>
  [ 29] setlocal 0 .............................. iElapsedTime = the milliSeconds - me.iFPSTimer
  [ 31] getlocal 0 .............................. <iElapsedTime>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 107 .......................... <me.iFPSTimerLength>
  [ 37] gteq .................................... <iElapsedTime >= me.iFPSTimerLength>
  [ 38] jmpifz [ 53] ............................ if iElapsedTime >= me.iFPSTimerLength then
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 20 .............................. me.doFrameEvent()
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 149 ............................. return 1
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 1 ...................... <0>
  [ 56] extcall 149 ............................. return 0
  [ 58] ret
end

on displayDrawStatus me
  [  0] pushcons 4 .............................. <EMPTY>
  [  2] setlocal 0 .............................. sStatus = EMPTY
  [  4] getlocal 0 .............................. <sStatus>
  [  6] pushcons 19 ............................. <"DRAW TIME: ">
  [  8] joinstr ................................. <sStatus & "DRAW TIME: ">
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 240 .......................... <me.iDrawTime>
  [ 13] joinstr ................................. <sStatus & "DRAW TIME: " & me.iDrawTime>
  [ 14] pushcons 20 ............................. <RETURN>
  [ 16] joinstr ................................. <sStatus & "DRAW TIME: " & me.iDrawTime & RETURN>
  [ 17] setlocal 0 .............................. sStatus = sStatus & "DRAW TIME: " & me.iDrawTime & RETURN
  [ 19] getlocal 0 .............................. <sStatus>
  [ 21] pushcons 21 ............................. <"DRAW COUNT: ">
  [ 23] joinstr ................................. <sStatus & "DRAW COUNT: ">
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 241 .......................... <me.iDrawCount>
  [ 28] joinstr ................................. <sStatus & "DRAW COUNT: " & me.iDrawCount>
  [ 29] pushcons 20 ............................. <RETURN>
  [ 31] joinstr ................................. <sStatus & "DRAW COUNT: " & me.iDrawCount & RETURN>
  [ 32] setlocal 0 .............................. sStatus = sStatus & "DRAW COUNT: " & me.iDrawCount & RETURN
  [ 34] getlocal 0 .............................. <sStatus>
  [ 36] pushcons 22 ............................. <"DISPLAY TIME: ">
  [ 38] joinstr ................................. <sStatus & "DISPLAY TIME: ">
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 242 .......................... <me.iDisplayTime>
  [ 43] joinstr ................................. <sStatus & "DISPLAY TIME: " & me.iDisplayTime>
  [ 44] pushcons 20 ............................. <RETURN>
  [ 46] joinstr ................................. <sStatus & "DISPLAY TIME: " & me.iDisplayTime & RETURN>
  [ 47] setlocal 0 .............................. sStatus = sStatus & "DISPLAY TIME: " & me.iDisplayTime & RETURN
  [ 49] getlocal 0 .............................. <sStatus>
  [ 51] pushcons 23 ............................. <"DISPLAY COUNT: ">
  [ 53] joinstr ................................. <sStatus & "DISPLAY COUNT: ">
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 243 .......................... <me.iDisplayCount>
  [ 58] joinstr ................................. <sStatus & "DISPLAY COUNT: " & me.iDisplayCount>
  [ 59] pushcons 20 ............................. <RETURN>
  [ 61] joinstr ................................. <sStatus & "DISPLAY COUNT: " & me.iDisplayCount & RETURN>
  [ 62] setlocal 0 .............................. sStatus = sStatus & "DISPLAY COUNT: " & me.iDisplayCount & RETURN
  [ 64] getlocal 0 .............................. <sStatus>
  [ 66] pushcons 24 ............................. <"FRAME TIME: ">
  [ 68] joinstr ................................. <sStatus & "FRAME TIME: ">
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 244 .......................... <me.iFrameTime>
  [ 73] joinstr ................................. <sStatus & "FRAME TIME: " & me.iFrameTime>
  [ 74] pushcons 20 ............................. <RETURN>
  [ 76] joinstr ................................. <sStatus & "FRAME TIME: " & me.iFrameTime & RETURN>
  [ 77] setlocal 0 .............................. sStatus = sStatus & "FRAME TIME: " & me.iFrameTime & RETURN
  [ 79] getlocal 0 .............................. <sStatus>
  [ 81] pushcons 25 ............................. <"FRAME COUNT: ">
  [ 83] joinstr ................................. <sStatus & "FRAME COUNT: ">
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 245 .......................... <me.iFrameCount>
  [ 88] joinstr ................................. <sStatus & "FRAME COUNT: " & me.iFrameCount>
  [ 89] pushcons 20 ............................. <RETURN>
  [ 91] joinstr ................................. <sStatus & "FRAME COUNT: " & me.iFrameCount & RETURN>
  [ 92] setlocal 0 .............................. sStatus = sStatus & "FRAME COUNT: " & me.iFrameCount & RETURN
  [ 94] pushcons 26 ............................. <"DrawStatus">
  [ 96] pusharglist 1 ........................... <"DrawStatus">
  [ 98] extcall 165 ............................. <member("DrawStatus")>
  [100] getlocal 0 .............................. <sStatus>
  [102] setobjprop 220 .......................... member("DrawStatus").text = sStatus
  [104] ret
end

on doFrameEvent me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDraw = 0
  [  3] getmovieprop 105 ........................ <the milliSeconds>
  [  5] setlocal 1 .............................. iStartTime = the milliSeconds
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 113 .......................... <me.bChatting>
  [ 11] jmpifz [ 53] ............................ if me.bChatting then
  [ 14] getmovieprop 105 ........................ <the milliSeconds>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 111 .......................... <me.iChatTimer>
  [ 20] sub ..................................... <the milliSeconds - me.iChatTimer>
  [ 21] setlocal 2 .............................. iElapsedChatTime = the milliSeconds - me.iChatTimer
  [ 23] getlocal 2 .............................. <iElapsedChatTime>
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 112 .......................... <me.iChatTimerLength>
  [ 29] gteq .................................... <iElapsedChatTime >= me.iChatTimerLength>
  [ 30] jmpifz [ 53] ............................ if iElapsedChatTime >= me.iChatTimerLength then
  [ 33] getparam 0 .............................. <me>
  [ 35] pushzero ................................ <0>
  [ 36] setobjprop 113 .......................... me.bChatting = 0
  [ 38] getparam 0 .............................. <me>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 102 .......................... <me.sFaceAction>
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 3 ...................... <me, me.sFaceAction, 0>
  [ 47] objcall 69 .............................. me.setFaceAction(me.sFaceAction, 0)
  [ 49] pushint8 1 .............................. <1>
  [ 51] setlocal 0 .............................. bDraw = 1
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 114 .......................... <me.bEmote>
  [ 57] jmpifz [ 96] ............................ if me.bEmote then
  [ 60] getmovieprop 105 ........................ <the milliSeconds>
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 115 .......................... <me.iEmoteTimer>
  [ 66] sub ..................................... <the milliSeconds - me.iEmoteTimer>
  [ 67] setlocal 3 .............................. iElapsedEmoteTime = the milliSeconds - me.iEmoteTimer
  [ 69] getlocal 3 .............................. <iElapsedEmoteTime>
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 116 .......................... <me.iEmoteTimerLength>
  [ 75] gteq .................................... <iElapsedEmoteTime >= me.iEmoteTimerLength>
  [ 76] jmpifz [ 96] ............................ if iElapsedEmoteTime >= me.iEmoteTimerLength then
  [ 79] getparam 0 .............................. <me>
  [ 81] pushcons 3 .............................. <"std">
  [ 83] pusharglistnoret 2 ...................... <me, "std">
  [ 85] objcall 69 .............................. me.setFaceAction("std")
  [ 87] getparam 0 .............................. <me>
  [ 89] pushzero ................................ <0>
  [ 90] setobjprop 114 .......................... me.bEmote = 0
  [ 92] pushint8 1 .............................. <1>
  [ 94] setlocal 0 .............................. bDraw = 1
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 118 .......................... <me.bCarry>
  [100] jmpifz [160] ............................ if me.bCarry then
  [103] getmovieprop 105 ........................ <the milliSeconds>
  [105] getparam 0 .............................. <me>
  [107] getobjprop 119 .......................... <me.iCarryTimer>
  [109] sub ..................................... <the milliSeconds - me.iCarryTimer>
  [110] setlocal 4 .............................. iElapsedCarryTime = the milliSeconds - me.iCarryTimer
  [112] getlocal 4 .............................. <iElapsedCarryTime>
  [114] getparam 0 .............................. <me>
  [116] getobjprop 120 .......................... <me.iCarryTimerLength>
  [118] gteq .................................... <iElapsedCarryTime >= me.iCarryTimerLength>
  [119] jmpifz [160] ............................ if iElapsedCarryTime >= me.iCarryTimerLength then
  [122] getparam 0 .............................. <me>
  [124] pushsymb 135 ............................ <#ri>
  [126] pusharglist 2 ........................... <me, #ri>
  [128] objcall 37 .............................. <me.getPartCode(#ri)>
  [130] pushcons 15 ............................. <"001">
  [132] eq ...................................... <me.getPartCode(#ri) = "001">
  [133] getparam 0 .............................. <me>
  [135] pushsymb 135 ............................ <#ri>
  [137] pusharglist 2 ........................... <me, #ri>
  [139] objcall 37 .............................. <me.getPartCode(#ri)>
  [141] pushcons 15 ............................. <"001">
  [143] eq ...................................... <me.getPartCode(#ri) = "001">
  [144] or ...................................... <(me.getPartCode(#ri) = "001") or (me.getPartCode(#ri) = "001")>
  [145] jmpifz [160] ............................ if (me.getPartCode(#ri) = "001") or (me.getPartCode(#ri) = "001") then
  [148] getparam 0 .............................. <me>
  [150] pushcons 4 .............................. <EMPTY>
  [152] pusharglistnoret 2 ...................... <me, EMPTY>
  [154] objcall 63 .............................. me.setItemAction(EMPTY)
  [156] pushint8 1 .............................. <1>
  [158] setlocal 0 .............................. bDraw = 1
  [160] getparam 0 .............................. <me>
  [162] getobjprop 118 .......................... <me.bCarry>
  [164] jmpifz [237] ............................ if me.bCarry then
  [167] getmovieprop 105 ........................ <the milliSeconds>
  [169] getparam 0 .............................. <me>
  [171] getobjprop 122 .......................... <me.iDrinkTimer>
  [173] sub ..................................... <the milliSeconds - me.iDrinkTimer>
  [174] setlocal 5 .............................. iElapsedDrinkTime = the milliSeconds - me.iDrinkTimer
  [176] getlocal 5 .............................. <iElapsedDrinkTime>
  [178] getparam 0 .............................. <me>
  [180] getobjprop 125 .......................... <me.iDrinkTimerLength>
  [182] gteq .................................... <iElapsedDrinkTime >= me.iDrinkTimerLength>
  [183] jmpifz [237] ............................ if iElapsedDrinkTime >= me.iDrinkTimerLength then
  [186] getparam 0 .............................. <me>
  [188] getobjprop 121 .......................... <me.bDrink>
  [190] jmpifz [213] ............................ if me.bDrink then / else
  [193] getparam 0 .............................. <me>
  [195] pushzero ................................ <0>
  [196] setobjprop 121 .......................... me.bDrink = 0
  [198] getparam 0 .............................. <me>
  [200] getparam 0 .............................. <me>
  [202] getobjprop 123 .......................... <me.iDrinkWaitTimerLength>
  [204] setobjprop 125 .......................... me.iDrinkTimerLength = me.iDrinkWaitTimerLength
  [206] pushint8 1 .............................. <1>
  [208] setlocal 0 .............................. bDraw = 1
  [210] jmp [231]
  [213] getparam 0 .............................. <me>
  [215] pushint8 1 .............................. <1>
  [217] setobjprop 121 .......................... me.bDrink = 1
  [219] getparam 0 .............................. <me>
  [221] getparam 0 .............................. <me>
  [223] getobjprop 124 .......................... <me.iDrinkActionTimerLength>
  [225] setobjprop 125 .......................... me.iDrinkTimerLength = me.iDrinkActionTimerLength
  [227] pushint8 1 .............................. <1>
  [229] setlocal 0 .............................. bDraw = 1
  [231] getparam 0 .............................. <me>
  [233] getmovieprop 105 ........................ <the milliSeconds>
  [235] setobjprop 122 .......................... me.iDrinkTimer = the milliSeconds
  [237] getparam 0 .............................. <me>
  [239] getobjprop 126 .......................... <me.bSleep>
  [241] jmpifz [279] ............................ if me.bSleep then / else
  [244] getparam 0 .............................. <me>
  [246] pushcons 13 ............................. <"ey">
  [248] pusharglist 2 ........................... <me, "ey">
  [250] objcall 39 .............................. <me.getPartAction("ey")>
  [252] setlocal 6 .............................. sEyeAction = me.getPartAction("ey")
  [254] getlocal 6 .............................. <sEyeAction>
  [256] pushcons 27 ............................. <"eyb">
  [258] nteq .................................... <sEyeAction <> "eyb">
  [259] jmpifz [276] ............................ if sEyeAction <> "eyb" then
  [262] getparam 0 .............................. <me>
  [264] pushcons 13 ............................. <"ey">
  [266] pushcons 27 ............................. <"eyb">
  [268] pusharglistnoret 3 ...................... <me, "ey", "eyb">
  [270] objcall 38 .............................. me.setPartAction("ey", "eyb")
  [272] pushint8 1 .............................. <1>
  [274] setlocal 0 .............................. bDraw = 1
  [276] jmp [352]
  [279] getmovieprop 105 ........................ <the milliSeconds>
  [281] getparam 0 .............................. <me>
  [283] getobjprop 127 .......................... <me.iSleepTimer>
  [285] sub ..................................... <the milliSeconds - me.iSleepTimer>
  [286] setlocal 7 .............................. iElapsedSleepTime = the milliSeconds - me.iSleepTimer
  [288] getlocal 7 .............................. <iElapsedSleepTime>
  [290] getparam 0 .............................. <me>
  [292] getobjprop 128 .......................... <me.iSleepTimerLength>
  [294] gteq .................................... <iElapsedSleepTime >= me.iSleepTimerLength>
  [295] jmpifz [352] ............................ if iElapsedSleepTime >= me.iSleepTimerLength then
  [298] getparam 0 .............................. <me>
  [300] getobjprop 157 .......................... <me.iImageSprite>
  [302] pusharglist 1 ........................... <me.iImageSprite>
  [304] extcall 179 ............................. <sprite(me.iImageSprite)>
  [306] pushsymb 353 ............................ <#scriptInstanceList>
  [309] pushint8 1 .............................. <1>
  [311] pusharglist 3 ........................... <sprite(me.iImageSprite), #scriptInstanceList, 1>
  [313] objcall 212 ............................. <sprite(me.iImageSprite).scriptInstanceList[1]>
  [315] pusharglist 1 ........................... <sprite(me.iImageSprite).scriptInstanceList[1]>
  [317] objcall 354 ............................. <sprite(me.iImageSprite).scriptInstanceList[1].getController()>
  [320] setlocal 8 .............................. oAvatar = sprite(me.iImageSprite).scriptInstanceList[1].getController()
  [322] getlocal 8 .............................. <oAvatar>
  [324] pusharglist 1 ........................... <oAvatar>
  [326] objcall 248 ............................. <oAvatar.getScreenName()>
  [328] pushcons 28 ............................. <"Wal-Mart">
  [330] containsstr ............................. <oAvatar.getScreenName() contains "Wal-Mart">
  [331] jmpifz [342] ............................ if oAvatar.getScreenName() contains "Wal-Mart" then / else
  [334] getparam 0 .............................. <me>
  [336] pushzero ................................ <0>
  [337] setobjprop 126 .......................... me.bSleep = 0
  [339] jmp [352]
  [342] getparam 0 .............................. <me>
  [344] pushint8 1 .............................. <1>
  [346] setobjprop 126 .......................... me.bSleep = 1
  [348] pushint8 1 .............................. <1>
  [350] setlocal 0 .............................. bDraw = 1
  [352] getparam 0 .............................. <me>
  [354] pusharglist 1 ........................... <me>
  [356] objcall 22 .............................. <me.calcAnim()>
  [358] setlocal 9 .............................. bAnim = me.calcAnim()
  [360] getlocal 0 .............................. <bDraw>
  [362] getlocal 9 .............................. <bAnim>
  [364] or ...................................... <bDraw or bAnim>
  [365] jmpifz [392] ............................ if bDraw or bAnim then
  [368] getparam 0 .............................. <me>
  [370] pusharglistnoret 1 ...................... <me>
  [372] objcall 24 .............................. me.display()
  [374] getparam 0 .............................. <me>
  [376] getmovieprop 105 ........................ <the milliSeconds>
  [378] getlocal 1 .............................. <iStartTime>
  [380] sub ..................................... <the milliSeconds - iStartTime>
  [381] setobjprop 244 .......................... me.iFrameTime = the milliSeconds - iStartTime
  [383] getparam 0 .............................. <me>
  [385] getprop 245 ............................. <iFrameCount>
  [387] pushint8 1 .............................. <1>
  [389] add ..................................... <iFrameCount + 1>
  [390] setobjprop 245 .......................... me.iFrameCount = iFrameCount + 1
  [392] getparam 0 .............................. <me>
  [394] pusharglistnoret 1 ...................... <me>
  [396] objcall 21 .............................. me.advanceAnimFrame()
  [398] getparam 0 .............................. <me>
  [400] getmovieprop 105 ........................ <the milliSeconds>
  [402] setobjprop 106 .......................... me.iFPSTimer = the milliSeconds
  [404] ret
end

on advanceAnimFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 99 ........................... <me.iAnimStep>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 100 .......................... <me.iAnimStepMax>
  [  8] eq ...................................... <me.iAnimStep = me.iAnimStepMax>
  [  9] jmpifz [ 20] ............................ if me.iAnimStep = me.iAnimStepMax then / else
  [ 12] getparam 0 .............................. <me>
  [ 14] pushzero ................................ <0>
  [ 15] setobjprop 99 ........................... me.iAnimStep = 0
  [ 17] jmp [ 31]
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 99 ........................... <me.iAnimStep>
  [ 26] pushint8 1 .............................. <1>
  [ 28] add ..................................... <me.iAnimStep + 1>
  [ 29] setobjprop 99 ........................... me.iAnimStep = me.iAnimStep + 1
  [ 31] ret
end

on calcAnim me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bDrawAnim = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 56 .............................. <me.isWalking()>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 117 .......................... <me.bDance>
  [ 13] or ...................................... <me.isWalking() or me.bDance>
  [ 14] jmpifz [163] ............................ if me.isWalking() or me.bDance then
  [ 17] pushint8 1 .............................. <1>
  [ 19] setlocal 1
  [ 21] getlocal 1
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 27] pusharglist 2 ........................... <me, #aRuntimeConfig>
  [ 29] objcall 188 ............................. <me.aRuntimeConfig.count>
  [ 31] lteq
  [ 32] jmpifz [163] ............................ repeat with i = 1 to me.aRuntimeConfig.count
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 222 ...................... <me.aRuntimeConfig>
  [ 39] getlocal 1 .............................. <i>
  [ 41] pusharglist 2 ........................... <me.aRuntimeConfig, i>
  [ 43] objcall 211 ............................. <me.aRuntimeConfig.getPropAt(i)>
  [ 45] setlocal 2 .............................. sPart = me.aRuntimeConfig.getPropAt(i)
  [ 47] getparam 0 .............................. <me>
  [ 49] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 51] getlocal 2 .............................. <sPart>
  [ 53] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [ 55] objcall 190 ............................. <me.aRuntimeConfig[sPart]>
  [ 57] setlocal 3 .............................. aPartConfig = me.aRuntimeConfig[sPart]
  [ 59] getlocal 3 .............................. <aPartConfig>
  [ 61] pushsymb 223 ............................ <#act>
  [ 63] pusharglist 2 ........................... <aPartConfig, #act>
  [ 65] objcall 213 ............................. <aPartConfig[#act]>
  [ 67] setlocal 4 .............................. sAction = aPartConfig[#act]
  [ 69] getlocal 3 .............................. <aPartConfig>
  [ 71] pushsymb 225 ............................ <#anim>
  [ 73] pusharglist 2 ........................... <aPartConfig, #anim>
  [ 75] objcall 213 ............................. <aPartConfig[#anim]>
  [ 77] setlocal 5 .............................. bAnim = aPartConfig[#anim]
  [ 79] getlocal 5 .............................. <bAnim>
  [ 81] jmpifz [154] ............................ if bAnim then
  [ 84] pushint8 1 .............................. <1>
  [ 86] setlocal 0 .............................. bDrawAnim = 1
  [ 88] getparam 0 .............................. <me>
  [ 90] pushsymb 221 ............................ <#aConfigSettings>
  [ 92] getlocal 2 .............................. <sPart>
  [ 94] pusharglist 3 ........................... <me, #aConfigSettings, sPart>
  [ 96] objcall 212 ............................. <me.aConfigSettings[sPart]>
  [ 98] getlocal 4 .............................. <sAction>
  [100] pusharglist 2 ........................... <me.aConfigSettings[sPart], sAction>
  [102] objcall 213 ............................. <me.aConfigSettings[sPart][sAction]>
  [104] pushsymb 232 ............................ <#fr>
  [106] pusharglist 2 ........................... <me.aConfigSettings[sPart][sAction], #fr>
  [108] objcall 213 ............................. <me.aConfigSettings[sPart][sAction][#fr]>
  [110] setlocal 6 .............................. aAnimFrames = me.aConfigSettings[sPart][sAction][#fr]
  [112] getlocal 6 .............................. <aAnimFrames>
  [114] getparam 0 .............................. <me>
  [116] getobjprop 99 ........................... <me.iAnimStep>
  [118] pushint8 4 .............................. <4>
  [120] mod ..................................... <me.iAnimStep mod 4>
  [121] pusharglist 2 ........................... <aAnimFrames, me.iAnimStep mod 4>
  [123] objcall 259 ............................. <aAnimFrames.getPos(me.iAnimStep mod 4)>
  [126] pushzero ................................ <0>
  [127] gt ...................................... <aAnimFrames.getPos(me.iAnimStep mod 4) > 0>
  [128] jmpifz [154] ............................ if aAnimFrames.getPos(me.iAnimStep mod 4) > 0 then
  [131] getparam 0 .............................. <me>
  [133] pushsymb 222 ............................ <#aRuntimeConfig>
  [135] getlocal 2 .............................. <sPart>
  [137] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [139] objcall 212 ............................. <me.aRuntimeConfig[sPart]>
  [141] pushsymb 226 ............................ <#animIndex>
  [143] getparam 0 .............................. <me>
  [145] getobjprop 99 ........................... <me.iAnimStep>
  [147] pushint8 4 .............................. <4>
  [149] mod ..................................... <me.iAnimStep mod 4>
  [150] pusharglistnoret 3 ...................... <me.aRuntimeConfig[sPart], #animIndex, me.iAnimStep mod 4>
  [152] objcall 233 ............................. me.aRuntimeConfig[sPart][#animIndex] = me.iAnimStep mod 4
  [154] pushint8 1
  [156] getlocal 1
  [158] add
  [159] setlocal 1
  [161] endrepeat [ 21]
  [163] getlocal 0 .............................. <bDrawAnim>
  [165] pusharglistnoret 1 ...................... <bDrawAnim>
  [167] extcall 149 ............................. return bDrawAnim
  [169] ret
end

on draw me, bForce
  [  0] getmovieprop 105 ........................ <the milliSeconds>
  [  2] setlocal 0 .............................. iStartTime = the milliSeconds
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 28 .............................. <me.getDrawSettings()>
  [ 10] setlocal 1 .............................. aDrawSettings = me.getDrawSettings()
  [ 12] getlocal 1 .............................. <aDrawSettings>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 264 .......................... <me.aCurrDrawSettings>
  [ 19] eq ...................................... <aDrawSettings = me.aCurrDrawSettings>
  [ 20] getparam 1 .............................. <bForce>
  [ 22] pusharglist 1 ........................... <bForce>
  [ 24] extcall 85 .............................. <voidp(bForce)>
  [ 26] getparam 1 .............................. <bForce>
  [ 28] not ..................................... <not bForce>
  [ 29] or ...................................... <voidp(bForce) or not bForce>
  [ 30] and ..................................... <(aDrawSettings = me.aCurrDrawSettings) and (voidp(bForce) or not bForce)>
  [ 31] jmpifz [ 38] ............................ if (aDrawSettings = me.aCurrDrawSettings) and (voidp(bForce) or not bForce) then
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 149 ............................. return 
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 146 ...................... <me.oBuffer>
  [ 42] getparam 0 .............................. <me>
  [ 44] getchainedprop 146 ...................... <me.oBuffer>
  [ 46] getobjprop 162 .......................... <me.oBuffer.rect>
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 97 ........................... <me.oBufferBGColor>
  [ 52] pusharglistnoret 3 ...................... <me.oBuffer, me.oBuffer.rect, me.oBufferBGColor>
  [ 54] objcall 163 ............................. me.oBuffer.fill(me.oBuffer.rect, me.oBufferBGColor)
  [ 56] getparam 0 .............................. <me>
  [ 58] getlocal 1 .............................. <aDrawSettings>
  [ 60] setobjprop 264 .......................... me.aCurrDrawSettings = aDrawSettings
  [ 63] getlocal 1 .............................. <aDrawSettings>
  [ 65] peek 0
  [ 67] pusharglist 1
  [ 69] extcall 188
  [ 71] pushint8 1
  [ 73] peek 0
  [ 75] peek 2
  [ 77] lteq
  [ 78] jmpifz [104] ............................ repeat with i in aDrawSettings
  [ 81] peek 2
  [ 83] peek 1
  [ 85] pusharglist 2
  [ 87] extcall 213
  [ 89] setlocal 2
  [ 91] getparam 0 .............................. <me>
  [ 93] getlocal 2 .............................. <i>
  [ 95] pusharglistnoret 2 ...................... <me, i>
  [ 97] objcall 25 .............................. me.drawPart(i)
  [ 99] pushint8 1
  [101] add
  [102] endrepeat [ 73]
  [104] pop 3
  [106] getparam 0 .............................. <me>
  [108] getmovieprop 105 ........................ <the milliSeconds>
  [110] getlocal 0 .............................. <iStartTime>
  [112] sub ..................................... <the milliSeconds - iStartTime>
  [113] setobjprop 240 .......................... me.iDrawTime = the milliSeconds - iStartTime
  [115] getparam 0 .............................. <me>
  [117] getparam 0 .............................. <me>
  [119] getobjprop 241 .......................... <me.iDrawCount>
  [121] pushint8 1 .............................. <1>
  [123] add ..................................... <me.iDrawCount + 1>
  [124] setobjprop 241 .......................... me.iDrawCount = me.iDrawCount + 1
  [126] ret
end

on display me, bForce
  [  0] getmovieprop 105 ........................ <the milliSeconds>
  [  2] setlocal 0 .............................. iStartTime = the milliSeconds
  [  4] getparam 0 .............................. <me>
  [  6] pusharglistnoret 1 ...................... <me>
  [  8] objcall 23 .............................. me.draw()
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 169 .......................... <me.oImageMember>
  [ 14] pusharglist 1 ........................... <me.oImageMember>
  [ 16] extcall 85 .............................. <voidp(me.oImageMember)>
  [ 18] jmpifz [ 25] ............................ if voidp(me.oImageMember) then
  [ 21] pusharglistnoret 0 ...................... <>
  [ 23] extcall 149 ............................. return 
  [ 25] getparam 0 .............................. <me>
  [ 27] getchainedprop 169 ...................... <me.oImageMember>
  [ 29] getchainedprop 161 ...................... <me.oImageMember.image>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 146 .......................... <me.oBuffer>
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 146 ...................... <me.oBuffer>
  [ 39] getobjprop 162 .......................... <me.oBuffer.rect>
  [ 41] getparam 0 .............................. <me>
  [ 43] getobjprop 86 ........................... <me.iScale>
  [ 45] pushcons 5 .............................. <0.01>
  [ 47] mul ..................................... <me.iScale * 0.01>
  [ 48] mul ..................................... <me.oBuffer.rect * (me.iScale * 0.01)>
  [ 49] getparam 0 .............................. <me>
  [ 51] getchainedprop 146 ...................... <me.oBuffer>
  [ 53] getobjprop 162 .......................... <me.oBuffer.rect>
  [ 55] pushsymb 267 ............................ <#dither>
  [ 58] getparam 0 .............................. <me>
  [ 60] getobjprop 144 .......................... <me.iDither>
  [ 62] pusharglist 2 ........................... <[#dither: me.iDither]>
  [ 64] pushproplist ............................ <[#dither: me.iDither]>
  [ 65] pusharglistnoret 5 ...................... <me.oImageMember.image, me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect, [#dither: me.iDither]>
  [ 67] objcall 173 ............................. me.oImageMember.image.copyPixels(me.oBuffer, me.oBuffer.rect * (me.iScale * 0.01), me.oBuffer.rect, [#dither: me.iDither])
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 154 .......................... <me.bDoFloodFill>
  [ 73] jmpifz [ 93] ............................ if me.bDoFloodFill then
  [ 76] getparam 0 .............................. <me>
  [ 78] getchainedprop 169 ...................... <me.oImageMember>
  [ 80] getchainedprop 161 ...................... <me.oImageMember.image>
  [ 82] pushzero ................................ <0>
  [ 83] pushzero ................................ <0>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 96 ........................... <me.oSpriteBgColor>
  [ 88] pusharglistnoret 4 ...................... <me.oImageMember.image, 0, 0, me.oSpriteBgColor>
  [ 90] objcall 268 ............................. me.oImageMember.image.floodFill(0, 0, me.oSpriteBgColor)
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 158 .......................... <me.iShadowSprite>
  [ 97] pusharglist 1 ........................... <me.iShadowSprite>
  [ 99] extcall 85 .............................. <voidp(me.iShadowSprite)>
  [101] not ..................................... <not voidp(me.iShadowSprite)>
  [102] jmpifz [123] ............................ if not voidp(me.iShadowSprite) then
  [105] getparam 0 .............................. <me>
  [107] getobjprop 158 .......................... <me.iShadowSprite>
  [109] pusharglist 1 ........................... <me.iShadowSprite>
  [111] extcall 179 ............................. <sprite(me.iShadowSprite)>
  [113] getparam 0 .............................. <me>
  [115] pusharglist 1 ........................... <me>
  [117] objcall 57 .............................. <me.isSitting()>
  [119] not ..................................... <not me.isSitting()>
  [120] setobjprop 269 .......................... sprite(me.iShadowSprite).visible = not me.isSitting()
  [123] getparam 0 .............................. <me>
  [125] getmovieprop 105 ........................ <the milliSeconds>
  [127] getlocal 0 .............................. <iStartTime>
  [129] sub ..................................... <the milliSeconds - iStartTime>
  [130] setobjprop 242 .......................... me.iDisplayTime = the milliSeconds - iStartTime
  [132] getparam 0 .............................. <me>
  [134] getparam 0 .............................. <me>
  [136] getobjprop 243 .......................... <me.iDisplayCount>
  [138] pushint8 1 .............................. <1>
  [140] add ..................................... <me.iDisplayCount + 1>
  [141] setobjprop 243 .......................... me.iDisplayCount = me.iDisplayCount + 1
  [143] ret
end

on drawPart me, aPartSettings
  [  0] getparam 1 .............................. <aPartSettings>
  [  2] pushsymb 270 ............................ <#prt>
  [  5] pusharglist 2 ........................... <aPartSettings, #prt>
  [  7] objcall 213 ............................. <aPartSettings[#prt]>
  [  9] setlocal 0 .............................. sPart = aPartSettings[#prt]
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 15] getlocal 0 .............................. <sPart>
  [ 17] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [ 19] objcall 212 ............................. <me.aRuntimeConfig[sPart]>
  [ 21] pushsymb 227 ............................ <#Active>
  [ 23] pusharglist 2 ........................... <me.aRuntimeConfig[sPart], #Active>
  [ 25] objcall 213 ............................. <me.aRuntimeConfig[sPart][#Active]>
  [ 27] not ..................................... <not me.aRuntimeConfig[sPart][#Active]>
  [ 28] jmpifz [ 35] ............................ if not me.aRuntimeConfig[sPart][#Active] then
  [ 31] pusharglistnoret 0 ...................... <>
  [ 33] extcall 149 ............................. return 
  [ 35] getparam 1 .............................. <aPartSettings>
  [ 37] pushsymb 165 ............................ <#member>
  [ 39] pusharglist 2 ........................... <aPartSettings, #member>
  [ 41] objcall 213 ............................. <aPartSettings[#member]>
  [ 43] setlocal 1 .............................. oPartMember = aPartSettings[#member]
  [ 45] getlocal 1 .............................. <oPartMember>
  [ 47] getobjprop 166 .......................... <oPartMember.memberNum>
  [ 49] pushint8 1 .............................. <1>
  [ 51] inv ..................................... <-1>
  [ 52] eq ...................................... <oPartMember.memberNum = -1>
  [ 53] jmpifz [ 60] ............................ if oPartMember.memberNum = -1 then
  [ 56] pusharglistnoret 0 ...................... <>
  [ 58] extcall 149 ............................. return 
  [ 60] getparam 1 .............................. <aPartSettings>
  [ 62] pushsymb 195 ............................ <#clr>
  [ 64] pusharglist 2 ........................... <aPartSettings, #clr>
  [ 66] objcall 213 ............................. <aPartSettings[#clr]>
  [ 68] setlocal 2 .............................. oColor = aPartSettings[#clr]
  [ 70] getparam 1 .............................. <aPartSettings>
  [ 72] pushsymb 181 ............................ <#ink>
  [ 74] pusharglist 2 ........................... <aPartSettings, #ink>
  [ 76] objcall 213 ............................. <aPartSettings[#ink]>
  [ 78] setlocal 3 .............................. iInk = aPartSettings[#ink]
  [ 80] pushcons 29 ............................. <"_">
  [ 82] setmovieprop 186 ........................ the itemDelimiter = "_"
  [ 84] pushcons 30 ............................. <"custominks">
  [ 86] pusharglist 1 ........................... <"custominks">
  [ 88] extcall 165 ............................. <member("custominks")>
  [ 90] getobjprop 220 .......................... <member("custominks").text>
  [ 92] pusharglist 1 ........................... <member("custominks").text>
  [ 94] extcall 219 ............................. <value(member("custominks").text)>
  [ 96] setlocal 4 .............................. custominks = value(member("custominks").text)
  [ 98] getlocal 4 .............................. <custominks>
  [100] getlocal 1 .............................. <oPartMember>
  [102] getchainedprop 170 ...................... <oPartMember.name>
  [104] pushsymb 189 ............................ <#item>
  [106] pushint8 3 .............................. <3>
  [108] pushint8 4 .............................. <4>
  [110] pusharglist 4 ........................... <oPartMember.name, #item, 3, 4>
  [112] objcall 190 ............................. <oPartMember.name.item[3..4]>
  [114] pusharglist 2 ........................... <custominks, oPartMember.name.item[3..4]>
  [116] extcall 361 ............................. <getaProp(custominks, oPartMember.name.item[3..4])>
  [119] setlocal 5 .............................. myink = getaProp(custominks, oPartMember.name.item[3..4])
  [121] getlocal 5 .............................. <myink>
  [123] pusharglist 1 ........................... <myink>
  [125] extcall 362 ............................. <integerp(myink)>
  [128] jmpifz [135] ............................ if integerp(myink) then
  [131] getlocal 5 .............................. <myink>
  [133] setlocal 3 .............................. iInk = myink
  [135] getparam 1 .............................. <aPartSettings>
  [137] pushsymb 271 ............................ <#flip>
  [140] pusharglist 2 ........................... <aPartSettings, #flip>
  [142] objcall 213 ............................. <aPartSettings[#flip]>
  [144] setlocal 6 .............................. bFlip = aPartSettings[#flip]
  [146] getparam 1 .............................. <aPartSettings>
  [148] pushsymb 234 ............................ <#locOff>
  [150] pusharglist 2 ........................... <aPartSettings, #locOff>
  [152] objcall 213 ............................. <aPartSettings[#locOff]>
  [154] setlocal 7 .............................. oLocOff = aPartSettings[#locOff]
  [156] getlocal 7 .............................. <oLocOff>
  [158] getlocal 7 .............................. <oLocOff>
  [160] getlocal 7 .............................. <oLocOff>
  [162] getlocal 7 .............................. <oLocOff>
  [164] pusharglist 4 ........................... <[oLocOff, oLocOff, oLocOff, oLocOff]>
  [166] pushlist ................................ <[oLocOff, oLocOff, oLocOff, oLocOff]>
  [167] setlocal 8 .............................. oLocOffQuad = [oLocOff, oLocOff, oLocOff, oLocOff]
  [169] getparam 0 .............................. <me>
  [171] pushsymb 94 ............................. <#aSourceImages>
  [173] getlocal 1 .............................. <oPartMember>
  [175] getobjprop 170 .......................... <oPartMember.name>
  [177] pusharglist 3 ........................... <me, #aSourceImages, oPartMember.name>
  [179] objcall 190 ............................. <me.aSourceImages[oPartMember.name]>
  [181] setlocal 9 .............................. aSourceImageData = me.aSourceImages[oPartMember.name]
  [183] getlocal 9 .............................. <aSourceImageData>
  [185] pusharglist 1 ........................... <aSourceImageData>
  [187] extcall 85 .............................. <voidp(aSourceImageData)>
  [189] jmpifz [252] ............................ if voidp(aSourceImageData) then / else
  [192] getlocal 1 .............................. <oPartMember>
  [194] getobjprop 161 .......................... <oPartMember.image>
  [196] setlocal 10 ............................. oSourceImage = oPartMember.image
  [198] getlocal 10 ............................. <oSourceImage>
  [200] pusharglist 1 ........................... <oSourceImage>
  [202] objcall 272 ............................. <oSourceImage.createMatte()>
  [205] setlocal 11 ............................. oMatte = oSourceImage.createMatte()
  [207] pushsymb 180 ............................ <#bgColor>
  [209] getlocal 2 .............................. <oColor>
  [211] pushsymb 181 ............................ <#ink>
  [213] getlocal 3 .............................. <iInk>
  [215] pushsymb 273 ............................ <#maskImage>
  [218] getlocal 11 ............................. <oMatte>
  [220] pusharglist 6 ........................... <[#bgColor: oColor, #ink: iInk, #maskImage: oMatte]>
  [222] pushproplist ............................ <[#bgColor: oColor, #ink: iInk, #maskImage: oMatte]>
  [223] setlocal 12 ............................. aParams = [#bgColor: oColor, #ink: iInk, #maskImage: oMatte]
  [225] getparam 0 .............................. <me>
  [227] pushsymb 94 ............................. <#aSourceImages>
  [229] getlocal 1 .............................. <oPartMember>
  [231] getobjprop 170 .......................... <oPartMember.name>
  [233] pushsymb 161 ............................ <#image>
  [235] getlocal 10 ............................. <oSourceImage>
  [237] pushsymb 274 ............................ <#params>
  [240] getlocal 12 ............................. <aParams>
  [242] pusharglist 4 ........................... <[#image: oSourceImage, #params: aParams]>
  [244] pushproplist ............................ <[#image: oSourceImage, #params: aParams]>
  [245] pusharglistnoret 4 ...................... <me, #aSourceImages, oPartMember.name, [#image: oSourceImage, #params: aParams]>
  [247] objcall 196 ............................. me.aSourceImages[oPartMember.name] = [#image: oSourceImage, #params: aParams]
  [249] jmp [273]
  [252] getlocal 9 .............................. <aSourceImageData>
  [254] pushsymb 161 ............................ <#image>
  [256] pusharglist 2 ........................... <aSourceImageData, #image>
  [258] objcall 213 ............................. <aSourceImageData[#image]>
  [260] setlocal 10 ............................. oSourceImage = aSourceImageData[#image]
  [262] getlocal 9 .............................. <aSourceImageData>
  [264] pushsymb 274 ............................ <#params>
  [267] pusharglist 2 ........................... <aSourceImageData, #params>
  [269] objcall 213 ............................. <aSourceImageData[#params]>
  [271] setlocal 12 ............................. aParams = aSourceImageData[#params]
  [273] getparam 0 .............................. <me>
  [275] getlocal 1 .............................. <oPartMember>
  [277] pusharglist 2 ........................... <me, oPartMember>
  [279] objcall 27 .............................. <me.getMemberRect(oPartMember)>
  [281] setlocal 13 ............................. oSourceRect = me.getMemberRect(oPartMember)
  [283] pushzero ................................ <0>
  [284] pushzero ................................ <0>
  [285] getlocal 13 ............................. <oSourceRect>
  [287] getobjprop 171 .......................... <oSourceRect.width>
  [289] getlocal 13 ............................. <oSourceRect>
  [291] getobjprop 172 .......................... <oSourceRect.height>
  [293] pusharglist 4 ........................... <0, 0, oSourceRect.width, oSourceRect.height>
  [295] extcall 162 ............................. <rect(0, 0, oSourceRect.width, oSourceRect.height)>
  [297] setlocal 14 ............................. oDestRect = rect(0, 0, oSourceRect.width, oSourceRect.height)
  [299] getparam 0 .............................. <me>
  [301] getlocal 14 ............................. <oDestRect>
  [303] getlocal 6 .............................. <bFlip>
  [305] pusharglist 3 ........................... <me, oDestRect, bFlip>
  [307] objcall 26 .............................. <me.createQuadFromRect(oDestRect, bFlip)>
  [309] setlocal 15 ............................. oDestQuad = me.createQuadFromRect(oDestRect, bFlip)
  [311] getlocal 15 ............................. <oDestQuad>
  [313] getlocal 8 .............................. <oLocOffQuad>
  [315] add ..................................... <oDestQuad + oLocOffQuad>
  [316] setlocal 15 ............................. oDestQuad = oDestQuad + oLocOffQuad
  [318] getlocal 12 ............................. <aParams>
  [320] pushsymb 267 ............................ <#dither>
  [323] getparam 0 .............................. <me>
  [325] getobjprop 144 .......................... <me.iDither>
  [327] pusharglistnoret 3 ...................... <aParams, #dither, me.iDither>
  [329] objcall 233 ............................. aParams[#dither] = me.iDither
  [331] getparam 0 .............................. <me>
  [333] getchainedprop 146 ...................... <me.oBuffer>
  [335] getlocal 10 ............................. <oSourceImage>
  [337] getlocal 15 ............................. <oDestQuad>
  [339] getlocal 13 ............................. <oSourceRect>
  [341] getlocal 12 ............................. <aParams>
  [343] pusharglistnoret 5 ...................... <me.oBuffer, oSourceImage, oDestQuad, oSourceRect, aParams>
  [345] objcall 173 ............................. me.oBuffer.copyPixels(oSourceImage, oDestQuad, oSourceRect, aParams)
  [347] ret
end

on createQuadFromRect me, rRect, bFlip
  [  0] getparam 1 .............................. <rRect>
  [  2] getobjprop 288 .......................... <rRect.left>
  [  5] getparam 1 .............................. <rRect>
  [  7] getobjprop 289 .......................... <rRect.top>
  [ 10] pusharglist 2 ........................... <rRect.left, rRect.top>
  [ 12] extcall 88 .............................. <point(rRect.left, rRect.top)>
  [ 14] setlocal 0 .............................. oP1 = point(rRect.left, rRect.top)
  [ 16] getparam 1 .............................. <rRect>
  [ 18] getobjprop 290 .......................... <rRect.right>
  [ 21] getparam 1 .............................. <rRect>
  [ 23] getobjprop 289 .......................... <rRect.top>
  [ 26] pusharglist 2 ........................... <rRect.right, rRect.top>
  [ 28] extcall 88 .............................. <point(rRect.right, rRect.top)>
  [ 30] setlocal 1 .............................. oP2 = point(rRect.right, rRect.top)
  [ 32] getparam 1 .............................. <rRect>
  [ 34] getobjprop 290 .......................... <rRect.right>
  [ 37] getparam 1 .............................. <rRect>
  [ 39] getobjprop 291 .......................... <rRect.bottom>
  [ 42] pusharglist 2 ........................... <rRect.right, rRect.bottom>
  [ 44] extcall 88 .............................. <point(rRect.right, rRect.bottom)>
  [ 46] setlocal 2 .............................. oP3 = point(rRect.right, rRect.bottom)
  [ 48] getparam 1 .............................. <rRect>
  [ 50] getobjprop 288 .......................... <rRect.left>
  [ 53] getparam 1 .............................. <rRect>
  [ 55] getobjprop 291 .......................... <rRect.bottom>
  [ 58] pusharglist 2 ........................... <rRect.left, rRect.bottom>
  [ 60] extcall 88 .............................. <point(rRect.left, rRect.bottom)>
  [ 62] setlocal 3 .............................. oP4 = point(rRect.left, rRect.bottom)
  [ 64] getparam 2 .............................. <bFlip>
  [ 66] jmpifz [ 87] ............................ if bFlip then / else
  [ 69] getlocal 1 .............................. <oP2>
  [ 71] getlocal 0 .............................. <oP1>
  [ 73] getlocal 3 .............................. <oP4>
  [ 75] getlocal 2 .............................. <oP3>
  [ 77] pusharglist 4 ........................... <[oP2, oP1, oP4, oP3]>
  [ 79] pushlist ................................ <[oP2, oP1, oP4, oP3]>
  [ 80] pusharglistnoret 1 ...................... <[oP2, oP1, oP4, oP3]>
  [ 82] extcall 149 ............................. return [oP2, oP1, oP4, oP3]
  [ 84] jmp [102]
  [ 87] getlocal 0 .............................. <oP1>
  [ 89] getlocal 1 .............................. <oP2>
  [ 91] getlocal 2 .............................. <oP3>
  [ 93] getlocal 3 .............................. <oP4>
  [ 95] pusharglist 4 ........................... <[oP1, oP2, oP3, oP4]>
  [ 97] pushlist ................................ <[oP1, oP2, oP3, oP4]>
  [ 98] pusharglistnoret 1 ...................... <[oP1, oP2, oP3, oP4]>
  [100] extcall 149 ............................. return [oP1, oP2, oP3, oP4]
  [102] ret
end

on getMemberRect me, oMember
  [  0] getparam 1 .............................. <oMember>
  [  2] getobjprop 174 .......................... <oMember.regPoint>
  [  4] setlocal 0 .............................. oRegPoint = oMember.regPoint
  [  6] pushzero ................................ <0>
  [  7] setlocal 1 .............................. vAdd = 0
  [  9] getlocal 0 .............................. <oRegPoint>
  [ 11] getobjprop 297 .......................... <oRegPoint.locV>
  [ 14] getparam 1 .............................. <oMember>
  [ 16] getchainedprop 162 ...................... <oMember.rect>
  [ 18] getobjprop 291 .......................... <oMember.rect.bottom>
  [ 21] lt ...................................... <oRegPoint.locV < oMember.rect.bottom>
  [ 22] jmpifz [ 40] ............................ if oRegPoint.locV < oMember.rect.bottom then
  [ 25] getparam 1 .............................. <oMember>
  [ 27] getchainedprop 162 ...................... <oMember.rect>
  [ 29] getobjprop 291 .......................... <oMember.rect.bottom>
  [ 32] getlocal 0 .............................. <oRegPoint>
  [ 34] getobjprop 297 .......................... <oRegPoint.locV>
  [ 37] sub ..................................... <oMember.rect.bottom - oRegPoint.locV>
  [ 38] setlocal 1 .............................. vAdd = oMember.rect.bottom - oRegPoint.locV
  [ 40] getlocal 0 .............................. <oRegPoint>
  [ 42] getobjprop 298 .......................... <oRegPoint.locH>
  [ 45] getlocal 0 .............................. <oRegPoint>
  [ 47] getobjprop 297 .......................... <oRegPoint.locV>
  [ 50] pushint8 110 ............................ <110>
  [ 52] sub ..................................... <oRegPoint.locV - 110>
  [ 53] getlocal 0 .............................. <oRegPoint>
  [ 55] getobjprop 298 .......................... <oRegPoint.locH>
  [ 58] pushint8 77 ............................. <77>
  [ 60] add ..................................... <oRegPoint.locH + 77>
  [ 61] getlocal 0 .............................. <oRegPoint>
  [ 63] getobjprop 297 .......................... <oRegPoint.locV>
  [ 66] getlocal 1 .............................. <vAdd>
  [ 68] add ..................................... <oRegPoint.locV + vAdd>
  [ 69] pusharglist 4 ........................... <oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd>
  [ 71] extcall 162 ............................. <rect(oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd)>
  [ 73] pusharglistnoret 1 ...................... <rect(oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd)>
  [ 75] extcall 149 ............................. return rect(oRegPoint.locH, oRegPoint.locV - 110, oRegPoint.locH + 77, oRegPoint.locV + vAdd)
  [ 77] ret
end

on getDrawSettings me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aDrawSettings = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglistnoret 1 ...................... <me>
  [  9] objcall 17 .............................. me.setDrawOrder()
  [ 11] pushint8 1 .............................. <1>
  [ 13] setlocal 1
  [ 15] getlocal 1
  [ 17] getparam 0 .............................. <me>
  [ 19] pushsymb 238 ............................ <#aDrawOrder>
  [ 21] pusharglist 2 ........................... <me, #aDrawOrder>
  [ 23] objcall 188 ............................. <me.aDrawOrder.count>
  [ 25] lteq
  [ 26] jmpifz [ 80] ............................ repeat with i = 1 to me.aDrawOrder.count
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 238 ............................ <#aDrawOrder>
  [ 33] getlocal 1 .............................. <i>
  [ 35] pusharglist 3 ........................... <me, #aDrawOrder, i>
  [ 37] objcall 190 ............................. <me.aDrawOrder[i]>
  [ 39] setlocal 2 .............................. sPart = me.aDrawOrder[i]
  [ 41] getparam 0 .............................. <me>
  [ 43] getlocal 2 .............................. <sPart>
  [ 45] pusharglist 2 ........................... <me, sPart>
  [ 47] objcall 29 .............................. <me.getPartSettings(sPart)>
  [ 49] setlocal 3 .............................. aPartSettings = me.getPartSettings(sPart)
  [ 51] getlocal 3 .............................. <aPartSettings>
  [ 53] pusharglist 1 ........................... <aPartSettings>
  [ 55] extcall 85 .............................. <voidp(aPartSettings)>
  [ 57] not ..................................... <not voidp(aPartSettings)>
  [ 58] jmpifz [ 71] ............................ if not voidp(aPartSettings) then
  [ 61] getlocal 0 .............................. <aDrawSettings>
  [ 63] getlocal 2 .............................. <sPart>
  [ 65] getlocal 3 .............................. <aPartSettings>
  [ 67] pusharglistnoret 3 ...................... <aDrawSettings, sPart, aPartSettings>
  [ 69] objcall 233 ............................. aDrawSettings[sPart] = aPartSettings
  [ 71] pushint8 1
  [ 73] getlocal 1
  [ 75] add
  [ 76] setlocal 1
  [ 78] endrepeat [ 15]
  [ 80] getlocal 0 .............................. <aDrawSettings>
  [ 82] pusharglistnoret 1 ...................... <aDrawSettings>
  [ 84] extcall 149 ............................. return aDrawSettings
  [ 86] ret
end

on getPartSettings me, prt
  [  0] getparam 1 .............................. <prt>
  [  2] setlocal 0 .............................. sPart = prt
  [  4] getparam 0 .............................. <me>
  [  6] pushsymb 222 ............................ <#aRuntimeConfig>
  [  8] getlocal 0 .............................. <sPart>
  [ 10] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [ 12] objcall 190 ............................. <me.aRuntimeConfig[sPart]>
  [ 14] setlocal 1 .............................. aConfig = me.aRuntimeConfig[sPart]
  [ 16] getlocal 1 .............................. <aConfig>
  [ 18] pusharglist 0 ........................... <>
  [ 20] extcall 184 ............................. <VOID>
  [ 22] eq ...................................... <aConfig = VOID>
  [ 23] jmpifz [ 34] ............................ if aConfig = VOID then
  [ 26] pusharglist 0 ........................... <>
  [ 28] extcall 184 ............................. <VOID>
  [ 30] pusharglistnoret 1 ...................... <VOID>
  [ 32] extcall 149 ............................. return VOID
  [ 34] getparam 0 .............................. <me>
  [ 36] pushsymb 185 ............................ <#aAttributes>
  [ 38] getparam 1 .............................. <prt>
  [ 40] pusharglist 3 ........................... <me, #aAttributes, prt>
  [ 42] objcall 212 ............................. <me.aAttributes[prt]>
  [ 44] pushsymb 194 ............................ <#prtCd>
  [ 46] pusharglist 2 ........................... <me.aAttributes[prt], #prtCd>
  [ 48] objcall 213 ............................. <me.aAttributes[prt][#prtCd]>
  [ 50] setlocal 2 .............................. sPartCode = me.aAttributes[prt][#prtCd]
  [ 52] getlocal 2 .............................. <sPartCode>
  [ 54] pushcons 31 ............................. <"000">
  [ 56] eq ...................................... <sPartCode = "000">
  [ 57] jmpifz [ 68] ............................ if sPartCode = "000" then
  [ 60] pusharglist 0 ........................... <>
  [ 62] extcall 184 ............................. <VOID>
  [ 64] pusharglistnoret 1 ...................... <VOID>
  [ 66] extcall 149 ............................. return VOID
  [ 68] getlocal 1 .............................. <aConfig>
  [ 70] pushsymb 227 ............................ <#Active>
  [ 72] pusharglist 2 ........................... <aConfig, #Active>
  [ 74] objcall 213 ............................. <aConfig[#Active]>
  [ 76] setlocal 3 .............................. bActive = aConfig[#Active]
  [ 78] getlocal 3 .............................. <bActive>
  [ 80] not ..................................... <not bActive>
  [ 81] jmpifz [ 92] ............................ if not bActive then
  [ 84] pusharglist 0 ........................... <>
  [ 86] extcall 184 ............................. <VOID>
  [ 88] pusharglistnoret 1 ...................... <VOID>
  [ 90] extcall 149 ............................. return VOID
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 230 ............................ <#aDanceOverride>
  [ 96] getlocal 0 .............................. <sPart>
  [ 98] pusharglist 3 ........................... <me, #aDanceOverride, sPart>
  [100] objcall 190 ............................. <me.aDanceOverride[sPart]>
  [102] setlocal 4 .............................. aDanceSetting = me.aDanceOverride[sPart]
  [104] pushcons 32 ............................. <"h">
  [106] setlocal 5 .............................. sID = "h"
  [108] getlocal 1 .............................. <aConfig>
  [110] pushsymb 223 ............................ <#act>
  [112] pusharglist 2 ........................... <aConfig, #act>
  [114] objcall 213 ............................. <aConfig[#act]>
  [116] setlocal 6 .............................. sAction = aConfig[#act]
  [118] getparam 0 .............................. <me>
  [120] getobjprop 117 .......................... <me.bDance>
  [122] getparam 0 .............................. <me>
  [124] getobjprop 101 .......................... <me.sBodyAction>
  [126] pushcons 3 .............................. <"std">
  [128] eq ...................................... <me.sBodyAction = "std">
  [129] and ..................................... <me.bDance and (me.sBodyAction = "std")>
  [130] jmpifz [184] ............................ if me.bDance and (me.sBodyAction = "std") then
  [133] getlocal 4 .............................. <aDanceSetting>
  [135] pusharglist 1 ........................... <aDanceSetting>
  [137] extcall 85 .............................. <voidp(aDanceSetting)>
  [139] not ..................................... <not voidp(aDanceSetting)>
  [140] jmpifz [184] ............................ if not voidp(aDanceSetting) then
  [143] getlocal 4 .............................. <aDanceSetting>
  [145] pushsymb 231 ............................ <#prts>
  [147] pusharglist 2 ........................... <aDanceSetting, #prts>
  [149] objcall 213 ............................. <aDanceSetting[#prts]>
  [151] setlocal 7 .............................. aDanceParts = aDanceSetting[#prts]
  [153] getlocal 7 .............................. <aDanceParts>
  [155] pusharglist 1 ........................... <aDanceParts>
  [157] extcall 85 .............................. <voidp(aDanceParts)>
  [159] not ..................................... <not voidp(aDanceParts)>
  [160] jmpifz [184] ............................ if not voidp(aDanceParts) then
  [163] getlocal 7 .............................. <aDanceParts>
  [165] getparam 0 .............................. <me>
  [167] getobjprop 99 ........................... <me.iAnimStep>
  [169] pushint8 1 .............................. <1>
  [171] add ..................................... <me.iAnimStep + 1>
  [172] pusharglist 2 ........................... <aDanceParts, me.iAnimStep + 1>
  [174] objcall 213 ............................. <aDanceParts[me.iAnimStep + 1]>
  [176] pushsymb 223 ............................ <#act>
  [178] pusharglist 2 ........................... <aDanceParts[me.iAnimStep + 1], #act>
  [180] objcall 213 ............................. <aDanceParts[me.iAnimStep + 1][#act]>
  [182] setlocal 6 .............................. sAction = aDanceParts[me.iAnimStep + 1][#act]
  [184] getparam 0 .............................. <me>
  [186] pushsymb 221 ............................ <#aConfigSettings>
  [188] getlocal 0 .............................. <sPart>
  [190] pusharglist 3 ........................... <me, #aConfigSettings, sPart>
  [192] objcall 212 ............................. <me.aConfigSettings[sPart]>
  [194] getlocal 1 .............................. <aConfig>
  [196] pushsymb 223 ............................ <#act>
  [198] pusharglist 2 ........................... <aConfig, #act>
  [200] objcall 213 ............................. <aConfig[#act]>
  [202] pusharglist 2 ........................... <me.aConfigSettings[sPart], aConfig[#act]>
  [204] objcall 213 ............................. <me.aConfigSettings[sPart][aConfig[#act]]>
  [206] pushsymb 302 ............................ <#dir>
  [209] pusharglist 2 ........................... <me.aConfigSettings[sPart][aConfig[#act]], #dir>
  [211] objcall 213 ............................. <me.aConfigSettings[sPart][aConfig[#act]][#dir]>
  [213] setlocal 8 .............................. aDirs = me.aConfigSettings[sPart][aConfig[#act]][#dir]
  [215] getparam 0 .............................. <me>
  [217] getparam 0 .............................. <me>
  [219] getobjprop 87 ........................... <me.iDirection>
  [221] getlocal 1 .............................. <aConfig>
  [223] pushsymb 228 ............................ <#dirOff>
  [225] pusharglist 2 ........................... <aConfig, #dirOff>
  [227] objcall 213 ............................. <aConfig[#dirOff]>
  [229] pusharglist 3 ........................... <me, me.iDirection, aConfig[#dirOff]>
  [231] objcall 33 .............................. <me.getDirectionOffset(me.iDirection, aConfig[#dirOff])>
  [233] setlocal 9 .............................. iDirOff = me.getDirectionOffset(me.iDirection, aConfig[#dirOff])
  [235] getparam 0 .............................. <me>
  [237] getlocal 9 .............................. <iDirOff>
  [239] getlocal 8 .............................. <aDirs>
  [241] pusharglist 3 ........................... <me, iDirOff, aDirs>
  [243] objcall 32 .............................. <me.getRealDirection(iDirOff, aDirs)>
  [245] setlocal 10 ............................. iDir = me.getRealDirection(iDirOff, aDirs)
  [247] getlocal 10 ............................. <iDir>
  [249] pusharglist 1 ........................... <iDir>
  [251] extcall 85 .............................. <voidp(iDir)>
  [253] getparam 0 .............................. <me>
  [255] getobjprop 117 .......................... <me.bDance>
  [257] not ..................................... <not me.bDance>
  [258] and ..................................... <voidp(iDir) and not me.bDance>
  [259] jmpifz [270] ............................ if voidp(iDir) and not me.bDance then
  [262] pusharglist 0 ........................... <>
  [264] extcall 184 ............................. <VOID>
  [266] pusharglistnoret 1 ...................... <VOID>
  [268] extcall 149 ............................. return VOID
  [270] getlocal 1 .............................. <aConfig>
  [272] pushsymb 226 ............................ <#animIndex>
  [274] pusharglist 2 ........................... <aConfig, #animIndex>
  [276] objcall 213 ............................. <aConfig[#animIndex]>
  [278] setlocal 11 ............................. iFrame = aConfig[#animIndex]
  [280] getlocal 7 .............................. <aDanceParts>
  [282] pusharglist 1 ........................... <aDanceParts>
  [284] extcall 85 .............................. <voidp(aDanceParts)>
  [286] not ..................................... <not voidp(aDanceParts)>
  [287] jmpifz [311] ............................ if not voidp(aDanceParts) then
  [290] getlocal 7 .............................. <aDanceParts>
  [292] getparam 0 .............................. <me>
  [294] getobjprop 99 ........................... <me.iAnimStep>
  [296] pushint8 1 .............................. <1>
  [298] add ..................................... <me.iAnimStep + 1>
  [299] pusharglist 2 ........................... <aDanceParts, me.iAnimStep + 1>
  [301] objcall 213 ............................. <aDanceParts[me.iAnimStep + 1]>
  [303] pushsymb 232 ............................ <#fr>
  [305] pusharglist 2 ........................... <aDanceParts[me.iAnimStep + 1], #fr>
  [307] objcall 213 ............................. <aDanceParts[me.iAnimStep + 1][#fr]>
  [309] setlocal 11 ............................. iFrame = aDanceParts[me.iAnimStep + 1][#fr]
  [311] getparam 0 .............................. <me>
  [313] getobjprop 117 .......................... <me.bDance>
  [315] getparam 0 .............................. <me>
  [317] getobjprop 101 .......................... <me.sBodyAction>
  [319] pushcons 3 .............................. <"std">
  [321] eq ...................................... <me.sBodyAction = "std">
  [322] and ..................................... <me.bDance and (me.sBodyAction = "std")>
  [323] jmpifz [410] ............................ if me.bDance and (me.sBodyAction = "std") then
  [326] getlocal 4 .............................. <aDanceSetting>
  [328] pusharglist 1 ........................... <aDanceSetting>
  [330] extcall 85 .............................. <voidp(aDanceSetting)>
  [332] not ..................................... <not voidp(aDanceSetting)>
  [333] jmpifz [410] ............................ if not voidp(aDanceSetting) then
  [336] getlocal 4 .............................. <aDanceSetting>
  [338] pushsymb 228 ............................ <#dirOff>
  [340] pusharglist 2 ........................... <aDanceSetting, #dirOff>
  [342] objcall 213 ............................. <aDanceSetting[#dirOff]>
  [344] setlocal 12 ............................. aDanceDirOff = aDanceSetting[#dirOff]
  [346] getlocal 12 ............................. <aDanceDirOff>
  [348] pusharglist 1 ........................... <aDanceDirOff>
  [350] extcall 85 .............................. <voidp(aDanceDirOff)>
  [352] not ..................................... <not voidp(aDanceDirOff)>
  [353] jmpifz [410] ............................ if not voidp(aDanceDirOff) then
  [356] getparam 0 .............................. <me>
  [358] getparam 0 .............................. <me>
  [360] getobjprop 87 ........................... <me.iDirection>
  [362] getlocal 12 ............................. <aDanceDirOff>
  [364] getparam 0 .............................. <me>
  [366] getobjprop 99 ........................... <me.iAnimStep>
  [368] pushint8 1 .............................. <1>
  [370] add ..................................... <me.iAnimStep + 1>
  [371] pusharglist 2 ........................... <aDanceDirOff, me.iAnimStep + 1>
  [373] objcall 213 ............................. <aDanceDirOff[me.iAnimStep + 1]>
  [375] pusharglist 3 ........................... <me, me.iDirection, aDanceDirOff[me.iAnimStep + 1]>
  [377] objcall 33 .............................. <me.getDirectionOffset(me.iDirection, aDanceDirOff[me.iAnimStep + 1])>
  [379] setlocal 9 .............................. iDirOff = me.getDirectionOffset(me.iDirection, aDanceDirOff[me.iAnimStep + 1])
  [381] getparam 0 .............................. <me>
  [383] getlocal 9 .............................. <iDirOff>
  [385] getlocal 8 .............................. <aDirs>
  [387] pusharglist 3 ........................... <me, iDirOff, aDirs>
  [389] objcall 32 .............................. <me.getRealDirection(iDirOff, aDirs)>
  [391] setlocal 10 ............................. iDir = me.getRealDirection(iDirOff, aDirs)
  [393] getlocal 10 ............................. <iDir>
  [395] pusharglist 1 ........................... <iDir>
  [397] extcall 85 .............................. <voidp(iDir)>
  [399] jmpifz [410] ............................ if voidp(iDir) then
  [402] pusharglist 0 ........................... <>
  [404] extcall 184 ............................. <VOID>
  [406] pusharglistnoret 1 ...................... <VOID>
  [408] extcall 149 ............................. return VOID
  [410] getlocal 8 .............................. <aDirs>
  [412] getparam 0 .............................. <me>
  [414] getobjprop 87 ........................... <me.iDirection>
  [416] pusharglist 2 ........................... <aDirs, me.iDirection>
  [418] objcall 259 ............................. <aDirs.getPos(me.iDirection)>
  [421] pushzero ................................ <0>
  [422] gt ...................................... <aDirs.getPos(me.iDirection) > 0>
  [423] not ..................................... <not (aDirs.getPos(me.iDirection) > 0)>
  [424] setlocal 13 ............................. bFlip = not (aDirs.getPos(me.iDirection) > 0)
  [426] getparam 0 .............................. <me>
  [428] getobjprop 117 .......................... <me.bDance>
  [430] getlocal 0 .............................. <sPart>
  [432] pushsymb 140 ............................ <#ey>
  [434] eq ...................................... <sPart = #ey>
  [435] getlocal 0 .............................. <sPart>
  [437] pushsymb 139 ............................ <#fc>
  [439] eq ...................................... <sPart = #fc>
  [440] or ...................................... <(sPart = #ey) or (sPart = #fc)>
  [441] and ..................................... <me.bDance and ((sPart = #ey) or (sPart = #fc))>
  [442] jmpifz [469] ............................ if me.bDance and ((sPart = #ey) or (sPart = #fc)) then
  [445] getlocal 9 .............................. <iDirOff>
  [447] pushint8 1 .............................. <1>
  [449] eq ...................................... <iDirOff = 1>
  [450] jmpifz [456] ............................ if iDirOff = 1 then
  [453] pushzero ................................ <0>
  [454] setlocal 13 ............................. bFlip = 0
  [456] getlocal 9 .............................. <iDirOff>
  [458] pushint8 1 .............................. <1>
  [460] inv ..................................... <-1>
  [461] eq ...................................... <iDirOff = -1>
  [462] jmpifz [469] ............................ if iDirOff = -1 then
  [465] pushint8 1 .............................. <1>
  [467] setlocal 13 ............................. bFlip = 1
  [469] getlocal 9 .............................. <iDirOff>
  [471] pushint8 4 .............................. <4>
  [473] eq ...................................... <iDirOff = 4>
  [474] getlocal 9 .............................. <iDirOff>
  [476] pushint8 6 .............................. <6>
  [478] eq ...................................... <iDirOff = 6>
  [479] or ...................................... <(iDirOff = 4) or (iDirOff = 6)>
  [480] jmpifz [519] ............................ if (iDirOff = 4) or (iDirOff = 6) then
  [483] getlocal 0 .............................. <sPart>
  [485] pushsymb 138 ............................ <#hd>
  [487] eq ...................................... <sPart = #hd>
  [488] getlocal 0 .............................. <sPart>
  [490] pushsymb 139 ............................ <#fc>
  [492] eq ...................................... <sPart = #fc>
  [493] or ...................................... <(sPart = #hd) or (sPart = #fc)>
  [494] getlocal 0 .............................. <sPart>
  [496] pushsymb 140 ............................ <#ey>
  [498] eq ...................................... <sPart = #ey>
  [499] or ...................................... <(sPart = #hd) or (sPart = #fc) or (sPart = #ey)>
  [500] getlocal 0 .............................. <sPart>
  [502] pushsymb 141 ............................ <#hr>
  [504] eq ...................................... <sPart = #hr>
  [505] or ...................................... <(sPart = #hd) or (sPart = #fc) or (sPart = #ey) or (sPart = #hr)>
  [506] getlocal 0 .............................. <sPart>
  [508] pushsymb 142 ............................ <#ht>
  [510] eq ...................................... <sPart = #ht>
  [511] or ...................................... <(sPart = #hd) or (sPart = #fc) or (sPart = #ey) or (sPart = #hr) or (sPart = #ht)>
  [512] jmpifz [519] ............................ if (sPart = #hd) or (sPart = #fc) or (sPart = #ey) or (sPart = #hr) or (sPart = #ht) then
  [515] pushint8 1 .............................. <1>
  [517] setlocal 13 ............................. bFlip = 1
  [519] getparam 0 .............................. <me>
  [521] getobjprop 118 .......................... <me.bCarry>
  [523] getlocal 0 .............................. <sPart>
  [525] pushsymb 135 ............................ <#ri>
  [527] eq ...................................... <sPart = #ri>
  [528] and ..................................... <me.bCarry and (sPart = #ri)>
  [529] jmpifz [572] ............................ if me.bCarry and (sPart = #ri) then
  [532] getparam 0 .............................. <me>
  [534] getobjprop 87 ........................... <me.iDirection>
  [536] pushint8 5 .............................. <5>
  [538] eq ...................................... <me.iDirection = 5>
  [539] getparam 0 .............................. <me>
  [541] getobjprop 87 ........................... <me.iDirection>
  [543] pushint8 4 .............................. <4>
  [545] eq ...................................... <me.iDirection = 4>
  [546] or ...................................... <(me.iDirection = 5) or (me.iDirection = 4)>
  [547] jmpifz [554] ............................ if (me.iDirection = 5) or (me.iDirection = 4) then
  [550] pushint8 1 .............................. <1>
  [552] setlocal 13 ............................. bFlip = 1
  [554] getparam 0 .............................. <me>
  [556] getobjprop 121 .......................... <me.bDrink>
  [558] jmpifz [568] ............................ if me.bDrink then / else
  [561] pushcons 33 ............................. <"drk">
  [563] setlocal 6 .............................. sAction = "drk"
  [565] jmp [572]
  [568] pushcons 18 ............................. <"crr">
  [570] setlocal 6 .............................. sAction = "crr"
  [572] getparam 0 .............................. <me>
  [574] getobjprop 118 .......................... <me.bCarry>
  [576] jmpifz [724] ............................ if me.bCarry then
  [579] getparam 0 .............................. <me>
  [581] getobjprop 87 ........................... <me.iDirection>
  [583] pushint8 3 .............................. <3>
  [585] gt ...................................... <me.iDirection > 3>
  [586] getparam 0 .............................. <me>
  [588] getobjprop 87 ........................... <me.iDirection>
  [590] pushint8 7 .............................. <7>
  [592] lt ...................................... <me.iDirection < 7>
  [593] and ..................................... <(me.iDirection > 3) and (me.iDirection < 7)>
  [594] jmpifz [662] ............................ if (me.iDirection > 3) and (me.iDirection < 7) then / else
  [597] getlocal 0 .............................. <sPart>
  [599] pushsymb 129 ............................ <#lh>
  [601] eq ...................................... <sPart = #lh>
  [602] getlocal 0 .............................. <sPart>
  [604] pushsymb 130 ............................ <#ls>
  [606] eq ...................................... <sPart = #ls>
  [607] or ...................................... <(sPart = #lh) or (sPart = #ls)>
  [608] jmpifz [632] ............................ if (sPart = #lh) or (sPart = #ls) then
  [611] getparam 0 .............................. <me>
  [613] getobjprop 121 .......................... <me.bDrink>
  [615] jmpifz [625] ............................ if me.bDrink then / else
  [618] pushcons 33 ............................. <"drk">
  [620] setlocal 6 .............................. sAction = "drk"
  [622] jmp [629]
  [625] pushcons 18 ............................. <"crr">
  [627] setlocal 6 .............................. sAction = "crr"
  [629] pushzero ................................ <0>
  [630] setlocal 11 ............................. iFrame = 0
  [632] getparam 0 .............................. <me>
  [634] getobjprop 117 .......................... <me.bDance>
  [636] not ..................................... <not me.bDance>
  [637] getlocal 0 .............................. <sPart>
  [639] pushsymb 136 ............................ <#rh>
  [641] eq ...................................... <sPart = #rh>
  [642] getlocal 0 .............................. <sPart>
  [644] pushsymb 137 ............................ <#rs>
  [646] eq ...................................... <sPart = #rs>
  [647] or ...................................... <(sPart = #rh) or (sPart = #rs)>
  [648] and ..................................... <not me.bDance and ((sPart = #rh) or (sPart = #rs))>
  [649] jmpifz [659] ............................ if not me.bDance and ((sPart = #rh) or (sPart = #rs)) then
  [652] pushcons 3 .............................. <"std">
  [654] setlocal 6 .............................. sAction = "std"
  [656] pushzero ................................ <0>
  [657] setlocal 11 ............................. iFrame = 0
  [659] jmp [724]
  [662] getparam 0 .............................. <me>
  [664] getobjprop 117 .......................... <me.bDance>
  [666] not ..................................... <not me.bDance>
  [667] getlocal 0 .............................. <sPart>
  [669] pushsymb 129 ............................ <#lh>
  [671] eq ...................................... <sPart = #lh>
  [672] getlocal 0 .............................. <sPart>
  [674] pushsymb 130 ............................ <#ls>
  [676] eq ...................................... <sPart = #ls>
  [677] or ...................................... <(sPart = #lh) or (sPart = #ls)>
  [678] and ..................................... <not me.bDance and ((sPart = #lh) or (sPart = #ls))>
  [679] jmpifz [689] ............................ if not me.bDance and ((sPart = #lh) or (sPart = #ls)) then
  [682] pushcons 3 .............................. <"std">
  [684] setlocal 6 .............................. sAction = "std"
  [686] pushzero ................................ <0>
  [687] setlocal 11 ............................. iFrame = 0
  [689] getlocal 0 .............................. <sPart>
  [691] pushsymb 136 ............................ <#rh>
  [693] eq ...................................... <sPart = #rh>
  [694] getlocal 0 .............................. <sPart>
  [696] pushsymb 137 ............................ <#rs>
  [698] eq ...................................... <sPart = #rs>
  [699] or ...................................... <(sPart = #rh) or (sPart = #rs)>
  [700] jmpifz [724] ............................ if (sPart = #rh) or (sPart = #rs) then
  [703] getparam 0 .............................. <me>
  [705] getobjprop 121 .......................... <me.bDrink>
  [707] jmpifz [717] ............................ if me.bDrink then / else
  [710] pushcons 33 ............................. <"drk">
  [712] setlocal 6 .............................. sAction = "drk"
  [714] jmp [721]
  [717] pushcons 18 ............................. <"crr">
  [719] setlocal 6 .............................. sAction = "crr"
  [721] pushzero ................................ <0>
  [722] setlocal 11 ............................. iFrame = 0
  [724] getparam 0 .............................. <me>
  [726] pushsymb 185 ............................ <#aAttributes>
  [728] getparam 1 .............................. <prt>
  [730] pusharglist 3 ........................... <me, #aAttributes, prt>
  [732] objcall 212 ............................. <me.aAttributes[prt]>
  [734] pushsymb 195 ............................ <#clr>
  [736] pusharglist 2 ........................... <me.aAttributes[prt], #clr>
  [738] objcall 213 ............................. <me.aAttributes[prt][#clr]>
  [740] setlocal 14 ............................. oColor = me.aAttributes[prt][#clr]
  [742] getlocal 5 .............................. <sID>
  [744] pushcons 29 ............................. <"_">
  [746] joinstr ................................. <sID & "_">
  [747] getlocal 6 .............................. <sAction>
  [749] joinstr ................................. <sID & "_" & sAction>
  [750] pushcons 29 ............................. <"_">
  [752] joinstr ................................. <sID & "_" & sAction & "_">
  [753] getlocal 0 .............................. <sPart>
  [755] joinstr ................................. <sID & "_" & sAction & "_" & sPart>
  [756] pushcons 29 ............................. <"_">
  [758] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_">
  [759] getlocal 2 .............................. <sPartCode>
  [761] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode>
  [762] pushcons 29 ............................. <"_">
  [764] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_">
  [765] getlocal 10 ............................. <iDir>
  [767] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir>
  [768] pushcons 29 ............................. <"_">
  [770] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_">
  [771] getlocal 11 ............................. <iFrame>
  [773] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & iFrame>
  [774] setlocal 15 ............................. sMemberName = sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & iFrame
  [776] getlocal 15 ............................. <sMemberName>
  [778] getparam 0 .............................. <me>
  [780] getobjprop 81 ........................... <me.sPartCast>
  [782] pusharglist 2 ........................... <sMemberName, me.sPartCast>
  [784] extcall 165 ............................. <member(sMemberName, me.sPartCast)>
  [786] setlocal 16 ............................. oMember = member(sMemberName, me.sPartCast)
  [788] getlocal 16 ............................. <oMember>
  [790] getobjprop 166 .......................... <oMember.memberNum>
  [792] pushint8 1 .............................. <1>
  [794] inv ..................................... <-1>
  [795] eq ...................................... <oMember.memberNum = -1>
  [796] jmpifz [864] ............................ if oMember.memberNum = -1 then
  [799] getlocal 5 .............................. <sID>
  [801] pushcons 29 ............................. <"_">
  [803] joinstr ................................. <sID & "_">
  [804] getlocal 6 .............................. <sAction>
  [806] joinstr ................................. <sID & "_" & sAction>
  [807] pushcons 29 ............................. <"_">
  [809] joinstr ................................. <sID & "_" & sAction & "_">
  [810] getlocal 0 .............................. <sPart>
  [812] joinstr ................................. <sID & "_" & sAction & "_" & sPart>
  [813] pushcons 29 ............................. <"_">
  [815] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_">
  [816] getlocal 2 .............................. <sPartCode>
  [818] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode>
  [819] pushcons 29 ............................. <"_">
  [821] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_">
  [822] getlocal 10 ............................. <iDir>
  [824] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir>
  [825] pushcons 29 ............................. <"_">
  [827] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_">
  [828] pushcons 34 ............................. <"0">
  [830] joinstr ................................. <sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & "0">
  [831] setlocal 15 ............................. sMemberName = sID & "_" & sAction & "_" & sPart & "_" & sPartCode & "_" & iDir & "_" & "0"
  [833] getlocal 15 ............................. <sMemberName>
  [835] getparam 0 .............................. <me>
  [837] getobjprop 81 ........................... <me.sPartCast>
  [839] pusharglist 2 ........................... <sMemberName, me.sPartCast>
  [841] extcall 165 ............................. <member(sMemberName, me.sPartCast)>
  [843] setlocal 16 ............................. oMember = member(sMemberName, me.sPartCast)
  [845] getlocal 16 ............................. <oMember>
  [847] getobjprop 166 .......................... <oMember.memberNum>
  [849] pushint8 1 .............................. <1>
  [851] inv ..................................... <-1>
  [852] eq ...................................... <oMember.memberNum = -1>
  [853] jmpifz [864] ............................ if oMember.memberNum = -1 then
  [856] pusharglist 0 ........................... <>
  [858] extcall 184 ............................. <VOID>
  [860] pusharglistnoret 1 ...................... <VOID>
  [862] extcall 149 ............................. return VOID
  [864] getlocal 1 .............................. <aConfig>
  [866] pushsymb 181 ............................ <#ink>
  [868] pusharglist 2 ........................... <aConfig, #ink>
  [870] objcall 213 ............................. <aConfig[#ink]>
  [872] setlocal 17 ............................. iInk = aConfig[#ink]
  [874] getlocal 17 ............................. <iInk>
  [876] pusharglist 1 ........................... <iInk>
  [878] extcall 85 .............................. <voidp(iInk)>
  [880] jmpifz [889] ............................ if voidp(iInk) then
  [883] getparam 0 .............................. <me>
  [885] getobjprop 93 ........................... <me.iDefaultInk>
  [887] setlocal 17 ............................. iInk = me.iDefaultInk
  [889] pushcons 29 ............................. <"_">
  [891] setmovieprop 186 ........................ the itemDelimiter = "_"
  [893] pushcons 30 ............................. <"custominks">
  [895] pusharglist 1 ........................... <"custominks">
  [897] extcall 165 ............................. <member("custominks")>
  [899] getobjprop 220 .......................... <member("custominks").text>
  [901] pusharglist 1 ........................... <member("custominks").text>
  [903] extcall 219 ............................. <value(member("custominks").text)>
  [905] setlocal 18 ............................. custominks = value(member("custominks").text)
  [907] getlocal 18 ............................. <custominks>
  [909] getlocal 15 ............................. <sMemberName>
  [911] pushsymb 189 ............................ <#item>
  [913] pushint8 3 .............................. <3>
  [915] pushint8 4 .............................. <4>
  [917] pusharglist 4 ........................... <sMemberName, #item, 3, 4>
  [919] objcall 190 ............................. <sMemberName.item[3..4]>
  [921] pusharglist 2 ........................... <custominks, sMemberName.item[3..4]>
  [923] extcall 361 ............................. <getaProp(custominks, sMemberName.item[3..4])>
  [926] setlocal 19 ............................. myink = getaProp(custominks, sMemberName.item[3..4])
  [928] getlocal 19 ............................. <myink>
  [930] pusharglist 1 ........................... <myink>
  [932] extcall 362 ............................. <integerp(myink)>
  [935] jmpifz [942] ............................ if integerp(myink) then
  [938] getlocal 19 ............................. <myink>
  [940] setlocal 17 ............................. iInk = myink
  [942] pushzero ................................ <0>
  [943] pushzero ................................ <0>
  [944] pusharglist 2 ........................... <0, 0>
  [946] extcall 88 .............................. <point(0, 0)>
  [948] setlocal 20 ............................. oLocOff = point(0, 0)
  [950] getparam 0 .............................. <me>
  [952] getobjprop 117 .......................... <me.bDance>
  [954] getparam 0 .............................. <me>
  [956] getobjprop 101 .......................... <me.sBodyAction>
  [958] pushcons 3 .............................. <"std">
  [960] eq ...................................... <me.sBodyAction = "std">
  [961] and ..................................... <me.bDance and (me.sBodyAction = "std")>
  [962] jmpifz [1010] ........................... if me.bDance and (me.sBodyAction = "std") then
  [965] getlocal 4 .............................. <aDanceSetting>
  [967] pusharglist 1 ........................... <aDanceSetting>
  [969] extcall 85 .............................. <voidp(aDanceSetting)>
  [971] not ..................................... <not voidp(aDanceSetting)>
  [972] jmpifz [1010] ........................... if not voidp(aDanceSetting) then
  [975] getlocal 4 .............................. <aDanceSetting>
  [977] pushsymb 234 ............................ <#locOff>
  [979] pusharglist 2 ........................... <aDanceSetting, #locOff>
  [981] objcall 213 ............................. <aDanceSetting[#locOff]>
  [983] setlocal 21 ............................. aDanceLocOff = aDanceSetting[#locOff]
  [985] getlocal 21 ............................. <aDanceLocOff>
  [987] pusharglist 1 ........................... <aDanceLocOff>
  [989] extcall 85 .............................. <voidp(aDanceLocOff)>
  [991] not ..................................... <not voidp(aDanceLocOff)>
  [992] jmpifz [1010] ........................... if not voidp(aDanceLocOff) then
  [995] getlocal 21 ............................. <aDanceLocOff>
  [997] getparam 0 .............................. <me>
  [999] getobjprop 99 ........................... <me.iAnimStep>
  [1001] pushint8 1 ............................. <1>
  [1003] add .................................... <me.iAnimStep + 1>
  [1004] pusharglist 2 .......................... <aDanceLocOff, me.iAnimStep + 1>
  [1006] objcall 213 ............................ <aDanceLocOff[me.iAnimStep + 1]>
  [1008] setlocal 20 ............................ oLocOff = aDanceLocOff[me.iAnimStep + 1]
  [1010] getlocal 9 ............................. <iDirOff>
  [1012] pushint8 4 ............................. <4>
  [1014] eq ..................................... <iDirOff = 4>
  [1015] getlocal 9 ............................. <iDirOff>
  [1017] pushint8 6 ............................. <6>
  [1019] eq ..................................... <iDirOff = 6>
  [1020] or ..................................... <(iDirOff = 4) or (iDirOff = 6)>
  [1021] getparam 0 ............................. <me>
  [1023] getobjprop 87 .......................... <me.iDirection>
  [1025] pushint8 3 ............................. <3>
  [1027] eq ..................................... <me.iDirection = 3>
  [1028] getparam 0 ............................. <me>
  [1030] getobjprop 87 .......................... <me.iDirection>
  [1032] pushint8 7 ............................. <7>
  [1034] eq ..................................... <me.iDirection = 7>
  [1035] or ..................................... <(me.iDirection = 3) or (me.iDirection = 7)>
  [1036] and .................................... <((iDirOff = 4) or (iDirOff = 6)) and ((me.iDirection = 3) or (me.iDirection = 7))>
  [1037] jmpifz [1082] .......................... if ((iDirOff = 4) or (iDirOff = 6)) and ((me.iDirection = 3) or (me.iDirection = 7)) then
  [1040] getlocal 0 ............................. <sPart>
  [1042] pushsymb 138 ........................... <#hd>
  [1044] eq ..................................... <sPart = #hd>
  [1045] getlocal 0 ............................. <sPart>
  [1047] pushsymb 139 ........................... <#fc>
  [1049] eq ..................................... <sPart = #fc>
  [1050] or ..................................... <(sPart = #hd) or (sPart = #fc)>
  [1051] getlocal 0 ............................. <sPart>
  [1053] pushsymb 140 ........................... <#ey>
  [1055] eq ..................................... <sPart = #ey>
  [1056] or ..................................... <(sPart = #hd) or (sPart = #fc) or (sPart = #ey)>
  [1057] getlocal 0 ............................. <sPart>
  [1059] pushsymb 141 ........................... <#hr>
  [1061] eq ..................................... <sPart = #hr>
  [1062] or ..................................... <(sPart = #hd) or (sPart = #fc) or (sPart = #ey) or (sPart = #hr)>
  [1063] getlocal 0 ............................. <sPart>
  [1065] pushsymb 142 ........................... <#ht>
  [1067] eq ..................................... <sPart = #ht>
  [1068] or ..................................... <(sPart = #hd) or (sPart = #fc) or (sPart = #ey) or (sPart = #hr) or (sPart = #ht)>
  [1069] jmpifz [1082] .......................... if (sPart = #hd) or (sPart = #fc) or (sPart = #ey) or (sPart = #hr) or (sPart = #ht) then
  [1072] pushint8 4 ............................. <4>
  [1074] inv .................................... <-4>
  [1075] pushzero ............................... <0>
  [1076] pusharglist 2 .......................... <-4, 0>
  [1078] extcall 88 ............................. <point(-4, 0)>
  [1080] setlocal 20 ............................ oLocOff = point(-4, 0)
  [1082] pushsymb 303 ........................... <#id>
  [1085] getlocal 5 ............................. <sID>
  [1087] pushsymb 223 ........................... <#act>
  [1089] getlocal 6 ............................. <sAction>
  [1091] pushsymb 270 ........................... <#prt>
  [1094] getparam 1 ............................. <prt>
  [1096] pushsymb 194 ........................... <#prtCd>
  [1098] getlocal 2 ............................. <sPartCode>
  [1100] pushsymb 302 ........................... <#dir>
  [1103] getlocal 10 ............................ <iDir>
  [1105] pushsymb 232 ........................... <#fr>
  [1107] getlocal 11 ............................ <iFrame>
  [1109] pushsymb 271 ........................... <#flip>
  [1112] getlocal 13 ............................ <bFlip>
  [1114] pushsymb 195 ........................... <#clr>
  [1116] getlocal 14 ............................ <oColor>
  [1118] pushsymb 304 ........................... <#memberName>
  [1121] getlocal 15 ............................ <sMemberName>
  [1123] pushsymb 165 ........................... <#member>
  [1125] getlocal 16 ............................ <oMember>
  [1127] pushsymb 181 ........................... <#ink>
  [1129] getlocal 17 ............................ <iInk>
  [1131] pushsymb 234 ........................... <#locOff>
  [1133] getlocal 20 ............................ <oLocOff>
  [1135] pusharglist 24 ......................... <[#id: sID, #act: sAction, #prt: prt, #prtCd: sPartCode, #dir: iDir, #fr: iFrame, #flip: bFlip, #clr: oColor, #memberName: sMemberName, #member: oMember, #ink: iInk, #locOff: oLocOff]>
  [1137] pushproplist ........................... <[#id: sID, #act: sAction, #prt: prt, #prtCd: sPartCode, #dir: iDir, #fr: iFrame, #flip: bFlip, #clr: oColor, #memberName: sMemberName, #member: oMember, #ink: iInk, #locOff: oLocOff]>
  [1138] setlocal 22 ............................ aPartSettings = [#id: sID, #act: sAction, #prt: prt, #prtCd: sPartCode, #dir: iDir, #fr: iFrame, #flip: bFlip, #clr: oColor, #memberName: sMemberName, #member: oMember, #ink: iInk, #locOff: oLocOff]
  [1140] getlocal 22 ............................ <aPartSettings>
  [1142] pusharglistnoret 1 ..................... <aPartSettings>
  [1144] extcall 149 ............................ return aPartSettings
  [1146] ret
end

on setLoc me, oLoc
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <oLoc>
  [  4] setobjprop 89 ........................... me.oPoint = oLoc
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 157 .......................... <me.iImageSprite>
  [ 10] pusharglist 1 ........................... <me.iImageSprite>
  [ 12] extcall 85 .............................. <voidp(me.iImageSprite)>
  [ 14] jmpifz [ 21] ............................ if voidp(me.iImageSprite) then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 149 ............................. return 
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 157 .......................... <me.iImageSprite>
  [ 25] pusharglist 1 ........................... <me.iImageSprite>
  [ 27] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 89 ....................... <me.oPoint>
  [ 33] getobjprop 298 .......................... <me.oPoint.locH>
  [ 36] setobjprop 298 .......................... sprite(me.iImageSprite).locH = me.oPoint.locH
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 157 .......................... <me.iImageSprite>
  [ 43] pusharglist 1 ........................... <me.iImageSprite>
  [ 45] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 89 ....................... <me.oPoint>
  [ 51] getobjprop 297 .......................... <me.oPoint.locV>
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 145 .......................... <me.iHeightOffset>
  [ 58] sub ..................................... <me.oPoint.locV - me.iHeightOffset>
  [ 59] setobjprop 297 .......................... sprite(me.iImageSprite).locV = me.oPoint.locV - me.iHeightOffset
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 158 .......................... <me.iShadowSprite>
  [ 66] pusharglist 1 ........................... <me.iShadowSprite>
  [ 68] extcall 85 .............................. <voidp(me.iShadowSprite)>
  [ 70] jmpifz [ 77] ............................ if voidp(me.iShadowSprite) then
  [ 73] pusharglistnoret 0 ...................... <>
  [ 75] extcall 149 ............................. return 
  [ 77] getparam 0 .............................. <me>
  [ 79] getobjprop 158 .......................... <me.iShadowSprite>
  [ 81] pusharglist 1 ........................... <me.iShadowSprite>
  [ 83] extcall 179 ............................. <sprite(me.iShadowSprite)>
  [ 85] getparam 0 .............................. <me>
  [ 87] getobjprop 89 ........................... <me.oPoint>
  [ 89] setobjprop 317 .......................... sprite(me.iShadowSprite).loc = me.oPoint
  [ 92] ret
end

on getLoc me, oLoc
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 89 ........................... <me.oPoint>
  [  4] pusharglistnoret 1 ...................... <me.oPoint>
  [  6] extcall 149 ............................. return me.oPoint
  [  8] ret
end

on getRealDirection me, iDir, aDirs
  [  0] getparam 2 .............................. <aDirs>
  [  2] getparam 1 .............................. <iDir>
  [  4] pusharglist 2 ........................... <aDirs, iDir>
  [  6] objcall 259 ............................. <aDirs.getPos(iDir)>
  [  9] pushzero ................................ <0>
  [ 10] gt ...................................... <aDirs.getPos(iDir) > 0>
  [ 11] setlocal 0 .............................. bRealExists = aDirs.getPos(iDir) > 0
  [ 13] getlocal 0 .............................. <bRealExists>
  [ 15] jmpifz [ 24] ............................ if bRealExists then
  [ 18] getparam 1 .............................. <iDir>
  [ 20] pusharglistnoret 1 ...................... <iDir>
  [ 22] extcall 149 ............................. return iDir
  [ 24] getparam 1 .............................. <iDir>
  [ 26] pushint8 7 .............................. <7>
  [ 28] eq ...................................... <iDir = 7>
  [ 29] jmpifz [ 40] ............................ if iDir = 7 then
  [ 32] pusharglist 0 ........................... <>
  [ 34] extcall 184 ............................. <VOID>
  [ 36] pusharglistnoret 1 ...................... <VOID>
  [ 38] extcall 149 ............................. return VOID
  [ 40] getparam 0 .............................. <me>
  [ 42] getchainedprop 237 ...................... <me.aDirectionMap>
  [ 44] getparam 1 .............................. <iDir>
  [ 46] pusharglist 2 ........................... <me.aDirectionMap, iDir>
  [ 48] objcall 190 ............................. <me.aDirectionMap.getProp(iDir)>
  [ 50] setlocal 1 .............................. iFakeDir = me.aDirectionMap.getProp(iDir)
  [ 52] getparam 2 .............................. <aDirs>
  [ 54] getlocal 1 .............................. <iFakeDir>
  [ 56] pusharglist 2 ........................... <aDirs, iFakeDir>
  [ 58] objcall 259 ............................. <aDirs.getPos(iFakeDir)>
  [ 61] pushzero ................................ <0>
  [ 62] gt ...................................... <aDirs.getPos(iFakeDir) > 0>
  [ 63] setlocal 2 .............................. bFakeExists = aDirs.getPos(iFakeDir) > 0
  [ 65] getlocal 2 .............................. <bFakeExists>
  [ 67] jmpifz [ 79] ............................ if bFakeExists then / else
  [ 70] getlocal 1 .............................. <iFakeDir>
  [ 72] pusharglistnoret 1 ...................... <iFakeDir>
  [ 74] extcall 149 ............................. return iFakeDir
  [ 76] jmp [ 87]
  [ 79] pusharglist 0 ........................... <>
  [ 81] extcall 184 ............................. <VOID>
  [ 83] pusharglistnoret 1 ...................... <VOID>
  [ 85] extcall 149 ............................. return VOID
  [ 87] ret
end

on getDirectionOffset me, iDir, iDirOff
  [  0] getparam 1 .............................. <iDir>
  [  2] getparam 2 .............................. <iDirOff>
  [  4] add ..................................... <iDir + iDirOff>
  [  5] setlocal 0 .............................. iNewDir = iDir + iDirOff
  [  7] getlocal 0 .............................. <iNewDir>
  [  9] pushzero ................................ <0>
  [ 10] lt ...................................... <iNewDir < 0>
  [ 11] jmpifz [ 21] ............................ if iNewDir < 0 then
  [ 14] pushint8 8 .............................. <8>
  [ 16] getlocal 0 .............................. <iNewDir>
  [ 18] add ..................................... <8 + iNewDir>
  [ 19] setlocal 0 .............................. iNewDir = 8 + iNewDir
  [ 21] getlocal 0 .............................. <iNewDir>
  [ 23] pushint8 7 .............................. <7>
  [ 25] gt ...................................... <iNewDir > 7>
  [ 26] jmpifz [ 36] ............................ if iNewDir > 7 then
  [ 29] getlocal 0 .............................. <iNewDir>
  [ 31] pushint8 8 .............................. <8>
  [ 33] mod ..................................... <iNewDir mod 8>
  [ 34] setlocal 0 .............................. iNewDir = iNewDir mod 8
  [ 36] getlocal 0 .............................. <iNewDir>
  [ 38] pusharglistnoret 1 ...................... <iNewDir>
  [ 40] extcall 149 ............................. return iNewDir
  [ 42] ret
end

on setPartActive me, sPart, bActive, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 222 ............................ <#aRuntimeConfig>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  8] objcall 212 ............................. <me.aRuntimeConfig[sPart]>
  [ 10] pushsymb 227 ............................ <#Active>
  [ 12] getparam 2 .............................. <bActive>
  [ 14] pusharglistnoret 3 ...................... <me.aRuntimeConfig[sPart], #Active, bActive>
  [ 16] objcall 233 ............................. me.aRuntimeConfig[sPart][#Active] = bActive
  [ 18] ret
end

on getPartActive me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 222 ............................ <#aRuntimeConfig>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  8] objcall 212 ............................. <me.aRuntimeConfig[sPart]>
  [ 10] pushsymb 227 ............................ <#Active>
  [ 12] pusharglist 2 ........................... <me.aRuntimeConfig[sPart], #Active>
  [ 14] objcall 213 ............................. <me.aRuntimeConfig[sPart][#Active]>
  [ 16] pusharglistnoret 1 ...................... <me.aRuntimeConfig[sPart][#Active]>
  [ 18] extcall 149 ............................. return me.aRuntimeConfig[sPart][#Active]
  [ 20] ret
end

on setPartCode me, sPart, sPartCode, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 185 ............................ <#aAttributes>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  8] objcall 212 ............................. <me.aAttributes[sPart]>
  [ 10] pushsymb 194 ............................ <#prtCd>
  [ 12] getparam 2 .............................. <sPartCode>
  [ 14] pusharglistnoret 3 ...................... <me.aAttributes[sPart], #prtCd, sPartCode>
  [ 16] objcall 233 ............................. me.aAttributes[sPart][#prtCd] = sPartCode
  [ 18] ret
end

on getPartCode me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 185 ............................ <#aAttributes>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  8] objcall 212 ............................. <me.aAttributes[sPart]>
  [ 10] pushsymb 194 ............................ <#prtCd>
  [ 12] pusharglist 2 ........................... <me.aAttributes[sPart], #prtCd>
  [ 14] objcall 213 ............................. <me.aAttributes[sPart][#prtCd]>
  [ 16] pusharglistnoret 1 ...................... <me.aAttributes[sPart][#prtCd]>
  [ 18] extcall 149 ............................. return me.aAttributes[sPart][#prtCd]
  [ 20] ret
end

on setPartAction me, sPart, sAct, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 222 ............................ <#aRuntimeConfig>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  8] objcall 212 ............................. <me.aRuntimeConfig[sPart]>
  [ 10] pushsymb 223 ............................ <#act>
  [ 12] getparam 2 .............................. <sAct>
  [ 14] pusharglistnoret 3 ...................... <me.aRuntimeConfig[sPart], #act, sAct>
  [ 16] objcall 233 ............................. me.aRuntimeConfig[sPart][#act] = sAct
  [ 18] ret
end

on getPartAction me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 222 ............................ <#aRuntimeConfig>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aRuntimeConfig, sPart>
  [  8] objcall 212 ............................. <me.aRuntimeConfig[sPart]>
  [ 10] pushsymb 223 ............................ <#act>
  [ 12] pusharglist 2 ........................... <me.aRuntimeConfig[sPart], #act>
  [ 14] objcall 213 ............................. <me.aRuntimeConfig[sPart][#act]>
  [ 16] pusharglistnoret 1 ...................... <me.aRuntimeConfig[sPart][#act]>
  [ 18] extcall 149 ............................. return me.aRuntimeConfig[sPart][#act]
  [ 20] ret
end

on setDirection me, iDir, bDisplay
  [  0] getparam 1 .............................. <iDir>
  [  2] pusharglist 1 ........................... <iDir>
  [  4] extcall 85 .............................. <voidp(iDir)>
  [  6] jmpifz [ 13] ............................ if voidp(iDir) then
  [  9] pushint8 2 .............................. <2>
  [ 11] setparam 1 .............................. iDir = 2
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 87 ........................... <me.iDirection>
  [ 17] getparam 1 .............................. <iDir>
  [ 19] eq ...................................... <me.iDirection = iDir>
  [ 20] jmpifz [ 27] ............................ if me.iDirection = iDir then
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 149 ............................. return 
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 1 .............................. <iDir>
  [ 31] setobjprop 87 ........................... me.iDirection = iDir
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 17 .............................. me.setDrawOrder()
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglistnoret 1 ...................... <me>
  [ 43] objcall 24 .............................. me.display()
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglistnoret 1 ...................... <me>
  [ 49] objcall 68 .............................. me.wakeup()
  [ 51] ret
end

on getDirection me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 87 ........................... <me.iDirection>
  [  4] pusharglistnoret 1 ...................... <me.iDirection>
  [  6] extcall 149 ............................. return me.iDirection
  [  8] ret
end

on rotate me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 87 ........................... <me.iDirection>
  [  4] pushint8 1 .............................. <1>
  [  6] add ..................................... <me.iDirection + 1>
  [  7] setlocal 0 .............................. iNewDir = me.iDirection + 1
  [  9] getlocal 0 .............................. <iNewDir>
  [ 11] pushint8 7 .............................. <7>
  [ 13] gt ...................................... <iNewDir > 7>
  [ 14] jmpifz [ 20] ............................ if iNewDir > 7 then
  [ 17] pushzero ................................ <0>
  [ 18] setlocal 0 .............................. iNewDir = 0
  [ 20] getparam 0 .............................. <me>
  [ 22] getlocal 0 .............................. <iNewDir>
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 3 ...................... <me, iNewDir, 1>
  [ 28] objcall 40 .............................. me.setDirection(iNewDir, 1)
  [ 30] ret
end

on setFPS me, _iFPS, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iFPS>
  [  4] setobjprop 104 .......................... me.iFPS = _iFPS
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 104 .......................... <me.iFPS>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <me.iFPS = 0>
  [ 12] jmpifz [ 27] ............................ if me.iFPS = 0 then / else
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 0 ........................... <>
  [ 19] thebuiltin 325 .......................... <the maxinteger>
  [ 22] setobjprop 107 .......................... me.iFPSTimerLength = the maxinteger
  [ 24] jmp [ 39]
  [ 27] getparam 0 .............................. <me>
  [ 29] pushint16 1000 .......................... <1000>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 104 .......................... <me.iFPS>
  [ 36] div ..................................... <1000 / me.iFPS>
  [ 37] setobjprop 107 .......................... me.iFPSTimerLength = 1000 / me.iFPS
  [ 39] ret
end

on setAnimFrame me, iFrame, bDisplay
  [  0] getparam 1 .............................. <iFrame>
  [  2] pushzero ................................ <0>
  [  3] gteq .................................... <iFrame >= 0>
  [  4] getparam 1 .............................. <iFrame>
  [  6] getparam 0 .............................. <me>
  [  8] getobjprop 100 .......................... <me.iAnimStepMax>
  [ 10] lteq .................................... <iFrame <= me.iAnimStepMax>
  [ 11] and ..................................... <(iFrame >= 0) and (iFrame <= me.iAnimStepMax)>
  [ 12] jmpifz [ 21] ............................ if (iFrame >= 0) and (iFrame <= me.iAnimStepMax) then
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 1 .............................. <iFrame>
  [ 19] setobjprop 99 ........................... me.iAnimStep = iFrame
  [ 21] ret
end

on setScale me, _iScale, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iScale>
  [  4] setobjprop 86 ........................... me.iScale = _iScale
  [  6] getparam 0 .............................. <me>
  [  8] pusharglistnoret 1 ...................... <me>
  [ 10] objcall 7 ............................... me.createMember()
  [ 12] ret
end

on getPartColor me, sPart
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 185 ............................ <#aAttributes>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  8] objcall 212 ............................. <me.aAttributes[sPart]>
  [ 10] pushsymb 195 ............................ <#clr>
  [ 12] pusharglist 2 ........................... <me.aAttributes[sPart], #clr>
  [ 14] objcall 213 ............................. <me.aAttributes[sPart][#clr]>
  [ 16] pusharglistnoret 1 ...................... <me.aAttributes[sPart][#clr]>
  [ 18] extcall 149 ............................. return me.aAttributes[sPart][#clr]
  [ 20] ret
end

on setPartColor me, sPart, oColor, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 185 ............................ <#aAttributes>
  [  4] getparam 1 .............................. <sPart>
  [  6] pusharglist 3 ........................... <me, #aAttributes, sPart>
  [  8] objcall 212 ............................. <me.aAttributes[sPart]>
  [ 10] pushsymb 195 ............................ <#clr>
  [ 12] getparam 2 .............................. <oColor>
  [ 14] pusharglistnoret 3 ...................... <me.aAttributes[sPart], #clr, oColor>
  [ 16] objcall 233 ............................. me.aAttributes[sPart][#clr] = oColor
  [ 18] ret
end

on flipHSpriteRect me, oSprite
  [  0] getparam 1 .............................. <oSprite>
  [  2] getobjprop 162 .......................... <oSprite.rect>
  [  4] setlocal 0 .............................. oOrigSpriteRect = oSprite.rect
  [  6] getlocal 0 .............................. <oOrigSpriteRect>
  [  8] getobjprop 288 .......................... <oOrigSpriteRect.left>
  [ 11] setlocal 1 .............................. iLeft = oOrigSpriteRect.left
  [ 13] getparam 1 .............................. <oSprite>
  [ 15] getobjprop 298 .......................... <oSprite.locH>
  [ 18] setlocal 2 .............................. iLocH = oSprite.locH
  [ 20] getlocal 2 .............................. <iLocH>
  [ 22] getlocal 1 .............................. <iLeft>
  [ 24] sub ..................................... <iLocH - iLeft>
  [ 25] pushint8 2 .............................. <2>
  [ 27] mul ..................................... <(iLocH - iLeft) * 2>
  [ 28] getlocal 0 .............................. <oOrigSpriteRect>
  [ 30] getobjprop 171 .......................... <oOrigSpriteRect.width>
  [ 32] sub ..................................... <((iLocH - iLeft) * 2) - oOrigSpriteRect.width>
  [ 33] setlocal 3 .............................. iHDif = ((iLocH - iLeft) * 2) - oOrigSpriteRect.width
  [ 35] getlocal 3 .............................. <iHDif>
  [ 37] pushzero ................................ <0>
  [ 38] getlocal 3 .............................. <iHDif>
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 4 ........................... <iHDif, 0, iHDif, 0>
  [ 43] extcall 162 ............................. <rect(iHDif, 0, iHDif, 0)>
  [ 45] setlocal 4 .............................. rDifRect = rect(iHDif, 0, iHDif, 0)
  [ 47] getlocal 0 .............................. <oOrigSpriteRect>
  [ 49] getlocal 4 .............................. <rDifRect>
  [ 51] add ..................................... <oOrigSpriteRect + rDifRect>
  [ 52] setlocal 5 .............................. oNewRect = oOrigSpriteRect + rDifRect
  [ 54] getlocal 5 .............................. <oNewRect>
  [ 56] pusharglistnoret 1 ...................... <oNewRect>
  [ 58] extcall 149 ............................. return oNewRect
  [ 60] ret
end

on calcViewRect me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 89 ....................... <me.oPoint>
  [  4] getobjprop 298 .......................... <me.oPoint.locH>
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 334 ...................... <me.oScaledRect>
  [ 12] getobjprop 171 .......................... <me.oScaledRect.width>
  [ 14] pushint8 2 .............................. <2>
  [ 16] div ..................................... <me.oScaledRect.width / 2>
  [ 17] sub ..................................... <me.oPoint.locH - (me.oScaledRect.width / 2)>
  [ 18] setlocal 0 .............................. iLeft = me.oPoint.locH - (me.oScaledRect.width / 2)
  [ 20] getlocal 0 .............................. <iLeft>
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 334 ...................... <me.oScaledRect>
  [ 27] getobjprop 171 .......................... <me.oScaledRect.width>
  [ 29] add ..................................... <iLeft + me.oScaledRect.width>
  [ 30] setlocal 1 .............................. iRight = iLeft + me.oScaledRect.width
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 89 ....................... <me.oPoint>
  [ 36] getobjprop 297 .......................... <me.oPoint.locV>
  [ 39] getparam 0 .............................. <me>
  [ 41] getchainedprop 334 ...................... <me.oScaledRect>
  [ 44] getobjprop 172 .......................... <me.oScaledRect.height>
  [ 46] sub ..................................... <me.oPoint.locV - me.oScaledRect.height>
  [ 47] setlocal 2 .............................. iTop = me.oPoint.locV - me.oScaledRect.height
  [ 49] getparam 0 .............................. <me>
  [ 51] getchainedprop 89 ....................... <me.oPoint>
  [ 53] getobjprop 297 .......................... <me.oPoint.locV>
  [ 56] setlocal 3 .............................. iBottom = me.oPoint.locV
  [ 58] getlocal 0 .............................. <iLeft>
  [ 60] getlocal 2 .............................. <iTop>
  [ 62] getlocal 1 .............................. <iRight>
  [ 64] getlocal 3 .............................. <iBottom>
  [ 66] pusharglist 4 ........................... <iLeft, iTop, iRight, iBottom>
  [ 68] extcall 162 ............................. <rect(iLeft, iTop, iRight, iBottom)>
  [ 70] pusharglistnoret 1 ...................... <rect(iLeft, iTop, iRight, iBottom)>
  [ 72] extcall 149 ............................. return rect(iLeft, iTop, iRight, iBottom)
  [ 74] ret
end

on changeDirection me, iDir
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <iDir>
  [  4] pusharglistnoret 2 ...................... <me, iDir>
  [  6] objcall 40 .............................. me.setDirection(iDir)
  [  8] ret
end

on setDefaultActions me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 3 .............................. <"std">
  [  4] pusharglistnoret 2 ...................... <me, "std">
  [  6] objcall 52 .............................. me.setBodyAction("std")
  [  8] getparam 0 .............................. <me>
  [ 10] pushcons 3 .............................. <"std">
  [ 12] pusharglistnoret 2 ...................... <me, "std">
  [ 14] objcall 69 .............................. me.setFaceAction("std")
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 3 .............................. <"std">
  [ 20] pusharglistnoret 2 ...................... <me, "std">
  [ 22] objcall 63 .............................. me.setItemAction("std")
  [ 24] getparam 0 .............................. <me>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 2 ...................... <me, 0>
  [ 29] objcall 44 .............................. me.setAnimFrame(0)
  [ 31] ret
end

on setBodyAction me, sAction
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sAction>
  [  4] setobjprop 101 .......................... me.sBodyAction = sAction
  [  6] getparam 1 .............................. <sAction>
  [  8] peek 0 .................................. case sAction of
  [ 10] pushcons 3 .............................. <"std">
  [ 12] eq
  [ 13] jmpifz [ 25] ............................ (case) "std":
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 53 .............................. me.stand()
  [ 22] jmp [ 66]
  [ 25] peek 0
  [ 27] pushcons 17 ............................. <"wlk">
  [ 29] eq
  [ 30] jmpifz [ 42] ............................ (case) "wlk":
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 54 .............................. me.walk()
  [ 39] jmp [ 66]
  [ 42] peek 0
  [ 44] pushcons 35 ............................. <"sit">
  [ 46] eq
  [ 47] jmpifz [ 59] ............................ (case) "sit":
  [ 50] getparam 0 .............................. <me>
  [ 52] pusharglistnoret 1 ...................... <me>
  [ 54] objcall 55 .............................. me.sit()
  [ 56] jmp [ 66] ............................... (case) otherwise:
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglistnoret 1 ...................... <me>
  [ 63] objcall 338 ............................. me.resetBody()
  [ 66] pop 1 ................................... end case
  [ 68] getparam 0 .............................. <me>
  [ 70] getparam 0 .............................. <me>
  [ 72] getobjprop 102 .......................... <me.sFaceAction>
  [ 74] pusharglistnoret 2 ...................... <me, me.sFaceAction>
  [ 76] objcall 69 .............................. me.setFaceAction(me.sFaceAction)
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 103 .......................... <me.sItemAction>
  [ 84] pusharglistnoret 2 ...................... <me, me.sItemAction>
  [ 86] objcall 63 .............................. me.setItemAction(me.sItemAction)
  [ 88] getparam 0 .............................. <me>
  [ 90] pushzero ................................ <0>
  [ 91] pusharglistnoret 2 ...................... <me, 0>
  [ 93] objcall 44 .............................. me.setAnimFrame(0)
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] objcall 68 .............................. me.wakeup()
  [101] getparam 0 .............................. <me>
  [103] pusharglistnoret 1 ...................... <me>
  [105] objcall 24 .............................. me.display()
  [107] ret
end

on stand me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 131 ............................ <#bd>
  [  4] pushcons 3 .............................. <"std">
  [  6] pusharglistnoret 3 ...................... <me, #bd, "std">
  [  8] objcall 38 .............................. me.setPartAction(#bd, "std")
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 134 ............................ <#ch>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #ch, "std">
  [ 18] objcall 38 .............................. me.setPartAction(#ch, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] pushsymb 129 ............................ <#lh>
  [ 24] pushcons 3 .............................. <"std">
  [ 26] pusharglistnoret 3 ...................... <me, #lh, "std">
  [ 28] objcall 38 .............................. me.setPartAction(#lh, "std")
  [ 30] getparam 0 .............................. <me>
  [ 32] pushsymb 136 ............................ <#rh>
  [ 34] pushcons 3 .............................. <"std">
  [ 36] pusharglistnoret 3 ...................... <me, #rh, "std">
  [ 38] objcall 38 .............................. me.setPartAction(#rh, "std")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 130 ............................ <#ls>
  [ 44] pushcons 3 .............................. <"std">
  [ 46] pusharglistnoret 3 ...................... <me, #ls, "std">
  [ 48] objcall 38 .............................. me.setPartAction(#ls, "std")
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 137 ............................ <#rs>
  [ 54] pushcons 3 .............................. <"std">
  [ 56] pusharglistnoret 3 ...................... <me, #rs, "std">
  [ 58] objcall 38 .............................. me.setPartAction(#rs, "std")
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 133 ............................ <#lg>
  [ 64] pushcons 3 .............................. <"std">
  [ 66] pusharglistnoret 3 ...................... <me, #lg, "std">
  [ 68] objcall 38 .............................. me.setPartAction(#lg, "std")
  [ 70] getparam 0 .............................. <me>
  [ 72] pushsymb 132 ............................ <#sh>
  [ 74] pushcons 3 .............................. <"std">
  [ 76] pusharglistnoret 3 ...................... <me, #sh, "std">
  [ 78] objcall 38 .............................. me.setPartAction(#sh, "std")
  [ 80] getparam 0 .............................. <me>
  [ 82] pushzero ................................ <0>
  [ 83] pusharglistnoret 2 ...................... <me, 0>
  [ 85] objcall 44 .............................. me.setAnimFrame(0)
  [ 87] getparam 0 .............................. <me>
  [ 89] pushcons 3 .............................. <"std">
  [ 91] setobjprop 101 .......................... me.sBodyAction = "std"
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglistnoret 1 ...................... <me>
  [ 97] objcall 24 .............................. me.display()
  [ 99] ret
end

on walk me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 59 .............................. me.lookStraight(0)
  [  7] getparam 0 .............................. <me>
  [  9] pushsymb 131 ............................ <#bd>
  [ 11] pushcons 17 ............................. <"wlk">
  [ 13] pusharglistnoret 3 ...................... <me, #bd, "wlk">
  [ 15] objcall 38 .............................. me.setPartAction(#bd, "wlk")
  [ 17] getparam 0 .............................. <me>
  [ 19] pushsymb 134 ............................ <#ch>
  [ 21] pushcons 3 .............................. <"std">
  [ 23] pusharglistnoret 3 ...................... <me, #ch, "std">
  [ 25] objcall 38 .............................. me.setPartAction(#ch, "std")
  [ 27] getparam 0 .............................. <me>
  [ 29] pushsymb 129 ............................ <#lh>
  [ 31] pushcons 17 ............................. <"wlk">
  [ 33] pusharglistnoret 3 ...................... <me, #lh, "wlk">
  [ 35] objcall 38 .............................. me.setPartAction(#lh, "wlk")
  [ 37] getparam 0 .............................. <me>
  [ 39] pushsymb 136 ............................ <#rh>
  [ 41] pushcons 17 ............................. <"wlk">
  [ 43] pusharglistnoret 3 ...................... <me, #rh, "wlk">
  [ 45] objcall 38 .............................. me.setPartAction(#rh, "wlk")
  [ 47] getparam 0 .............................. <me>
  [ 49] pushsymb 130 ............................ <#ls>
  [ 51] pushcons 17 ............................. <"wlk">
  [ 53] pusharglistnoret 3 ...................... <me, #ls, "wlk">
  [ 55] objcall 38 .............................. me.setPartAction(#ls, "wlk")
  [ 57] getparam 0 .............................. <me>
  [ 59] pushsymb 137 ............................ <#rs>
  [ 61] pushcons 17 ............................. <"wlk">
  [ 63] pusharglistnoret 3 ...................... <me, #rs, "wlk">
  [ 65] objcall 38 .............................. me.setPartAction(#rs, "wlk")
  [ 67] getparam 0 .............................. <me>
  [ 69] pushsymb 133 ............................ <#lg>
  [ 71] pushcons 17 ............................. <"wlk">
  [ 73] pusharglistnoret 3 ...................... <me, #lg, "wlk">
  [ 75] objcall 38 .............................. me.setPartAction(#lg, "wlk")
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 132 ............................ <#sh>
  [ 81] pushcons 17 ............................. <"wlk">
  [ 83] pusharglistnoret 3 ...................... <me, #sh, "wlk">
  [ 85] objcall 38 .............................. me.setPartAction(#sh, "wlk")
  [ 87] getparam 0 .............................. <me>
  [ 89] pushcons 17 ............................. <"wlk">
  [ 91] setobjprop 101 .......................... me.sBodyAction = "wlk"
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglistnoret 1 ...................... <me>
  [ 97] objcall 24 .............................. me.display()
  [ 99] ret
end

on sit me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 131 ............................ <#bd>
  [  4] pushcons 35 ............................. <"sit">
  [  6] pusharglistnoret 3 ...................... <me, #bd, "sit">
  [  8] objcall 38 .............................. me.setPartAction(#bd, "sit")
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 134 ............................ <#ch>
  [ 14] pushcons 3 .............................. <"std">
  [ 16] pusharglistnoret 3 ...................... <me, #ch, "std">
  [ 18] objcall 38 .............................. me.setPartAction(#ch, "std")
  [ 20] getparam 0 .............................. <me>
  [ 22] pushsymb 129 ............................ <#lh>
  [ 24] pushcons 3 .............................. <"std">
  [ 26] pusharglistnoret 3 ...................... <me, #lh, "std">
  [ 28] objcall 38 .............................. me.setPartAction(#lh, "std")
  [ 30] getparam 0 .............................. <me>
  [ 32] pushsymb 136 ............................ <#rh>
  [ 34] pushcons 3 .............................. <"std">
  [ 36] pusharglistnoret 3 ...................... <me, #rh, "std">
  [ 38] objcall 38 .............................. me.setPartAction(#rh, "std")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 130 ............................ <#ls>
  [ 44] pushcons 3 .............................. <"std">
  [ 46] pusharglistnoret 3 ...................... <me, #ls, "std">
  [ 48] objcall 38 .............................. me.setPartAction(#ls, "std")
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 137 ............................ <#rs>
  [ 54] pushcons 3 .............................. <"std">
  [ 56] pusharglistnoret 3 ...................... <me, #rs, "std">
  [ 58] objcall 38 .............................. me.setPartAction(#rs, "std")
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 133 ............................ <#lg>
  [ 64] pushcons 35 ............................. <"sit">
  [ 66] pusharglistnoret 3 ...................... <me, #lg, "sit">
  [ 68] objcall 38 .............................. me.setPartAction(#lg, "sit")
  [ 70] getparam 0 .............................. <me>
  [ 72] pushsymb 132 ............................ <#sh>
  [ 74] pushcons 35 ............................. <"sit">
  [ 76] pusharglistnoret 3 ...................... <me, #sh, "sit">
  [ 78] objcall 38 .............................. me.setPartAction(#sh, "sit")
  [ 80] getparam 0 .............................. <me>
  [ 82] pushcons 35 ............................. <"sit">
  [ 84] setobjprop 101 .......................... me.sBodyAction = "sit"
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglistnoret 1 ...................... <me>
  [ 90] objcall 24 .............................. me.display()
  [ 92] ret
end

on isWalking me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 101 .......................... <me.sBodyAction>
  [  4] pushcons 17 ............................. <"wlk">
  [  6] eq ...................................... <me.sBodyAction = "wlk">
  [  7] jmpifz [ 19] ............................ if me.sBodyAction = "wlk" then / else
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 149 ............................. return 1
  [ 16] jmp [ 24]
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 149 ............................. return 0
  [ 24] ret
end

on isSitting me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 101 .......................... <me.sBodyAction>
  [  4] pushcons 35 ............................. <"sit">
  [  6] eq ...................................... <me.sBodyAction = "sit">
  [  7] jmpifz [ 19] ............................ if me.sBodyAction = "sit" then / else
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 149 ............................. return 1
  [ 16] jmp [ 24]
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 149 ............................. return 0
  [ 24] ret
end

on dance me, bState
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 59 .............................. me.lookStraight(0)
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <bState>
  [ 11] setobjprop 117 .......................... me.bDance = bState
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 24 .............................. me.display()
  [ 19] ret
end

on lookStraight me, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] getparam 1 .............................. <bDisplay>
  [  5] pusharglistnoret 3 ...................... <me, 0, bDisplay>
  [  7] objcall 62 .............................. me.setLookDirection(0, bDisplay)
  [  9] ret
end

on lookLeft me, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] inv ..................................... <-1>
  [  5] getparam 1 .............................. <bDisplay>
  [  7] pusharglistnoret 3 ...................... <me, -1, bDisplay>
  [  9] objcall 62 .............................. me.setLookDirection(-1, bDisplay)
  [ 11] ret
end

on lookRight me, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushint8 1 .............................. <1>
  [  4] getparam 1 .............................. <bDisplay>
  [  6] pusharglistnoret 3 ...................... <me, 1, bDisplay>
  [  8] objcall 62 .............................. me.setLookDirection(1, bDisplay)
  [ 10] ret
end

on setLookDirection me, iDir, bDisplay
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 222 ............................ <#aRuntimeConfig>
  [  4] pushsymb 138 ............................ <#hd>
  [  6] pusharglist 3 ........................... <me, #aRuntimeConfig, #hd>
  [  8] objcall 190 ............................. <me.aRuntimeConfig[#hd]>
  [ 10] pusharglist 1 ........................... <me.aRuntimeConfig[#hd]>
  [ 12] extcall 85 .............................. <voidp(me.aRuntimeConfig[#hd])>
  [ 14] not ..................................... <not voidp(me.aRuntimeConfig[#hd])>
  [ 15] jmpifz [ 36] ............................ if not voidp(me.aRuntimeConfig[#hd]) then
  [ 18] getparam 0 .............................. <me>
  [ 20] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 22] pushsymb 138 ............................ <#hd>
  [ 24] pusharglist 3 ........................... <me, #aRuntimeConfig, #hd>
  [ 26] objcall 212 ............................. <me.aRuntimeConfig[#hd]>
  [ 28] pushsymb 228 ............................ <#dirOff>
  [ 30] getparam 1 .............................. <iDir>
  [ 32] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#hd], #dirOff, iDir>
  [ 34] objcall 233 ............................. me.aRuntimeConfig[#hd][#dirOff] = iDir
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 40] pushsymb 139 ............................ <#fc>
  [ 42] pusharglist 3 ........................... <me, #aRuntimeConfig, #fc>
  [ 44] objcall 190 ............................. <me.aRuntimeConfig[#fc]>
  [ 46] pusharglist 1 ........................... <me.aRuntimeConfig[#fc]>
  [ 48] extcall 85 .............................. <voidp(me.aRuntimeConfig[#fc])>
  [ 50] not ..................................... <not voidp(me.aRuntimeConfig[#fc])>
  [ 51] jmpifz [ 72] ............................ if not voidp(me.aRuntimeConfig[#fc]) then
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 58] pushsymb 139 ............................ <#fc>
  [ 60] pusharglist 3 ........................... <me, #aRuntimeConfig, #fc>
  [ 62] objcall 212 ............................. <me.aRuntimeConfig[#fc]>
  [ 64] pushsymb 228 ............................ <#dirOff>
  [ 66] getparam 1 .............................. <iDir>
  [ 68] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#fc], #dirOff, iDir>
  [ 70] objcall 233 ............................. me.aRuntimeConfig[#fc][#dirOff] = iDir
  [ 72] getparam 0 .............................. <me>
  [ 74] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 76] pushsymb 140 ............................ <#ey>
  [ 78] pusharglist 3 ........................... <me, #aRuntimeConfig, #ey>
  [ 80] objcall 190 ............................. <me.aRuntimeConfig[#ey]>
  [ 82] pusharglist 1 ........................... <me.aRuntimeConfig[#ey]>
  [ 84] extcall 85 .............................. <voidp(me.aRuntimeConfig[#ey])>
  [ 86] not ..................................... <not voidp(me.aRuntimeConfig[#ey])>
  [ 87] jmpifz [108] ............................ if not voidp(me.aRuntimeConfig[#ey]) then
  [ 90] getparam 0 .............................. <me>
  [ 92] pushsymb 222 ............................ <#aRuntimeConfig>
  [ 94] pushsymb 140 ............................ <#ey>
  [ 96] pusharglist 3 ........................... <me, #aRuntimeConfig, #ey>
  [ 98] objcall 212 ............................. <me.aRuntimeConfig[#ey]>
  [100] pushsymb 228 ............................ <#dirOff>
  [102] getparam 1 .............................. <iDir>
  [104] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#ey], #dirOff, iDir>
  [106] objcall 233 ............................. me.aRuntimeConfig[#ey][#dirOff] = iDir
  [108] getparam 0 .............................. <me>
  [110] pushsymb 222 ............................ <#aRuntimeConfig>
  [112] pushsymb 141 ............................ <#hr>
  [114] pusharglist 3 ........................... <me, #aRuntimeConfig, #hr>
  [116] objcall 190 ............................. <me.aRuntimeConfig[#hr]>
  [118] pusharglist 1 ........................... <me.aRuntimeConfig[#hr]>
  [120] extcall 85 .............................. <voidp(me.aRuntimeConfig[#hr])>
  [122] not ..................................... <not voidp(me.aRuntimeConfig[#hr])>
  [123] jmpifz [144] ............................ if not voidp(me.aRuntimeConfig[#hr]) then
  [126] getparam 0 .............................. <me>
  [128] pushsymb 222 ............................ <#aRuntimeConfig>
  [130] pushsymb 141 ............................ <#hr>
  [132] pusharglist 3 ........................... <me, #aRuntimeConfig, #hr>
  [134] objcall 212 ............................. <me.aRuntimeConfig[#hr]>
  [136] pushsymb 228 ............................ <#dirOff>
  [138] getparam 1 .............................. <iDir>
  [140] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#hr], #dirOff, iDir>
  [142] objcall 233 ............................. me.aRuntimeConfig[#hr][#dirOff] = iDir
  [144] getparam 0 .............................. <me>
  [146] pushsymb 222 ............................ <#aRuntimeConfig>
  [148] pushsymb 142 ............................ <#ht>
  [150] pusharglist 3 ........................... <me, #aRuntimeConfig, #ht>
  [152] objcall 190 ............................. <me.aRuntimeConfig[#ht]>
  [154] pusharglist 1 ........................... <me.aRuntimeConfig[#ht]>
  [156] extcall 85 .............................. <voidp(me.aRuntimeConfig[#ht])>
  [158] not ..................................... <not voidp(me.aRuntimeConfig[#ht])>
  [159] jmpifz [180] ............................ if not voidp(me.aRuntimeConfig[#ht]) then
  [162] getparam 0 .............................. <me>
  [164] pushsymb 222 ............................ <#aRuntimeConfig>
  [166] pushsymb 142 ............................ <#ht>
  [168] pusharglist 3 ........................... <me, #aRuntimeConfig, #ht>
  [170] objcall 212 ............................. <me.aRuntimeConfig[#ht]>
  [172] pushsymb 228 ............................ <#dirOff>
  [174] getparam 1 .............................. <iDir>
  [176] pusharglistnoret 3 ...................... <me.aRuntimeConfig[#ht], #dirOff, iDir>
  [178] objcall 233 ............................. me.aRuntimeConfig[#ht][#dirOff] = iDir
  [180] getparam 2 .............................. <bDisplay>
  [182] pusharglist 1 ........................... <bDisplay>
  [184] extcall 85 .............................. <voidp(bDisplay)>
  [186] getparam 2 .............................. <bDisplay>
  [188] or ...................................... <voidp(bDisplay) or bDisplay>
  [189] jmpifz [198] ............................ if voidp(bDisplay) or bDisplay then
  [192] getparam 0 .............................. <me>
  [194] pusharglistnoret 1 ...................... <me>
  [196] objcall 24 .............................. me.display()
  [198] ret
end

on setItemAction me, sAction
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 103 .......................... <me.sItemAction>
  [  4] pushcons 4 .............................. <EMPTY>
  [  6] nteq .................................... <me.sItemAction <> EMPTY>
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 103 .......................... <me.sItemAction>
  [ 11] getparam 1 .............................. <sAction>
  [ 13] eq ...................................... <me.sItemAction = sAction>
  [ 14] and ..................................... <(me.sItemAction <> EMPTY) and (me.sItemAction = sAction)>
  [ 15] jmpifz [ 22] ............................ if (me.sItemAction <> EMPTY) and (me.sItemAction = sAction) then
  [ 18] pushcons 4 .............................. <EMPTY>
  [ 20] setparam 1 .............................. sAction = EMPTY
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <sAction>
  [ 26] setobjprop 103 .......................... me.sItemAction = sAction
  [ 28] getparam 1 .............................. <sAction>
  [ 30] peek 0 .................................. case sAction of
  [ 32] pushcons 18 ............................. <"crr">
  [ 34] eq
  [ 35] jmpifz [ 53] ............................ (case) "crr":
  [ 38] getparam 0 .............................. <me>
  [ 40] pushint8 1 .............................. <1>
  [ 42] setobjprop 118 .......................... me.bCarry = 1
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglistnoret 1 ...................... <me>
  [ 48] objcall 65 .............................. me.carry()
  [ 50] jmp [ 82]
  [ 53] peek 0
  [ 55] pushcons 33 ............................. <"drk">
  [ 57] eq
  [ 58] jmpifz [ 76] ............................ (case) "drk":
  [ 61] getparam 0 .............................. <me>
  [ 63] pushint8 1 .............................. <1>
  [ 65] setobjprop 121 .......................... me.bDrink = 1
  [ 67] getparam 0 .............................. <me>
  [ 69] pusharglistnoret 1 ...................... <me>
  [ 71] objcall 66 .............................. me.drink()
  [ 73] jmp [ 82] ............................... (case) otherwise:
  [ 76] getparam 0 .............................. <me>
  [ 78] pusharglistnoret 1 ...................... <me>
  [ 80] objcall 64 .............................. me.resetItem()
  [ 82] pop 1 ................................... end case
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 1 ...................... <me>
  [ 88] objcall 68 .............................. me.wakeup()
  [ 90] ret
end

on resetItem me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 14 ............................. <"ri">
  [  4] pushzero ................................ <0>
  [  5] pusharglistnoret 3 ...................... <me, "ri", 0>
  [  7] objcall 34 .............................. me.setPartActive("ri", 0)
  [  9] getparam 0 .............................. <me>
  [ 11] pushzero ................................ <0>
  [ 12] setobjprop 118 .......................... me.bCarry = 0
  [ 14] getparam 0 .............................. <me>
  [ 16] pushzero ................................ <0>
  [ 17] setobjprop 121 .......................... me.bDrink = 0
  [ 19] ret
end

on carry me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 14 ............................. <"ri">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "ri", 1>
  [  8] objcall 34 .............................. me.setPartActive("ri", 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] getmovieprop 105 ........................ <the milliSeconds>
  [ 14] setobjprop 119 .......................... me.iCarryTimer = the milliSeconds
  [ 16] ret
end

on drink me
  [  0] ret
end

on isCarrying me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 118 .......................... <me.bCarry>
  [  4] pusharglistnoret 1 ...................... <me.bCarry>
  [  6] extcall 149 ............................. return me.bCarry
  [  8] ret
end

on wakeup me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 126 .......................... me.bSleep = 0
  [  5] getparam 0 .............................. <me>
  [  7] getmovieprop 105 ........................ <the milliSeconds>
  [  9] setobjprop 127 .......................... me.iSleepTimer = the milliSeconds
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 70 .............................. me.resetFace()
  [ 17] ret
end

on setFaceAction me, sAction, bStartEmoteTimer
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 126 .......................... <me.bSleep>
  [  4] jmpifz [ 13] ............................ if me.bSleep then
  [  7] getparam 0 .............................. <me>
  [  9] pusharglistnoret 1 ...................... <me>
  [ 11] objcall 68 .............................. me.wakeup()
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 1 .............................. <sAction>
  [ 17] setobjprop 102 .......................... me.sFaceAction = sAction
  [ 19] getparam 1 .............................. <sAction>
  [ 21] peek 0 .................................. case sAction of
  [ 23] pushcons 3 .............................. <"std">
  [ 25] eq
  [ 26] jmpifz [ 43] ............................ (case) "std":
  [ 29] getparam 0 .............................. <me>
  [ 31] pusharglistnoret 1 ...................... <me>
  [ 33] objcall 70 .............................. me.resetFace()
  [ 35] getparam 0 .............................. <me>
  [ 37] pushzero ................................ <0>
  [ 38] setobjprop 114 .......................... me.bEmote = 0
  [ 40] jmp [163]
  [ 43] peek 0
  [ 45] pushcons 36 ............................. <"spk">
  [ 47] eq
  [ 48] jmpifz [ 60] ............................ (case) "spk":
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglistnoret 1 ...................... <me>
  [ 55] objcall 71 .............................. me.speak()
  [ 57] jmp [163]
  [ 60] peek 0
  [ 62] pushcons 37 ............................. <"sml">
  [ 64] eq
  [ 65] jmpifz [ 83] ............................ (case) "sml":
  [ 68] getparam 0 .............................. <me>
  [ 70] pusharglistnoret 1 ...................... <me>
  [ 72] objcall 72 .............................. me.smile()
  [ 74] getparam 0 .............................. <me>
  [ 76] pushint8 1 .............................. <1>
  [ 78] setobjprop 114 .......................... me.bEmote = 1
  [ 80] jmp [163]
  [ 83] peek 0
  [ 85] pushcons 38 ............................. <"agr">
  [ 87] eq
  [ 88] jmpifz [106] ............................ (case) "agr":
  [ 91] getparam 0 .............................. <me>
  [ 93] pusharglistnoret 1 ...................... <me>
  [ 95] objcall 73 .............................. me.angry()
  [ 97] getparam 0 .............................. <me>
  [ 99] pushint8 1 .............................. <1>
  [101] setobjprop 114 .......................... me.bEmote = 1
  [103] jmp [163]
  [106] peek 0
  [108] pushcons 39 ............................. <"sad">
  [110] eq
  [111] jmpifz [129] ............................ (case) "sad":
  [114] getparam 0 .............................. <me>
  [116] pusharglistnoret 1 ...................... <me>
  [118] objcall 74 .............................. me.sad()
  [120] getparam 0 .............................. <me>
  [122] pushint8 1 .............................. <1>
  [124] setobjprop 114 .......................... me.bEmote = 1
  [126] jmp [163]
  [129] peek 0
  [131] pushcons 40 ............................. <"srp">
  [133] eq
  [134] jmpifz [152] ............................ (case) "srp":
  [137] getparam 0 .............................. <me>
  [139] pusharglistnoret 1 ...................... <me>
  [141] objcall 75 .............................. me.surprised()
  [143] getparam 0 .............................. <me>
  [145] pushint8 1 .............................. <1>
  [147] setobjprop 114 .......................... me.bEmote = 1
  [149] jmp [163] ............................... (case) otherwise:
  [152] getparam 0 .............................. <me>
  [154] pusharglistnoret 1 ...................... <me>
  [156] objcall 70 .............................. me.resetFace()
  [158] getparam 0 .............................. <me>
  [160] pushzero ................................ <0>
  [161] setobjprop 114 .......................... me.bEmote = 0
  [163] pop 1 ................................... end case
  [165] getparam 0 .............................. <me>
  [167] getobjprop 114 .......................... <me.bEmote>
  [169] jmpifz [190] ............................ if me.bEmote then
  [172] getparam 2 .............................. <bStartEmoteTimer>
  [174] pusharglist 1 ........................... <bStartEmoteTimer>
  [176] extcall 85 .............................. <voidp(bStartEmoteTimer)>
  [178] getparam 2 .............................. <bStartEmoteTimer>
  [180] or ...................................... <voidp(bStartEmoteTimer) or bStartEmoteTimer>
  [181] jmpifz [190] ............................ if voidp(bStartEmoteTimer) or bStartEmoteTimer then
  [184] getparam 0 .............................. <me>
  [186] getmovieprop 105 ........................ <the milliSeconds>
  [188] setobjprop 115 .......................... me.iEmoteTimer = the milliSeconds
  [190] ret
end

on resetFace me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 113 .......................... <me.bChatting>
  [  4] not ..................................... <not me.bChatting>
  [  5] jmpifz [ 18] ............................ if not me.bChatting then
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 138 ............................ <#hd>
  [ 12] pushcons 3 .............................. <"std">
  [ 14] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 16] objcall 38 .............................. me.setPartAction(#hd, "std")
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 113 .......................... <me.bChatting>
  [ 22] not ..................................... <not me.bChatting>
  [ 23] jmpifz [ 36] ............................ if not me.bChatting then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 139 ............................ <#fc>
  [ 30] pushcons 3 .............................. <"std">
  [ 32] pusharglistnoret 3 ...................... <me, #fc, "std">
  [ 34] objcall 38 .............................. me.setPartAction(#fc, "std")
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 140 ............................ <#ey>
  [ 40] pushcons 3 .............................. <"std">
  [ 42] pusharglistnoret 3 ...................... <me, #ey, "std">
  [ 44] objcall 38 .............................. me.setPartAction(#ey, "std")
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 113 .......................... <me.bChatting>
  [ 50] not ..................................... <not me.bChatting>
  [ 51] jmpifz [ 64] ............................ if not me.bChatting then
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 141 ............................ <#hr>
  [ 58] pushcons 3 .............................. <"std">
  [ 60] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 62] objcall 38 .............................. me.setPartAction(#hr, "std")
  [ 64] ret
end

on speak me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 140 ............................ <#ey>
  [  4] pushcons 3 .............................. <"std">
  [  6] pusharglistnoret 3 ...................... <me, #ey, "std">
  [  8] objcall 38 .............................. me.setPartAction(#ey, "std")
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 138 ............................ <#hd>
  [ 14] pushcons 36 ............................. <"spk">
  [ 16] pusharglistnoret 3 ...................... <me, #hd, "spk">
  [ 18] objcall 38 .............................. me.setPartAction(#hd, "spk")
  [ 20] getparam 0 .............................. <me>
  [ 22] pushsymb 139 ............................ <#fc>
  [ 24] pushcons 36 ............................. <"spk">
  [ 26] pusharglistnoret 3 ...................... <me, #fc, "spk">
  [ 28] objcall 38 .............................. me.setPartAction(#fc, "spk")
  [ 30] getparam 0 .............................. <me>
  [ 32] pushsymb 141 ............................ <#hr>
  [ 34] pushcons 36 ............................. <"spk">
  [ 36] pusharglistnoret 3 ...................... <me, #hr, "spk">
  [ 38] objcall 38 .............................. me.setPartAction(#hr, "spk")
  [ 40] ret
end

on smile me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 113 .......................... <me.bChatting>
  [  4] not ..................................... <not me.bChatting>
  [  5] jmpifz [ 18] ............................ if not me.bChatting then
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 138 ............................ <#hd>
  [ 12] pushcons 3 .............................. <"std">
  [ 14] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 16] objcall 38 .............................. me.setPartAction(#hd, "std")
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 113 .......................... <me.bChatting>
  [ 22] not ..................................... <not me.bChatting>
  [ 23] jmpifz [ 36] ............................ if not me.bChatting then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 139 ............................ <#fc>
  [ 30] pushcons 37 ............................. <"sml">
  [ 32] pusharglistnoret 3 ...................... <me, #fc, "sml">
  [ 34] objcall 38 .............................. me.setPartAction(#fc, "sml")
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 140 ............................ <#ey>
  [ 40] pushcons 37 ............................. <"sml">
  [ 42] pusharglistnoret 3 ...................... <me, #ey, "sml">
  [ 44] objcall 38 .............................. me.setPartAction(#ey, "sml")
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 113 .......................... <me.bChatting>
  [ 50] not ..................................... <not me.bChatting>
  [ 51] jmpifz [ 64] ............................ if not me.bChatting then
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 141 ............................ <#hr>
  [ 58] pushcons 3 .............................. <"std">
  [ 60] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 62] objcall 38 .............................. me.setPartAction(#hr, "std")
  [ 64] ret
end

on angry me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 113 .......................... <me.bChatting>
  [  4] not ..................................... <not me.bChatting>
  [  5] jmpifz [ 18] ............................ if not me.bChatting then
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 138 ............................ <#hd>
  [ 12] pushcons 3 .............................. <"std">
  [ 14] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 16] objcall 38 .............................. me.setPartAction(#hd, "std")
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 113 .......................... <me.bChatting>
  [ 22] not ..................................... <not me.bChatting>
  [ 23] jmpifz [ 36] ............................ if not me.bChatting then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 139 ............................ <#fc>
  [ 30] pushcons 38 ............................. <"agr">
  [ 32] pusharglistnoret 3 ...................... <me, #fc, "agr">
  [ 34] objcall 38 .............................. me.setPartAction(#fc, "agr")
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 140 ............................ <#ey>
  [ 40] pushcons 38 ............................. <"agr">
  [ 42] pusharglistnoret 3 ...................... <me, #ey, "agr">
  [ 44] objcall 38 .............................. me.setPartAction(#ey, "agr")
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 113 .......................... <me.bChatting>
  [ 50] not ..................................... <not me.bChatting>
  [ 51] jmpifz [ 64] ............................ if not me.bChatting then
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 141 ............................ <#hr>
  [ 58] pushcons 3 .............................. <"std">
  [ 60] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 62] objcall 38 .............................. me.setPartAction(#hr, "std")
  [ 64] ret
end

on sad me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 113 .......................... <me.bChatting>
  [  4] not ..................................... <not me.bChatting>
  [  5] jmpifz [ 18] ............................ if not me.bChatting then
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 138 ............................ <#hd>
  [ 12] pushcons 3 .............................. <"std">
  [ 14] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 16] objcall 38 .............................. me.setPartAction(#hd, "std")
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 113 .......................... <me.bChatting>
  [ 22] not ..................................... <not me.bChatting>
  [ 23] jmpifz [ 36] ............................ if not me.bChatting then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 139 ............................ <#fc>
  [ 30] pushcons 39 ............................. <"sad">
  [ 32] pusharglistnoret 3 ...................... <me, #fc, "sad">
  [ 34] objcall 38 .............................. me.setPartAction(#fc, "sad")
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 140 ............................ <#ey>
  [ 40] pushcons 39 ............................. <"sad">
  [ 42] pusharglistnoret 3 ...................... <me, #ey, "sad">
  [ 44] objcall 38 .............................. me.setPartAction(#ey, "sad")
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 113 .......................... <me.bChatting>
  [ 50] not ..................................... <not me.bChatting>
  [ 51] jmpifz [ 64] ............................ if not me.bChatting then
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 141 ............................ <#hr>
  [ 58] pushcons 3 .............................. <"std">
  [ 60] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 62] objcall 38 .............................. me.setPartAction(#hr, "std")
  [ 64] ret
end

on surprised me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 113 .......................... <me.bChatting>
  [  4] not ..................................... <not me.bChatting>
  [  5] jmpifz [ 18] ............................ if not me.bChatting then
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 138 ............................ <#hd>
  [ 12] pushcons 3 .............................. <"std">
  [ 14] pusharglistnoret 3 ...................... <me, #hd, "std">
  [ 16] objcall 38 .............................. me.setPartAction(#hd, "std")
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 113 .......................... <me.bChatting>
  [ 22] not ..................................... <not me.bChatting>
  [ 23] jmpifz [ 36] ............................ if not me.bChatting then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushsymb 139 ............................ <#fc>
  [ 30] pushcons 40 ............................. <"srp">
  [ 32] pusharglistnoret 3 ...................... <me, #fc, "srp">
  [ 34] objcall 38 .............................. me.setPartAction(#fc, "srp")
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 140 ............................ <#ey>
  [ 40] pushcons 40 ............................. <"srp">
  [ 42] pusharglistnoret 3 ...................... <me, #ey, "srp">
  [ 44] objcall 38 .............................. me.setPartAction(#ey, "srp")
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 113 .......................... <me.bChatting>
  [ 50] not ..................................... <not me.bChatting>
  [ 51] jmpifz [ 64] ............................ if not me.bChatting then
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 141 ............................ <#hr>
  [ 58] pushcons 3 .............................. <"std">
  [ 60] pusharglistnoret 3 ...................... <me, #hr, "std">
  [ 62] objcall 38 .............................. me.setPartAction(#hr, "std")
  [ 64] ret
end

on chat me, sString
  [  0] getparam 1 .............................. <sString>
  [  2] pusharglist 1 ........................... <sString>
  [  4] extcall 85 .............................. <voidp(sString)>
  [  6] getparam 1 .............................. <sString>
  [  8] pushcons 4 .............................. <EMPTY>
  [ 10] eq ...................................... <sString = EMPTY>
  [ 11] or ...................................... <voidp(sString) or (sString = EMPTY)>
  [ 12] jmpifz [ 19] ............................ if voidp(sString) or (sString = EMPTY) then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 149 ............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <sString>
  [ 23] getobjprop 341 .......................... <sString.length>
  [ 26] pushint8 100 ............................ <100>
  [ 28] mul ..................................... <sString.length * 100>
  [ 29] setobjprop 112 .......................... me.iChatTimerLength = sString.length * 100
  [ 31] getparam 0 .............................. <me>
  [ 33] getmovieprop 105 ........................ <the milliSeconds>
  [ 35] setobjprop 111 .......................... me.iChatTimer = the milliSeconds
  [ 37] getparam 0 .............................. <me>
  [ 39] pushint8 1 .............................. <1>
  [ 41] setobjprop 113 .......................... me.bChatting = 1
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglistnoret 1 ...................... <me>
  [ 47] objcall 71 .............................. me.speak()
  [ 49] ret
end

on setDepth me, iDepth, iShadowDepth
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 157 .......................... <me.iImageSprite>
  [  4] pusharglist 1 ........................... <me.iImageSprite>
  [  6] extcall 85 .............................. <voidp(me.iImageSprite)>
  [  8] jmpifz [ 15] ............................ if voidp(me.iImageSprite) then
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 149 ............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 157 .......................... <me.iImageSprite>
  [ 19] pusharglist 1 ........................... <me.iImageSprite>
  [ 21] extcall 179 ............................. <sprite(me.iImageSprite)>
  [ 23] getparam 1 .............................. <iDepth>
  [ 25] pushint8 1 .............................. <1>
  [ 27] add ..................................... <iDepth + 1>
  [ 28] setobjprop 342 .......................... sprite(me.iImageSprite).locZ = iDepth + 1
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 158 .......................... <me.iShadowSprite>
  [ 35] pusharglist 1 ........................... <me.iShadowSprite>
  [ 37] extcall 85 .............................. <voidp(me.iShadowSprite)>
  [ 39] jmpifz [ 46] ............................ if voidp(me.iShadowSprite) then
  [ 42] pusharglistnoret 0 ...................... <>
  [ 44] extcall 149 ............................. return 
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 158 .......................... <me.iShadowSprite>
  [ 50] pusharglist 1 ........................... <me.iShadowSprite>
  [ 52] extcall 179 ............................. <sprite(me.iShadowSprite)>
  [ 54] getparam 2 .............................. <iShadowDepth>
  [ 56] setobjprop 342 .......................... sprite(me.iShadowSprite).locZ = iShadowDepth
  [ 59] ret
end

on setHeightOffset me, _iHeightOffset
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iHeightOffset>
  [  4] setobjprop 145 .......................... me.iHeightOffset = _iHeightOffset
  [  6] ret
end

on getHeightOffset me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 145 .......................... <me.iHeightOffset>
  [  4] pusharglistnoret 1 ...................... <me.iHeightOffset>
  [  6] extcall 149 ............................. return me.iHeightOffset
  [  8] ret
end
