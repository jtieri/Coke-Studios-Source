property spriteNum, getPDLError, myCharacters, myCase, myCaseChange, myAllowRETURN, myBeepMode, myMember, myMemberType, myLowercaseAccents, myUPPERCASEAccents

on getBehaviorDescription me
  [  0] pushcons 0 .............................. <"FILTER INPUT CHARACTERS">
  [  2] pushcons 1 .............................. <RETURN>
  [  4] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN>
  [  5] pushcons 1 .............................. <RETURN>
  [  7] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN>
  [  8] pushcons 2 .............................. <"Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account).">
  [ 10] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account).">
  [ 11] pushcons 1 .............................. <RETURN>
  [ 13] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN>
  [ 14] pushcons 1 .............................. <RETURN>
  [ 16] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN>
  [ 17] pushcons 3 .............................. <"This behavior can also be used to force the case of input characters. ">
  [ 19] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. ">
  [ 20] pushcons 4 .............................. <"It can handle all standard accents... ">
  [ 22] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... ">
  [ 23] pushcons 5 .............................. <"if the font you are using can display them.">
  [ 25] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them.">
  [ 26] pushcons 1 .............................. <RETURN>
  [ 28] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN>
  [ 29] pushcons 1 .............................. <RETURN>
  [ 31] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN>
  [ 32] pushcons 6 .............................. <"The option to 'correct case automatically' can be used to override the Caps Lock.">
  [ 34] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock.">
  [ 35] pushcons 1 .............................. <RETURN>
  [ 37] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN>
  [ 38] pushcons 1 .............................. <RETURN>
  [ 40] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN>
  [ 41] pushcons 7 .............................. <"You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option).">
  [ 43] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option).">
  [ 44] pushcons 1 .............................. <RETURN>
  [ 46] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN>
  [ 47] pushcons 1 .............................. <RETURN>
  [ 49] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN>
  [ 50] pushcons 8 .............................. <"PERMITTED MEMBER TYPES:">
  [ 52] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:">
  [ 53] pushcons 1 .............................. <RETURN>
  [ 55] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN>
  [ 56] pushcons 9 .............................. <"Field and Text members">
  [ 58] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members">
  [ 59] pushcons 1 .............................. <RETURN>
  [ 61] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN>
  [ 62] pushcons 1 .............................. <RETURN>
  [ 64] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN>
  [ 65] pushcons 10 ............................. <"PARAMETERS:">
  [ 67] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:">
  [ 68] pushcons 1 .............................. <RETURN>
  [ 70] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN>
  [ 71] pushcons 11 ............................. <"* Accepted characters">
  [ 73] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters">
  [ 74] pushcons 1 .............................. <RETURN>
  [ 76] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN>
  [ 77] pushcons 12 ............................. <"* Correct case automatically? (TRUE | FALSE)">
  [ 79] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)">
  [ 80] pushcons 1 .............................. <RETURN>
  [ 82] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)" & RETURN>
  [ 83] pushcons 13 ............................. <"* Allow RETURN and ENTER characters?">
  [ 85] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)" & RETURN & "* Allow RETURN and ENTER characters?">
  [ 86] pushcons 1 .............................. <RETURN>
  [ 88] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)" & RETURN & "* Allow RETURN and ENTER characters?" & RETURN>
  [ 89] pushcons 14 ............................. <"* Beep if input character is invalid? (TRUE | FALSE)">
  [ 91] joinstr ................................. <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)" & RETURN & "* Allow RETURN and ENTER characters?" & RETURN & "* Beep if input character is invalid? (TRUE | FALSE)">
  [ 92] pusharglistnoret 1 ...................... <"FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)" & RETURN & "* Allow RETURN and ENTER characters?" & RETURN & "* Beep if input character is invalid? (TRUE | FALSE)">
  [ 94] extcall 78 .............................. return "FILTER INPUT CHARACTERS" & RETURN & RETURN & "Enter the appropriate characters in the Behavior Parameters dialog (Don't forget to take the space character into account)." & RETURN & RETURN & "This behavior can also be used to force the case of input characters. " & "It can handle all standard accents... " & "if the font you are using can display them." & RETURN & RETURN & "The option to 'correct case automatically' can be used to override the Caps Lock." & RETURN & RETURN & "You can choose to convert letters automatically to either upper or lower case, or you can accept a mix of upper and lower case characters and limit input to those particular letters in that particular case (select the 'case as entered' option)." & RETURN & RETURN & "PERMITTED MEMBER TYPES:" & RETURN & "Field and Text members" & RETURN & RETURN & "PARAMETERS:" & RETURN & "* Accepted characters" & RETURN & "* Correct case automatically? (TRUE | FALSE)" & RETURN & "* Allow RETURN and ENTER characters?" & RETURN & "* Beep if input character is invalid? (TRUE | FALSE)"
  [ 96] ret
end

on getBehaviorTooltip me
  [  0] pushcons 15 ............................. <"Use with Field and Text members.">
  [  2] pushcons 1 .............................. <RETURN>
  [  4] joinstr ................................. <"Use with Field and Text members." & RETURN>
  [  5] pushcons 1 .............................. <RETURN>
  [  7] joinstr ................................. <"Use with Field and Text members." & RETURN & RETURN>
  [  8] pushcons 16 ............................. <"Limit the characters that the user can type into a Text or Field member. ">
  [ 10] joinstr ................................. <"Use with Field and Text members." & RETURN & RETURN & "Limit the characters that the user can type into a Text or Field member. ">
  [ 11] pushcons 17 ............................. <"Invalid characters do not appear (a system beep may be provoked instead). ">
  [ 13] joinstr ................................. <"Use with Field and Text members." & RETURN & RETURN & "Limit the characters that the user can type into a Text or Field member. " & "Invalid characters do not appear (a system beep may be provoked instead). ">
  [ 14] pushcons 18 ............................. <"Option: automatically convert accepted characters to the chosen case.">
  [ 16] joinstr ................................. <"Use with Field and Text members." & RETURN & RETURN & "Limit the characters that the user can type into a Text or Field member. " & "Invalid characters do not appear (a system beep may be provoked instead). " & "Option: automatically convert accepted characters to the chosen case.">
  [ 17] pusharglistnoret 1 ...................... <"Use with Field and Text members." & RETURN & RETURN & "Limit the characters that the user can type into a Text or Field member. " & "Invalid characters do not appear (a system beep may be provoked instead). " & "Option: automatically convert accepted characters to the chosen case.">
  [ 19] extcall 78 .............................. return "Use with Field and Text members." & RETURN & RETURN & "Limit the characters that the user can type into a Text or Field member. " & "Invalid characters do not appear (a system beep may be provoked instead). " & "Option: automatically convert accepted characters to the chosen case."
  [ 21] ret
end

on resolve prop
  [  0] getparam 0 .............................. <prop>
  [  2] peek 0 .................................. case prop of
  [  4] getprop 644 ............................. <myAllowRETURN>
  [  7] eq
  [  8] jmpifz [ 34] ............................ (case) myAllowRETURN:
  [ 11] pushcons 19 ............................. <"yes">
  [ 13] pushcons 20 ............................. <"no">
  [ 15] pusharglist 2 ........................... <["yes", "no"]>
  [ 17] pushlist ................................ <["yes", "no"]>
  [ 18] setlocal 0 .............................. choiceslist = ["yes", "no"]
  [ 20] pushsymb 645 ............................ <#Yes>
  [ 23] pushsymb 646 ............................ <#No>
  [ 26] pusharglist 2 ........................... <[#Yes, #No]>
  [ 28] pushlist ................................ <[#Yes, #No]>
  [ 29] setlocal 1 .............................. lookup = [#Yes, #No]
  [ 31] jmp [ 39] ............................... (case) otherwise:
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 306 ............................. nothing()
  [ 39] pop 1 ................................... end case
  [ 41] getlocal 1 .............................. <lookup>
  [ 43] getlocal 0 .............................. <choiceslist>
  [ 45] getparam 0 .............................. <prop>
  [ 47] pusharglist 2 ........................... <choiceslist, prop>
  [ 49] extcall 647 ............................. <findPos(choiceslist, prop)>
  [ 52] pusharglist 2 ........................... <lookup, findPos(choiceslist, prop)>
  [ 54] objcall 95 .............................. <lookup[findPos(choiceslist, prop)]>
  [ 56] pusharglistnoret 1 ...................... <lookup[findPos(choiceslist, prop)]>
  [ 58] extcall 78 .............................. return lookup[findPos(choiceslist, prop)]
  [ 60] ret
end

on beginSprite me
  [  0] getprop 644 ............................. <myAllowRETURN>
  [  3] pusharglist 1 ........................... <myAllowRETURN>
  [  5] localcall 2 ............................. <resolve(myAllowRETURN)>
  [  7] setprop 644 ............................. myAllowRETURN = resolve(myAllowRETURN)
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglistnoret 1 ...................... <me>
  [ 14] localcall 5 ............................. Initialize(me)
  [ 16] ret
end

on keyDown me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] localcall 6 ............................. Filter(me)
  [  6] ret
end

on Initialize me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 429 .......................... <me.spriteNum>
  [  5] pusharglist 1 ........................... <me.spriteNum>
  [  7] extcall 177 ............................. <sprite(me.spriteNum)>
  [  9] getobjprop 101 .......................... <sprite(me.spriteNum).member>
  [ 11] setprop 205 ............................. myMember = sprite(me.spriteNum).member
  [ 13] getprop 644 ............................. <myAllowRETURN>
  [ 16] peek 0 .................................. case myAllowRETURN of
  [ 18] pushsymb 645 ............................ <#Yes>
  [ 21] eq
  [ 22] jmpifz [ 35] ............................ (case) #Yes:
  [ 25] pushcons 1 .............................. <RETURN>
  [ 27] pushcons 21 ............................. <ENTER>
  [ 29] joinstr ................................. <RETURN & ENTER>
  [ 30] pushvarref 651 .......................... <myCharacters>
  [ 33] put 35 .................................. put RETURN & ENTER after myCharacters
  [ 35] pop 1
  [ 37] getmovieprop 652 ........................ <the platform>
  [ 40] pushcons 22 ............................. <"Macintosh">
  [ 42] containsstr ............................. <the platform contains "Macintosh">
  [ 43] jmpifz [173] ............................ if the platform contains "Macintosh" then / else
  [ 46] pushcons 23 ............................. <"\xC1">
  [ 48] pushcons 24 ............................. <"\xC0">
  [ 50] pushcons 25 ............................. <"\xC2">
  [ 52] pushcons 26 ............................. <"\xC4">
  [ 54] pushcons 27 ............................. <"\xC3">
  [ 56] pushcons 28 ............................. <"\xC5">
  [ 58] pushcons 29 ............................. <"\xC7">
  [ 60] pushcons 30 ............................. <"\xC9">
  [ 62] pushcons 31 ............................. <"\xC8">
  [ 64] pushcons 32 ............................. <"\xCA">
  [ 66] pushcons 33 ............................. <"\xCB">
  [ 68] pushcons 34 ............................. <"\xCD">
  [ 70] pushcons 35 ............................. <"\xCC">
  [ 72] pushcons 36 ............................. <"\xCE">
  [ 74] pushcons 37 ............................. <"\xCF">
  [ 76] pushcons 38 ............................. <"\xD1">
  [ 78] pushcons 39 ............................. <"\xD3">
  [ 80] pushcons 40 ............................. <"\xD2">
  [ 82] pushcons 41 ............................. <"\xD4">
  [ 84] pushcons 42 ............................. <"\xD6">
  [ 86] pushcons 43 ............................. <"\xD5">
  [ 88] pushcons 44 ............................. <"\xDA">
  [ 90] pushcons 45 ............................. <"\xD9">
  [ 92] pushcons 46 ............................. <"\xDB">
  [ 94] pushcons 47 ............................. <"\xDC">
  [ 96] pushcons 48 ............................. <"\xC6">
  [ 98] pushcons 49 ............................. <"\xD8">
  [100] pushcons 50 ............................. <"\x9F">
  [102] pusharglist 28 .......................... <["\xC1", "\xC0", "\xC2", "\xC4", "\xC3", "\xC5", "\xC7", "\xC9", "\xC8", "\xCA", "\xCB", "\xCD", "\xCC", "\xCE", "\xCF", "\xD1", "\xD3", "\xD2", "\xD4", "\xD6", "\xD5", "\xDA", "\xD9", "\xDB", "\xDC", "\xC6", "\xD8", "\x9F"]>
  [104] pushlist ................................ <["\xC1", "\xC0", "\xC2", "\xC4", "\xC3", "\xC5", "\xC7", "\xC9", "\xC8", "\xCA", "\xCB", "\xCD", "\xCC", "\xCE", "\xCF", "\xD1", "\xD3", "\xD2", "\xD4", "\xD6", "\xD5", "\xDA", "\xD9", "\xDB", "\xDC", "\xC6", "\xD8", "\x9F"]>
  [105] setprop 653 ............................. myUPPERCASEAccents = ["\xC1", "\xC0", "\xC2", "\xC4", "\xC3", "\xC5", "\xC7", "\xC9", "\xC8", "\xCA", "\xCB", "\xCD", "\xCC", "\xCE", "\xCF", "\xD1", "\xD3", "\xD2", "\xD4", "\xD6", "\xD5", "\xDA", "\xD9", "\xDB", "\xDC", "\xC6", "\xD8", "\x9F"]
  [108] pushcons 51 ............................. <"\xE1">
  [110] pushcons 52 ............................. <"\xE0">
  [112] pushcons 53 ............................. <"\xE2">
  [114] pushcons 54 ............................. <"\xE4">
  [116] pushcons 55 ............................. <"\xE3">
  [118] pushcons 56 ............................. <"\xE5">
  [120] pushcons 57 ............................. <"\xE7">
  [122] pushcons 58 ............................. <"\xE9">
  [124] pushcons 59 ............................. <"\xE8">
  [126] pushcons 60 ............................. <"\xEA">
  [128] pushcons 61 ............................. <"\xEB">
  [130] pushcons 62 ............................. <"\xED">
  [132] pushcons 63 ............................. <"\xEC">
  [134] pushcons 64 ............................. <"\xEE">
  [136] pushcons 65 ............................. <"\xEF">
  [138] pushcons 66 ............................. <"\xF1">
  [140] pushcons 67 ............................. <"\xF3">
  [142] pushcons 68 ............................. <"\xF2">
  [144] pushcons 69 ............................. <"\xF4">
  [146] pushcons 70 ............................. <"\xF6">
  [148] pushcons 71 ............................. <"\xF5">
  [150] pushcons 72 ............................. <"\xFA">
  [152] pushcons 73 ............................. <"\xF9">
  [154] pushcons 74 ............................. <"\xFB">
  [156] pushcons 75 ............................. <"\xFC">
  [158] pushcons 76 ............................. <"\xE6">
  [160] pushcons 77 ............................. <"\xF8">
  [162] pushcons 78 ............................. <"\xFF">
  [164] pusharglist 28 .......................... <["\xE1", "\xE0", "\xE2", "\xE4", "\xE3", "\xE5", "\xE7", "\xE9", "\xE8", "\xEA", "\xEB", "\xED", "\xEC", "\xEE", "\xEF", "\xF1", "\xF3", "\xF2", "\xF4", "\xF6", "\xF5", "\xFA", "\xF9", "\xFB", "\xFC", "\xE6", "\xF8", "\xFF"]>
  [166] pushlist ................................ <["\xE1", "\xE0", "\xE2", "\xE4", "\xE3", "\xE5", "\xE7", "\xE9", "\xE8", "\xEA", "\xEB", "\xED", "\xEC", "\xEE", "\xEF", "\xF1", "\xF3", "\xF2", "\xF4", "\xF6", "\xF5", "\xFA", "\xF9", "\xFB", "\xFC", "\xE6", "\xF8", "\xFF"]>
  [167] setprop 654 ............................. myLowercaseAccents = ["\xE1", "\xE0", "\xE2", "\xE4", "\xE3", "\xE5", "\xE7", "\xE9", "\xE8", "\xEA", "\xEB", "\xED", "\xEC", "\xEE", "\xEF", "\xF1", "\xF3", "\xF2", "\xF4", "\xF6", "\xF5", "\xFA", "\xF9", "\xFB", "\xFC", "\xE6", "\xF8", "\xFF"]
  [170] jmp [306]
  [173] getmovieprop 652 ........................ <the platform>
  [176] pushcons 79 ............................. <"Windows">
  [178] containsstr ............................. <the platform contains "Windows">
  [179] jmpifz [306] ............................ if the platform contains "Windows" then
  [182] pushcons 23 ............................. <"\xC1">
  [184] pushcons 24 ............................. <"\xC0">
  [186] pushcons 25 ............................. <"\xC2">
  [188] pushcons 26 ............................. <"\xC4">
  [190] pushcons 27 ............................. <"\xC3">
  [192] pushcons 28 ............................. <"\xC5">
  [194] pushcons 29 ............................. <"\xC7">
  [196] pushcons 30 ............................. <"\xC9">
  [198] pushcons 31 ............................. <"\xC8">
  [200] pushcons 32 ............................. <"\xCA">
  [202] pushcons 33 ............................. <"\xCB">
  [204] pushcons 34 ............................. <"\xCD">
  [206] pushcons 35 ............................. <"\xCC">
  [208] pushcons 36 ............................. <"\xCE">
  [210] pushcons 37 ............................. <"\xCF">
  [212] pushcons 38 ............................. <"\xD1">
  [214] pushcons 39 ............................. <"\xD3">
  [216] pushcons 40 ............................. <"\xD2">
  [218] pushcons 41 ............................. <"\xD4">
  [220] pushcons 42 ............................. <"\xD6">
  [222] pushcons 43 ............................. <"\xD5">
  [224] pushcons 44 ............................. <"\xDA">
  [226] pushcons 45 ............................. <"\xD9">
  [228] pushcons 46 ............................. <"\xDB">
  [230] pushcons 47 ............................. <"\xDC">
  [232] pushcons 48 ............................. <"\xC6">
  [234] pushcons 49 ............................. <"\xD8">
  [236] pushcons 50 ............................. <"\x9F">
  [238] pusharglist 28 .......................... <["\xC1", "\xC0", "\xC2", "\xC4", "\xC3", "\xC5", "\xC7", "\xC9", "\xC8", "\xCA", "\xCB", "\xCD", "\xCC", "\xCE", "\xCF", "\xD1", "\xD3", "\xD2", "\xD4", "\xD6", "\xD5", "\xDA", "\xD9", "\xDB", "\xDC", "\xC6", "\xD8", "\x9F"]>
  [240] pushlist ................................ <["\xC1", "\xC0", "\xC2", "\xC4", "\xC3", "\xC5", "\xC7", "\xC9", "\xC8", "\xCA", "\xCB", "\xCD", "\xCC", "\xCE", "\xCF", "\xD1", "\xD3", "\xD2", "\xD4", "\xD6", "\xD5", "\xDA", "\xD9", "\xDB", "\xDC", "\xC6", "\xD8", "\x9F"]>
  [241] setprop 653 ............................. myUPPERCASEAccents = ["\xC1", "\xC0", "\xC2", "\xC4", "\xC3", "\xC5", "\xC7", "\xC9", "\xC8", "\xCA", "\xCB", "\xCD", "\xCC", "\xCE", "\xCF", "\xD1", "\xD3", "\xD2", "\xD4", "\xD6", "\xD5", "\xDA", "\xD9", "\xDB", "\xDC", "\xC6", "\xD8", "\x9F"]
  [244] pushcons 51 ............................. <"\xE1">
  [246] pushcons 52 ............................. <"\xE0">
  [248] pushcons 53 ............................. <"\xE2">
  [250] pushcons 54 ............................. <"\xE4">
  [252] pushcons 55 ............................. <"\xE3">
  [254] pushcons 56 ............................. <"\xE5">
  [256] pushcons 57 ............................. <"\xE7">
  [258] pushcons 58 ............................. <"\xE9">
  [260] pushcons 59 ............................. <"\xE8">
  [262] pushcons 60 ............................. <"\xEA">
  [264] pushcons 61 ............................. <"\xEB">
  [266] pushcons 62 ............................. <"\xED">
  [268] pushcons 63 ............................. <"\xEC">
  [270] pushcons 64 ............................. <"\xEE">
  [272] pushcons 65 ............................. <"\xEF">
  [274] pushcons 66 ............................. <"\xF1">
  [276] pushcons 67 ............................. <"\xF3">
  [278] pushcons 68 ............................. <"\xF2">
  [280] pushcons 69 ............................. <"\xF4">
  [282] pushcons 70 ............................. <"\xF6">
  [284] pushcons 71 ............................. <"\xF5">
  [286] pushcons 72 ............................. <"\xFA">
  [288] pushcons 73 ............................. <"\xF9">
  [290] pushcons 74 ............................. <"\xFB">
  [292] pushcons 75 ............................. <"\xFC">
  [294] pushcons 76 ............................. <"\xE6">
  [296] pushcons 77 ............................. <"\xF8">
  [298] pushcons 78 ............................. <"\xFF">
  [300] pusharglist 28 .......................... <["\xE1", "\xE0", "\xE2", "\xE4", "\xE3", "\xE5", "\xE7", "\xE9", "\xE8", "\xEA", "\xEB", "\xED", "\xEC", "\xEE", "\xEF", "\xF1", "\xF3", "\xF2", "\xF4", "\xF6", "\xF5", "\xFA", "\xF9", "\xFB", "\xFC", "\xE6", "\xF8", "\xFF"]>
  [302] pushlist ................................ <["\xE1", "\xE0", "\xE2", "\xE4", "\xE3", "\xE5", "\xE7", "\xE9", "\xE8", "\xEA", "\xEB", "\xED", "\xEC", "\xEE", "\xEF", "\xF1", "\xF3", "\xF2", "\xF4", "\xF6", "\xF5", "\xFA", "\xF9", "\xFB", "\xFC", "\xE6", "\xF8", "\xFF"]>
  [303] setprop 654 ............................. myLowercaseAccents = ["\xE1", "\xE0", "\xE2", "\xE4", "\xE3", "\xE5", "\xE7", "\xE9", "\xE8", "\xEA", "\xEB", "\xED", "\xEC", "\xEE", "\xEF", "\xF1", "\xF3", "\xF2", "\xF4", "\xF6", "\xF5", "\xFA", "\xF9", "\xFB", "\xFC", "\xE6", "\xF8", "\xFF"]
  [306] getparam 0 .............................. <me>
  [308] getprop 651 ............................. <myCharacters>
  [311] pusharglist 2 ........................... <me, myCharacters>
  [313] localcall 8 ............................. <GetCharacterList(me, myCharacters)>
  [315] setprop 651 ............................. myCharacters = GetCharacterList(me, myCharacters)
  [318] getprop 205 ............................. <myMember>
  [320] pushint8 1 .............................. <1>
  [322] setobjprop 655 .......................... myMember.editable = 1
  [325] ret
end

on Filter me
  [  0] pushint8 48 ............................. <48>
  [  2] pushint8 51 ............................. <51>
  [  4] pushint8 117 ............................ <117>
  [  6] pushint8 115 ............................ <115>
  [  8] pushint8 116 ............................ <116>
  [ 10] pushint8 119 ............................ <119>
  [ 12] pushint8 121 ............................ <121>
  [ 14] pushint8 123 ............................ <123>
  [ 16] pushint8 124 ............................ <124>
  [ 18] pushint8 125 ............................ <125>
  [ 20] pushint8 126 ............................ <126>
  [ 22] pusharglist 11 .......................... <[48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126]>
  [ 24] pushlist ................................ <[48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126]>
  [ 25] pusharglist 0 ........................... <>
  [ 27] thebuiltin 656 .......................... <the keyCode>
  [ 30] pusharglist 2 ........................... <[48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126], the keyCode>
  [ 32] objcall 448 ............................. <[48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126].getPos(the keyCode)>
  [ 35] jmpifz [ 43] ............................ if [48, 51, 117, 115, 116, 119, 121, 123, 124, 125, 126].getPos(the keyCode) then
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 657 ............................. pass()
  [ 43] pusharglist 0 ........................... <>
  [ 45] thebuiltin 658 .......................... <the key>
  [ 48] setlocal 0 .............................. theKey = the key
  [ 50] getprop 651 ............................. <myCharacters>
  [ 53] getlocal 0 .............................. <theKey>
  [ 55] pusharglist 2 ........................... <myCharacters, theKey>
  [ 57] objcall 448 ............................. <myCharacters.getPos(theKey)>
  [ 60] jmpifz [ 71] ............................ if myCharacters.getPos(theKey) then / else
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 657 ............................. pass()
  [ 68] jmp [125]
  [ 71] getprop 659 ............................. <myCaseChange>
  [ 74] jmpifz [109] ............................ if myCaseChange then
  [ 77] getparam 0 .............................. <me>
  [ 79] getlocal 0 .............................. <theKey>
  [ 81] pusharglist 2 ........................... <me, theKey>
  [ 83] localcall 9 ............................. <ChangeCase(me, theKey)>
  [ 85] setlocal 0 .............................. theKey = ChangeCase(me, theKey)
  [ 87] getprop 651 ............................. <myCharacters>
  [ 90] getlocal 0 .............................. <theKey>
  [ 92] pusharglist 2 ........................... <myCharacters, theKey>
  [ 94] objcall 448 ............................. <myCharacters.getPos(theKey)>
  [ 97] jmpifz [109] ............................ if myCharacters.getPos(theKey) then
  [100] getparam 0 .............................. <me>
  [102] getlocal 0 .............................. <theKey>
  [104] pusharglistnoret 2 ...................... <me, theKey>
  [106] localcall 7 ............................. Insert(me, theKey)
  [108] ret ..................................... exit
  [109] getprop 660 ............................. <myBeepMode>
  [112] jmpifz [120] ............................ if myBeepMode then
  [115] pusharglistnoret 0 ...................... <>
  [117] extcall 661 ............................. beep()
  [120] pusharglistnoret 0 ...................... <>
  [122] extcall 430 ............................. stopEvent()
  [125] ret
end

on Insert me, theKey
  [  0] pushint8 24 ............................. <24>
  [  2] get 7 ................................... <the selStart>
  [  4] setlocal 0 .............................. startChar = the selStart
  [  6] getlocal 0 .............................. <startChar>
  [  8] pushint8 23 ............................. <23>
  [ 10] get 7 ................................... <the selEnd>
  [ 12] eq ...................................... <startChar = the selEnd>
  [ 13] jmpifz [ 74] ............................ if startChar = the selEnd then / else
  [ 16] getprop 663 ............................. <myMemberType>
  [ 19] pushsymb 202 ............................ <#field>
  [ 21] eq ...................................... <myMemberType = #field>
  [ 22] jmpifz [ 44] ............................ if myMemberType = #field then / else
  [ 25] getparam 1 .............................. <theKey>
  [ 27] getlocal 0 .............................. <startChar>
  [ 29] pushzero ................................ <0>
  [ 30] pushzero ................................ <0>
  [ 31] pushzero ................................ <0>
  [ 32] pushzero ................................ <0>
  [ 33] pushzero ................................ <0>
  [ 34] pushzero ................................ <0>
  [ 35] pushzero ................................ <0>
  [ 36] getprop 205 ............................. <myMember>
  [ 38] pushzero ................................ <0>
  [ 39] putchunk 38 ............................. put theKey after char startChar of field myMember
  [ 41] jmp [ 71]
  [ 44] getprop 205 ............................. <myMember>
  [ 46] getobjprop 129 .......................... <myMember.text>
  [ 48] setlocal 1 .............................. theText = myMember.text
  [ 50] getparam 1 .............................. <theKey>
  [ 52] getlocal 0 .............................. <startChar>
  [ 54] pushzero ................................ <0>
  [ 55] pushzero ................................ <0>
  [ 56] pushzero ................................ <0>
  [ 57] pushzero ................................ <0>
  [ 58] pushzero ................................ <0>
  [ 59] pushzero ................................ <0>
  [ 60] pushzero ................................ <0>
  [ 61] pushint8 1 .............................. <1>
  [ 63] putchunk 37 ............................. put theKey after char startChar of theText
  [ 65] getprop 205 ............................. <myMember>
  [ 67] getlocal 1 .............................. <theText>
  [ 69] setobjprop 129 .......................... myMember.text = theText
  [ 71] jmp [ 94]
  [ 74] getprop 205 ............................. <myMember>
  [ 76] pushsymb 164 ............................ <#char>
  [ 78] getlocal 0 .............................. <startChar>
  [ 80] pushint8 1 .............................. <1>
  [ 82] add ..................................... <startChar + 1>
  [ 83] pushint8 23 ............................. <23>
  [ 85] get 7 ................................... <the selEnd>
  [ 87] getparam 1 .............................. <theKey>
  [ 89] pusharglistnoret 5 ...................... <myMember, #char, startChar + 1, the selEnd, theKey>
  [ 91] objcall 454 ............................. myMember.char[startChar + 1..the selEnd] = theKey
  [ 94] getlocal 0 .............................. <startChar>
  [ 96] pushint8 1 .............................. <1>
  [ 98] add ..................................... <startChar + 1>
  [ 99] pushint8 23 ............................. <23>
  [101] set 7 ................................... set the selEnd to startChar + 1
  [103] getlocal 0 .............................. <startChar>
  [105] pushint8 1 .............................. <1>
  [107] add ..................................... <startChar + 1>
  [108] pushint8 24 ............................. <24>
  [110] set 7 ................................... set the selStart to startChar + 1
  [112] pusharglistnoret 0 ...................... <>
  [114] extcall 430 ............................. stopEvent()
  [117] ret
end

on GetCharacterList me, theString
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. characterList = []
  [  5] getparam 1 .............................. <theString>
  [  7] pushsymb 164 ............................ <#char>
  [  9] pusharglist 2 ........................... <theString, #char>
  [ 11] objcall 104 ............................. <theString.char.count>
  [ 13] setlocal 1 .............................. charCount = theString.char.count
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 2
  [ 19] getlocal 2
  [ 21] getlocal 1 .............................. <charCount>
  [ 23] lteq
  [ 24] jmpifz [198] ............................ repeat with i = 1 to charCount
  [ 27] getparam 1 .............................. <theString>
  [ 29] pushsymb 164 ............................ <#char>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pusharglist 3 ........................... <theString, #char, 1>
  [ 35] objcall 108 ............................. <theString.char[1]>
  [ 37] setlocal 3 .............................. theChar = theString.char[1]
  [ 39] pushint8 1 .............................. <1>
  [ 41] pushchunkvarref 4 ....................... <theString>
  [ 43] pushsymb 164 ............................ <#char>
  [ 45] pushint8 1 .............................. <1>
  [ 47] pusharglist 3 ........................... <theString, #char, 1>
  [ 49] objcall 265 ............................. <theString.char[1]>
  [ 52] pusharglistnoret 1 ...................... <theString.char[1]>
  [ 54] objcall 666 ............................. delete theString.char[1]
  [ 57] getlocal 0 .............................. <characterList>
  [ 59] getlocal 3 .............................. <theChar>
  [ 61] pusharglist 2 ........................... <characterList, theChar>
  [ 63] objcall 448 ............................. <characterList.getPos(theChar)>
  [ 66] jmpifz [ 72] ............................ if characterList.getPos(theChar) then
  [ 69] jmp [189] ............................... next repeat
  [ 72] getprop 667 ............................. <myCase>
  [ 75] peek 0 .................................. case myCase of
  [ 77] pushcons 80 ............................. <"UPPERCASE and lowercase">
  [ 79] eq
  [ 80] jmpifz [131] ............................ (case) "UPPERCASE and lowercase":
  [ 83] getparam 0 .............................. <me>
  [ 85] getlocal 3 .............................. <theChar>
  [ 87] pusharglist 2 ........................... <me, theChar>
  [ 89] localcall 9 ............................. <ChangeCase(me, theChar)>
  [ 91] setlocal 4 .............................. otherCase = ChangeCase(me, theChar)
  [ 93] getlocal 4 .............................. <otherCase>
  [ 95] getlocal 3 .............................. <theChar>
  [ 97] lt ...................................... <otherCase < theChar>
  [ 98] getlocal 4 .............................. <otherCase>
  [100] getlocal 3 .............................. <theChar>
  [102] gt ...................................... <otherCase > theChar>
  [103] or ...................................... <(otherCase < theChar) or (otherCase > theChar)>
  [104] jmpifz [128] ............................ if (otherCase < theChar) or (otherCase > theChar) then
  [107] getlocal 0 .............................. <characterList>
  [109] getlocal 4 .............................. <otherCase>
  [111] pusharglist 2 ........................... <characterList, otherCase>
  [113] objcall 448 ............................. <characterList.getPos(otherCase)>
  [116] not ..................................... <not characterList.getPos(otherCase)>
  [117] jmpifz [128] ............................ if not characterList.getPos(otherCase) then
  [120] getlocal 0 .............................. <characterList>
  [122] getlocal 4 .............................. <otherCase>
  [124] pusharglistnoret 2 ...................... <characterList, otherCase>
  [126] objcall 190 ............................. characterList.append(otherCase)
  [128] jmp [179]
  [131] peek 0
  [133] pushcons 81 ............................. <"UPPERCASE ONLY">
  [135] eq
  [136] jmpifz [155] ............................ (case) "UPPERCASE ONLY":
  [139] getparam 0 .............................. <me>
  [141] getlocal 3 .............................. <theChar>
  [143] pushsymb 668 ............................ <#upper>
  [146] pusharglist 3 ........................... <me, theChar, #upper>
  [148] localcall 9 ............................. <ChangeCase(me, theChar, #upper)>
  [150] setlocal 3 .............................. theChar = ChangeCase(me, theChar, #upper)
  [152] jmp [179]
  [155] peek 0
  [157] pushcons 82 ............................. <"lowercase only">
  [159] eq
  [160] jmpifz [179] ............................ (case) "lowercase only":
  [163] getparam 0 .............................. <me>
  [165] getlocal 3 .............................. <theChar>
  [167] pushsymb 669 ............................ <#lower>
  [170] pusharglist 3 ........................... <me, theChar, #lower>
  [172] localcall 9 ............................. <ChangeCase(me, theChar, #lower)>
  [174] setlocal 3 .............................. theChar = ChangeCase(me, theChar, #lower)
  [176] jmp [179]
  [179] pop 1 ................................... end case
  [181] getlocal 0 .............................. <characterList>
  [183] getlocal 3 .............................. <theChar>
  [185] pusharglistnoret 2 ...................... <characterList, theChar>
  [187] objcall 190 ............................. characterList.append(theChar)
  [189] pushint8 1
  [191] getlocal 2
  [193] add
  [194] setlocal 2
  [196] endrepeat [ 19]
  [198] getlocal 0 .............................. <characterList>
  [200] pusharglistnoret 1 ...................... <characterList>
  [202] extcall 78 .............................. return characterList
  [204] ret
end

on ChangeCase me, theChar, lowerOrUPPER
  [  0] getparam 1 .............................. <theChar>
  [  2] pusharglist 1 ........................... <theChar>
  [  4] extcall 675 ............................. <charToNum(theChar)>
  [  7] setlocal 0 .............................. asciiCode = charToNum(theChar)
  [  9] getparam 2 .............................. <lowerOrUPPER>
  [ 11] peek 0 .................................. case lowerOrUPPER of
  [ 13] pushsymb 669 ............................ <#lower>
  [ 16] nteq
  [ 17] jmpifz [ 29] ............................ (case) #lower, ...
  [ 20] peek 0
  [ 22] pushsymb 668 ............................ <#upper>
  [ 25] eq
  [ 26] jmpifz [ 32] ............................ (case) ..., #upper:
  [ 29] jmp [ 53] ............................... (case) otherwise:
  [ 32] getlocal 0 .............................. <asciiCode>
  [ 34] pushint8 90 ............................. <90>
  [ 36] gt ...................................... <asciiCode > 90>
  [ 37] jmpifz [ 48] ............................ if asciiCode > 90 then / else
  [ 40] pushsymb 668 ............................ <#upper>
  [ 43] setparam 2 .............................. lowerOrUPPER = #upper
  [ 45] jmp [ 53]
  [ 48] pushsymb 669 ............................ <#lower>
  [ 51] setparam 2 .............................. lowerOrUPPER = #lower
  [ 53] pop 1 ................................... end case
  [ 55] getparam 2 .............................. <lowerOrUPPER>
  [ 57] peek 0 .................................. case lowerOrUPPER of
  [ 59] pushsymb 668 ............................ <#upper>
  [ 62] eq
  [ 63] jmpifz [126] ............................ (case) #upper:
  [ 66] getprop 654 ............................. <myLowercaseAccents>
  [ 69] getparam 1 .............................. <theChar>
  [ 71] pusharglist 2 ........................... <myLowercaseAccents, theChar>
  [ 73] objcall 448 ............................. <myLowercaseAccents.getPos(theChar)>
  [ 76] setlocal 1 .............................. accent = myLowercaseAccents.getPos(theChar)
  [ 78] getlocal 1 .............................. <accent>
  [ 80] jmpifz [ 97] ............................ if accent then / else
  [ 83] getprop 653 ............................. <myUPPERCASEAccents>
  [ 86] getlocal 1 .............................. <accent>
  [ 88] pusharglist 2 ........................... <myUPPERCASEAccents, accent>
  [ 90] objcall 95 .............................. <myUPPERCASEAccents[accent]>
  [ 92] setparam 1 .............................. theChar = myUPPERCASEAccents[accent]
  [ 94] jmp [123]
  [ 97] getlocal 0 .............................. <asciiCode>
  [ 99] pushint8 96 ............................. <96>
  [101] gt ...................................... <asciiCode > 96>
  [102] getlocal 0 .............................. <asciiCode>
  [104] pushint8 123 ............................ <123>
  [106] lt ...................................... <asciiCode < 123>
  [107] and ..................................... <(asciiCode > 96) and (asciiCode < 123)>
  [108] jmpifz [123] ............................ if (asciiCode > 96) and (asciiCode < 123) then
  [111] getlocal 0 .............................. <asciiCode>
  [113] pushint8 32 ............................. <32>
  [115] sub ..................................... <asciiCode - 32>
  [116] pusharglist 1 ........................... <asciiCode - 32>
  [118] extcall 676 ............................. <numToChar(asciiCode - 32)>
  [121] setparam 1 .............................. theChar = numToChar(asciiCode - 32)
  [123] jmp [192]
  [126] peek 0
  [128] pushsymb 669 ............................ <#lower>
  [131] eq
  [132] jmpifz [192] ............................ (case) #lower:
  [135] getprop 653 ............................. <myUPPERCASEAccents>
  [138] getparam 1 .............................. <theChar>
  [140] pusharglist 2 ........................... <myUPPERCASEAccents, theChar>
  [142] objcall 448 ............................. <myUPPERCASEAccents.getPos(theChar)>
  [145] setlocal 1 .............................. accent = myUPPERCASEAccents.getPos(theChar)
  [147] getlocal 1 .............................. <accent>
  [149] jmpifz [166] ............................ if accent then / else
  [152] getprop 654 ............................. <myLowercaseAccents>
  [155] getlocal 1 .............................. <accent>
  [157] pusharglist 2 ........................... <myLowercaseAccents, accent>
  [159] objcall 95 .............................. <myLowercaseAccents[accent]>
  [161] setparam 1 .............................. theChar = myLowercaseAccents[accent]
  [163] jmp [192]
  [166] getlocal 0 .............................. <asciiCode>
  [168] pushint8 64 ............................. <64>
  [170] gt ...................................... <asciiCode > 64>
  [171] getlocal 0 .............................. <asciiCode>
  [173] pushint8 91 ............................. <91>
  [175] lt ...................................... <asciiCode < 91>
  [176] and ..................................... <(asciiCode > 64) and (asciiCode < 91)>
  [177] jmpifz [192] ............................ if (asciiCode > 64) and (asciiCode < 91) then
  [180] getlocal 0 .............................. <asciiCode>
  [182] pushint8 32 ............................. <32>
  [184] add ..................................... <asciiCode + 32>
  [185] pusharglist 1 ........................... <asciiCode + 32>
  [187] extcall 676 ............................. <numToChar(asciiCode + 32)>
  [190] setparam 1 .............................. theChar = numToChar(asciiCode + 32)
  [192] pop 1 ................................... end case
  [194] getparam 1 .............................. <theChar>
  [196] pusharglistnoret 1 ...................... <theChar>
  [198] extcall 78 .............................. return theChar
  [200] ret
end

on isOKToAttach me, aSpriteType, aSpriteNum
  [  0] getparam 1 .............................. <aSpriteType>
  [  2] peek 0 .................................. case aSpriteType of
  [  4] pushsymb 680 ............................ <#graphic>
  [  7] eq
  [  8] jmpifz [ 45] ............................ (case) #graphic:
  [ 11] pop 1
  [ 13] pushsymb 202 ............................ <#field>
  [ 15] pushsymb 129 ............................ <#text>
  [ 17] pusharglist 2 ........................... <[#field, #text]>
  [ 19] pushlist ................................ <[#field, #text]>
  [ 20] getparam 2 .............................. <aSpriteNum>
  [ 22] pusharglist 1 ........................... <aSpriteNum>
  [ 24] extcall 177 ............................. <sprite(aSpriteNum)>
  [ 26] getchainedprop 101 ...................... <sprite(aSpriteNum).member>
  [ 28] getobjprop 412 .......................... <sprite(aSpriteNum).member.type>
  [ 31] pusharglist 2 ........................... <[#field, #text], sprite(aSpriteNum).member.type>
  [ 33] extcall 448 ............................. <getPos([#field, #text], sprite(aSpriteNum).member.type)>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <getPos([#field, #text], sprite(aSpriteNum).member.type) <> 0>
  [ 38] pusharglistnoret 1 ...................... <getPos([#field, #text], sprite(aSpriteNum).member.type) <> 0>
  [ 40] extcall 78 .............................. return getPos([#field, #text], sprite(aSpriteNum).member.type) <> 0
  [ 42] jmp [ 60]
  [ 45] peek 0
  [ 47] pushsymb 92 ............................. <#script>
  [ 49] eq
  [ 50] jmpifz [ 60] ............................ (case) #script:
  [ 53] pop 1
  [ 55] pushzero ................................ <0>
  [ 56] pusharglistnoret 1 ...................... <0>
  [ 58] extcall 78 .............................. return 0
  [ 60] pop 1 ................................... end case
  [ 62] ret
end

on getPropertyDescriptionList me
  [  0] getmovieprop 683 ........................ <the currentSpriteNum>
  [  3] not ..................................... <not (the currentSpriteNum)>
  [  4] jmpifz [  8] ............................ if not (the currentSpriteNum) then
  [  7] ret ..................................... exit
  [  8] pushsymb 651 ............................ <#myCharacters>
  [ 11] pushsymb 684 ............................ <#comment>
  [ 14] pushcons 83 ............................. <"Accepted characters">
  [ 16] pushsymb 685 ............................ <#format>
  [ 19] pushsymb 207 ............................ <#string>
  [ 21] pushsymb 686 ............................ <#default>
  [ 24] pushcons 84 ............................. <"abcdefghijklmnopqrstuvwxyz 0123456789">
  [ 26] pusharglist 6 ........................... <[#comment: "Accepted characters", #format: #string, #default: "abcdefghijklmnopqrstuvwxyz 0123456789"]>
  [ 28] pushproplist ............................ <[#comment: "Accepted characters", #format: #string, #default: "abcdefghijklmnopqrstuvwxyz 0123456789"]>
  [ 29] pushsymb 667 ............................ <#myCase>
  [ 32] pushsymb 684 ............................ <#comment>
  [ 35] pushcons 85 ............................. <EMPTY>
  [ 37] pushsymb 685 ............................ <#format>
  [ 40] pushsymb 207 ............................ <#string>
  [ 42] pushsymb 511 ............................ <#range>
  [ 45] pushcons 80 ............................. <"UPPERCASE and lowercase">
  [ 47] pushcons 81 ............................. <"UPPERCASE ONLY">
  [ 49] pushcons 82 ............................. <"lowercase only">
  [ 51] pushcons 86 ............................. <"case as entered above">
  [ 53] pusharglist 4 ........................... <["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"]>
  [ 55] pushlist ................................ <["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"]>
  [ 56] pushsymb 686 ............................ <#default>
  [ 59] pushcons 80 ............................. <"UPPERCASE and lowercase">
  [ 61] pusharglist 8 ........................... <[#comment: EMPTY, #format: #string, #range: ["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"], #default: "UPPERCASE and lowercase"]>
  [ 63] pushproplist ............................ <[#comment: EMPTY, #format: #string, #range: ["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"], #default: "UPPERCASE and lowercase"]>
  [ 64] pushsymb 659 ............................ <#myCaseChange>
  [ 67] pushsymb 684 ............................ <#comment>
  [ 70] pushcons 87 ............................. <"Correct case automatically?">
  [ 72] pushsymb 685 ............................ <#format>
  [ 75] pushsymb 687 ............................ <#boolean>
  [ 78] pushsymb 686 ............................ <#default>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglist 6 ........................... <[#comment: "Correct case automatically?", #format: #boolean, #default: 1]>
  [ 85] pushproplist ............................ <[#comment: "Correct case automatically?", #format: #boolean, #default: 1]>
  [ 86] pushsymb 644 ............................ <#myAllowRETURN>
  [ 89] pushsymb 684 ............................ <#comment>
  [ 92] pushcons 88 ............................. <"Allow RETURN and ENTER characters?">
  [ 94] pushsymb 685 ............................ <#format>
  [ 97] pushsymb 207 ............................ <#string>
  [ 99] pushsymb 511 ............................ <#range>
  [102] pushcons 19 ............................. <"yes">
  [104] pushcons 20 ............................. <"no">
  [106] pusharglist 2 ........................... <["yes", "no"]>
  [108] pushlist ................................ <["yes", "no"]>
  [109] pushsymb 686 ............................ <#default>
  [112] pushcons 19 ............................. <"yes">
  [114] pusharglist 8 ........................... <[#comment: "Allow RETURN and ENTER characters?", #format: #string, #range: ["yes", "no"], #default: "yes"]>
  [116] pushproplist ............................ <[#comment: "Allow RETURN and ENTER characters?", #format: #string, #range: ["yes", "no"], #default: "yes"]>
  [117] pushsymb 660 ............................ <#myBeepMode>
  [120] pushsymb 684 ............................ <#comment>
  [123] pushcons 89 ............................. <"Beep if input character is invalid?">
  [125] pushsymb 685 ............................ <#format>
  [128] pushsymb 687 ............................ <#boolean>
  [131] pushsymb 686 ............................ <#default>
  [134] pushint8 1 .............................. <1>
  [136] pusharglist 6 ........................... <[#comment: "Beep if input character is invalid?", #format: #boolean, #default: 1]>
  [138] pushproplist ............................ <[#comment: "Beep if input character is invalid?", #format: #boolean, #default: 1]>
  [139] pusharglist 10 .......................... <[#myCharacters: [#comment: "Accepted characters", #format: #string, #default: "abcdefghijklmnopqrstuvwxyz 0123456789"], #myCase: [#comment: EMPTY, #format: #string, #range: ["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"], #default: "UPPERCASE and lowercase"], #myCaseChange: [#comment: "Correct case automatically?", #format: #boolean, #default: 1], #myAllowRETURN: [#comment: "Allow RETURN and ENTER characters?", #format: #string, #range: ["yes", "no"], #default: "yes"], #myBeepMode: [#comment: "Beep if input character is invalid?", #format: #boolean, #default: 1]]>
  [141] pushproplist ............................ <[#myCharacters: [#comment: "Accepted characters", #format: #string, #default: "abcdefghijklmnopqrstuvwxyz 0123456789"], #myCase: [#comment: EMPTY, #format: #string, #range: ["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"], #default: "UPPERCASE and lowercase"], #myCaseChange: [#comment: "Correct case automatically?", #format: #boolean, #default: 1], #myAllowRETURN: [#comment: "Allow RETURN and ENTER characters?", #format: #string, #range: ["yes", "no"], #default: "yes"], #myBeepMode: [#comment: "Beep if input character is invalid?", #format: #boolean, #default: 1]]>
  [142] pusharglistnoret 1 ...................... <[#myCharacters: [#comment: "Accepted characters", #format: #string, #default: "abcdefghijklmnopqrstuvwxyz 0123456789"], #myCase: [#comment: EMPTY, #format: #string, #range: ["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"], #default: "UPPERCASE and lowercase"], #myCaseChange: [#comment: "Correct case automatically?", #format: #boolean, #default: 1], #myAllowRETURN: [#comment: "Allow RETURN and ENTER characters?", #format: #string, #range: ["yes", "no"], #default: "yes"], #myBeepMode: [#comment: "Beep if input character is invalid?", #format: #boolean, #default: 1]]>
  [144] extcall 78 .............................. return [#myCharacters: [#comment: "Accepted characters", #format: #string, #default: "abcdefghijklmnopqrstuvwxyz 0123456789"], #myCase: [#comment: EMPTY, #format: #string, #range: ["UPPERCASE and lowercase", "UPPERCASE ONLY", "lowercase only", "case as entered above"], #default: "UPPERCASE and lowercase"], #myCaseChange: [#comment: "Correct case automatically?", #format: #boolean, #default: 1], #myAllowRETURN: [#comment: "Allow RETURN and ENTER characters?", #format: #string, #range: ["yes", "no"], #default: "yes"], #myBeepMode: [#comment: "Beep if input character is invalid?", #format: #boolean, #default: 1]]
  [146] ret
end
