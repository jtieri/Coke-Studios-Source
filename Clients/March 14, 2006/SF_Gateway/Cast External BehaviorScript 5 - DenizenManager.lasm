property bDebug, bInitialized, bReadyForuse, foDenizenManager, aPrivateStudioData, fo_level0, ERROR_TYPE, ARRAY_TYPE, STUDIO_TYPE, sUserScreenName, sDefaultScreenName, foDenizen, bIsModerator, bisFTMmember, foLoginServlet, foStatusServlet, iCokesDrank, foBackpack, iNetID, plNetworkErrors
global sLanguageSetting, oDenizenManager, oPossessionManager, ElementMgr, gbTestMode, TextMgr, gFeatureSet, oStudio

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 84 ........................... me.iCokesDrank = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushzero ................................ <0>
  [  8] setobjprop 85 ........................... me.bDebug = 0
  [ 10] getparam 0 .............................. <me>
  [ 12] pushzero ................................ <0>
  [ 13] setobjprop 86 ........................... me.bInitialized = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pushzero ................................ <0>
  [ 18] setobjprop 87 ........................... me.bReadyForuse = 0
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 0 .............................. <"FlashReturnStatusEnum">
  [ 24] setobjprop 88 ........................... me.ERROR_TYPE = "FlashReturnStatusEnum"
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 1 .............................. <"Array">
  [ 30] setobjprop 89 ........................... me.ARRAY_TYPE = "Array"
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 2 .............................. <"Studio">
  [ 36] setobjprop 90 ........................... me.STUDIO_TYPE = "Studio"
  [ 38] getparam 0 .............................. <me>
  [ 40] pusharglist 0 ........................... <>
  [ 42] extcall 91 .............................. <VOID>
  [ 44] setobjprop 92 ........................... me.sUserScreenName = VOID
  [ 46] getparam 0 .............................. <me>
  [ 48] getglobal 93 ............................ <TextMgr>
  [ 50] pushcons 3 .............................. <"LOCAL_SCREEN_NAME">
  [ 52] pusharglist 2 ........................... <TextMgr, "LOCAL_SCREEN_NAME">
  [ 54] objcall 94 .............................. <TextMgr.GetRefText("LOCAL_SCREEN_NAME")>
  [ 56] setobjprop 95 ........................... me.sDefaultScreenName = TextMgr.GetRefText("LOCAL_SCREEN_NAME")
  [ 58] getparam 0 .............................. <me>
  [ 60] pushzero ................................ <0>
  [ 61] setobjprop 96 ........................... me.bIsModerator = 0
  [ 63] getparam 0 .............................. <me>
  [ 65] setglobal 97 ............................ oDenizenManager = me
  [ 67] getparam 0 .............................. <me>
  [ 69] pusharglistnoret 1 ...................... <me>
  [ 71] localcall 11 ............................ createNetworkErrorArray(me)
  [ 73] pushcons 4 .............................. <"_TIMER_">
  [ 75] pusharglist 1 ........................... <"_TIMER_">
  [ 77] extcall 101 ............................. <script("_TIMER_")>
  [ 79] pushint16 500 ........................... <500>
  [ 82] pushsymb 1 .............................. <#init>
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 4 ...................... <script("_TIMER_"), 500, #init, me>
  [ 88] objcall 99 .............................. script("_TIMER_").new(500, #init, me)
  [ 90] ret
end

on init me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 5 .............................. <"init()">
  [  4] pusharglistnoret 2 ...................... <me, "init()">
  [  6] objcall 4 ............................... me.debug("init()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 104 .......................... <me.spriteNum>
  [ 14] pusharglist 1 ........................... <me.spriteNum>
  [ 16] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 18] pushcons 6 .............................. <"_level0.oDenizenManager">
  [ 20] pushzero ................................ <0>
  [ 21] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oDenizenManager", 0>
  [ 23] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0.oDenizenManager", 0)>
  [ 25] setobjprop 106 .......................... me.foDenizenManager = sprite(me.spriteNum).getVariable("_level0.oDenizenManager", 0)
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 104 .......................... <me.spriteNum>
  [ 33] pusharglist 1 ........................... <me.spriteNum>
  [ 35] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 37] pushcons 7 .............................. <"_level0.oLoginServlet">
  [ 39] pushzero ................................ <0>
  [ 40] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oLoginServlet", 0>
  [ 42] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0.oLoginServlet", 0)>
  [ 44] setobjprop 107 .......................... me.foLoginServlet = sprite(me.spriteNum).getVariable("_level0.oLoginServlet", 0)
  [ 46] getparam 0 .............................. <me>
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 104 .......................... <me.spriteNum>
  [ 52] pusharglist 1 ........................... <me.spriteNum>
  [ 54] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 56] pushcons 8 .............................. <"_level0.oStatusServlet">
  [ 58] pushzero ................................ <0>
  [ 59] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oStatusServlet", 0>
  [ 61] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0.oStatusServlet", 0)>
  [ 63] setobjprop 108 .......................... me.foStatusServlet = sprite(me.spriteNum).getVariable("_level0.oStatusServlet", 0)
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglistnoret 1 ...................... <me>
  [ 69] objcall 2 ............................... me.setCallbacks()
  [ 71] getparam 0 .............................. <me>
  [ 73] getparam 0 .............................. <me>
  [ 75] getobjprop 104 .......................... <me.spriteNum>
  [ 77] pusharglist 1 ........................... <me.spriteNum>
  [ 79] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 81] pushcons 9 .............................. <"_level0">
  [ 83] pushzero ................................ <0>
  [ 84] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0", 0>
  [ 86] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0", 0)>
  [ 88] setobjprop 109 .......................... me.fo_level0 = sprite(me.spriteNum).getVariable("_level0", 0)
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 94] pushzero ................................ <0>
  [ 95] setobjprop 85 ........................... me.foDenizenManager.bDebug = 0
  [ 97] getparam 0 .............................. <me>
  [ 99] getchainedprop 106 ...................... <me.foDenizenManager>
  [101] pushzero ................................ <0>
  [102] setobjprop 110 .......................... me.foDenizenManager.bTestMode = 0
  [104] getmovieprop 111 ........................ <the runMode>
  [106] pushcons 10 ............................. <"Author">
  [108] eq ...................................... <the runMode = "Author">
  [109] jmpifz [121] ............................ if the runMode = "Author" then / else
  [112] getparam 0 .............................. <me>
  [114] pushint8 1 .............................. <1>
  [116] setobjprop 87 ........................... me.bReadyForuse = 1
  [118] jmp [137]
  [121] getparam 0 .............................. <me>
  [123] getchainedprop 106 ...................... <me.foDenizenManager>
  [125] getparam 0 .............................. <me>
  [127] getchainedprop 109 ...................... <me.fo_level0>
  [129] pusharglist 1 ........................... <me.fo_level0>
  [131] objcall 112 ............................. <me.fo_level0.getGatewayConnection()>
  [133] pusharglistnoret 2 ...................... <me.foDenizenManager, me.fo_level0.getGatewayConnection()>
  [135] objcall 113 ............................. me.foDenizenManager.createGateway(me.fo_level0.getGatewayConnection())
  [137] getparam 0 .............................. <me>
  [139] pushint8 1 .............................. <1>
  [141] setobjprop 86 ........................... me.bInitialized = 1
  [143] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 107 .......................... <me.foLoginServlet>
  [ 12] pushcons 11 ............................. <"getScreenName_Result">
  [ 14] pushsymb 29 ............................. <#getLoginScreenName_Result>
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foLoginServlet, "getScreenName_Result", #getLoginScreenName_Result, me>
  [ 20] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foLoginServlet, "getScreenName_Result", #getLoginScreenName_Result, me)
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 104 .......................... <me.spriteNum>
  [ 26] pusharglist 1 ........................... <me.spriteNum>
  [ 28] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 108 .......................... <me.foStatusServlet>
  [ 34] pushcons 12 ............................. <"getStatus_Result">
  [ 36] pushsymb 28 ............................. <#getStatus_Result>
  [ 38] getparam 0 .............................. <me>
  [ 40] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStatusServlet, "getStatus_Result", #getStatus_Result, me>
  [ 42] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foStatusServlet, "getStatus_Result", #getStatus_Result, me)
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 104 .......................... <me.spriteNum>
  [ 48] pusharglist 1 ........................... <me.spriteNum>
  [ 50] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 106 .......................... <me.foDenizenManager>
  [ 56] pushcons 13 ............................. <"beanCreated">
  [ 58] pushsymb 3 .............................. <#beanCreated>
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "beanCreated", #beanCreated, me>
  [ 64] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "beanCreated", #beanCreated, me)
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 104 .......................... <me.spriteNum>
  [ 70] pusharglist 1 ........................... <me.spriteNum>
  [ 72] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 106 .......................... <me.foDenizenManager>
  [ 78] pushcons 14 ............................. <"loginDenizen_Result">
  [ 80] pushsymb 31 ............................. <#loginDenizen_Result>
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "loginDenizen_Result", #loginDenizen_Result, me>
  [ 86] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "loginDenizen_Result", #loginDenizen_Result, me)
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 104 .......................... <me.spriteNum>
  [ 92] pusharglist 1 ........................... <me.spriteNum>
  [ 94] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 106 .......................... <me.foDenizenManager>
  [100] pushcons 15 ............................. <"loginModerator_Result">
  [102] pushsymb 32 ............................. <#loginModerator_Result>
  [104] getparam 0 .............................. <me>
  [106] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "loginModerator_Result", #loginModerator_Result, me>
  [108] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "loginModerator_Result", #loginModerator_Result, me)
  [110] getparam 0 .............................. <me>
  [112] getobjprop 104 .......................... <me.spriteNum>
  [114] pusharglist 1 ........................... <me.spriteNum>
  [116] extcall 103 ............................. <sprite(me.spriteNum)>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 106 .......................... <me.foDenizenManager>
  [122] pushcons 16 ............................. <"logoutDenizen_Result">
  [124] pushsymb 33 ............................. <#logoutDenizen_Result>
  [126] getparam 0 .............................. <me>
  [128] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "logoutDenizen_Result", #logoutDenizen_Result, me>
  [130] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "logoutDenizen_Result", #logoutDenizen_Result, me)
  [132] getparam 0 .............................. <me>
  [134] getobjprop 104 .......................... <me.spriteNum>
  [136] pusharglist 1 ........................... <me.spriteNum>
  [138] extcall 103 ............................. <sprite(me.spriteNum)>
  [140] getparam 0 .............................. <me>
  [142] getobjprop 106 .......................... <me.foDenizenManager>
  [144] pushcons 17 ............................. <"modifyDenizen_Result">
  [146] pushsymb 34 ............................. <#modifyDenizen_Result>
  [148] getparam 0 .............................. <me>
  [150] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "modifyDenizen_Result", #modifyDenizen_Result, me>
  [152] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "modifyDenizen_Result", #modifyDenizen_Result, me)
  [154] getparam 0 .............................. <me>
  [156] getobjprop 104 .......................... <me.spriteNum>
  [158] pusharglist 1 ........................... <me.spriteNum>
  [160] extcall 103 ............................. <sprite(me.spriteNum)>
  [162] getparam 0 .............................. <me>
  [164] getobjprop 106 .......................... <me.foDenizenManager>
  [166] pushcons 18 ............................. <"getDenizenByScreenName_Result">
  [168] pushsymb 35 ............................. <#getDenizenByScreenName_Result>
  [170] getparam 0 .............................. <me>
  [172] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getDenizenByScreenName_Result", #getDenizenByScreenName_Result, me>
  [174] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getDenizenByScreenName_Result", #getDenizenByScreenName_Result, me)
  [176] getparam 0 .............................. <me>
  [178] getobjprop 104 .......................... <me.spriteNum>
  [180] pusharglist 1 ........................... <me.spriteNum>
  [182] extcall 103 ............................. <sprite(me.spriteNum)>
  [184] getparam 0 .............................. <me>
  [186] getobjprop 106 .......................... <me.foDenizenManager>
  [188] pushcons 19 ............................. <"getDenizenBalance_Result">
  [190] pushsymb 36 ............................. <#getDenizenBalance_Result>
  [192] getparam 0 .............................. <me>
  [194] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getDenizenBalance_Result", #getDenizenBalance_Result, me>
  [196] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getDenizenBalance_Result", #getDenizenBalance_Result, me)
  [198] getparam 0 .............................. <me>
  [200] getobjprop 104 .......................... <me.spriteNum>
  [202] pusharglist 1 ........................... <me.spriteNum>
  [204] extcall 103 ............................. <sprite(me.spriteNum)>
  [206] getparam 0 .............................. <me>
  [208] getobjprop 106 .......................... <me.foDenizenManager>
  [210] pushcons 20 ............................. <"isModerator_Result">
  [212] pushsymb 37 ............................. <#isModerator_Result>
  [214] getparam 0 .............................. <me>
  [216] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "isModerator_Result", #isModerator_Result, me>
  [218] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "isModerator_Result", #isModerator_Result, me)
  [220] getparam 0 .............................. <me>
  [222] getobjprop 104 .......................... <me.spriteNum>
  [224] pusharglist 1 ........................... <me.spriteNum>
  [226] extcall 103 ............................. <sprite(me.spriteNum)>
  [228] getparam 0 .............................. <me>
  [230] getobjprop 106 .......................... <me.foDenizenManager>
  [232] pushcons 21 ............................. <"getModeratorsOnline_Result">
  [234] pushsymb 38 ............................. <#getModeratorsOnline_Result>
  [236] getparam 0 .............................. <me>
  [238] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getModeratorsOnline_Result", #getModeratorsOnline_Result, me>
  [240] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getModeratorsOnline_Result", #getModeratorsOnline_Result, me)
  [242] getparam 0 .............................. <me>
  [244] getobjprop 104 .......................... <me.spriteNum>
  [246] pusharglist 1 ........................... <me.spriteNum>
  [248] extcall 103 ............................. <sprite(me.spriteNum)>
  [250] getparam 0 .............................. <me>
  [252] getobjprop 106 .......................... <me.foDenizenManager>
  [254] pushcons 22 ............................. <"getExtendedDenizenInfo_Result">
  [256] pushsymb 47 ............................. <#getExtendedDenizenInfo_Result>
  [258] getparam 0 .............................. <me>
  [260] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getExtendedDenizenInfo_Result", #getExtendedDenizenInfo_Result, me>
  [262] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getExtendedDenizenInfo_Result", #getExtendedDenizenInfo_Result, me)
  [264] getparam 0 .............................. <me>
  [266] getobjprop 104 .......................... <me.spriteNum>
  [268] pusharglist 1 ........................... <me.spriteNum>
  [270] extcall 103 ............................. <sprite(me.spriteNum)>
  [272] getparam 0 .............................. <me>
  [274] getobjprop 106 .......................... <me.foDenizenManager>
  [276] pushcons 23 ............................. <"getMessenger2_Result">
  [278] pushsymb 40 ............................. <#getMessenger2_Result>
  [280] getparam 0 .............................. <me>
  [282] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getMessenger2_Result", #getMessenger2_Result, me>
  [284] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getMessenger2_Result", #getMessenger2_Result, me)
  [286] getparam 0 .............................. <me>
  [288] getobjprop 104 .......................... <me.spriteNum>
  [290] pusharglist 1 ........................... <me.spriteNum>
  [292] extcall 103 ............................. <sprite(me.spriteNum)>
  [294] getparam 0 .............................. <me>
  [296] getobjprop 106 .......................... <me.foDenizenManager>
  [298] pushcons 24 ............................. <"getOnlineFriends_Result">
  [300] pushsymb 39 ............................. <#getOnlineFriends_Result>
  [302] getparam 0 .............................. <me>
  [304] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getOnlineFriends_Result", #getOnlineFriends_Result, me>
  [306] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getOnlineFriends_Result", #getOnlineFriends_Result, me)
  [308] getparam 0 .............................. <me>
  [310] getobjprop 104 .......................... <me.spriteNum>
  [312] pusharglist 1 ........................... <me.spriteNum>
  [314] extcall 103 ............................. <sprite(me.spriteNum)>
  [316] getparam 0 .............................. <me>
  [318] getobjprop 106 .......................... <me.foDenizenManager>
  [320] pushcons 25 ............................. <"getMessages_Result">
  [322] pushsymb 115 ............................ <#getMessages_Result>
  [324] getparam 0 .............................. <me>
  [326] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getMessages_Result", #getMessages_Result, me>
  [328] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getMessages_Result", #getMessages_Result, me)
  [330] getparam 0 .............................. <me>
  [332] getobjprop 104 .......................... <me.spriteNum>
  [334] pusharglist 1 ........................... <me.spriteNum>
  [336] extcall 103 ............................. <sprite(me.spriteNum)>
  [338] getparam 0 .............................. <me>
  [340] getobjprop 106 .......................... <me.foDenizenManager>
  [342] pushcons 26 ............................. <"getInvites_Result">
  [344] pushsymb 116 ............................ <#getInvites_Result>
  [346] getparam 0 .............................. <me>
  [348] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getInvites_Result", #getInvites_Result, me>
  [350] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getInvites_Result", #getInvites_Result, me)
  [352] getparam 0 .............................. <me>
  [354] getobjprop 104 .......................... <me.spriteNum>
  [356] pusharglist 1 ........................... <me.spriteNum>
  [358] extcall 103 ............................. <sprite(me.spriteNum)>
  [360] getparam 0 .............................. <me>
  [362] getobjprop 106 .......................... <me.foDenizenManager>
  [364] pushcons 27 ............................. <"getFriends_Result">
  [366] pushsymb 117 ............................ <#getFriends_Result>
  [368] getparam 0 .............................. <me>
  [370] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getFriends_Result", #getFriends_Result, me>
  [372] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getFriends_Result", #getFriends_Result, me)
  [374] getparam 0 .............................. <me>
  [376] getobjprop 104 .......................... <me.spriteNum>
  [378] pusharglist 1 ........................... <me.spriteNum>
  [380] extcall 103 ............................. <sprite(me.spriteNum)>
  [382] getparam 0 .............................. <me>
  [384] getobjprop 106 .......................... <me.foDenizenManager>
  [386] pushcons 28 ............................. <"sendMessage_Result">
  [388] pushsymb 41 ............................. <#sendMessage_Result>
  [390] getparam 0 .............................. <me>
  [392] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "sendMessage_Result", #sendMessage_Result, me>
  [394] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "sendMessage_Result", #sendMessage_Result, me)
  [396] getparam 0 .............................. <me>
  [398] getobjprop 104 .......................... <me.spriteNum>
  [400] pusharglist 1 ........................... <me.spriteNum>
  [402] extcall 103 ............................. <sprite(me.spriteNum)>
  [404] getparam 0 .............................. <me>
  [406] getobjprop 106 .......................... <me.foDenizenManager>
  [408] pushcons 29 ............................. <"removeMessage_Result">
  [410] pushsymb 42 ............................. <#removeMessage_Result>
  [412] getparam 0 .............................. <me>
  [414] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "removeMessage_Result", #removeMessage_Result, me>
  [416] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "removeMessage_Result", #removeMessage_Result, me)
  [418] getparam 0 .............................. <me>
  [420] getobjprop 104 .......................... <me.spriteNum>
  [422] pusharglist 1 ........................... <me.spriteNum>
  [424] extcall 103 ............................. <sprite(me.spriteNum)>
  [426] getparam 0 .............................. <me>
  [428] getobjprop 106 .......................... <me.foDenizenManager>
  [430] pushcons 30 ............................. <"rejectInvitation_Result">
  [432] pushsymb 43 ............................. <#rejectInvitation_Result>
  [434] getparam 0 .............................. <me>
  [436] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "rejectInvitation_Result", #rejectInvitation_Result, me>
  [438] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "rejectInvitation_Result", #rejectInvitation_Result, me)
  [440] getparam 0 .............................. <me>
  [442] getobjprop 104 .......................... <me.spriteNum>
  [444] pusharglist 1 ........................... <me.spriteNum>
  [446] extcall 103 ............................. <sprite(me.spriteNum)>
  [448] getparam 0 .............................. <me>
  [450] getobjprop 106 .......................... <me.foDenizenManager>
  [452] pushcons 31 ............................. <"acceptInvitation_Result">
  [454] pushsymb 44 ............................. <#acceptInvitation_Result>
  [456] getparam 0 .............................. <me>
  [458] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "acceptInvitation_Result", #acceptInvitation_Result, me>
  [460] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "acceptInvitation_Result", #acceptInvitation_Result, me)
  [462] getparam 0 .............................. <me>
  [464] getobjprop 104 .......................... <me.spriteNum>
  [466] pusharglist 1 ........................... <me.spriteNum>
  [468] extcall 103 ............................. <sprite(me.spriteNum)>
  [470] getparam 0 .............................. <me>
  [472] getobjprop 106 .......................... <me.foDenizenManager>
  [474] pushcons 32 ............................. <"inviteFriend_Result">
  [476] pushsymb 45 ............................. <#inviteFriend_Result>
  [478] getparam 0 .............................. <me>
  [480] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "inviteFriend_Result", #inviteFriend_Result, me>
  [482] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "inviteFriend_Result", #inviteFriend_Result, me)
  [484] getparam 0 .............................. <me>
  [486] getobjprop 104 .......................... <me.spriteNum>
  [488] pusharglist 1 ........................... <me.spriteNum>
  [490] extcall 103 ............................. <sprite(me.spriteNum)>
  [492] getparam 0 .............................. <me>
  [494] getobjprop 106 .......................... <me.foDenizenManager>
  [496] pushcons 33 ............................. <"removeFriends_Result">
  [498] pushsymb 46 ............................. <#removeFriends_Result>
  [500] getparam 0 .............................. <me>
  [502] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "removeFriends_Result", #removeFriends_Result, me>
  [504] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "removeFriends_Result", #removeFriends_Result, me)
  [506] getparam 0 .............................. <me>
  [508] getobjprop 104 .......................... <me.spriteNum>
  [510] pusharglist 1 ........................... <me.spriteNum>
  [512] extcall 103 ............................. <sprite(me.spriteNum)>
  [514] getparam 0 .............................. <me>
  [516] getobjprop 106 .......................... <me.foDenizenManager>
  [518] pushcons 34 ............................. <"getGenres_result">
  [520] pushsymb 78 ............................. <#getgenres_result>
  [522] getparam 0 .............................. <me>
  [524] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getGenres_result", #getgenres_result, me>
  [526] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getGenres_result", #getgenres_result, me)
  [528] getparam 0 .............................. <me>
  [530] getobjprop 104 .......................... <me.spriteNum>
  [532] pusharglist 1 ........................... <me.spriteNum>
  [534] extcall 103 ............................. <sprite(me.spriteNum)>
  [536] getparam 0 .............................. <me>
  [538] getobjprop 106 .......................... <me.foDenizenManager>
  [540] pushcons 35 ............................. <"getArtistsByGenre_Result">
  [542] pushsymb 79 ............................. <#getArtistsByGenre_result>
  [544] getparam 0 .............................. <me>
  [546] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getArtistsByGenre_Result", #getArtistsByGenre_result, me>
  [548] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getArtistsByGenre_Result", #getArtistsByGenre_result, me)
  [550] getparam 0 .............................. <me>
  [552] getobjprop 104 .......................... <me.spriteNum>
  [554] pusharglist 1 ........................... <me.spriteNum>
  [556] extcall 103 ............................. <sprite(me.spriteNum)>
  [558] getparam 0 .............................. <me>
  [560] getobjprop 106 .......................... <me.foDenizenManager>
  [562] pushcons 36 ............................. <"getSongsByArtist_Result">
  [564] pushsymb 80 ............................. <#getSongsByArtist_result>
  [566] getparam 0 .............................. <me>
  [568] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getSongsByArtist_Result", #getSongsByArtist_result, me>
  [570] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getSongsByArtist_Result", #getSongsByArtist_result, me)
  [572] getparam 0 .............................. <me>
  [574] getobjprop 104 .......................... <me.spriteNum>
  [576] pusharglist 1 ........................... <me.spriteNum>
  [578] extcall 103 ............................. <sprite(me.spriteNum)>
  [580] getparam 0 .............................. <me>
  [582] getobjprop 106 .......................... <me.foDenizenManager>
  [584] pushcons 37 ............................. <"getPlaylist_Result">
  [586] pushsymb 81 ............................. <#getPlaylist_Result>
  [588] getparam 0 .............................. <me>
  [590] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getPlaylist_Result", #getPlaylist_Result, me>
  [592] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getPlaylist_Result", #getPlaylist_Result, me)
  [594] getparam 0 .............................. <me>
  [596] getobjprop 104 .......................... <me.spriteNum>
  [598] pusharglist 1 ........................... <me.spriteNum>
  [600] extcall 103 ............................. <sprite(me.spriteNum)>
  [602] getparam 0 .............................. <me>
  [604] getobjprop 106 .......................... <me.foDenizenManager>
  [606] pushcons 38 ............................. <"addToPlaylist_Result">
  [608] pushsymb 82 ............................. <#addToPlaylist_Result>
  [610] getparam 0 .............................. <me>
  [612] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "addToPlaylist_Result", #addToPlaylist_Result, me>
  [614] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "addToPlaylist_Result", #addToPlaylist_Result, me)
  [616] getparam 0 .............................. <me>
  [618] getobjprop 104 .......................... <me.spriteNum>
  [620] pusharglist 1 ........................... <me.spriteNum>
  [622] extcall 103 ............................. <sprite(me.spriteNum)>
  [624] getparam 0 .............................. <me>
  [626] getobjprop 106 .......................... <me.foDenizenManager>
  [628] pushcons 39 ............................. <"removeFromPlaylist_Result">
  [630] pushsymb 83 ............................. <#removeFromPlaylist_Result>
  [632] getparam 0 .............................. <me>
  [634] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "removeFromPlaylist_Result", #removeFromPlaylist_Result, me>
  [636] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "removeFromPlaylist_Result", #removeFromPlaylist_Result, me)
  [638] getparam 0 .............................. <me>
  [640] getobjprop 104 .......................... <me.spriteNum>
  [642] pusharglist 1 ........................... <me.spriteNum>
  [644] extcall 103 ............................. <sprite(me.spriteNum)>
  [646] getparam 0 .............................. <me>
  [648] getobjprop 106 .......................... <me.foDenizenManager>
  [650] pushcons 40 ............................. <"isFtmMember_result">
  [652] pushsymb 77 ............................. <#isFtmMember_result>
  [654] getparam 0 .............................. <me>
  [656] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "isFtmMember_result", #isFtmMember_result, me>
  [658] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "isFtmMember_result", #isFtmMember_result, me)
  [660] getparam 0 .............................. <me>
  [662] getobjprop 104 .......................... <me.spriteNum>
  [664] pusharglist 1 ........................... <me.spriteNum>
  [666] extcall 103 ............................. <sprite(me.spriteNum)>
  [668] getparam 0 .............................. <me>
  [670] getobjprop 106 .......................... <me.foDenizenManager>
  [672] pushcons 41 ............................. <"getAvailableTokens_result">
  [674] pushsymb 76 ............................. <#getAvailableTokens_result>
  [676] getparam 0 .............................. <me>
  [678] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foDenizenManager, "getAvailableTokens_result", #getAvailableTokens_result, me>
  [680] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foDenizenManager, "getAvailableTokens_result", #getAvailableTokens_result, me)
  [682] ret
end

on beanCreated me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 42 ............................. <"beanCreated()">
  [  4] pusharglistnoret 2 ...................... <me, "beanCreated()">
  [  6] objcall 4 ............................... me.debug("beanCreated()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 87 ........................... me.bReadyForuse = 1
  [ 14] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 85 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 43 ............................. <"DenizenManager: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"DenizenManager: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"DenizenManager: " & sMessage>
  [ 17] extcall 118 ............................. put "DenizenManager: " & sMessage
  [ 19] ret
end

on decodeString me, sEncodedString
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 109 ...................... <me.fo_level0>
  [  4] getchainedprop 122 ...................... <me.fo_level0.oEncoder>
  [  6] getparam 1 .............................. <sEncodedString>
  [  8] pusharglist 2 ........................... <me.fo_level0.oEncoder, sEncodedString>
  [ 10] objcall 123 ............................. <me.fo_level0.oEncoder.decode(sEncodedString)>
  [ 12] pusharglistnoret 1 ...................... <me.fo_level0.oEncoder.decode(sEncodedString)>
  [ 14] extcall 121 ............................. return me.fo_level0.oEncoder.decode(sEncodedString)
  [ 16] ret
end

on encodeString me, sDecodedString
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 109 ...................... <me.fo_level0>
  [  4] getchainedprop 122 ...................... <me.fo_level0.oEncoder>
  [  6] getparam 1 .............................. <sDecodedString>
  [  8] pusharglist 2 ........................... <me.fo_level0.oEncoder, sDecodedString>
  [ 10] objcall 125 ............................. <me.fo_level0.oEncoder.encode(sDecodedString)>
  [ 12] pusharglistnoret 1 ...................... <me.fo_level0.oEncoder.encode(sDecodedString)>
  [ 14] extcall 121 ............................. return me.fo_level0.oEncoder.encode(sDecodedString)
  [ 16] ret
end

on getStatus me
  [  0] pushcons 44 ............................. <RETURN>
  [  2] pushcons 44 ............................. <RETURN>
  [  4] joinstr ................................. <RETURN & RETURN>
  [  5] pusharglistnoret 1 ...................... <RETURN & RETURN>
  [  7] extcall 118 ............................. put RETURN & RETURN
  [  9] pushcons 45 ............................. <"***************************">
  [ 11] pusharglistnoret 1 ...................... <"***************************">
  [ 13] extcall 118 ............................. put "***************************"
  [ 15] pushcons 46 ............................. <"--> RETRIEVING STATUS **">
  [ 17] pusharglistnoret 1 ...................... <"--> RETRIEVING STATUS **">
  [ 19] extcall 118 ............................. put "--> RETRIEVING STATUS **"
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 47 ............................. <"getStatus()">
  [ 25] pusharglistnoret 2 ...................... <me, "getStatus()">
  [ 27] objcall 4 ............................... me.debug("getStatus()")
  [ 29] getglobal 127 ........................... <gbTestMode>
  [ 31] jmpifz [ 51] ............................ if gbTestMode then
  [ 34] getparam 0 .............................. <me>
  [ 36] pushzero ................................ <0>
  [ 37] pushzero ................................ <0>
  [ 38] pushint16 2000 .......................... <2000>
  [ 41] pushcons 48 ............................. <"Open">
  [ 43] pusharglistnoret 5 ...................... <me, 0, 0, 2000, "Open">
  [ 45] objcall 28 .............................. me.getStatus_Result(0, 0, 2000, "Open")
  [ 47] pusharglistnoret 0 ...................... <>
  [ 49] extcall 121 ............................. return 
  [ 51] getparam 0 .............................. <me>
  [ 53] getchainedprop 108 ...................... <me.foStatusServlet>
  [ 55] getmovieprop 128 ........................ <the milliSeconds>
  [ 57] pusharglistnoret 2 ...................... <me.foStatusServlet, the milliSeconds>
  [ 59] objcall 7 ............................... me.foStatusServlet.getStatus(the milliSeconds)
  [ 61] ret
end

on getLoginScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 49 ............................. <"getLoginScreenName()">
  [  4] pusharglistnoret 2 ...................... <me, "getLoginScreenName()">
  [  6] objcall 4 ............................... me.debug("getLoginScreenName()")
  [  8] getglobal 127 ........................... <gbTestMode>
  [ 10] jmpifz [ 23] ............................ if gbTestMode then
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 31 .............................. me.loginDenizen_Result()
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 121 ............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 107 ...................... <me.foLoginServlet>
  [ 27] pusharglistnoret 1 ...................... <me.foLoginServlet>
  [ 29] objcall 52 .............................. me.foLoginServlet.getScreenName()
  [ 31] ret
end

on loginDenizen me, sSessionID
  [  0] pushcons 44 ............................. <RETURN>
  [  2] pushcons 44 ............................. <RETURN>
  [  4] joinstr ................................. <RETURN & RETURN>
  [  5] pusharglistnoret 1 ...................... <RETURN & RETURN>
  [  7] extcall 118 ............................. put RETURN & RETURN
  [  9] pushcons 50 ............................. <"******************************">
  [ 11] pusharglistnoret 1 ...................... <"******************************">
  [ 13] extcall 118 ............................. put "******************************"
  [ 15] pushcons 51 ............................. <"--> LOGIN DENIZEN: ">
  [ 17] getparam 1 .............................. <sSessionID>
  [ 19] joinstr ................................. <"--> LOGIN DENIZEN: " & sSessionID>
  [ 20] pusharglistnoret 1 ...................... <"--> LOGIN DENIZEN: " & sSessionID>
  [ 22] extcall 118 ............................. put "--> LOGIN DENIZEN: " & sSessionID
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 52 ............................. <"loginDenizen() ">
  [ 28] getparam 1 .............................. <sSessionID>
  [ 30] joinstr ................................. <"loginDenizen() " & sSessionID>
  [ 31] pusharglistnoret 2 ...................... <me, "loginDenizen() " & sSessionID>
  [ 33] objcall 4 ............................... me.debug("loginDenizen() " & sSessionID)
  [ 35] getglobal 127 ........................... <gbTestMode>
  [ 37] jmpifz [ 50] ............................ if gbTestMode then
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglistnoret 1 ...................... <me>
  [ 44] objcall 31 .............................. me.loginDenizen_Result()
  [ 46] pusharglistnoret 0 ...................... <>
  [ 48] extcall 121 ............................. return 
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 104 .......................... <me.spriteNum>
  [ 54] pusharglist 1 ........................... <me.spriteNum>
  [ 56] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 58] pushcons 53 ............................. <"_level0.sDefaultLoginDenizenServer">
  [ 60] pushzero ................................ <0>
  [ 61] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.sDefaultLoginDenizenServer", 0>
  [ 63] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0.sDefaultLoginDenizenServer", 0)>
  [ 65] setlocal 0 .............................. sUrl = sprite(me.spriteNum).getVariable("_level0.sDefaultLoginDenizenServer", 0)
  [ 67] getlocal 0 .............................. <sUrl>
  [ 69] pusharglist 1 ........................... <sUrl>
  [ 71] extcall 129 ............................. <stringp(sUrl)>
  [ 73] jmpifz [104] ............................ if stringp(sUrl) then
  [ 76] getlocal 0 .............................. <sUrl>
  [ 78] pushcons 54 ............................. <"?sid">
  [ 80] joinstr ................................. <sUrl & "?sid">
  [ 81] pushcons 55 ............................. <EMPTY>
  [ 83] getparam 1 .............................. <sSessionID>
  [ 85] pusharglist 2 ........................... <[EMPTY: sSessionID]>
  [ 87] pushproplist ............................ <[EMPTY: sSessionID]>
  [ 88] pusharglist 1 ........................... <[EMPTY: sSessionID]>
  [ 90] extcall 130 ............................. <urlEncode([EMPTY: sSessionID])>
  [ 92] joinstr ................................. <sUrl & "?sid" & urlEncode([EMPTY: sSessionID])>
  [ 93] setlocal 0 .............................. sUrl = sUrl & "?sid" & urlEncode([EMPTY: sSessionID])
  [ 95] getlocal 0 .............................. <sUrl>
  [ 97] pusharglist 1 ........................... <sUrl>
  [ 99] extcall 132 ............................. <getNetText(sUrl)>
  [101] setprop 1176 ............................ iNetID = getNetText(sUrl)
  [104] ret
end

on exitFrame me
  [  0] getprop 1176 ............................ <iNetID>
  [  3] pusharglist 1 ........................... <iNetID>
  [  5] extcall 135 ............................. <voidp(iNetID)>
  [  7] not ..................................... <not voidp(iNetID)>
  [  8] jmpifz [ 47] ............................ if not voidp(iNetID) then
  [ 11] getprop 1176 ............................ <iNetID>
  [ 14] pusharglist 1 ........................... <iNetID>
  [ 16] extcall 136 ............................. <netDone(iNetID)>
  [ 18] jmpifz [ 47] ............................ if netDone(iNetID) then
  [ 21] getprop 1176 ............................ <iNetID>
  [ 24] pusharglist 1 ........................... <iNetID>
  [ 26] extcall 137 ............................. <netTextresult(iNetID)>
  [ 28] setlocal 0 .............................. sXMLstream = netTextresult(iNetID)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 34] getlocal 0 .............................. <sXMLstream>
  [ 36] pusharglistnoret 2 ...................... <me.foDenizenManager, sXMLstream>
  [ 38] objcall 9 ............................... me.foDenizenManager.loginDenizen(sXMLstream)
  [ 40] pusharglist 0 ........................... <>
  [ 42] extcall 91 .............................. <VOID>
  [ 44] setprop 1176 ............................ iNetID = VOID
  [ 47] ret
end

on createNetworkErrorArray me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 1181 ......................... me.plNetworkErrors = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 13] pushint8 4 .............................. <4>
  [ 15] pushcons 56 ............................. <"Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 17] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4, "Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 19] objcall 612 ............................. me.plNetworkErrors.addProp(4, "Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.")
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 27] pushint8 5 .............................. <5>
  [ 29] pushcons 57 ............................. <"Bad MOA Interface.">
  [ 31] pusharglistnoret 3 ...................... <me.plNetworkErrors, 5, "Bad MOA Interface.">
  [ 33] objcall 612 ............................. me.plNetworkErrors.addProp(5, "Bad MOA Interface.")
  [ 36] getparam 0 .............................. <me>
  [ 38] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 41] pushint8 6 .............................. <6>
  [ 43] pushcons 58 ............................. <"Bad URL or Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 45] pusharglistnoret 3 ...................... <me.plNetworkErrors, 6, "Bad URL or Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.">
  [ 47] objcall 612 ............................. me.plNetworkErrors.addProp(6, "Bad URL or Bad MOA class. The required network or nonnetwork Xtra extensions are improperly installed or not installed at all.")
  [ 50] getparam 0 .............................. <me>
  [ 52] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 55] pushint8 20 ............................. <20>
  [ 57] pushcons 59 ............................. <"Internal error. Returned by netError() in the Netscape browser if the browser detected a network or internal error.">
  [ 59] pusharglistnoret 3 ...................... <me.plNetworkErrors, 20, "Internal error. Returned by netError() in the Netscape browser if the browser detected a network or internal error.">
  [ 61] objcall 612 ............................. me.plNetworkErrors.addProp(20, "Internal error. Returned by netError() in the Netscape browser if the browser detected a network or internal error.")
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 69] pushint16 4146 .......................... <4146>
  [ 72] pushcons 60 ............................. <"Connection could not be established with the remote host.">
  [ 74] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4146, "Connection could not be established with the remote host.">
  [ 76] objcall 612 ............................. me.plNetworkErrors.addProp(4146, "Connection could not be established with the remote host.")
  [ 79] getparam 0 .............................. <me>
  [ 81] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 84] pushint16 4149 .......................... <4149>
  [ 87] pushcons 61 ............................. <"Data supplied by the server was in an unexpected format.">
  [ 89] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4149, "Data supplied by the server was in an unexpected format.">
  [ 91] objcall 612 ............................. me.plNetworkErrors.addProp(4149, "Data supplied by the server was in an unexpected format.")
  [ 94] getparam 0 .............................. <me>
  [ 96] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [ 99] pushint16 4150 .......................... <4150>
  [102] pushcons 62 ............................. <"Unexpected early closing of connection.">
  [104] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4150, "Unexpected early closing of connection.">
  [106] objcall 612 ............................. me.plNetworkErrors.addProp(4150, "Unexpected early closing of connection.")
  [109] getparam 0 .............................. <me>
  [111] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [114] pushint16 4154 .......................... <4154>
  [117] pushcons 63 ............................. <"Operation could not be completed due to timeout.">
  [119] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4154, "Operation could not be completed due to timeout.">
  [121] objcall 612 ............................. me.plNetworkErrors.addProp(4154, "Operation could not be completed due to timeout.")
  [124] getparam 0 .............................. <me>
  [126] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [129] pushint16 4155 .......................... <4155>
  [132] pushcons 64 ............................. <"Not enough memory available to complete the transaction.">
  [134] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4155, "Not enough memory available to complete the transaction.">
  [136] objcall 612 ............................. me.plNetworkErrors.addProp(4155, "Not enough memory available to complete the transaction.")
  [139] getparam 0 .............................. <me>
  [141] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [144] pushint16 4156 .......................... <4156>
  [147] pushcons 65 ............................. <"Protocol reply to request indicates an error in the reply.">
  [149] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4156, "Protocol reply to request indicates an error in the reply.">
  [151] objcall 612 ............................. me.plNetworkErrors.addProp(4156, "Protocol reply to request indicates an error in the reply.")
  [154] getparam 0 .............................. <me>
  [156] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [159] pushint16 4157 .......................... <4157>
  [162] pushcons 66 ............................. <"Transaction failed to be authenticated.">
  [164] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4157, "Transaction failed to be authenticated.">
  [166] objcall 612 ............................. me.plNetworkErrors.addProp(4157, "Transaction failed to be authenticated.")
  [169] getparam 0 .............................. <me>
  [171] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [174] pushint16 4159 .......................... <4159>
  [177] pushcons 67 ............................. <"Invalid URL.">
  [179] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4159, "Invalid URL.">
  [181] objcall 612 ............................. me.plNetworkErrors.addProp(4159, "Invalid URL.")
  [184] getparam 0 .............................. <me>
  [186] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [189] pushint16 4164 .......................... <4164>
  [192] pushcons 68 ............................. <"Could not create a socket.">
  [194] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4164, "Could not create a socket.">
  [196] objcall 612 ............................. me.plNetworkErrors.addProp(4164, "Could not create a socket.")
  [199] getparam 0 .............................. <me>
  [201] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [204] pushint16 4165 .......................... <4165>
  [207] pushcons 69 ............................. <"Requested object could not be found (URL may be incorrect).">
  [209] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4165, "Requested object could not be found (URL may be incorrect).">
  [211] objcall 612 ............................. me.plNetworkErrors.addProp(4165, "Requested object could not be found (URL may be incorrect).")
  [214] getparam 0 .............................. <me>
  [216] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [219] pushint16 4166 .......................... <4166>
  [222] pushcons 70 ............................. <"Generic proxy failure.">
  [224] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4166, "Generic proxy failure.">
  [226] objcall 612 ............................. me.plNetworkErrors.addProp(4166, "Generic proxy failure.")
  [229] getparam 0 .............................. <me>
  [231] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [234] pushint16 4167 .......................... <4167>
  [237] pushcons 71 ............................. <"Transfer was intentionally interrupted by client.">
  [239] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4167, "Transfer was intentionally interrupted by client.">
  [241] objcall 612 ............................. me.plNetworkErrors.addProp(4167, "Transfer was intentionally interrupted by client.")
  [244] getparam 0 .............................. <me>
  [246] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [249] pushint16 4242 .......................... <4242>
  [252] pushcons 72 ............................. <"Download stopped by netAbort(url).">
  [254] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4242, "Download stopped by netAbort(url).">
  [256] objcall 612 ............................. me.plNetworkErrors.addProp(4242, "Download stopped by netAbort(url).")
  [259] getparam 0 .............................. <me>
  [261] getchainedprop 1181 ..................... <me.plNetworkErrors>
  [264] pushint16 4836 .......................... <4836>
  [267] pushcons 73 ............................. <"Download stopped for an unknown reason, possibly a network error, or the download was abandoned.">
  [269] pusharglistnoret 3 ...................... <me.plNetworkErrors, 4836, "Download stopped for an unknown reason, possibly a network error, or the download was abandoned.">
  [271] objcall 612 ............................. me.plNetworkErrors.addProp(4836, "Download stopped for an unknown reason, possibly a network error, or the download was abandoned.")
  [274] ret
end

on loginModerator me, sScreenName, sPassword
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 74 ............................. <"loginModerator() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"loginModerator() " & sScreenName>
  [  7] getparam 2 .............................. <sPassword>
  [  9] joinpadstr .............................. <"loginModerator() " & sScreenName && sPassword>
  [ 10] pusharglistnoret 2 ...................... <me, "loginModerator() " & sScreenName && sPassword>
  [ 12] objcall 4 ............................... me.debug("loginModerator() " & sScreenName && sPassword)
  [ 14] getglobal 127 ........................... <gbTestMode>
  [ 16] jmpifz [ 41] ............................ if gbTestMode then
  [ 19] pushcons 4 .............................. <"_TIMER_">
  [ 21] pusharglist 1 ........................... <"_TIMER_">
  [ 23] extcall 101 ............................. <script("_TIMER_")>
  [ 25] pushint16 1000 .......................... <1000>
  [ 28] pushsymb 32 ............................. <#loginModerator_Result>
  [ 30] getglobal 146 ........................... <ElementMgr>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #loginModerator_Result, ElementMgr, 0>
  [ 35] objcall 99 .............................. script("_TIMER_").new(1000, #loginModerator_Result, ElementMgr, 0)
  [ 37] pusharglistnoret 0 ...................... <>
  [ 39] extcall 121 ............................. return 
  [ 41] getparam 0 .............................. <me>
  [ 43] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 45] getparam 1 .............................. <sScreenName>
  [ 47] getparam 2 .............................. <sPassword>
  [ 49] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, sPassword>
  [ 51] objcall 12 .............................. me.foDenizenManager.loginModerator(sScreenName, sPassword)
  [ 53] ret
end

on logoutDenizen me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 75 ............................. <"logoutDenizen()">
  [  4] pusharglistnoret 2 ...................... <me, "logoutDenizen()">
  [  6] objcall 4 ............................... me.debug("logoutDenizen()")
  [  8] getglobal 127 ........................... <gbTestMode>
  [ 10] jmpifz [ 23] ............................ if gbTestMode then
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 33 .............................. me.logoutDenizen_Result()
  [ 19] pusharglistnoret 0 ...................... <>
  [ 21] extcall 121 ............................. return 
  [ 23] getparam 0 .............................. <me>
  [ 25] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 27] getparam 1 .............................. <sScreenName>
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 54 ....................... <me.getDenizen>
  [ 33] pusharglist 1 ........................... <me.getDenizen>
  [ 35] objcall 149 ............................. <me.getDenizen.getSecret()>
  [ 37] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, me.getDenizen.getSecret()>
  [ 39] objcall 13 .............................. me.foDenizenManager.logoutDenizen(sScreenName, me.getDenizen.getSecret())
  [ 41] ret
end

on modifyDenizen me, sScreenName, iGender, sAvatarMission, sAvatarString
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 76 ............................. <"modifyDenizen() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"modifyDenizen() " && sScreenName>
  [  7] getparam 2 .............................. <iGender>
  [  9] joinpadstr .............................. <"modifyDenizen() " && sScreenName && iGender>
  [ 10] getparam 3 .............................. <sAvatarMission>
  [ 12] joinpadstr .............................. <"modifyDenizen() " && sScreenName && iGender && sAvatarMission>
  [ 13] getparam 4 .............................. <sAvatarString>
  [ 15] joinpadstr .............................. <"modifyDenizen() " && sScreenName && iGender && sAvatarMission && sAvatarString>
  [ 16] pusharglistnoret 2 ...................... <me, "modifyDenizen() " && sScreenName && iGender && sAvatarMission && sAvatarString>
  [ 18] objcall 4 ............................... me.debug("modifyDenizen() " && sScreenName && iGender && sAvatarMission && sAvatarString)
  [ 20] getglobal 127 ........................... <gbTestMode>
  [ 22] jmpifz [ 54] ............................ if gbTestMode then
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 77 ............................. <"modifyDenizen_Result(0)">
  [ 29] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result(0)">
  [ 31] objcall 4 ............................... me.debug("modifyDenizen_Result(0)")
  [ 33] getglobal 146 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 135 ............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 50] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 146 ........................... <ElementMgr>
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 48] objcall 34 .............................. ElementMgr.modifyDenizen_Result(0)
  [ 50] pusharglistnoret 0 ...................... <>
  [ 52] extcall 121 ............................. return 
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 58] getparam 1 .............................. <sScreenName>
  [ 60] getparam 2 .............................. <iGender>
  [ 62] getparam 3 .............................. <sAvatarMission>
  [ 64] getparam 4 .............................. <sAvatarString>
  [ 66] pusharglistnoret 5 ...................... <me.foDenizenManager, sScreenName, iGender, sAvatarMission, sAvatarString>
  [ 68] objcall 14 .............................. me.foDenizenManager.modifyDenizen(sScreenName, iGender, sAvatarMission, sAvatarString)
  [ 70] ret
end

on getDenizenByScreenName me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 78 ............................. <"getDenizenByScreenName()">
  [  4] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName()">
  [  6] objcall 4 ............................... me.debug("getDenizenByScreenName()")
  [  8] getglobal 127 ........................... <gbTestMode>
  [ 10] jmpifz [155] ............................ if gbTestMode then
  [ 13] pushzero ................................ <0>
  [ 14] setlocal 0 .............................. iError = 0
  [ 16] getparam 1 .............................. <sScreenName>
  [ 18] setparam 1 .............................. sScreenName = sScreenName
  [ 20] pushcons 79 ............................. <"Date">
  [ 22] pusharglist 1 ........................... <"Date">
  [ 24] extcall 153 ............................. <newObject("Date")>
  [ 26] setlocal 1 .............................. oLastAccess = newObject("Date")
  [ 28] pushcons 80 ............................. <"Some Room">
  [ 30] setlocal 2 .............................. sLastSeenIn = "Some Room"
  [ 32] pushcons 81 ............................. <"Some room">
  [ 34] setlocal 3 .............................. sLastSeenInName = "Some room"
  [ 36] pushcons 82 ............................. <"to test">
  [ 38] setlocal 4 .............................. sAvatarMission = "to test"
  [ 40] pushcons 83 ............................. <"hr=003/238,238,238&hd=001/245,226,203&ey=004/245,226,203&fc=001/245,226,203&bd=001/245,226,203&lh=001/245,226,203&rh=001/245,226,203&ch=001/238,238,238&ls=002/238,238,238&rs=002/238,238,238&lg=001/127,102,64&sh=001/194,123,56">
  [ 42] setlocal 5 .............................. sAvatarString = "hr=003/238,238,238&hd=001/245,226,203&ey=004/245,226,203&fc=001/245,226,203&bd=001/245,226,203&lh=001/245,226,203&rh=001/245,226,203&ch=001/238,238,238&ls=002/238,238,238&rs=002/238,238,238&lg=001/127,102,64&sh=001/194,123,56"
  [ 44] pushint8 1 .............................. <1>
  [ 46] setlocal 6 .............................. bOnline = 1
  [ 48] pushint8 1 .............................. <1>
  [ 50] setlocal 7 .............................. bExists = 1
  [ 52] pushint8 1 .............................. <1>
  [ 54] setlocal 8 .............................. iGender = 1
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 84 ............................. <"getDenizenByScreenName_Result()  screenName: ">
  [ 60] getparam 1 .............................. <sScreenName>
  [ 62] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName>
  [ 63] pushcons 85 ............................. <", lastAccess: ">
  [ 65] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: ">
  [ 66] getlocal 1 .............................. <oLastAccess>
  [ 68] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess>
  [ 69] pushcons 86 ............................. <", lastSeen: ">
  [ 71] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: ">
  [ 72] getlocal 2 .............................. <sLastSeenIn>
  [ 74] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn>
  [ 75] pushcons 87 ............................. <", avatarMission: ">
  [ 77] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: ">
  [ 78] getlocal 4 .............................. <sAvatarMission>
  [ 80] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission>
  [ 81] pushcons 88 ............................. <", sAvatarString: ">
  [ 83] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: ">
  [ 84] getlocal 5 .............................. <sAvatarString>
  [ 86] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString>
  [ 87] pushcons 89 ............................. <", bOnline: ">
  [ 89] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: ">
  [ 90] getlocal 6 .............................. <bOnline>
  [ 92] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline>
  [ 93] pushcons 90 ............................. <", bExists: ">
  [ 95] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: ">
  [ 96] getlocal 7 .............................. <bExists>
  [ 98] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists>
  [ 99] pushcons 91 ............................. <", sLastSeenInName: ">
  [101] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: ">
  [102] getlocal 3 .............................. <sLastSeenInName>
  [104] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName>
  [105] pushcons 92 ............................. <", iGender: ">
  [107] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: ">
  [108] getlocal 8 .............................. <iGender>
  [110] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: " & iGender>
  [111] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: " & iGender>
  [113] objcall 4 ............................... me.debug("getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeen: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", bExists: " & bExists & ", sLastSeenInName: " & sLastSeenInName & ", iGender: " & iGender)
  [115] getglobal 146 ........................... <ElementMgr>
  [117] pusharglist 1 ........................... <ElementMgr>
  [119] extcall 135 ............................. <voidp(ElementMgr)>
  [121] not ..................................... <not voidp(ElementMgr)>
  [122] jmpifz [151] ............................ if not voidp(ElementMgr) then
  [125] getglobal 146 ........................... <ElementMgr>
  [127] getlocal 0 .............................. <iError>
  [129] getparam 1 .............................. <sScreenName>
  [131] getlocal 1 .............................. <oLastAccess>
  [133] getlocal 2 .............................. <sLastSeenIn>
  [135] getlocal 4 .............................. <sAvatarMission>
  [137] getlocal 5 .............................. <sAvatarString>
  [139] getlocal 6 .............................. <bOnline>
  [141] getlocal 7 .............................. <bExists>
  [143] getlocal 3 .............................. <sLastSeenInName>
  [145] getlocal 8 .............................. <iGender>
  [147] pusharglistnoret 11 ..................... <ElementMgr, iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender>
  [149] objcall 35 .............................. ElementMgr.getDenizenByScreenName_Result(iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender)
  [151] pusharglistnoret 0 ...................... <>
  [153] extcall 121 ............................. return 
  [155] getparam 0 .............................. <me>
  [157] getchainedprop 106 ...................... <me.foDenizenManager>
  [159] getparam 1 .............................. <sScreenName>
  [161] pusharglistnoret 2 ...................... <me.foDenizenManager, sScreenName>
  [163] objcall 15 .............................. me.foDenizenManager.getDenizenByScreenName(sScreenName)
  [165] ret
end

on getDenizenBalance me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 93 ............................. <"getDenizenBalance() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getDenizenBalance() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getDenizenBalance() " & sScreenName>
  [  9] objcall 4 ............................... me.debug("getDenizenBalance() " & sScreenName)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 73] ............................ if gbTestMode then
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. iError = 0
  [ 19] pushint16 1000 .......................... <1000>
  [ 22] pusharglist 1 ........................... <1000>
  [ 24] extcall 160 ............................. <random(1000)>
  [ 26] pushint16 1000 .......................... <1000>
  [ 29] add ..................................... <random(1000) + 1000>
  [ 30] setlocal 1 .............................. iBalance = random(1000) + 1000
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 94 ............................. <"getDenizenBalance_Result() iError: ">
  [ 36] getlocal 0 .............................. <iError>
  [ 38] joinstr ................................. <"getDenizenBalance_Result() iError: " & iError>
  [ 39] pushcons 95 ............................. <", iBalance: ">
  [ 41] joinstr ................................. <"getDenizenBalance_Result() iError: " & iError & ", iBalance: ">
  [ 42] getlocal 1 .............................. <iBalance>
  [ 44] joinstr ................................. <"getDenizenBalance_Result() iError: " & iError & ", iBalance: " & iBalance>
  [ 45] pusharglistnoret 2 ...................... <me, "getDenizenBalance_Result() iError: " & iError & ", iBalance: " & iBalance>
  [ 47] objcall 4 ............................... me.debug("getDenizenBalance_Result() iError: " & iError & ", iBalance: " & iBalance)
  [ 49] getglobal 146 ........................... <ElementMgr>
  [ 51] pusharglist 1 ........................... <ElementMgr>
  [ 53] extcall 135 ............................. <voidp(ElementMgr)>
  [ 55] not ..................................... <not voidp(ElementMgr)>
  [ 56] jmpifz [ 69] ............................ if not voidp(ElementMgr) then
  [ 59] getglobal 146 ........................... <ElementMgr>
  [ 61] getlocal 0 .............................. <iError>
  [ 63] getlocal 1 .............................. <iBalance>
  [ 65] pusharglistnoret 3 ...................... <ElementMgr, iError, iBalance>
  [ 67] objcall 36 .............................. ElementMgr.getDenizenBalance_Result(iError, iBalance)
  [ 69] pusharglistnoret 0 ...................... <>
  [ 71] extcall 121 ............................. return 
  [ 73] getparam 0 .............................. <me>
  [ 75] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 77] getparam 1 .............................. <sScreenName>
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 54 .............................. <me.getDenizen()>
  [ 85] pusharglist 1 ........................... <me.getDenizen()>
  [ 87] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 89] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, me.getDenizen().getSecret()>
  [ 91] objcall 16 .............................. me.foDenizenManager.getDenizenBalance(sScreenName, me.getDenizen().getSecret())
  [ 93] ret
end

on isModerator me, sScreenName
  [  0] getglobal 127 ........................... <gbTestMode>
  [  2] jmpifz [ 15] ............................ if gbTestMode then
  [  5] getparam 0 .............................. <me>
  [  7] pushint8 1 .............................. <1>
  [  9] setobjprop 96 ........................... me.bIsModerator = 1
  [ 11] pusharglistnoret 0 ...................... <>
  [ 13] extcall 121 ............................. return 
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 19] getparam 1 .............................. <sScreenName>
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 54 .............................. <me.getDenizen()>
  [ 27] pusharglist 1 ........................... <me.getDenizen()>
  [ 29] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 31] pusharglistnoret 3 ...................... <me.foDenizenManager, sScreenName, me.getDenizen().getSecret()>
  [ 33] objcall 17 .............................. me.foDenizenManager.isModerator(sScreenName, me.getDenizen().getSecret())
  [ 35] ret
end

on getModeratorsOnline me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 96 ............................. <"getModeratorsOnline() ">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "getModeratorsOnline() ", 1>
  [  8] objcall 4 ............................... me.debug("getModeratorsOnline() ", 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 54 .............................. <me.getDenizen()>
  [ 30] pusharglist 1 ........................... <me.getDenizen()>
  [ 32] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 34] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 36] objcall 18 .............................. me.foDenizenManager.getModeratorsOnline(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 38] ret
end

on getOnlineFriends me, aToScreenNameList
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 97 ............................. <"getOnlineFriends_Result() ">
  [  4] getparam 1 .............................. <aToScreenNameList>
  [  6] joinstr ................................. <"getOnlineFriends_Result() " & aToScreenNameList>
  [  7] pusharglistnoret 2 ...................... <me, "getOnlineFriends_Result() " & aToScreenNameList>
  [  9] objcall 4 ............................... me.debug("getOnlineFriends_Result() " & aToScreenNameList)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [ 20] ............................ if gbTestMode then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 121 ............................. return 
  [ 20] pushcons 1 .............................. <"Array">
  [ 22] pusharglist 1 ........................... <"Array">
  [ 24] extcall 153 ............................. <newObject("Array")>
  [ 26] setlocal 0 .............................. faToScreenNameList = newObject("Array")
  [ 28] getparam 1 .............................. <aToScreenNameList>
  [ 30] peek 0
  [ 32] pusharglist 1
  [ 34] extcall 162
  [ 36] pushint8 1
  [ 38] peek 0
  [ 40] peek 2
  [ 42] lteq
  [ 43] jmpifz [ 69] ............................ repeat with _sScreenName in aToScreenNameList
  [ 46] peek 2
  [ 48] peek 1
  [ 50] pusharglist 2
  [ 52] extcall 163
  [ 54] setlocal 1
  [ 56] getlocal 0 .............................. <faToScreenNameList>
  [ 58] getlocal 1 .............................. <_sScreenName>
  [ 60] pusharglistnoret 2 ...................... <faToScreenNameList, _sScreenName>
  [ 62] objcall 164 ............................. faToScreenNameList.push(_sScreenName)
  [ 64] pushint8 1
  [ 66] add
  [ 67] endrepeat [ 38]
  [ 69] pop 3
  [ 71] getparam 0 .............................. <me>
  [ 73] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 75] getparam 0 .............................. <me>
  [ 77] pusharglist 1 ........................... <me>
  [ 79] objcall 52 .............................. <me.getScreenName()>
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglist 1 ........................... <me>
  [ 85] objcall 54 .............................. <me.getDenizen()>
  [ 87] pusharglist 1 ........................... <me.getDenizen()>
  [ 89] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 91] getlocal 0 .............................. <faToScreenNameList>
  [ 93] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getScreenName(), me.getDenizen().getSecret(), faToScreenNameList>
  [ 95] objcall 19 .............................. me.foDenizenManager.getOnlineFriends(me.getScreenName(), me.getDenizen().getSecret(), faToScreenNameList)
  [ 97] ret
end

on getMessenger me, sScreenName, iFriendListSize, iEnemyListSize, iInviteListSize, iMessageListSize
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 98 ............................. <"getMessenger() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"getMessenger() " && sScreenName>
  [  7] getparam 2 .............................. <iFriendListSize>
  [  9] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize>
  [ 10] getparam 3 .............................. <iEnemyListSize>
  [ 12] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize>
  [ 13] getparam 4 .............................. <iInviteListSize>
  [ 15] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize>
  [ 16] getparam 5 .............................. <iMessageListSize>
  [ 18] joinpadstr .............................. <"getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize && iMessageListSize>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglistnoret 3 ...................... <me, "getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize && iMessageListSize, 1>
  [ 23] objcall 4 ............................... me.debug("getMessenger() " && sScreenName && iFriendListSize && iEnemyListSize && iInviteListSize && iMessageListSize, 1)
  [ 25] getglobal 168 ........................... <gFeatureSet>
  [ 27] pushsymb 169 ............................ <#MESSENGER>
  [ 29] pusharglist 2 ........................... <gFeatureSet, #MESSENGER>
  [ 31] objcall 170 ............................. <gFeatureSet.isEnabled(#MESSENGER)>
  [ 33] not ..................................... <not gFeatureSet.isEnabled(#MESSENGER)>
  [ 34] jmpifz [ 41] ............................ if not gFeatureSet.isEnabled(#MESSENGER) then
  [ 37] pusharglistnoret 0 ...................... <>
  [ 39] extcall 121 ............................. return 
  [ 41] getparam 1 .............................. <sScreenName>
  [ 43] pusharglist 1 ........................... <sScreenName>
  [ 45] extcall 135 ............................. <voidp(sScreenName)>
  [ 47] jmpifz [ 58] ............................ if voidp(sScreenName) then
  [ 50] getparam 0 .............................. <me>
  [ 52] pusharglist 1 ........................... <me>
  [ 54] objcall 52 .............................. <me.getScreenName()>
  [ 56] setparam 1 .............................. sScreenName = me.getScreenName()
  [ 58] pushint8 50 ............................. <50>
  [ 60] setparam 2 .............................. iFriendListSize = 50
  [ 62] pushint8 1 .............................. <1>
  [ 64] setparam 3 .............................. iEnemyListSize = 1
  [ 66] pushint8 20 ............................. <20>
  [ 68] setparam 4 .............................. iInviteListSize = 20
  [ 70] pushint8 50 ............................. <50>
  [ 72] setparam 5 .............................. iMessageListSize = 50
  [ 74] getglobal 127 ........................... <gbTestMode>
  [ 76] jmpifz [199] ............................ if gbTestMode then
  [ 79] pushzero ................................ <0>
  [ 80] setlocal 0 .............................. iError = 0
  [ 82] pushint8 1 .............................. <1>
  [ 84] setlocal 1 .............................. iEnemyCount = 1
  [ 86] pushint8 2 .............................. <2>
  [ 88] setlocal 2 .............................. iFriendCount = 2
  [ 90] pushint8 3 .............................. <3>
  [ 92] setlocal 3 .............................. iInviteCount = 3
  [ 94] pushint8 4 .............................. <4>
  [ 96] setlocal 4 .............................. iTotalMessageCount = 4
  [ 98] getparam 0 .............................. <me>
  [100] pusharglist 1 ........................... <me>
  [102] objcall 59 .............................. <me.getTestFriends()>
  [104] setlocal 5 .............................. aFriends = me.getTestFriends()
  [106] getparam 0 .............................. <me>
  [108] pusharglist 1 ........................... <me>
  [110] objcall 58 .............................. <me.getTestDenizens()>
  [112] setlocal 6 .............................. aEnemies = me.getTestDenizens()
  [114] getparam 0 .............................. <me>
  [116] pusharglist 1 ........................... <me>
  [118] objcall 58 .............................. <me.getTestDenizens()>
  [120] setlocal 7 .............................. aInvites = me.getTestDenizens()
  [122] getparam 0 .............................. <me>
  [124] pusharglist 1 ........................... <me>
  [126] objcall 60 .............................. <me.getTestMessages()>
  [128] setlocal 8 .............................. aMessages = me.getTestMessages()
  [130] getparam 0 .............................. <me>
  [132] pushcons 99 ............................. <"getMessenger_Result()">
  [134] getlocal 0 .............................. <iError>
  [136] joinpadstr .............................. <"getMessenger_Result()" && iError>
  [137] getlocal 1 .............................. <iEnemyCount>
  [139] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount>
  [140] getlocal 2 .............................. <iFriendCount>
  [142] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount>
  [143] getlocal 3 .............................. <iInviteCount>
  [145] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount>
  [146] getlocal 4 .............................. <iTotalMessageCount>
  [148] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount>
  [149] getlocal 5 .............................. <aFriends>
  [151] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends>
  [152] getlocal 6 .............................. <aEnemies>
  [154] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies>
  [155] getlocal 7 .............................. <aInvites>
  [157] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites>
  [158] getlocal 8 .............................. <aMessages>
  [160] joinpadstr .............................. <"getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites && aMessages>
  [161] pusharglistnoret 2 ...................... <me, "getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites && aMessages>
  [163] objcall 4 ............................... me.debug("getMessenger_Result()" && iError && iEnemyCount && iFriendCount && iInviteCount && iTotalMessageCount && aFriends && aEnemies && aInvites && aMessages)
  [165] getglobal 146 ........................... <ElementMgr>
  [167] pusharglist 1 ........................... <ElementMgr>
  [169] extcall 135 ............................. <voidp(ElementMgr)>
  [171] not ..................................... <not voidp(ElementMgr)>
  [172] jmpifz [199] ............................ if not voidp(ElementMgr) then
  [175] getglobal 146 ........................... <ElementMgr>
  [177] getlocal 0 .............................. <iError>
  [179] getlocal 2 .............................. <iFriendCount>
  [181] getlocal 1 .............................. <iEnemyCount>
  [183] getlocal 3 .............................. <iInviteCount>
  [185] getlocal 4 .............................. <iTotalMessageCount>
  [187] getlocal 5 .............................. <aFriends>
  [189] getlocal 6 .............................. <aEnemies>
  [191] getlocal 7 .............................. <aInvites>
  [193] getlocal 8 .............................. <aMessages>
  [195] pusharglistnoret 10 ..................... <ElementMgr, iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages>
  [197] objcall 171 ............................. ElementMgr.getMessenger_Result(iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages)
  [199] getparam 0 .............................. <me>
  [201] getchainedprop 106 ...................... <me.foDenizenManager>
  [203] getparam 1 .............................. <sScreenName>
  [205] getparam 0 .............................. <me>
  [207] pusharglist 1 ........................... <me>
  [209] objcall 54 .............................. <me.getDenizen()>
  [211] pusharglist 1 ........................... <me.getDenizen()>
  [213] objcall 149 ............................. <me.getDenizen().getSecret()>
  [215] getparam 2 .............................. <iFriendListSize>
  [217] getparam 3 .............................. <iEnemyListSize>
  [219] getparam 4 .............................. <iInviteListSize>
  [221] getparam 5 .............................. <iMessageListSize>
  [223] pusharglistnoret 7 ...................... <me.foDenizenManager, sScreenName, me.getDenizen().getSecret(), iFriendListSize, iEnemyListSize, iInviteListSize, iMessageListSize>
  [225] objcall 20 .............................. me.foDenizenManager.getMessenger(sScreenName, me.getDenizen().getSecret(), iFriendListSize, iEnemyListSize, iInviteListSize, iMessageListSize)
  [227] ret
end

on sendMessage me, sFromScreenName, aToScreenNameList, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 100 ............................ <"sendMessage() ">
  [  4] getparam 1 .............................. <sFromScreenName>
  [  6] joinstr ................................. <"sendMessage() " & sFromScreenName>
  [  7] getparam 2 .............................. <aToScreenNameList>
  [  9] joinpadstr .............................. <"sendMessage() " & sFromScreenName && aToScreenNameList>
  [ 10] pusharglistnoret 2 ...................... <me, "sendMessage() " & sFromScreenName && aToScreenNameList>
  [ 12] objcall 4 ............................... me.debug("sendMessage() " & sFromScreenName && aToScreenNameList)
  [ 14] getglobal 127 ........................... <gbTestMode>
  [ 16] jmpifz [ 55] ............................ if gbTestMode then
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. iError = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 101 ............................ <"sendMessage_Result() iError: ">
  [ 26] getlocal 0 .............................. <iError>
  [ 28] joinstr ................................. <"sendMessage_Result() iError: " & iError>
  [ 29] pusharglistnoret 2 ...................... <me, "sendMessage_Result() iError: " & iError>
  [ 31] objcall 4 ............................... me.debug("sendMessage_Result() iError: " & iError)
  [ 33] getglobal 146 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 135 ............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 51] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 146 ........................... <ElementMgr>
  [ 45] getlocal 0 .............................. <iError>
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 49] objcall 41 .............................. ElementMgr.sendMessage_Result(iError)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 121 ............................. return 
  [ 55] getglobal 184 ........................... <oStudio>
  [ 57] pusharglist 1 ........................... <oStudio>
  [ 59] extcall 135 ............................. <voidp(oStudio)>
  [ 61] not ..................................... <not voidp(oStudio)>
  [ 62] jmpifz [ 77] ............................ if not voidp(oStudio) then
  [ 65] getglobal 184 ........................... <oStudio>
  [ 67] getparam 1 .............................. <sFromScreenName>
  [ 69] getparam 2 .............................. <aToScreenNameList>
  [ 71] getparam 3 .............................. <sMessage>
  [ 73] pusharglistnoret 4 ...................... <oStudio, sFromScreenName, aToScreenNameList, sMessage>
  [ 75] objcall 21 .............................. oStudio.sendMessage(sFromScreenName, aToScreenNameList, sMessage)
  [ 77] ret
end

on removeMessage me, sSender, sRecipient, sMessageHash
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 102 ............................ <"removeMessage() ">
  [  4] getparam 1 .............................. <sSender>
  [  6] joinstr ................................. <"removeMessage() " & sSender>
  [  7] getparam 2 .............................. <sRecipient>
  [  9] joinpadstr .............................. <"removeMessage() " & sSender && sRecipient>
  [ 10] getparam 3 .............................. <sMessageHash>
  [ 12] joinpadstr .............................. <"removeMessage() " & sSender && sRecipient && sMessageHash>
  [ 13] pusharglistnoret 2 ...................... <me, "removeMessage() " & sSender && sRecipient && sMessageHash>
  [ 15] objcall 4 ............................... me.debug("removeMessage() " & sSender && sRecipient && sMessageHash)
  [ 17] getglobal 127 ........................... <gbTestMode>
  [ 19] jmpifz [ 58] ............................ if gbTestMode then
  [ 22] pushzero ................................ <0>
  [ 23] setlocal 0 .............................. iError = 0
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 103 ............................ <"removeMessage_Result() iError: ">
  [ 29] getlocal 0 .............................. <iError>
  [ 31] joinstr ................................. <"removeMessage_Result() iError: " & iError>
  [ 32] pusharglistnoret 2 ...................... <me, "removeMessage_Result() iError: " & iError>
  [ 34] objcall 4 ............................... me.debug("removeMessage_Result() iError: " & iError)
  [ 36] getglobal 146 ........................... <ElementMgr>
  [ 38] pusharglist 1 ........................... <ElementMgr>
  [ 40] extcall 135 ............................. <voidp(ElementMgr)>
  [ 42] not ..................................... <not voidp(ElementMgr)>
  [ 43] jmpifz [ 54] ............................ if not voidp(ElementMgr) then
  [ 46] getglobal 146 ........................... <ElementMgr>
  [ 48] getlocal 0 .............................. <iError>
  [ 50] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 52] objcall 42 .............................. ElementMgr.removeMessage_Result(iError)
  [ 54] pusharglistnoret 0 ...................... <>
  [ 56] extcall 121 ............................. return 
  [ 58] getglobal 184 ........................... <oStudio>
  [ 60] pusharglist 1 ........................... <oStudio>
  [ 62] extcall 135 ............................. <voidp(oStudio)>
  [ 64] not ..................................... <not voidp(oStudio)>
  [ 65] jmpifz [ 80] ............................ if not voidp(oStudio) then
  [ 68] getglobal 184 ........................... <oStudio>
  [ 70] getparam 1 .............................. <sSender>
  [ 72] getparam 2 .............................. <sRecipient>
  [ 74] getparam 3 .............................. <sMessageHash>
  [ 76] pusharglistnoret 4 ...................... <oStudio, sSender, sRecipient, sMessageHash>
  [ 78] objcall 22 .............................. oStudio.removeMessage(sSender, sRecipient, sMessageHash)
  [ 80] ret
end

on rejectInvitation me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 104 ............................ <"rejectInvitation() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"rejectInvitation() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"rejectInvitation() " & sInviter && sInvitee>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "rejectInvitation() " & sInviter && sInvitee, 1>
  [ 14] objcall 4 ............................... me.debug("rejectInvitation() " & sInviter && sInvitee, 1)
  [ 16] getglobal 127 ........................... <gbTestMode>
  [ 18] jmpifz [ 57] ............................ if gbTestMode then
  [ 21] pushzero ................................ <0>
  [ 22] setlocal 0 .............................. iError = 0
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 105 ............................ <"rejectInvitation_Result() iError: ">
  [ 28] getlocal 0 .............................. <iError>
  [ 30] joinstr ................................. <"rejectInvitation_Result() iError: " & iError>
  [ 31] pusharglistnoret 2 ...................... <me, "rejectInvitation_Result() iError: " & iError>
  [ 33] objcall 4 ............................... me.debug("rejectInvitation_Result() iError: " & iError)
  [ 35] getglobal 146 ........................... <ElementMgr>
  [ 37] pusharglist 1 ........................... <ElementMgr>
  [ 39] extcall 135 ............................. <voidp(ElementMgr)>
  [ 41] not ..................................... <not voidp(ElementMgr)>
  [ 42] jmpifz [ 53] ............................ if not voidp(ElementMgr) then
  [ 45] getglobal 146 ........................... <ElementMgr>
  [ 47] getlocal 0 .............................. <iError>
  [ 49] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 51] objcall 43 .............................. ElementMgr.rejectInvitation_Result(iError)
  [ 53] pusharglistnoret 0 ...................... <>
  [ 55] extcall 121 ............................. return 
  [ 57] getglobal 184 ........................... <oStudio>
  [ 59] pusharglist 1 ........................... <oStudio>
  [ 61] extcall 135 ............................. <voidp(oStudio)>
  [ 63] not ..................................... <not voidp(oStudio)>
  [ 64] jmpifz [ 75] ............................ if not voidp(oStudio) then
  [ 67] getglobal 184 ........................... <oStudio>
  [ 69] getparam 2 .............................. <sInvitee>
  [ 71] pusharglistnoret 2 ...................... <oStudio, sInvitee>
  [ 73] objcall 23 .............................. oStudio.rejectInvitation(sInvitee)
  [ 75] ret
end

on acceptInvitation me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 106 ............................ <"acceptInvitation() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"acceptInvitation() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"acceptInvitation() " & sInviter && sInvitee>
  [ 10] pusharglistnoret 2 ...................... <me, "acceptInvitation() " & sInviter && sInvitee>
  [ 12] objcall 4 ............................... me.debug("acceptInvitation() " & sInviter && sInvitee)
  [ 14] getglobal 127 ........................... <gbTestMode>
  [ 16] jmpifz [ 55] ............................ if gbTestMode then
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. iError = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 107 ............................ <"acceptInvitation_Result() iError: ">
  [ 26] getlocal 0 .............................. <iError>
  [ 28] joinstr ................................. <"acceptInvitation_Result() iError: " & iError>
  [ 29] pusharglistnoret 2 ...................... <me, "acceptInvitation_Result() iError: " & iError>
  [ 31] objcall 4 ............................... me.debug("acceptInvitation_Result() iError: " & iError)
  [ 33] getglobal 146 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 135 ............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 51] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 146 ........................... <ElementMgr>
  [ 45] getlocal 0 .............................. <iError>
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 49] objcall 44 .............................. ElementMgr.acceptInvitation_Result(iError)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 121 ............................. return 
  [ 55] getglobal 184 ........................... <oStudio>
  [ 57] pusharglist 1 ........................... <oStudio>
  [ 59] extcall 135 ............................. <voidp(oStudio)>
  [ 61] not ..................................... <not voidp(oStudio)>
  [ 62] jmpifz [ 75] ............................ if not voidp(oStudio) then
  [ 65] getglobal 184 ........................... <oStudio>
  [ 67] getparam 1 .............................. <sInviter>
  [ 69] getparam 2 .............................. <sInvitee>
  [ 71] pusharglistnoret 3 ...................... <oStudio, sInviter, sInvitee>
  [ 73] objcall 24 .............................. oStudio.acceptInvitation(sInviter, sInvitee)
  [ 75] ret
end

on inviteFriend me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 108 ............................ <"inviteFriend() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"inviteFriend() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"inviteFriend() " & sInviter && sInvitee>
  [ 10] pusharglistnoret 2 ...................... <me, "inviteFriend() " & sInviter && sInvitee>
  [ 12] objcall 4 ............................... me.debug("inviteFriend() " & sInviter && sInvitee)
  [ 14] getparam 1 .............................. <sInviter>
  [ 16] getparam 2 .............................. <sInvitee>
  [ 18] eq ...................................... <sInviter = sInvitee>
  [ 19] jmpifz [ 26] ............................ if sInviter = sInvitee then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 121 ............................. return 
  [ 26] getparam 2 .............................. <sInvitee>
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 52 .............................. <me.getScreenName()>
  [ 34] eq ...................................... <sInvitee = me.getScreenName()>
  [ 35] jmpifz [ 48] ............................ if sInvitee = me.getScreenName() then
  [ 38] pushcons 109 ............................ <"CAN'T INVITE INVITEE">
  [ 40] pusharglistnoret 1 ...................... <"CAN'T INVITE INVITEE">
  [ 42] extcall 191 ............................. alert("CAN'T INVITE INVITEE")
  [ 44] pusharglistnoret 0 ...................... <>
  [ 46] extcall 121 ............................. return 
  [ 48] getglobal 127 ........................... <gbTestMode>
  [ 50] jmpifz [ 89] ............................ if gbTestMode then
  [ 53] pushzero ................................ <0>
  [ 54] setlocal 0 .............................. iError = 0
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 110 ............................ <"inviteFriend_Result() iError: ">
  [ 60] getlocal 0 .............................. <iError>
  [ 62] joinstr ................................. <"inviteFriend_Result() iError: " & iError>
  [ 63] pusharglistnoret 2 ...................... <me, "inviteFriend_Result() iError: " & iError>
  [ 65] objcall 4 ............................... me.debug("inviteFriend_Result() iError: " & iError)
  [ 67] getglobal 146 ........................... <ElementMgr>
  [ 69] pusharglist 1 ........................... <ElementMgr>
  [ 71] extcall 135 ............................. <voidp(ElementMgr)>
  [ 73] not ..................................... <not voidp(ElementMgr)>
  [ 74] jmpifz [ 85] ............................ if not voidp(ElementMgr) then
  [ 77] getglobal 146 ........................... <ElementMgr>
  [ 79] getlocal 0 .............................. <iError>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 83] objcall 45 .............................. ElementMgr.inviteFriend_Result(iError)
  [ 85] pusharglistnoret 0 ...................... <>
  [ 87] extcall 121 ............................. return 
  [ 89] getglobal 184 ........................... <oStudio>
  [ 91] pusharglist 1 ........................... <oStudio>
  [ 93] extcall 135 ............................. <voidp(oStudio)>
  [ 95] not ..................................... <not voidp(oStudio)>
  [ 96] jmpifz [109] ............................ if not voidp(oStudio) then
  [ 99] getglobal 184 ........................... <oStudio>
  [101] getparam 1 .............................. <sInviter>
  [103] getparam 2 .............................. <sInvitee>
  [105] pusharglistnoret 3 ...................... <oStudio, sInviter, sInvitee>
  [107] objcall 25 .............................. oStudio.inviteFriend(sInviter, sInvitee)
  [109] ret
end

on removeFriends me, sScreenName, aRemoveList
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 111 ............................ <"removeFriends() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"removeFriends() " & sScreenName>
  [  7] getparam 2 .............................. <aRemoveList>
  [  9] joinpadstr .............................. <"removeFriends() " & sScreenName && aRemoveList>
  [ 10] pusharglistnoret 2 ...................... <me, "removeFriends() " & sScreenName && aRemoveList>
  [ 12] objcall 4 ............................... me.debug("removeFriends() " & sScreenName && aRemoveList)
  [ 14] getglobal 127 ........................... <gbTestMode>
  [ 16] jmpifz [ 55] ............................ if gbTestMode then
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. iError = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 112 ............................ <"removeFriends_Result() iError: ">
  [ 26] getlocal 0 .............................. <iError>
  [ 28] joinstr ................................. <"removeFriends_Result() iError: " & iError>
  [ 29] pusharglistnoret 2 ...................... <me, "removeFriends_Result() iError: " & iError>
  [ 31] objcall 4 ............................... me.debug("removeFriends_Result() iError: " & iError)
  [ 33] getglobal 146 ........................... <ElementMgr>
  [ 35] pusharglist 1 ........................... <ElementMgr>
  [ 37] extcall 135 ............................. <voidp(ElementMgr)>
  [ 39] not ..................................... <not voidp(ElementMgr)>
  [ 40] jmpifz [ 51] ............................ if not voidp(ElementMgr) then
  [ 43] getglobal 146 ........................... <ElementMgr>
  [ 45] getlocal 0 .............................. <iError>
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 49] objcall 46 .............................. ElementMgr.removeFriends_Result(iError)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 121 ............................. return 
  [ 55] getglobal 184 ........................... <oStudio>
  [ 57] pusharglist 1 ........................... <oStudio>
  [ 59] extcall 135 ............................. <voidp(oStudio)>
  [ 61] not ..................................... <not voidp(oStudio)>
  [ 62] jmpifz [ 75] ............................ if not voidp(oStudio) then
  [ 65] getglobal 184 ........................... <oStudio>
  [ 67] getparam 1 .............................. <sScreenName>
  [ 69] getparam 2 .............................. <aRemoveList>
  [ 71] pusharglistnoret 3 ...................... <oStudio, sScreenName, aRemoveList>
  [ 73] objcall 26 .............................. oStudio.removeFriends(sScreenName, aRemoveList)
  [ 75] ret
end

on getExtendedDenizenInfo me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 113 ............................ <"getExtendedDenizenInfo() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getExtendedDenizenInfo() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo() " & sScreenName>
  [  9] objcall 4 ............................... me.debug("getExtendedDenizenInfo() " & sScreenName)
  [ 11] getglobal 127 ........................... <gbTestMode>
  [ 13] jmpifz [151] ............................ if gbTestMode then
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. iError = 0
  [ 19] pushcons 114 ............................ <"Consume as much Coke as possible">
  [ 21] setlocal 1 .............................. sAvatarMission = "Consume as much Coke as possible"
  [ 23] pushsymb 193 ............................ <#messages>
  [ 25] pushint8 33 ............................. <33>
  [ 27] pushsymb 194 ............................ <#kicks>
  [ 29] pushint8 14 ............................. <14>
  [ 31] pushsymb 195 ............................ <#bans>
  [ 33] pushint8 10 ............................. <10>
  [ 35] pusharglist 6 ........................... <[#messages: 33, #kicks: 14, #bans: 10]>
  [ 37] pushproplist ............................ <[#messages: 33, #kicks: 14, #bans: 10]>
  [ 38] setlocal 2 .............................. aLevelList = [#messages: 33, #kicks: 14, #bans: 10]
  [ 40] pushint8 25 ............................. <25>
  [ 42] setlocal 3 .............................. iPossessions_purchased = 25
  [ 44] pushint8 47 ............................. <47>
  [ 46] setlocal 4 .............................. iPossessions_total = 47
  [ 48] pushint8 19 ............................. <19>
  [ 50] setlocal 5 .............................. iPossessions_backpack = 19
  [ 52] pushint8 1 .............................. <1>
  [ 54] setlocal 6 .............................. bInfluencer = 1
  [ 56] pushint8 79 ............................. <79>
  [ 58] setlocal 7 .............................. iLogInTotal = 79
  [ 60] getparam 0 .............................. <me>
  [ 62] pushcons 115 ............................ <"getExtendedDenizenInfo_Result() screenName: ">
  [ 64] getparam 1 .............................. <sScreenName>
  [ 66] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName>
  [ 67] pushcons 87 ............................. <", avatarMission: ">
  [ 69] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: ">
  [ 70] getlocal 1 .............................. <sAvatarMission>
  [ 72] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission>
  [ 73] pushcons 116 ............................ <", levelList: ">
  [ 75] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: ">
  [ 76] getlocal 2 .............................. <aLevelList>
  [ 78] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList>
  [ 79] pushcons 117 ............................ <", possessions_purchased: ">
  [ 81] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: ">
  [ 82] getlocal 3 .............................. <iPossessions_purchased>
  [ 84] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased>
  [ 85] pushcons 118 ............................ <", possessions_total: ">
  [ 87] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: ">
  [ 88] getlocal 4 .............................. <iPossessions_total>
  [ 90] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total>
  [ 91] pushcons 119 ............................ <", possessions_backpack: ">
  [ 93] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: ">
  [ 94] getlocal 5 .............................. <iPossessions_backpack>
  [ 96] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack>
  [ 97] pushcons 120 ............................ <", influencer: ">
  [ 99] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: ">
  [100] getlocal 6 .............................. <bInfluencer>
  [102] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer>
  [103] pushcons 121 ............................ <", logInTotal: ">
  [105] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: ">
  [106] getlocal 7 .............................. <iLogInTotal>
  [108] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [109] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [111] objcall 4 ............................... me.debug("getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal)
  [113] getglobal 146 ........................... <ElementMgr>
  [115] pusharglist 1 ........................... <ElementMgr>
  [117] extcall 135 ............................. <voidp(ElementMgr)>
  [119] not ..................................... <not voidp(ElementMgr)>
  [120] jmpifz [147] ............................ if not voidp(ElementMgr) then
  [123] getglobal 146 ........................... <ElementMgr>
  [125] getlocal 0 .............................. <iError>
  [127] getparam 1 .............................. <sScreenName>
  [129] getlocal 1 .............................. <sAvatarMission>
  [131] getlocal 2 .............................. <aLevelList>
  [133] getlocal 3 .............................. <iPossessions_purchased>
  [135] getlocal 4 .............................. <iPossessions_total>
  [137] getlocal 5 .............................. <iPossessions_backpack>
  [139] getlocal 6 .............................. <bInfluencer>
  [141] getlocal 7 .............................. <iLogInTotal>
  [143] pusharglistnoret 10 ..................... <ElementMgr, iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal>
  [145] objcall 47 .............................. ElementMgr.getExtendedDenizenInfo_Result(iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal)
  [147] pusharglistnoret 0 ...................... <>
  [149] extcall 121 ............................. return 
  [151] getparam 0 .............................. <me>
  [153] getchainedprop 106 ...................... <me.foDenizenManager>
  [155] getparam 1 .............................. <sScreenName>
  [157] pusharglistnoret 2 ...................... <me.foDenizenManager, sScreenName>
  [159] objcall 27 .............................. me.foDenizenManager.getExtendedDenizenInfo(sScreenName)
  [161] ret
end

on getStatus_Result me, oCaller, iError, iUserCount, iCapacity, sStatus, foServerDateTime
  [  0] getmovieprop 111 ........................ <the runMode>
  [  2] pushcons 122 ............................ <"author">
  [  4] nteq .................................... <the runMode <> "author">
  [  5] jmpifz [ 33] ............................ if the runMode <> "author" then
  [  8] pushcons 123 ............................ <"--> RECEIVED STATUS RESULT: ">
  [ 10] getparam 2 .............................. <iError>
  [ 12] joinstr ................................. <"--> RECEIVED STATUS RESULT: " & iError>
  [ 13] getparam 3 .............................. <iUserCount>
  [ 15] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount>
  [ 16] getparam 4 .............................. <iCapacity>
  [ 18] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity>
  [ 19] getparam 5 .............................. <sStatus>
  [ 21] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus>
  [ 22] getparam 6 .............................. <foServerDateTime>
  [ 24] pusharglist 1 ........................... <foServerDateTime>
  [ 26] objcall 202 ............................. <foServerDateTime.toString()>
  [ 28] joinpadstr .............................. <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus && foServerDateTime.toString()>
  [ 29] pusharglistnoret 1 ...................... <"--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus && foServerDateTime.toString()>
  [ 31] extcall 118 ............................. put "--> RECEIVED STATUS RESULT: " & iError && iUserCount && iCapacity && sStatus && foServerDateTime.toString()
  [ 33] pushcons 124 ............................ <"*******************************">
  [ 35] pushcons 44 ............................. <RETURN>
  [ 37] joinstr ................................. <"*******************************" & RETURN>
  [ 38] pusharglistnoret 1 ...................... <"*******************************" & RETURN>
  [ 40] extcall 118 ............................. put "*******************************" & RETURN
  [ 42] getparam 5 .............................. <sStatus>
  [ 44] pushcons 125 ............................ <"O">
  [ 46] eq ...................................... <sStatus = "O">
  [ 47] jmpifz [ 60] ............................ if sStatus = "O" then
  [ 50] pushsymb 204 ............................ <#studiosOpen>
  [ 52] pusharglistnoret 1 ...................... <#studiosOpen>
  [ 54] extcall 203 ............................. sendAllSprites(#studiosOpen)
  [ 56] pusharglistnoret 0 ...................... <>
  [ 58] extcall 121 ............................. return 
  [ 60] getparam 5 .............................. <sStatus>
  [ 62] pushcons 126 ............................ <"C">
  [ 64] eq ...................................... <sStatus = "C">
  [ 65] jmpifz [ 82] ............................ if sStatus = "C" then
  [ 68] pushsymb 205 ............................ <#studiosClosed>
  [ 70] pusharglistnoret 1 ...................... <#studiosClosed>
  [ 72] extcall 203 ............................. sendAllSprites(#studiosClosed)
  [ 74] pushint8 1 .............................. <1>
  [ 76] setglobal 206 ........................... gCLOSING = 1
  [ 78] pusharglistnoret 0 ...................... <>
  [ 80] extcall 121 ............................. return 
  [ 82] getparam 5 .............................. <sStatus>
  [ 84] pushcons 127 ............................ <"F">
  [ 86] eq ...................................... <sStatus = "F">
  [ 87] jmpifz [104] ............................ if sStatus = "F" then
  [ 90] pushsymb 207 ............................ <#studiosFull>
  [ 92] pusharglistnoret 1 ...................... <#studiosFull>
  [ 94] extcall 203 ............................. sendAllSprites(#studiosFull)
  [ 96] pushint8 1 .............................. <1>
  [ 98] setglobal 206 ........................... gCLOSING = 1
  [100] pusharglistnoret 0 ...................... <>
  [102] extcall 121 ............................. return 
  [104] ret
end

on getLoginScreenName_Result me, oCaller, iError, sLoginScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 128 ............................ <"getLoginScreenName_Result() ">
  [  4] getparam 2 .............................. <iError>
  [  6] joinstr ................................. <"getLoginScreenName_Result() " & iError>
  [  7] getparam 3 .............................. <sLoginScreenName>
  [  9] joinpadstr .............................. <"getLoginScreenName_Result() " & iError && sLoginScreenName>
  [ 10] pusharglistnoret 2 ...................... <me, "getLoginScreenName_Result() " & iError && sLoginScreenName>
  [ 12] objcall 4 ............................... me.debug("getLoginScreenName_Result() " & iError && sLoginScreenName)
  [ 14] getparam 2 .............................. <iError>
  [ 16] pushzero ................................ <0>
  [ 17] nteq .................................... <iError <> 0>
  [ 18] jmpifz [108] ............................ if iError <> 0 then
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 129 ............................ <"** DID NOT GET SCREEN NAME FROM COOKIE **">
  [ 25] pusharglistnoret 2 ...................... <me, "** DID NOT GET SCREEN NAME FROM COOKIE **">
  [ 27] objcall 4 ............................... me.debug("** DID NOT GET SCREEN NAME FROM COOKIE **")
  [ 29] pushcons 130 ............................ <"sfsn">
  [ 31] pusharglist 1 ........................... <"sfsn">
  [ 33] extcall 213 ............................. <getPref("sfsn")>
  [ 35] setlocal 0 .............................. sPrefName = getPref("sfsn")
  [ 37] getlocal 0 .............................. <sPrefName>
  [ 39] pusharglist 1 ........................... <sPrefName>
  [ 41] extcall 135 ............................. <voidp(sPrefName)>
  [ 43] not ..................................... <not voidp(sPrefName)>
  [ 44] getlocal 0 .............................. <sPrefName>
  [ 46] pushcons 55 ............................. <EMPTY>
  [ 48] eq ...................................... <sPrefName = EMPTY>
  [ 49] not ..................................... <not (sPrefName = EMPTY)>
  [ 50] and ..................................... <not voidp(sPrefName) and not (sPrefName = EMPTY)>
  [ 51] jmpifz [ 87] ............................ if not voidp(sPrefName) and not (sPrefName = EMPTY) then
  [ 54] getparam 0 .............................. <me>
  [ 56] getlocal 0 .............................. <sPrefName>
  [ 58] pusharglistnoret 2 ...................... <me, sPrefName>
  [ 60] objcall 51 .............................. me.setScreenName(sPrefName)
  [ 62] pushcons 131 ............................ <"inputScreenName">
  [ 64] pusharglist 1 ........................... <"inputScreenName">
  [ 66] extcall 214 ............................. <member("inputScreenName")>
  [ 68] setlocal 1 .............................. oScreenNameMember = member("inputScreenName")
  [ 70] getlocal 1 .............................. <oScreenNameMember>
  [ 72] getobjprop 215 .......................... <oScreenNameMember.memberNum>
  [ 74] pushint8 1 .............................. <1>
  [ 76] inv ..................................... <-1>
  [ 77] nteq .................................... <oScreenNameMember.memberNum <> -1>
  [ 78] jmpifz [ 87] ............................ if oScreenNameMember.memberNum <> -1 then
  [ 81] getlocal 1 .............................. <oScreenNameMember>
  [ 83] getlocal 0 .............................. <sPrefName>
  [ 85] setobjprop 216 .......................... oScreenNameMember.text = sPrefName
  [ 87] pushcons 4 .............................. <"_TIMER_">
  [ 89] pusharglist 1 ........................... <"_TIMER_">
  [ 91] extcall 101 ............................. <script("_TIMER_")>
  [ 93] pushint16 500 ........................... <500>
  [ 96] pushsymb 30 ............................. <#gotoLogin>
  [ 98] getparam 0 .............................. <me>
  [100] pusharglistnoret 4 ...................... <script("_TIMER_"), 500, #gotoLogin, me>
  [102] objcall 99 .............................. script("_TIMER_").new(500, #gotoLogin, me)
  [104] pusharglistnoret 0 ...................... <>
  [106] extcall 121 ............................. return 
  [108] getparam 2 .............................. <iError>
  [110] pushzero ................................ <0>
  [111] eq ...................................... <iError = 0>
  [112] jmpifz [165] ............................ if iError = 0 then
  [115] getparam 0 .............................. <me>
  [117] getparam 3 .............................. <sLoginScreenName>
  [119] pusharglistnoret 2 ...................... <me, sLoginScreenName>
  [121] objcall 51 .............................. me.setScreenName(sLoginScreenName)
  [123] pushcons 131 ............................ <"inputScreenName">
  [125] pusharglist 1 ........................... <"inputScreenName">
  [127] extcall 214 ............................. <member("inputScreenName")>
  [129] setlocal 1 .............................. oScreenNameMember = member("inputScreenName")
  [131] getlocal 1 .............................. <oScreenNameMember>
  [133] getobjprop 215 .......................... <oScreenNameMember.memberNum>
  [135] pushint8 1 .............................. <1>
  [137] inv ..................................... <-1>
  [138] nteq .................................... <oScreenNameMember.memberNum <> -1>
  [139] jmpifz [148] ............................ if oScreenNameMember.memberNum <> -1 then
  [142] getlocal 1 .............................. <oScreenNameMember>
  [144] getparam 3 .............................. <sLoginScreenName>
  [146] setobjprop 216 .......................... oScreenNameMember.text = sLoginScreenName
  [148] pushcons 4 .............................. <"_TIMER_">
  [150] pusharglist 1 ........................... <"_TIMER_">
  [152] extcall 101 ............................. <script("_TIMER_")>
  [154] pushint16 700 ........................... <700>
  [157] pushsymb 30 ............................. <#gotoLogin>
  [159] getparam 0 .............................. <me>
  [161] pusharglistnoret 4 ...................... <script("_TIMER_"), 700, #gotoLogin, me>
  [163] objcall 99 .............................. script("_TIMER_").new(700, #gotoLogin, me)
  [165] ret
end

on gotoLogin me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 132 ............................ <"gotoLogin() ">
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 52 .............................. <me.getScreenName()>
  [ 10] joinstr ................................. <"gotoLogin() " & me.getScreenName()>
  [ 11] pusharglistnoret 2 ...................... <me, "gotoLogin() " & me.getScreenName()>
  [ 13] objcall 4 ............................... me.debug("gotoLogin() " & me.getScreenName())
  [ 15] pushcons 133 ............................ <"DenizenManager.gotologin()">
  [ 17] pusharglistnoret 1 ...................... <"DenizenManager.gotologin()">
  [ 19] extcall 118 ............................. put "DenizenManager.gotologin()"
  [ 21] pushsymb 220 ............................ <#next>
  [ 23] pusharglistnoret 1 ...................... <#next>
  [ 25] extcall 221 ............................. go(#next)
  [ 27] ret
end

on loginDenizen_Result me, oCaller, oResult
  [  0] pushcons 134 ............................ <"Director DenizenManager::loginDenizen_Result()">
  [  2] pusharglistnoret 1 ...................... <"Director DenizenManager::loginDenizen_Result()">
  [  4] extcall 118 ............................. put "Director DenizenManager::loginDenizen_Result()"
  [  6] getglobal 127 ........................... <gbTestMode>
  [  8] jmpifz [ 47] ............................ if gbTestMode then
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 95 ........................... <me.sDefaultScreenName>
  [ 17] pusharglistnoret 2 ...................... <me, me.sDefaultScreenName>
  [ 19] objcall 51 .............................. me.setScreenName(me.sDefaultScreenName)
  [ 21] pushcons 4 .............................. <"_TIMER_">
  [ 23] pusharglist 1 ........................... <"_TIMER_">
  [ 25] extcall 101 ............................. <script("_TIMER_")>
  [ 27] pushint16 1000 .......................... <1000>
  [ 30] pushsymb 222 ............................ <#loginUser_Result>
  [ 32] getglobal 146 ........................... <ElementMgr>
  [ 34] pushzero ................................ <0>
  [ 35] pushint8 2 .............................. <2>
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 7 ...................... <script("_TIMER_"), 1000, #loginUser_Result, ElementMgr, 0, 2, 1>
  [ 41] objcall 99 .............................. script("_TIMER_").new(1000, #loginUser_Result, ElementMgr, 0, 2, 1)
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 121 ............................. return 
  [ 47] getparam 2 .............................. <oResult>
  [ 49] pusharglist 1 ........................... <oResult>
  [ 51] objcall 223 ............................. <oResult.getTypeOf()>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 57] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 58] jmpifz [103] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 61] getparam 2 .............................. <oResult>
  [ 63] pusharglist 1 ........................... <oResult>
  [ 65] objcall 224 ............................. <oResult.getOrdinal()>
  [ 67] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 69] getparam 0 .............................. <me>
  [ 71] pushcons 135 ............................ <"loginDenizen_Result() ERROR ">
  [ 73] getlocal 0 .............................. <iError>
  [ 75] joinstr ................................. <"loginDenizen_Result() ERROR " & iError>
  [ 76] pusharglistnoret 2 ...................... <me, "loginDenizen_Result() ERROR " & iError>
  [ 78] objcall 4 ............................... me.debug("loginDenizen_Result() ERROR " & iError)
  [ 80] pushcons 4 .............................. <"_TIMER_">
  [ 82] pusharglist 1 ........................... <"_TIMER_">
  [ 84] extcall 101 ............................. <script("_TIMER_")>
  [ 86] pushint16 1000 .......................... <1000>
  [ 89] pushsymb 222 ............................ <#loginUser_Result>
  [ 91] getglobal 146 ........................... <ElementMgr>
  [ 93] getlocal 0 .............................. <iError>
  [ 95] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #loginUser_Result, ElementMgr, iError>
  [ 97] objcall 99 .............................. script("_TIMER_").new(1000, #loginUser_Result, ElementMgr, iError)
  [ 99] pusharglistnoret 0 ...................... <>
  [101] extcall 121 ............................. return 
  [103] getparam 2 .............................. <oResult>
  [105] pusharglist 1 ........................... <oResult>
  [107] objcall 52 .............................. <oResult.getScreenName()>
  [109] setlocal 1 .............................. sNewScreenName = oResult.getScreenName()
  [111] pushcons 136 ............................ <"** RECEIVED LOGIN DENIZEN RESULT: ">
  [113] getlocal 1 .............................. <sNewScreenName>
  [115] joinstr ................................. <"** RECEIVED LOGIN DENIZEN RESULT: " & sNewScreenName>
  [116] pusharglistnoret 1 ...................... <"** RECEIVED LOGIN DENIZEN RESULT: " & sNewScreenName>
  [118] extcall 118 ............................. put "** RECEIVED LOGIN DENIZEN RESULT: " & sNewScreenName
  [120] pushcons 137 ............................ <"********************************">
  [122] pushcons 44 ............................. <RETURN>
  [124] joinstr ................................. <"********************************" & RETURN>
  [125] pusharglistnoret 1 ...................... <"********************************" & RETURN>
  [127] extcall 118 ............................. put "********************************" & RETURN
  [129] getparam 0 .............................. <me>
  [131] getlocal 1 .............................. <sNewScreenName>
  [133] pusharglistnoret 2 ...................... <me, sNewScreenName>
  [135] objcall 51 .............................. me.setScreenName(sNewScreenName)
  [137] pushcons 130 ............................ <"sfsn">
  [139] getparam 0 .............................. <me>
  [141] pusharglist 1 ........................... <me>
  [143] objcall 52 .............................. <me.getScreenName()>
  [145] pusharglistnoret 2 ...................... <"sfsn", me.getScreenName()>
  [147] extcall 225 ............................. setPref("sfsn", me.getScreenName())
  [149] getparam 0 .............................. <me>
  [151] getparam 2 .............................. <oResult>
  [153] pusharglistnoret 2 ...................... <me, oResult>
  [155] objcall 53 .............................. me.setDenizen(oResult)
  [157] getparam 2 .............................. <oResult>
  [159] pusharglist 1 ........................... <oResult>
  [161] objcall 226 ............................. <oResult.getIsBanned()>
  [163] setlocal 2 .............................. bIsBanned = oResult.getIsBanned()
  [165] getlocal 2 .............................. <bIsBanned>
  [167] jmpifz [186] ............................ if bIsBanned then
  [170] pushint8 1 .............................. <1>
  [172] setglobal 206 ........................... gCLOSING = 1
  [174] getglobal 146 ........................... <ElementMgr>
  [176] pushcons 138 ............................ <"ALERT_BANNED">
  [178] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_BANNED">
  [180] objcall 191 ............................. ElementMgr.alert("ALERT_BANNED")
  [182] pusharglistnoret 0 ...................... <>
  [184] extcall 121 ............................. return 
  [186] getglobal 146 ........................... <ElementMgr>
  [188] pusharglist 1 ........................... <ElementMgr>
  [190] extcall 135 ............................. <voidp(ElementMgr)>
  [192] not ..................................... <not voidp(ElementMgr)>
  [193] jmpifz [218] ............................ if not voidp(ElementMgr) then
  [196] pushcons 4 .............................. <"_TIMER_">
  [198] pusharglist 1 ........................... <"_TIMER_">
  [200] extcall 101 ............................. <script("_TIMER_")>
  [202] pushint16 1000 .......................... <1000>
  [205] pushsymb 222 ............................ <#loginUser_Result>
  [207] getglobal 146 ........................... <ElementMgr>
  [209] pushzero ................................ <0>
  [210] pushint8 2 .............................. <2>
  [212] pushint8 1 .............................. <1>
  [214] pusharglistnoret 7 ...................... <script("_TIMER_"), 1000, #loginUser_Result, ElementMgr, 0, 2, 1>
  [216] objcall 99 .............................. script("_TIMER_").new(1000, #loginUser_Result, ElementMgr, 0, 2, 1)
  [218] pushcons 4 .............................. <"_TIMER_">
  [220] pusharglist 1 ........................... <"_TIMER_">
  [222] extcall 101 ............................. <script("_TIMER_")>
  [224] pushint16 1000 .......................... <1000>
  [227] pushsymb 17 ............................. <#isModerator>
  [229] getparam 0 .............................. <me>
  [231] getparam 0 .............................. <me>
  [233] pusharglist 1 ........................... <me>
  [235] objcall 52 .............................. <me.getScreenName()>
  [237] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #isModerator, me, me.getScreenName()>
  [239] objcall 99 .............................. script("_TIMER_").new(1000, #isModerator, me, me.getScreenName())
  [241] pushcons 4 .............................. <"_TIMER_">
  [243] pusharglist 1 ........................... <"_TIMER_">
  [245] extcall 101 ............................. <script("_TIMER_")>
  [247] pushint16 1000 .......................... <1000>
  [250] pushsymb 65 ............................. <#getBackpack>
  [252] getglobal 227 ........................... <oPossessionManager>
  [254] getparam 0 .............................. <me>
  [256] pusharglist 1 ........................... <me>
  [258] objcall 52 .............................. <me.getScreenName()>
  [260] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #getBackpack, oPossessionManager, me.getScreenName()>
  [262] objcall 99 .............................. script("_TIMER_").new(1000, #getBackpack, oPossessionManager, me.getScreenName())
  [264] ret
end

on loginModerator_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 139 ............................ <"loginModerator_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "loginModerator_Result()">
  [  6] objcall 4 ............................... me.debug("loginModerator_Result()")
  [  8] pushzero ................................ <0>
  [  9] setlocal 0 .............................. iError = 0
  [ 11] getparam 2 .............................. <oResult>
  [ 13] pusharglist 1 ........................... <oResult>
  [ 15] objcall 223 ............................. <oResult.getTypeOf()>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 21] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 22] jmpifz [ 47] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then / else
  [ 25] getparam 2 .............................. <oResult>
  [ 27] pusharglist 1 ........................... <oResult>
  [ 29] objcall 224 ............................. <oResult.getOrdinal()>
  [ 31] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 140 ............................ <"loginModerator_Result() ERROR ">
  [ 37] getlocal 0 .............................. <iError>
  [ 39] joinstr ................................. <"loginModerator_Result() ERROR " & iError>
  [ 40] pusharglistnoret 2 ...................... <me, "loginModerator_Result() ERROR " & iError>
  [ 42] objcall 4 ............................... me.debug("loginModerator_Result() ERROR " & iError)
  [ 44] jmp [ 95]
  [ 47] getparam 0 .............................. <me>
  [ 49] getparam 2 .............................. <oResult>
  [ 51] pusharglistnoret 2 ...................... <me, oResult>
  [ 53] objcall 53 .............................. me.setDenizen(oResult)
  [ 55] getmovieprop 455 ........................ <the debugPlaybackEnabled>
  [ 58] jmpifz [ 74] ............................ if the debugPlaybackEnabled then
  [ 61] pushcons 141 ............................ <"oResult.getSecret():">
  [ 63] getparam 2 .............................. <oResult>
  [ 65] pusharglist 1 ........................... <oResult>
  [ 67] objcall 149 ............................. <oResult.getSecret()>
  [ 69] joinpadstr .............................. <"oResult.getSecret():" && oResult.getSecret()>
  [ 70] pusharglistnoret 1 ...................... <"oResult.getSecret():" && oResult.getSecret()>
  [ 72] extcall 118 ............................. put "oResult.getSecret():" && oResult.getSecret()
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 104 .......................... <me.spriteNum>
  [ 78] pusharglist 1 ........................... <me.spriteNum>
  [ 80] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 82] pushcons 142 ............................ <"_level0.sSecret">
  [ 84] getparam 2 .............................. <oResult>
  [ 86] pusharglist 1 ........................... <oResult>
  [ 88] objcall 149 ............................. <oResult.getSecret()>
  [ 90] pusharglistnoret 3 ...................... <sprite(me.spriteNum), "_level0.sSecret", oResult.getSecret()>
  [ 92] objcall 1182 ............................ sprite(me.spriteNum).setVariable("_level0.sSecret", oResult.getSecret())
  [ 95] pushcons 4 .............................. <"_TIMER_">
  [ 97] pusharglist 1 ........................... <"_TIMER_">
  [ 99] extcall 101 ............................. <script("_TIMER_")>
  [101] pushint16 1000 .......................... <1000>
  [104] pushsymb 32 ............................. <#loginModerator_Result>
  [106] getglobal 146 ........................... <ElementMgr>
  [108] getlocal 0 .............................. <iError>
  [110] pusharglistnoret 5 ...................... <script("_TIMER_"), 1000, #loginModerator_Result, ElementMgr, iError>
  [112] objcall 99 .............................. script("_TIMER_").new(1000, #loginModerator_Result, ElementMgr, iError)
  [114] ret
end

on logoutDenizen_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 143 ............................ <"logoutDenizen_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "logoutDenizen_Result()">
  [  6] objcall 4 ............................... me.debug("logoutDenizen_Result()")
  [  8] getglobal 127 ........................... <gbTestMode>
  [ 10] jmpifz [ 17] ............................ if gbTestMode then
  [ 13] pusharglistnoret 0 ...................... <>
  [ 15] extcall 121 ............................. return 
  [ 17] getparam 2 .............................. <oResult>
  [ 19] pusharglist 1 ........................... <oResult>
  [ 21] objcall 223 ............................. <oResult.getTypeOf()>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 27] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 28] jmpifz [ 72] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 31] getparam 2 .............................. <oResult>
  [ 33] pusharglist 1 ........................... <oResult>
  [ 35] objcall 224 ............................. <oResult.getOrdinal()>
  [ 37] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 144 ............................ <"logoutDenizen_Result() ERROR ">
  [ 43] getlocal 0 .............................. <iError>
  [ 45] joinstr ................................. <"logoutDenizen_Result() ERROR " & iError>
  [ 46] pusharglistnoret 2 ...................... <me, "logoutDenizen_Result() ERROR " & iError>
  [ 48] objcall 4 ............................... me.debug("logoutDenizen_Result() ERROR " & iError)
  [ 50] getglobal 146 ........................... <ElementMgr>
  [ 52] pusharglist 1 ........................... <ElementMgr>
  [ 54] extcall 135 ............................. <voidp(ElementMgr)>
  [ 56] not ..................................... <not voidp(ElementMgr)>
  [ 57] jmpifz [ 68] ............................ if not voidp(ElementMgr) then
  [ 60] getglobal 146 ........................... <ElementMgr>
  [ 62] getlocal 0 .............................. <iError>
  [ 64] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 66] objcall 33 .............................. ElementMgr.logoutDenizen_Result(iError)
  [ 68] pusharglistnoret 0 ...................... <>
  [ 70] extcall 121 ............................. return 
  [ 72] getglobal 146 ........................... <ElementMgr>
  [ 74] pusharglist 1 ........................... <ElementMgr>
  [ 76] extcall 135 ............................. <voidp(ElementMgr)>
  [ 78] not ..................................... <not voidp(ElementMgr)>
  [ 79] jmpifz [ 89] ............................ if not voidp(ElementMgr) then
  [ 82] getglobal 146 ........................... <ElementMgr>
  [ 84] pushzero ................................ <0>
  [ 85] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 87] objcall 33 .............................. ElementMgr.logoutDenizen_Result(0)
  [ 89] ret
end

on modifyDenizen_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 145 ............................ <"modifyDenizen_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result()">
  [  6] objcall 4 ............................... me.debug("modifyDenizen_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 146 ............................ <"modifyDenizen_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"modifyDenizen_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("modifyDenizen_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 34 .............................. ElementMgr.modifyDenizen_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] getparam 0 .............................. <me>
  [ 65] pushcons 147 ............................ <"modifyDenizen_Result() result: ">
  [ 67] getparam 2 .............................. <oResult>
  [ 69] pusharglist 1 ........................... <oResult>
  [ 71] objcall 202 ............................. <oResult.toString()>
  [ 73] joinstr ................................. <"modifyDenizen_Result() result: " & oResult.toString()>
  [ 74] pusharglistnoret 2 ...................... <me, "modifyDenizen_Result() result: " & oResult.toString()>
  [ 76] objcall 4 ............................... me.debug("modifyDenizen_Result() result: " & oResult.toString())
  [ 78] getglobal 146 ........................... <ElementMgr>
  [ 80] pusharglist 1 ........................... <ElementMgr>
  [ 82] extcall 135 ............................. <voidp(ElementMgr)>
  [ 84] not ..................................... <not voidp(ElementMgr)>
  [ 85] jmpifz [ 95] ............................ if not voidp(ElementMgr) then
  [ 88] getglobal 146 ........................... <ElementMgr>
  [ 90] pushzero ................................ <0>
  [ 91] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 93] objcall 34 .............................. ElementMgr.modifyDenizen_Result(0)
  [ 95] ret
end

on getDenizenByScreenName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 148 ............................ <"getDenizenByScreenName_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result()">
  [  6] objcall 4 ............................... me.debug("getDenizenByScreenName_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 149 ............................ <"sErrorType: ">
  [ 20] getlocal 0 .............................. <sErrorType>
  [ 22] joinstr ................................. <"sErrorType: " & sErrorType>
  [ 23] pusharglistnoret 2 ...................... <me, "sErrorType: " & sErrorType>
  [ 25] objcall 4 ............................... me.debug("sErrorType: " & sErrorType)
  [ 27] getparam 2 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 223 ............................. <oResult.getTypeOf()>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 37] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 38] jmpifz [ 90] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 150 ............................ <"error">
  [ 45] pusharglistnoret 2 ...................... <me, "error">
  [ 47] objcall 4 ............................... me.debug("error")
  [ 49] getparam 2 .............................. <oResult>
  [ 51] pusharglist 1 ........................... <oResult>
  [ 53] objcall 224 ............................. <oResult.getOrdinal()>
  [ 55] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 57] getparam 0 .............................. <me>
  [ 59] pushcons 151 ............................ <"getDenizenByScreenName_Result() ERROR ">
  [ 61] getlocal 1 .............................. <iError>
  [ 63] joinstr ................................. <"getDenizenByScreenName_Result() ERROR " & iError>
  [ 64] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result() ERROR " & iError>
  [ 66] objcall 4 ............................... me.debug("getDenizenByScreenName_Result() ERROR " & iError)
  [ 68] getglobal 146 ........................... <ElementMgr>
  [ 70] pusharglist 1 ........................... <ElementMgr>
  [ 72] extcall 135 ............................. <voidp(ElementMgr)>
  [ 74] not ..................................... <not voidp(ElementMgr)>
  [ 75] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 78] getglobal 146 ........................... <ElementMgr>
  [ 80] getlocal 1 .............................. <iError>
  [ 82] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 84] objcall 35 .............................. ElementMgr.getDenizenByScreenName_Result(iError)
  [ 86] pusharglistnoret 0 ...................... <>
  [ 88] extcall 121 ............................. return 
  [ 90] pushzero ................................ <0>
  [ 91] setlocal 1 .............................. iError = 0
  [ 93] getparam 2 .............................. <oResult>
  [ 95] pusharglist 1 ........................... <oResult>
  [ 97] objcall 52 .............................. <oResult.getScreenName()>
  [ 99] setlocal 2 .............................. sScreenName = oResult.getScreenName()
  [101] getparam 0 .............................. <me>
  [103] pushcons 152 ............................ <"sScreenName: ">
  [105] getlocal 2 .............................. <sScreenName>
  [107] joinstr ................................. <"sScreenName: " & sScreenName>
  [108] pusharglistnoret 2 ...................... <me, "sScreenName: " & sScreenName>
  [110] objcall 4 ............................... me.debug("sScreenName: " & sScreenName)
  [112] getparam 2 .............................. <oResult>
  [114] pusharglist 1 ........................... <oResult>
  [116] objcall 231 ............................. <oResult.getLastAccess()>
  [118] setlocal 3 .............................. oLastAccess = oResult.getLastAccess()
  [120] getparam 0 .............................. <me>
  [122] pushcons 153 ............................ <"oLastAccess: ">
  [124] getlocal 3 .............................. <oLastAccess>
  [126] pusharglist 1 ........................... <oLastAccess>
  [128] objcall 202 ............................. <oLastAccess.toString()>
  [130] joinstr ................................. <"oLastAccess: " & oLastAccess.toString()>
  [131] pusharglistnoret 2 ...................... <me, "oLastAccess: " & oLastAccess.toString()>
  [133] objcall 4 ............................... me.debug("oLastAccess: " & oLastAccess.toString())
  [135] getparam 2 .............................. <oResult>
  [137] pusharglist 1 ........................... <oResult>
  [139] objcall 232 ............................. <oResult.getLastSeenIn()>
  [141] setlocal 4 .............................. sLastSeenIn = oResult.getLastSeenIn()
  [143] getparam 0 .............................. <me>
  [145] pushcons 154 ............................ <"sLastSeenIn: ">
  [147] getlocal 4 .............................. <sLastSeenIn>
  [149] joinstr ................................. <"sLastSeenIn: " & sLastSeenIn>
  [150] pusharglistnoret 2 ...................... <me, "sLastSeenIn: " & sLastSeenIn>
  [152] objcall 4 ............................... me.debug("sLastSeenIn: " & sLastSeenIn)
  [154] getparam 2 .............................. <oResult>
  [156] pusharglist 1 ........................... <oResult>
  [158] objcall 233 ............................. <oResult.getLastSeenInName()>
  [160] setlocal 5 .............................. sLastSeenInName = oResult.getLastSeenInName()
  [162] getparam 0 .............................. <me>
  [164] pushcons 155 ............................ <"sLastSeenInName: ">
  [166] getlocal 5 .............................. <sLastSeenInName>
  [168] joinstr ................................. <"sLastSeenInName: " & sLastSeenInName>
  [169] pusharglistnoret 2 ...................... <me, "sLastSeenInName: " & sLastSeenInName>
  [171] objcall 4 ............................... me.debug("sLastSeenInName: " & sLastSeenInName)
  [173] getparam 2 .............................. <oResult>
  [175] pusharglist 1 ........................... <oResult>
  [177] objcall 55 .............................. <oResult.getMissionStatement()>
  [179] setlocal 6 .............................. sAvatarMission = oResult.getMissionStatement()
  [181] getparam 0 .............................. <me>
  [183] pushcons 156 ............................ <"sAvatarMission: ">
  [185] getlocal 6 .............................. <sAvatarMission>
  [187] joinstr ................................. <"sAvatarMission: " & sAvatarMission>
  [188] pusharglistnoret 2 ...................... <me, "sAvatarMission: " & sAvatarMission>
  [190] objcall 4 ............................... me.debug("sAvatarMission: " & sAvatarMission)
  [192] getparam 2 .............................. <oResult>
  [194] pusharglist 1 ........................... <oResult>
  [196] objcall 234 ............................. <oResult.getAvatarDefinition()>
  [198] setlocal 7 .............................. sAvatarString = oResult.getAvatarDefinition()
  [200] getparam 0 .............................. <me>
  [202] pushcons 157 ............................ <"sAvatarString: ">
  [204] getlocal 7 .............................. <sAvatarString>
  [206] joinstr ................................. <"sAvatarString: " & sAvatarString>
  [207] pusharglistnoret 2 ...................... <me, "sAvatarString: " & sAvatarString>
  [209] objcall 4 ............................... me.debug("sAvatarString: " & sAvatarString)
  [211] getparam 2 .............................. <oResult>
  [213] pusharglist 1 ........................... <oResult>
  [215] objcall 235 ............................. <oResult.getGender()>
  [217] pusharglist 1 ........................... <oResult.getGender()>
  [219] objcall 224 ............................. <oResult.getGender().getOrdinal()>
  [221] setlocal 8 .............................. iGender = oResult.getGender().getOrdinal()
  [223] getparam 0 .............................. <me>
  [225] pushcons 158 ............................ <"iGender: ">
  [227] getlocal 8 .............................. <iGender>
  [229] joinstr ................................. <"iGender: " & iGender>
  [230] pusharglistnoret 2 ...................... <me, "iGender: " & iGender>
  [232] objcall 4 ............................... me.debug("iGender: " & iGender)
  [234] getparam 2 .............................. <oResult>
  [236] pusharglist 1 ........................... <oResult>
  [238] objcall 236 ............................. <oResult.getIsOnline()>
  [240] setlocal 9 .............................. bOnline = oResult.getIsOnline()
  [242] getparam 0 .............................. <me>
  [244] pushcons 159 ............................ <"bOnline: ">
  [246] getlocal 9 .............................. <bOnline>
  [248] joinstr ................................. <"bOnline: " & bOnline>
  [249] pusharglistnoret 2 ...................... <me, "bOnline: " & bOnline>
  [251] objcall 4 ............................... me.debug("bOnline: " & bOnline)
  [253] pushint8 1 .............................. <1>
  [255] setlocal 10 ............................. bExists = 1
  [257] getparam 0 .............................. <me>
  [259] pushcons 84 ............................. <"getDenizenByScreenName_Result()  screenName: ">
  [261] getlocal 2 .............................. <sScreenName>
  [263] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName>
  [264] pushcons 85 ............................. <", lastAccess: ">
  [266] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: ">
  [267] getlocal 3 .............................. <oLastAccess>
  [269] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess>
  [270] pushcons 160 ............................ <", lastSeenIn: ">
  [272] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: ">
  [273] getlocal 4 .............................. <sLastSeenIn>
  [275] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn>
  [276] pushcons 87 ............................. <", avatarMission: ">
  [278] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: ">
  [279] getlocal 6 .............................. <sAvatarMission>
  [281] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission>
  [282] pushcons 88 ............................. <", sAvatarString: ">
  [284] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: ">
  [285] getlocal 7 .............................. <sAvatarString>
  [287] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString>
  [288] pushcons 89 ............................. <", bOnline: ">
  [290] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: ">
  [291] getlocal 9 .............................. <bOnline>
  [293] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline>
  [294] pushcons 161 ............................ <", lastSeenInName: ">
  [296] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: ">
  [297] getlocal 5 .............................. <sLastSeenInName>
  [299] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName>
  [300] pushcons 162 ............................ <", Gender: ">
  [302] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: ">
  [303] getlocal 8 .............................. <iGender>
  [305] joinstr ................................. <"getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: " & iGender>
  [306] pusharglistnoret 2 ...................... <me, "getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: " & iGender>
  [308] objcall 4 ............................... me.debug("getDenizenByScreenName_Result()  screenName: " & sScreenName & ", lastAccess: " & oLastAccess & ", lastSeenIn: " & sLastSeenIn & ", avatarMission: " & sAvatarMission & ", sAvatarString: " & sAvatarString & ", bOnline: " & bOnline & ", lastSeenInName: " & sLastSeenInName & ", Gender: " & iGender)
  [310] getglobal 146 ........................... <ElementMgr>
  [312] pusharglist 1 ........................... <ElementMgr>
  [314] extcall 135 ............................. <voidp(ElementMgr)>
  [316] not ..................................... <not voidp(ElementMgr)>
  [317] jmpifz [346] ............................ if not voidp(ElementMgr) then
  [320] getglobal 146 ........................... <ElementMgr>
  [322] getlocal 1 .............................. <iError>
  [324] getlocal 2 .............................. <sScreenName>
  [326] getlocal 3 .............................. <oLastAccess>
  [328] getlocal 4 .............................. <sLastSeenIn>
  [330] getlocal 6 .............................. <sAvatarMission>
  [332] getlocal 7 .............................. <sAvatarString>
  [334] getlocal 9 .............................. <bOnline>
  [336] getlocal 10 ............................. <bExists>
  [338] getlocal 5 .............................. <sLastSeenInName>
  [340] getlocal 8 .............................. <iGender>
  [342] pusharglistnoret 11 ..................... <ElementMgr, iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender>
  [344] objcall 35 .............................. ElementMgr.getDenizenByScreenName_Result(iError, sScreenName, oLastAccess, sLastSeenIn, sAvatarMission, sAvatarString, bOnline, bExists, sLastSeenInName, iGender)
  [346] ret
end

on getDenizenBalance_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 163 ............................ <"getDenizenBalance_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getDenizenBalance_Result()">
  [  6] objcall 4 ............................... me.debug("getDenizenBalance_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] extcall 238 ............................. <integer(oResult)>
  [ 14] setlocal 0 .............................. resultData = integer(oResult)
  [ 16] getlocal 0 .............................. <resultData>
  [ 18] pusharglist 1 ........................... <resultData>
  [ 20] extcall 238 ............................. <integer(resultData)>
  [ 22] pusharglist 1 ........................... <integer(resultData)>
  [ 24] extcall 135 ............................. <voidp(integer(resultData))>
  [ 26] jmpifz [ 39] ............................ if voidp(integer(resultData)) then / else
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1 .............................. iError = 1
  [ 33] pushzero ................................ <0>
  [ 34] setlocal 2 .............................. iBalance = 0
  [ 36] jmp [ 50]
  [ 39] pushzero ................................ <0>
  [ 40] setlocal 1 .............................. iError = 0
  [ 42] getparam 2 .............................. <oResult>
  [ 44] pusharglist 1 ........................... <oResult>
  [ 46] extcall 238 ............................. <integer(oResult)>
  [ 48] setlocal 2 .............................. iBalance = integer(oResult)
  [ 50] getparam 0 .............................. <me>
  [ 52] pushcons 164 ............................ <"getDenizenBalance_Result() ">
  [ 54] getlocal 1 .............................. <iError>
  [ 56] joinstr ................................. <"getDenizenBalance_Result() " & iError>
  [ 57] getlocal 2 .............................. <iBalance>
  [ 59] joinpadstr .............................. <"getDenizenBalance_Result() " & iError && iBalance>
  [ 60] pusharglistnoret 2 ...................... <me, "getDenizenBalance_Result() " & iError && iBalance>
  [ 62] objcall 4 ............................... me.debug("getDenizenBalance_Result() " & iError && iBalance)
  [ 64] getglobal 146 ........................... <ElementMgr>
  [ 66] pusharglist 1 ........................... <ElementMgr>
  [ 68] extcall 135 ............................. <voidp(ElementMgr)>
  [ 70] not ..................................... <not voidp(ElementMgr)>
  [ 71] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 74] getglobal 146 ........................... <ElementMgr>
  [ 76] getlocal 1 .............................. <iError>
  [ 78] getlocal 2 .............................. <iBalance>
  [ 80] pusharglistnoret 3 ...................... <ElementMgr, iError, iBalance>
  [ 82] objcall 36 .............................. ElementMgr.getDenizenBalance_Result(iError, iBalance)
  [ 84] ret
end

on isModerator_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 165 ............................ <"isModerator_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "isModerator_Result()">
  [  6] objcall 4 ............................... me.debug("isModerator_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 2 .............................. <oResult>
  [ 18] pusharglist 1 ........................... <oResult>
  [ 20] objcall 223 ............................. <oResult.getTypeOf()>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 26] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 27] jmpifz [ 72] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 30] getparam 2 .............................. <oResult>
  [ 32] pusharglist 1 ........................... <oResult>
  [ 34] objcall 224 ............................. <oResult.getOrdinal()>
  [ 36] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 38] getlocal 1 .............................. <iError>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <iError = 0>
  [ 42] jmpifz [ 54] ............................ if iError = 0 then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 1 .............................. <1>
  [ 49] setobjprop 96 ........................... me.bIsModerator = 1
  [ 51] jmp [ 59]
  [ 54] getparam 0 .............................. <me>
  [ 56] pushzero ................................ <0>
  [ 57] setobjprop 96 ........................... me.bIsModerator = 0
  [ 59] getparam 0 .............................. <me>
  [ 61] pushcons 166 ............................ <"isModerator: ">
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 96 ........................... <me.bIsModerator>
  [ 67] joinstr ................................. <"isModerator: " & me.bIsModerator>
  [ 68] pusharglistnoret 2 ...................... <me, "isModerator: " & me.bIsModerator>
  [ 70] objcall 4 ............................... me.debug("isModerator: " & me.bIsModerator)
  [ 72] ret
end

on getModeratorsOnline_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 167 ............................ <"getModeratorsOnline_Result() ">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "getModeratorsOnline_Result() ", 1>
  [  8] objcall 4 ............................... me.debug("getModeratorsOnline_Result() ", 1)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 168 ............................ <"getModeratorsOnline_Result()">
  [ 14] getparam 2 .............................. <oResult>
  [ 16] pusharglist 1 ........................... <oResult>
  [ 18] objcall 202 ............................. <oResult.toString()>
  [ 20] joinstr ................................. <"getModeratorsOnline_Result()" & oResult.toString()>
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 3 ...................... <me, "getModeratorsOnline_Result()" & oResult.toString(), 1>
  [ 25] objcall 4 ............................... me.debug("getModeratorsOnline_Result()" & oResult.toString(), 1)
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setlocal 0 .............................. aMods = []
  [ 32] getparam 2 .............................. <oResult>
  [ 34] getobjprop 240 .......................... <oResult.length>
  [ 36] setlocal 1 .............................. iLength = oResult.length
  [ 38] getlocal 1 .............................. <iLength>
  [ 40] pushzero ................................ <0>
  [ 41] gt ...................................... <iLength > 0>
  [ 42] jmpifz [ 86] ............................ if iLength > 0 then
  [ 45] pushzero ................................ <0>
  [ 46] setlocal 2
  [ 48] getlocal 2
  [ 50] getlocal 1 .............................. <iLength>
  [ 52] pushint8 1 .............................. <1>
  [ 54] sub ..................................... <iLength - 1>
  [ 55] lteq
  [ 56] jmpifz [ 86] ............................ repeat with i = 0 to iLength - 1
  [ 59] getparam 2 .............................. <oResult>
  [ 61] getlocal 2 .............................. <i>
  [ 63] pusharglist 2 ........................... <oResult, i>
  [ 65] objcall 163 ............................. <oResult[i]>
  [ 67] setlocal 3 .............................. sMod = oResult[i]
  [ 69] getlocal 0 .............................. <aMods>
  [ 71] getlocal 3 .............................. <sMod>
  [ 73] pusharglistnoret 2 ...................... <aMods, sMod>
  [ 75] objcall 241 ............................. aMods.add(sMod)
  [ 77] pushint8 1
  [ 79] getlocal 2
  [ 81] add
  [ 82] setlocal 2
  [ 84] endrepeat [ 48]
  [ 86] getparam 0 .............................. <me>
  [ 88] pushcons 169 ............................ <"getModeratorsOnline_Result() aMods: ">
  [ 90] getlocal 0 .............................. <aMods>
  [ 92] joinstr ................................. <"getModeratorsOnline_Result() aMods: " & aMods>
  [ 93] pushint8 1 .............................. <1>
  [ 95] pusharglistnoret 3 ...................... <me, "getModeratorsOnline_Result() aMods: " & aMods, 1>
  [ 97] objcall 4 ............................... me.debug("getModeratorsOnline_Result() aMods: " & aMods, 1)
  [ 99] getglobal 146 ........................... <ElementMgr>
  [101] getlocal 0 .............................. <aMods>
  [103] pusharglistnoret 2 ...................... <ElementMgr, aMods>
  [105] objcall 38 .............................. ElementMgr.getModeratorsOnline_Result(aMods)
  [107] ret
end

on getOnlineFriends_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 97 ............................. <"getOnlineFriends_Result() ">
  [  4] getparam 2 .............................. <oResult>
  [  6] joinstr ................................. <"getOnlineFriends_Result() " & oResult>
  [  7] pusharglistnoret 2 ...................... <me, "getOnlineFriends_Result() " & oResult>
  [  9] objcall 4 ............................... me.debug("getOnlineFriends_Result() " & oResult)
  [ 11] getparam 2 .............................. <oResult>
  [ 13] getobjprop 240 .......................... <oResult.length>
  [ 15] setlocal 0 .............................. iLength = oResult.length
  [ 17] getparam 0 .............................. <me>
  [ 19] pushcons 170 ............................ <"iLength: ">
  [ 21] getlocal 0 .............................. <iLength>
  [ 23] joinstr ................................. <"iLength: " & iLength>
  [ 24] pusharglistnoret 2 ...................... <me, "iLength: " & iLength>
  [ 26] objcall 4 ............................... me.debug("iLength: " & iLength)
  [ 28] getparam 2 .............................. <oResult>
  [ 30] setlocal 1 .............................. faFriends = oResult
  [ 32] pusharglist 0 ........................... <[]>
  [ 34] pushlist ................................ <[]>
  [ 35] setlocal 2 .............................. aFriends = []
  [ 37] getlocal 1 .............................. <faFriends>
  [ 39] pusharglist 1 ........................... <faFriends>
  [ 41] extcall 135 ............................. <voidp(faFriends)>
  [ 43] not ..................................... <not voidp(faFriends)>
  [ 44] getlocal 1 .............................. <faFriends>
  [ 46] pusharglist 0 ........................... <>
  [ 48] extcall 91 .............................. <VOID>
  [ 50] nteq .................................... <faFriends <> VOID>
  [ 51] and ..................................... <not voidp(faFriends) and (faFriends <> VOID)>
  [ 52] jmpifz [144] ............................ if not voidp(faFriends) and (faFriends <> VOID) then
  [ 55] pushzero ................................ <0>
  [ 56] setlocal 3
  [ 58] getlocal 3
  [ 60] getlocal 1 .............................. <faFriends>
  [ 62] getobjprop 240 .......................... <faFriends.length>
  [ 64] pushint8 1 .............................. <1>
  [ 66] sub ..................................... <faFriends.length - 1>
  [ 67] lteq
  [ 68] jmpifz [144] ............................ repeat with i = 0 to faFriends.length - 1
  [ 71] getlocal 1 .............................. <faFriends>
  [ 73] getlocal 3 .............................. <i>
  [ 75] pusharglist 2 ........................... <faFriends, i>
  [ 77] objcall 163 ............................. <faFriends[i]>
  [ 79] setlocal 4 .............................. oFriend = faFriends[i]
  [ 81] getparam 0 .............................. <me>
  [ 83] getlocal 4 .............................. <oFriend>
  [ 85] pusharglist 2 ........................... <me, oFriend>
  [ 87] objcall 62 .............................. <me.getDenizenPropList(oFriend)>
  [ 89] setlocal 5 .............................. aFriend = me.getDenizenPropList(oFriend)
  [ 91] getlocal 5 .............................. <aFriend>
  [ 93] pushsymb 246 ............................ <#screenName>
  [ 95] pusharglist 2 ........................... <aFriend, #screenName>
  [ 97] objcall 163 ............................. <aFriend[#screenName]>
  [ 99] pusharglist 1 ........................... <aFriend[#screenName]>
  [101] extcall 135 ............................. <voidp(aFriend[#screenName])>
  [103] jmpifz [109] ............................ if voidp(aFriend[#screenName]) then
  [106] jmp [135] ............................... next repeat
  [109] getlocal 5 .............................. <aFriend>
  [111] pushsymb 247 ............................ <#messagesFrom>
  [113] getlocal 4 .............................. <oFriend>
  [115] pusharglist 1 ........................... <oFriend>
  [117] objcall 248 ............................. <oFriend.getMessagesFrom()>
  [119] pusharglist 1 ........................... <oFriend.getMessagesFrom()>
  [121] extcall 238 ............................. <integer(oFriend.getMessagesFrom())>
  [123] pusharglistnoret 3 ...................... <aFriend, #messagesFrom, integer(oFriend.getMessagesFrom())>
  [125] objcall 249 ............................. aFriend[#messagesFrom] = integer(oFriend.getMessagesFrom())
  [127] getlocal 2 .............................. <aFriends>
  [129] getlocal 5 .............................. <aFriend>
  [131] pusharglistnoret 2 ...................... <aFriends, aFriend>
  [133] objcall 241 ............................. aFriends.add(aFriend)
  [135] pushint8 1
  [137] getlocal 3
  [139] add
  [140] setlocal 3
  [142] endrepeat [ 58]
  [144] getparam 0 .............................. <me>
  [146] pushcons 171 ............................ <"aFriends: ">
  [148] getlocal 2 .............................. <aFriends>
  [150] joinstr ................................. <"aFriends: " & aFriends>
  [151] pusharglistnoret 2 ...................... <me, "aFriends: " & aFriends>
  [153] objcall 4 ............................... me.debug("aFriends: " & aFriends)
  [155] getglobal 146 ........................... <ElementMgr>
  [157] pusharglist 1 ........................... <ElementMgr>
  [159] objcall 250 ............................. <ElementMgr.getMessengerObject()>
  [161] getlocal 2 .............................. <aFriends>
  [163] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), aFriends>
  [165] objcall 251 ............................. ElementMgr.getMessengerObject().updateFriendsStatus(aFriends)
  [167] ret
end

on getMessenger2_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 172 ............................ <"getMessenger2_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getMessenger2_Result()">
  [  6] objcall 4 ............................... me.debug("getMessenger2_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 66] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 173 ............................ <"getMessenger_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getMessenger_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getMessenger_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("getMessenger_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 62] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglist 0 ........................... <[:]>
  [ 57] pushproplist ............................ <[:]>
  [ 58] pusharglistnoret 3 ...................... <ElementMgr, iError, [:]>
  [ 60] objcall 171 ............................. ElementMgr.getMessenger_Result(iError, [:])
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 121 ............................. return 
  [ 66] pushzero ................................ <0>
  [ 67] setlocal 0 .............................. iError = 0
  [ 69] getparam 2 .............................. <oResult>
  [ 71] pusharglist 1 ........................... <oResult>
  [ 73] objcall 255 ............................. <oResult.getTotalEnemyCount()>
  [ 75] pusharglist 1 ........................... <oResult.getTotalEnemyCount()>
  [ 77] extcall 238 ............................. <integer(oResult.getTotalEnemyCount())>
  [ 79] setlocal 1 .............................. iEnemyCount = integer(oResult.getTotalEnemyCount())
  [ 81] getparam 2 .............................. <oResult>
  [ 83] pusharglist 1 ........................... <oResult>
  [ 85] objcall 256 ............................. <oResult.getTotalFriendCount()>
  [ 88] pusharglist 1 ........................... <oResult.getTotalFriendCount()>
  [ 90] extcall 238 ............................. <integer(oResult.getTotalFriendCount())>
  [ 92] setlocal 2 .............................. iFriendCount = integer(oResult.getTotalFriendCount())
  [ 94] getparam 2 .............................. <oResult>
  [ 96] pusharglist 1 ........................... <oResult>
  [ 98] objcall 257 ............................. <oResult.getTotalInviteCount()>
  [101] pusharglist 1 ........................... <oResult.getTotalInviteCount()>
  [103] extcall 238 ............................. <integer(oResult.getTotalInviteCount())>
  [105] setlocal 3 .............................. iInviteCount = integer(oResult.getTotalInviteCount())
  [107] getparam 2 .............................. <oResult>
  [109] pusharglist 1 ........................... <oResult>
  [111] objcall 258 ............................. <oResult.getTotalMessageCount()>
  [114] pusharglist 1 ........................... <oResult.getTotalMessageCount()>
  [116] extcall 238 ............................. <integer(oResult.getTotalMessageCount())>
  [118] setlocal 4 .............................. iTotalMessageCount = integer(oResult.getTotalMessageCount())
  [120] getparam 0 .............................. <me>
  [122] pushcons 174 ............................ <"iEnemyCount: ">
  [124] getlocal 1 .............................. <iEnemyCount>
  [126] joinstr ................................. <"iEnemyCount: " & iEnemyCount>
  [127] pusharglistnoret 2 ...................... <me, "iEnemyCount: " & iEnemyCount>
  [129] objcall 4 ............................... me.debug("iEnemyCount: " & iEnemyCount)
  [131] getparam 0 .............................. <me>
  [133] pushcons 175 ............................ <"iFriendCount: ">
  [135] getlocal 2 .............................. <iFriendCount>
  [137] joinstr ................................. <"iFriendCount: " & iFriendCount>
  [138] pusharglistnoret 2 ...................... <me, "iFriendCount: " & iFriendCount>
  [140] objcall 4 ............................... me.debug("iFriendCount: " & iFriendCount)
  [142] getparam 0 .............................. <me>
  [144] pushcons 176 ............................ <"iInviteCount: ">
  [146] getlocal 3 .............................. <iInviteCount>
  [148] joinstr ................................. <"iInviteCount: " & iInviteCount>
  [149] pusharglistnoret 2 ...................... <me, "iInviteCount: " & iInviteCount>
  [151] objcall 4 ............................... me.debug("iInviteCount: " & iInviteCount)
  [153] getparam 0 .............................. <me>
  [155] pushcons 177 ............................ <"iTotalMessageCount: ">
  [157] getlocal 4 .............................. <iTotalMessageCount>
  [159] joinstr ................................. <"iTotalMessageCount: " & iTotalMessageCount>
  [160] pusharglistnoret 2 ...................... <me, "iTotalMessageCount: " & iTotalMessageCount>
  [162] objcall 4 ............................... me.debug("iTotalMessageCount: " & iTotalMessageCount)
  [164] pusharglist 0 ........................... <[]>
  [166] pushlist ................................ <[]>
  [167] setlocal 5 .............................. aEnemies = []
  [169] getparam 2 .............................. <oResult>
  [171] pusharglist 1 ........................... <oResult>
  [173] objcall 259 ............................. <oResult.getFriends()>
  [176] setlocal 6 .............................. faFriends = oResult.getFriends()
  [178] pusharglist 0 ........................... <[]>
  [180] pushlist ................................ <[]>
  [181] setlocal 7 .............................. aFriends = []
  [183] getlocal 6 .............................. <faFriends>
  [185] pusharglist 1 ........................... <faFriends>
  [187] extcall 135 ............................. <voidp(faFriends)>
  [189] not ..................................... <not voidp(faFriends)>
  [190] getlocal 6 .............................. <faFriends>
  [192] pusharglist 0 ........................... <>
  [194] extcall 91 .............................. <VOID>
  [196] nteq .................................... <faFriends <> VOID>
  [197] and ..................................... <not voidp(faFriends) and (faFriends <> VOID)>
  [198] jmpifz [290] ............................ if not voidp(faFriends) and (faFriends <> VOID) then
  [201] pushzero ................................ <0>
  [202] setlocal 8
  [204] getlocal 8
  [206] getlocal 6 .............................. <faFriends>
  [208] getobjprop 240 .......................... <faFriends.length>
  [210] pushint8 1 .............................. <1>
  [212] sub ..................................... <faFriends.length - 1>
  [213] lteq
  [214] jmpifz [290] ............................ repeat with i = 0 to faFriends.length - 1
  [217] getlocal 6 .............................. <faFriends>
  [219] getlocal 8 .............................. <i>
  [221] pusharglist 2 ........................... <faFriends, i>
  [223] objcall 163 ............................. <faFriends[i]>
  [225] setlocal 9 .............................. oFriend = faFriends[i]
  [227] getparam 0 .............................. <me>
  [229] getlocal 9 .............................. <oFriend>
  [231] pusharglist 2 ........................... <me, oFriend>
  [233] objcall 62 .............................. <me.getDenizenPropList(oFriend)>
  [235] setlocal 10 ............................. aFriend = me.getDenizenPropList(oFriend)
  [237] getlocal 10 ............................. <aFriend>
  [239] pushsymb 246 ............................ <#screenName>
  [241] pusharglist 2 ........................... <aFriend, #screenName>
  [243] objcall 163 ............................. <aFriend[#screenName]>
  [245] pusharglist 1 ........................... <aFriend[#screenName]>
  [247] extcall 135 ............................. <voidp(aFriend[#screenName])>
  [249] jmpifz [255] ............................ if voidp(aFriend[#screenName]) then
  [252] jmp [281] ............................... next repeat
  [255] getlocal 10 ............................. <aFriend>
  [257] pushsymb 247 ............................ <#messagesFrom>
  [259] getlocal 9 .............................. <oFriend>
  [261] pusharglist 1 ........................... <oFriend>
  [263] objcall 248 ............................. <oFriend.getMessagesFrom()>
  [265] pusharglist 1 ........................... <oFriend.getMessagesFrom()>
  [267] extcall 238 ............................. <integer(oFriend.getMessagesFrom())>
  [269] pusharglistnoret 3 ...................... <aFriend, #messagesFrom, integer(oFriend.getMessagesFrom())>
  [271] objcall 249 ............................. aFriend[#messagesFrom] = integer(oFriend.getMessagesFrom())
  [273] getlocal 7 .............................. <aFriends>
  [275] getlocal 10 ............................. <aFriend>
  [277] pusharglistnoret 2 ...................... <aFriends, aFriend>
  [279] objcall 241 ............................. aFriends.add(aFriend)
  [281] pushint8 1
  [283] getlocal 8
  [285] add
  [286] setlocal 8
  [288] endrepeat [204]
  [290] getparam 0 .............................. <me>
  [292] pushcons 171 ............................ <"aFriends: ">
  [294] getlocal 7 .............................. <aFriends>
  [296] joinstr ................................. <"aFriends: " & aFriends>
  [297] pusharglistnoret 2 ...................... <me, "aFriends: " & aFriends>
  [299] objcall 4 ............................... me.debug("aFriends: " & aFriends)
  [301] getparam 2 .............................. <oResult>
  [303] pusharglist 1 ........................... <oResult>
  [305] objcall 260 ............................. <oResult.getInvites()>
  [308] setlocal 11 ............................. faInvites = oResult.getInvites()
  [310] pusharglist 0 ........................... <[]>
  [312] pushlist ................................ <[]>
  [313] setlocal 12 ............................. aInvites = []
  [315] getlocal 11 ............................. <faInvites>
  [317] pusharglist 1 ........................... <faInvites>
  [319] extcall 135 ............................. <voidp(faInvites)>
  [321] not ..................................... <not voidp(faInvites)>
  [322] getlocal 11 ............................. <faInvites>
  [324] pusharglist 0 ........................... <>
  [326] extcall 91 .............................. <VOID>
  [328] nteq .................................... <faInvites <> VOID>
  [329] and ..................................... <not voidp(faInvites) and (faInvites <> VOID)>
  [330] jmpifz [404] ............................ if not voidp(faInvites) and (faInvites <> VOID) then
  [333] pushzero ................................ <0>
  [334] setlocal 8
  [336] getlocal 8
  [338] getlocal 11 ............................. <faInvites>
  [340] getobjprop 240 .......................... <faInvites.length>
  [342] pushint8 1 .............................. <1>
  [344] sub ..................................... <faInvites.length - 1>
  [345] lteq
  [346] jmpifz [404] ............................ repeat with i = 0 to faInvites.length - 1
  [349] getlocal 11 ............................. <faInvites>
  [351] getlocal 8 .............................. <i>
  [353] pusharglist 2 ........................... <faInvites, i>
  [355] objcall 163 ............................. <faInvites[i]>
  [357] setlocal 13 ............................. oDenizen = faInvites[i]
  [359] getparam 0 .............................. <me>
  [361] getlocal 13 ............................. <oDenizen>
  [363] pusharglist 2 ........................... <me, oDenizen>
  [365] objcall 62 .............................. <me.getDenizenPropList(oDenizen)>
  [367] setlocal 14 ............................. aDenizen = me.getDenizenPropList(oDenizen)
  [369] getlocal 14 ............................. <aDenizen>
  [371] pushsymb 246 ............................ <#screenName>
  [373] pusharglist 2 ........................... <aDenizen, #screenName>
  [375] objcall 163 ............................. <aDenizen[#screenName]>
  [377] pusharglist 1 ........................... <aDenizen[#screenName]>
  [379] extcall 135 ............................. <voidp(aDenizen[#screenName])>
  [381] jmpifz [387] ............................ if voidp(aDenizen[#screenName]) then
  [384] jmp [395] ............................... next repeat
  [387] getlocal 12 ............................. <aInvites>
  [389] getlocal 14 ............................. <aDenizen>
  [391] pusharglistnoret 2 ...................... <aInvites, aDenizen>
  [393] objcall 241 ............................. aInvites.add(aDenizen)
  [395] pushint8 1
  [397] getlocal 8
  [399] add
  [400] setlocal 8
  [402] endrepeat [336]
  [404] getparam 0 .............................. <me>
  [406] pushcons 178 ............................ <"aInvites: ">
  [408] getlocal 12 ............................. <aInvites>
  [410] joinstr ................................. <"aInvites: " & aInvites>
  [411] pusharglistnoret 2 ...................... <me, "aInvites: " & aInvites>
  [413] objcall 4 ............................... me.debug("aInvites: " & aInvites)
  [415] getparam 2 .............................. <oResult>
  [417] pusharglist 1 ........................... <oResult>
  [419] objcall 261 ............................. <oResult.getMessages()>
  [422] setlocal 15 ............................. faMessages = oResult.getMessages()
  [424] pusharglist 0 ........................... <[]>
  [426] pushlist ................................ <[]>
  [427] setlocal 16 ............................. aMessages = []
  [429] getlocal 15 ............................. <faMessages>
  [431] pusharglist 1 ........................... <faMessages>
  [433] extcall 135 ............................. <voidp(faMessages)>
  [435] not ..................................... <not voidp(faMessages)>
  [436] getlocal 15 ............................. <faMessages>
  [438] pusharglist 0 ........................... <>
  [440] extcall 91 .............................. <VOID>
  [442] nteq .................................... <faMessages <> VOID>
  [443] and ..................................... <not voidp(faMessages) and (faMessages <> VOID)>
  [444] jmpifz [519] ............................ if not voidp(faMessages) and (faMessages <> VOID) then
  [447] pushzero ................................ <0>
  [448] setlocal 8
  [450] getlocal 8
  [452] getlocal 15 ............................. <faMessages>
  [454] getobjprop 240 .......................... <faMessages.length>
  [456] pushint8 1 .............................. <1>
  [458] sub ..................................... <faMessages.length - 1>
  [459] lteq
  [460] jmpifz [519] ............................ repeat with i = 0 to faMessages.length - 1
  [463] getlocal 15 ............................. <faMessages>
  [465] getlocal 8 .............................. <i>
  [467] pusharglist 2 ........................... <faMessages, i>
  [469] objcall 163 ............................. <faMessages[i]>
  [471] setlocal 17 ............................. oMessage = faMessages[i]
  [473] getparam 0 .............................. <me>
  [475] getlocal 17 ............................. <oMessage>
  [477] pusharglist 2 ........................... <me, oMessage>
  [479] objcall 61 .............................. <me.getMessagePropList(oMessage)>
  [481] setlocal 18 ............................. aMessage = me.getMessagePropList(oMessage)
  [483] getlocal 18 ............................. <aMessage>
  [485] pushsymb 262 ............................ <#recipient>
  [488] pusharglist 2 ........................... <aMessage, #recipient>
  [490] objcall 163 ............................. <aMessage[#recipient]>
  [492] pusharglist 1 ........................... <aMessage[#recipient]>
  [494] extcall 135 ............................. <voidp(aMessage[#recipient])>
  [496] jmpifz [502] ............................ if voidp(aMessage[#recipient]) then
  [499] jmp [510] ............................... next repeat
  [502] getlocal 16 ............................. <aMessages>
  [504] getlocal 18 ............................. <aMessage>
  [506] pusharglistnoret 2 ...................... <aMessages, aMessage>
  [508] objcall 241 ............................. aMessages.add(aMessage)
  [510] pushint8 1
  [512] getlocal 8
  [514] add
  [515] setlocal 8
  [517] endrepeat [450]
  [519] getparam 0 .............................. <me>
  [521] pushcons 179 ............................ <"aMessages: ">
  [523] getlocal 16 ............................. <aMessages>
  [525] joinstr ................................. <"aMessages: " & aMessages>
  [526] pusharglistnoret 2 ...................... <me, "aMessages: " & aMessages>
  [528] objcall 4 ............................... me.debug("aMessages: " & aMessages)
  [530] getglobal 146 ........................... <ElementMgr>
  [532] pusharglist 1 ........................... <ElementMgr>
  [534] extcall 135 ............................. <voidp(ElementMgr)>
  [536] not ..................................... <not voidp(ElementMgr)>
  [537] jmpifz [564] ............................ if not voidp(ElementMgr) then
  [540] getglobal 146 ........................... <ElementMgr>
  [542] getlocal 0 .............................. <iError>
  [544] getlocal 2 .............................. <iFriendCount>
  [546] getlocal 1 .............................. <iEnemyCount>
  [548] getlocal 3 .............................. <iInviteCount>
  [550] getlocal 4 .............................. <iTotalMessageCount>
  [552] getlocal 7 .............................. <aFriends>
  [554] getlocal 5 .............................. <aEnemies>
  [556] getlocal 12 ............................. <aInvites>
  [558] getlocal 16 ............................. <aMessages>
  [560] pusharglistnoret 10 ..................... <ElementMgr, iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages>
  [562] objcall 171 ............................. ElementMgr.getMessenger_Result(iError, iFriendCount, iEnemyCount, iInviteCount, iTotalMessageCount, aFriends, aEnemies, aInvites, aMessages)
  [564] ret
end

on sendMessage_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 180 ............................ <"sendMessage_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "sendMessage_Result()">
  [  6] objcall 4 ............................... me.debug("sendMessage_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 181 ............................ <"sendMessage_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"sendMessage_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "sendMessage_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("sendMessage_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 41 .............................. ElementMgr.sendMessage_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] pushzero ................................ <0>
  [ 64] setlocal 0 .............................. iError = 0
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] extcall 135 ............................. <voidp(ElementMgr)>
  [ 72] not ..................................... <not voidp(ElementMgr)>
  [ 73] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 76] getglobal 146 ........................... <ElementMgr>
  [ 78] getlocal 0 .............................. <iError>
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 82] objcall 41 .............................. ElementMgr.sendMessage_Result(iError)
  [ 84] ret
end

on removeMessage_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 182 ............................ <"removeMessage_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "removeMessage_Result()">
  [  6] objcall 4 ............................... me.debug("removeMessage_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 183 ............................ <"removeMessage_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"removeMessage_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "removeMessage_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("removeMessage_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 42 .............................. ElementMgr.removeMessage_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] pushzero ................................ <0>
  [ 64] setlocal 0 .............................. iError = 0
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] extcall 135 ............................. <voidp(ElementMgr)>
  [ 72] not ..................................... <not voidp(ElementMgr)>
  [ 73] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 76] getglobal 146 ........................... <ElementMgr>
  [ 78] getlocal 0 .............................. <iError>
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 82] objcall 42 .............................. ElementMgr.removeMessage_Result(iError)
  [ 84] ret
end

on rejectInvitation_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 184 ............................ <"rejectInvitation_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "rejectInvitation_Result()">
  [  6] objcall 4 ............................... me.debug("rejectInvitation_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 185 ............................ <"rejectInvitation_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"rejectInvitation_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "rejectInvitation_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("rejectInvitation_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 43 .............................. ElementMgr.rejectInvitation_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] pushzero ................................ <0>
  [ 64] setlocal 0 .............................. iError = 0
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] extcall 135 ............................. <voidp(ElementMgr)>
  [ 72] not ..................................... <not voidp(ElementMgr)>
  [ 73] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 76] getglobal 146 ........................... <ElementMgr>
  [ 78] getlocal 0 .............................. <iError>
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 82] objcall 43 .............................. ElementMgr.rejectInvitation_Result(iError)
  [ 84] ret
end

on acceptInvitation_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 186 ............................ <"acceptInvitation_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "acceptInvitation_Result()">
  [  6] objcall 4 ............................... me.debug("acceptInvitation_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 187 ............................ <"acceptInvitation_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"acceptInvitation_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "acceptInvitation_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("acceptInvitation_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 44 .............................. ElementMgr.acceptInvitation_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] pushzero ................................ <0>
  [ 64] setlocal 0 .............................. iError = 0
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] extcall 135 ............................. <voidp(ElementMgr)>
  [ 72] not ..................................... <not voidp(ElementMgr)>
  [ 73] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 76] getglobal 146 ........................... <ElementMgr>
  [ 78] getlocal 0 .............................. <iError>
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 82] objcall 44 .............................. ElementMgr.acceptInvitation_Result(iError)
  [ 84] ret
end

on inviteFriend_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 188 ............................ <"inviteFriend_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "inviteFriend_Result()">
  [  6] objcall 4 ............................... me.debug("inviteFriend_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 189 ............................ <"inviteFriend_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"inviteFriend_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "inviteFriend_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("inviteFriend_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 45 .............................. ElementMgr.inviteFriend_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] pushzero ................................ <0>
  [ 64] setlocal 0 .............................. iError = 0
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] extcall 135 ............................. <voidp(ElementMgr)>
  [ 72] not ..................................... <not voidp(ElementMgr)>
  [ 73] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 76] getglobal 146 ........................... <ElementMgr>
  [ 78] getlocal 0 .............................. <iError>
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 82] objcall 45 .............................. ElementMgr.inviteFriend_Result(iError)
  [ 84] ret
end

on removeFriends_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 190 ............................ <"removeFriends_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "removeFriends_Result()">
  [  6] objcall 4 ............................... me.debug("removeFriends_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 63] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 224 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 191 ............................ <"removeFriend_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"removeFriend_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "removeFriend_Result() ERROR " & iError>
  [ 39] objcall 4 ............................... me.debug("removeFriend_Result() ERROR " & iError)
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pusharglist 1 ........................... <ElementMgr>
  [ 45] extcall 135 ............................. <voidp(ElementMgr)>
  [ 47] not ..................................... <not voidp(ElementMgr)>
  [ 48] jmpifz [ 59] ............................ if not voidp(ElementMgr) then
  [ 51] getglobal 146 ........................... <ElementMgr>
  [ 53] getlocal 0 .............................. <iError>
  [ 55] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 57] objcall 46 .............................. ElementMgr.removeFriends_Result(iError)
  [ 59] pusharglistnoret 0 ...................... <>
  [ 61] extcall 121 ............................. return 
  [ 63] pushzero ................................ <0>
  [ 64] setlocal 0 .............................. iError = 0
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pusharglist 1 ........................... <ElementMgr>
  [ 70] extcall 135 ............................. <voidp(ElementMgr)>
  [ 72] not ..................................... <not voidp(ElementMgr)>
  [ 73] jmpifz [ 84] ............................ if not voidp(ElementMgr) then
  [ 76] getglobal 146 ........................... <ElementMgr>
  [ 78] getlocal 0 .............................. <iError>
  [ 80] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 82] objcall 46 .............................. ElementMgr.removeFriends_Result(iError)
  [ 84] ret
end

on getExtendedDenizenInfo_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 192 ............................ <"getExtendedDenizenInfo_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result()">
  [  6] objcall 4 ............................... me.debug("getExtendedDenizenInfo_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 149 ............................ <"sErrorType: ">
  [ 20] getlocal 0 .............................. <sErrorType>
  [ 22] joinstr ................................. <"sErrorType: " & sErrorType>
  [ 23] pusharglistnoret 2 ...................... <me, "sErrorType: " & sErrorType>
  [ 25] objcall 4 ............................... me.debug("sErrorType: " & sErrorType)
  [ 27] getparam 2 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 223 ............................. <oResult.getTypeOf()>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 37] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 38] jmpifz [ 90] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 150 ............................ <"error">
  [ 45] pusharglistnoret 2 ...................... <me, "error">
  [ 47] objcall 4 ............................... me.debug("error")
  [ 49] getparam 2 .............................. <oResult>
  [ 51] pusharglist 1 ........................... <oResult>
  [ 53] objcall 224 ............................. <oResult.getOrdinal()>
  [ 55] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 57] getparam 0 .............................. <me>
  [ 59] pushcons 193 ............................ <"getExtendedDenizenInfo_Result() ERROR ">
  [ 61] getlocal 1 .............................. <iError>
  [ 63] joinstr ................................. <"getExtendedDenizenInfo_Result() ERROR " & iError>
  [ 64] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result() ERROR " & iError>
  [ 66] objcall 4 ............................... me.debug("getExtendedDenizenInfo_Result() ERROR " & iError)
  [ 68] getglobal 146 ........................... <ElementMgr>
  [ 70] pusharglist 1 ........................... <ElementMgr>
  [ 72] extcall 135 ............................. <voidp(ElementMgr)>
  [ 74] not ..................................... <not voidp(ElementMgr)>
  [ 75] jmpifz [ 86] ............................ if not voidp(ElementMgr) then
  [ 78] getglobal 146 ........................... <ElementMgr>
  [ 80] getlocal 1 .............................. <iError>
  [ 82] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 84] objcall 47 .............................. ElementMgr.getExtendedDenizenInfo_Result(iError)
  [ 86] pusharglistnoret 0 ...................... <>
  [ 88] extcall 121 ............................. return 
  [ 90] pushzero ................................ <0>
  [ 91] setlocal 1 .............................. iError = 0
  [ 93] getparam 2 .............................. <oResult>
  [ 95] pusharglist 1 ........................... <oResult>
  [ 97] objcall 52 .............................. <oResult.getScreenName()>
  [ 99] setlocal 2 .............................. sScreenName = oResult.getScreenName()
  [101] getparam 0 .............................. <me>
  [103] pushcons 152 ............................ <"sScreenName: ">
  [105] getlocal 2 .............................. <sScreenName>
  [107] joinstr ................................. <"sScreenName: " & sScreenName>
  [108] pusharglistnoret 2 ...................... <me, "sScreenName: " & sScreenName>
  [110] objcall 4 ............................... me.debug("sScreenName: " & sScreenName)
  [112] getparam 2 .............................. <oResult>
  [114] pusharglist 1 ........................... <oResult>
  [116] objcall 55 .............................. <oResult.getMissionStatement()>
  [118] setlocal 3 .............................. sAvatarMission = oResult.getMissionStatement()
  [120] getparam 0 .............................. <me>
  [122] pushcons 156 ............................ <"sAvatarMission: ">
  [124] getlocal 3 .............................. <sAvatarMission>
  [126] joinstr ................................. <"sAvatarMission: " & sAvatarMission>
  [127] pusharglistnoret 2 ...................... <me, "sAvatarMission: " & sAvatarMission>
  [129] objcall 4 ............................... me.debug("sAvatarMission: " & sAvatarMission)
  [131] getparam 2 .............................. <oResult>
  [133] pusharglist 1 ........................... <oResult>
  [135] objcall 269 ............................. <oResult.getLevelList()>
  [138] setlocal 4 .............................. aLevelList = oResult.getLevelList()
  [140] getparam 0 .............................. <me>
  [142] pushcons 194 ............................ <"aLevelList: ">
  [144] getlocal 4 .............................. <aLevelList>
  [146] joinstr ................................. <"aLevelList: " & aLevelList>
  [147] pusharglistnoret 2 ...................... <me, "aLevelList: " & aLevelList>
  [149] objcall 4 ............................... me.debug("aLevelList: " & aLevelList)
  [151] getparam 2 .............................. <oResult>
  [153] pusharglist 1 ........................... <oResult>
  [155] objcall 270 ............................. <oResult.getPossessions_purchased()>
  [158] setlocal 5 .............................. iPossessions_purchased = oResult.getPossessions_purchased()
  [160] getparam 0 .............................. <me>
  [162] pushcons 195 ............................ <"iPossessions_purchased: ">
  [164] getlocal 5 .............................. <iPossessions_purchased>
  [166] joinstr ................................. <"iPossessions_purchased: " & iPossessions_purchased>
  [167] pusharglistnoret 2 ...................... <me, "iPossessions_purchased: " & iPossessions_purchased>
  [169] objcall 4 ............................... me.debug("iPossessions_purchased: " & iPossessions_purchased)
  [171] getparam 2 .............................. <oResult>
  [173] pusharglist 1 ........................... <oResult>
  [175] objcall 271 ............................. <oResult.getPossessions_total()>
  [178] setlocal 6 .............................. iPossessions_total = oResult.getPossessions_total()
  [180] getparam 0 .............................. <me>
  [182] pushcons 196 ............................ <"iPossessions_total: ">
  [184] getlocal 6 .............................. <iPossessions_total>
  [186] joinstr ................................. <"iPossessions_total: " & iPossessions_total>
  [187] pusharglistnoret 2 ...................... <me, "iPossessions_total: " & iPossessions_total>
  [189] objcall 4 ............................... me.debug("iPossessions_total: " & iPossessions_total)
  [191] getparam 2 .............................. <oResult>
  [193] pusharglist 1 ........................... <oResult>
  [195] objcall 272 ............................. <oResult.getPossessions_backpack()>
  [198] setlocal 7 .............................. iPossessions_backpack = oResult.getPossessions_backpack()
  [200] getparam 0 .............................. <me>
  [202] pushcons 197 ............................ <"iPossessions_backpack: ">
  [204] getlocal 7 .............................. <iPossessions_backpack>
  [206] joinstr ................................. <"iPossessions_backpack: " & iPossessions_backpack>
  [207] pusharglistnoret 2 ...................... <me, "iPossessions_backpack: " & iPossessions_backpack>
  [209] objcall 4 ............................... me.debug("iPossessions_backpack: " & iPossessions_backpack)
  [211] getparam 2 .............................. <oResult>
  [213] pusharglist 1 ........................... <oResult>
  [215] objcall 273 ............................. <oResult.getIsInfluencer()>
  [218] setlocal 8 .............................. bInfluencer = oResult.getIsInfluencer()
  [220] getparam 0 .............................. <me>
  [222] pushcons 198 ............................ <"bInfluencer: ">
  [224] getlocal 8 .............................. <bInfluencer>
  [226] joinstr ................................. <"bInfluencer: " & bInfluencer>
  [227] pusharglistnoret 2 ...................... <me, "bInfluencer: " & bInfluencer>
  [229] objcall 4 ............................... me.debug("bInfluencer: " & bInfluencer)
  [231] getparam 2 .............................. <oResult>
  [233] pusharglist 1 ........................... <oResult>
  [235] objcall 274 ............................. <oResult.getLogInTotal()>
  [238] setlocal 9 .............................. iLogInTotal = oResult.getLogInTotal()
  [240] getparam 0 .............................. <me>
  [242] pushcons 199 ............................ <"iLogInTotal: ">
  [244] getlocal 9 .............................. <iLogInTotal>
  [246] joinstr ................................. <"iLogInTotal: " & iLogInTotal>
  [247] pusharglistnoret 2 ...................... <me, "iLogInTotal: " & iLogInTotal>
  [249] objcall 4 ............................... me.debug("iLogInTotal: " & iLogInTotal)
  [251] getparam 0 .............................. <me>
  [253] pushcons 115 ............................ <"getExtendedDenizenInfo_Result() screenName: ">
  [255] getlocal 2 .............................. <sScreenName>
  [257] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName>
  [258] pushcons 87 ............................. <", avatarMission: ">
  [260] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: ">
  [261] getlocal 3 .............................. <sAvatarMission>
  [263] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission>
  [264] pushcons 116 ............................ <", levelList: ">
  [266] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: ">
  [267] getlocal 4 .............................. <aLevelList>
  [269] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList>
  [270] pushcons 117 ............................ <", possessions_purchased: ">
  [272] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: ">
  [273] getlocal 5 .............................. <iPossessions_purchased>
  [275] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased>
  [276] pushcons 118 ............................ <", possessions_total: ">
  [278] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: ">
  [279] getlocal 6 .............................. <iPossessions_total>
  [281] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total>
  [282] pushcons 119 ............................ <", possessions_backpack: ">
  [284] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: ">
  [285] getlocal 7 .............................. <iPossessions_backpack>
  [287] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack>
  [288] pushcons 120 ............................ <", influencer: ">
  [290] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: ">
  [291] getlocal 8 .............................. <bInfluencer>
  [293] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer>
  [294] pushcons 121 ............................ <", logInTotal: ">
  [296] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: ">
  [297] getlocal 9 .............................. <iLogInTotal>
  [299] joinstr ................................. <"getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [300] pusharglistnoret 2 ...................... <me, "getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal>
  [302] objcall 4 ............................... me.debug("getExtendedDenizenInfo_Result() screenName: " & sScreenName & ", avatarMission: " & sAvatarMission & ", levelList: " & aLevelList & ", possessions_purchased: " & iPossessions_purchased & ", possessions_total: " & iPossessions_total & ", possessions_backpack: " & iPossessions_backpack & ", influencer: " & bInfluencer & ", logInTotal: " & iLogInTotal)
  [304] getglobal 146 ........................... <ElementMgr>
  [306] pusharglist 1 ........................... <ElementMgr>
  [308] extcall 135 ............................. <voidp(ElementMgr)>
  [310] not ..................................... <not voidp(ElementMgr)>
  [311] jmpifz [338] ............................ if not voidp(ElementMgr) then
  [314] getglobal 146 ........................... <ElementMgr>
  [316] getlocal 1 .............................. <iError>
  [318] getlocal 2 .............................. <sScreenName>
  [320] getlocal 3 .............................. <sAvatarMission>
  [322] getlocal 4 .............................. <aLevelList>
  [324] getlocal 5 .............................. <iPossessions_purchased>
  [326] getlocal 6 .............................. <iPossessions_total>
  [328] getlocal 7 .............................. <iPossessions_backpack>
  [330] getlocal 8 .............................. <bInfluencer>
  [332] getlocal 9 .............................. <iLogInTotal>
  [334] pusharglistnoret 10 ..................... <ElementMgr, iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal>
  [336] objcall 47 .............................. ElementMgr.getExtendedDenizenInfo_Result(iError, sScreenName, sAvatarMission, aLevelList, iPossessions_purchased, iPossessions_total, iPossessions_backpack, bInfluencer, iLogInTotal)
  [338] ret
end

on onStatus me, oCaller, oXml
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 200 ............................ <"onStatus()">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "onStatus()", 1>
  [  8] objcall 4 ............................... me.debug("onStatus()", 1)
  [ 10] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 121 ............................. return sprite(me.spriteNum)
  [ 12] ret
end

on isMod me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 96 ........................... <me.bIsModerator>
  [  4] pusharglistnoret 1 ...................... <me.bIsModerator>
  [  6] extcall 121 ............................. return me.bIsModerator
  [  8] ret
end

on setScreenName me, sName
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sName>
  [  4] setobjprop 92 ........................... me.sUserScreenName = sName
  [  6] ret
end

on getScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 92 ........................... <me.sUserScreenName>
  [  4] pusharglistnoret 1 ...................... <me.sUserScreenName>
  [  6] extcall 121 ............................. return me.sUserScreenName
  [  8] ret
end

on setDenizen me, _foDenizen
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_foDenizen>
  [  4] setobjprop 276 .......................... me.foDenizen = _foDenizen
  [  7] ret
end

on getDenizen me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 276 .......................... <me.foDenizen>
  [  5] pusharglistnoret 1 ...................... <me.foDenizen>
  [  7] extcall 121 ............................. return me.foDenizen
  [  9] ret
end

on getMissionStatement me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 276 .......................... <me.foDenizen>
  [  5] pusharglist 1 ........................... <me.foDenizen>
  [  7] extcall 135 ............................. <voidp(me.foDenizen)>
  [  9] not ..................................... <not voidp(me.foDenizen)>
  [ 10] jmpifz [ 46] ............................ if not voidp(me.foDenizen) then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 276 ...................... <me.foDenizen>
  [ 18] pusharglist 1 ........................... <me.foDenizen>
  [ 20] objcall 55 .............................. <me.foDenizen.getMissionStatement()>
  [ 22] setlocal 0 .............................. sMission = me.foDenizen.getMissionStatement()
  [ 24] getlocal 0 .............................. <sMission>
  [ 26] pusharglist 1 ........................... <sMission>
  [ 28] extcall 135 ............................. <voidp(sMission)>
  [ 30] jmpifz [ 37] ............................ if voidp(sMission) then
  [ 33] pushcons 55 ............................. <EMPTY>
  [ 35] setlocal 0 .............................. sMission = EMPTY
  [ 37] getlocal 0 .............................. <sMission>
  [ 39] pusharglistnoret 1 ...................... <sMission>
  [ 41] extcall 121 ............................. return sMission
  [ 43] jmp [ 52]
  [ 46] pushcons 55 ............................. <EMPTY>
  [ 48] pusharglistnoret 1 ...................... <EMPTY>
  [ 50] extcall 121 ............................. return EMPTY
  [ 52] pushcons 201 ............................ <"Todo: get real mission statment">
  [ 54] pusharglistnoret 1 ...................... <"Todo: get real mission statment">
  [ 56] extcall 121 ............................. return "Todo: get real mission statment"
  [ 58] ret
end

on getAvatarImage me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 54 .............................. <me.getDenizen()>
  [  6] setlocal 0 .............................. oDenizen = me.getDenizen()
  [  8] getlocal 0 .............................. <oDenizen>
  [ 10] pusharglist 1 ........................... <oDenizen>
  [ 12] extcall 135 ............................. <voidp(oDenizen)>
  [ 14] not ..................................... <not voidp(oDenizen)>
  [ 15] jmpifz [ 26] ............................ if not voidp(oDenizen) then
  [ 18] getlocal 0 .............................. <oDenizen>
  [ 20] pusharglist 1 ........................... <oDenizen>
  [ 22] objcall 234 ............................. <oDenizen.getAvatarDefinition()>
  [ 24] setlocal 1 .............................. sAttributes = oDenizen.getAvatarDefinition()
  [ 26] pushcons 202 ............................ <"AvatarEngine">
  [ 28] pusharglist 1 ........................... <"AvatarEngine">
  [ 30] extcall 214 ............................. <member("AvatarEngine")>
  [ 32] setlocal 2 .............................. oMember = member("AvatarEngine")
  [ 34] getlocal 2 .............................. <oMember>
  [ 36] getobjprop 215 .......................... <oMember.memberNum>
  [ 38] pushzero ................................ <0>
  [ 39] lt ...................................... <oMember.memberNum < 0>
  [ 40] jmpifz [ 47] ............................ if oMember.memberNum < 0 then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 121 ............................. return 
  [ 47] pushcons 202 ............................ <"AvatarEngine">
  [ 49] pusharglist 1 ........................... <"AvatarEngine">
  [ 51] extcall 101 ............................. <script("AvatarEngine")>
  [ 53] getlocal 1 .............................. <sAttributes>
  [ 55] pushint8 100 ............................ <100>
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglist 4 ........................... <script("AvatarEngine"), sAttributes, 100, 1>
  [ 61] objcall 99 .............................. <script("AvatarEngine").new(sAttributes, 100, 1)>
  [ 63] setlocal 3 .............................. oAvatar = script("AvatarEngine").new(sAttributes, 100, 1)
  [ 65] getlocal 3 .............................. <oAvatar>
  [ 67] pusharglist 1 ........................... <oAvatar>
  [ 69] objcall 279 ............................. <oAvatar.getPreviewImage()>
  [ 72] setlocal 4 .............................. oPreviewImage = oAvatar.getPreviewImage()
  [ 74] getlocal 4 .............................. <oPreviewImage>
  [ 76] pusharglistnoret 1 ...................... <oPreviewImage>
  [ 78] extcall 121 ............................. return oPreviewImage
  [ 80] ret
end

on getDenizenAvatarImage me, sAttributes
  [  0] pushcons 202 ............................ <"AvatarEngine">
  [  2] pusharglist 1 ........................... <"AvatarEngine">
  [  4] extcall 214 ............................. <member("AvatarEngine")>
  [  6] setlocal 0 .............................. oMember = member("AvatarEngine")
  [  8] getlocal 0 .............................. <oMember>
  [ 10] getobjprop 215 .......................... <oMember.memberNum>
  [ 12] pushzero ................................ <0>
  [ 13] lt ...................................... <oMember.memberNum < 0>
  [ 14] jmpifz [ 21] ............................ if oMember.memberNum < 0 then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 121 ............................. return 
  [ 21] pushcons 202 ............................ <"AvatarEngine">
  [ 23] pusharglist 1 ........................... <"AvatarEngine">
  [ 25] extcall 101 ............................. <script("AvatarEngine")>
  [ 27] getparam 1 .............................. <sAttributes>
  [ 29] pushint8 100 ............................ <100>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pusharglist 4 ........................... <script("AvatarEngine"), sAttributes, 100, 1>
  [ 35] objcall 99 .............................. <script("AvatarEngine").new(sAttributes, 100, 1)>
  [ 37] setlocal 1 .............................. oAvatar = script("AvatarEngine").new(sAttributes, 100, 1)
  [ 39] getlocal 1 .............................. <oAvatar>
  [ 41] pusharglist 1 ........................... <oAvatar>
  [ 43] objcall 279 ............................. <oAvatar.getPreviewImage()>
  [ 46] setlocal 2 .............................. oPreviewImage = oAvatar.getPreviewImage()
  [ 48] getlocal 2 .............................. <oPreviewImage>
  [ 50] pusharglistnoret 1 ...................... <oPreviewImage>
  [ 52] extcall 121 ............................. return oPreviewImage
  [ 54] ret
end

on getTestDenizens me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aProps = []
  [  5] getlocal 0 .............................. <aProps>
  [  7] pushsymb 246 ............................ <#screenName>
  [  9] pushcons 203 ............................ <"Aslan">
  [ 11] pushsymb 284 ............................ <#gender>
  [ 14] pushint8 1 .............................. <1>
  [ 16] pushsymb 285 ............................ <#avatarDefinition>
  [ 19] pushcons 204 ............................ <"TODO">
  [ 21] pushsymb 286 ............................ <#mission>
  [ 24] pushcons 205 ............................ <"To rock your world">
  [ 26] pushsymb 287 ............................ <#online>
  [ 29] pushint8 1 .............................. <1>
  [ 31] pushsymb 288 ............................ <#lastAccess>
  [ 34] pushcons 79 ............................. <"Date">
  [ 36] pusharglist 1 ........................... <"Date">
  [ 38] extcall 153 ............................. <newObject("Date")>
  [ 40] pushsymb 289 ............................ <#lastSeenIn>
  [ 43] pushcons 206 ............................ <"Aslan2">
  [ 45] pushsymb 290 ............................ <#lastSeenInName>
  [ 48] pushcons 207 ............................ <"TheLion">
  [ 50] pusharglist 16 .......................... <[#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [ 52] pushproplist ............................ <[#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [ 53] pusharglistnoret 2 ...................... <aProps, [#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [ 55] objcall 241 ............................. aProps.add([#screenName: "Aslan", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [ 57] getlocal 0 .............................. <aProps>
  [ 59] pushsymb 246 ............................ <#screenName>
  [ 61] pushcons 208 ............................ <"Jarod">
  [ 63] pushsymb 284 ............................ <#gender>
  [ 66] pushint8 1 .............................. <1>
  [ 68] pushsymb 285 ............................ <#avatarDefinition>
  [ 71] pushcons 204 ............................ <"TODO">
  [ 73] pushsymb 286 ............................ <#mission>
  [ 76] pushcons 205 ............................ <"To rock your world">
  [ 78] pushsymb 287 ............................ <#online>
  [ 81] pushzero ................................ <0>
  [ 82] pushsymb 288 ............................ <#lastAccess>
  [ 85] pushcons 79 ............................. <"Date">
  [ 87] pusharglist 1 ........................... <"Date">
  [ 89] extcall 153 ............................. <newObject("Date")>
  [ 91] pushsymb 289 ............................ <#lastSeenIn>
  [ 94] pushcons 206 ............................ <"Aslan2">
  [ 96] pushsymb 290 ............................ <#lastSeenInName>
  [ 99] pushcons 207 ............................ <"TheLion">
  [101] pusharglist 16 .......................... <[#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [103] pushproplist ............................ <[#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [104] pusharglistnoret 2 ...................... <aProps, [#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [106] objcall 241 ............................. aProps.add([#screenName: "Jarod", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [108] getlocal 0 .............................. <aProps>
  [110] pushsymb 246 ............................ <#screenName>
  [112] pushcons 209 ............................ <"Mark">
  [114] pushsymb 284 ............................ <#gender>
  [117] pushint8 1 .............................. <1>
  [119] pushsymb 285 ............................ <#avatarDefinition>
  [122] pushcons 204 ............................ <"TODO">
  [124] pushsymb 286 ............................ <#mission>
  [127] pushcons 205 ............................ <"To rock your world">
  [129] pushsymb 287 ............................ <#online>
  [132] pushint8 1 .............................. <1>
  [134] pushsymb 288 ............................ <#lastAccess>
  [137] pushcons 79 ............................. <"Date">
  [139] pusharglist 1 ........................... <"Date">
  [141] extcall 153 ............................. <newObject("Date")>
  [143] pushsymb 289 ............................ <#lastSeenIn>
  [146] pushcons 206 ............................ <"Aslan2">
  [148] pushsymb 290 ............................ <#lastSeenInName>
  [151] pushcons 207 ............................ <"TheLion">
  [153] pusharglist 16 .......................... <[#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [155] pushproplist ............................ <[#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [156] pusharglistnoret 2 ...................... <aProps, [#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [158] objcall 241 ............................. aProps.add([#screenName: "Mark", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [160] getlocal 0 .............................. <aProps>
  [162] pushsymb 246 ............................ <#screenName>
  [164] pushcons 210 ............................ <"Paul">
  [166] pushsymb 284 ............................ <#gender>
  [169] pushint8 1 .............................. <1>
  [171] pushsymb 285 ............................ <#avatarDefinition>
  [174] pushcons 204 ............................ <"TODO">
  [176] pushsymb 286 ............................ <#mission>
  [179] pushcons 205 ............................ <"To rock your world">
  [181] pushsymb 287 ............................ <#online>
  [184] pushzero ................................ <0>
  [185] pushsymb 288 ............................ <#lastAccess>
  [188] pushcons 79 ............................. <"Date">
  [190] pusharglist 1 ........................... <"Date">
  [192] extcall 153 ............................. <newObject("Date")>
  [194] pushsymb 289 ............................ <#lastSeenIn>
  [197] pushcons 206 ............................ <"Aslan2">
  [199] pushsymb 290 ............................ <#lastSeenInName>
  [202] pushcons 207 ............................ <"TheLion">
  [204] pusharglist 16 .......................... <[#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [206] pushproplist ............................ <[#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [207] pusharglistnoret 2 ...................... <aProps, [#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [209] objcall 241 ............................. aProps.add([#screenName: "Paul", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 0, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [211] getlocal 0 .............................. <aProps>
  [213] pushsymb 246 ............................ <#screenName>
  [215] pushcons 211 ............................ <"George">
  [217] pushsymb 284 ............................ <#gender>
  [220] pushint8 1 .............................. <1>
  [222] pushsymb 285 ............................ <#avatarDefinition>
  [225] pushcons 204 ............................ <"TODO">
  [227] pushsymb 286 ............................ <#mission>
  [230] pushcons 205 ............................ <"To rock your world">
  [232] pushsymb 287 ............................ <#online>
  [235] pushint8 1 .............................. <1>
  [237] pushsymb 288 ............................ <#lastAccess>
  [240] pushcons 79 ............................. <"Date">
  [242] pusharglist 1 ........................... <"Date">
  [244] extcall 153 ............................. <newObject("Date")>
  [246] pushsymb 289 ............................ <#lastSeenIn>
  [249] pushcons 206 ............................ <"Aslan2">
  [251] pushsymb 290 ............................ <#lastSeenInName>
  [254] pushcons 207 ............................ <"TheLion">
  [256] pusharglist 16 .......................... <[#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [258] pushproplist ............................ <[#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [259] pusharglistnoret 2 ...................... <aProps, [#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"]>
  [261] objcall 241 ............................. aProps.add([#screenName: "George", #gender: 1, #avatarDefinition: "TODO", #mission: "To rock your world", #online: 1, #lastAccess: newObject("Date"), #lastSeenIn: "Aslan2", #lastSeenInName: "TheLion"])
  [263] getlocal 0 .............................. <aProps>
  [265] pusharglistnoret 1 ...................... <aProps>
  [267] extcall 121 ............................. return aProps
  [269] ret
end

on getTestFriends me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 58 .............................. <me.getTestDenizens()>
  [  6] setlocal 0 .............................. aProps = me.getTestDenizens()
  [  8] pushint8 1 .............................. <1>
  [ 10] setlocal 1
  [ 12] getlocal 1
  [ 14] getlocal 0 .............................. <aProps>
  [ 16] getobjprop 162 .......................... <aProps.count>
  [ 18] lteq
  [ 19] jmpifz [ 51] ............................ repeat with i = 1 to aProps.count
  [ 22] getlocal 0 .............................. <aProps>
  [ 24] getlocal 1 .............................. <i>
  [ 26] pusharglist 2 ........................... <aProps, i>
  [ 28] objcall 163 ............................. <aProps[i]>
  [ 30] pushsymb 247 ............................ <#messagesFrom>
  [ 32] pushint8 10 ............................. <10>
  [ 34] pusharglist 1 ........................... <10>
  [ 36] extcall 160 ............................. <random(10)>
  [ 38] pusharglistnoret 3 ...................... <aProps[i], #messagesFrom, random(10)>
  [ 40] objcall 249 ............................. aProps[i][#messagesFrom] = random(10)
  [ 42] pushint8 1
  [ 44] getlocal 1
  [ 46] add
  [ 47] setlocal 1
  [ 49] endrepeat [ 12]
  [ 51] getlocal 0 .............................. <aProps>
  [ 53] pusharglistnoret 1 ...................... <aProps>
  [ 55] extcall 121 ............................. return aProps
  [ 57] ret
end

on getTestMessages me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aMessages = []
  [  5] getlocal 0 .............................. <aMessages>
  [  7] pushsymb 292 ............................ <#sender>
  [ 10] pushcons 203 ............................ <"Aslan">
  [ 12] pushsymb 262 ............................ <#recipient>
  [ 15] pushcons 203 ............................ <"Aslan">
  [ 17] pushsymb 293 ............................ <#message>
  [ 20] pushcons 212 ............................ <"Hi I'm Aslan">
  [ 22] pushsymb 294 ............................ <#date>
  [ 25] pushcons 79 ............................. <"Date">
  [ 27] pusharglist 1 ........................... <"Date">
  [ 29] extcall 153 ............................. <newObject("Date")>
  [ 31] pusharglist 8 ........................... <[#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")]>
  [ 33] pushproplist ............................ <[#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")]>
  [ 34] pusharglistnoret 2 ...................... <aMessages, [#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")]>
  [ 36] objcall 241 ............................. aMessages.add([#sender: "Aslan", #recipient: "Aslan", #message: "Hi I'm Aslan", #date: newObject("Date")])
  [ 38] getlocal 0 .............................. <aMessages>
  [ 40] pushsymb 292 ............................ <#sender>
  [ 43] pushcons 208 ............................ <"Jarod">
  [ 45] pushsymb 262 ............................ <#recipient>
  [ 48] pushcons 203 ............................ <"Aslan">
  [ 50] pushsymb 293 ............................ <#message>
  [ 53] pushcons 213 ............................ <"Hi I'm Jarod">
  [ 55] pushsymb 294 ............................ <#date>
  [ 58] pushcons 79 ............................. <"Date">
  [ 60] pusharglist 1 ........................... <"Date">
  [ 62] extcall 153 ............................. <newObject("Date")>
  [ 64] pusharglist 8 ........................... <[#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")]>
  [ 66] pushproplist ............................ <[#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")]>
  [ 67] pusharglistnoret 2 ...................... <aMessages, [#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")]>
  [ 69] objcall 241 ............................. aMessages.add([#sender: "Jarod", #recipient: "Aslan", #message: "Hi I'm Jarod", #date: newObject("Date")])
  [ 71] getlocal 0 .............................. <aMessages>
  [ 73] pushsymb 292 ............................ <#sender>
  [ 76] pushcons 209 ............................ <"Mark">
  [ 78] pushsymb 262 ............................ <#recipient>
  [ 81] pushcons 203 ............................ <"Aslan">
  [ 83] pushsymb 293 ............................ <#message>
  [ 86] pushcons 214 ............................ <"Hi I'm Mark">
  [ 88] pushsymb 294 ............................ <#date>
  [ 91] pushcons 79 ............................. <"Date">
  [ 93] pusharglist 1 ........................... <"Date">
  [ 95] extcall 153 ............................. <newObject("Date")>
  [ 97] pusharglist 8 ........................... <[#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")]>
  [ 99] pushproplist ............................ <[#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")]>
  [100] pusharglistnoret 2 ...................... <aMessages, [#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")]>
  [102] objcall 241 ............................. aMessages.add([#sender: "Mark", #recipient: "Aslan", #message: "Hi I'm Mark", #date: newObject("Date")])
  [104] getlocal 0 .............................. <aMessages>
  [106] pushsymb 292 ............................ <#sender>
  [109] pushcons 210 ............................ <"Paul">
  [111] pushsymb 262 ............................ <#recipient>
  [114] pushcons 203 ............................ <"Aslan">
  [116] pushsymb 293 ............................ <#message>
  [119] pushcons 215 ............................ <"Hi I'm Paul">
  [121] pushsymb 294 ............................ <#date>
  [124] pushcons 79 ............................. <"Date">
  [126] pusharglist 1 ........................... <"Date">
  [128] extcall 153 ............................. <newObject("Date")>
  [130] pusharglist 8 ........................... <[#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")]>
  [132] pushproplist ............................ <[#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")]>
  [133] pusharglistnoret 2 ...................... <aMessages, [#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")]>
  [135] objcall 241 ............................. aMessages.add([#sender: "Paul", #recipient: "Aslan", #message: "Hi I'm Paul", #date: newObject("Date")])
  [137] getlocal 0 .............................. <aMessages>
  [139] pushsymb 292 ............................ <#sender>
  [142] pushcons 211 ............................ <"George">
  [144] pushsymb 262 ............................ <#recipient>
  [147] pushcons 203 ............................ <"Aslan">
  [149] pushsymb 293 ............................ <#message>
  [152] pushcons 216 ............................ <"Hi I'm George">
  [154] pushsymb 294 ............................ <#date>
  [157] pushcons 79 ............................. <"Date">
  [159] pusharglist 1 ........................... <"Date">
  [161] extcall 153 ............................. <newObject("Date")>
  [163] pusharglist 8 ........................... <[#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")]>
  [165] pushproplist ............................ <[#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")]>
  [166] pusharglistnoret 2 ...................... <aMessages, [#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")]>
  [168] objcall 241 ............................. aMessages.add([#sender: "George", #recipient: "Aslan", #message: "Hi I'm George", #date: newObject("Date")])
  [170] getlocal 0 .............................. <aMessages>
  [172] pusharglistnoret 1 ...................... <aMessages>
  [174] extcall 121 ............................. return aMessages
  [176] ret
end

on getMessagePropList me, oRC
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aProps = [:]
  [  5] getlocal 0 .............................. <aProps>
  [  7] pushsymb 262 ............................ <#recipient>
  [ 10] getparam 1 .............................. <oRC>
  [ 12] pusharglist 1 ........................... <oRC>
  [ 14] objcall 295 ............................. <oRC.getRecipient()>
  [ 17] pusharglistnoret 3 ...................... <aProps, #recipient, oRC.getRecipient()>
  [ 19] objcall 249 ............................. aProps[#recipient] = oRC.getRecipient()
  [ 21] getlocal 0 .............................. <aProps>
  [ 23] pushsymb 292 ............................ <#sender>
  [ 26] getparam 1 .............................. <oRC>
  [ 28] pusharglist 1 ........................... <oRC>
  [ 30] objcall 296 ............................. <oRC.getSender()>
  [ 33] pusharglistnoret 3 ...................... <aProps, #sender, oRC.getSender()>
  [ 35] objcall 249 ............................. aProps[#sender] = oRC.getSender()
  [ 37] getlocal 0 .............................. <aProps>
  [ 39] pushsymb 293 ............................ <#message>
  [ 42] getparam 1 .............................. <oRC>
  [ 44] pusharglist 1 ........................... <oRC>
  [ 46] objcall 297 ............................. <oRC.getText()>
  [ 49] pusharglistnoret 3 ...................... <aProps, #message, oRC.getText()>
  [ 51] objcall 249 ............................. aProps[#message] = oRC.getText()
  [ 53] getlocal 0 .............................. <aProps>
  [ 55] pushsymb 298 ............................ <#sentOn>
  [ 58] getparam 1 .............................. <oRC>
  [ 60] pusharglist 1 ........................... <oRC>
  [ 62] objcall 299 ............................. <oRC.getSentOn()>
  [ 65] pusharglistnoret 3 ...................... <aProps, #sentOn, oRC.getSentOn()>
  [ 67] objcall 249 ............................. aProps[#sentOn] = oRC.getSentOn()
  [ 69] getlocal 0 .............................. <aProps>
  [ 71] pushsymb 300 ............................ <#messageHash>
  [ 74] getparam 1 .............................. <oRC>
  [ 76] pusharglist 1 ........................... <oRC>
  [ 78] objcall 301 ............................. <oRC.getMessageHash()>
  [ 81] pusharglistnoret 3 ...................... <aProps, #messageHash, oRC.getMessageHash()>
  [ 83] objcall 249 ............................. aProps[#messageHash] = oRC.getMessageHash()
  [ 85] getlocal 0 .............................. <aProps>
  [ 87] pusharglistnoret 1 ...................... <aProps>
  [ 89] extcall 121 ............................. return aProps
  [ 91] ret
end

on getDenizenPropList me, oDenizen
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aProps = [:]
  [  5] getlocal 0 .............................. <aProps>
  [  7] pushsymb 246 ............................ <#screenName>
  [  9] getparam 1 .............................. <oDenizen>
  [ 11] pusharglist 1 ........................... <oDenizen>
  [ 13] objcall 52 .............................. <oDenizen.getScreenName()>
  [ 15] pusharglistnoret 3 ...................... <aProps, #screenName, oDenizen.getScreenName()>
  [ 17] objcall 249 ............................. aProps[#screenName] = oDenizen.getScreenName()
  [ 19] getlocal 0 .............................. <aProps>
  [ 21] pushsymb 285 ............................ <#avatarDefinition>
  [ 24] getparam 1 .............................. <oDenizen>
  [ 26] pusharglist 1 ........................... <oDenizen>
  [ 28] objcall 234 ............................. <oDenizen.getAvatarDefinition()>
  [ 30] pusharglistnoret 3 ...................... <aProps, #avatarDefinition, oDenizen.getAvatarDefinition()>
  [ 32] objcall 249 ............................. aProps[#avatarDefinition] = oDenizen.getAvatarDefinition()
  [ 34] getparam 1 .............................. <oDenizen>
  [ 36] pusharglist 1 ........................... <oDenizen>
  [ 38] objcall 235 ............................. <oDenizen.getGender()>
  [ 40] setlocal 1 .............................. foGender = oDenizen.getGender()
  [ 42] getlocal 1 .............................. <foGender>
  [ 44] pusharglist 1 ........................... <foGender>
  [ 46] extcall 135 ............................. <voidp(foGender)>
  [ 48] getlocal 1 .............................. <foGender>
  [ 50] pusharglist 0 ........................... <>
  [ 52] extcall 91 .............................. <VOID>
  [ 54] eq ...................................... <foGender = VOID>
  [ 55] or ...................................... <voidp(foGender) or (foGender = VOID)>
  [ 56] jmpifz [ 66] ............................ if voidp(foGender) or (foGender = VOID) then / else
  [ 59] pushint8 1 .............................. <1>
  [ 61] setlocal 2 .............................. iGender = 1
  [ 63] jmp [ 74]
  [ 66] getlocal 1 .............................. <foGender>
  [ 68] pusharglist 1 ........................... <foGender>
  [ 70] objcall 224 ............................. <foGender.getOrdinal()>
  [ 72] setlocal 2 .............................. iGender = foGender.getOrdinal()
  [ 74] getlocal 0 .............................. <aProps>
  [ 76] pushsymb 284 ............................ <#gender>
  [ 79] getlocal 2 .............................. <iGender>
  [ 81] pusharglistnoret 3 ...................... <aProps, #gender, iGender>
  [ 83] objcall 249 ............................. aProps[#gender] = iGender
  [ 85] getlocal 0 .............................. <aProps>
  [ 87] pushsymb 286 ............................ <#mission>
  [ 90] getparam 1 .............................. <oDenizen>
  [ 92] pusharglist 1 ........................... <oDenizen>
  [ 94] objcall 55 .............................. <oDenizen.getMissionStatement()>
  [ 96] pusharglistnoret 3 ...................... <aProps, #mission, oDenizen.getMissionStatement()>
  [ 98] objcall 249 ............................. aProps[#mission] = oDenizen.getMissionStatement()
  [100] getlocal 0 .............................. <aProps>
  [102] pushsymb 289 ............................ <#lastSeenIn>
  [105] getparam 1 .............................. <oDenizen>
  [107] pusharglist 1 ........................... <oDenizen>
  [109] objcall 232 ............................. <oDenizen.getLastSeenIn()>
  [111] pusharglistnoret 3 ...................... <aProps, #lastSeenIn, oDenizen.getLastSeenIn()>
  [113] objcall 249 ............................. aProps[#lastSeenIn] = oDenizen.getLastSeenIn()
  [115] getlocal 0 .............................. <aProps>
  [117] pushsymb 290 ............................ <#lastSeenInName>
  [120] getparam 1 .............................. <oDenizen>
  [122] pusharglist 1 ........................... <oDenizen>
  [124] objcall 233 ............................. <oDenizen.getLastSeenInName()>
  [126] pusharglistnoret 3 ...................... <aProps, #lastSeenInName, oDenizen.getLastSeenInName()>
  [128] objcall 249 ............................. aProps[#lastSeenInName] = oDenizen.getLastSeenInName()
  [130] getlocal 0 .............................. <aProps>
  [132] pushsymb 288 ............................ <#lastAccess>
  [135] getparam 1 .............................. <oDenizen>
  [137] pusharglist 1 ........................... <oDenizen>
  [139] objcall 231 ............................. <oDenizen.getLastAccess()>
  [141] pusharglistnoret 3 ...................... <aProps, #lastAccess, oDenizen.getLastAccess()>
  [143] objcall 249 ............................. aProps[#lastAccess] = oDenizen.getLastAccess()
  [145] getlocal 0 .............................. <aProps>
  [147] pushsymb 287 ............................ <#online>
  [150] getparam 1 .............................. <oDenizen>
  [152] pusharglist 1 ........................... <oDenizen>
  [154] objcall 236 ............................. <oDenizen.getIsOnline()>
  [156] pusharglistnoret 3 ...................... <aProps, #online, oDenizen.getIsOnline()>
  [158] objcall 249 ............................. aProps[#online] = oDenizen.getIsOnline()
  [160] getlocal 0 .............................. <aProps>
  [162] pusharglistnoret 1 ...................... <aProps>
  [164] extcall 121 ............................. return aProps
  [166] ret
end

on getCokesDrank me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 84 ........................... <me.iCokesDrank>
  [  4] pusharglistnoret 1 ...................... <me.iCokesDrank>
  [  6] extcall 121 ............................. return me.iCokesDrank
  [  8] ret
end

on setCokesDrank me, i
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <i>
  [  4] setobjprop 84 ........................... me.iCokesDrank = i
  [  6] ret
end

on getBackpack me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 304 .......................... <me.foBackpack>
  [  5] pusharglistnoret 1 ...................... <me.foBackpack>
  [  7] extcall 121 ............................. return me.foBackpack
  [  9] ret
end

on setBackPack me, _foBackPack
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_foBackPack>
  [  4] setobjprop 304 .......................... me.foBackpack = _foBackPack
  [  7] ret
end

on getEnvironment me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 109 ...................... <me.fo_level0>
  [  4] pusharglist 1 ........................... <me.fo_level0>
  [  6] objcall 67 .............................. <me.fo_level0.getEnvironment()>
  [  8] setlocal 0 .............................. sEnv = me.fo_level0.getEnvironment()
  [ 10] getlocal 0 .............................. <sEnv>
  [ 12] pusharglistnoret 1 ...................... <sEnv>
  [ 14] extcall 121 ............................. return sEnv
  [ 16] ret
end

on isFTMmember me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 26] objcall 68 .............................. me.foDenizenManager.isFTMmember(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 28] ret
end

on getGenres me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 26] objcall 69 .............................. me.foDenizenManager.getGenres(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 28] ret
end

on getArtistsByGenre me, whatgenre
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] getparam 1 .............................. <whatgenre>
  [ 26] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatgenre>
  [ 28] objcall 70 .............................. me.foDenizenManager.getArtistsByGenre(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatgenre)
  [ 30] ret
end

on getSongsByArtist me, whatartist
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] getparam 1 .............................. <whatartist>
  [ 26] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatartist>
  [ 28] objcall 71 .............................. me.foDenizenManager.getSongsByArtist(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), whatartist)
  [ 30] ret
end

on getPlaylist me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 26] objcall 72 .............................. me.foDenizenManager.getPlaylist(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 28] ret
end

on addToPlayList me, mysongid
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] getparam 1 .............................. <mysongid>
  [ 26] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid>
  [ 28] objcall 73 .............................. me.foDenizenManager.addToPlayList(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid)
  [ 30] ret
end

on removeFromPlaylist me, mysongid
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] getparam 1 .............................. <mysongid>
  [ 26] pusharglistnoret 4 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid>
  [ 28] objcall 74 .............................. me.foDenizenManager.removeFromPlaylist(me.getDenizen().getScreenName(), me.getDenizen().getSecret(), mysongid)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 106 ...................... <me.foDenizenManager>
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglist 1 ........................... <me>
  [ 38] objcall 54 .............................. <me.getDenizen()>
  [ 40] pusharglist 1 ........................... <me.getDenizen()>
  [ 42] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglist 1 ........................... <me>
  [ 48] objcall 54 .............................. <me.getDenizen()>
  [ 50] pusharglist 1 ........................... <me.getDenizen()>
  [ 52] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 54] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 56] objcall 72 .............................. me.foDenizenManager.getPlaylist(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 58] ret
end

on getAvailableTokens me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 106 ...................... <me.foDenizenManager>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 54 .............................. <me.getDenizen()>
  [ 10] pusharglist 1 ........................... <me.getDenizen()>
  [ 12] objcall 52 .............................. <me.getDenizen().getScreenName()>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 54 .............................. <me.getDenizen()>
  [ 20] pusharglist 1 ........................... <me.getDenizen()>
  [ 22] objcall 149 ............................. <me.getDenizen().getSecret()>
  [ 24] pusharglistnoret 3 ...................... <me.foDenizenManager, me.getDenizen().getScreenName(), me.getDenizen().getSecret()>
  [ 26] objcall 75 .............................. me.foDenizenManager.getAvailableTokens(me.getDenizen().getScreenName(), me.getDenizen().getSecret())
  [ 28] ret
end

on getAvailableTokens_result me, oCaller, oResult
  [  0] pushcons 217 ............................ <"cc.jukebox.tokennum">
  [  2] pusharglist 1 ........................... <"cc.jukebox.tokennum">
  [  4] extcall 214 ............................. <member("cc.jukebox.tokennum")>
  [  6] pushcons 218 ............................ <"Tokens left:">
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] extcall 238 ............................. <integer(oResult)>
  [ 14] joinpadstr .............................. <"Tokens left:" && integer(oResult)>
  [ 15] setobjprop 216 .......................... member("cc.jukebox.tokennum").text = "Tokens left:" && integer(oResult)
  [ 17] ret
end

on isFtmMember_result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 219 ............................ <"isFTMmember_result()">
  [  4] pusharglistnoret 2 ...................... <me, "isFTMmember_result()">
  [  6] objcall 4 ............................... me.debug("isFTMmember_result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 223 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sErrorType = oResult.getTypeOf()
  [ 16] getparam 2 .............................. <oResult>
  [ 18] pusharglist 1 ........................... <oResult>
  [ 20] objcall 223 ............................. <oResult.getTypeOf()>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 88 ........................... <me.ERROR_TYPE>
  [ 26] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 27] jmpifz [104] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 30] getparam 2 .............................. <oResult>
  [ 32] pusharglist 1 ........................... <oResult>
  [ 34] objcall 224 ............................. <oResult.getOrdinal()>
  [ 36] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 38] getlocal 1 .............................. <iError>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <iError = 0>
  [ 42] jmpifz [ 55] ............................ if iError = 0 then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 1 .............................. <1>
  [ 49] setobjprop 310 .......................... me.bisFTMmember = 1
  [ 52] jmp [ 59]
  [ 55] pushzero ................................ <0>
  [ 56] setprop 310 ............................. bisFTMmember = 0
  [ 59] getparam 0 .............................. <me>
  [ 61] pushcons 220 ............................ <"isFTMmember: ">
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 310 .......................... <me.bisFTMmember>
  [ 68] joinstr ................................. <"isFTMmember: " & me.bisFTMmember>
  [ 69] pusharglistnoret 2 ...................... <me, "isFTMmember: " & me.bisFTMmember>
  [ 71] objcall 4 ............................... me.debug("isFTMmember: " & me.bisFTMmember)
  [ 73] pushcons 221 ............................ <"isFTMmember_result :">
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 310 .......................... <me.bisFTMmember>
  [ 80] joinpadstr .............................. <"isFTMmember_result :" && me.bisFTMmember>
  [ 81] pusharglistnoret 1 ...................... <"isFTMmember_result :" && me.bisFTMmember>
  [ 83] extcall 118 ............................. put "isFTMmember_result :" && me.bisFTMmember
  [ 85] getglobal 146 ........................... <ElementMgr>
  [ 87] pusharglistnoret 1 ...................... <ElementMgr>
  [ 89] objcall 311 ............................. ElementMgr.openJukebox()
  [ 92] getglobal 146 ........................... <ElementMgr>
  [ 94] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 97] getparam 0 .............................. <me>
  [ 99] getobjprop 310 .......................... <me.bisFTMmember>
  [102] setobjprop 68 ........................... ElementMgr.oJukebox.isFTMmember = me.bisFTMmember
  [104] ret
end

on getgenres_result me, oCaller, oResult
  [  0] getglobal 184 ........................... <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 313 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. mygenres = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getobjprop 316 .......................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglist 2 ........................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1>
  [ 28] extcall 314 ............................. <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1)>
  [ 31] pushsymb 317 ............................ <#cataloglist>
  [ 34] eq ...................................... <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #cataloglist>
  [ 35] jmpifz [ 80] ............................ if getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #cataloglist then
  [ 38] getglobal 146 ........................... <ElementMgr>
  [ 40] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 43] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 45] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 48] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 51] getchainedprop 317 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 54] getlocal 0 .............................. <mygenres>
  [ 56] setobjprop 318 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.pContentlist = mygenres
  [ 59] getglobal 146 ........................... <ElementMgr>
  [ 61] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 64] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 66] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 69] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 72] getchainedprop 317 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 75] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 77] objcall 319 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.updatecontent()
  [ 80] ret
end

on getArtistsByGenre_result me, oCaller, oResult
  [  0] getglobal 184 ........................... <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 313 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. myartists = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] getchainedprop 317 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 27] getlocal 0 .............................. <myartists>
  [ 29] setobjprop 318 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.pContentlist = myartists
  [ 32] getglobal 146 ........................... <ElementMgr>
  [ 34] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 37] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 39] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 42] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 45] getchainedprop 317 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 48] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 50] objcall 319 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.updatecontent()
  [ 53] ret
end

on getSongsByArtist_result me, oCaller, oResult
  [  0] getglobal 184 ........................... <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 313 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. mysongs = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] getchainedprop 317 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 27] getlocal 0 .............................. <mysongs>
  [ 29] setobjprop 318 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.pContentlist = mysongs
  [ 32] getglobal 146 ........................... <ElementMgr>
  [ 34] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 37] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 39] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 42] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 45] getchainedprop 317 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 48] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist>
  [ 50] objcall 319 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.cataloglist.updatecontent()
  [ 53] ret
end

on getPlaylist_Result me, oCaller, oResult
  [  0] getglobal 184 ........................... <oStudio>
  [  2] getparam 2 .............................. <oResult>
  [  4] pusharglist 2 ........................... <oStudio, oResult>
  [  6] objcall 313 ............................. <oStudio.convertFlashArrayToDirectorList(oResult)>
  [  9] setlocal 0 .............................. mysongs = oStudio.convertFlashArrayToDirectorList(oResult)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 16] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 18] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 21] getobjprop 316 .......................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglist 2 ........................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1>
  [ 28] extcall 314 ............................. <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1)>
  [ 31] pushsymb 323 ............................ <#playList>
  [ 34] eq ...................................... <getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #playList>
  [ 35] jmpifz [ 80] ............................ if getPropAt(ElementMgr.oJukebox.getOpenWindow().pScrollingLists, 1) = #playList then
  [ 38] getglobal 146 ........................... <ElementMgr>
  [ 40] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 43] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 45] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 48] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 51] getchainedprop 323 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 54] getlocal 0 .............................. <mysongs>
  [ 56] setobjprop 318 .......................... ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList.pContentlist = mysongs
  [ 59] getglobal 146 ........................... <ElementMgr>
  [ 61] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 64] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 66] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 69] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 72] getchainedprop 323 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 75] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 77] objcall 319 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList.updatecontent()
  [ 80] ret
end

on addToPlaylist_Result me, oCaller, oResult
  [  0] getparam 2 .............................. <oResult>
  [  2] peek 0 .................................. case oResult of
  [  4] pushzero ................................ <0>
  [  5] eq
  [  6] jmpifz [ 20] ............................ (case) 0:
  [  9] getglobal 146 ........................... <ElementMgr>
  [ 11] pushcons 222 ............................ <"ALERT_IJ_0">
  [ 13] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_0">
  [ 15] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_0")
  [ 17] jmp [112]
  [ 20] peek 0
  [ 22] pushint8 1 .............................. <1>
  [ 24] eq
  [ 25] jmpifz [ 39] ............................ (case) 1:
  [ 28] getglobal 146 ........................... <ElementMgr>
  [ 30] pushcons 223 ............................ <"ALERT_IJ_1">
  [ 32] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_1">
  [ 34] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_1")
  [ 36] jmp [112]
  [ 39] peek 0
  [ 41] pushint8 2 .............................. <2>
  [ 43] eq
  [ 44] jmpifz [ 58] ............................ (case) 2:
  [ 47] getglobal 146 ........................... <ElementMgr>
  [ 49] pushcons 224 ............................ <"ALERT_IJ_2">
  [ 51] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_2">
  [ 53] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_2")
  [ 55] jmp [112]
  [ 58] peek 0
  [ 60] pushint8 3 .............................. <3>
  [ 62] eq
  [ 63] jmpifz [ 77] ............................ (case) 3:
  [ 66] getglobal 146 ........................... <ElementMgr>
  [ 68] pushcons 225 ............................ <"ALERT_IJ_3">
  [ 70] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_3">
  [ 72] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_3")
  [ 74] jmp [112]
  [ 77] peek 0
  [ 79] pushint8 4 .............................. <4>
  [ 81] eq
  [ 82] jmpifz [ 96] ............................ (case) 4:
  [ 85] getglobal 146 ........................... <ElementMgr>
  [ 87] pushcons 226 ............................ <"ALERT_IJ_4">
  [ 89] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_4">
  [ 91] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_4")
  [ 93] jmp [112]
  [ 96] peek 0
  [ 98] pushint8 5 .............................. <5>
  [100] eq
  [101] jmpifz [112] ............................ (case) 5:
  [104] getglobal 146 ........................... <ElementMgr>
  [106] pushcons 227 ............................ <"ALERT_IJ_5">
  [108] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_5">
  [110] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_5")
  [112] pop 1 ................................... end case
  [114] ret
end

on removeFromPlaylist_Result me, oCaller, oResult
  [  0] getparam 2 .............................. <oResult>
  [  2] peek 0 .................................. case oResult of
  [  4] pushzero ................................ <0>
  [  5] eq
  [  6] jmpifz [ 33] ............................ (case) 0:
  [  9] getglobal 146 ........................... <ElementMgr>
  [ 11] getchainedprop 312 ...................... <ElementMgr.oJukebox>
  [ 14] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 16] objcall 315 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 19] getchainedprop 316 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists>
  [ 22] getchainedprop 323 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 25] pusharglistnoret 1 ...................... <ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList>
  [ 27] objcall 319 ............................. ElementMgr.oJukebox.getOpenWindow().pScrollingLists.playList.updatecontent()
  [ 30] jmp [106]
  [ 33] peek 0
  [ 35] pushint8 1 .............................. <1>
  [ 37] eq
  [ 38] jmpifz [ 52] ............................ (case) 1:
  [ 41] getglobal 146 ........................... <ElementMgr>
  [ 43] pushcons 223 ............................ <"ALERT_IJ_1">
  [ 45] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_1">
  [ 47] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_1")
  [ 49] jmp [106]
  [ 52] peek 0
  [ 54] pushint8 2 .............................. <2>
  [ 56] eq
  [ 57] jmpifz [ 71] ............................ (case) 2:
  [ 60] getglobal 146 ........................... <ElementMgr>
  [ 62] pushcons 224 ............................ <"ALERT_IJ_2">
  [ 64] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_2">
  [ 66] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_2")
  [ 68] jmp [106]
  [ 71] peek 0
  [ 73] pushint8 3 .............................. <3>
  [ 75] eq
  [ 76] jmpifz [ 90] ............................ (case) 3:
  [ 79] getglobal 146 ........................... <ElementMgr>
  [ 81] pushcons 225 ............................ <"ALERT_IJ_3">
  [ 83] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_3">
  [ 85] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_3")
  [ 87] jmp [106]
  [ 90] peek 0
  [ 92] pushint8 4 .............................. <4>
  [ 94] eq
  [ 95] jmpifz [106] ............................ (case) 4:
  [ 98] getglobal 146 ........................... <ElementMgr>
  [100] pushcons 226 ............................ <"ALERT_IJ_4">
  [102] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_4">
  [104] objcall 191 ............................. ElementMgr.alert("ALERT_IJ_4")
  [106] pop 1 ................................... end case
  [108] ret
end
