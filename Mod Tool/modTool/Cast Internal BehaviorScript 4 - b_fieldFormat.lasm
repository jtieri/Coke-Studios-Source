property pSprite, pText, pAction, pBackGroundTransparent, pBold, pHexColorString

on getPropertyDescriptionList me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. mylist = [:]
  [  5] getlocal 0 .............................. <mylist>
  [  7] pushsymb 87 ............................. <#pBold>
  [  9] pushsymb 88 ............................. <#comment>
  [ 11] pushcons 0 .............................. <"Bold?:">
  [ 13] pushsymb 89 ............................. <#format>
  [ 15] pushsymb 90 ............................. <#boolean>
  [ 17] pushsymb 91 ............................. <#default>
  [ 19] pushzero ................................ <0>
  [ 20] pusharglist 6 ........................... <[#comment: "Bold?:", #format: #boolean, #default: 0]>
  [ 22] pushproplist ............................ <[#comment: "Bold?:", #format: #boolean, #default: 0]>
  [ 23] pusharglistnoret 3 ...................... <mylist, #pBold, [#comment: "Bold?:", #format: #boolean, #default: 0]>
  [ 25] objcall 68 .............................. mylist[#pBold] = [#comment: "Bold?:", #format: #boolean, #default: 0]
  [ 27] getlocal 0 .............................. <mylist>
  [ 29] pushsymb 92 ............................. <#pBackGroundTransparent>
  [ 31] pushsymb 88 ............................. <#comment>
  [ 33] pushcons 1 .............................. <"BackGroundTransparent?:">
  [ 35] pushsymb 89 ............................. <#format>
  [ 37] pushsymb 90 ............................. <#boolean>
  [ 39] pushsymb 91 ............................. <#default>
  [ 41] pushzero ................................ <0>
  [ 42] pusharglist 6 ........................... <[#comment: "BackGroundTransparent?:", #format: #boolean, #default: 0]>
  [ 44] pushproplist ............................ <[#comment: "BackGroundTransparent?:", #format: #boolean, #default: 0]>
  [ 45] pusharglistnoret 3 ...................... <mylist, #pBackGroundTransparent, [#comment: "BackGroundTransparent?:", #format: #boolean, #default: 0]>
  [ 47] objcall 68 .............................. mylist[#pBackGroundTransparent] = [#comment: "BackGroundTransparent?:", #format: #boolean, #default: 0]
  [ 49] getlocal 0 .............................. <mylist>
  [ 51] pushsymb 93 ............................. <#pText>
  [ 53] pushsymb 88 ............................. <#comment>
  [ 55] pushcons 2 .............................. <"Display text:">
  [ 57] pushsymb 89 ............................. <#format>
  [ 59] pushsymb 94 ............................. <#string>
  [ 61] pushsymb 91 ............................. <#default>
  [ 63] pushcons 3 .............................. <"This is a test.">
  [ 65] pusharglist 6 ........................... <[#comment: "Display text:", #format: #string, #default: "This is a test."]>
  [ 67] pushproplist ............................ <[#comment: "Display text:", #format: #string, #default: "This is a test."]>
  [ 68] pusharglistnoret 3 ...................... <mylist, #pText, [#comment: "Display text:", #format: #string, #default: "This is a test."]>
  [ 70] objcall 68 .............................. mylist[#pText] = [#comment: "Display text:", #format: #string, #default: "This is a test."]
  [ 72] getlocal 0 .............................. <mylist>
  [ 74] pushsymb 95 ............................. <#pHexColorString>
  [ 76] pushsymb 88 ............................. <#comment>
  [ 78] pushcons 4 .............................. <"Text color (hex):">
  [ 80] pushsymb 89 ............................. <#format>
  [ 82] pushsymb 94 ............................. <#string>
  [ 84] pushsymb 91 ............................. <#default>
  [ 86] pushcons 5 .............................. <"000000">
  [ 88] pusharglist 6 ........................... <[#comment: "Text color (hex):", #format: #string, #default: "000000"]>
  [ 90] pushproplist ............................ <[#comment: "Text color (hex):", #format: #string, #default: "000000"]>
  [ 91] pusharglistnoret 3 ...................... <mylist, #pHexColorString, [#comment: "Text color (hex):", #format: #string, #default: "000000"]>
  [ 93] objcall 68 .............................. mylist[#pHexColorString] = [#comment: "Text color (hex):", #format: #string, #default: "000000"]
  [ 95] getlocal 0 .............................. <mylist>
  [ 97] pushsymb 96 ............................. <#pAction>
  [ 99] pushsymb 88 ............................. <#comment>
  [101] pushcons 6 .............................. <"Action:">
  [103] pushsymb 89 ............................. <#format>
  [105] pushsymb 94 ............................. <#string>
  [107] pushsymb 91 ............................. <#default>
  [109] pushcons 7 .............................. <"nothing">
  [111] pushsymb 97 ............................. <#range>
  [113] pushcons 8 .............................. <"BEEP">
  [115] pushcons 7 .............................. <"nothing">
  [117] pushcons 9 .............................. <"displayText(me,pText)">
  [119] pusharglist 3 ........................... <["BEEP", "nothing", "displayText(me,pText)"]>
  [121] pushlist ................................ <["BEEP", "nothing", "displayText(me,pText)"]>
  [122] pusharglist 8 ........................... <[#comment: "Action:", #format: #string, #default: "nothing", #range: ["BEEP", "nothing", "displayText(me,pText)"]]>
  [124] pushproplist ............................ <[#comment: "Action:", #format: #string, #default: "nothing", #range: ["BEEP", "nothing", "displayText(me,pText)"]]>
  [125] pusharglistnoret 3 ...................... <mylist, #pAction, [#comment: "Action:", #format: #string, #default: "nothing", #range: ["BEEP", "nothing", "displayText(me,pText)"]]>
  [127] objcall 68 .............................. mylist[#pAction] = [#comment: "Action:", #format: #string, #default: "nothing", #range: ["BEEP", "nothing", "displayText(me,pText)"]]
  [129] getlocal 0 .............................. <mylist>
  [131] pusharglistnoret 1 ...................... <mylist>
  [133] extcall 31 .............................. return mylist
  [135] ret
end

on hexColorConvertor me, sHexString
  [  0] getparam 1 .............................. <sHexString>
  [  2] pushsymb 65 ............................. <#char>
  [  4] pusharglist 2 ........................... <sHexString, #char>
  [  6] objcall 32 .............................. <sHexString.char.count>
  [  8] setlocal 0
  [ 10] getlocal 0
  [ 12] pushint8 1 .............................. <1>
  [ 14] gteq
  [ 15] jmpifz [271] ............................ repeat with i = sHexString.char.count down to 1
  [ 18] getparam 1 .............................. <sHexString>
  [ 20] pushsymb 65 ............................. <#char>
  [ 22] getlocal 0 .............................. <i>
  [ 24] pusharglist 3 ........................... <sHexString, #char, i>
  [ 26] objcall 66 .............................. <sHexString.char[i]>
  [ 28] setlocal 1 .............................. sChar = sHexString.char[i]
  [ 30] getlocal 1 .............................. <sChar>
  [ 32] peek 0 .................................. case sChar of
  [ 34] pushcons 10 ............................. <"0">
  [ 36] nteq
  [ 37] jmpifz [112] ............................ (case) "0", ...
  [ 40] peek 0
  [ 42] pushcons 11 ............................. <"1">
  [ 44] nteq
  [ 45] jmpifz [112] ............................ (case) ..., "1", ...
  [ 48] peek 0
  [ 50] pushcons 12 ............................. <"2">
  [ 52] nteq
  [ 53] jmpifz [112] ............................ (case) ..., "2", ...
  [ 56] peek 0
  [ 58] pushcons 13 ............................. <"3">
  [ 60] nteq
  [ 61] jmpifz [112] ............................ (case) ..., "3", ...
  [ 64] peek 0
  [ 66] pushcons 14 ............................. <"4">
  [ 68] nteq
  [ 69] jmpifz [112] ............................ (case) ..., "4", ...
  [ 72] peek 0
  [ 74] pushcons 15 ............................. <"5">
  [ 76] nteq
  [ 77] jmpifz [112] ............................ (case) ..., "5", ...
  [ 80] peek 0
  [ 82] pushcons 16 ............................. <"6">
  [ 84] nteq
  [ 85] jmpifz [112] ............................ (case) ..., "6", ...
  [ 88] peek 0
  [ 90] pushcons 17 ............................. <"7">
  [ 92] nteq
  [ 93] jmpifz [112] ............................ (case) ..., "7", ...
  [ 96] peek 0
  [ 98] pushcons 18 ............................. <"8">
  [100] nteq
  [101] jmpifz [112] ............................ (case) ..., "8", ...
  [104] peek 0
  [106] pushcons 19 ............................. <"9">
  [108] eq
  [109] jmpifz [123] ............................ (case) ..., "9":
  [112] getlocal 1 .............................. <sChar>
  [114] pusharglist 1 ........................... <sChar>
  [116] extcall 99 .............................. <integer(sChar)>
  [118] setlocal 2 .............................. iNum = integer(sChar)
  [120] jmp [210]
  [123] peek 0
  [125] pushcons 20 ............................. <"A">
  [127] eq
  [128] jmpifz [138] ............................ (case) "A":
  [131] pushint8 10 ............................. <10>
  [133] setlocal 2 .............................. iNum = 10
  [135] jmp [210]
  [138] peek 0
  [140] pushcons 21 ............................. <"B">
  [142] eq
  [143] jmpifz [153] ............................ (case) "B":
  [146] pushint8 11 ............................. <11>
  [148] setlocal 2 .............................. iNum = 11
  [150] jmp [210]
  [153] peek 0
  [155] pushcons 22 ............................. <"C">
  [157] eq
  [158] jmpifz [168] ............................ (case) "C":
  [161] pushint8 12 ............................. <12>
  [163] setlocal 2 .............................. iNum = 12
  [165] jmp [210]
  [168] peek 0
  [170] pushcons 23 ............................. <"D">
  [172] eq
  [173] jmpifz [183] ............................ (case) "D":
  [176] pushint8 13 ............................. <13>
  [178] setlocal 2 .............................. iNum = 13
  [180] jmp [210]
  [183] peek 0
  [185] pushcons 24 ............................. <"E">
  [187] eq
  [188] jmpifz [198] ............................ (case) "E":
  [191] pushint8 14 ............................. <14>
  [193] setlocal 2 .............................. iNum = 14
  [195] jmp [210]
  [198] peek 0
  [200] pushcons 25 ............................. <"F">
  [202] eq
  [203] jmpifz [210] ............................ (case) "F":
  [206] pushint8 15 ............................. <15>
  [208] setlocal 2 .............................. iNum = 15
  [210] pop 1 ................................... end case
  [212] getlocal 0 .............................. <i>
  [214] getparam 1 .............................. <sHexString>
  [216] pushsymb 65 ............................. <#char>
  [218] pusharglist 2 ........................... <sHexString, #char>
  [220] objcall 32 .............................. <sHexString.char.count>
  [222] eq ...................................... <i = sHexString.char.count>
  [223] jmpifz [236] ............................ if i = sHexString.char.count then
  [226] getlocal 3 .............................. <iColorNum>
  [228] getlocal 2 .............................. <iNum>
  [230] add ..................................... <iColorNum + iNum>
  [231] setlocal 3 .............................. iColorNum = iColorNum + iNum
  [233] jmp [261] ............................... next repeat
  [236] getlocal 3 .............................. <iColorNum>
  [238] getlocal 2 .............................. <iNum>
  [240] pushint8 16 ............................. <16>
  [242] getparam 1 .............................. <sHexString>
  [244] pushsymb 65 ............................. <#char>
  [246] pusharglist 2 ........................... <sHexString, #char>
  [248] objcall 32 .............................. <sHexString.char.count>
  [250] getlocal 0 .............................. <i>
  [252] sub ..................................... <sHexString.char.count - i>
  [253] pusharglist 2 ........................... <16, sHexString.char.count - i>
  [255] extcall 75 .............................. <power(16, sHexString.char.count - i)>
  [257] mul ..................................... <iNum * power(16, sHexString.char.count - i)>
  [258] add ..................................... <iColorNum + (iNum * power(16, sHexString.char.count - i))>
  [259] setlocal 3 .............................. iColorNum = iColorNum + (iNum * power(16, sHexString.char.count - i))
  [261] pushint8 -1
  [263] getlocal 0
  [265] add
  [266] setlocal 0
  [268] endrepeat [ 10]
  [271] getlocal 3 .............................. <iColorNum>
  [273] pusharglist 1 ........................... <iColorNum>
  [275] extcall 99 .............................. <integer(iColorNum)>
  [277] pusharglistnoret 1 ...................... <integer(iColorNum)>
  [279] extcall 31 .............................. return integer(iColorNum)
  [281] ret
end

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 13 ........................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 12 .............................. <sprite(me.spriteNum)>
  [  8] setprop 11 .............................. pSprite = sprite(me.spriteNum)
  [ 10] getprop 11 .............................. <pSprite>
  [ 12] getchainedprop 14 ....................... <pSprite.member>
  [ 14] pushcons 26 ............................. <"Verdana">
  [ 16] setobjprop 103 .......................... pSprite.member.font = "Verdana"
  [ 18] getprop 87 .............................. <pBold>
  [ 20] jmpifz [ 34] ............................ if pBold then / else
  [ 23] getprop 11 .............................. <pSprite>
  [ 25] getchainedprop 14 ....................... <pSprite.member>
  [ 27] pushcons 27 ............................. <"bold">
  [ 29] setobjprop 104 .......................... pSprite.member.fontStyle = "bold"
  [ 31] jmp [ 68]
  [ 34] getprop 11 .............................. <pSprite>
  [ 36] getchainedprop 14 ....................... <pSprite.member>
  [ 38] getobjprop 105 .......................... <pSprite.member.type>
  [ 40] pushsymb 15 ............................. <#text>
  [ 42] eq ...................................... <pSprite.member.type = #text>
  [ 43] jmpifz [ 60] ............................ if pSprite.member.type = #text then / else
  [ 46] getprop 11 .............................. <pSprite>
  [ 48] getchainedprop 14 ....................... <pSprite.member>
  [ 50] pushsymb 106 ............................ <#plain>
  [ 52] pusharglist 1 ........................... <[#plain]>
  [ 54] pushlist ................................ <[#plain]>
  [ 55] setobjprop 104 .......................... pSprite.member.fontStyle = [#plain]
  [ 57] jmp [ 68]
  [ 60] getprop 11 .............................. <pSprite>
  [ 62] getchainedprop 14 ....................... <pSprite.member>
  [ 64] pushcons 28 ............................. <"plain">
  [ 66] setobjprop 104 .......................... pSprite.member.fontStyle = "plain"
  [ 68] getprop 11 .............................. <pSprite>
  [ 70] getchainedprop 14 ....................... <pSprite.member>
  [ 72] pushint8 10 ............................. <10>
  [ 74] setobjprop 107 .......................... pSprite.member.fontSize = 10
  [ 76] getprop 11 .............................. <pSprite>
  [ 78] getchainedprop 14 ....................... <pSprite.member>
  [ 80] getobjprop 105 .......................... <pSprite.member.type>
  [ 82] pushsymb 15 ............................. <#text>
  [ 84] eq ...................................... <pSprite.member.type = #text>
  [ 85] jmpifz [ 99] ............................ if pSprite.member.type = #text then / else
  [ 88] getprop 11 .............................. <pSprite>
  [ 90] getchainedprop 14 ....................... <pSprite.member>
  [ 92] pushint8 14 ............................. <14>
  [ 94] setobjprop 108 .......................... pSprite.member.fixedLineSpace = 14
  [ 96] jmp [107]
  [ 99] getprop 11 .............................. <pSprite>
  [101] getchainedprop 14 ....................... <pSprite.member>
  [103] pushint8 14 ............................. <14>
  [105] setobjprop 109 .......................... pSprite.member.lineHeight = 14
  [107] getprop 92 .............................. <pBackGroundTransparent>
  [109] jmpifz [118] ............................ if pBackGroundTransparent then
  [112] getprop 11 .............................. <pSprite>
  [114] pushint8 36 ............................. <36>
  [116] setobjprop 110 .......................... pSprite.ink = 36
  [118] getprop 11 .............................. <pSprite>
  [120] getchainedprop 14 ....................... <pSprite.member>
  [122] getprop 95 .............................. <pHexColorString>
  [124] pusharglist 1 ........................... <pHexColorString>
  [126] extcall 111 ............................. <rgb(pHexColorString)>
  [128] setobjprop 112 .......................... pSprite.member.color = rgb(pHexColorString)
  [130] getprop 11 .............................. <pSprite>
  [132] getchainedprop 14 ....................... <pSprite.member>
  [134] pushzero ................................ <0>
  [135] setobjprop 113 .......................... pSprite.member.scrollTop = 0
  [137] getprop 11 .............................. <pSprite>
  [139] getchainedprop 14 ....................... <pSprite.member>
  [141] pushcons 29 ............................. <EMPTY>
  [143] setobjprop 15 ........................... pSprite.member.text = EMPTY
  [145] ret
end

on displayText me, sTextToDisplay
  [  0] getprop 11 .............................. <pSprite>
  [  2] getchainedprop 14 ....................... <pSprite.member>
  [  4] getparam 1 .............................. <sTextToDisplay>
  [  6] setobjprop 15 ........................... pSprite.member.text = sTextToDisplay
  [  8] ret
end
