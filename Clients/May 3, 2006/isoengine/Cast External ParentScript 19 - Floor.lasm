property iShapeSprite, aTileSprites, aPatterns, sCastLib
global oIsoScene

on new me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 1148 ............................ <me.loadPatterns()>
  [  9] setobjprop 1153 ......................... me.aPatterns = me.loadPatterns()
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 238 ............................. <VOID>
  [ 18] setobjprop 1154 ......................... me.iShapeSprite = VOID
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setobjprop 1155 ......................... me.aTileSprites = []
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 0 .............................. <"Studio">
  [ 33] setobjprop 48 ........................... me.sCastLib = "Studio"
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] extcall 52 .............................. return me
  [ 41] ret
end

on Init me, oXml
  [  0] getparam 1 .............................. <oXml>
  [  2] pusharglist 1 ........................... <oXml>
  [  4] extcall 59 .............................. <voidp(oXml)>
  [  6] jmpifz [ 13] ............................ if voidp(oXml) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getparam 1 .............................. <oXml>
  [ 15] pushcons 1 .............................. <"Shape">
  [ 17] pusharglist 2 ........................... <oXml, "Shape">
  [ 19] extcall 433 ............................. <getNode(oXml, "Shape")>
  [ 22] setlocal 0 .............................. oShapeNode = getNode(oXml, "Shape")
  [ 24] getlocal 0 .............................. <oShapeNode>
  [ 26] pusharglist 1 ........................... <oShapeNode>
  [ 28] extcall 59 .............................. <voidp(oShapeNode)>
  [ 30] not ..................................... <not voidp(oShapeNode)>
  [ 31] jmpifz [ 56] ............................ if not voidp(oShapeNode) then
  [ 34] getglobal 133 ........................... <oIsoScene>
  [ 36] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 38] getlocal 0 .............................. <oShapeNode>
  [ 40] pusharglist 2 ........................... <oIsoScene.oSpriteManager, oShapeNode>
  [ 42] objcall 813 ............................. <oIsoScene.oSpriteManager.buildSpriteProps(oShapeNode)>
  [ 45] setlocal 1 .............................. aProps = oIsoScene.oSpriteManager.buildSpriteProps(oShapeNode)
  [ 47] getparam 0 .............................. <me>
  [ 49] getlocal 1 .............................. <aProps>
  [ 51] pusharglistnoret 2 ...................... <me, aProps>
  [ 53] objcall 1145 ............................ me.drawFloorShape(aProps)
  [ 56] getparam 1 .............................. <oXml>
  [ 58] pushcons 2 .............................. <"FloorTiles">
  [ 60] pusharglist 2 ........................... <oXml, "FloorTiles">
  [ 62] extcall 433 ............................. <getNode(oXml, "FloorTiles")>
  [ 65] setlocal 2 .............................. oFloorTiles = getNode(oXml, "FloorTiles")
  [ 67] getlocal 2 .............................. <oFloorTiles>
  [ 69] pusharglist 1 ........................... <oFloorTiles>
  [ 71] extcall 59 .............................. <voidp(oFloorTiles)>
  [ 73] not ..................................... <not voidp(oFloorTiles)>
  [ 74] jmpifz [238] ............................ if not voidp(oFloorTiles) then
  [ 77] getglobal 133 ........................... <oIsoScene>
  [ 79] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 81] getlocal 2 .............................. <oFloorTiles>
  [ 83] pusharglist 2 ........................... <oIsoScene.oSpriteManager, oFloorTiles>
  [ 85] objcall 813 ............................. <oIsoScene.oSpriteManager.buildSpriteProps(oFloorTiles)>
  [ 88] setlocal 1 .............................. aProps = oIsoScene.oSpriteManager.buildSpriteProps(oFloorTiles)
  [ 90] getlocal 2 .............................. <oFloorTiles>
  [ 92] pushcons 3 .............................. <"FloorTile">
  [ 94] pusharglist 2 ........................... <oFloorTiles, "FloorTile">
  [ 96] extcall 1144 ............................ <getNodes(oFloorTiles, "FloorTile")>
  [ 99] setlocal 3 .............................. aFloorTiles = getNodes(oFloorTiles, "FloorTile")
  [101] getlocal 3 .............................. <aFloorTiles>
  [103] getobjprop 155 .......................... <aFloorTiles.count>
  [105] setlocal 4
  [107] getlocal 4
  [109] pushint8 1 .............................. <1>
  [111] gteq
  [112] jmpifz [238] ............................ repeat with i = aFloorTiles.count down to 1
  [115] getlocal 3 .............................. <aFloorTiles>
  [117] getlocal 4 .............................. <i>
  [119] pusharglist 2 ........................... <aFloorTiles, i>
  [121] objcall 72 .............................. <aFloorTiles[i]>
  [123] setlocal 5 .............................. oFloorTile = aFloorTiles[i]
  [125] getlocal 5 .............................. <oFloorTile>
  [127] pusharglist 1 ........................... <oFloorTile>
  [129] objcall 498 ............................. <oFloorTile.toString()>
  [132] setlocal 6 .............................. sFloorTile = oFloorTile.toString()
  [134] getlocal 5 .............................. <oFloorTile>
  [136] getchainedprop 385 ...................... <oFloorTile.attributes>
  [139] getobjprop 831 .......................... <oFloorTile.attributes.row>
  [142] pusharglist 1 ........................... <oFloorTile.attributes.row>
  [144] extcall 69 .............................. <integer(oFloorTile.attributes.row)>
  [146] setlocal 7 .............................. iRow = integer(oFloorTile.attributes.row)
  [148] getlocal 5 .............................. <oFloorTile>
  [150] getchainedprop 385 ...................... <oFloorTile.attributes>
  [153] getobjprop 832 .......................... <oFloorTile.attributes.col>
  [156] pusharglist 1 ........................... <oFloorTile.attributes.col>
  [158] extcall 69 .............................. <integer(oFloorTile.attributes.col)>
  [160] setlocal 8 .............................. iCol = integer(oFloorTile.attributes.col)
  [162] pushzero ................................ <0>
  [163] setlocal 9 .............................. iXOff = 0
  [165] pushzero ................................ <0>
  [166] setlocal 10 ............................. iYOff = 0
  [168] getlocal 6 .............................. <sFloorTile>
  [170] pushcons 4 .............................. <"xoff=">
  [172] containsstr ............................. <sFloorTile contains "xoff=">
  [173] jmpifz [190] ............................ if sFloorTile contains "xoff=" then
  [176] getlocal 5 .............................. <oFloorTile>
  [178] getchainedprop 385 ...................... <oFloorTile.attributes>
  [181] getobjprop 388 .......................... <oFloorTile.attributes.xoff>
  [184] pusharglist 1 ........................... <oFloorTile.attributes.xoff>
  [186] extcall 69 .............................. <integer(oFloorTile.attributes.xoff)>
  [188] setlocal 9 .............................. iXOff = integer(oFloorTile.attributes.xoff)
  [190] getlocal 6 .............................. <sFloorTile>
  [192] pushcons 5 .............................. <"yoff=">
  [194] containsstr ............................. <sFloorTile contains "yoff=">
  [195] jmpifz [212] ............................ if sFloorTile contains "yoff=" then
  [198] getlocal 5 .............................. <oFloorTile>
  [200] getchainedprop 385 ...................... <oFloorTile.attributes>
  [203] getobjprop 389 .......................... <oFloorTile.attributes.yoff>
  [206] pusharglist 1 ........................... <oFloorTile.attributes.yoff>
  [208] extcall 69 .............................. <integer(oFloorTile.attributes.yoff)>
  [210] setlocal 10 ............................. iYOff = integer(oFloorTile.attributes.yoff)
  [212] getparam 0 .............................. <me>
  [214] getlocal 7 .............................. <iRow>
  [216] getlocal 8 .............................. <iCol>
  [218] getlocal 1 .............................. <aProps>
  [220] getlocal 9 .............................. <iXOff>
  [222] getlocal 10 ............................. <iYOff>
  [224] pusharglistnoret 6 ...................... <me, iRow, iCol, aProps, iXOff, iYOff>
  [226] objcall 1146 ............................ me.drawFloortile(iRow, iCol, aProps, iXOff, iYOff)
  [229] pushint8 -1
  [231] getlocal 4
  [233] add
  [234] setlocal 4
  [236] endrepeat [107]
  [238] ret
end

on drawFloorShape me, aProps
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 1 .............................. <aProps>
  [  6] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [  8] objcall 135 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [ 10] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [ 12] getlocal 0 .............................. <iSprite>
  [ 14] pusharglist 1 ........................... <iSprite>
  [ 16] extcall 119 ............................. <sprite(iSprite)>
  [ 18] getlocal 0 .............................. <iSprite>
  [ 20] pusharglist 1 ........................... <iSprite>
  [ 22] extcall 119 ............................. <sprite(iSprite)>
  [ 24] getobjprop 143 .......................... <sprite(iSprite).locH>
  [ 26] pushint8 1 .............................. <1>
  [ 28] sub ..................................... <sprite(iSprite).locH - 1>
  [ 29] setobjprop 143 .......................... sprite(iSprite).locH = sprite(iSprite).locH - 1
  [ 31] getlocal 0 .............................. <iSprite>
  [ 33] pusharglist 1 ........................... <iSprite>
  [ 35] extcall 119 ............................. <sprite(iSprite)>
  [ 37] getlocal 0 .............................. <iSprite>
  [ 39] pusharglist 1 ........................... <iSprite>
  [ 41] extcall 119 ............................. <sprite(iSprite)>
  [ 43] getobjprop 122 .......................... <sprite(iSprite).locV>
  [ 45] pushint8 2 .............................. <2>
  [ 47] sub ..................................... <sprite(iSprite).locV - 2>
  [ 48] setobjprop 122 .......................... sprite(iSprite).locV = sprite(iSprite).locV - 2
  [ 50] getparam 0 .............................. <me>
  [ 52] getlocal 0 .............................. <iSprite>
  [ 54] setobjprop 1154 ......................... me.iShapeSprite = iSprite
  [ 57] getparam 0 .............................. <me>
  [ 59] pushint8 1 .............................. <1>
  [ 61] pushint8 1 .............................. <1>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 1154 ......................... <me.iShapeSprite>
  [ 68] pusharglistnoret 4 ...................... <me, 1, 1, me.iShapeSprite>
  [ 70] objcall 1149 ............................ me.setPattern(1, 1, me.iShapeSprite)
  [ 73] ret
end

on drawFloortile me, iRow, iCol, aProps, iXOff, iYOff
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [  4] getparam 1 .............................. <iRow>
  [  6] getparam 2 .............................. <iCol>
  [  8] pusharglist 3 ........................... <oIsoScene.oGrid, iRow, iCol>
  [ 10] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(iRow, iCol)>
  [ 13] setlocal 0 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(iRow, iCol)
  [ 15] getlocal 0 .............................. <oSquare>
  [ 17] getchainedprop 556 ...................... <oSquare.oViewPoints>
  [ 20] getobjprop 554 .......................... <oSquare.oViewPoints.bl>
  [ 23] setlocal 1 .............................. oLoc = oSquare.oViewPoints.bl
  [ 25] getparam 3 .............................. <aProps>
  [ 27] pushsymb 35 ............................. <#x>
  [ 29] getlocal 1 .............................. <oLoc>
  [ 31] getobjprop 143 .......................... <oLoc.locH>
  [ 33] pusharglistnoret 3 ...................... <aProps, #x, oLoc.locH>
  [ 35] objcall 1085 ............................ aProps[#x] = oLoc.locH
  [ 38] getparam 3 .............................. <aProps>
  [ 40] pushsymb 36 ............................. <#y>
  [ 42] getlocal 1 .............................. <oLoc>
  [ 44] getobjprop 122 .......................... <oLoc.locV>
  [ 46] pusharglistnoret 3 ...................... <aProps, #y, oLoc.locV>
  [ 48] objcall 1085 ............................ aProps[#y] = oLoc.locV
  [ 51] getglobal 133 ........................... <oIsoScene>
  [ 53] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 55] getparam 3 .............................. <aProps>
  [ 57] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [ 59] objcall 135 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [ 61] setlocal 2 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [ 63] getparam 4 .............................. <iXOff>
  [ 65] pusharglist 1 ........................... <iXOff>
  [ 67] extcall 59 .............................. <voidp(iXOff)>
  [ 69] not ..................................... <not voidp(iXOff)>
  [ 70] jmpifz [ 92] ............................ if not voidp(iXOff) then
  [ 73] getlocal 2 .............................. <iSprite>
  [ 75] pusharglist 1 ........................... <iSprite>
  [ 77] extcall 119 ............................. <sprite(iSprite)>
  [ 79] getlocal 2 .............................. <iSprite>
  [ 81] pusharglist 1 ........................... <iSprite>
  [ 83] extcall 119 ............................. <sprite(iSprite)>
  [ 85] getobjprop 143 .......................... <sprite(iSprite).locH>
  [ 87] getparam 4 .............................. <iXOff>
  [ 89] add ..................................... <sprite(iSprite).locH + iXOff>
  [ 90] setobjprop 143 .......................... sprite(iSprite).locH = sprite(iSprite).locH + iXOff
  [ 92] getparam 5 .............................. <iYOff>
  [ 94] pusharglist 1 ........................... <iYOff>
  [ 96] extcall 59 .............................. <voidp(iYOff)>
  [ 98] not ..................................... <not voidp(iYOff)>
  [ 99] jmpifz [121] ............................ if not voidp(iYOff) then
  [102] getlocal 2 .............................. <iSprite>
  [104] pusharglist 1 ........................... <iSprite>
  [106] extcall 119 ............................. <sprite(iSprite)>
  [108] getlocal 2 .............................. <iSprite>
  [110] pusharglist 1 ........................... <iSprite>
  [112] extcall 119 ............................. <sprite(iSprite)>
  [114] getobjprop 122 .......................... <sprite(iSprite).locV>
  [116] getparam 5 .............................. <iYOff>
  [118] add ..................................... <sprite(iSprite).locV + iYOff>
  [119] setobjprop 122 .......................... sprite(iSprite).locV = sprite(iSprite).locV + iYOff
  [121] getlocal 2 .............................. <iSprite>
  [123] pusharglist 1 ........................... <iSprite>
  [125] extcall 119 ............................. <sprite(iSprite)>
  [127] getlocal 2 .............................. <iSprite>
  [129] pusharglist 1 ........................... <iSprite>
  [131] extcall 119 ............................. <sprite(iSprite)>
  [133] getobjprop 143 .......................... <sprite(iSprite).locH>
  [135] pushzero ................................ <0>
  [136] sub ..................................... <sprite(iSprite).locH - 0>
  [137] setobjprop 143 .......................... sprite(iSprite).locH = sprite(iSprite).locH - 0
  [139] getlocal 2 .............................. <iSprite>
  [141] pusharglist 1 ........................... <iSprite>
  [143] extcall 119 ............................. <sprite(iSprite)>
  [145] getlocal 2 .............................. <iSprite>
  [147] pusharglist 1 ........................... <iSprite>
  [149] extcall 119 ............................. <sprite(iSprite)>
  [151] getobjprop 122 .......................... <sprite(iSprite).locV>
  [153] pushzero ................................ <0>
  [154] sub ..................................... <sprite(iSprite).locV - 0>
  [155] setobjprop 122 .......................... sprite(iSprite).locV = sprite(iSprite).locV - 0
  [157] getparam 0 .............................. <me>
  [159] getchainedprop 1155 ..................... <me.aTileSprites>
  [162] getlocal 2 .............................. <iSprite>
  [164] pusharglistnoret 2 ...................... <me.aTileSprites, iSprite>
  [166] objcall 140 ............................. me.aTileSprites.add(iSprite)
  [168] getparam 0 .............................. <me>
  [170] pushint8 1 .............................. <1>
  [172] pushint8 1 .............................. <1>
  [174] getlocal 2 .............................. <iSprite>
  [176] pusharglistnoret 4 ...................... <me, 1, 1, iSprite>
  [178] objcall 1149 ............................ me.setPattern(1, 1, iSprite)
  [181] ret
end

on mouseDownEvent me, iSprite, oSprite
  [  0] ret
end

on mouseIsOverFloor me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. bRollover = 0
  [  3] pushint8 1 .............................. <1>
  [  5] setlocal 1
  [  7] getlocal 1
  [  9] getparam 0 .............................. <me>
  [ 11] pushsymb 1155 ........................... <#aTileSprites>
  [ 14] pusharglist 2 ........................... <me, #aTileSprites>
  [ 16] objcall 155 ............................. <me.aTileSprites.count>
  [ 18] lteq
  [ 19] jmpifz [ 57] ............................ repeat with i = 1 to me.aTileSprites.count
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 1155 ........................... <#aTileSprites>
  [ 27] getlocal 1 .............................. <i>
  [ 29] pusharglist 3 ........................... <me, #aTileSprites, i>
  [ 31] objcall 104 ............................. <me.aTileSprites[i]>
  [ 33] pusharglist 1 ........................... <me.aTileSprites[i]>
  [ 35] extcall 967 ............................. <rollover(me.aTileSprites[i])>
  [ 38] jmpifz [ 48] ............................ if rollover(me.aTileSprites[i]) then
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 0 .............................. bRollover = 1
  [ 45] jmp [ 57] ............................... exit repeat
  [ 48] pushint8 1
  [ 50] getlocal 1
  [ 52] add
  [ 53] setlocal 1
  [ 55] endrepeat [  7]
  [ 57] getlocal 0 .............................. <bRollover>
  [ 59] pusharglistnoret 1 ...................... <bRollover>
  [ 61] extcall 52 .............................. return bRollover
  [ 63] ret
end

on destroy me
  [  0] getglobal 133 ........................... <oIsoScene>
  [  2] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 1154 ......................... <me.iShapeSprite>
  [  9] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.iShapeSprite>
  [ 11] objcall 728 ............................. oIsoScene.oSpriteManager.returnPooledSprite(me.iShapeSprite)
  [ 14] getglobal 133 ........................... <oIsoScene>
  [ 16] getchainedprop 134 ...................... <oIsoScene.oSpriteManager>
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 1155 ......................... <me.aTileSprites>
  [ 23] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.aTileSprites>
  [ 25] objcall 154 ............................. oIsoScene.oSpriteManager.returnPooledSprites(me.aTileSprites)
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] setobjprop 1155 ......................... me.aTileSprites = []
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglist 0 ........................... <>
  [ 39] extcall 238 ............................. <VOID>
  [ 41] setobjprop 1154 ......................... me.iShapeSprite = VOID
  [ 44] ret
end

on toggleDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1155 ......................... <me.aTileSprites>
  [  5] peek 0
  [  7] pusharglist 1
  [  9] extcall 155
  [ 11] pushint8 1
  [ 13] peek 0
  [ 15] peek 2
  [ 17] lteq
  [ 18] jmpifz [ 77] ............................ repeat with i in me.aTileSprites
  [ 21] peek 2
  [ 23] peek 1
  [ 25] pusharglist 2
  [ 27] extcall 72
  [ 29] setlocal 0
  [ 31] pusharglist 0 ........................... <>
  [ 33] thebuiltin 500 .......................... <the optionDown>
  [ 36] jmpifz [ 53] ............................ if the optionDown then
  [ 39] getlocal 0 .............................. <i>
  [ 41] pusharglist 1 ........................... <i>
  [ 43] extcall 119 ............................. <sprite(i)>
  [ 45] pushint8 1 .............................. <1>
  [ 47] setobjprop 695 .......................... sprite(i).visible = 1
  [ 50] jmp [ 72] ............................... next repeat
  [ 53] getlocal 0 .............................. <i>
  [ 55] pusharglist 1 ........................... <i>
  [ 57] extcall 119 ............................. <sprite(i)>
  [ 59] getlocal 0 .............................. <i>
  [ 61] pusharglist 1 ........................... <i>
  [ 63] extcall 119 ............................. <sprite(i)>
  [ 65] getobjprop 695 .......................... <sprite(i).visible>
  [ 68] not ..................................... <not sprite(i).visible>
  [ 69] setobjprop 695 .......................... sprite(i).visible = not sprite(i).visible
  [ 72] pushint8 1
  [ 74] add
  [ 75] endrepeat [ 13]
  [ 77] pop 3
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 1154 ......................... <me.iShapeSprite>
  [ 84] pusharglist 1 ........................... <me.iShapeSprite>
  [ 86] extcall 59 .............................. <voidp(me.iShapeSprite)>
  [ 88] not ..................................... <not voidp(me.iShapeSprite)>
  [ 89] jmpifz [117] ............................ if not voidp(me.iShapeSprite) then
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 1154 ......................... <me.iShapeSprite>
  [ 97] pusharglist 1 ........................... <me.iShapeSprite>
  [ 99] extcall 119 ............................. <sprite(me.iShapeSprite)>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 1154 ......................... <me.iShapeSprite>
  [106] pusharglist 1 ........................... <me.iShapeSprite>
  [108] extcall 119 ............................. <sprite(me.iShapeSprite)>
  [110] getobjprop 695 .......................... <sprite(me.iShapeSprite).visible>
  [113] not ..................................... <not sprite(me.iShapeSprite).visible>
  [114] setobjprop 695 .......................... sprite(me.iShapeSprite).visible = not sprite(me.iShapeSprite).visible
  [117] ret
end

on hideDisplay me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1155 ......................... <me.aTileSprites>
  [  5] peek 0
  [  7] pusharglist 1
  [  9] extcall 155
  [ 11] pushint8 1
  [ 13] peek 0
  [ 15] peek 2
  [ 17] lteq
  [ 18] jmpifz [ 46] ............................ repeat with i in me.aTileSprites
  [ 21] peek 2
  [ 23] peek 1
  [ 25] pusharglist 2
  [ 27] extcall 72
  [ 29] setlocal 0
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 1 ........................... <i>
  [ 35] extcall 119 ............................. <sprite(i)>
  [ 37] pushzero ................................ <0>
  [ 38] setobjprop 695 .......................... sprite(i).visible = 0
  [ 41] pushint8 1
  [ 43] add
  [ 44] endrepeat [ 13]
  [ 46] pop 3
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 1154 ......................... <me.iShapeSprite>
  [ 53] pusharglist 1 ........................... <me.iShapeSprite>
  [ 55] extcall 59 .............................. <voidp(me.iShapeSprite)>
  [ 57] not ..................................... <not voidp(me.iShapeSprite)>
  [ 58] jmpifz [ 74] ............................ if not voidp(me.iShapeSprite) then
  [ 61] getparam 0 .............................. <me>
  [ 63] getobjprop 1154 ......................... <me.iShapeSprite>
  [ 66] pusharglist 1 ........................... <me.iShapeSprite>
  [ 68] extcall 119 ............................. <sprite(me.iShapeSprite)>
  [ 70] pushzero ................................ <0>
  [ 71] setobjprop 695 .......................... sprite(me.iShapeSprite).visible = 0
  [ 74] ret
end

on loadPatterns me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aFloorPatterns = [:]
  [  5] pushcons 6 .............................. <"floorpattern_patterns_index">
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 48 ........................... <me.sCastLib>
  [ 11] pusharglist 2 ........................... <"floorpattern_patterns_index", me.sCastLib>
  [ 13] extcall 30 .............................. <member("floorpattern_patterns_index", me.sCastLib)>
  [ 15] setlocal 1 .............................. oPatternMember = member("floorpattern_patterns_index", me.sCastLib)
  [ 17] getlocal 1 .............................. <oPatternMember>
  [ 19] getobjprop 73 ........................... <oPatternMember.memberNum>
  [ 21] pushint8 1 .............................. <1>
  [ 23] inv ..................................... <-1>
  [ 24] eq ...................................... <oPatternMember.memberNum = -1>
  [ 25] jmpifz [ 34] ............................ if oPatternMember.memberNum = -1 then
  [ 28] getlocal 0 .............................. <aFloorPatterns>
  [ 30] pusharglistnoret 1 ...................... <aFloorPatterns>
  [ 32] extcall 52 .............................. return aFloorPatterns
  [ 34] getlocal 1 .............................. <oPatternMember>
  [ 36] getobjprop 152 .......................... <oPatternMember.text>
  [ 38] setlocal 2 .............................. sPatternText = oPatternMember.text
  [ 40] pushint8 1 .............................. <1>
  [ 42] setlocal 3
  [ 44] getlocal 3
  [ 46] getlocal 2 .............................. <sPatternText>
  [ 48] pushsymb 1161 ........................... <#lines>
  [ 51] pusharglist 2 ........................... <sPatternText, #lines>
  [ 53] objcall 155 ............................. <sPatternText.lines.count>
  [ 55] lteq
  [ 56] jmpifz [207] ............................ repeat with i = 1 to sPatternText.lines.count
  [ 59] getlocal 2 .............................. <sPatternText>
  [ 61] pushsymb 1162 ........................... <#line>
  [ 64] getlocal 3 .............................. <i>
  [ 66] pusharglist 3 ........................... <sPatternText, #line, i>
  [ 68] objcall 104 ............................. <sPatternText.line[i]>
  [ 70] setlocal 4 .............................. sPatternLine = sPatternText.line[i]
  [ 72] getlocal 4 .............................. <sPatternLine>
  [ 74] pusharglist 1 ........................... <sPatternLine>
  [ 76] extcall 1163 ............................ <value(sPatternLine)>
  [ 79] setlocal 5 .............................. aPatternList = value(sPatternLine)
  [ 81] getlocal 5 .............................. <aPatternList>
  [ 83] getobjprop 99 ........................... <aPatternList.name>
  [ 85] setlocal 6 .............................. sPatternName = aPatternList.name
  [ 87] getlocal 5 .............................. <aPatternList>
  [ 89] getobjprop 1164 ......................... <aPatternList.field>
  [ 92] setlocal 7 .............................. sColorField = aPatternList.field
  [ 94] pusharglist 0 ........................... <[]>
  [ 96] pushlist ................................ <[]>
  [ 97] setlocal 8 .............................. aColors = []
  [ 99] getlocal 7 .............................. <sColorField>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 48 ........................... <me.sCastLib>
  [105] pusharglist 2 ........................... <sColorField, me.sCastLib>
  [107] extcall 30 .............................. <member(sColorField, me.sCastLib)>
  [109] setlocal 9 .............................. oColorsMember = member(sColorField, me.sCastLib)
  [111] getlocal 9 .............................. <oColorsMember>
  [113] getobjprop 152 .......................... <oColorsMember.text>
  [115] setlocal 10 ............................. sColorsText = oColorsMember.text
  [117] pushint8 1 .............................. <1>
  [119] setlocal 11
  [121] getlocal 11
  [123] getlocal 10 ............................. <sColorsText>
  [125] pushsymb 1161 ........................... <#lines>
  [128] pusharglist 2 ........................... <sColorsText, #lines>
  [130] objcall 155 ............................. <sColorsText.lines.count>
  [132] lteq
  [133] jmpifz [175] ............................ repeat with ii = 1 to sColorsText.lines.count
  [136] getlocal 10 ............................. <sColorsText>
  [138] pushsymb 1162 ........................... <#line>
  [141] getlocal 11 ............................. <ii>
  [143] pusharglist 3 ........................... <sColorsText, #line, ii>
  [145] objcall 104 ............................. <sColorsText.line[ii]>
  [147] setlocal 12 ............................. sColorLine = sColorsText.line[ii]
  [149] getlocal 12 ............................. <sColorLine>
  [151] pusharglist 1 ........................... <sColorLine>
  [153] extcall 1163 ............................ <value(sColorLine)>
  [156] setlocal 13 ............................. aColorsList = value(sColorLine)
  [158] getlocal 8 .............................. <aColors>
  [160] getlocal 13 ............................. <aColorsList>
  [162] pusharglistnoret 2 ...................... <aColors, aColorsList>
  [164] objcall 140 ............................. aColors.add(aColorsList)
  [166] pushint8 1
  [168] getlocal 11
  [170] add
  [171] setlocal 11
  [173] endrepeat [121]
  [175] getlocal 8 .............................. <aColors>
  [177] pusharglist 1 ........................... <aColors>
  [179] extcall 59 .............................. <voidp(aColors)>
  [181] jmpifz [187] ............................ if voidp(aColors) then
  [184] jmp [198] ............................... next repeat
  [187] getlocal 0 .............................. <aFloorPatterns>
  [189] getlocal 6 .............................. <sPatternName>
  [191] getlocal 8 .............................. <aColors>
  [193] pusharglistnoret 3 ...................... <aFloorPatterns, sPatternName, aColors>
  [195] objcall 595 ............................. aFloorPatterns.addProp(sPatternName, aColors)
  [198] pushint8 1
  [200] getlocal 3
  [202] add
  [203] setlocal 3
  [205] endrepeat [ 44]
  [207] getlocal 0 .............................. <aFloorPatterns>
  [209] pusharglistnoret 1 ...................... <aFloorPatterns>
  [211] extcall 52 .............................. return aFloorPatterns
  [213] ret
end

on setPattern me, iPatternIndex, iColorIndex, iSprite
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1153 ........................... <#aPatterns>
  [  5] pusharglist 2 ........................... <me, #aPatterns>
  [  7] objcall 155 ............................. <me.aPatterns.count>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <me.aPatterns.count = 0>
  [ 11] jmpifz [ 18] ............................ if me.aPatterns.count = 0 then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 52 .............................. return 
  [ 18] getparam 1 .............................. <iPatternIndex>
  [ 20] pusharglist 1 ........................... <iPatternIndex>
  [ 22] extcall 59 .............................. <voidp(iPatternIndex)>
  [ 24] jmpifz [ 31] ............................ if voidp(iPatternIndex) then
  [ 27] pushint8 1 .............................. <1>
  [ 29] setparam 1 .............................. iPatternIndex = 1
  [ 31] getparam 2 .............................. <iColorIndex>
  [ 33] pusharglist 1 ........................... <iColorIndex>
  [ 35] extcall 59 .............................. <voidp(iColorIndex)>
  [ 37] jmpifz [ 44] ............................ if voidp(iColorIndex) then
  [ 40] pushint8 1 .............................. <1>
  [ 42] setparam 2 .............................. iColorIndex = 1
  [ 44] getparam 1 .............................. <iPatternIndex>
  [ 46] pushint8 1 .............................. <1>
  [ 48] lt ...................................... <iPatternIndex < 1>
  [ 49] getparam 1 .............................. <iPatternIndex>
  [ 51] getparam 0 .............................. <me>
  [ 53] pushsymb 1153 ........................... <#aPatterns>
  [ 56] pusharglist 2 ........................... <me, #aPatterns>
  [ 58] objcall 155 ............................. <me.aPatterns.count>
  [ 60] gt ...................................... <iPatternIndex > me.aPatterns.count>
  [ 61] or ...................................... <(iPatternIndex < 1) or (iPatternIndex > me.aPatterns.count)>
  [ 62] jmpifz [ 69] ............................ if (iPatternIndex < 1) or (iPatternIndex > me.aPatterns.count) then
  [ 65] pushint8 1 .............................. <1>
  [ 67] setparam 1 .............................. iPatternIndex = 1
  [ 69] getparam 0 .............................. <me>
  [ 71] getchainedprop 1153 ..................... <me.aPatterns>
  [ 74] getparam 1 .............................. <iPatternIndex>
  [ 76] pusharglist 2 ........................... <me.aPatterns, iPatternIndex>
  [ 78] objcall 1123 ............................ <me.aPatterns.getPropAt(iPatternIndex)>
  [ 81] setlocal 0 .............................. sPatternName = me.aPatterns.getPropAt(iPatternIndex)
  [ 83] getparam 0 .............................. <me>
  [ 85] pushsymb 1153 ........................... <#aPatterns>
  [ 88] getparam 1 .............................. <iPatternIndex>
  [ 90] pusharglist 3 ........................... <me, #aPatterns, iPatternIndex>
  [ 92] objcall 104 ............................. <me.aPatterns[iPatternIndex]>
  [ 94] setlocal 1 .............................. aColors = me.aPatterns[iPatternIndex]
  [ 96] getparam 2 .............................. <iColorIndex>
  [ 98] pushint8 1 .............................. <1>
  [100] lt ...................................... <iColorIndex < 1>
  [101] getparam 2 .............................. <iColorIndex>
  [103] getlocal 1 .............................. <aColors>
  [105] getobjprop 155 .......................... <aColors.count>
  [107] gt ...................................... <iColorIndex > aColors.count>
  [108] or ...................................... <(iColorIndex < 1) or (iColorIndex > aColors.count)>
  [109] jmpifz [116] ............................ if (iColorIndex < 1) or (iColorIndex > aColors.count) then
  [112] pushint8 1 .............................. <1>
  [114] setparam 2 .............................. iColorIndex = 1
  [116] getlocal 1 .............................. <aColors>
  [118] getparam 2 .............................. <iColorIndex>
  [120] pusharglist 2 ........................... <aColors, iColorIndex>
  [122] objcall 72 .............................. <aColors[iColorIndex]>
  [124] setlocal 2 .............................. aColorData = aColors[iColorIndex]
  [126] getlocal 2 .............................. <aColorData>
  [128] pusharglist 0 ........................... <>
  [130] extcall 238 ............................. <VOID>
  [132] eq ...................................... <aColorData = VOID>
  [133] jmpifz [141] ............................ if aColorData = VOID then
  [136] pusharglistnoret 0 ...................... <>
  [138] extcall 493 ............................. nothing()
  [141] getparam 3 .............................. <iSprite>
  [143] getparam 0 .............................. <me>
  [145] getobjprop 1154 ......................... <me.iShapeSprite>
  [148] eq ...................................... <iSprite = me.iShapeSprite>
  [149] jmpifz [172] ............................ if iSprite = me.iShapeSprite then
  [152] getparam 0 .............................. <me>
  [154] getlocal 0 .............................. <sPatternName>
  [156] getlocal 2 .............................. <aColorData>
  [158] getparam 0 .............................. <me>
  [160] getobjprop 1154 ......................... <me.iShapeSprite>
  [163] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, me.iShapeSprite>
  [165] objcall 1150 ............................ me.displayShapePattern(sPatternName, aColorData, me.iShapeSprite)
  [168] pusharglistnoret 0 ...................... <>
  [170] extcall 52 .............................. return 
  [172] getparam 3 .............................. <iSprite>
  [174] pusharglist 1 ........................... <iSprite>
  [176] extcall 59 .............................. <voidp(iSprite)>
  [178] jmpifz [251] ............................ if voidp(iSprite) then / else
  [181] getparam 0 .............................. <me>
  [183] getlocal 0 .............................. <sPatternName>
  [185] getlocal 2 .............................. <aColorData>
  [187] getparam 0 .............................. <me>
  [189] getobjprop 1154 ......................... <me.iShapeSprite>
  [192] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, me.iShapeSprite>
  [194] objcall 1150 ............................ me.displayShapePattern(sPatternName, aColorData, me.iShapeSprite)
  [197] getparam 0 .............................. <me>
  [199] getobjprop 1155 ......................... <me.aTileSprites>
  [202] peek 0
  [204] pusharglist 1
  [206] extcall 155
  [208] pushint8 1
  [210] peek 0
  [212] peek 2
  [214] lteq
  [215] jmpifz [246] ............................ repeat with i in me.aTileSprites
  [218] peek 2
  [220] peek 1
  [222] pusharglist 2
  [224] extcall 72
  [226] setlocal 3
  [228] getparam 0 .............................. <me>
  [230] getlocal 0 .............................. <sPatternName>
  [232] getlocal 2 .............................. <aColorData>
  [234] getlocal 3 .............................. <i>
  [236] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, i>
  [238] objcall 1151 ............................ me.displayPattern(sPatternName, aColorData, i)
  [241] pushint8 1
  [243] add
  [244] endrepeat [210]
  [246] pop 3
  [248] jmp [264]
  [251] getparam 0 .............................. <me>
  [253] getlocal 0 .............................. <sPatternName>
  [255] getlocal 2 .............................. <aColorData>
  [257] getparam 3 .............................. <iSprite>
  [259] pusharglistnoret 4 ...................... <me, sPatternName, aColorData, iSprite>
  [261] objcall 1151 ............................ me.displayPattern(sPatternName, aColorData, iSprite)
  [264] ret
end

on displayShapePattern me, sPatternName, aColorData, iSprite
  [  0] getparam 3 .............................. <iSprite>
  [  2] pusharglist 1 ........................... <iSprite>
  [  4] extcall 119 ............................. <sprite(iSprite)>
  [  6] getchainedprop 30 ....................... <sprite(iSprite).member>
  [  8] getparam 2 .............................. <aColorData>
  [ 10] getobjprop 1180 ......................... <aColorData.startcolor>
  [ 13] setobjprop 1181 ......................... sprite(iSprite).member.fillColor = aColorData.startcolor
  [ 16] getparam 3 .............................. <iSprite>
  [ 18] pusharglist 1 ........................... <iSprite>
  [ 20] extcall 119 ............................. <sprite(iSprite)>
  [ 22] getchainedprop 30 ....................... <sprite(iSprite).member>
  [ 24] getparam 2 .............................. <aColorData>
  [ 26] getobjprop 1182 ......................... <aColorData.endColor>
  [ 29] setobjprop 1182 ......................... sprite(iSprite).member.endColor = aColorData.endColor
  [ 32] getparam 3 .............................. <iSprite>
  [ 34] pusharglist 1 ........................... <iSprite>
  [ 36] extcall 119 ............................. <sprite(iSprite)>
  [ 38] getparam 2 .............................. <aColorData>
  [ 40] getobjprop 1183 ......................... <aColorData.shapeBlend>
  [ 43] setobjprop 694 .......................... sprite(iSprite).blend = aColorData.shapeBlend
  [ 46] getparam 3 .............................. <iSprite>
  [ 48] pusharglist 1 ........................... <iSprite>
  [ 50] extcall 119 ............................. <sprite(iSprite)>
  [ 52] getparam 2 .............................. <aColorData>
  [ 54] getobjprop 1184 ......................... <aColorData.texturecolor>
  [ 57] setobjprop 202 .......................... sprite(iSprite).color = aColorData.texturecolor
  [ 59] ret
end

on displayPattern me, sPatternName, aColorData, iSprite
  [  0] getparam 3 .............................. <iSprite>
  [  2] pusharglist 1 ........................... <iSprite>
  [  4] extcall 119 ............................. <sprite(iSprite)>
  [  6] getchainedprop 30 ....................... <sprite(iSprite).member>
  [  8] pushcons 7 .............................. <"floor_">
  [ 10] getparam 2 .............................. <aColorData>
  [ 12] getobjprop 826 .......................... <aColorData.palette>
  [ 15] joinstr ................................. <"floor_" & aColorData.palette>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 48 ........................... <me.sCastLib>
  [ 20] pusharglist 2 ........................... <"floor_" & aColorData.palette, me.sCastLib>
  [ 22] extcall 30 .............................. <member("floor_" & aColorData.palette, me.sCastLib)>
  [ 24] setobjprop 826 .......................... sprite(iSprite).member.palette = member("floor_" & aColorData.palette, me.sCastLib)
  [ 27] getparam 3 .............................. <iSprite>
  [ 29] pusharglist 1 ........................... <iSprite>
  [ 31] extcall 119 ............................. <sprite(iSprite)>
  [ 33] getparam 2 .............................. <aColorData>
  [ 35] getobjprop 1185 ......................... <aColorData.textureBlend>
  [ 38] setobjprop 694 .......................... sprite(iSprite).blend = aColorData.textureBlend
  [ 41] ret
end

on setRandomPattern me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1153 ........................... <#aPatterns>
  [  5] pusharglist 2 ........................... <me, #aPatterns>
  [  7] objcall 155 ............................. <me.aPatterns.count>
  [  9] pusharglist 1 ........................... <me.aPatterns.count>
  [ 11] extcall 700 ............................. <random(me.aPatterns.count)>
  [ 14] setlocal 0 .............................. iPatternIndex = random(me.aPatterns.count)
  [ 16] getparam 0 .............................. <me>
  [ 18] pushsymb 1153 ........................... <#aPatterns>
  [ 21] getlocal 0 .............................. <iPatternIndex>
  [ 23] pusharglist 3 ........................... <me, #aPatterns, iPatternIndex>
  [ 25] objcall 104 ............................. <me.aPatterns[iPatternIndex]>
  [ 27] setlocal 1 .............................. aColors = me.aPatterns[iPatternIndex]
  [ 29] getlocal 1 .............................. <aColors>
  [ 31] getobjprop 155 .......................... <aColors.count>
  [ 33] pusharglist 1 ........................... <aColors.count>
  [ 35] extcall 700 ............................. <random(aColors.count)>
  [ 38] setlocal 2 .............................. iColorIndex = random(aColors.count)
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 0 .............................. <iPatternIndex>
  [ 44] getlocal 2 .............................. <iColorIndex>
  [ 46] pusharglistnoret 3 ...................... <me, iPatternIndex, iColorIndex>
  [ 48] objcall 1149 ............................ me.setPattern(iPatternIndex, iColorIndex)
  [ 51] ret
end
