property bDebug, bDebugFlash, bDebugXML, bInitialized, bReadyForuse, foSession, sClientID, sDefaultServer, iDefaultPort, sServer, iPort, bConnected, fo_level0, bTestMode
global oSession, oRoom, oStudio, oMusicStudio, oPossessionStudio, oDenizenManager, ElementMgr, gFeatureSet, TextMgr

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 85 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushzero ................................ <0>
  [  8] setobjprop 684 .......................... me.bDebugFlash = 0
  [ 11] getparam 0 .............................. <me>
  [ 13] pushzero ................................ <0>
  [ 14] setobjprop 685 .......................... me.bDebugXML = 0
  [ 17] getparam 0 .............................. <me>
  [ 19] pushzero ................................ <0>
  [ 20] setobjprop 86 ........................... me.bInitialized = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushzero ................................ <0>
  [ 25] setobjprop 87 ........................... me.bReadyForuse = 0
  [ 27] getparam 0 .............................. <me>
  [ 29] getglobal 93 ............................ <TextMgr>
  [ 31] pushcons 0 .............................. <"LOCAL_GAME_SERVER">
  [ 33] pusharglist 2 ........................... <TextMgr, "LOCAL_GAME_SERVER">
  [ 35] objcall 94 .............................. <TextMgr.GetRefText("LOCAL_GAME_SERVER")>
  [ 37] setobjprop 686 .......................... me.sDefaultServer = TextMgr.GetRefText("LOCAL_GAME_SERVER")
  [ 40] getparam 0 .............................. <me>
  [ 42] pushint16 9000 .......................... <9000>
  [ 45] setobjprop 687 .......................... me.iDefaultPort = 9000
  [ 48] getparam 0 .............................. <me>
  [ 50] getparam 0 .............................. <me>
  [ 52] getobjprop 686 .......................... <me.sDefaultServer>
  [ 55] setobjprop 365 .......................... me.sServer = me.sDefaultServer
  [ 58] getparam 0 .............................. <me>
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 687 .......................... <me.iDefaultPort>
  [ 65] setobjprop 688 .......................... me.iPort = me.iDefaultPort
  [ 68] getparam 0 .............................. <me>
  [ 70] pushzero ................................ <0>
  [ 71] setobjprop 689 .......................... me.bConnected = 0
  [ 74] getparam 0 .............................. <me>
  [ 76] pusharglist 0 ........................... <>
  [ 78] extcall 91 .............................. <VOID>
  [ 80] setobjprop 109 .......................... me.fo_level0 = VOID
  [ 82] getparam 0 .............................. <me>
  [ 84] pushzero ................................ <0>
  [ 85] setobjprop 110 .......................... me.bTestMode = 0
  [ 87] getparam 0 .............................. <me>
  [ 89] setglobal 451 ........................... oSession = me
  [ 92] ret
end

on exitFrame me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 86 ........................... <me.bInitialized>
  [  4] not ..................................... <not me.bInitialized>
  [  5] jmpifz [ 79] ............................ if not me.bInitialized then
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 109 .......................... <me.fo_level0>
  [ 12] pusharglist 1 ........................... <me.fo_level0>
  [ 14] extcall 135 ............................. <voidp(me.fo_level0)>
  [ 16] jmpifz [ 38] ............................ if voidp(me.fo_level0) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 104 .......................... <me.spriteNum>
  [ 25] pusharglist 1 ........................... <me.spriteNum>
  [ 27] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 29] pushcons 1 .............................. <"_level0">
  [ 31] pushzero ................................ <0>
  [ 32] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0", 0>
  [ 34] objcall 105 ............................. <sprite(me.spriteNum).getVariable("_level0", 0)>
  [ 36] setobjprop 109 .......................... me.fo_level0 = sprite(me.spriteNum).getVariable("_level0", 0)
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 109 .......................... <me.fo_level0>
  [ 42] pusharglist 1 ........................... <me.fo_level0>
  [ 44] extcall 135 ............................. <voidp(me.fo_level0)>
  [ 46] not ..................................... <not voidp(me.fo_level0)>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 690 .......................... <me.foSession>
  [ 52] pusharglist 1 ........................... <me.foSession>
  [ 54] extcall 135 ............................. <voidp(me.foSession)>
  [ 56] and ..................................... <not voidp(me.fo_level0) and voidp(me.foSession)>
  [ 57] jmpifz [ 79] ............................ if not voidp(me.fo_level0) and voidp(me.foSession) then
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglistnoret 1 ...................... <me>
  [ 64] objcall 665 ............................. me.setNewSession()
  [ 67] getparam 0 .............................. <me>
  [ 69] pushint8 1 .............................. <1>
  [ 71] setobjprop 86 ........................... me.bInitialized = 1
  [ 73] getparam 0 .............................. <me>
  [ 75] pushint8 1 .............................. <1>
  [ 77] setobjprop 87 ........................... me.bReadyForuse = 1
  [ 79] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 109 .......................... <me.fo_level0>
  [ 12] pushcons 2 .............................. <"doDebug">
  [ 14] pushsymb 658 ............................ <#doDebug>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.fo_level0, "doDebug", #doDebug, me>
  [ 21] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.fo_level0, "doDebug", #doDebug, me)
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 104 .......................... <me.spriteNum>
  [ 27] pusharglist 1 ........................... <me.spriteNum>
  [ 29] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 109 .......................... <me.fo_level0>
  [ 35] pushcons 3 .............................. <"doDebugXML">
  [ 37] pushsymb 659 ............................ <#doDebugXML>
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.fo_level0, "doDebugXML", #doDebugXML, me>
  [ 44] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.fo_level0, "doDebugXML", #doDebugXML, me)
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 104 .......................... <me.spriteNum>
  [ 50] pusharglist 1 ........................... <me.spriteNum>
  [ 52] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 109 .......................... <me.fo_level0>
  [ 58] pushcons 4 .............................. <"doEncryption">
  [ 60] pushsymb 657 ............................ <#doEncryption>
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.fo_level0, "doEncryption", #doEncryption, me>
  [ 67] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.fo_level0, "doEncryption", #doEncryption, me)
  [ 69] getparam 0 .............................. <me>
  [ 71] getobjprop 104 .......................... <me.spriteNum>
  [ 73] pusharglist 1 ........................... <me.spriteNum>
  [ 75] extcall 103 ............................. <sprite(me.spriteNum)>
  [ 77] getparam 0 .............................. <me>
  [ 79] getobjprop 690 .......................... <me.foSession>
  [ 82] pushcons 5 .............................. <"connectionFailed">
  [ 84] pushsymb 671 ............................ <#connectionFailed>
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "connectionFailed", #connectionFailed, me>
  [ 91] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "connectionFailed", #connectionFailed, me)
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 104 .......................... <me.spriteNum>
  [ 97] pusharglist 1 ........................... <me.spriteNum>
  [ 99] extcall 103 ............................. <sprite(me.spriteNum)>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 690 .......................... <me.foSession>
  [106] pushcons 6 .............................. <"connected">
  [108] pushsymb 670 ............................ <#connected>
  [111] getparam 0 .............................. <me>
  [113] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "connected", #connected, me>
  [115] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "connected", #connected, me)
  [117] getparam 0 .............................. <me>
  [119] getobjprop 104 .......................... <me.spriteNum>
  [121] pusharglist 1 ........................... <me.spriteNum>
  [123] extcall 103 ............................. <sprite(me.spriteNum)>
  [125] getparam 0 .............................. <me>
  [127] getobjprop 690 .......................... <me.foSession>
  [130] pushcons 7 .............................. <"loggedIn">
  [132] pushsymb 672 ............................ <#loggedIn>
  [135] getparam 0 .............................. <me>
  [137] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "loggedIn", #loggedIn, me>
  [139] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "loggedIn", #loggedIn, me)
  [141] getparam 0 .............................. <me>
  [143] getobjprop 104 .......................... <me.spriteNum>
  [145] pusharglist 1 ........................... <me.spriteNum>
  [147] extcall 103 ............................. <sprite(me.spriteNum)>
  [149] getparam 0 .............................. <me>
  [151] getobjprop 690 .......................... <me.foSession>
  [154] pushcons 8 .............................. <"loginFailed">
  [156] pushsymb 673 ............................ <#loginFailed>
  [159] getparam 0 .............................. <me>
  [161] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "loginFailed", #loginFailed, me>
  [163] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "loginFailed", #loginFailed, me)
  [165] getparam 0 .............................. <me>
  [167] getobjprop 104 .......................... <me.spriteNum>
  [169] pusharglist 1 ........................... <me.spriteNum>
  [171] extcall 103 ............................. <sprite(me.spriteNum)>
  [173] getparam 0 .............................. <me>
  [175] getobjprop 690 .......................... <me.foSession>
  [178] pushcons 9 .............................. <"loggedOut">
  [180] pushsymb 674 ............................ <#loggedOut>
  [183] getparam 0 .............................. <me>
  [185] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "loggedOut", #loggedOut, me>
  [187] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "loggedOut", #loggedOut, me)
  [189] getparam 0 .............................. <me>
  [191] getobjprop 104 .......................... <me.spriteNum>
  [193] pusharglist 1 ........................... <me.spriteNum>
  [195] extcall 103 ............................. <sprite(me.spriteNum)>
  [197] getparam 0 .............................. <me>
  [199] getobjprop 690 .......................... <me.foSession>
  [202] pushcons 10 ............................. <"lostConnection">
  [204] pushsymb 675 ............................ <#lostConnection>
  [207] getparam 0 .............................. <me>
  [209] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "lostConnection", #lostConnection, me>
  [211] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "lostConnection", #lostConnection, me)
  [213] getparam 0 .............................. <me>
  [215] getobjprop 104 .......................... <me.spriteNum>
  [217] pusharglist 1 ........................... <me.spriteNum>
  [219] extcall 103 ............................. <sprite(me.spriteNum)>
  [221] getparam 0 .............................. <me>
  [223] getobjprop 690 .......................... <me.foSession>
  [226] pushcons 11 ............................. <"exception">
  [228] pushsymb 676 ............................ <#exception>
  [231] getparam 0 .............................. <me>
  [233] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "exception", #exception, me>
  [235] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "exception", #exception, me)
  [237] getparam 0 .............................. <me>
  [239] getobjprop 104 .......................... <me.spriteNum>
  [241] pusharglist 1 ........................... <me.spriteNum>
  [243] extcall 103 ............................. <sprite(me.spriteNum)>
  [245] getparam 0 .............................. <me>
  [247] getobjprop 690 .......................... <me.foSession>
  [250] pushcons 12 ............................. <"notify">
  [252] pushsymb 677 ............................ <#notify>
  [255] getparam 0 .............................. <me>
  [257] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "notify", #notify, me>
  [259] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "notify", #notify, me)
  [261] getparam 0 .............................. <me>
  [263] getobjprop 104 .......................... <me.spriteNum>
  [265] pusharglist 1 ........................... <me.spriteNum>
  [267] extcall 103 ............................. <sprite(me.spriteNum)>
  [269] getparam 0 .............................. <me>
  [271] getobjprop 690 .......................... <me.foSession>
  [274] pushcons 13 ............................. <"message">
  [276] pushsymb 293 ............................ <#message>
  [279] getparam 0 .............................. <me>
  [281] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "message", #message, me>
  [283] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "message", #message, me)
  [285] getparam 0 .............................. <me>
  [287] getobjprop 104 .......................... <me.spriteNum>
  [289] pusharglist 1 ........................... <me.spriteNum>
  [291] extcall 103 ............................. <sprite(me.spriteNum)>
  [293] getparam 0 .............................. <me>
  [295] getobjprop 690 .......................... <me.foSession>
  [298] pushcons 14 ............................. <"receiveAddFriend">
  [300] pushsymb 678 ............................ <#receiveAddFriend>
  [303] getparam 0 .............................. <me>
  [305] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "receiveAddFriend", #receiveAddFriend, me>
  [307] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "receiveAddFriend", #receiveAddFriend, me)
  [309] getparam 0 .............................. <me>
  [311] getobjprop 104 .......................... <me.spriteNum>
  [313] pusharglist 1 ........................... <me.spriteNum>
  [315] extcall 103 ............................. <sprite(me.spriteNum)>
  [317] getparam 0 .............................. <me>
  [319] getobjprop 690 .......................... <me.foSession>
  [322] pushcons 15 ............................. <"receiveInvitation">
  [324] pushsymb 679 ............................ <#receiveInvitation>
  [327] getparam 0 .............................. <me>
  [329] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "receiveInvitation", #receiveInvitation, me>
  [331] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "receiveInvitation", #receiveInvitation, me)
  [333] getparam 0 .............................. <me>
  [335] getobjprop 104 .......................... <me.spriteNum>
  [337] pusharglist 1 ........................... <me.spriteNum>
  [339] extcall 103 ............................. <sprite(me.spriteNum)>
  [341] getparam 0 .............................. <me>
  [343] getobjprop 690 .......................... <me.foSession>
  [346] pushcons 16 ............................. <"receiveRemoveFriend">
  [348] pushsymb 680 ............................ <#receiveRemoveFriend>
  [351] getparam 0 .............................. <me>
  [353] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "receiveRemoveFriend", #receiveRemoveFriend, me>
  [355] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "receiveRemoveFriend", #receiveRemoveFriend, me)
  [357] getparam 0 .............................. <me>
  [359] getobjprop 104 .......................... <me.spriteNum>
  [361] pusharglist 1 ........................... <me.spriteNum>
  [363] extcall 103 ............................. <sprite(me.spriteNum)>
  [365] getparam 0 .............................. <me>
  [367] getobjprop 690 .......................... <me.foSession>
  [370] pushcons 17 ............................. <"receiveMessengerMessage">
  [372] pushsymb 681 ............................ <#receiveMessengerMessage>
  [375] getparam 0 .............................. <me>
  [377] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "receiveMessengerMessage", #receiveMessengerMessage, me>
  [379] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "receiveMessengerMessage", #receiveMessengerMessage, me)
  [381] getparam 0 .............................. <me>
  [383] getobjprop 104 .......................... <me.spriteNum>
  [385] pusharglist 1 ........................... <me.spriteNum>
  [387] extcall 103 ............................. <sprite(me.spriteNum)>
  [389] getparam 0 .............................. <me>
  [391] getobjprop 690 .......................... <me.foSession>
  [394] pushcons 18 ............................. <"receiveMessengerMessageRejected">
  [396] pushsymb 682 ............................ <#receiveMessengerMessageRejected>
  [399] getparam 0 .............................. <me>
  [401] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foSession, "receiveMessengerMessageRejected", #receiveMessengerMessageRejected, me>
  [403] objcall 114 ............................. sprite(me.spriteNum).setCallback(me.foSession, "receiveMessengerMessageRejected", #receiveMessengerMessageRejected, me)
  [405] getparam 0 .............................. <me>
  [407] getchainedprop 109 ...................... <me.fo_level0>
  [409] pushzero ................................ <0>
  [410] setobjprop 85 ........................... me.fo_level0.bDebug = 0
  [412] getparam 0 .............................. <me>
  [414] getchainedprop 109 ...................... <me.fo_level0>
  [416] pushzero ................................ <0>
  [417] setobjprop 685 .......................... me.fo_level0.bDebugXML = 0
  [420] ret
end

on doEncryption me
  [  0] getglobal 168 ........................... <gFeatureSet>
  [  2] pushsymb 691 ............................ <#ENCRYPTION>
  [  5] pusharglist 2 ........................... <gFeatureSet, #ENCRYPTION>
  [  7] objcall 170 ............................. <gFeatureSet.isEnabled(#ENCRYPTION)>
  [  9] pusharglistnoret 1 ...................... <gFeatureSet.isEnabled(#ENCRYPTION)>
  [ 11] extcall 121 ............................. return gFeatureSet.isEnabled(#ENCRYPTION)
  [ 13] ret
end

on doDebug me, oCaller, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 684 .......................... <me.bDebugFlash>
  [  5] jmpifz [ 17] ............................ if me.bDebugFlash then
  [  8] pushcons 19 ............................. <"FLASH: ">
  [ 10] getparam 2 .............................. <sMessage>
  [ 12] joinstr ................................. <"FLASH: " & sMessage>
  [ 13] pusharglistnoret 1 ...................... <"FLASH: " & sMessage>
  [ 15] extcall 118 ............................. put "FLASH: " & sMessage
  [ 17] ret
end

on doDebugXML me, oCaller, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 685 .......................... <me.bDebugXML>
  [  5] jmpifz [ 17] ............................ if me.bDebugXML then
  [  8] pushcons 20 ............................. <"FLASH XML: ">
  [ 10] getparam 2 .............................. <sMessage>
  [ 12] joinstr ................................. <"FLASH XML: " & sMessage>
  [ 13] pusharglistnoret 1 ...................... <"FLASH XML: " & sMessage>
  [ 15] extcall 118 ............................. put "FLASH XML: " & sMessage
  [ 17] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 85 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 21 ............................. <"Session: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"Session: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"Session: " & sMessage>
  [ 17] extcall 118 ............................. put "Session: " & sMessage
  [ 19] ret
end

on setConnected me, _bConnected
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_bConnected>
  [  4] setobjprop 689 .......................... me.bConnected = _bConnected
  [  7] ret
end

on getConnected me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 689 .......................... <me.bConnected>
  [  5] pusharglistnoret 1 ...................... <me.bConnected>
  [  7] extcall 121 ............................. return me.bConnected
  [  9] ret
end

on getScreenName me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 690 ...................... <me.foSession>
  [  5] pusharglist 1 ........................... <me.foSession>
  [  7] objcall 693 ............................. <me.foSession.getLoginName()>
  [ 10] pusharglistnoret 1 ...................... <me.foSession.getLoginName()>
  [ 12] extcall 121 ............................. return me.foSession.getLoginName()
  [ 14] ret
end

on setServer me, _sServer
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_sServer>
  [  4] setobjprop 365 .......................... me.sServer = _sServer
  [  7] ret
end

on getServer me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 365 .......................... <me.sServer>
  [  5] pusharglistnoret 1 ...................... <me.sServer>
  [  7] extcall 121 ............................. return me.sServer
  [  9] ret
end

on setPort me, _iPort
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <_iPort>
  [  4] setobjprop 688 .......................... me.iPort = _iPort
  [  7] ret
end

on getPort me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 688 .......................... <me.iPort>
  [  5] pusharglistnoret 1 ...................... <me.iPort>
  [  7] extcall 121 ............................. return me.iPort
  [  9] ret
end

on setClientID me, sID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sID>
  [  4] setobjprop 696 .......................... me.sClientID = sID
  [  7] ret
end

on getClientID me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 696 .......................... <me.sClientID>
  [  5] pusharglistnoret 1 ...................... <me.sClientID>
  [  7] extcall 121 ............................. return me.sClientID
  [  9] ret
end

on setNewSession me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 22 ............................. <"setNewSession()">
  [  4] pusharglistnoret 2 ...................... <me, "setNewSession()">
  [  6] objcall 4 ............................... me.debug("setNewSession()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 109 ...................... <me.fo_level0>
  [ 14] pusharglist 1 ........................... <me.fo_level0>
  [ 16] objcall 698 ............................. <me.fo_level0.SESSION_createSession()>
  [ 19] setobjprop 690 .......................... me.foSession = me.fo_level0.SESSION_createSession()
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 690 .......................... <me.foSession>
  [ 27] pusharglist 1 ........................... <me.foSession>
  [ 29] extcall 135 ............................. <voidp(me.foSession)>
  [ 31] not ..................................... <not voidp(me.foSession)>
  [ 32] jmpifz [124] ............................ if not voidp(me.foSession) then
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 2 ............................... me.setCallbacks()
  [ 41] getmovieprop 617 ........................ <the moviePath>
  [ 44] pushcons 23 ............................. <"C:\\">
  [ 46] containsstr ............................. <the moviePath contains "C:\\">
  [ 47] getmovieprop 617 ........................ <the moviePath>
  [ 50] pushcons 24 ............................. <"@\\">
  [ 52] containsstr ............................. <the moviePath contains "@\\">
  [ 53] or ...................................... <(the moviePath contains "C:\\") or (the moviePath contains "@\\")>
  [ 54] jmpifz [ 77] ............................ if (the moviePath contains "C:\\") or (the moviePath contains "@\\") then / else
  [ 57] getparam 0 .............................. <me>
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 686 .......................... <me.sDefaultServer>
  [ 64] getparam 0 .............................. <me>
  [ 66] getobjprop 687 .......................... <me.iDefaultPort>
  [ 69] pusharglistnoret 3 ...................... <me, me.sDefaultServer, me.iDefaultPort>
  [ 71] objcall 666 ............................. me.setConnectionProps(me.sDefaultServer, me.iDefaultPort)
  [ 74] jmp [124]
  [ 77] getmovieprop 617 ........................ <the moviePath>
  [ 80] pushcons 25 ............................. <"sflocal">
  [ 82] containsstr ............................. <the moviePath contains "sflocal">
  [ 83] jmpifz [103] ............................ if the moviePath contains "sflocal" then / else
  [ 86] getparam 0 .............................. <me>
  [ 88] pushcons 26 ............................. <"sflocal.cokemusic.com">
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 687 .......................... <me.iDefaultPort>
  [ 95] pusharglistnoret 3 ...................... <me, "sflocal.cokemusic.com", me.iDefaultPort>
  [ 97] objcall 666 ............................. me.setConnectionProps("sflocal.cokemusic.com", me.iDefaultPort)
  [100] jmp [124]
  [103] getparam 0 .............................. <me>
  [105] getparam 0 .............................. <me>
  [107] getchainedprop 109 ...................... <me.fo_level0>
  [109] pusharglist 1 ........................... <me.fo_level0>
  [111] objcall 424 ............................. <me.fo_level0.getDefaultGameServer()>
  [114] getparam 0 .............................. <me>
  [116] getobjprop 687 .......................... <me.iDefaultPort>
  [119] pusharglistnoret 3 ...................... <me, me.fo_level0.getDefaultGameServer(), me.iDefaultPort>
  [121] objcall 666 ............................. me.setConnectionProps(me.fo_level0.getDefaultGameServer(), me.iDefaultPort)
  [124] ret
end

on setConnectionProps me, sIpAddress, iPortNum
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 27 ............................. <"setConnectionProps() ">
  [  4] getparam 1 .............................. <sIpAddress>
  [  6] joinpadstr .............................. <"setConnectionProps() " && sIpAddress>
  [  7] getparam 2 .............................. <iPortNum>
  [  9] pusharglist 1 ........................... <iPortNum>
  [ 11] extcall 558 ............................. <string(iPortNum)>
  [ 14] joinpadstr .............................. <"setConnectionProps() " && sIpAddress && string(iPortNum)>
  [ 15] pusharglistnoret 2 ...................... <me, "setConnectionProps() " && sIpAddress && string(iPortNum)>
  [ 17] objcall 4 ............................... me.debug("setConnectionProps() " && sIpAddress && string(iPortNum))
  [ 19] getparam 1 .............................. <sIpAddress>
  [ 21] pusharglist 1 ........................... <sIpAddress>
  [ 23] extcall 135 ............................. <voidp(sIpAddress)>
  [ 25] not ..................................... <not voidp(sIpAddress)>
  [ 26] getparam 1 .............................. <sIpAddress>
  [ 28] pusharglist 0 ........................... <>
  [ 30] extcall 91 .............................. <VOID>
  [ 32] nteq .................................... <sIpAddress <> VOID>
  [ 33] and ..................................... <not voidp(sIpAddress) and (sIpAddress <> VOID)>
  [ 34] getparam 1 .............................. <sIpAddress>
  [ 36] pushcons 28 ............................. <EMPTY>
  [ 38] nteq .................................... <sIpAddress <> EMPTY>
  [ 39] and ..................................... <not voidp(sIpAddress) and (sIpAddress <> VOID) and (sIpAddress <> EMPTY)>
  [ 40] jmpifz [ 64] ............................ if not voidp(sIpAddress) and (sIpAddress <> VOID) and (sIpAddress <> EMPTY) then
  [ 43] getparam 0 .............................. <me>
  [ 45] getchainedprop 690 ...................... <me.foSession>
  [ 48] getparam 1 .............................. <sIpAddress>
  [ 50] pusharglistnoret 2 ...................... <me.foSession, sIpAddress>
  [ 52] objcall 699 ............................. me.foSession.setIpAddress(sIpAddress)
  [ 55] getparam 0 .............................. <me>
  [ 57] getparam 1 .............................. <sIpAddress>
  [ 59] pusharglistnoret 2 ...................... <me, sIpAddress>
  [ 61] objcall 661 ............................. me.setServer(sIpAddress)
  [ 64] getparam 2 .............................. <iPortNum>
  [ 66] pusharglist 1 ........................... <iPortNum>
  [ 68] extcall 135 ............................. <voidp(iPortNum)>
  [ 70] not ..................................... <not voidp(iPortNum)>
  [ 71] getparam 2 .............................. <iPortNum>
  [ 73] pusharglist 0 ........................... <>
  [ 75] extcall 91 .............................. <VOID>
  [ 77] nteq .................................... <iPortNum <> VOID>
  [ 78] and ..................................... <not voidp(iPortNum) and (iPortNum <> VOID)>
  [ 79] jmpifz [108] ............................ if not voidp(iPortNum) and (iPortNum <> VOID) then
  [ 82] getparam 0 .............................. <me>
  [ 84] getchainedprop 690 ...................... <me.foSession>
  [ 87] getparam 2 .............................. <iPortNum>
  [ 89] pusharglist 1 ........................... <iPortNum>
  [ 91] extcall 238 ............................. <integer(iPortNum)>
  [ 93] pusharglistnoret 2 ...................... <me.foSession, integer(iPortNum)>
  [ 95] objcall 662 ............................. me.foSession.setPort(integer(iPortNum))
  [ 98] getparam 0 .............................. <me>
  [100] getprop 688 ............................. <iPort>
  [103] pusharglistnoret 2 ...................... <me, iPort>
  [105] objcall 662 ............................. me.setPort(iPort)
  [108] ret
end

on connect me, sLoginName
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 110 .......................... me.bTestMode = 0
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 452 ............................. <me.getConnected()>
  [ 12] getparam 0 .............................. <me>
  [ 14] getobjprop 110 .......................... <me.bTestMode>
  [ 16] or ...................................... <me.getConnected() or me.bTestMode>
  [ 17] jmpifz [ 31] ............................ if me.getConnected() or me.bTestMode then
  [ 20] pushsymb 702 ............................ <#initLoggedIn>
  [ 23] pusharglistnoret 1 ...................... <#initLoggedIn>
  [ 25] extcall 203 ............................. sendAllSprites(#initLoggedIn)
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 121 ............................. return 
  [ 31] getparam 0 .............................. <me>
  [ 33] pushcons 29 ............................. <"***NOT CONNECTED***">
  [ 35] pusharglistnoret 2 ...................... <me, "***NOT CONNECTED***">
  [ 37] objcall 4 ............................... me.debug("***NOT CONNECTED***")
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 30 ............................. <"sLoginName: ">
  [ 43] getparam 1 .............................. <sLoginName>
  [ 45] joinstr ................................. <"sLoginName: " & sLoginName>
  [ 46] pusharglistnoret 2 ...................... <me, "sLoginName: " & sLoginName>
  [ 48] objcall 4 ............................... me.debug("sLoginName: " & sLoginName)
  [ 50] getparam 1 .............................. <sLoginName>
  [ 52] pusharglist 1 ........................... <sLoginName>
  [ 54] extcall 135 ............................. <voidp(sLoginName)>
  [ 56] not ..................................... <not voidp(sLoginName)>
  [ 57] jmpifz [ 75] ............................ if not voidp(sLoginName) then / else
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 690 ...................... <me.foSession>
  [ 65] getparam 1 .............................. <sLoginName>
  [ 67] pusharglistnoret 2 ...................... <me.foSession, sLoginName>
  [ 69] objcall 667 ............................. me.foSession.connect(sLoginName)
  [ 72] jmp [ 91]
  [ 75] getparam 0 .............................. <me>
  [ 77] getchainedprop 690 ...................... <me.foSession>
  [ 80] getparam 0 .............................. <me>
  [ 82] pusharglist 1 ........................... <me>
  [ 84] objcall 52 .............................. <me.getScreenName()>
  [ 86] pusharglistnoret 2 ...................... <me.foSession, me.getScreenName()>
  [ 88] objcall 667 ............................. me.foSession.connect(me.getScreenName())
  [ 91] ret
end

on logIn me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 31 ............................. <"login()">
  [  4] pusharglistnoret 2 ...................... <me, "login()">
  [  6] objcall 4 ............................... me.debug("login()")
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 690 ...................... <me.foSession>
  [ 13] getglobal 97 ............................ <oDenizenManager>
  [ 15] pusharglist 1 ........................... <oDenizenManager>
  [ 17] objcall 54 .............................. <oDenizenManager.getDenizen()>
  [ 19] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 21] objcall 149 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 23] pusharglistnoret 2 ...................... <me.foSession, oDenizenManager.getDenizen().getSecret()>
  [ 25] objcall 704 ............................. me.foSession.loginUser(oDenizenManager.getDenizen().getSecret())
  [ 28] ret
end

on disconnect me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 452 ............................. <me.getConnected()>
  [  7] getparam 0 .............................. <me>
  [  9] getobjprop 110 .......................... <me.bTestMode>
  [ 11] or ...................................... <me.getConnected() or me.bTestMode>
  [ 12] not ..................................... <not (me.getConnected() or me.bTestMode)>
  [ 13] jmpifz [ 27] ............................ if not (me.getConnected() or me.bTestMode) then
  [ 16] pushsymb 705 ............................ <#initLoggedOut>
  [ 19] pusharglistnoret 1 ...................... <#initLoggedOut>
  [ 21] extcall 203 ............................. sendAllSprites(#initLoggedOut)
  [ 23] pusharglistnoret 0 ...................... <>
  [ 25] extcall 121 ............................. return 
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 690 ...................... <me.foSession>
  [ 32] pusharglistnoret 1 ...................... <me.foSession>
  [ 34] objcall 669 ............................. me.foSession.disconnect()
  [ 37] ret
end

on connected me, oCaller
  [  0] pushsymb 706 ............................ <#initConnected>
  [  3] pusharglistnoret 1 ...................... <#initConnected>
  [  5] extcall 203 ............................. sendAllSprites(#initConnected)
  [  7] ret
end

on connectionFailed me, oCaller, iReasonId, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 32 ............................. <"connectionFailed()">
  [  4] getparam 2 .............................. <iReasonId>
  [  6] pusharglist 1 ........................... <iReasonId>
  [  8] extcall 558 ............................. <string(iReasonId)>
  [ 11] joinpadstr .............................. <"connectionFailed()" && string(iReasonId)>
  [ 12] getparam 3 .............................. <sReason>
  [ 14] joinpadstr .............................. <"connectionFailed()" && string(iReasonId) && sReason>
  [ 15] pusharglistnoret 2 ...................... <me, "connectionFailed()" && string(iReasonId) && sReason>
  [ 17] objcall 4 ............................... me.debug("connectionFailed()" && string(iReasonId) && sReason)
  [ 19] getparam 2 .............................. <iReasonId>
  [ 21] pusharglist 1 ........................... <iReasonId>
  [ 23] extcall 238 ............................. <integer(iReasonId)>
  [ 25] setparam 2 .............................. iReasonId = integer(iReasonId)
  [ 27] getparam 2 .............................. <iReasonId>
  [ 29] peek 0 .................................. case iReasonId of
  [ 31] pushint8 4 .............................. <4>
  [ 33] eq
  [ 34] jmpifz [ 40] ............................ (case) 4:
  [ 37] jmp [ 48]
  [ 40] peek 0
  [ 42] pushint8 5 .............................. <5>
  [ 44] eq
  [ 45] jmpifz [ 48] ............................ (case) 5:
  [ 48] pop 1 ................................... end case
  [ 50] getparam 0 .............................. <me>
  [ 52] pushzero ................................ <0>
  [ 53] pusharglistnoret 2 ...................... <me, 0>
  [ 55] objcall 660 ............................. me.setConnected(0)
  [ 58] pushint8 1 .............................. <1>
  [ 60] setglobal 206 ........................... gCLOSING = 1
  [ 62] getglobal 146 ........................... <ElementMgr>
  [ 64] pusharglist 1 ........................... <ElementMgr>
  [ 66] extcall 135 ............................. <voidp(ElementMgr)>
  [ 68] not ..................................... <not voidp(ElementMgr)>
  [ 69] jmpifz [ 81] ............................ if not voidp(ElementMgr) then
  [ 72] getglobal 146 ........................... <ElementMgr>
  [ 74] getparam 2 .............................. <iReasonId>
  [ 76] pusharglistnoret 2 ...................... <ElementMgr, iReasonId>
  [ 78] objcall 671 ............................. ElementMgr.connectionFailed(iReasonId)
  [ 81] ret
end

on loggedIn me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"loggedIn()">
  [  4] pusharglistnoret 2 ...................... <me, "loggedIn()">
  [  6] objcall 4 ............................... me.debug("loggedIn()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 690 ...................... <me.foSession>
  [ 15] pusharglist 1 ........................... <me.foSession>
  [ 17] objcall 709 ............................. <me.foSession.getTicket()>
  [ 20] pusharglistnoret 2 ...................... <me, me.foSession.getTicket()>
  [ 22] objcall 663 ............................. me.setClientID(me.foSession.getTicket())
  [ 25] getparam 0 .............................. <me>
  [ 27] pushint8 1 .............................. <1>
  [ 29] pusharglistnoret 2 ...................... <me, 1>
  [ 31] objcall 660 ............................. me.setConnected(1)
  [ 34] pushsymb 702 ............................ <#initLoggedIn>
  [ 37] pusharglistnoret 1 ...................... <#initLoggedIn>
  [ 39] extcall 203 ............................. sendAllSprites(#initLoggedIn)
  [ 41] ret
end

on loginFailed me, oCaller, iReasonId, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 34 ............................. <"loginFailed() ">
  [  4] getparam 2 .............................. <iReasonId>
  [  6] pusharglist 1 ........................... <iReasonId>
  [  8] extcall 558 ............................. <string(iReasonId)>
  [ 11] joinpadstr .............................. <"loginFailed() " && string(iReasonId)>
  [ 12] getparam 3 .............................. <sReason>
  [ 14] joinpadstr .............................. <"loginFailed() " && string(iReasonId) && sReason>
  [ 15] pusharglistnoret 2 ...................... <me, "loginFailed() " && string(iReasonId) && sReason>
  [ 17] objcall 4 ............................... me.debug("loginFailed() " && string(iReasonId) && sReason)
  [ 19] getparam 2 .............................. <iReasonId>
  [ 21] pusharglist 1 ........................... <iReasonId>
  [ 23] extcall 238 ............................. <integer(iReasonId)>
  [ 25] setparam 2 .............................. iReasonId = integer(iReasonId)
  [ 27] getparam 2 .............................. <iReasonId>
  [ 29] peek 0 .................................. case iReasonId of
  [ 31] pushint16 8956 .......................... <8956>
  [ 34] eq
  [ 35] jmpifz [ 41] ............................ (case) 8956:
  [ 38] jmp [ 74]
  [ 41] peek 0
  [ 43] pushint16 8957 .......................... <8957>
  [ 46] eq
  [ 47] jmpifz [ 53] ............................ (case) 8957:
  [ 50] jmp [ 74]
  [ 53] peek 0
  [ 55] pushint16 9999 .......................... <9999>
  [ 58] eq
  [ 59] jmpifz [ 65] ............................ (case) 9999:
  [ 62] jmp [ 74]
  [ 65] peek 0
  [ 67] pushint16 8950 .......................... <8950>
  [ 70] eq
  [ 71] jmpifz [ 74] ............................ (case) 8950:
  [ 74] pop 1 ................................... end case
  [ 76] pushint8 1 .............................. <1>
  [ 78] setglobal 206 ........................... gCLOSING = 1
  [ 80] getglobal 146 ........................... <ElementMgr>
  [ 82] pusharglist 1 ........................... <ElementMgr>
  [ 84] extcall 135 ............................. <voidp(ElementMgr)>
  [ 86] not ..................................... <not voidp(ElementMgr)>
  [ 87] jmpifz [ 99] ............................ if not voidp(ElementMgr) then
  [ 90] getglobal 146 ........................... <ElementMgr>
  [ 92] getparam 2 .............................. <iReasonId>
  [ 94] pusharglistnoret 2 ...................... <ElementMgr, iReasonId>
  [ 96] objcall 673 ............................. ElementMgr.loginFailed(iReasonId)
  [ 99] ret
end

on loggedOut me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 35 ............................. <"loggedOut()">
  [  4] pusharglistnoret 2 ...................... <me, "loggedOut()">
  [  6] objcall 4 ............................... me.debug("loggedOut()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 2 ...................... <me, 0>
  [ 13] objcall 660 ............................. me.setConnected(0)
  [ 16] pushsymb 705 ............................ <#initLoggedOut>
  [ 19] pusharglistnoret 1 ...................... <#initLoggedOut>
  [ 21] extcall 203 ............................. sendAllSprites(#initLoggedOut)
  [ 23] ret
end

on lostConnection me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 36 ............................. <"closed()">
  [  4] pusharglistnoret 2 ...................... <me, "closed()">
  [  6] objcall 4 ............................... me.debug("closed()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 2 ...................... <me, 0>
  [ 13] objcall 660 ............................. me.setConnected(0)
  [ 16] pushint8 1 .............................. <1>
  [ 18] setglobal 206 ........................... gCLOSING = 1
  [ 20] getglobal 146 ........................... <ElementMgr>
  [ 22] pusharglist 1 ........................... <ElementMgr>
  [ 24] extcall 135 ............................. <voidp(ElementMgr)>
  [ 26] not ..................................... <not voidp(ElementMgr)>
  [ 27] jmpifz [ 37] ............................ if not voidp(ElementMgr) then
  [ 30] getglobal 146 ........................... <ElementMgr>
  [ 32] pusharglistnoret 1 ...................... <ElementMgr>
  [ 34] objcall 675 ............................. ElementMgr.lostConnection()
  [ 37] ret
end

on exception me, oCaller, iReasonId, sReason
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 37 ............................. <"exception()">
  [  4] pusharglistnoret 2 ...................... <me, "exception()">
  [  6] objcall 4 ............................... me.debug("exception()")
  [  8] ret
end

on notify me, oCaller, sMsg
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 38 ............................. <"notify()">
  [  4] getparam 2 .............................. <sMsg>
  [  6] joinpadstr .............................. <"notify()" && sMsg>
  [  7] pusharglistnoret 2 ...................... <me, "notify()" && sMsg>
  [  9] objcall 4 ............................... me.debug("notify()" && sMsg)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] pusharglist 1 ........................... <ElementMgr>
  [ 15] extcall 135 ............................. <voidp(ElementMgr)>
  [ 17] not ..................................... <not voidp(ElementMgr)>
  [ 18] jmpifz [ 30] ............................ if not voidp(ElementMgr) then
  [ 21] getglobal 146 ........................... <ElementMgr>
  [ 23] getparam 2 .............................. <sMsg>
  [ 25] pusharglistnoret 2 ...................... <ElementMgr, sMsg>
  [ 27] objcall 677 ............................. ElementMgr.notify(sMsg)
  [ 30] ret
end

on message me, oCaller, sMsg
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 39 ............................. <"message() ">
  [  4] getparam 2 .............................. <sMsg>
  [  6] joinstr ................................. <"message() " & sMsg>
  [  7] pusharglistnoret 2 ...................... <me, "message() " & sMsg>
  [  9] objcall 4 ............................... me.debug("message() " & sMsg)
  [ 11] getglobal 146 ........................... <ElementMgr>
  [ 13] pusharglist 1 ........................... <ElementMgr>
  [ 15] extcall 135 ............................. <voidp(ElementMgr)>
  [ 17] jmpifz [ 24] ............................ if voidp(ElementMgr) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 121 ............................. return 
  [ 24] getglobal 146 ........................... <ElementMgr>
  [ 26] pushcons 40 ............................. <"ALERT_MOD_MESSAGE">
  [ 28] getparam 2 .............................. <sMsg>
  [ 30] pusharglistnoret 3 ...................... <ElementMgr, "ALERT_MOD_MESSAGE", sMsg>
  [ 32] objcall 191 ............................. ElementMgr.alert("ALERT_MOD_MESSAGE", sMsg)
  [ 34] ret
end

on receiveAddFriend me, oCaller, oFriend
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 41 ............................. <"receiveAddFriend() ">
  [  4] getparam 2 .............................. <oFriend>
  [  6] joinstr ................................. <"receiveAddFriend() " & oFriend>
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 3 ...................... <me, "receiveAddFriend() " & oFriend, 1>
  [ 11] objcall 4 ............................... me.debug("receiveAddFriend() " & oFriend, 1)
  [ 13] getglobal 97 ............................ <oDenizenManager>
  [ 15] getparam 2 .............................. <oFriend>
  [ 17] pusharglist 2 ........................... <oDenizenManager, oFriend>
  [ 19] objcall 62 .............................. <oDenizenManager.getDenizenPropList(oFriend)>
  [ 21] setlocal 0 .............................. aFriend = oDenizenManager.getDenizenPropList(oFriend)
  [ 23] getlocal 0 .............................. <aFriend>
  [ 25] pushsymb 246 ............................ <#screenName>
  [ 27] pusharglist 2 ........................... <aFriend, #screenName>
  [ 29] objcall 163 ............................. <aFriend[#screenName]>
  [ 31] pusharglist 1 ........................... <aFriend[#screenName]>
  [ 33] extcall 135 ............................. <voidp(aFriend[#screenName])>
  [ 35] jmpifz [ 42] ............................ if voidp(aFriend[#screenName]) then
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 121 ............................. return 
  [ 42] getlocal 0 .............................. <aFriend>
  [ 44] pushsymb 247 ............................ <#messagesFrom>
  [ 46] getparam 2 .............................. <oFriend>
  [ 48] pusharglist 1 ........................... <oFriend>
  [ 50] objcall 248 ............................. <oFriend.getMessagesFrom()>
  [ 52] pusharglist 1 ........................... <oFriend.getMessagesFrom()>
  [ 54] extcall 238 ............................. <integer(oFriend.getMessagesFrom())>
  [ 56] pusharglistnoret 3 ...................... <aFriend, #messagesFrom, integer(oFriend.getMessagesFrom())>
  [ 58] objcall 249 ............................. aFriend[#messagesFrom] = integer(oFriend.getMessagesFrom())
  [ 60] getparam 0 .............................. <me>
  [ 62] pushcons 42 ............................. <"aFriend: ">
  [ 64] getlocal 0 .............................. <aFriend>
  [ 66] joinstr ................................. <"aFriend: " & aFriend>
  [ 67] pushint8 1 .............................. <1>
  [ 69] pusharglistnoret 3 ...................... <me, "aFriend: " & aFriend, 1>
  [ 71] objcall 4 ............................... me.debug("aFriend: " & aFriend, 1)
  [ 73] getglobal 146 ........................... <ElementMgr>
  [ 75] pusharglist 1 ........................... <ElementMgr>
  [ 77] objcall 250 ............................. <ElementMgr.getMessengerObject()>
  [ 79] getlocal 0 .............................. <aFriend>
  [ 81] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), aFriend>
  [ 83] objcall 711 ............................. ElementMgr.getMessengerObject().addFriend(aFriend)
  [ 86] ret
end

on receiveInvitation me, oCaller, oFriend
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 43 ............................. <"receiveInvitation() ">
  [  4] getparam 2 .............................. <oFriend>
  [  6] pusharglist 1 ........................... <oFriend>
  [  8] objcall 202 ............................. <oFriend.toString()>
  [ 10] joinstr ................................. <"receiveInvitation() " & oFriend.toString()>
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 3 ...................... <me, "receiveInvitation() " & oFriend.toString(), 1>
  [ 15] objcall 4 ............................... me.debug("receiveInvitation() " & oFriend.toString(), 1)
  [ 17] getglobal 97 ............................ <oDenizenManager>
  [ 19] getparam 2 .............................. <oFriend>
  [ 21] pusharglist 2 ........................... <oDenizenManager, oFriend>
  [ 23] objcall 62 .............................. <oDenizenManager.getDenizenPropList(oFriend)>
  [ 25] setlocal 0 .............................. aFriend = oDenizenManager.getDenizenPropList(oFriend)
  [ 27] getlocal 0 .............................. <aFriend>
  [ 29] pushsymb 246 ............................ <#screenName>
  [ 31] pusharglist 2 ........................... <aFriend, #screenName>
  [ 33] objcall 163 ............................. <aFriend[#screenName]>
  [ 35] pusharglist 1 ........................... <aFriend[#screenName]>
  [ 37] extcall 135 ............................. <voidp(aFriend[#screenName])>
  [ 39] jmpifz [ 46] ............................ if voidp(aFriend[#screenName]) then
  [ 42] pusharglistnoret 0 ...................... <>
  [ 44] extcall 121 ............................. return 
  [ 46] getlocal 0 .............................. <aFriend>
  [ 48] pushsymb 247 ............................ <#messagesFrom>
  [ 50] getparam 2 .............................. <oFriend>
  [ 52] pusharglist 1 ........................... <oFriend>
  [ 54] objcall 248 ............................. <oFriend.getMessagesFrom()>
  [ 56] pusharglist 1 ........................... <oFriend.getMessagesFrom()>
  [ 58] extcall 238 ............................. <integer(oFriend.getMessagesFrom())>
  [ 60] pusharglistnoret 3 ...................... <aFriend, #messagesFrom, integer(oFriend.getMessagesFrom())>
  [ 62] objcall 249 ............................. aFriend[#messagesFrom] = integer(oFriend.getMessagesFrom())
  [ 64] getparam 0 .............................. <me>
  [ 66] pushcons 42 ............................. <"aFriend: ">
  [ 68] getlocal 0 .............................. <aFriend>
  [ 70] joinstr ................................. <"aFriend: " & aFriend>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 3 ...................... <me, "aFriend: " & aFriend, 1>
  [ 75] objcall 4 ............................... me.debug("aFriend: " & aFriend, 1)
  [ 77] getglobal 146 ........................... <ElementMgr>
  [ 79] pusharglist 1 ........................... <ElementMgr>
  [ 81] objcall 250 ............................. <ElementMgr.getMessengerObject()>
  [ 83] getlocal 0 .............................. <aFriend>
  [ 85] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), aFriend>
  [ 87] objcall 712 ............................. ElementMgr.getMessengerObject().addInvite(aFriend)
  [ 90] ret
end

on receiveRemoveFriend me, oCaller, sFriend
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 44 ............................. <"receiveRemoveFriend() ">
  [  4] getparam 2 .............................. <sFriend>
  [  6] joinstr ................................. <"receiveRemoveFriend() " & sFriend>
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 3 ...................... <me, "receiveRemoveFriend() " & sFriend, 1>
  [ 11] objcall 4 ............................... me.debug("receiveRemoveFriend() " & sFriend, 1)
  [ 13] getglobal 146 ........................... <ElementMgr>
  [ 15] pusharglist 1 ........................... <ElementMgr>
  [ 17] objcall 250 ............................. <ElementMgr.getMessengerObject()>
  [ 19] getparam 2 .............................. <sFriend>
  [ 21] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), sFriend>
  [ 23] objcall 713 ............................. ElementMgr.getMessengerObject().removeFriendByName(sFriend)
  [ 26] ret
end

on receiveMessengerMessage me, oCaller, oRC
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 45 ............................. <"receiveMessengerMessage() ">
  [  4] getparam 2 .............................. <oRC>
  [  6] pusharglist 1 ........................... <oRC>
  [  8] objcall 202 ............................. <oRC.toString()>
  [ 10] joinstr ................................. <"receiveMessengerMessage() " & oRC.toString()>
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 3 ...................... <me, "receiveMessengerMessage() " & oRC.toString(), 1>
  [ 15] objcall 4 ............................... me.debug("receiveMessengerMessage() " & oRC.toString(), 1)
  [ 17] getglobal 97 ............................ <oDenizenManager>
  [ 19] getparam 2 .............................. <oRC>
  [ 21] pusharglist 2 ........................... <oDenizenManager, oRC>
  [ 23] objcall 61 .............................. <oDenizenManager.getMessagePropList(oRC)>
  [ 25] setlocal 0 .............................. aMessage = oDenizenManager.getMessagePropList(oRC)
  [ 27] getparam 0 .............................. <me>
  [ 29] pushcons 46 ............................. <"aMessage: ">
  [ 31] getlocal 0 .............................. <aMessage>
  [ 33] joinstr ................................. <"aMessage: " & aMessage>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 3 ...................... <me, "aMessage: " & aMessage, 1>
  [ 38] objcall 4 ............................... me.debug("aMessage: " & aMessage, 1)
  [ 40] getglobal 146 ........................... <ElementMgr>
  [ 42] pusharglist 1 ........................... <ElementMgr>
  [ 44] objcall 250 ............................. <ElementMgr.getMessengerObject()>
  [ 46] getlocal 0 .............................. <aMessage>
  [ 48] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), aMessage>
  [ 50] objcall 715 ............................. ElementMgr.getMessengerObject().addMessage(aMessage)
  [ 53] ret
end

on receiveMessengerMessageRejected me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 47 ............................. <"receiveMessengerMessageRejected()">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "receiveMessengerMessageRejected()", 1>
  [  8] objcall 4 ............................... me.debug("receiveMessengerMessageRejected()", 1)
  [ 10] getglobal 146 ........................... <ElementMgr>
  [ 12] pushcons 48 ............................. <"ALERT_MESSENGER_LANG">
  [ 14] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_MESSENGER_LANG">
  [ 16] objcall 191 ............................. ElementMgr.alert("ALERT_MESSENGER_LANG")
  [ 18] ret
end

on getStudio me, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 49 ............................. <"getStudio() ">
  [  4] getparam 1 .............................. <sRoomId>
  [  6] joinstr ................................. <"getStudio() " & sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "getStudio() " & sRoomId>
  [  9] objcall 4 ............................... me.debug("getStudio() " & sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 690 ...................... <me.foSession>
  [ 16] getparam 1 .............................. <sRoomId>
  [ 18] pusharglist 2 ........................... <me.foSession, sRoomId>
  [ 20] objcall 342 ............................. <me.foSession.getStudio(sRoomId)>
  [ 23] setlocal 0 .............................. foStudio = me.foSession.getStudio(sRoomId)
  [ 25] getlocal 0 .............................. <foStudio>
  [ 27] pusharglistnoret 1 ...................... <foStudio>
  [ 29] extcall 121 ............................. return foStudio
  [ 31] ret
end

on createStudio me, sRoomId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 50 ............................. <"createStudio() ">
  [  4] getparam 1 .............................. <sRoomId>
  [  6] joinstr ................................. <"createStudio() " & sRoomId>
  [  7] pusharglistnoret 2 ...................... <me, "createStudio() " & sRoomId>
  [  9] objcall 4 ............................... me.debug("createStudio() " & sRoomId)
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 690 ...................... <me.foSession>
  [ 16] getparam 1 .............................. <sRoomId>
  [ 18] pusharglist 2 ........................... <me.foSession, sRoomId>
  [ 20] objcall 393 ............................. <me.foSession.createStudio(sRoomId)>
  [ 23] setlocal 0 .............................. foRoom = me.foSession.createStudio(sRoomId)
  [ 25] getglobal 718 ........................... <oRoom>
  [ 28] getlocal 0 .............................. <foRoom>
  [ 30] pusharglistnoret 2 ...................... <oRoom, foRoom>
  [ 32] objcall 719 ............................. oRoom.setRoomObject(foRoom)
  [ 35] getglobal 184 ........................... <oStudio>
  [ 37] getlocal 0 .............................. <foRoom>
  [ 39] pusharglistnoret 2 ...................... <oStudio, foRoom>
  [ 41] objcall 719 ............................. oStudio.setRoomObject(foRoom)
  [ 44] getglobal 720 ........................... <oPossessionStudio>
  [ 47] getlocal 0 .............................. <foRoom>
  [ 49] pusharglistnoret 2 ...................... <oPossessionStudio, foRoom>
  [ 51] objcall 719 ............................. oPossessionStudio.setRoomObject(foRoom)
  [ 54] getlocal 0 .............................. <foRoom>
  [ 56] pusharglistnoret 1 ...................... <foRoom>
  [ 58] extcall 121 ............................. return foRoom
  [ 60] ret
end

on getRooms me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 690 ...................... <me.foSession>
  [  5] pusharglist 1 ........................... <me.foSession>
  [  7] objcall 683 ............................. <me.foSession.getRooms()>
  [ 10] pusharglist 1 ........................... <me.foSession.getRooms()>
  [ 12] objcall 722 ............................. <me.foSession.getRooms().keySet()>
  [ 15] setlocal 0 .............................. keySet = me.foSession.getRooms().keySet()
  [ 17] pushzero ................................ <0>
  [ 18] setlocal 1
  [ 20] getlocal 1
  [ 22] getlocal 0 .............................. <keySet>
  [ 24] getobjprop 240 .......................... <keySet.length>
  [ 26] lteq
  [ 27] jmpifz [ 54] ............................ repeat with i = 0 to keySet.length
  [ 30] pushcons 51 ............................. <"Room: ">
  [ 32] getlocal 0 .............................. <keySet>
  [ 34] getlocal 1 .............................. <i>
  [ 36] pusharglist 2 ........................... <keySet, i>
  [ 38] objcall 163 ............................. <keySet[i]>
  [ 40] joinstr ................................. <"Room: " & keySet[i]>
  [ 41] pusharglistnoret 1 ...................... <"Room: " & keySet[i]>
  [ 43] extcall 118 ............................. put "Room: " & keySet[i]
  [ 45] pushint8 1
  [ 47] getlocal 1
  [ 49] add
  [ 50] setlocal 1
  [ 52] endrepeat [ 20]
  [ 54] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 104 .......................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 103 ............................. <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 121 ............................. return sprite(me.spriteNum)
  [ 12] ret
end
