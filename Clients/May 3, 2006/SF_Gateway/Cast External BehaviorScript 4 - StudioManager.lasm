property bDebug, bInitialized, bReadyForuse, foStudioManager, fo_level0, aPrivateStudioData, ERROR_TYPE, ARRAY_TYPE, STUDIO_TYPE, iLastPublicStudioUpdate, iLastPrivateStudioUpdate, iCacheTimeLength, aCachedStudioData, STUDIO_TIMER_ID, STUDIO_MODE, NASCENT, PUBLIC, PRIVATE, PERSONAL, SEARCH
global sLanguageSetting, oStudioManager, oDenizenManager, oPossessionManager, oPublicstudioData, ElementMgr, gbTestMode, oSession, gFeatureSet

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 28 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] pushzero ................................ <0>
  [  8] setobjprop 29 ........................... me.bInitialized = 0
  [ 10] getparam 0 .............................. <me>
  [ 12] pushzero ................................ <0>
  [ 13] setobjprop 30 ........................... me.bReadyForuse = 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setobjprop 135 .......................... me.aPrivateStudioData = []
  [ 22] getparam 0 .............................. <me>
  [ 24] setglobal 82 ............................ oStudioManager = me
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 0 .............................. <"FlashReturnStatusEnum">
  [ 30] setobjprop 136 .......................... me.ERROR_TYPE = "FlashReturnStatusEnum"
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 1 .............................. <"Array">
  [ 36] setobjprop 137 .......................... me.ARRAY_TYPE = "Array"
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 2 .............................. <"Studio">
  [ 42] setobjprop 138 .......................... me.STUDIO_TYPE = "Studio"
  [ 44] getparam 0 .............................. <me>
  [ 46] pushint16 10000 ......................... <10000>
  [ 49] setobjprop 139 .......................... me.iCacheTimeLength = 10000
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 0 ........................... <[]>
  [ 55] pushlist ................................ <[]>
  [ 56] setobjprop 140 .......................... me.aCachedStudioData = []
  [ 58] getparam 0 .............................. <me>
  [ 60] pushcons 3 .............................. <"NASCENT">
  [ 62] setobjprop 141 .......................... me.NASCENT = "NASCENT"
  [ 64] getparam 0 .............................. <me>
  [ 66] pushcons 4 .............................. <"PUBLIC">
  [ 68] setobjprop 142 .......................... me.PUBLIC = "PUBLIC"
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 5 .............................. <"PRIVATE">
  [ 74] setobjprop 143 .......................... me.PRIVATE = "PRIVATE"
  [ 76] getparam 0 .............................. <me>
  [ 78] pushcons 6 .............................. <"PERSONAL">
  [ 80] setobjprop 144 .......................... me.PERSONAL = "PERSONAL"
  [ 82] getparam 0 .............................. <me>
  [ 84] pushcons 7 .............................. <"SEARCH">
  [ 86] setobjprop 145 .......................... me.SEARCH = "SEARCH"
  [ 88] getparam 0 .............................. <me>
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 141 .......................... <me.NASCENT>
  [ 94] setobjprop 146 .......................... me.STUDIO_MODE = me.NASCENT
  [ 96] getparam 0 .............................. <me>
  [ 98] pushcons 8 .............................. <"STUDIO_TIMER">
  [100] setobjprop 147 .......................... me.STUDIO_TIMER_ID = "STUDIO_TIMER"
  [102] pushcons 9 .............................. <"_TIMER_">
  [104] pusharglist 1 ........................... <"_TIMER_">
  [106] extcall 148 ............................. <script("_TIMER_")>
  [108] pushint16 400 ........................... <400>
  [111] pushsymb 90 ............................. <#Init>
  [113] getparam 0 .............................. <me>
  [115] pusharglistnoret 4 ...................... <script("_TIMER_"), 400, #Init, me>
  [117] objcall 149 ............................. script("_TIMER_").new(400, #Init, me)
  [119] ret
end

on getStudioMode me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 146 .......................... <me.STUDIO_MODE>
  [  4] pusharglistnoret 1 ...................... <me.STUDIO_MODE>
  [  6] extcall 71 .............................. return me.STUDIO_MODE
  [  8] ret
end

on setStudioMode me, sMode
  [  0] getparam 1 .............................. <sMode>
  [  2] peek 0 .................................. case sMode of
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 141 .......................... <me.NASCENT>
  [  8] eq
  [  9] jmpifz [ 23] ............................ (case) me.NASCENT:
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 141 .......................... <me.NASCENT>
  [ 18] setobjprop 146 .......................... me.STUDIO_MODE = me.NASCENT
  [ 20] jmp [104]
  [ 23] peek 0
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 142 .......................... <me.PUBLIC>
  [ 29] eq
  [ 30] jmpifz [ 44] ............................ (case) me.PUBLIC:
  [ 33] getparam 0 .............................. <me>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 142 .......................... <me.PUBLIC>
  [ 39] setobjprop 146 .......................... me.STUDIO_MODE = me.PUBLIC
  [ 41] jmp [104]
  [ 44] peek 0
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 143 .......................... <me.PRIVATE>
  [ 50] eq
  [ 51] jmpifz [ 65] ............................ (case) me.PRIVATE:
  [ 54] getparam 0 .............................. <me>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 143 .......................... <me.PRIVATE>
  [ 60] setobjprop 146 .......................... me.STUDIO_MODE = me.PRIVATE
  [ 62] jmp [104]
  [ 65] peek 0
  [ 67] getparam 0 .............................. <me>
  [ 69] getobjprop 144 .......................... <me.PERSONAL>
  [ 71] eq
  [ 72] jmpifz [ 86] ............................ (case) me.PERSONAL:
  [ 75] getparam 0 .............................. <me>
  [ 77] getparam 0 .............................. <me>
  [ 79] getobjprop 144 .......................... <me.PERSONAL>
  [ 81] setobjprop 146 .......................... me.STUDIO_MODE = me.PERSONAL
  [ 83] jmp [104]
  [ 86] peek 0
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 145 .......................... <me.SEARCH>
  [ 92] eq
  [ 93] jmpifz [104] ............................ (case) me.SEARCH:
  [ 96] getparam 0 .............................. <me>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 145 .......................... <me.SEARCH>
  [102] setobjprop 146 .......................... me.STUDIO_MODE = me.SEARCH
  [104] pop 1 ................................... end case
  [106] getparam 0 .............................. <me>
  [108] pushcons 10 ............................. <"setStudioMode() sMode: ">
  [110] getparam 1 .............................. <sMode>
  [112] joinstr ................................. <"setStudioMode() sMode: " & sMode>
  [113] pushcons 11 ............................. <", STUDIO_MODE: ">
  [115] joinstr ................................. <"setStudioMode() sMode: " & sMode & ", STUDIO_MODE: ">
  [116] getparam 0 .............................. <me>
  [118] getobjprop 146 .......................... <me.STUDIO_MODE>
  [120] joinstr ................................. <"setStudioMode() sMode: " & sMode & ", STUDIO_MODE: " & me.STUDIO_MODE>
  [121] pusharglistnoret 2 ...................... <me, "setStudioMode() sMode: " & sMode & ", STUDIO_MODE: " & me.STUDIO_MODE>
  [123] objcall 20 .............................. me.debug("setStudioMode() sMode: " & sMode & ", STUDIO_MODE: " & me.STUDIO_MODE)
  [125] ret
end

on startStudioTimer me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 12 ............................. <"startStudioTimer()">
  [  4] pusharglistnoret 2 ...................... <me, "startStudioTimer()">
  [  6] objcall 20 .............................. me.debug("startStudioTimer()")
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 1 ...................... <me>
  [ 12] objcall 87 .............................. me.stopStudioTimer()
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 147 .......................... <me.STUDIO_TIMER_ID>
  [ 18] pusharglist 1 ........................... <me.STUDIO_TIMER_ID>
  [ 20] extcall 151 ............................. <timeout(me.STUDIO_TIMER_ID)>
  [ 22] pushint16 5000 .......................... <5000>
  [ 25] pushsymb 88 ............................. <#processStudioTimer>
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 4 ...................... <timeout(me.STUDIO_TIMER_ID), 5000, #processStudioTimer, me>
  [ 31] objcall 149 ............................. timeout(me.STUDIO_TIMER_ID).new(5000, #processStudioTimer, me)
  [ 33] ret
end

on stopStudioTimer me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 13 ............................. <"stopStudioTimer()">
  [  4] pusharglistnoret 2 ...................... <me, "stopStudioTimer()">
  [  6] objcall 20 .............................. me.debug("stopStudioTimer()")
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 147 .......................... <me.STUDIO_TIMER_ID>
  [ 12] pusharglist 1 ........................... <me.STUDIO_TIMER_ID>
  [ 14] extcall 151 ............................. <timeout(me.STUDIO_TIMER_ID)>
  [ 16] pusharglistnoret 1 ...................... <timeout(me.STUDIO_TIMER_ID)>
  [ 18] objcall 152 ............................. timeout(me.STUDIO_TIMER_ID).forget()
  [ 20] ret
end

on processStudioTimer me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 14 ............................. <"processStudioTimer() STUDIO_MODE: ">
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 146 .......................... <me.STUDIO_MODE>
  [  8] joinstr ................................. <"processStudioTimer() STUDIO_MODE: " & me.STUDIO_MODE>
  [  9] pusharglistnoret 2 ...................... <me, "processStudioTimer() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 11] objcall 20 .............................. me.debug("processStudioTimer() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 146 .......................... <me.STUDIO_MODE>
  [ 17] peek 0 .................................. case me.STUDIO_MODE of
  [ 19] getparam 0 .............................. <me>
  [ 21] getobjprop 141 .......................... <me.NASCENT>
  [ 23] eq
  [ 24] jmpifz [ 30] ............................ (case) me.NASCENT:
  [ 27] jmp [139]
  [ 30] peek 0
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 142 .......................... <me.PUBLIC>
  [ 36] eq
  [ 37] jmpifz [ 73] ............................ (case) me.PUBLIC:
  [ 40] getglobal 153 ........................... <ElementMgr>
  [ 42] pusharglist 1 ........................... <ElementMgr>
  [ 44] objcall 154 ............................. <ElementMgr.isPublicStudioWindowOpen()>
  [ 46] setlocal 0 .............................. bPublicStudioWindowOpen = ElementMgr.isPublicStudioWindowOpen()
  [ 48] getlocal 0 .............................. <bPublicStudioWindowOpen>
  [ 50] jmpifz [ 62] ............................ if bPublicStudioWindowOpen then / else
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglistnoret 1 ...................... <me>
  [ 57] objcall 92 .............................. me.getAllPublicStudios()
  [ 59] jmp [ 70]
  [ 62] getparam 0 .............................. <me>
  [ 64] pushcons 15 ............................. <"processStudioTimer() PUBLIC STUDIO WINDOW NOT OPEN">
  [ 66] pusharglistnoret 2 ...................... <me, "processStudioTimer() PUBLIC STUDIO WINDOW NOT OPEN">
  [ 68] objcall 20 .............................. me.debug("processStudioTimer() PUBLIC STUDIO WINDOW NOT OPEN")
  [ 70] jmp [139]
  [ 73] peek 0
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 143 .......................... <me.PRIVATE>
  [ 79] eq
  [ 80] jmpifz [116] ............................ (case) me.PRIVATE:
  [ 83] getglobal 153 ........................... <ElementMgr>
  [ 85] pusharglist 1 ........................... <ElementMgr>
  [ 87] objcall 155 ............................. <ElementMgr.isPrivateStudioWindowOpen()>
  [ 89] setlocal 1 .............................. bPrivateStudioWindowOpen = ElementMgr.isPrivateStudioWindowOpen()
  [ 91] getlocal 1 .............................. <bPrivateStudioWindowOpen>
  [ 93] jmpifz [105] ............................ if bPrivateStudioWindowOpen then / else
  [ 96] getparam 0 .............................. <me>
  [ 98] pusharglistnoret 1 ...................... <me>
  [100] objcall 93 .............................. me.getAllPrivateStudios()
  [102] jmp [113]
  [105] getparam 0 .............................. <me>
  [107] pushcons 16 ............................. <"processStudioTimer() PRIVATE STUDIO WINDOW NOT OPEN">
  [109] pusharglistnoret 2 ...................... <me, "processStudioTimer() PRIVATE STUDIO WINDOW NOT OPEN">
  [111] objcall 20 .............................. me.debug("processStudioTimer() PRIVATE STUDIO WINDOW NOT OPEN")
  [113] jmp [139]
  [116] peek 0
  [118] getparam 0 .............................. <me>
  [120] getobjprop 144 .......................... <me.PERSONAL>
  [122] eq
  [123] jmpifz [129] ............................ (case) me.PERSONAL:
  [126] jmp [139]
  [129] peek 0
  [131] getparam 0 .............................. <me>
  [133] getobjprop 145 .......................... <me.SEARCH>
  [135] eq
  [136] jmpifz [139] ............................ (case) me.SEARCH:
  [139] pop 1 ................................... end case
  [141] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 3 ............................ <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 2 ............................... <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 158 .......................... <me.foStudioManager>
  [ 12] pushcons 17 ............................. <"beanCreated">
  [ 14] pushsymb 91 ............................. <#beanCreated>
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "beanCreated", #beanCreated, me>
  [ 20] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "beanCreated", #beanCreated, me)
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 3 ............................ <me.spriteNum>
  [ 26] pusharglist 1 ........................... <me.spriteNum>
  [ 28] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 158 .......................... <me.foStudioManager>
  [ 34] pushcons 18 ............................. <"getAllPublicStudios_Result">
  [ 36] pushsymb 106 ............................ <#getAllPublicStudios_Result>
  [ 38] getparam 0 .............................. <me>
  [ 40] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getAllPublicStudios_Result", #getAllPublicStudios_Result, me>
  [ 42] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getAllPublicStudios_Result", #getAllPublicStudios_Result, me)
  [ 44] getparam 0 .............................. <me>
  [ 46] getobjprop 3 ............................ <me.spriteNum>
  [ 48] pusharglist 1 ........................... <me.spriteNum>
  [ 50] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 158 .......................... <me.foStudioManager>
  [ 56] pushcons 19 ............................. <"getAllPrivateStudios_Result">
  [ 58] pushsymb 107 ............................ <#getAllPrivateStudios_Result>
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getAllPrivateStudios_Result", #getAllPrivateStudios_Result, me>
  [ 64] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getAllPrivateStudios_Result", #getAllPrivateStudios_Result, me)
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 3 ............................ <me.spriteNum>
  [ 70] pusharglist 1 ........................... <me.spriteNum>
  [ 72] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 158 .......................... <me.foStudioManager>
  [ 78] pushcons 20 ............................. <"getByOwnerName_Result">
  [ 80] pushsymb 108 ............................ <#getByOwnerName_Result>
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getByOwnerName_Result", #getByOwnerName_Result, me>
  [ 86] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getByOwnerName_Result", #getByOwnerName_Result, me)
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 3 ............................ <me.spriteNum>
  [ 92] pusharglist 1 ........................... <me.spriteNum>
  [ 94] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 158 .......................... <me.foStudioManager>
  [100] pushcons 21 ............................. <"getByStudioId_Result">
  [102] pushsymb 109 ............................ <#getByStudioId_Result>
  [104] getparam 0 .............................. <me>
  [106] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getByStudioId_Result", #getByStudioId_Result, me>
  [108] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getByStudioId_Result", #getByStudioId_Result, me)
  [110] getparam 0 .............................. <me>
  [112] getobjprop 3 ............................ <me.spriteNum>
  [114] pusharglist 1 ........................... <me.spriteNum>
  [116] extcall 2 ............................... <sprite(me.spriteNum)>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 158 .......................... <me.foStudioManager>
  [122] pushcons 22 ............................. <"getGameServerByStudioID_Result">
  [124] pushsymb 110 ............................ <#getGameServerByStudioID_Result>
  [126] getparam 0 .............................. <me>
  [128] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getGameServerByStudioID_Result", #getGameServerByStudioID_Result, me>
  [130] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getGameServerByStudioID_Result", #getGameServerByStudioID_Result, me)
  [132] getparam 0 .............................. <me>
  [134] getobjprop 3 ............................ <me.spriteNum>
  [136] pusharglist 1 ........................... <me.spriteNum>
  [138] extcall 2 ............................... <sprite(me.spriteNum)>
  [140] getparam 0 .............................. <me>
  [142] getobjprop 158 .......................... <me.foStudioManager>
  [144] pushcons 23 ............................. <"getByStudioName_Result">
  [146] pushsymb 111 ............................ <#getByStudioName_Result>
  [148] getparam 0 .............................. <me>
  [150] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getByStudioName_Result", #getByStudioName_Result, me>
  [152] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getByStudioName_Result", #getByStudioName_Result, me)
  [154] getparam 0 .............................. <me>
  [156] getobjprop 3 ............................ <me.spriteNum>
  [158] pusharglist 1 ........................... <me.spriteNum>
  [160] extcall 2 ............................... <sprite(me.spriteNum)>
  [162] getparam 0 .............................. <me>
  [164] getobjprop 158 .......................... <me.foStudioManager>
  [166] pushcons 24 ............................. <"getOccupantsByStudioId_Result">
  [168] pushsymb 112 ............................ <#getOccupantsByStudioId_Result>
  [170] getparam 0 .............................. <me>
  [172] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getOccupantsByStudioId_Result", #getOccupantsByStudioId_Result, me>
  [174] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getOccupantsByStudioId_Result", #getOccupantsByStudioId_Result, me)
  [176] getparam 0 .............................. <me>
  [178] getobjprop 3 ............................ <me.spriteNum>
  [180] pusharglist 1 ........................... <me.spriteNum>
  [182] extcall 2 ............................... <sprite(me.spriteNum)>
  [184] getparam 0 .............................. <me>
  [186] getobjprop 158 .......................... <me.foStudioManager>
  [188] pushcons 25 ............................. <"createStudio_Result">
  [190] pushsymb 113 ............................ <#createStudio_Result>
  [192] getparam 0 .............................. <me>
  [194] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "createStudio_Result", #createStudio_Result, me>
  [196] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "createStudio_Result", #createStudio_Result, me)
  [198] getparam 0 .............................. <me>
  [200] getobjprop 3 ............................ <me.spriteNum>
  [202] pusharglist 1 ........................... <me.spriteNum>
  [204] extcall 2 ............................... <sprite(me.spriteNum)>
  [206] getparam 0 .............................. <me>
  [208] getobjprop 158 .......................... <me.foStudioManager>
  [210] pushcons 26 ............................. <"modifyStudio_Result">
  [212] pushsymb 114 ............................ <#modifyStudio_Result>
  [214] getparam 0 .............................. <me>
  [216] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "modifyStudio_Result", #modifyStudio_Result, me>
  [218] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "modifyStudio_Result", #modifyStudio_Result, me)
  [220] getparam 0 .............................. <me>
  [222] getobjprop 3 ............................ <me.spriteNum>
  [224] pusharglist 1 ........................... <me.spriteNum>
  [226] extcall 2 ............................... <sprite(me.spriteNum)>
  [228] getparam 0 .............................. <me>
  [230] getobjprop 158 .......................... <me.foStudioManager>
  [232] pushcons 27 ............................. <"deleteStudio_Result">
  [234] pushsymb 115 ............................ <#deleteStudio_Result>
  [236] getparam 0 .............................. <me>
  [238] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "deleteStudio_Result", #deleteStudio_Result, me>
  [240] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "deleteStudio_Result", #deleteStudio_Result, me)
  [242] getparam 0 .............................. <me>
  [244] getobjprop 3 ............................ <me.spriteNum>
  [246] pusharglist 1 ........................... <me.spriteNum>
  [248] extcall 2 ............................... <sprite(me.spriteNum)>
  [250] getparam 0 .............................. <me>
  [252] getobjprop 158 .......................... <me.foStudioManager>
  [254] pushcons 28 ............................. <"getMixerByScreenName_Result">
  [256] pushsymb 118 ............................ <#getMixerByScreenName_Result>
  [258] getparam 0 .............................. <me>
  [260] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "getMixerByScreenName_Result", #getMixerByScreenName_Result, me>
  [262] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "getMixerByScreenName_Result", #getMixerByScreenName_Result, me)
  [264] getparam 0 .............................. <me>
  [266] getobjprop 3 ............................ <me.spriteNum>
  [268] pusharglist 1 ........................... <me.spriteNum>
  [270] extcall 2 ............................... <sprite(me.spriteNum)>
  [272] getparam 0 .............................. <me>
  [274] getobjprop 158 .......................... <me.foStudioManager>
  [276] pushcons 29 ............................. <"burnMixToCD_Result">
  [278] pushsymb 119 ............................ <#burnMixToCD_Result>
  [280] getparam 0 .............................. <me>
  [282] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foStudioManager, "burnMixToCD_Result", #burnMixToCD_Result, me>
  [284] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foStudioManager, "burnMixToCD_Result", #burnMixToCD_Result, me)
  [286] ret
end

on Init me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 30 ............................. <"init()">
  [  4] pusharglistnoret 2 ...................... <me, "init()">
  [  6] objcall 20 .............................. me.debug("init()")
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 3 ............................ <me.spriteNum>
  [ 14] pusharglist 1 ........................... <me.spriteNum>
  [ 16] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 18] pushcons 31 ............................. <"_level0.oStudioManager">
  [ 20] pushzero ................................ <0>
  [ 21] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0.oStudioManager", 0>
  [ 23] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0.oStudioManager", 0)>
  [ 25] setobjprop 158 .......................... me.foStudioManager = sprite(me.spriteNum).getVariable("_level0.oStudioManager", 0)
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 3 ............................ <me.spriteNum>
  [ 33] pusharglist 1 ........................... <me.spriteNum>
  [ 35] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 37] pushcons 32 ............................. <"_level0">
  [ 39] pushzero ................................ <0>
  [ 40] pusharglist 3 ........................... <sprite(me.spriteNum), "_level0", 0>
  [ 42] objcall 160 ............................. <sprite(me.spriteNum).getVariable("_level0", 0)>
  [ 44] setobjprop 161 .......................... me.fo_level0 = sprite(me.spriteNum).getVariable("_level0", 0)
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 89 .............................. me.setCallbacks()
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 158 ...................... <me.foStudioManager>
  [ 56] pushzero ................................ <0>
  [ 57] setobjprop 28 ........................... me.foStudioManager.bDebug = 0
  [ 59] getparam 0 .............................. <me>
  [ 61] getchainedprop 158 ...................... <me.foStudioManager>
  [ 63] pushzero ................................ <0>
  [ 64] setobjprop 162 .......................... me.foStudioManager.bTestMode = 0
  [ 66] getmovieprop 163 ........................ <the runMode>
  [ 68] pushcons 33 ............................. <"Author">
  [ 70] eq ...................................... <the runMode = "Author">
  [ 71] jmpifz [ 83] ............................ if the runMode = "Author" then / else
  [ 74] getparam 0 .............................. <me>
  [ 76] pushint8 1 .............................. <1>
  [ 78] setobjprop 30 ........................... me.bReadyForuse = 1
  [ 80] jmp [ 99]
  [ 83] getparam 0 .............................. <me>
  [ 85] getchainedprop 158 ...................... <me.foStudioManager>
  [ 87] getparam 0 .............................. <me>
  [ 89] getchainedprop 161 ...................... <me.fo_level0>
  [ 91] pusharglist 1 ........................... <me.fo_level0>
  [ 93] objcall 164 ............................. <me.fo_level0.getGatewayConnection()>
  [ 95] pusharglistnoret 2 ...................... <me.foStudioManager, me.fo_level0.getGatewayConnection()>
  [ 97] objcall 165 ............................. me.foStudioManager.createGateway(me.fo_level0.getGatewayConnection())
  [ 99] getparam 0 .............................. <me>
  [101] pushint8 1 .............................. <1>
  [103] setobjprop 29 ........................... me.bInitialized = 1
  [105] getparam 0 .............................. <me>
  [107] pusharglistnoret 1 ...................... <me>
  [109] objcall 86 .............................. me.startStudioTimer()
  [111] ret
end

on beanCreated me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 34 ............................. <"beanCreated()">
  [  4] pusharglistnoret 2 ...................... <me, "beanCreated()">
  [  6] objcall 20 .............................. me.debug("beanCreated()")
  [  8] getparam 0 .............................. <me>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 30 ........................... me.bReadyForuse = 1
  [ 14] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 28 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 35 ............................. <"StudioManager: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"StudioManager: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"StudioManager: " & sMessage>
  [ 17] extcall 33 .............................. put "StudioManager: " & sMessage
  [ 19] ret
end

on getAllPublicStudios me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 142 .......................... <me.PUBLIC>
  [  6] pusharglistnoret 2 ...................... <me, me.PUBLIC>
  [  8] objcall 85 .............................. me.setStudioMode(me.PUBLIC)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 36 ............................. <"getAllPublicStudios() STUDIO_MODE: ">
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 146 .......................... <me.STUDIO_MODE>
  [ 18] joinstr ................................. <"getAllPublicStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 19] pusharglistnoret 2 ...................... <me, "getAllPublicStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 21] objcall 20 .............................. me.debug("getAllPublicStudios() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 23] getglobal 167 ........................... <gbTestMode>
  [ 25] jmpifz [ 67] ............................ if gbTestMode then
  [ 28] getglobal 31 ............................ <oPublicstudioData>
  [ 30] getobjprop 32 ........................... <oPublicstudioData.aStudioData>
  [ 32] setlocal 0 .............................. aStudioData = oPublicstudioData.aStudioData
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 37 ............................. <"getAllPublicStudios_Result() aStudioData: ">
  [ 38] getlocal 0 .............................. <aStudioData>
  [ 40] joinstr ................................. <"getAllPublicStudios_Result() aStudioData: " & aStudioData>
  [ 41] pusharglistnoret 2 ...................... <me, "getAllPublicStudios_Result() aStudioData: " & aStudioData>
  [ 43] objcall 20 .............................. me.debug("getAllPublicStudios_Result() aStudioData: " & aStudioData)
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 15 .............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 63] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 153 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <aStudioData>
  [ 59] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 61] objcall 168 ............................. ElementMgr.displayPublicStudios(aStudioData)
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 71 .............................. return 
  [ 67] pushint8 1 .............................. <1>
  [ 69] setlocal 1 .............................. bUseCache = 1
  [ 71] getparam 0 .............................. <me>
  [ 73] getobjprop 169 .......................... <me.iLastPublicStudioUpdate>
  [ 75] pusharglist 1 ........................... <me.iLastPublicStudioUpdate>
  [ 77] extcall 15 .............................. <voidp(me.iLastPublicStudioUpdate)>
  [ 79] not ..................................... <not voidp(me.iLastPublicStudioUpdate)>
  [ 80] jmpifz [108] ............................ if not voidp(me.iLastPublicStudioUpdate) then / else
  [ 83] getmovieprop 170 ........................ <the milliSeconds>
  [ 85] getparam 0 .............................. <me>
  [ 87] getobjprop 169 .......................... <me.iLastPublicStudioUpdate>
  [ 89] sub ..................................... <the milliSeconds - me.iLastPublicStudioUpdate>
  [ 90] setlocal 2 .............................. iElapsedTime = the milliSeconds - me.iLastPublicStudioUpdate
  [ 92] getlocal 2 .............................. <iElapsedTime>
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 139 .......................... <me.iCacheTimeLength>
  [ 98] gteq .................................... <iElapsedTime >= me.iCacheTimeLength>
  [ 99] jmpifz [105] ............................ if iElapsedTime >= me.iCacheTimeLength then
  [102] pushzero ................................ <0>
  [103] setlocal 1 .............................. bUseCache = 0
  [105] jmp [111]
  [108] pushzero ................................ <0>
  [109] setlocal 1 .............................. bUseCache = 0
  [111] getlocal 1 .............................. <bUseCache>
  [113] not ..................................... <not bUseCache>
  [114] jmpifz [128] ............................ if not bUseCache then / else
  [117] getparam 0 .............................. <me>
  [119] getchainedprop 158 ...................... <me.foStudioManager>
  [121] pusharglistnoret 1 ...................... <me.foStudioManager>
  [123] objcall 92 .............................. me.foStudioManager.getAllPublicStudios()
  [125] jmp [156]
  [128] getparam 0 .............................. <me>
  [130] pushcons 38 ............................. <"*** CACHED ****: getAllPublicStudios_Result()">
  [132] pusharglistnoret 2 ...................... <me, "*** CACHED ****: getAllPublicStudios_Result()">
  [134] objcall 20 .............................. me.debug("*** CACHED ****: getAllPublicStudios_Result()")
  [136] getglobal 153 ........................... <ElementMgr>
  [138] pusharglist 1 ........................... <ElementMgr>
  [140] extcall 15 .............................. <voidp(ElementMgr)>
  [142] not ..................................... <not voidp(ElementMgr)>
  [143] jmpifz [156] ............................ if not voidp(ElementMgr) then
  [146] getglobal 153 ........................... <ElementMgr>
  [148] getparam 0 .............................. <me>
  [150] getobjprop 140 .......................... <me.aCachedStudioData>
  [152] pusharglistnoret 2 ...................... <ElementMgr, me.aCachedStudioData>
  [154] objcall 168 ............................. ElementMgr.displayPublicStudios(me.aCachedStudioData)
  [156] ret
end

on getAllPrivateStudios me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 143 .......................... <me.PRIVATE>
  [  6] pusharglistnoret 2 ...................... <me, me.PRIVATE>
  [  8] objcall 85 .............................. me.setStudioMode(me.PRIVATE)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 39 ............................. <"getAllPrivateStudios() STUDIO_MODE: ">
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 146 .......................... <me.STUDIO_MODE>
  [ 18] joinstr ................................. <"getAllPrivateStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 19] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 21] objcall 20 .............................. me.debug("getAllPrivateStudios() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 23] getglobal 167 ........................... <gbTestMode>
  [ 25] jmpifz [ 75] ............................ if gbTestMode then
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 132 ............................. <me.getTestStudios()>
  [ 34] setlocal 0 .............................. aStudioData = me.getTestStudios()
  [ 36] getparam 0 .............................. <me>
  [ 38] getlocal 0 .............................. <aStudioData>
  [ 40] setobjprop 135 .......................... me.aPrivateStudioData = aStudioData
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 40 ............................. <"getAllPrivateStudios_Result() aStudioData: ">
  [ 46] getlocal 0 .............................. <aStudioData>
  [ 48] joinstr ................................. <"getAllPrivateStudios_Result() aStudioData: " & aStudioData>
  [ 49] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() aStudioData: " & aStudioData>
  [ 51] objcall 20 .............................. me.debug("getAllPrivateStudios_Result() aStudioData: " & aStudioData)
  [ 53] getglobal 153 ........................... <ElementMgr>
  [ 55] pusharglist 1 ........................... <ElementMgr>
  [ 57] extcall 15 .............................. <voidp(ElementMgr)>
  [ 59] not ..................................... <not voidp(ElementMgr)>
  [ 60] jmpifz [ 71] ............................ if not voidp(ElementMgr) then
  [ 63] getglobal 153 ........................... <ElementMgr>
  [ 65] getlocal 0 .............................. <aStudioData>
  [ 67] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 69] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 71] pusharglistnoret 0 ...................... <>
  [ 73] extcall 71 .............................. return 
  [ 75] pushint8 1 .............................. <1>
  [ 77] setlocal 1 .............................. bUseCache = 1
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 174 .......................... <me.iLastPrivateStudioUpdate>
  [ 83] pusharglist 1 ........................... <me.iLastPrivateStudioUpdate>
  [ 85] extcall 15 .............................. <voidp(me.iLastPrivateStudioUpdate)>
  [ 87] not ..................................... <not voidp(me.iLastPrivateStudioUpdate)>
  [ 88] jmpifz [127] ............................ if not voidp(me.iLastPrivateStudioUpdate) then / else
  [ 91] getmovieprop 170 ........................ <the milliSeconds>
  [ 93] getparam 0 .............................. <me>
  [ 95] getobjprop 174 .......................... <me.iLastPrivateStudioUpdate>
  [ 97] sub ..................................... <the milliSeconds - me.iLastPrivateStudioUpdate>
  [ 98] setlocal 2 .............................. iElapsedTime = the milliSeconds - me.iLastPrivateStudioUpdate
  [100] getparam 0 .............................. <me>
  [102] pushcons 41 ............................. <"iElapsedTime: ">
  [104] getlocal 2 .............................. <iElapsedTime>
  [106] joinstr ................................. <"iElapsedTime: " & iElapsedTime>
  [107] pusharglistnoret 2 ...................... <me, "iElapsedTime: " & iElapsedTime>
  [109] objcall 20 .............................. me.debug("iElapsedTime: " & iElapsedTime)
  [111] getlocal 2 .............................. <iElapsedTime>
  [113] getparam 0 .............................. <me>
  [115] getobjprop 139 .......................... <me.iCacheTimeLength>
  [117] gteq .................................... <iElapsedTime >= me.iCacheTimeLength>
  [118] jmpifz [124] ............................ if iElapsedTime >= me.iCacheTimeLength then
  [121] pushzero ................................ <0>
  [122] setlocal 1 .............................. bUseCache = 0
  [124] jmp [130]
  [127] pushzero ................................ <0>
  [128] setlocal 1 .............................. bUseCache = 0
  [130] getlocal 1 .............................. <bUseCache>
  [132] not ..................................... <not bUseCache>
  [133] jmpifz [147] ............................ if not bUseCache then / else
  [136] getparam 0 .............................. <me>
  [138] getchainedprop 158 ...................... <me.foStudioManager>
  [140] pusharglistnoret 1 ...................... <me.foStudioManager>
  [142] objcall 93 .............................. me.foStudioManager.getAllPrivateStudios()
  [144] jmp [179]
  [147] getparam 0 .............................. <me>
  [149] getobjprop 135 .......................... <me.aPrivateStudioData>
  [151] setlocal 0 .............................. aStudioData = me.aPrivateStudioData
  [153] getparam 0 .............................. <me>
  [155] pushcons 42 ............................. <"**** CACHED ****: getAllPrivateStudios_Result()">
  [157] pusharglistnoret 2 ...................... <me, "**** CACHED ****: getAllPrivateStudios_Result()">
  [159] objcall 20 .............................. me.debug("**** CACHED ****: getAllPrivateStudios_Result()")
  [161] getglobal 153 ........................... <ElementMgr>
  [163] pusharglist 1 ........................... <ElementMgr>
  [165] extcall 15 .............................. <voidp(ElementMgr)>
  [167] not ..................................... <not voidp(ElementMgr)>
  [168] jmpifz [179] ............................ if not voidp(ElementMgr) then
  [171] getglobal 153 ........................... <ElementMgr>
  [173] getlocal 0 .............................. <aStudioData>
  [175] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [177] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [179] ret
end

on getByOwnerName me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 144 .......................... <me.PERSONAL>
  [  6] pusharglistnoret 2 ...................... <me, me.PERSONAL>
  [  8] objcall 85 .............................. me.setStudioMode(me.PERSONAL)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 43 ............................. <"getByOwnerName() STUDIO_MODE: ">
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 146 .......................... <me.STUDIO_MODE>
  [ 18] joinstr ................................. <"getByOwnerName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 19] pusharglistnoret 2 ...................... <me, "getByOwnerName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 21] objcall 20 .............................. me.debug("getByOwnerName() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 23] getglobal 167 ........................... <gbTestMode>
  [ 25] jmpifz [ 75] ............................ if gbTestMode then
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 132 ............................. <me.getTestStudios()>
  [ 34] setlocal 0 .............................. aStudioData = me.getTestStudios()
  [ 36] getparam 0 .............................. <me>
  [ 38] getlocal 0 .............................. <aStudioData>
  [ 40] setobjprop 135 .......................... me.aPrivateStudioData = aStudioData
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 44 ............................. <"getByOwnerName_Result() aStudioData: ">
  [ 46] getlocal 0 .............................. <aStudioData>
  [ 48] joinstr ................................. <"getByOwnerName_Result() aStudioData: " & aStudioData>
  [ 49] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result() aStudioData: " & aStudioData>
  [ 51] objcall 20 .............................. me.debug("getByOwnerName_Result() aStudioData: " & aStudioData)
  [ 53] getglobal 153 ........................... <ElementMgr>
  [ 55] pusharglist 1 ........................... <ElementMgr>
  [ 57] extcall 15 .............................. <voidp(ElementMgr)>
  [ 59] not ..................................... <not voidp(ElementMgr)>
  [ 60] jmpifz [ 71] ............................ if not voidp(ElementMgr) then
  [ 63] getglobal 153 ........................... <ElementMgr>
  [ 65] getlocal 0 .............................. <aStudioData>
  [ 67] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 69] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 71] pusharglistnoret 0 ...................... <>
  [ 73] extcall 71 .............................. return 
  [ 75] getparam 1 .............................. <sScreenName>
  [ 77] pusharglist 1 ........................... <sScreenName>
  [ 79] extcall 15 .............................. <voidp(sScreenName)>
  [ 81] jmpifz [ 88] ............................ if voidp(sScreenName) then
  [ 84] pushcons 45 ............................. <EMPTY>
  [ 86] setparam 1 .............................. sScreenName = EMPTY
  [ 88] getparam 0 .............................. <me>
  [ 90] pushzero ................................ <0>
  [ 91] setobjprop 174 .......................... me.iLastPrivateStudioUpdate = 0
  [ 93] getparam 0 .............................. <me>
  [ 95] getchainedprop 158 ...................... <me.foStudioManager>
  [ 97] getparam 1 .............................. <sScreenName>
  [ 99] pusharglistnoret 2 ...................... <me.foStudioManager, sScreenName>
  [101] objcall 94 .............................. me.foStudioManager.getByOwnerName(sScreenName)
  [103] ret
end

on getByStudioID me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 46 ............................. <"getByStudioID() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getByStudioID() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getByStudioID() " & sStudioID>
  [  9] objcall 20 .............................. me.debug("getByStudioID() " & sStudioID)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 38] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 161 ...................... <me.fo_level0>
  [ 20] pusharglist 1 ........................... <me.fo_level0>
  [ 22] objcall 176 ............................. <me.fo_level0.getTestGameServerObject()>
  [ 24] setlocal 0 .............................. foGameServer = me.fo_level0.getTestGameServerObject()
  [ 26] pushsymb 178 ............................ <#initGetGameServerResult>
  [ 28] getlocal 0 .............................. <foGameServer>
  [ 30] pusharglistnoret 2 ...................... <#initGetGameServerResult, foGameServer>
  [ 32] extcall 177 ............................. sendAllSprites(#initGetGameServerResult, foGameServer)
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 71 .............................. return 
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 158 ...................... <me.foStudioManager>
  [ 42] getparam 1 .............................. <sStudioID>
  [ 44] pusharglistnoret 2 ...................... <me.foStudioManager, sStudioID>
  [ 46] objcall 95 .............................. me.foStudioManager.getByStudioID(sStudioID)
  [ 48] ret
end

on getGameServerByStudioID me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 47 ............................. <"getGameServerByStudioID() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getGameServerByStudioID() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getGameServerByStudioID() " & sStudioID>
  [  9] objcall 20 .............................. me.debug("getGameServerByStudioID() " & sStudioID)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 38] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 161 ...................... <me.fo_level0>
  [ 20] pusharglist 1 ........................... <me.fo_level0>
  [ 22] objcall 176 ............................. <me.fo_level0.getTestGameServerObject()>
  [ 24] setlocal 0 .............................. foGameServer = me.fo_level0.getTestGameServerObject()
  [ 26] pushsymb 178 ............................ <#initGetGameServerResult>
  [ 28] getlocal 0 .............................. <foGameServer>
  [ 30] pusharglistnoret 2 ...................... <#initGetGameServerResult, foGameServer>
  [ 32] extcall 177 ............................. sendAllSprites(#initGetGameServerResult, foGameServer)
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 71 .............................. return 
  [ 38] pushcons 45 ............................. <EMPTY>
  [ 40] setlocal 1 .............................. sDNSAndPort = EMPTY
  [ 42] getglobal 180 ........................... <oSession>
  [ 44] pusharglist 1 ........................... <oSession>
  [ 46] extcall 15 .............................. <voidp(oSession)>
  [ 48] not ..................................... <not voidp(oSession)>
  [ 49] jmpifz [ 93] ............................ if not voidp(oSession) then
  [ 52] getglobal 180 ........................... <oSession>
  [ 54] pusharglist 1 ........................... <oSession>
  [ 56] objcall 181 ............................. <oSession.getConnected()>
  [ 58] jmpifz [ 93] ............................ if oSession.getConnected() then
  [ 61] getglobal 180 ........................... <oSession>
  [ 63] pusharglist 1 ........................... <oSession>
  [ 65] objcall 182 ............................. <oSession.getServer()>
  [ 67] pushcons 48 ............................. <":">
  [ 69] joinstr ................................. <oSession.getServer() & ":">
  [ 70] getglobal 180 ........................... <oSession>
  [ 72] pusharglist 1 ........................... <oSession>
  [ 74] objcall 183 ............................. <oSession.getPort()>
  [ 76] joinstr ................................. <oSession.getServer() & ":" & oSession.getPort()>
  [ 77] setlocal 1 .............................. sDNSAndPort = oSession.getServer() & ":" & oSession.getPort()
  [ 79] getlocal 1 .............................. <sDNSAndPort>
  [ 81] getobjprop 77 ........................... <sDNSAndPort.length>
  [ 83] pushint8 1 .............................. <1>
  [ 85] eq ...................................... <sDNSAndPort.length = 1>
  [ 86] jmpifz [ 93] ............................ if sDNSAndPort.length = 1 then
  [ 89] pushcons 45 ............................. <EMPTY>
  [ 91] setlocal 1 .............................. sDNSAndPort = EMPTY
  [ 93] getparam 0 .............................. <me>
  [ 95] getchainedprop 158 ...................... <me.foStudioManager>
  [ 97] getparam 1 .............................. <sStudioID>
  [ 99] getlocal 1 .............................. <sDNSAndPort>
  [101] pusharglistnoret 3 ...................... <me.foStudioManager, sStudioID, sDNSAndPort>
  [103] objcall 96 .............................. me.foStudioManager.getGameServerByStudioID(sStudioID, sDNSAndPort)
  [105] getmovieprop 184 ........................ <the debugPlaybackEnabled>
  [107] jmpifz [142] ............................ if the debugPlaybackEnabled then
  [110] pushcons 49 ............................. <"sStudioID:">
  [112] getparam 1 .............................. <sStudioID>
  [114] joinpadstr .............................. <"sStudioID:" && sStudioID>
  [115] getparam 1 .............................. <sStudioID>
  [117] pusharglist 1 ........................... <sStudioID>
  [119] extcall 185 ............................. <ilk(sStudioID)>
  [121] joinpadstr .............................. <"sStudioID:" && sStudioID && ilk(sStudioID)>
  [122] pushcons 50 ............................. <RETURN>
  [124] joinstr ................................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN>
  [125] pushcons 51 ............................. <"sDNSAndPort:">
  [127] joinstr ................................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:">
  [128] getlocal 1 .............................. <sDNSAndPort>
  [130] joinpadstr .............................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort>
  [131] getlocal 1 .............................. <sDNSAndPort>
  [133] pusharglist 1 ........................... <sDNSAndPort>
  [135] extcall 185 ............................. <ilk(sDNSAndPort)>
  [137] joinpadstr .............................. <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort && ilk(sDNSAndPort)>
  [138] pusharglistnoret 1 ...................... <"sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort && ilk(sDNSAndPort)>
  [140] extcall 33 .............................. put "sStudioID:" && sStudioID && ilk(sStudioID) & RETURN & "sDNSAndPort:" && sDNSAndPort && ilk(sDNSAndPort)
  [142] ret
end

on getByStudioName me, sSearchText
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 145 .......................... <me.SEARCH>
  [  6] pusharglistnoret 2 ...................... <me, me.SEARCH>
  [  8] objcall 85 .............................. me.setStudioMode(me.SEARCH)
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 52 ............................. <"getByStudioName() STUDIO_MODE: ">
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 146 .......................... <me.STUDIO_MODE>
  [ 18] joinstr ................................. <"getByStudioName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 19] pusharglistnoret 2 ...................... <me, "getByStudioName() STUDIO_MODE: " & me.STUDIO_MODE>
  [ 21] objcall 20 .............................. me.debug("getByStudioName() STUDIO_MODE: " & me.STUDIO_MODE)
  [ 23] getglobal 167 ........................... <gbTestMode>
  [ 25] jmpifz [ 75] ............................ if gbTestMode then
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 132 ............................. <me.getTestStudios()>
  [ 34] setlocal 0 .............................. aStudioData = me.getTestStudios()
  [ 36] getparam 0 .............................. <me>
  [ 38] getlocal 0 .............................. <aStudioData>
  [ 40] setobjprop 135 .......................... me.aPrivateStudioData = aStudioData
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 53 ............................. <"getByStudioName_Result() aStudioData: ">
  [ 46] getlocal 0 .............................. <aStudioData>
  [ 48] joinstr ................................. <"getByStudioName_Result() aStudioData: " & aStudioData>
  [ 49] pusharglistnoret 2 ...................... <me, "getByStudioName_Result() aStudioData: " & aStudioData>
  [ 51] objcall 20 .............................. me.debug("getByStudioName_Result() aStudioData: " & aStudioData)
  [ 53] getglobal 153 ........................... <ElementMgr>
  [ 55] pusharglist 1 ........................... <ElementMgr>
  [ 57] extcall 15 .............................. <voidp(ElementMgr)>
  [ 59] not ..................................... <not voidp(ElementMgr)>
  [ 60] jmpifz [ 71] ............................ if not voidp(ElementMgr) then
  [ 63] getglobal 153 ........................... <ElementMgr>
  [ 65] getlocal 0 .............................. <aStudioData>
  [ 67] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 69] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 71] pusharglistnoret 0 ...................... <>
  [ 73] extcall 71 .............................. return 
  [ 75] getparam 1 .............................. <sSearchText>
  [ 77] pusharglist 1 ........................... <sSearchText>
  [ 79] extcall 15 .............................. <voidp(sSearchText)>
  [ 81] jmpifz [ 88] ............................ if voidp(sSearchText) then
  [ 84] pushcons 45 ............................. <EMPTY>
  [ 86] setparam 1 .............................. sSearchText = EMPTY
  [ 88] getparam 0 .............................. <me>
  [ 90] pushzero ................................ <0>
  [ 91] setobjprop 174 .......................... me.iLastPrivateStudioUpdate = 0
  [ 93] getparam 0 .............................. <me>
  [ 95] getchainedprop 158 ...................... <me.foStudioManager>
  [ 97] getparam 1 .............................. <sSearchText>
  [ 99] pusharglistnoret 2 ...................... <me.foStudioManager, sSearchText>
  [101] objcall 97 .............................. me.foStudioManager.getByStudioName(sSearchText)
  [103] ret
end

on getOccupantsByStudioId me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 54 ............................. <"getOccupantsByStudioId() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getOccupantsByStudioId() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId() " & sStudioID>
  [  9] objcall 20 .............................. me.debug("getOccupantsByStudioId() " & sStudioID)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 66] ............................ if gbTestMode then
  [ 16] pushcons 55 ............................. <"Alan">
  [ 18] pushcons 56 ............................. <"Jarod">
  [ 20] pushcons 57 ............................. <"Jeff">
  [ 22] pushcons 58 ............................. <"Paul">
  [ 24] pushcons 59 ............................. <"George">
  [ 26] pushcons 60 ............................. <"Nonoche">
  [ 28] pusharglist 6 ........................... <["Alan", "Jarod", "Jeff", "Paul", "George", "Nonoche"]>
  [ 30] pushlist ................................ <["Alan", "Jarod", "Jeff", "Paul", "George", "Nonoche"]>
  [ 31] setlocal 0 .............................. aPeople = ["Alan", "Jarod", "Jeff", "Paul", "George", "Nonoche"]
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 61 ............................. <"getOccupantsByStudioId_Result() ">
  [ 37] getlocal 0 .............................. <aPeople>
  [ 39] joinpadstr .............................. <"getOccupantsByStudioId_Result() " && aPeople>
  [ 40] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result() " && aPeople>
  [ 42] objcall 20 .............................. me.debug("getOccupantsByStudioId_Result() " && aPeople)
  [ 44] getglobal 153 ........................... <ElementMgr>
  [ 46] pusharglist 1 ........................... <ElementMgr>
  [ 48] extcall 15 .............................. <voidp(ElementMgr)>
  [ 50] not ..................................... <not voidp(ElementMgr)>
  [ 51] jmpifz [ 62] ............................ if not voidp(ElementMgr) then
  [ 54] getglobal 153 ........................... <ElementMgr>
  [ 56] getlocal 0 .............................. <aPeople>
  [ 58] pusharglistnoret 2 ...................... <ElementMgr, aPeople>
  [ 60] objcall 188 ............................. ElementMgr.displayStudioPeople(aPeople)
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 71 .............................. return 
  [ 66] getparam 1 .............................. <sStudioID>
  [ 68] pusharglist 1 ........................... <sStudioID>
  [ 70] extcall 15 .............................. <voidp(sStudioID)>
  [ 72] jmpifz [ 79] ............................ if voidp(sStudioID) then
  [ 75] pushcons 45 ............................. <EMPTY>
  [ 77] setparam 1 .............................. sStudioID = EMPTY
  [ 79] getparam 0 .............................. <me>
  [ 81] getchainedprop 158 ...................... <me.foStudioManager>
  [ 83] getparam 1 .............................. <sStudioID>
  [ 85] pusharglistnoret 2 ...................... <me.foStudioManager, sStudioID>
  [ 87] objcall 98 .............................. me.foStudioManager.getOccupantsByStudioId(sStudioID)
  [ 89] ret
end

on getPublicStudioDetail me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 62 ............................. <"getPublicStudioDetail() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getPublicStudioDetail() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getPublicStudioDetail() " & sStudioID>
  [  9] objcall 20 .............................. me.debug("getPublicStudioDetail() " & sStudioID)
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 190 ............................. <VOID>
  [ 15] setlocal 0 .............................. aDetail = VOID
  [ 17] getglobal 31 ............................ <oPublicstudioData>
  [ 19] pushsymb 32 ............................. <#aStudioData>
  [ 21] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 23] objcall 42 .............................. <oPublicstudioData.aStudioData.count>
  [ 25] setlocal 1 .............................. iLength = oPublicstudioData.aStudioData.count
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 2
  [ 31] getlocal 2
  [ 33] getlocal 1 .............................. <iLength>
  [ 35] lteq
  [ 36] jmpifz [ 81] ............................ repeat with i = 1 to iLength
  [ 39] getglobal 31 ............................ <oPublicstudioData>
  [ 41] pushsymb 32 ............................. <#aStudioData>
  [ 43] getlocal 2 .............................. <i>
  [ 45] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 47] objcall 75 .............................. <oPublicstudioData.aStudioData[i]>
  [ 49] setlocal 3 .............................. aStudio = oPublicstudioData.aStudioData[i]
  [ 51] getlocal 3 .............................. <aStudio>
  [ 53] pushsymb 45 ............................. <#studioId>
  [ 55] pusharglist 2 ........................... <aStudio, #studioId>
  [ 57] objcall 43 .............................. <aStudio[#studioId]>
  [ 59] getparam 1 .............................. <sStudioID>
  [ 61] eq ...................................... <aStudio[#studioId] = sStudioID>
  [ 62] jmpifz [ 72] ............................ if aStudio[#studioId] = sStudioID then
  [ 65] getlocal 3 .............................. <aStudio>
  [ 67] setlocal 0 .............................. aDetail = aStudio
  [ 69] jmp [ 81] ............................... exit repeat
  [ 72] pushint8 1
  [ 74] getlocal 2
  [ 76] add
  [ 77] setlocal 2
  [ 79] endrepeat [ 31]
  [ 81] getparam 0 .............................. <me>
  [ 83] pushcons 62 ............................. <"getPublicStudioDetail() ">
  [ 85] getlocal 0 .............................. <aDetail>
  [ 87] joinstr ................................. <"getPublicStudioDetail() " & aDetail>
  [ 88] pusharglistnoret 2 ...................... <me, "getPublicStudioDetail() " & aDetail>
  [ 90] objcall 20 .............................. me.debug("getPublicStudioDetail() " & aDetail)
  [ 92] getglobal 153 ........................... <ElementMgr>
  [ 94] pusharglist 1 ........................... <ElementMgr>
  [ 96] extcall 15 .............................. <voidp(ElementMgr)>
  [ 98] not ..................................... <not voidp(ElementMgr)>
  [ 99] jmpifz [110] ............................ if not voidp(ElementMgr) then
  [102] getglobal 153 ........................... <ElementMgr>
  [104] getlocal 0 .............................. <aDetail>
  [106] pusharglistnoret 2 ...................... <ElementMgr, aDetail>
  [108] objcall 191 ............................. ElementMgr.displayStudioDetail(aDetail)
  [110] ret
end

on getPrivateStudioDetail me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 63 ............................. <"getPrivateStudioDetail() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"getPrivateStudioDetail() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "getPrivateStudioDetail() " & sStudioID>
  [  9] objcall 20 .............................. me.debug("getPrivateStudioDetail() " & sStudioID)
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 190 ............................. <VOID>
  [ 15] setlocal 0 .............................. aDetail = VOID
  [ 17] getprop 135 ............................. <aPrivateStudioData>
  [ 19] getobjprop 42 ........................... <aPrivateStudioData.count>
  [ 21] setlocal 1 .............................. iLength = aPrivateStudioData.count
  [ 23] pushint8 1 .............................. <1>
  [ 25] setlocal 2
  [ 27] getlocal 2
  [ 29] getlocal 1 .............................. <iLength>
  [ 31] lteq
  [ 32] jmpifz [ 75] ............................ repeat with i = 1 to iLength
  [ 35] getprop 135 ............................. <aPrivateStudioData>
  [ 37] getlocal 2 .............................. <i>
  [ 39] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 41] objcall 43 .............................. <aPrivateStudioData[i]>
  [ 43] setlocal 3 .............................. aStudio = aPrivateStudioData[i]
  [ 45] getlocal 3 .............................. <aStudio>
  [ 47] pushsymb 45 ............................. <#studioId>
  [ 49] pusharglist 2 ........................... <aStudio, #studioId>
  [ 51] objcall 43 .............................. <aStudio[#studioId]>
  [ 53] getparam 1 .............................. <sStudioID>
  [ 55] eq ...................................... <aStudio[#studioId] = sStudioID>
  [ 56] jmpifz [ 66] ............................ if aStudio[#studioId] = sStudioID then
  [ 59] getlocal 3 .............................. <aStudio>
  [ 61] setlocal 0 .............................. aDetail = aStudio
  [ 63] jmp [ 75] ............................... exit repeat
  [ 66] pushint8 1
  [ 68] getlocal 2
  [ 70] add
  [ 71] setlocal 2
  [ 73] endrepeat [ 27]
  [ 75] getparam 0 .............................. <me>
  [ 77] pushcons 63 ............................. <"getPrivateStudioDetail() ">
  [ 79] getlocal 0 .............................. <aDetail>
  [ 81] joinstr ................................. <"getPrivateStudioDetail() " & aDetail>
  [ 82] pusharglistnoret 2 ...................... <me, "getPrivateStudioDetail() " & aDetail>
  [ 84] objcall 20 .............................. me.debug("getPrivateStudioDetail() " & aDetail)
  [ 86] getglobal 153 ........................... <ElementMgr>
  [ 88] pusharglist 1 ........................... <ElementMgr>
  [ 90] extcall 15 .............................. <voidp(ElementMgr)>
  [ 92] not ..................................... <not voidp(ElementMgr)>
  [ 93] jmpifz [104] ............................ if not voidp(ElementMgr) then
  [ 96] getglobal 153 ........................... <ElementMgr>
  [ 98] getlocal 0 .............................. <aDetail>
  [100] pusharglistnoret 2 ...................... <ElementMgr, aDetail>
  [102] objcall 191 ............................. ElementMgr.displayStudioDetail(aDetail)
  [104] ret
end

on createStudio me, sScreenName, sStudioName, sDescription, iLayout, iLocation
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 64 ............................. <"createStudio() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"createStudio() " & sScreenName>
  [  7] getparam 2 .............................. <sStudioName>
  [  9] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName>
  [ 10] getparam 3 .............................. <sDescription>
  [ 12] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName && sDescription>
  [ 13] getparam 4 .............................. <iLayout>
  [ 15] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName && sDescription && iLayout>
  [ 16] getparam 5 .............................. <iLocation>
  [ 18] joinpadstr .............................. <"createStudio() " & sScreenName && sStudioName && sDescription && iLayout && iLocation>
  [ 19] pusharglistnoret 2 ...................... <me, "createStudio() " & sScreenName && sStudioName && sDescription && iLayout && iLocation>
  [ 21] objcall 20 .............................. me.debug("createStudio() " & sScreenName && sStudioName && sDescription && iLayout && iLocation)
  [ 23] getparam 4 .............................. <iLayout>
  [ 25] pusharglist 1 ........................... <iLayout>
  [ 27] extcall 15 .............................. <voidp(iLayout)>
  [ 29] jmpifz [ 36] ............................ if voidp(iLayout) then
  [ 32] pushint8 1 .............................. <1>
  [ 34] setparam 4 .............................. iLayout = 1
  [ 36] getparam 5 .............................. <iLocation>
  [ 38] pusharglist 1 ........................... <iLocation>
  [ 40] extcall 15 .............................. <voidp(iLocation)>
  [ 42] jmpifz [ 49] ............................ if voidp(iLocation) then
  [ 45] pushint8 1 .............................. <1>
  [ 47] setparam 5 .............................. iLocation = 1
  [ 49] getglobal 167 ........................... <gbTestMode>
  [ 51] jmpifz [105] ............................ if gbTestMode then
  [ 54] pushzero ................................ <0>
  [ 55] setlocal 0 .............................. iError = 0
  [ 57] pushcons 65 ............................. <"Test">
  [ 59] setparam 2 .............................. sStudioName = "Test"
  [ 61] pushcons 66 ............................. <"Test1">
  [ 63] setlocal 1 .............................. sStudioID = "Test1"
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 67 ............................. <"createStudio_Result()">
  [ 69] getparam 2 .............................. <sStudioName>
  [ 71] joinpadstr .............................. <"createStudio_Result()" && sStudioName>
  [ 72] getlocal 1 .............................. <sStudioID>
  [ 74] joinpadstr .............................. <"createStudio_Result()" && sStudioName && sStudioID>
  [ 75] pusharglistnoret 2 ...................... <me, "createStudio_Result()" && sStudioName && sStudioID>
  [ 77] objcall 20 .............................. me.debug("createStudio_Result()" && sStudioName && sStudioID)
  [ 79] getglobal 153 ........................... <ElementMgr>
  [ 81] pusharglist 1 ........................... <ElementMgr>
  [ 83] extcall 15 .............................. <voidp(ElementMgr)>
  [ 85] not ..................................... <not voidp(ElementMgr)>
  [ 86] jmpifz [101] ............................ if not voidp(ElementMgr) then
  [ 89] getglobal 153 ........................... <ElementMgr>
  [ 91] getlocal 0 .............................. <iError>
  [ 93] getparam 2 .............................. <sStudioName>
  [ 95] getlocal 1 .............................. <sStudioID>
  [ 97] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sStudioID>
  [ 99] objcall 113 ............................. ElementMgr.createStudio_Result(iError, sStudioName, sStudioID)
  [101] pusharglistnoret 0 ...................... <>
  [103] extcall 71 .............................. return 
  [105] getparam 0 .............................. <me>
  [107] getchainedprop 158 ...................... <me.foStudioManager>
  [109] getparam 1 .............................. <sScreenName>
  [111] getglobal 193 ........................... <oDenizenManager>
  [113] pusharglist 1 ........................... <oDenizenManager>
  [115] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [117] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [119] objcall 195 ............................. <oDenizenManager.getDenizen().getSecret()>
  [121] getparam 2 .............................. <sStudioName>
  [123] getparam 3 .............................. <sDescription>
  [125] getparam 4 .............................. <iLayout>
  [127] getparam 5 .............................. <iLocation>
  [129] pusharglistnoret 7 ...................... <me.foStudioManager, sScreenName, oDenizenManager.getDenizen().getSecret(), sStudioName, sDescription, iLayout, iLocation>
  [131] objcall 101 ............................. me.foStudioManager.createStudio(sScreenName, oDenizenManager.getDenizen().getSecret(), sStudioName, sDescription, iLayout, iLocation)
  [133] ret
end

on modifyStudio me, sStudioID, sStudioName, sDescription
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 68 ............................. <"modifyStudio() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"modifyStudio() " & sStudioID>
  [  7] getparam 2 .............................. <sStudioName>
  [  9] joinpadstr .............................. <"modifyStudio() " & sStudioID && sStudioName>
  [ 10] getparam 3 .............................. <sDescription>
  [ 12] joinpadstr .............................. <"modifyStudio() " & sStudioID && sStudioName && sDescription>
  [ 13] pusharglistnoret 2 ...................... <me, "modifyStudio() " & sStudioID && sStudioName && sDescription>
  [ 15] objcall 20 .............................. me.debug("modifyStudio() " & sStudioID && sStudioName && sDescription)
  [ 17] getglobal 167 ........................... <gbTestMode>
  [ 19] jmpifz [ 73] ............................ if gbTestMode then
  [ 22] pushzero ................................ <0>
  [ 23] setlocal 0 .............................. iError = 0
  [ 25] pushcons 69 ............................. <"Test Name">
  [ 27] setparam 2 .............................. sStudioName = "Test Name"
  [ 29] pushcons 70 ............................. <"Test Description">
  [ 31] setparam 3 .............................. sDescription = "Test Description"
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 71 ............................. <"modifyStudio_Result() ">
  [ 37] getparam 2 .............................. <sStudioName>
  [ 39] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName>
  [ 40] getparam 3 .............................. <sDescription>
  [ 42] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName && sDescription>
  [ 43] pusharglistnoret 2 ...................... <me, "modifyStudio_Result() " && sStudioName && sDescription>
  [ 45] objcall 20 .............................. me.debug("modifyStudio_Result() " && sStudioName && sDescription)
  [ 47] getglobal 153 ........................... <ElementMgr>
  [ 49] pusharglist 1 ........................... <ElementMgr>
  [ 51] extcall 15 .............................. <voidp(ElementMgr)>
  [ 53] not ..................................... <not voidp(ElementMgr)>
  [ 54] jmpifz [ 69] ............................ if not voidp(ElementMgr) then
  [ 57] getglobal 153 ........................... <ElementMgr>
  [ 59] getlocal 0 .............................. <iError>
  [ 61] getparam 2 .............................. <sStudioName>
  [ 63] getparam 3 .............................. <sDescription>
  [ 65] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sDescription>
  [ 67] objcall 114 ............................. ElementMgr.modifyStudio_Result(iError, sStudioName, sDescription)
  [ 69] pusharglistnoret 0 ...................... <>
  [ 71] extcall 71 .............................. return 
  [ 73] getparam 0 .............................. <me>
  [ 75] getchainedprop 158 ...................... <me.foStudioManager>
  [ 77] getglobal 193 ........................... <oDenizenManager>
  [ 79] pusharglist 1 ........................... <oDenizenManager>
  [ 81] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [ 83] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 85] objcall 198 ............................. <oDenizenManager.getDenizen().getScreenName()>
  [ 87] getglobal 193 ........................... <oDenizenManager>
  [ 89] pusharglist 1 ........................... <oDenizenManager>
  [ 91] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [ 93] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 95] objcall 195 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 97] getparam 1 .............................. <sStudioID>
  [ 99] getparam 2 .............................. <sStudioName>
  [101] getparam 3 .............................. <sDescription>
  [103] pusharglistnoret 6 ...................... <me.foStudioManager, oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID, sStudioName, sDescription>
  [105] objcall 102 ............................. me.foStudioManager.modifyStudio(oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID, sStudioName, sDescription)
  [107] ret
end

on deleteStudio me, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 72 ............................. <"deleteStudio() ">
  [  4] getparam 1 .............................. <sStudioID>
  [  6] joinstr ................................. <"deleteStudio() " & sStudioID>
  [  7] pusharglistnoret 2 ...................... <me, "deleteStudio() " & sStudioID>
  [  9] objcall 20 .............................. me.debug("deleteStudio() " & sStudioID)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 45] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 73 ............................. <"deleteStudio_Result() OK">
  [ 20] pusharglistnoret 2 ...................... <me, "deleteStudio_Result() OK">
  [ 22] objcall 20 .............................. me.debug("deleteStudio_Result() OK")
  [ 24] getglobal 153 ........................... <ElementMgr>
  [ 26] pusharglist 1 ........................... <ElementMgr>
  [ 28] extcall 15 .............................. <voidp(ElementMgr)>
  [ 30] not ..................................... <not voidp(ElementMgr)>
  [ 31] jmpifz [ 41] ............................ if not voidp(ElementMgr) then
  [ 34] getglobal 153 ........................... <ElementMgr>
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 39] objcall 115 ............................. ElementMgr.deleteStudio_Result(0)
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 71 .............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 158 ...................... <me.foStudioManager>
  [ 49] getglobal 193 ........................... <oDenizenManager>
  [ 51] pusharglist 1 ........................... <oDenizenManager>
  [ 53] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [ 55] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 57] objcall 198 ............................. <oDenizenManager.getDenizen().getScreenName()>
  [ 59] getglobal 193 ........................... <oDenizenManager>
  [ 61] pusharglist 1 ........................... <oDenizenManager>
  [ 63] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [ 65] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 67] objcall 195 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 69] getparam 1 .............................. <sStudioID>
  [ 71] pusharglistnoret 4 ...................... <me.foStudioManager, oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID>
  [ 73] objcall 103 ............................. me.foStudioManager.deleteStudio(oDenizenManager.getDenizen().getScreenName(), oDenizenManager.getDenizen().getSecret(), sStudioID)
  [ 75] ret
end

on getMixerByScreenName me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 74 ............................. <"getMixerByScreenName() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"getMixerByScreenName() " && sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "getMixerByScreenName() " && sScreenName>
  [  9] objcall 20 .............................. me.debug("getMixerByScreenName() " && sScreenName)
  [ 11] getglobal 167 ........................... <gbTestMode>
  [ 13] jmpifz [ 64] ............................ if gbTestMode then
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <sScreenName>
  [ 20] pusharglist 2 ........................... <me, sScreenName>
  [ 22] objcall 123 ............................. <me.getTestRemoteMixer(sScreenName)>
  [ 24] setlocal 0 .............................. aRemoteMixer = me.getTestRemoteMixer(sScreenName)
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 74 ............................. <"getMixerByScreenName() ">
  [ 30] getlocal 0 .............................. <aRemoteMixer>
  [ 32] joinpadstr .............................. <"getMixerByScreenName() " && aRemoteMixer>
  [ 33] pusharglistnoret 2 ...................... <me, "getMixerByScreenName() " && aRemoteMixer>
  [ 35] objcall 20 .............................. me.debug("getMixerByScreenName() " && aRemoteMixer)
  [ 37] pushzero ................................ <0>
  [ 38] setlocal 1 .............................. iError = 0
  [ 40] getglobal 153 ........................... <ElementMgr>
  [ 42] pusharglist 1 ........................... <ElementMgr>
  [ 44] extcall 15 .............................. <voidp(ElementMgr)>
  [ 46] not ..................................... <not voidp(ElementMgr)>
  [ 47] jmpifz [ 60] ............................ if not voidp(ElementMgr) then
  [ 50] getglobal 153 ........................... <ElementMgr>
  [ 52] getlocal 1 .............................. <iError>
  [ 54] getlocal 0 .............................. <aRemoteMixer>
  [ 56] pusharglistnoret 3 ...................... <ElementMgr, iError, aRemoteMixer>
  [ 58] objcall 118 ............................. ElementMgr.getMixerByScreenName_Result(iError, aRemoteMixer)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] getparam 0 .............................. <me>
  [ 66] getchainedprop 158 ...................... <me.foStudioManager>
  [ 68] getparam 1 .............................. <sScreenName>
  [ 70] getglobal 193 ........................... <oDenizenManager>
  [ 72] pusharglist 1 ........................... <oDenizenManager>
  [ 74] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [ 76] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 78] objcall 195 ............................. <oDenizenManager.getDenizen().getSecret()>
  [ 80] pusharglistnoret 3 ...................... <me.foStudioManager, sScreenName, oDenizenManager.getDenizen().getSecret()>
  [ 82] objcall 104 ............................. me.foStudioManager.getMixerByScreenName(sScreenName, oDenizenManager.getDenizen().getSecret())
  [ 84] ret
end

on burnMixToCD me, sScreenName, iMixNumber
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 75 ............................. <"burnMixToCD() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinpadstr .............................. <"burnMixToCD() " && sScreenName>
  [  7] getparam 2 .............................. <iMixNumber>
  [  9] joinpadstr .............................. <"burnMixToCD() " && sScreenName && iMixNumber>
  [ 10] pusharglistnoret 2 ...................... <me, "burnMixToCD() " && sScreenName && iMixNumber>
  [ 12] objcall 20 .............................. me.debug("burnMixToCD() " && sScreenName && iMixNumber)
  [ 14] getparam 1 .............................. <sScreenName>
  [ 16] pusharglist 1 ........................... <sScreenName>
  [ 18] extcall 15 .............................. <voidp(sScreenName)>
  [ 20] jmpifz [ 31] ............................ if voidp(sScreenName) then
  [ 23] getglobal 193 ........................... <oDenizenManager>
  [ 25] pusharglist 1 ........................... <oDenizenManager>
  [ 27] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 29] setparam 1 .............................. sScreenName = oDenizenManager.getScreenName()
  [ 31] getparam 2 .............................. <iMixNumber>
  [ 33] pusharglist 1 ........................... <iMixNumber>
  [ 35] extcall 15 .............................. <voidp(iMixNumber)>
  [ 37] jmpifz [ 44] ............................ if voidp(iMixNumber) then
  [ 40] pushint8 1 .............................. <1>
  [ 42] setparam 2 .............................. iMixNumber = 1
  [ 44] getglobal 167 ........................... <gbTestMode>
  [ 46] jmpifz [ 85] ............................ if gbTestMode then
  [ 49] pushzero ................................ <0>
  [ 50] setlocal 0 .............................. iError = 0
  [ 52] getparam 0 .............................. <me>
  [ 54] pushcons 76 ............................. <"burnMixToCD_Result() ">
  [ 56] getlocal 0 .............................. <iError>
  [ 58] joinstr ................................. <"burnMixToCD_Result() " & iError>
  [ 59] pusharglistnoret 2 ...................... <me, "burnMixToCD_Result() " & iError>
  [ 61] objcall 20 .............................. me.debug("burnMixToCD_Result() " & iError)
  [ 63] getglobal 153 ........................... <ElementMgr>
  [ 65] pusharglist 1 ........................... <ElementMgr>
  [ 67] extcall 15 .............................. <voidp(ElementMgr)>
  [ 69] not ..................................... <not voidp(ElementMgr)>
  [ 70] jmpifz [ 81] ............................ if not voidp(ElementMgr) then
  [ 73] getglobal 153 ........................... <ElementMgr>
  [ 75] getlocal 0 .............................. <iError>
  [ 77] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 79] objcall 119 ............................. ElementMgr.burnMixToCD_Result(iError)
  [ 81] pusharglistnoret 0 ...................... <>
  [ 83] extcall 71 .............................. return 
  [ 85] getparam 0 .............................. <me>
  [ 87] getchainedprop 158 ...................... <me.foStudioManager>
  [ 89] getparam 1 .............................. <sScreenName>
  [ 91] getglobal 193 ........................... <oDenizenManager>
  [ 93] pusharglist 1 ........................... <oDenizenManager>
  [ 95] objcall 194 ............................. <oDenizenManager.getDenizen()>
  [ 97] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [ 99] objcall 195 ............................. <oDenizenManager.getDenizen().getSecret()>
  [101] getparam 2 .............................. <iMixNumber>
  [103] pusharglistnoret 4 ...................... <me.foStudioManager, sScreenName, oDenizenManager.getDenizen().getSecret(), iMixNumber>
  [105] objcall 105 ............................. me.foStudioManager.burnMixToCD(sScreenName, oDenizenManager.getDenizen().getSecret(), iMixNumber)
  [107] ret
end

on getAllPublicStudios_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 77 ............................. <"getAllPublicStudios_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getAllPublicStudios_Result()">
  [  6] objcall 20 .............................. me.debug("getAllPublicStudios_Result()")
  [  8] getparam 0 .............................. <me>
  [ 10] getmovieprop 170 ........................ <the milliSeconds>
  [ 12] setobjprop 169 .......................... me.iLastPublicStudioUpdate = the milliSeconds
  [ 14] getparam 2 .............................. <oResult>
  [ 16] pusharglist 1 ........................... <oResult>
  [ 18] objcall 201 ............................. <oResult.getTypeOf()>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 24] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 25] jmpifz [ 51] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 28] getparam 2 .............................. <oResult>
  [ 30] pusharglist 1 ........................... <oResult>
  [ 32] objcall 202 ............................. <oResult.getOrdinal()>
  [ 34] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 36] getparam 0 .............................. <me>
  [ 38] pushcons 78 ............................. <"getAllPublicStudios_Result() ERROR ">
  [ 40] getlocal 0 .............................. <iError>
  [ 42] joinstr ................................. <"getAllPublicStudios_Result() ERROR " & iError>
  [ 43] pusharglistnoret 2 ...................... <me, "getAllPublicStudios_Result() ERROR " & iError>
  [ 45] objcall 20 .............................. me.debug("getAllPublicStudios_Result() ERROR " & iError)
  [ 47] pusharglistnoret 0 ...................... <>
  [ 49] extcall 71 .............................. return 
  [ 51] getparam 2 .............................. <oResult>
  [ 53] getobjprop 77 ........................... <oResult.length>
  [ 55] setlocal 1 .............................. iLength = oResult.length
  [ 57] pushzero ................................ <0>
  [ 58] setlocal 2
  [ 60] getlocal 2
  [ 62] getlocal 1 .............................. <iLength>
  [ 64] pushint8 1 .............................. <1>
  [ 66] sub ..................................... <iLength - 1>
  [ 67] lteq
  [ 68] jmpifz [150] ............................ repeat with i = 0 to iLength - 1
  [ 71] getparam 2 .............................. <oResult>
  [ 73] getlocal 2 .............................. <i>
  [ 75] pusharglist 2 ........................... <oResult, i>
  [ 77] objcall 43 .............................. <oResult[i]>
  [ 79] setlocal 3 .............................. oStudio = oResult[i]
  [ 81] getlocal 3 .............................. <oStudio>
  [ 83] pusharglist 1 ........................... <oStudio>
  [ 85] objcall 78 .............................. <oStudio.getStudioID()>
  [ 87] setlocal 4 .............................. sStudioID = oStudio.getStudioID()
  [ 89] getlocal 3 .............................. <oStudio>
  [ 91] pusharglist 1 ........................... <oStudio>
  [ 93] objcall 203 ............................. <oStudio.getCurrentOccupancy()>
  [ 95] pusharglist 1 ........................... <oStudio.getCurrentOccupancy()>
  [ 97] extcall 48 .............................. <integer(oStudio.getCurrentOccupancy())>
  [ 99] setlocal 5 .............................. iUserCount = integer(oStudio.getCurrentOccupancy())
  [101] getlocal 3 .............................. <oStudio>
  [103] pusharglist 1 ........................... <oStudio>
  [105] objcall 204 ............................. <oStudio.getMaxOccupancy()>
  [107] pusharglist 1 ........................... <oStudio.getMaxOccupancy()>
  [109] extcall 48 .............................. <integer(oStudio.getMaxOccupancy())>
  [111] setlocal 6 .............................. iCapacity = integer(oStudio.getMaxOccupancy())
  [113] getlocal 3 .............................. <oStudio>
  [115] pusharglist 1 ........................... <oStudio>
  [117] objcall 205 ............................. <oStudio.getLocation()>
  [119] pusharglist 1 ........................... <oStudio.getLocation()>
  [121] extcall 48 .............................. <integer(oStudio.getLocation())>
  [123] setlocal 7 .............................. iLocation = integer(oStudio.getLocation())
  [125] getglobal 31 ............................ <oPublicstudioData>
  [127] getlocal 4 .............................. <sStudioID>
  [129] getlocal 5 .............................. <iUserCount>
  [131] getlocal 6 .............................. <iCapacity>
  [133] getlocal 7 .............................. <iLocation>
  [135] pushcons 45 ............................. <EMPTY>
  [137] pusharglistnoret 6 ...................... <oPublicstudioData, sStudioID, iUserCount, iCapacity, iLocation, EMPTY>
  [139] objcall 23 .............................. oPublicstudioData.updateStudio(sStudioID, iUserCount, iCapacity, iLocation, EMPTY)
  [141] pushint8 1
  [143] getlocal 2
  [145] add
  [146] setlocal 2
  [148] endrepeat [ 60]
  [150] getparam 0 .............................. <me>
  [152] getglobal 31 ............................ <oPublicstudioData>
  [154] getparam 2 .............................. <oResult>
  [156] pusharglist 2 ........................... <oPublicstudioData, oResult>
  [158] objcall 26 .............................. <oPublicstudioData.syncWithServer(oResult)>
  [160] setobjprop 140 .......................... me.aCachedStudioData = oPublicstudioData.syncWithServer(oResult)
  [162] getglobal 153 ........................... <ElementMgr>
  [164] pusharglist 1 ........................... <ElementMgr>
  [166] extcall 15 .............................. <voidp(ElementMgr)>
  [168] not ..................................... <not voidp(ElementMgr)>
  [169] jmpifz [182] ............................ if not voidp(ElementMgr) then
  [172] getglobal 153 ........................... <ElementMgr>
  [174] getparam 0 .............................. <me>
  [176] getobjprop 140 .......................... <me.aCachedStudioData>
  [178] pusharglistnoret 2 ...................... <ElementMgr, me.aCachedStudioData>
  [180] objcall 168 ............................. ElementMgr.displayPublicStudios(me.aCachedStudioData)
  [182] ret
end

on getAllPrivateStudios_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 79 ............................. <"getAllPrivateStudios_Result() length: ">
  [  4] getparam 2 .............................. <oResult>
  [  6] getobjprop 77 ........................... <oResult.length>
  [  8] joinstr ................................. <"getAllPrivateStudios_Result() length: " & oResult.length>
  [  9] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() length: " & oResult.length>
  [ 11] objcall 20 .............................. me.debug("getAllPrivateStudios_Result() length: " & oResult.length)
  [ 13] getparam 0 .............................. <me>
  [ 15] getmovieprop 170 ........................ <the milliSeconds>
  [ 17] setobjprop 174 .......................... me.iLastPrivateStudioUpdate = the milliSeconds
  [ 19] getparam 2 .............................. <oResult>
  [ 21] pusharglist 1 ........................... <oResult>
  [ 23] objcall 201 ............................. <oResult.getTypeOf()>
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 29] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 30] jmpifz [ 56] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 33] getparam 2 .............................. <oResult>
  [ 35] pusharglist 1 ........................... <oResult>
  [ 37] objcall 202 ............................. <oResult.getOrdinal()>
  [ 39] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 80 ............................. <"getAllPrivateStudios_Result() ERROR ">
  [ 45] getlocal 0 .............................. <iError>
  [ 47] joinstr ................................. <"getAllPrivateStudios_Result() ERROR " & iError>
  [ 48] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() ERROR " & iError>
  [ 50] objcall 20 .............................. me.debug("getAllPrivateStudios_Result() ERROR " & iError)
  [ 52] pusharglistnoret 0 ...................... <>
  [ 54] extcall 71 .............................. return 
  [ 56] getparam 0 .............................. <me>
  [ 58] getparam 2 .............................. <oResult>
  [ 60] pusharglist 2 ........................... <me, oResult>
  [ 62] objcall 126 ............................. <me.getStudiosFromResult(oResult)>
  [ 64] setlocal 1 .............................. aStudioData = me.getStudiosFromResult(oResult)
  [ 66] getparam 0 .............................. <me>
  [ 68] pushcons 81 ............................. <"getAllPrivateStudios_Result() Result length: ">
  [ 70] getlocal 1 .............................. <aStudioData>
  [ 72] getobjprop 42 ........................... <aStudioData.count>
  [ 74] joinstr ................................. <"getAllPrivateStudios_Result() Result length: " & aStudioData.count>
  [ 75] pusharglistnoret 2 ...................... <me, "getAllPrivateStudios_Result() Result length: " & aStudioData.count>
  [ 77] objcall 20 .............................. me.debug("getAllPrivateStudios_Result() Result length: " & aStudioData.count)
  [ 79] getparam 0 .............................. <me>
  [ 81] getlocal 1 .............................. <aStudioData>
  [ 83] setobjprop 135 .......................... me.aPrivateStudioData = aStudioData
  [ 85] getglobal 153 ........................... <ElementMgr>
  [ 87] pusharglist 1 ........................... <ElementMgr>
  [ 89] extcall 15 .............................. <voidp(ElementMgr)>
  [ 91] not ..................................... <not voidp(ElementMgr)>
  [ 92] jmpifz [103] ............................ if not voidp(ElementMgr) then
  [ 95] getglobal 153 ........................... <ElementMgr>
  [ 97] getlocal 1 .............................. <aStudioData>
  [ 99] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [101] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [103] ret
end

on getByOwnerName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 82 ............................. <"getByOwnerName_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result()">
  [  6] objcall 20 .............................. me.debug("getByOwnerName_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 45] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 83 ............................. <"getByOwnerName_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getByOwnerName_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("getByOwnerName_Result() ERROR " & iError)
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 71 .............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getparam 2 .............................. <oResult>
  [ 49] pusharglist 2 ........................... <me, oResult>
  [ 51] objcall 126 ............................. <me.getStudiosFromResult(oResult)>
  [ 53] setlocal 1 .............................. aStudioData = me.getStudiosFromResult(oResult)
  [ 55] getparam 0 .............................. <me>
  [ 57] pushcons 84 ............................. <"getByOwnerName_Result() ">
  [ 59] getlocal 1 .............................. <aStudioData>
  [ 61] joinstr ................................. <"getByOwnerName_Result() " & aStudioData>
  [ 62] pusharglistnoret 2 ...................... <me, "getByOwnerName_Result() " & aStudioData>
  [ 64] objcall 20 .............................. me.debug("getByOwnerName_Result() " & aStudioData)
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 1 .............................. <aStudioData>
  [ 70] setobjprop 135 .......................... me.aPrivateStudioData = aStudioData
  [ 72] getglobal 153 ........................... <ElementMgr>
  [ 74] pusharglist 1 ........................... <ElementMgr>
  [ 76] extcall 15 .............................. <voidp(ElementMgr)>
  [ 78] not ..................................... <not voidp(ElementMgr)>
  [ 79] jmpifz [ 90] ............................ if not voidp(ElementMgr) then
  [ 82] getglobal 153 ........................... <ElementMgr>
  [ 84] getlocal 1 .............................. <aStudioData>
  [ 86] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 88] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 90] ret
end

on getByStudioId_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 85 ............................. <"getByStudioID_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getByStudioID_Result()">
  [  6] objcall 20 .............................. me.debug("getByStudioID_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 55] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 86 ............................. <"getByStudioID_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getByStudioID_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getByStudioID_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("getByStudioID_Result() ERROR " & iError)
  [ 41] getglobal 153 ........................... <ElementMgr>
  [ 43] getlocal 0 .............................. <iError>
  [ 45] getparam 2 .............................. <oResult>
  [ 47] pusharglistnoret 3 ...................... <ElementMgr, iError, oResult>
  [ 49] objcall 109 ............................. ElementMgr.getByStudioId_Result(iError, oResult)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 71 .............................. return 
  [ 55] getglobal 153 ........................... <ElementMgr>
  [ 57] pushzero ................................ <0>
  [ 58] getparam 2 .............................. <oResult>
  [ 60] pusharglistnoret 3 ...................... <ElementMgr, 0, oResult>
  [ 62] objcall 109 ............................. ElementMgr.getByStudioId_Result(0, oResult)
  [ 64] ret
end

on getGameServerByStudioID_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 87 ............................. <"getGameServerByStudioID_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getGameServerByStudioID_Result()">
  [  6] objcall 20 .............................. me.debug("getGameServerByStudioID_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 59] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 88 ............................. <"getGameServerByStudioID_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getGameServerByStudioID_Result() ERROR " & iError>
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 3 ...................... <me, "getGameServerByStudioID_Result() ERROR " & iError, 1>
  [ 41] objcall 20 .............................. me.debug("getGameServerByStudioID_Result() ERROR " & iError, 1)
  [ 43] getglobal 153 ........................... <ElementMgr>
  [ 45] pushcons 89 ............................. <"ALERT_NO_SERVER_AVAILABLE">
  [ 47] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_NO_SERVER_AVAILABLE">
  [ 49] objcall 206 ............................. ElementMgr.alert("ALERT_NO_SERVER_AVAILABLE")
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 207 ............................. gotoEntry()
  [ 55] pusharglistnoret 0 ...................... <>
  [ 57] extcall 71 .............................. return 
  [ 59] getparam 2 .............................. <oResult>
  [ 61] setlocal 1 .............................. oGameServer = oResult
  [ 63] getparam 0 .............................. <me>
  [ 65] pushcons 90 ............................. <"getGameServerByStudioID_Result() ">
  [ 67] getlocal 1 .............................. <oGameServer>
  [ 69] pusharglist 1 ........................... <oGameServer>
  [ 71] objcall 208 ............................. <oGameServer.toString()>
  [ 73] joinstr ................................. <"getGameServerByStudioID_Result() " & oGameServer.toString()>
  [ 74] pusharglistnoret 2 ...................... <me, "getGameServerByStudioID_Result() " & oGameServer.toString()>
  [ 76] objcall 20 .............................. me.debug("getGameServerByStudioID_Result() " & oGameServer.toString())
  [ 78] pushsymb 178 ............................ <#initGetGameServerResult>
  [ 80] getlocal 1 .............................. <oGameServer>
  [ 82] pusharglistnoret 2 ...................... <#initGetGameServerResult, oGameServer>
  [ 84] extcall 177 ............................. sendAllSprites(#initGetGameServerResult, oGameServer)
  [ 86] ret
end

on getByStudioName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 91 ............................. <"getByStudioName_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getByStudioName_Result()">
  [  6] objcall 20 .............................. me.debug("getByStudioName_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 45] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] setlocal 0 .............................. iError = oResult.getOrdinal()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 92 ............................. <"getByStudioName_Result() ERROR ">
  [ 34] getlocal 0 .............................. <iError>
  [ 36] joinstr ................................. <"getByStudioName_Result() ERROR " & iError>
  [ 37] pusharglistnoret 2 ...................... <me, "getByStudioName_Result() ERROR " & iError>
  [ 39] objcall 20 .............................. me.debug("getByStudioName_Result() ERROR " & iError)
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 71 .............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getparam 2 .............................. <oResult>
  [ 49] pusharglist 2 ........................... <me, oResult>
  [ 51] objcall 126 ............................. <me.getStudiosFromResult(oResult)>
  [ 53] setlocal 1 .............................. aStudioData = me.getStudiosFromResult(oResult)
  [ 55] getparam 0 .............................. <me>
  [ 57] pushcons 93 ............................. <"getByStudioName_Result() ">
  [ 59] getlocal 1 .............................. <aStudioData>
  [ 61] joinstr ................................. <"getByStudioName_Result() " & aStudioData>
  [ 62] pusharglistnoret 2 ...................... <me, "getByStudioName_Result() " & aStudioData>
  [ 64] objcall 20 .............................. me.debug("getByStudioName_Result() " & aStudioData)
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 1 .............................. <aStudioData>
  [ 70] setobjprop 135 .......................... me.aPrivateStudioData = aStudioData
  [ 72] getglobal 153 ........................... <ElementMgr>
  [ 74] pusharglist 1 ........................... <ElementMgr>
  [ 76] extcall 15 .............................. <voidp(ElementMgr)>
  [ 78] not ..................................... <not voidp(ElementMgr)>
  [ 79] jmpifz [ 90] ............................ if not voidp(ElementMgr) then
  [ 82] getglobal 153 ........................... <ElementMgr>
  [ 84] getlocal 1 .............................. <aStudioData>
  [ 86] pusharglistnoret 2 ...................... <ElementMgr, aStudioData>
  [ 88] objcall 173 ............................. ElementMgr.displayPrivateStudios(aStudioData)
  [ 90] ret
end

on getOccupantsByStudioId_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 94 ............................. <"getOccupantsByStudioId_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result()">
  [  6] objcall 20 .............................. me.debug("getOccupantsByStudioId_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] setlocal 0 .............................. sTypeOf = oResult.getTypeOf()
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 95 ............................. <"sTypeOf: ">
  [ 20] getlocal 0 .............................. <sTypeOf>
  [ 22] joinstr ................................. <"sTypeOf: " & sTypeOf>
  [ 23] pusharglistnoret 2 ...................... <me, "sTypeOf: " & sTypeOf>
  [ 25] objcall 20 .............................. me.debug("sTypeOf: " & sTypeOf)
  [ 27] getparam 2 .............................. <oResult>
  [ 29] pusharglist 1 ........................... <oResult>
  [ 31] objcall 201 ............................. <oResult.getTypeOf()>
  [ 33] getparam 0 .............................. <me>
  [ 35] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 37] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 38] jmpifz [ 64] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 41] getparam 2 .............................. <oResult>
  [ 43] pusharglist 1 ........................... <oResult>
  [ 45] objcall 202 ............................. <oResult.getOrdinal()>
  [ 47] setlocal 1 .............................. iError = oResult.getOrdinal()
  [ 49] getparam 0 .............................. <me>
  [ 51] pushcons 96 ............................. <"getOccupantsByStudioId_Result() ERROR ">
  [ 53] getlocal 1 .............................. <iError>
  [ 55] joinstr ................................. <"getOccupantsByStudioId_Result() ERROR " & iError>
  [ 56] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result() ERROR " & iError>
  [ 58] objcall 20 .............................. me.debug("getOccupantsByStudioId_Result() ERROR " & iError)
  [ 60] pusharglistnoret 0 ...................... <>
  [ 62] extcall 71 .............................. return 
  [ 64] pusharglist 0 ........................... <[]>
  [ 66] pushlist ................................ <[]>
  [ 67] setlocal 2 .............................. aPeople = []
  [ 69] getparam 2 .............................. <oResult>
  [ 71] getobjprop 77 ........................... <oResult.length>
  [ 73] setlocal 3 .............................. iLength = oResult.length
  [ 75] pushzero ................................ <0>
  [ 76] setlocal 4
  [ 78] getlocal 4
  [ 80] getlocal 3 .............................. <iLength>
  [ 82] pushint8 1 .............................. <1>
  [ 84] sub ..................................... <iLength - 1>
  [ 85] lteq
  [ 86] jmpifz [116] ............................ repeat with i = 0 to iLength - 1
  [ 89] getparam 2 .............................. <oResult>
  [ 91] getlocal 4 .............................. <i>
  [ 93] pusharglist 2 ........................... <oResult, i>
  [ 95] objcall 43 .............................. <oResult[i]>
  [ 97] setlocal 5 .............................. sName = oResult[i]
  [ 99] getlocal 2 .............................. <aPeople>
  [101] getlocal 5 .............................. <sName>
  [103] pusharglistnoret 2 ...................... <aPeople, sName>
  [105] objcall 55 .............................. aPeople.add(sName)
  [107] pushint8 1
  [109] getlocal 4
  [111] add
  [112] setlocal 4
  [114] endrepeat [ 78]
  [116] getparam 0 .............................. <me>
  [118] pushcons 61 ............................. <"getOccupantsByStudioId_Result() ">
  [120] getlocal 2 .............................. <aPeople>
  [122] joinpadstr .............................. <"getOccupantsByStudioId_Result() " && aPeople>
  [123] pusharglistnoret 2 ...................... <me, "getOccupantsByStudioId_Result() " && aPeople>
  [125] objcall 20 .............................. me.debug("getOccupantsByStudioId_Result() " && aPeople)
  [127] getglobal 153 ........................... <ElementMgr>
  [129] pusharglist 1 ........................... <ElementMgr>
  [131] extcall 15 .............................. <voidp(ElementMgr)>
  [133] not ..................................... <not voidp(ElementMgr)>
  [134] jmpifz [145] ............................ if not voidp(ElementMgr) then
  [137] getglobal 153 ........................... <ElementMgr>
  [139] getlocal 2 .............................. <aPeople>
  [141] pusharglistnoret 2 ...................... <ElementMgr, aPeople>
  [143] objcall 188 ............................. ElementMgr.displayStudioPeople(aPeople)
  [145] ret
end

on createStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 67 ............................. <"createStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "createStudio_Result()">
  [  6] objcall 20 .............................. me.debug("createStudio_Result()")
  [  8] pushcons 97 ............................. <"createStudio_Result:">
  [ 10] getparam 2 .............................. <oResult>
  [ 12] pusharglist 1 ........................... <oResult>
  [ 14] extcall 185 ............................. <ilk(oResult)>
  [ 16] joinpadstr .............................. <"createStudio_Result:" && ilk(oResult)>
  [ 17] getparam 2 .............................. <oResult>
  [ 19] joinpadstr .............................. <"createStudio_Result:" && ilk(oResult) && oResult>
  [ 20] pusharglistnoret 1 ...................... <"createStudio_Result:" && ilk(oResult) && oResult>
  [ 22] extcall 33 .............................. put "createStudio_Result:" && ilk(oResult) && oResult
  [ 24] getparam 2 .............................. <oResult>
  [ 26] pusharglist 1 ........................... <oResult>
  [ 28] objcall 201 ............................. <oResult.getTypeOf()>
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 34] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 35] jmpifz [ 83] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 38] getparam 2 .............................. <oResult>
  [ 40] pusharglist 1 ........................... <oResult>
  [ 42] objcall 202 ............................. <oResult.getOrdinal()>
  [ 44] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 46] extcall 48 .............................. <integer(oResult.getOrdinal())>
  [ 48] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 50] getparam 0 .............................. <me>
  [ 52] pushcons 98 ............................. <"createStudio_Result() ERROR: ">
  [ 54] getlocal 0 .............................. <iError>
  [ 56] joinstr ................................. <"createStudio_Result() ERROR: " & iError>
  [ 57] pusharglistnoret 2 ...................... <me, "createStudio_Result() ERROR: " & iError>
  [ 59] objcall 20 .............................. me.debug("createStudio_Result() ERROR: " & iError)
  [ 61] getglobal 153 ........................... <ElementMgr>
  [ 63] pusharglist 1 ........................... <ElementMgr>
  [ 65] extcall 15 .............................. <voidp(ElementMgr)>
  [ 67] not ..................................... <not voidp(ElementMgr)>
  [ 68] jmpifz [ 79] ............................ if not voidp(ElementMgr) then
  [ 71] getglobal 153 ........................... <ElementMgr>
  [ 73] getlocal 0 .............................. <iError>
  [ 75] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 77] objcall 113 ............................. ElementMgr.createStudio_Result(iError)
  [ 79] pusharglistnoret 0 ...................... <>
  [ 81] extcall 71 .............................. return 
  [ 83] pushzero ................................ <0>
  [ 84] setlocal 0 .............................. iError = 0
  [ 86] getparam 2 .............................. <oResult>
  [ 88] pusharglist 1 ........................... <oResult>
  [ 90] objcall 211 ............................. <oResult.getName()>
  [ 92] setlocal 1 .............................. sStudioName = oResult.getName()
  [ 94] getparam 2 .............................. <oResult>
  [ 96] pusharglist 1 ........................... <oResult>
  [ 98] objcall 78 .............................. <oResult.getStudioID()>
  [100] setlocal 2 .............................. sStudioID = oResult.getStudioID()
  [102] getparam 0 .............................. <me>
  [104] pushcons 67 ............................. <"createStudio_Result()">
  [106] getlocal 1 .............................. <sStudioName>
  [108] joinpadstr .............................. <"createStudio_Result()" && sStudioName>
  [109] getlocal 2 .............................. <sStudioID>
  [111] joinpadstr .............................. <"createStudio_Result()" && sStudioName && sStudioID>
  [112] pusharglistnoret 2 ...................... <me, "createStudio_Result()" && sStudioName && sStudioID>
  [114] objcall 20 .............................. me.debug("createStudio_Result()" && sStudioName && sStudioID)
  [116] getglobal 153 ........................... <ElementMgr>
  [118] pusharglist 1 ........................... <ElementMgr>
  [120] extcall 15 .............................. <voidp(ElementMgr)>
  [122] not ..................................... <not voidp(ElementMgr)>
  [123] jmpifz [138] ............................ if not voidp(ElementMgr) then
  [126] getglobal 153 ........................... <ElementMgr>
  [128] getlocal 0 .............................. <iError>
  [130] getlocal 1 .............................. <sStudioName>
  [132] getlocal 2 .............................. <sStudioID>
  [134] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sStudioID>
  [136] objcall 113 ............................. ElementMgr.createStudio_Result(iError, sStudioName, sStudioID)
  [138] ret
end

on modifyStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 99 ............................. <"modifyStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "modifyStudio_Result()">
  [  6] objcall 20 .............................. me.debug("modifyStudio_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 67] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 30] extcall 48 .............................. <integer(oResult.getOrdinal())>
  [ 32] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 100 ............................ <"modifyStudio_Result() ERROR: ">
  [ 38] getlocal 0 .............................. <iError>
  [ 40] joinstr ................................. <"modifyStudio_Result() ERROR: " & iError>
  [ 41] pusharglistnoret 2 ...................... <me, "modifyStudio_Result() ERROR: " & iError>
  [ 43] objcall 20 .............................. me.debug("modifyStudio_Result() ERROR: " & iError)
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 15 .............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 63] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 153 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 61] objcall 114 ............................. ElementMgr.modifyStudio_Result(iError)
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 71 .............................. return 
  [ 67] pushzero ................................ <0>
  [ 68] setlocal 0 .............................. iError = 0
  [ 70] getparam 2 .............................. <oResult>
  [ 72] pusharglist 1 ........................... <oResult>
  [ 74] objcall 211 ............................. <oResult.getName()>
  [ 76] setlocal 1 .............................. sStudioName = oResult.getName()
  [ 78] getparam 2 .............................. <oResult>
  [ 80] pusharglist 1 ........................... <oResult>
  [ 82] objcall 212 ............................. <oResult.getDescription()>
  [ 84] setlocal 2 .............................. sDescription = oResult.getDescription()
  [ 86] getparam 0 .............................. <me>
  [ 88] pushcons 71 ............................. <"modifyStudio_Result() ">
  [ 90] getlocal 1 .............................. <sStudioName>
  [ 92] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName>
  [ 93] getlocal 2 .............................. <sDescription>
  [ 95] joinpadstr .............................. <"modifyStudio_Result() " && sStudioName && sDescription>
  [ 96] pusharglistnoret 2 ...................... <me, "modifyStudio_Result() " && sStudioName && sDescription>
  [ 98] objcall 20 .............................. me.debug("modifyStudio_Result() " && sStudioName && sDescription)
  [100] getglobal 153 ........................... <ElementMgr>
  [102] pusharglist 1 ........................... <ElementMgr>
  [104] extcall 15 .............................. <voidp(ElementMgr)>
  [106] not ..................................... <not voidp(ElementMgr)>
  [107] jmpifz [122] ............................ if not voidp(ElementMgr) then
  [110] getglobal 153 ........................... <ElementMgr>
  [112] getlocal 0 .............................. <iError>
  [114] getlocal 1 .............................. <sStudioName>
  [116] getlocal 2 .............................. <sDescription>
  [118] pusharglistnoret 4 ...................... <ElementMgr, iError, sStudioName, sDescription>
  [120] objcall 114 ............................. ElementMgr.modifyStudio_Result(iError, sStudioName, sDescription)
  [122] ret
end

on deleteStudio_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 101 ............................ <"deleteStudio_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "deleteStudio_Result()">
  [  6] objcall 20 .............................. me.debug("deleteStudio_Result()")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 18] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 19] jmpifz [ 88] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 22] getparam 2 .............................. <oResult>
  [ 24] pusharglist 1 ........................... <oResult>
  [ 26] objcall 202 ............................. <oResult.getOrdinal()>
  [ 28] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 30] extcall 48 .............................. <integer(oResult.getOrdinal())>
  [ 32] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 102 ............................ <"deleteStudio_Result() ERROR: ">
  [ 38] getlocal 0 .............................. <iError>
  [ 40] joinstr ................................. <"deleteStudio_Result() ERROR: " & iError>
  [ 41] pusharglistnoret 2 ...................... <me, "deleteStudio_Result() ERROR: " & iError>
  [ 43] objcall 20 .............................. me.debug("deleteStudio_Result() ERROR: " & iError)
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 15 .............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 63] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 153 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 61] objcall 115 ............................. ElementMgr.deleteStudio_Result(iError)
  [ 63] getlocal 0 .............................. <iError>
  [ 65] pushzero ................................ <0>
  [ 66] eq ...................................... <iError = 0>
  [ 67] jmpifz [ 84] ............................ if iError = 0 then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 73 ............................. <"deleteStudio_Result() OK">
  [ 74] pusharglistnoret 2 ...................... <me, "deleteStudio_Result() OK">
  [ 76] objcall 20 .............................. me.debug("deleteStudio_Result() OK")
  [ 78] getglobal 213 ........................... <oPossessionManager>
  [ 80] pusharglistnoret 1 ...................... <oPossessionManager>
  [ 82] objcall 214 ............................. oPossessionManager.getBackpack()
  [ 84] pusharglistnoret 0 ...................... <>
  [ 86] extcall 71 .............................. return 
  [ 88] ret
end

on startCreateStudio me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 103 ............................ <"startCreateStudio() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"startCreateStudio() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "startCreateStudio() " & sScreenName>
  [  9] objcall 20 .............................. me.debug("startCreateStudio() " & sScreenName)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] pusharglist 1 ........................... <ElementMgr>
  [ 15] extcall 15 .............................. <voidp(ElementMgr)>
  [ 17] not ..................................... <not voidp(ElementMgr)>
  [ 18] jmpifz [ 28] ............................ if not voidp(ElementMgr) then
  [ 21] getglobal 153 ........................... <ElementMgr>
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 2 ...................... <ElementMgr, 0>
  [ 26] objcall 215 ............................. ElementMgr.startCreateStudio_Result(0)
  [ 28] ret
end

on startModifyStudio me, sScreenName, sStudioID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 104 ............................ <"startModifyStudio() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"startModifyStudio() " & sScreenName>
  [  7] getparam 2 .............................. <sStudioID>
  [  9] joinpadstr .............................. <"startModifyStudio() " & sScreenName && sStudioID>
  [ 10] pusharglistnoret 2 ...................... <me, "startModifyStudio() " & sScreenName && sStudioID>
  [ 12] objcall 20 .............................. me.debug("startModifyStudio() " & sScreenName && sStudioID)
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 190 ............................. <VOID>
  [ 18] setlocal 0 .............................. aStudioData = VOID
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 135 .......................... <me.aPrivateStudioData>
  [ 24] pusharglist 1 ........................... <me.aPrivateStudioData>
  [ 26] extcall 15 .............................. <voidp(me.aPrivateStudioData)>
  [ 28] jmpifz [ 35] ............................ if voidp(me.aPrivateStudioData) then
  [ 31] pusharglistnoret 0 ...................... <>
  [ 33] extcall 71 .............................. return 
  [ 35] getparam 0 .............................. <me>
  [ 37] pushsymb 135 ............................ <#aPrivateStudioData>
  [ 39] pusharglist 2 ........................... <me, #aPrivateStudioData>
  [ 41] objcall 42 .............................. <me.aPrivateStudioData.count>
  [ 43] setlocal 1 .............................. iLength = me.aPrivateStudioData.count
  [ 45] pushint8 1 .............................. <1>
  [ 47] setlocal 2
  [ 49] getlocal 2
  [ 51] getlocal 1 .............................. <iLength>
  [ 53] lteq
  [ 54] jmpifz [ 99] ............................ repeat with i = 1 to iLength
  [ 57] getparam 0 .............................. <me>
  [ 59] pushsymb 135 ............................ <#aPrivateStudioData>
  [ 61] getlocal 2 .............................. <i>
  [ 63] pusharglist 3 ........................... <me, #aPrivateStudioData, i>
  [ 65] objcall 75 .............................. <me.aPrivateStudioData[i]>
  [ 67] setlocal 3 .............................. aStudio = me.aPrivateStudioData[i]
  [ 69] getlocal 3 .............................. <aStudio>
  [ 71] pushsymb 45 ............................. <#studioId>
  [ 73] pusharglist 2 ........................... <aStudio, #studioId>
  [ 75] objcall 43 .............................. <aStudio[#studioId]>
  [ 77] getparam 2 .............................. <sStudioID>
  [ 79] eq ...................................... <aStudio[#studioId] = sStudioID>
  [ 80] jmpifz [ 90] ............................ if aStudio[#studioId] = sStudioID then
  [ 83] getlocal 3 .............................. <aStudio>
  [ 85] setlocal 0 .............................. aStudioData = aStudio
  [ 87] jmp [ 99] ............................... exit repeat
  [ 90] pushint8 1
  [ 92] getlocal 2
  [ 94] add
  [ 95] setlocal 2
  [ 97] endrepeat [ 49]
  [ 99] getlocal 0 .............................. <aStudioData>
  [101] pusharglist 1 ........................... <aStudioData>
  [103] extcall 15 .............................. <voidp(aStudioData)>
  [105] not ..................................... <not voidp(aStudioData)>
  [106] jmpifz [150] ............................ if not voidp(aStudioData) then
  [109] getlocal 0 .............................. <aStudioData>
  [111] pushsymb 46 ............................. <#name>
  [113] pusharglist 2 ........................... <aStudioData, #name>
  [115] objcall 43 .............................. <aStudioData[#name]>
  [117] setlocal 4 .............................. sName = aStudioData[#name]
  [119] getlocal 0 .............................. <aStudioData>
  [121] pushsymb 47 ............................. <#description>
  [123] pusharglist 2 ........................... <aStudioData, #description>
  [125] objcall 43 .............................. <aStudioData[#description]>
  [127] setlocal 5 .............................. sDescription = aStudioData[#description]
  [129] getglobal 153 ........................... <ElementMgr>
  [131] pusharglist 1 ........................... <ElementMgr>
  [133] extcall 15 .............................. <voidp(ElementMgr)>
  [135] not ..................................... <not voidp(ElementMgr)>
  [136] jmpifz [150] ............................ if not voidp(ElementMgr) then
  [139] getglobal 153 ........................... <ElementMgr>
  [141] pushzero ................................ <0>
  [142] getlocal 4 .............................. <sName>
  [144] getlocal 5 .............................. <sDescription>
  [146] pusharglistnoret 4 ...................... <ElementMgr, 0, sName, sDescription>
  [148] objcall 216 ............................. ElementMgr.startModifyStudio_Result(0, sName, sDescription)
  [150] ret
end

on getMixerByScreenName_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 105 ............................ <"getMixerByScreenName_Result() ">
  [  4] getparam 2 .............................. <oResult>
  [  6] pusharglist 1 ........................... <oResult>
  [  8] objcall 208 ............................. <oResult.toString()>
  [ 10] joinstr ................................. <"getMixerByScreenName_Result() " & oResult.toString()>
  [ 11] pusharglistnoret 2 ...................... <me, "getMixerByScreenName_Result() " & oResult.toString()>
  [ 13] objcall 20 .............................. me.debug("getMixerByScreenName_Result() " & oResult.toString())
  [ 15] getparam 2 .............................. <oResult>
  [ 17] pusharglist 1 ........................... <oResult>
  [ 19] objcall 201 ............................. <oResult.getTypeOf()>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 136 .......................... <me.ERROR_TYPE>
  [ 25] eq ...................................... <oResult.getTypeOf() = me.ERROR_TYPE>
  [ 26] jmpifz [ 74] ............................ if oResult.getTypeOf() = me.ERROR_TYPE then
  [ 29] getparam 2 .............................. <oResult>
  [ 31] pusharglist 1 ........................... <oResult>
  [ 33] objcall 202 ............................. <oResult.getOrdinal()>
  [ 35] pusharglist 1 ........................... <oResult.getOrdinal()>
  [ 37] extcall 48 .............................. <integer(oResult.getOrdinal())>
  [ 39] setlocal 0 .............................. iError = integer(oResult.getOrdinal())
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 106 ............................ <"getMixerByScreenName_Result() ERROR: ">
  [ 45] getlocal 0 .............................. <iError>
  [ 47] joinstr ................................. <"getMixerByScreenName_Result() ERROR: " & iError>
  [ 48] pusharglistnoret 2 ...................... <me, "getMixerByScreenName_Result() ERROR: " & iError>
  [ 50] objcall 20 .............................. me.debug("getMixerByScreenName_Result() ERROR: " & iError)
  [ 52] getglobal 153 ........................... <ElementMgr>
  [ 54] pusharglist 1 ........................... <ElementMgr>
  [ 56] extcall 15 .............................. <voidp(ElementMgr)>
  [ 58] not ..................................... <not voidp(ElementMgr)>
  [ 59] jmpifz [ 70] ............................ if not voidp(ElementMgr) then
  [ 62] getglobal 153 ........................... <ElementMgr>
  [ 64] getlocal 0 .............................. <iError>
  [ 66] pusharglistnoret 2 ...................... <ElementMgr, iError>
  [ 68] objcall 118 ............................. ElementMgr.getMixerByScreenName_Result(iError)
  [ 70] pusharglistnoret 0 ...................... <>
  [ 72] extcall 71 .............................. return 
  [ 74] pushzero ................................ <0>
  [ 75] setlocal 0 .............................. iError = 0
  [ 77] getparam 0 .............................. <me>
  [ 79] getparam 2 .............................. <oResult>
  [ 81] pusharglist 2 ........................... <me, oResult>
  [ 83] objcall 120 ............................. <me.createRemoteMixer(oResult)>
  [ 85] setlocal 1 .............................. aRemoteMixer = me.createRemoteMixer(oResult)
  [ 87] getparam 0 .............................. <me>
  [ 89] pushcons 105 ............................ <"getMixerByScreenName_Result() ">
  [ 91] getlocal 1 .............................. <aRemoteMixer>
  [ 93] joinstr ................................. <"getMixerByScreenName_Result() " & aRemoteMixer>
  [ 94] pusharglistnoret 2 ...................... <me, "getMixerByScreenName_Result() " & aRemoteMixer>
  [ 96] objcall 20 .............................. me.debug("getMixerByScreenName_Result() " & aRemoteMixer)
  [ 98] getglobal 153 ........................... <ElementMgr>
  [100] pusharglist 1 ........................... <ElementMgr>
  [102] extcall 15 .............................. <voidp(ElementMgr)>
  [104] not ..................................... <not voidp(ElementMgr)>
  [105] jmpifz [118] ............................ if not voidp(ElementMgr) then
  [108] getglobal 153 ........................... <ElementMgr>
  [110] getlocal 0 .............................. <iError>
  [112] getlocal 1 .............................. <aRemoteMixer>
  [114] pusharglistnoret 3 ...................... <ElementMgr, iError, aRemoteMixer>
  [116] objcall 118 ............................. ElementMgr.getMixerByScreenName_Result(iError, aRemoteMixer)
  [118] ret
end

on burnMixToCD_Result me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 107 ............................ <"burnMixToCD_Result()">
  [  4] pusharglistnoret 2 ...................... <me, "burnMixToCD_Result()">
  [  6] objcall 20 .............................. me.debug("burnMixToCD_Result()")
  [  8] pushzero ................................ <0>
  [  9] setlocal 0 .............................. iError = 0
  [ 11] getparam 2 .............................. <oResult>
  [ 13] pusharglist 1 ........................... <oResult>
  [ 15] extcall 15 .............................. <voidp(oResult)>
  [ 17] getparam 2 .............................. <oResult>
  [ 19] pusharglist 0 ........................... <>
  [ 21] extcall 190 ............................. <VOID>
  [ 23] eq ...................................... <oResult = VOID>
  [ 24] or ...................................... <voidp(oResult) or (oResult = VOID)>
  [ 25] jmpifz [ 32] ............................ if voidp(oResult) or (oResult = VOID) then
  [ 28] pushint8 1 .............................. <1>
  [ 30] setlocal 0 .............................. iError = 1
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 76 ............................. <"burnMixToCD_Result() ">
  [ 36] getlocal 0 .............................. <iError>
  [ 38] joinstr ................................. <"burnMixToCD_Result() " & iError>
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 3 ...................... <me, "burnMixToCD_Result() " & iError, 1>
  [ 43] objcall 20 .............................. me.debug("burnMixToCD_Result() " & iError, 1)
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] pusharglist 1 ........................... <ElementMgr>
  [ 49] extcall 15 .............................. <voidp(ElementMgr)>
  [ 51] not ..................................... <not voidp(ElementMgr)>
  [ 52] jmpifz [ 65] ............................ if not voidp(ElementMgr) then
  [ 55] getglobal 153 ........................... <ElementMgr>
  [ 57] getlocal 0 .............................. <iError>
  [ 59] getparam 2 .............................. <oResult>
  [ 61] pusharglistnoret 3 ...................... <ElementMgr, iError, oResult>
  [ 63] objcall 119 ............................. ElementMgr.burnMixToCD_Result(iError, oResult)
  [ 65] ret
end

on createRemoteMixer me, oResult
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aRemoteMixer = [:]
  [  5] getlocal 0 .............................. <aRemoteMixer>
  [  7] pushsymb 217 ............................ <#blankCDCount>
  [  9] getparam 1 .............................. <oResult>
  [ 11] pusharglist 1 ........................... <oResult>
  [ 13] objcall 218 ............................. <oResult.getBlankCDCount()>
  [ 15] pusharglistnoret 3 ...................... <aRemoteMixer, #blankCDCount, oResult.getBlankCDCount()>
  [ 17] objcall 73 .............................. aRemoteMixer[#blankCDCount] = oResult.getBlankCDCount()
  [ 19] getlocal 0 .............................. <aRemoteMixer>
  [ 21] pushsymb 219 ............................ <#sessionId>
  [ 23] getparam 1 .............................. <oResult>
  [ 25] pusharglist 1 ........................... <oResult>
  [ 27] objcall 220 ............................. <oResult.getSessionId()>
  [ 29] pusharglistnoret 3 ...................... <aRemoteMixer, #sessionId, oResult.getSessionId()>
  [ 31] objcall 73 .............................. aRemoteMixer[#sessionId] = oResult.getSessionId()
  [ 33] pusharglist 0 ........................... <[]>
  [ 35] pushlist ................................ <[]>
  [ 36] setlocal 1 .............................. aMixes = []
  [ 38] getparam 1 .............................. <oResult>
  [ 40] pusharglist 1 ........................... <oResult>
  [ 42] objcall 221 ............................. <oResult.getMixes()>
  [ 44] setlocal 2 .............................. faMixes = oResult.getMixes()
  [ 46] pushzero ................................ <0>
  [ 47] setlocal 3
  [ 49] getlocal 3
  [ 51] getlocal 2 .............................. <faMixes>
  [ 53] getobjprop 77 ........................... <faMixes.length>
  [ 55] pushint8 1 .............................. <1>
  [ 57] sub ..................................... <faMixes.length - 1>
  [ 58] lteq
  [ 59] jmpifz [ 99] ............................ repeat with i = 0 to faMixes.length - 1
  [ 62] getlocal 2 .............................. <faMixes>
  [ 64] getlocal 3 .............................. <i>
  [ 66] pusharglist 2 ........................... <faMixes, i>
  [ 68] objcall 43 .............................. <faMixes[i]>
  [ 70] setlocal 4 .............................. foMix = faMixes[i]
  [ 72] getparam 0 .............................. <me>
  [ 74] getlocal 4 .............................. <foMix>
  [ 76] pusharglist 2 ........................... <me, foMix>
  [ 78] objcall 121 ............................. <me.createMix(foMix)>
  [ 80] setlocal 5 .............................. aMix = me.createMix(foMix)
  [ 82] getlocal 1 .............................. <aMixes>
  [ 84] getlocal 5 .............................. <aMix>
  [ 86] pusharglistnoret 2 ...................... <aMixes, aMix>
  [ 88] objcall 55 .............................. aMixes.add(aMix)
  [ 90] pushint8 1
  [ 92] getlocal 3
  [ 94] add
  [ 95] setlocal 3
  [ 97] endrepeat [ 49]
  [ 99] getlocal 0 .............................. <aRemoteMixer>
  [101] pushsymb 222 ............................ <#mixes>
  [103] getlocal 1 .............................. <aMixes>
  [105] pusharglistnoret 3 ...................... <aRemoteMixer, #mixes, aMixes>
  [107] objcall 73 .............................. aRemoteMixer[#mixes] = aMixes
  [109] getlocal 0 .............................. <aRemoteMixer>
  [111] pusharglistnoret 1 ...................... <aRemoteMixer>
  [113] extcall 71 .............................. return aRemoteMixer
  [115] ret
end

on createMix me, foMix
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aMix = [:]
  [  5] getlocal 0 .............................. <aMix>
  [  7] pushsymb 227 ............................ <#mixid>
  [  9] getparam 1 .............................. <foMix>
  [ 11] pusharglist 1 ........................... <foMix>
  [ 13] objcall 228 ............................. <foMix.getMixId()>
  [ 15] pusharglist 1 ........................... <foMix.getMixId()>
  [ 17] extcall 48 .............................. <integer(foMix.getMixId())>
  [ 19] pusharglistnoret 3 ...................... <aMix, #mixid, integer(foMix.getMixId())>
  [ 21] objcall 73 .............................. aMix[#mixid] = integer(foMix.getMixId())
  [ 23] getlocal 0 .............................. <aMix>
  [ 25] pushsymb 229 ............................ <#mixNumber>
  [ 27] getparam 1 .............................. <foMix>
  [ 29] pusharglist 1 ........................... <foMix>
  [ 31] objcall 230 ............................. <foMix.getMixNumber()>
  [ 33] pusharglist 1 ........................... <foMix.getMixNumber()>
  [ 35] extcall 48 .............................. <integer(foMix.getMixNumber())>
  [ 37] pusharglistnoret 3 ...................... <aMix, #mixNumber, integer(foMix.getMixNumber())>
  [ 39] objcall 73 .............................. aMix[#mixNumber] = integer(foMix.getMixNumber())
  [ 41] getlocal 0 .............................. <aMix>
  [ 43] pushsymb 231 ............................ <#authorScreenName>
  [ 45] getparam 1 .............................. <foMix>
  [ 47] pusharglist 1 ........................... <foMix>
  [ 49] objcall 232 ............................. <foMix.getOwnerScreenName()>
  [ 51] pusharglistnoret 3 ...................... <aMix, #authorScreenName, foMix.getOwnerScreenName()>
  [ 53] objcall 73 .............................. aMix[#authorScreenName] = foMix.getOwnerScreenName()
  [ 55] getlocal 0 .............................. <aMix>
  [ 57] pushsymb 46 ............................. <#name>
  [ 59] getparam 1 .............................. <foMix>
  [ 61] pusharglist 1 ........................... <foMix>
  [ 63] objcall 233 ............................. <foMix.getMixName()>
  [ 65] pusharglistnoret 3 ...................... <aMix, #name, foMix.getMixName()>
  [ 67] objcall 73 .............................. aMix[#name] = foMix.getMixName()
  [ 69] getparam 1 .............................. <foMix>
  [ 71] pusharglist 1 ........................... <foMix>
  [ 73] objcall 234 ............................. <foMix.getSong()>
  [ 75] setlocal 1 .............................. sSong = foMix.getSong()
  [ 77] getlocal 0 .............................. <aMix>
  [ 79] pushsymb 235 ............................ <#song>
  [ 81] getlocal 1 .............................. <sSong>
  [ 83] pusharglistnoret 3 ...................... <aMix, #song, sSong>
  [ 85] objcall 73 .............................. aMix[#song] = sSong
  [ 87] getlocal 0 .............................. <aMix>
  [ 89] pusharglistnoret 1 ...................... <aMix>
  [ 91] extcall 71 .............................. return aMix
  [ 93] ret
end

on replaceChar me, sString, sCharToReplace, sReplacementChar
  [  0] pushcons 45 ............................. <EMPTY>
  [  2] setlocal 0 .............................. sNewString = EMPTY
  [  4] getparam 1 .............................. <sString>
  [  6] pushsymb 237 ............................ <#chars>
  [  8] pusharglist 2 ........................... <sString, #chars>
  [ 10] objcall 42 .............................. <sString.chars.count>
  [ 12] setlocal 1 .............................. iCharCount = sString.chars.count
  [ 14] pushint8 1 .............................. <1>
  [ 16] setlocal 2
  [ 18] getlocal 2
  [ 20] getlocal 1 .............................. <iCharCount>
  [ 22] lteq
  [ 23] jmpifz [ 73] ............................ repeat with i = 1 to iCharCount
  [ 26] getparam 1 .............................. <sString>
  [ 28] pushsymb 238 ............................ <#char>
  [ 30] getlocal 2 .............................. <i>
  [ 32] pusharglist 3 ........................... <sString, #char, i>
  [ 34] objcall 75 .............................. <sString.char[i]>
  [ 36] setlocal 3 .............................. sChar = sString.char[i]
  [ 38] getlocal 3 .............................. <sChar>
  [ 40] getparam 2 .............................. <sCharToReplace>
  [ 42] eq ...................................... <sChar = sCharToReplace>
  [ 43] jmpifz [ 53] ............................ if sChar = sCharToReplace then / else
  [ 46] getparam 3 .............................. <sReplacementChar>
  [ 48] setlocal 4 .............................. sNewChar = sReplacementChar
  [ 50] jmp [ 57]
  [ 53] getlocal 3 .............................. <sChar>
  [ 55] setlocal 4 .............................. sNewChar = sChar
  [ 57] getlocal 0 .............................. <sNewString>
  [ 59] getlocal 4 .............................. <sNewChar>
  [ 61] joinstr ................................. <sNewString & sNewChar>
  [ 62] setlocal 0 .............................. sNewString = sNewString & sNewChar
  [ 64] pushint8 1
  [ 66] getlocal 2
  [ 68] add
  [ 69] setlocal 2
  [ 71] endrepeat [ 18]
  [ 73] getlocal 0 .............................. <sNewString>
  [ 75] pusharglistnoret 1 ...................... <sNewString>
  [ 77] extcall 71 .............................. return sNewString
  [ 79] ret
end

on getTestRemoteMixer me, sScreenName
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aRemoteMixer = [:]
  [  5] getlocal 0 .............................. <aRemoteMixer>
  [  7] pushsymb 217 ............................ <#blankCDCount>
  [  9] pushint8 30 ............................. <30>
  [ 11] pusharglistnoret 3 ...................... <aRemoteMixer, #blankCDCount, 30>
  [ 13] objcall 73 .............................. aRemoteMixer[#blankCDCount] = 30
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setlocal 1 .............................. aMixes = []
  [ 20] pushint8 1 .............................. <1>
  [ 22] setlocal 2
  [ 24] getlocal 2
  [ 26] pushint8 2 .............................. <2>
  [ 28] lteq
  [ 29] jmpifz [ 57] ............................ repeat with i = 1 to 2
  [ 32] getlocal 1 .............................. <aMixes>
  [ 34] getparam 0 .............................. <me>
  [ 36] getparam 1 .............................. <sScreenName>
  [ 38] getlocal 2 .............................. <i>
  [ 40] pusharglist 3 ........................... <me, sScreenName, i>
  [ 42] objcall 124 ............................. <me.createTestMix(sScreenName, i)>
  [ 44] pusharglistnoret 2 ...................... <aMixes, me.createTestMix(sScreenName, i)>
  [ 46] objcall 55 .............................. aMixes.add(me.createTestMix(sScreenName, i))
  [ 48] pushint8 1
  [ 50] getlocal 2
  [ 52] add
  [ 53] setlocal 2
  [ 55] endrepeat [ 24]
  [ 57] getlocal 0 .............................. <aRemoteMixer>
  [ 59] pushsymb 222 ............................ <#mixes>
  [ 61] getlocal 1 .............................. <aMixes>
  [ 63] pusharglistnoret 3 ...................... <aRemoteMixer, #mixes, aMixes>
  [ 65] objcall 73 .............................. aRemoteMixer[#mixes] = aMixes
  [ 67] getlocal 0 .............................. <aRemoteMixer>
  [ 69] pusharglistnoret 1 ...................... <aRemoteMixer>
  [ 71] extcall 71 .............................. return aRemoteMixer
  [ 73] ret
end

on createTestMix me, sScreenName, iMixNumber
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aTestMix = [:]
  [  5] getlocal 0 .............................. <aTestMix>
  [  7] pushsymb 227 ............................ <#mixid>
  [  9] pushint16 1000 .......................... <1000>
  [ 12] pusharglist 1 ........................... <1000>
  [ 14] extcall 246 ............................. <random(1000)>
  [ 16] pusharglistnoret 3 ...................... <aTestMix, #mixid, random(1000)>
  [ 18] objcall 73 .............................. aTestMix[#mixid] = random(1000)
  [ 20] getlocal 0 .............................. <aTestMix>
  [ 22] pushsymb 229 ............................ <#mixNumber>
  [ 24] getparam 2 .............................. <iMixNumber>
  [ 26] pusharglistnoret 3 ...................... <aTestMix, #mixNumber, iMixNumber>
  [ 28] objcall 73 .............................. aTestMix[#mixNumber] = iMixNumber
  [ 30] getlocal 0 .............................. <aTestMix>
  [ 32] pushsymb 231 ............................ <#authorScreenName>
  [ 34] getparam 1 .............................. <sScreenName>
  [ 36] pusharglistnoret 3 ...................... <aTestMix, #authorScreenName, sScreenName>
  [ 38] objcall 73 .............................. aTestMix[#authorScreenName] = sScreenName
  [ 40] getlocal 0 .............................. <aTestMix>
  [ 42] pushsymb 46 ............................. <#name>
  [ 44] pushcons 108 ............................ <"Test Mix: ">
  [ 46] getparam 1 .............................. <sScreenName>
  [ 48] joinstr ................................. <"Test Mix: " & sScreenName>
  [ 49] pushcons 109 ............................ <": ">
  [ 51] joinstr ................................. <"Test Mix: " & sScreenName & ": ">
  [ 52] getparam 2 .............................. <iMixNumber>
  [ 54] joinstr ................................. <"Test Mix: " & sScreenName & ": " & iMixNumber>
  [ 55] pusharglistnoret 3 ...................... <aTestMix, #name, "Test Mix: " & sScreenName & ": " & iMixNumber>
  [ 57] objcall 73 .............................. aTestMix[#name] = "Test Mix: " & sScreenName & ": " & iMixNumber
  [ 59] getlocal 0 .............................. <aTestMix>
  [ 61] pushsymb 235 ............................ <#song>
  [ 63] pushcons 110 ............................ <"jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^">
  [ 65] pusharglistnoret 3 ...................... <aTestMix, #song, "jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^">
  [ 67] objcall 73 .............................. aTestMix[#song] = "jazzyjeff,4,4,54,^4x4,97,308,countryOne_beatz00,{24,7996,{^Drum kit 2,100,403,shared_trapset00_,{8,15996,{^Delayed,100,355,popTwo_kbd00,{12,21989,{^C'mon Again,100,352,popOne_vocal00,{1,27986,{1,31984,{1,35982,{1,39980,{1,43978,{1,47976,{1,51974,{^Cop Show 2,100,402,popOne_kbd00_,{12,7998,{^Slinky 2,100,406,hipHopOne_kbd00_,{15,0,{^"
  [ 69] getlocal 0 .............................. <aTestMix>
  [ 71] pusharglistnoret 1 ...................... <aTestMix>
  [ 73] extcall 71 .............................. return aTestMix
  [ 75] ret
end

on onStatus me, oCaller, oXml
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 111 ............................ <"onStatus()">
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, "onStatus()", 1>
  [  8] objcall 20 .............................. me.debug("onStatus()", 1)
  [ 10] ret
end

on getStudiosFromResult me, oResult
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aStudioData = []
  [  5] getparam 1 .............................. <oResult>
  [  7] getobjprop 77 ........................... <oResult.length>
  [  9] setlocal 1 .............................. iLength = oResult.length
  [ 11] pushzero ................................ <0>
  [ 12] setlocal 2
  [ 14] getlocal 2
  [ 16] getlocal 1 .............................. <iLength>
  [ 18] pushint8 1 .............................. <1>
  [ 20] sub ..................................... <iLength - 1>
  [ 21] lteq
  [ 22] jmpifz [ 62] ............................ repeat with i = 0 to iLength - 1
  [ 25] getparam 1 .............................. <oResult>
  [ 27] getlocal 2 .............................. <i>
  [ 29] pusharglist 2 ........................... <oResult, i>
  [ 31] objcall 43 .............................. <oResult[i]>
  [ 33] setlocal 3 .............................. oStudio = oResult[i]
  [ 35] getparam 0 .............................. <me>
  [ 37] getlocal 3 .............................. <oStudio>
  [ 39] pusharglist 2 ........................... <me, oStudio>
  [ 41] objcall 127 ............................. <me.getStudioFromresult(oStudio)>
  [ 43] setlocal 4 .............................. aStudio = me.getStudioFromresult(oStudio)
  [ 45] getlocal 0 .............................. <aStudioData>
  [ 47] getlocal 4 .............................. <aStudio>
  [ 49] pusharglistnoret 2 ...................... <aStudioData, aStudio>
  [ 51] objcall 55 .............................. aStudioData.add(aStudio)
  [ 53] pushint8 1
  [ 55] getlocal 2
  [ 57] add
  [ 58] setlocal 2
  [ 60] endrepeat [ 14]
  [ 62] getlocal 0 .............................. <aStudioData>
  [ 64] pusharglistnoret 1 ...................... <aStudioData>
  [ 66] extcall 71 .............................. return aStudioData
  [ 68] ret
end

on getStudioFromresult me, oResult
  [  0] getparam 1 .............................. <oResult>
  [  2] pusharglist 1 ........................... <oResult>
  [  4] objcall 78 .............................. <oResult.getStudioID()>
  [  6] setlocal 0 .............................. sStudioID = oResult.getStudioID()
  [  8] getparam 1 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 211 ............................. <oResult.getName()>
  [ 14] setlocal 1 .............................. sName = oResult.getName()
  [ 16] getparam 1 .............................. <oResult>
  [ 18] pusharglist 1 ........................... <oResult>
  [ 20] objcall 212 ............................. <oResult.getDescription()>
  [ 22] setlocal 2 .............................. sDescription = oResult.getDescription()
  [ 24] getparam 1 .............................. <oResult>
  [ 26] pusharglist 1 ........................... <oResult>
  [ 28] objcall 203 ............................. <oResult.getCurrentOccupancy()>
  [ 30] pusharglist 1 ........................... <oResult.getCurrentOccupancy()>
  [ 32] extcall 48 .............................. <integer(oResult.getCurrentOccupancy())>
  [ 34] setlocal 3 .............................. iUserCount = integer(oResult.getCurrentOccupancy())
  [ 36] getparam 1 .............................. <oResult>
  [ 38] pusharglist 1 ........................... <oResult>
  [ 40] objcall 204 ............................. <oResult.getMaxOccupancy()>
  [ 42] pusharglist 1 ........................... <oResult.getMaxOccupancy()>
  [ 44] extcall 48 .............................. <integer(oResult.getMaxOccupancy())>
  [ 46] setlocal 4 .............................. iCapacity = integer(oResult.getMaxOccupancy())
  [ 48] getparam 1 .............................. <oResult>
  [ 50] pusharglist 1 ........................... <oResult>
  [ 52] objcall 205 ............................. <oResult.getLocation()>
  [ 54] pusharglist 1 ........................... <oResult.getLocation()>
  [ 56] extcall 48 .............................. <integer(oResult.getLocation())>
  [ 58] setlocal 5 .............................. iLocation = integer(oResult.getLocation())
  [ 60] getparam 1 .............................. <oResult>
  [ 62] pusharglist 1 ........................... <oResult>
  [ 64] objcall 248 ............................. <oResult.getLayout()>
  [ 66] pusharglist 1 ........................... <oResult.getLayout()>
  [ 68] extcall 48 .............................. <integer(oResult.getLayout())>
  [ 70] setlocal 6 .............................. iLayout = integer(oResult.getLayout())
  [ 72] getparam 1 .............................. <oResult>
  [ 74] pusharglist 1 ........................... <oResult>
  [ 76] objcall 249 ............................. <oResult.getOwnerName()>
  [ 78] setlocal 7 .............................. sOwner = oResult.getOwnerName()
  [ 80] pusharglist 0 ........................... <[:]>
  [ 82] pushproplist ............................ <[:]>
  [ 83] setlocal 8 .............................. aStudio = [:]
  [ 85] getlocal 8 .............................. <aStudio>
  [ 87] pushsymb 45 ............................. <#studioId>
  [ 89] getlocal 0 .............................. <sStudioID>
  [ 91] pusharglistnoret 3 ...................... <aStudio, #studioId, sStudioID>
  [ 93] objcall 73 .............................. aStudio[#studioId] = sStudioID
  [ 95] getlocal 8 .............................. <aStudio>
  [ 97] pushsymb 46 ............................. <#name>
  [ 99] getlocal 1 .............................. <sName>
  [101] pusharglistnoret 3 ...................... <aStudio, #name, sName>
  [103] objcall 73 .............................. aStudio[#name] = sName
  [105] getlocal 8 .............................. <aStudio>
  [107] pushsymb 47 ............................. <#description>
  [109] getlocal 2 .............................. <sDescription>
  [111] pusharglistnoret 3 ...................... <aStudio, #description, sDescription>
  [113] objcall 73 .............................. aStudio[#description] = sDescription
  [115] getlocal 8 .............................. <aStudio>
  [117] pushsymb 49 ............................. <#userCount>
  [119] getlocal 3 .............................. <iUserCount>
  [121] pusharglistnoret 3 ...................... <aStudio, #userCount, iUserCount>
  [123] objcall 73 .............................. aStudio[#userCount] = iUserCount
  [125] getlocal 8 .............................. <aStudio>
  [127] pushsymb 50 ............................. <#capacity>
  [129] getlocal 4 .............................. <iCapacity>
  [131] pusharglistnoret 3 ...................... <aStudio, #capacity, iCapacity>
  [133] objcall 73 .............................. aStudio[#capacity] = iCapacity
  [135] getlocal 8 .............................. <aStudio>
  [137] pushsymb 51 ............................. <#location>
  [139] getlocal 5 .............................. <iLocation>
  [141] pusharglistnoret 3 ...................... <aStudio, #location, iLocation>
  [143] objcall 73 .............................. aStudio[#location] = iLocation
  [145] getlocal 8 .............................. <aStudio>
  [147] pushsymb 52 ............................. <#layout>
  [149] getlocal 6 .............................. <iLayout>
  [151] pusharglistnoret 3 ...................... <aStudio, #layout, iLayout>
  [153] objcall 73 .............................. aStudio[#layout] = iLayout
  [155] getlocal 8 .............................. <aStudio>
  [157] pushsymb 53 ............................. <#owner>
  [159] getlocal 7 .............................. <sOwner>
  [161] pusharglistnoret 3 ...................... <aStudio, #owner, sOwner>
  [163] objcall 73 .............................. aStudio[#owner] = sOwner
  [165] getlocal 8 .............................. <aStudio>
  [167] pusharglistnoret 1 ...................... <aStudio>
  [169] extcall 71 .............................. return aStudio
  [171] ret
end

on getStudioLocation me, sStudioID
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 135 ............................. <aPrivateStudioData>
  [  8] getobjprop 42 ........................... <aPrivateStudioData.count>
  [ 10] lteq
  [ 11] jmpifz [ 63] ............................ repeat with i = 1 to aPrivateStudioData.count
  [ 14] getprop 135 ............................. <aPrivateStudioData>
  [ 16] getlocal 0 .............................. <i>
  [ 18] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 20] objcall 43 .............................. <aPrivateStudioData[i]>
  [ 22] setlocal 1 .............................. aStudioData = aPrivateStudioData[i]
  [ 24] getlocal 1 .............................. <aStudioData>
  [ 26] pushsymb 45 ............................. <#studioId>
  [ 28] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 30] objcall 43 .............................. <aStudioData[#studioId]>
  [ 32] getparam 1 .............................. <sStudioID>
  [ 34] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [ 35] jmpifz [ 54] ............................ if aStudioData[#studioId] = sStudioID then
  [ 38] getlocal 1 .............................. <aStudioData>
  [ 40] pushsymb 51 ............................. <#location>
  [ 42] pusharglist 2 ........................... <aStudioData, #location>
  [ 44] objcall 43 .............................. <aStudioData[#location]>
  [ 46] setlocal 2 .............................. iLocation = aStudioData[#location]
  [ 48] getlocal 2 .............................. <iLocation>
  [ 50] pusharglistnoret 1 ...................... <iLocation>
  [ 52] extcall 71 .............................. return iLocation
  [ 54] pushint8 1
  [ 56] getlocal 0
  [ 58] add
  [ 59] setlocal 0
  [ 61] endrepeat [  4]
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 0
  [ 67] getlocal 0
  [ 69] getglobal 31 ............................ <oPublicstudioData>
  [ 71] pushsymb 32 ............................. <#aStudioData>
  [ 73] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 75] objcall 42 .............................. <oPublicstudioData.aStudioData.count>
  [ 77] lteq
  [ 78] jmpifz [132] ............................ repeat with i = 1 to oPublicstudioData.aStudioData.count
  [ 81] getglobal 31 ............................ <oPublicstudioData>
  [ 83] pushsymb 32 ............................. <#aStudioData>
  [ 85] getlocal 0 .............................. <i>
  [ 87] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 89] objcall 75 .............................. <oPublicstudioData.aStudioData[i]>
  [ 91] setlocal 1 .............................. aStudioData = oPublicstudioData.aStudioData[i]
  [ 93] getlocal 1 .............................. <aStudioData>
  [ 95] pushsymb 45 ............................. <#studioId>
  [ 97] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 99] objcall 43 .............................. <aStudioData[#studioId]>
  [101] getparam 1 .............................. <sStudioID>
  [103] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [104] jmpifz [123] ............................ if aStudioData[#studioId] = sStudioID then
  [107] getlocal 1 .............................. <aStudioData>
  [109] pushsymb 51 ............................. <#location>
  [111] pusharglist 2 ........................... <aStudioData, #location>
  [113] objcall 43 .............................. <aStudioData[#location]>
  [115] setlocal 2 .............................. iLocation = aStudioData[#location]
  [117] getlocal 2 .............................. <iLocation>
  [119] pusharglistnoret 1 ...................... <iLocation>
  [121] extcall 71 .............................. return iLocation
  [123] pushint8 1
  [125] getlocal 0
  [127] add
  [128] setlocal 0
  [130] endrepeat [ 67]
  [132] ret
end

on getStudioLayout me, sStudioID, iLocation
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 135 ............................. <aPrivateStudioData>
  [  8] getobjprop 42 ........................... <aPrivateStudioData.count>
  [ 10] lteq
  [ 11] jmpifz [ 63] ............................ repeat with i = 1 to aPrivateStudioData.count
  [ 14] getprop 135 ............................. <aPrivateStudioData>
  [ 16] getlocal 0 .............................. <i>
  [ 18] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 20] objcall 43 .............................. <aPrivateStudioData[i]>
  [ 22] setlocal 1 .............................. aStudioData = aPrivateStudioData[i]
  [ 24] getlocal 1 .............................. <aStudioData>
  [ 26] pushsymb 45 ............................. <#studioId>
  [ 28] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 30] objcall 43 .............................. <aStudioData[#studioId]>
  [ 32] getparam 1 .............................. <sStudioID>
  [ 34] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [ 35] jmpifz [ 54] ............................ if aStudioData[#studioId] = sStudioID then
  [ 38] getlocal 1 .............................. <aStudioData>
  [ 40] pushsymb 52 ............................. <#layout>
  [ 42] pusharglist 2 ........................... <aStudioData, #layout>
  [ 44] objcall 43 .............................. <aStudioData[#layout]>
  [ 46] setlocal 2 .............................. iLayout = aStudioData[#layout]
  [ 48] getlocal 2 .............................. <iLayout>
  [ 50] pusharglistnoret 1 ...................... <iLayout>
  [ 52] extcall 71 .............................. return iLayout
  [ 54] pushint8 1
  [ 56] getlocal 0
  [ 58] add
  [ 59] setlocal 0
  [ 61] endrepeat [  4]
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 0
  [ 67] getlocal 0
  [ 69] getglobal 31 ............................ <oPublicstudioData>
  [ 71] pushsymb 32 ............................. <#aStudioData>
  [ 73] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 75] objcall 42 .............................. <oPublicstudioData.aStudioData.count>
  [ 77] lteq
  [ 78] jmpifz [132] ............................ repeat with i = 1 to oPublicstudioData.aStudioData.count
  [ 81] getglobal 31 ............................ <oPublicstudioData>
  [ 83] pushsymb 32 ............................. <#aStudioData>
  [ 85] getlocal 0 .............................. <i>
  [ 87] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 89] objcall 75 .............................. <oPublicstudioData.aStudioData[i]>
  [ 91] setlocal 1 .............................. aStudioData = oPublicstudioData.aStudioData[i]
  [ 93] getlocal 1 .............................. <aStudioData>
  [ 95] pushsymb 45 ............................. <#studioId>
  [ 97] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 99] objcall 43 .............................. <aStudioData[#studioId]>
  [101] getparam 1 .............................. <sStudioID>
  [103] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [104] jmpifz [123] ............................ if aStudioData[#studioId] = sStudioID then
  [107] getlocal 1 .............................. <aStudioData>
  [109] pushsymb 52 ............................. <#layout>
  [111] pusharglist 2 ........................... <aStudioData, #layout>
  [113] objcall 43 .............................. <aStudioData[#layout]>
  [115] setlocal 2 .............................. iLayout = aStudioData[#layout]
  [117] getlocal 2 .............................. <iLayout>
  [119] pusharglistnoret 1 ...................... <iLayout>
  [121] extcall 71 .............................. return iLayout
  [123] pushint8 1
  [125] getlocal 0
  [127] add
  [128] setlocal 0
  [130] endrepeat [ 67]
  [132] ret
end

on getStudioName me, sStudioID
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 135 ............................. <aPrivateStudioData>
  [  8] getobjprop 42 ........................... <aPrivateStudioData.count>
  [ 10] lteq
  [ 11] jmpifz [ 59] ............................ repeat with i = 1 to aPrivateStudioData.count
  [ 14] getprop 135 ............................. <aPrivateStudioData>
  [ 16] getlocal 0 .............................. <i>
  [ 18] pusharglist 2 ........................... <aPrivateStudioData, i>
  [ 20] objcall 43 .............................. <aPrivateStudioData[i]>
  [ 22] setlocal 1 .............................. aStudioData = aPrivateStudioData[i]
  [ 24] getlocal 1 .............................. <aStudioData>
  [ 26] pushsymb 45 ............................. <#studioId>
  [ 28] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 30] objcall 43 .............................. <aStudioData[#studioId]>
  [ 32] getparam 1 .............................. <sStudioID>
  [ 34] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [ 35] jmpifz [ 50] ............................ if aStudioData[#studioId] = sStudioID then
  [ 38] getlocal 1 .............................. <aStudioData>
  [ 40] pushsymb 46 ............................. <#name>
  [ 42] pusharglist 2 ........................... <aStudioData, #name>
  [ 44] objcall 43 .............................. <aStudioData[#name]>
  [ 46] pusharglistnoret 1 ...................... <aStudioData[#name]>
  [ 48] extcall 71 .............................. return aStudioData[#name]
  [ 50] pushint8 1
  [ 52] getlocal 0
  [ 54] add
  [ 55] setlocal 0
  [ 57] endrepeat [  4]
  [ 59] pushint8 1 .............................. <1>
  [ 61] setlocal 0
  [ 63] getlocal 0
  [ 65] getglobal 31 ............................ <oPublicstudioData>
  [ 67] pushsymb 32 ............................. <#aStudioData>
  [ 69] pusharglist 2 ........................... <oPublicstudioData, #aStudioData>
  [ 71] objcall 42 .............................. <oPublicstudioData.aStudioData.count>
  [ 73] lteq
  [ 74] jmpifz [124] ............................ repeat with i = 1 to oPublicstudioData.aStudioData.count
  [ 77] getglobal 31 ............................ <oPublicstudioData>
  [ 79] pushsymb 32 ............................. <#aStudioData>
  [ 81] getlocal 0 .............................. <i>
  [ 83] pusharglist 3 ........................... <oPublicstudioData, #aStudioData, i>
  [ 85] objcall 75 .............................. <oPublicstudioData.aStudioData[i]>
  [ 87] setlocal 1 .............................. aStudioData = oPublicstudioData.aStudioData[i]
  [ 89] getlocal 1 .............................. <aStudioData>
  [ 91] pushsymb 45 ............................. <#studioId>
  [ 93] pusharglist 2 ........................... <aStudioData, #studioId>
  [ 95] objcall 43 .............................. <aStudioData[#studioId]>
  [ 97] getparam 1 .............................. <sStudioID>
  [ 99] eq ...................................... <aStudioData[#studioId] = sStudioID>
  [100] jmpifz [115] ............................ if aStudioData[#studioId] = sStudioID then
  [103] getlocal 1 .............................. <aStudioData>
  [105] pushsymb 46 ............................. <#name>
  [107] pusharglist 2 ........................... <aStudioData, #name>
  [109] objcall 43 .............................. <aStudioData[#name]>
  [111] pusharglistnoret 1 ...................... <aStudioData[#name]>
  [113] extcall 71 .............................. return aStudioData[#name]
  [115] pushint8 1
  [117] getlocal 0
  [119] add
  [120] setlocal 0
  [122] endrepeat [ 63]
  [124] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 3 ............................ <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 2 ............................... <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 71 .............................. return sprite(me.spriteNum)
  [ 12] ret
end

on getTestStudios me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aStudioData = []
  [  5] getlocal 0 .............................. <aStudioData>
  [  7] pushsymb 45 ............................. <#studioId>
  [  9] pushcons 112 ............................ <"Aslan$1">
  [ 11] pushsymb 46 ............................. <#name>
  [ 13] pushcons 113 ............................ <"1">
  [ 15] pushsymb 47 ............................. <#description>
  [ 17] pushcons 114 ............................ <"test">
  [ 19] pushsymb 49 ............................. <#userCount>
  [ 21] pushzero ................................ <0>
  [ 22] pushsymb 50 ............................. <#capacity>
  [ 24] pushint8 25 ............................. <25>
  [ 26] pushsymb 51 ............................. <#location>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pushsymb 52 ............................. <#layout>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pushsymb 54 ............................. <#server>
  [ 36] pushcons 115 ............................ <"sfdev1.cokemusi">
  [ 38] pushsymb 53 ............................. <#owner>
  [ 40] pushcons 116 ............................ <"aslan">
  [ 42] pusharglist 18 .......................... <[#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 44] pushproplist ............................ <[#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 45] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 47] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$1", #name: "1", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [ 49] getlocal 0 .............................. <aStudioData>
  [ 51] pushsymb 45 ............................. <#studioId>
  [ 53] pushcons 117 ............................ <"Aslan$2">
  [ 55] pushsymb 46 ............................. <#name>
  [ 57] pushcons 118 ............................ <"2">
  [ 59] pushsymb 47 ............................. <#description>
  [ 61] pushcons 119 ............................ <"test description">
  [ 63] pushsymb 49 ............................. <#userCount>
  [ 65] pushzero ................................ <0>
  [ 66] pushsymb 50 ............................. <#capacity>
  [ 68] pushint8 25 ............................. <25>
  [ 70] pushsymb 51 ............................. <#location>
  [ 72] pushint8 2 .............................. <2>
  [ 74] pushsymb 52 ............................. <#layout>
  [ 76] pushint8 2 .............................. <2>
  [ 78] pushsymb 54 ............................. <#server>
  [ 80] pushcons 115 ............................ <"sfdev1.cokemusi">
  [ 82] pushsymb 53 ............................. <#owner>
  [ 84] pushcons 116 ............................ <"aslan">
  [ 86] pusharglist 18 .......................... <[#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 88] pushproplist ............................ <[#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 89] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 91] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$2", #name: "2", #description: "test description", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [ 93] getlocal 0 .............................. <aStudioData>
  [ 95] pushsymb 45 ............................. <#studioId>
  [ 97] pushcons 120 ............................ <"Aslan$3">
  [ 99] pushsymb 46 ............................. <#name>
  [101] pushcons 121 ............................ <"3">
  [103] pushsymb 47 ............................. <#description>
  [105] pushcons 122 ............................ <"blah">
  [107] pushsymb 49 ............................. <#userCount>
  [109] pushzero ................................ <0>
  [110] pushsymb 50 ............................. <#capacity>
  [112] pushint8 25 ............................. <25>
  [114] pushsymb 51 ............................. <#location>
  [116] pushint8 1 .............................. <1>
  [118] pushsymb 52 ............................. <#layout>
  [120] pushint8 3 .............................. <3>
  [122] pushsymb 54 ............................. <#server>
  [124] pushcons 115 ............................ <"sfdev1.cokemusi">
  [126] pushsymb 53 ............................. <#owner>
  [128] pushcons 116 ............................ <"aslan">
  [130] pusharglist 18 .......................... <[#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [132] pushproplist ............................ <[#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [133] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [135] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$3", #name: "3", #description: "blah", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [137] getlocal 0 .............................. <aStudioData>
  [139] pushsymb 45 ............................. <#studioId>
  [141] pushcons 123 ............................ <"Aslan$4">
  [143] pushsymb 46 ............................. <#name>
  [145] pushcons 124 ............................ <"4">
  [147] pushsymb 47 ............................. <#description>
  [149] pusharglist 0 ........................... <>
  [151] extcall 190 ............................. <VOID>
  [153] pushsymb 49 ............................. <#userCount>
  [155] pushzero ................................ <0>
  [156] pushsymb 50 ............................. <#capacity>
  [158] pushint8 25 ............................. <25>
  [160] pushsymb 51 ............................. <#location>
  [162] pushint8 1 .............................. <1>
  [164] pushsymb 52 ............................. <#layout>
  [166] pushint8 4 .............................. <4>
  [168] pushsymb 54 ............................. <#server>
  [170] pushcons 115 ............................ <"sfdev1.cokemusi">
  [172] pushsymb 53 ............................. <#owner>
  [174] pushcons 116 ............................ <"aslan">
  [176] pusharglist 18 .......................... <[#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [178] pushproplist ............................ <[#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [179] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [181] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$4", #name: "4", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [183] getlocal 0 .............................. <aStudioData>
  [185] pushsymb 45 ............................. <#studioId>
  [187] pushcons 125 ............................ <"Aslan$5">
  [189] pushsymb 46 ............................. <#name>
  [191] pushcons 126 ............................ <"5">
  [193] pushsymb 47 ............................. <#description>
  [195] pusharglist 0 ........................... <>
  [197] extcall 190 ............................. <VOID>
  [199] pushsymb 49 ............................. <#userCount>
  [201] pushzero ................................ <0>
  [202] pushsymb 50 ............................. <#capacity>
  [204] pushint8 25 ............................. <25>
  [206] pushsymb 51 ............................. <#location>
  [208] pushint8 1 .............................. <1>
  [210] pushsymb 52 ............................. <#layout>
  [212] pushint8 4 .............................. <4>
  [214] pushsymb 54 ............................. <#server>
  [216] pushcons 115 ............................ <"sfdev1.cokemusi">
  [218] pushsymb 53 ............................. <#owner>
  [220] pushcons 116 ............................ <"aslan">
  [222] pusharglist 18 .......................... <[#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [224] pushproplist ............................ <[#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [225] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [227] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$5", #name: "5", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [229] getlocal 0 .............................. <aStudioData>
  [231] pushsymb 45 ............................. <#studioId>
  [233] pushcons 127 ............................ <"Aslan$6">
  [235] pushsymb 46 ............................. <#name>
  [237] pushcons 128 ............................ <"6">
  [239] pushsymb 47 ............................. <#description>
  [241] pusharglist 0 ........................... <>
  [243] extcall 190 ............................. <VOID>
  [245] pushsymb 49 ............................. <#userCount>
  [247] pushzero ................................ <0>
  [248] pushsymb 50 ............................. <#capacity>
  [250] pushint8 25 ............................. <25>
  [252] pushsymb 51 ............................. <#location>
  [254] pushint8 1 .............................. <1>
  [256] pushsymb 52 ............................. <#layout>
  [258] pushint8 4 .............................. <4>
  [260] pushsymb 54 ............................. <#server>
  [262] pushcons 115 ............................ <"sfdev1.cokemusi">
  [264] pushsymb 53 ............................. <#owner>
  [266] pushcons 116 ............................ <"aslan">
  [268] pusharglist 18 .......................... <[#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [270] pushproplist ............................ <[#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [271] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [273] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$6", #name: "6", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [275] getlocal 0 .............................. <aStudioData>
  [277] pushsymb 45 ............................. <#studioId>
  [279] pushcons 129 ............................ <"Aslan$7">
  [281] pushsymb 46 ............................. <#name>
  [283] pushcons 130 ............................ <"7">
  [285] pushsymb 47 ............................. <#description>
  [287] pusharglist 0 ........................... <>
  [289] extcall 190 ............................. <VOID>
  [291] pushsymb 49 ............................. <#userCount>
  [293] pushzero ................................ <0>
  [294] pushsymb 50 ............................. <#capacity>
  [296] pushint8 25 ............................. <25>
  [298] pushsymb 51 ............................. <#location>
  [300] pushint8 1 .............................. <1>
  [302] pushsymb 52 ............................. <#layout>
  [304] pushint8 4 .............................. <4>
  [306] pushsymb 54 ............................. <#server>
  [308] pushcons 115 ............................ <"sfdev1.cokemusi">
  [310] pushsymb 53 ............................. <#owner>
  [312] pushcons 116 ............................ <"aslan">
  [314] pusharglist 18 .......................... <[#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [316] pushproplist ............................ <[#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [317] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [319] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$7", #name: "7", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [321] getlocal 0 .............................. <aStudioData>
  [323] pushsymb 45 ............................. <#studioId>
  [325] pushcons 131 ............................ <"Aslan$8">
  [327] pushsymb 46 ............................. <#name>
  [329] pushcons 132 ............................ <"8">
  [331] pushsymb 47 ............................. <#description>
  [333] pusharglist 0 ........................... <>
  [335] extcall 190 ............................. <VOID>
  [337] pushsymb 49 ............................. <#userCount>
  [339] pushzero ................................ <0>
  [340] pushsymb 50 ............................. <#capacity>
  [342] pushint8 25 ............................. <25>
  [344] pushsymb 51 ............................. <#location>
  [346] pushint8 1 .............................. <1>
  [348] pushsymb 52 ............................. <#layout>
  [350] pushint8 4 .............................. <4>
  [352] pushsymb 54 ............................. <#server>
  [354] pushcons 115 ............................ <"sfdev1.cokemusi">
  [356] pushsymb 53 ............................. <#owner>
  [358] pushcons 116 ............................ <"aslan">
  [360] pusharglist 18 .......................... <[#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [362] pushproplist ............................ <[#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [363] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [365] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$8", #name: "8", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [367] getlocal 0 .............................. <aStudioData>
  [369] pushsymb 45 ............................. <#studioId>
  [371] pushcons 133 ............................ <"Aslan$9">
  [373] pushsymb 46 ............................. <#name>
  [375] pushcons 134 ............................ <"9">
  [377] pushsymb 47 ............................. <#description>
  [379] pusharglist 0 ........................... <>
  [381] extcall 190 ............................. <VOID>
  [383] pushsymb 49 ............................. <#userCount>
  [385] pushzero ................................ <0>
  [386] pushsymb 50 ............................. <#capacity>
  [388] pushint8 25 ............................. <25>
  [390] pushsymb 51 ............................. <#location>
  [392] pushint8 1 .............................. <1>
  [394] pushsymb 52 ............................. <#layout>
  [396] pushint8 4 .............................. <4>
  [398] pushsymb 54 ............................. <#server>
  [400] pushcons 115 ............................ <"sfdev1.cokemusi">
  [402] pushsymb 53 ............................. <#owner>
  [404] pushcons 116 ............................ <"aslan">
  [406] pusharglist 18 .......................... <[#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [408] pushproplist ............................ <[#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [409] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [411] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$9", #name: "9", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [413] getlocal 0 .............................. <aStudioData>
  [415] pushsymb 45 ............................. <#studioId>
  [417] pushcons 135 ............................ <"Aslan$10">
  [419] pushsymb 46 ............................. <#name>
  [421] pushcons 136 ............................ <"10">
  [423] pushsymb 47 ............................. <#description>
  [425] pusharglist 0 ........................... <>
  [427] extcall 190 ............................. <VOID>
  [429] pushsymb 49 ............................. <#userCount>
  [431] pushzero ................................ <0>
  [432] pushsymb 50 ............................. <#capacity>
  [434] pushint8 25 ............................. <25>
  [436] pushsymb 51 ............................. <#location>
  [438] pushint8 1 .............................. <1>
  [440] pushsymb 52 ............................. <#layout>
  [442] pushint8 4 .............................. <4>
  [444] pushsymb 54 ............................. <#server>
  [446] pushcons 115 ............................ <"sfdev1.cokemusi">
  [448] pushsymb 53 ............................. <#owner>
  [450] pushcons 116 ............................ <"aslan">
  [452] pusharglist 18 .......................... <[#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [454] pushproplist ............................ <[#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [455] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [457] objcall 55 .............................. aStudioData.add([#studioId: "Aslan$10", #name: "10", #description: VOID, #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "aslan"])
  [459] getlocal 0 .............................. <aStudioData>
  [461] pushsymb 45 ............................. <#studioId>
  [463] pushcons 137 ............................ <"freeble$1">
  [465] pushsymb 46 ............................. <#name>
  [467] pushcons 138 ............................ <"Studio E">
  [469] pushsymb 47 ............................. <#description>
  [471] pushcons 139 ............................ <"crib">
  [473] pushsymb 49 ............................. <#userCount>
  [475] pushzero ................................ <0>
  [476] pushsymb 50 ............................. <#capacity>
  [478] pushint8 25 ............................. <25>
  [480] pushsymb 51 ............................. <#location>
  [482] pushint8 1 .............................. <1>
  [484] pushsymb 52 ............................. <#layout>
  [486] pushint8 1 .............................. <1>
  [488] pushsymb 54 ............................. <#server>
  [490] pushcons 115 ............................ <"sfdev1.cokemusi">
  [492] pushsymb 53 ............................. <#owner>
  [494] pushcons 140 ............................ <"freeble">
  [496] pusharglist 18 .......................... <[#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [498] pushproplist ............................ <[#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [499] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [501] objcall 55 .............................. aStudioData.add([#studioId: "freeble$1", #name: "Studio E", #description: "crib", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [503] getlocal 0 .............................. <aStudioData>
  [505] pushsymb 45 ............................. <#studioId>
  [507] pushcons 141 ............................ <"freeble$2">
  [509] pushsymb 46 ............................. <#name>
  [511] pushcons 142 ............................ <"Studio F">
  [513] pushsymb 47 ............................. <#description>
  [515] pushcons 143 ............................ <"basement tapes">
  [517] pushsymb 49 ............................. <#userCount>
  [519] pushzero ................................ <0>
  [520] pushsymb 50 ............................. <#capacity>
  [522] pushint8 25 ............................. <25>
  [524] pushsymb 51 ............................. <#location>
  [526] pushint8 2 .............................. <2>
  [528] pushsymb 52 ............................. <#layout>
  [530] pushint8 2 .............................. <2>
  [532] pushsymb 54 ............................. <#server>
  [534] pushcons 115 ............................ <"sfdev1.cokemusi">
  [536] pushsymb 53 ............................. <#owner>
  [538] pushcons 140 ............................ <"freeble">
  [540] pusharglist 18 .......................... <[#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [542] pushproplist ............................ <[#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [543] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [545] objcall 55 .............................. aStudioData.add([#studioId: "freeble$2", #name: "Studio F", #description: "basement tapes", #userCount: 0, #capacity: 25, #location: 2, #layout: 2, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [547] getlocal 0 .............................. <aStudioData>
  [549] pushsymb 45 ............................. <#studioId>
  [551] pushcons 144 ............................ <"freeble$3">
  [553] pushsymb 46 ............................. <#name>
  [555] pushcons 145 ............................ <"Studio G">
  [557] pushsymb 47 ............................. <#description>
  [559] pushcons 146 ............................ <"loft experience">
  [561] pushsymb 49 ............................. <#userCount>
  [563] pushzero ................................ <0>
  [564] pushsymb 50 ............................. <#capacity>
  [566] pushint8 25 ............................. <25>
  [568] pushsymb 51 ............................. <#location>
  [570] pushint8 1 .............................. <1>
  [572] pushsymb 52 ............................. <#layout>
  [574] pushint8 3 .............................. <3>
  [576] pushsymb 54 ............................. <#server>
  [578] pushcons 115 ............................ <"sfdev1.cokemusi">
  [580] pushsymb 53 ............................. <#owner>
  [582] pushcons 140 ............................ <"freeble">
  [584] pusharglist 18 .......................... <[#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [586] pushproplist ............................ <[#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [587] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [589] objcall 55 .............................. aStudioData.add([#studioId: "freeble$3", #name: "Studio G", #description: "loft experience", #userCount: 0, #capacity: 25, #location: 1, #layout: 3, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [591] getlocal 0 .............................. <aStudioData>
  [593] pushsymb 45 ............................. <#studioId>
  [595] pushcons 147 ............................ <"freeble$4">
  [597] pushsymb 46 ............................. <#name>
  [599] pushcons 148 ............................ <"Studio H">
  [601] pushsymb 47 ............................. <#description>
  [603] pushcons 149 ............................ <"toys in the attic">
  [605] pushsymb 49 ............................. <#userCount>
  [607] pushzero ................................ <0>
  [608] pushsymb 50 ............................. <#capacity>
  [610] pushint8 25 ............................. <25>
  [612] pushsymb 51 ............................. <#location>
  [614] pushint8 1 .............................. <1>
  [616] pushsymb 52 ............................. <#layout>
  [618] pushint8 4 .............................. <4>
  [620] pushsymb 54 ............................. <#server>
  [622] pushcons 115 ............................ <"sfdev1.cokemusi">
  [624] pushsymb 53 ............................. <#owner>
  [626] pushcons 140 ............................ <"freeble">
  [628] pusharglist 18 .......................... <[#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [630] pushproplist ............................ <[#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [631] pusharglistnoret 2 ...................... <aStudioData, [#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"]>
  [633] objcall 55 .............................. aStudioData.add([#studioId: "freeble$4", #name: "Studio H", #description: "toys in the attic", #userCount: 0, #capacity: 25, #location: 1, #layout: 4, #server: "sfdev1.cokemusi", #owner: "freeble"])
  [635] getlocal 0 .............................. <aStudioData>
  [637] pusharglistnoret 1 ...................... <aStudioData>
  [639] extcall 71 .............................. return aStudioData
  [641] ret
end

on getTestStudio me
  [  0] pushsymb 45 ............................. <#studioId>
  [  2] pushcons 150 ............................ <"aslan2">
  [  4] pushsymb 46 ............................. <#name>
  [  6] pushcons 114 ............................ <"test">
  [  8] pushsymb 47 ............................. <#description>
  [ 10] pushcons 114 ............................ <"test">
  [ 12] pushsymb 49 ............................. <#userCount>
  [ 14] pushzero ................................ <0>
  [ 15] pushsymb 50 ............................. <#capacity>
  [ 17] pushint8 25 ............................. <25>
  [ 19] pushsymb 51 ............................. <#location>
  [ 21] pushint8 1 .............................. <1>
  [ 23] pushsymb 52 ............................. <#layout>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pushsymb 54 ............................. <#server>
  [ 29] pushcons 115 ............................ <"sfdev1.cokemusi">
  [ 31] pushsymb 53 ............................. <#owner>
  [ 33] pushcons 116 ............................ <"aslan">
  [ 35] pusharglist 18 .......................... <[#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 37] pushproplist ............................ <[#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 38] pusharglistnoret 1 ...................... <[#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]>
  [ 40] extcall 71 .............................. return [#studioId: "aslan2", #name: "test", #description: "test", #userCount: 0, #capacity: 25, #location: 1, #layout: 1, #server: "sfdev1.cokemusi", #owner: "aslan"]
  [ 42] ret
end

on getDefaultGameServer me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 161 ...................... <me.fo_level0>
  [  4] pusharglist 1 ........................... <me.fo_level0>
  [  6] objcall 134 ............................. <me.fo_level0.getDefaultGameServer()>
  [  8] pusharglistnoret 1 ...................... <me.fo_level0.getDefaultGameServer()>
  [ 10] extcall 71 .............................. return me.fo_level0.getDefaultGameServer()
  [ 12] ret
end
