property aSprites, oItem, iPreviewRegPoint, aInfoStandProps, aDescriptionTextProps, oDescRect, oDescMember, sButtonBase, aDynamicMembers, sCastLib, sActive, sPressed, bOverwriteImages
global oIsoScene, gCatalog, oDenizenManager, oStudio, oPossessionStudio, ElementMgr, oStudioMap, gFeatureSet, oSession

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"InfoStandDescription">
  [  4] pusharglist 1 ........................... <"InfoStandDescription">
  [  6] extcall 163 ............................. <member("InfoStandDescription")>
  [  8] setobjprop 1553 ......................... me.oDescMember = member("InfoStandDescription")
  [ 11] getparam 0 .............................. <me>
  [ 13] getchainedprop 1553 ..................... <me.oDescMember>
  [ 16] pushint16 255 ........................... <255>
  [ 19] setobjprop 655 .......................... me.oDescMember.backColor = 255
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 1553 ..................... <me.oDescMember>
  [ 27] pushint8 10 ............................. <10>
  [ 29] setobjprop 1362 ......................... me.oDescMember.fontSize = 10
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 1553 ..................... <me.oDescMember>
  [ 37] pushcons 1 .............................. <"plain">
  [ 39] setobjprop 1364 ......................... me.oDescMember.fontStyle = "plain"
  [ 42] getparam 0 .............................. <me>
  [ 44] pushsymb 163 ............................ <#member>
  [ 46] pushcons 2 .............................. <"cc.infostand">
  [ 48] pushsymb 146 ............................ <#x>
  [ 50] pushint16 695 ........................... <695>
  [ 53] pushsymb 344 ............................ <#y>
  [ 56] pushint16 345 ........................... <345>
  [ 59] pushsymb 491 ............................ <#ink>
  [ 62] pushint8 8 .............................. <8>
  [ 64] pusharglist 8 ........................... <[#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]>
  [ 66] pushproplist ............................ <[#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]>
  [ 67] setobjprop 1554 ......................... me.aInfoStandProps = [#member: "cc.infostand", #x: 695, #y: 345, #ink: 8]
  [ 70] getparam 0 .............................. <me>
  [ 72] pushint16 723 ........................... <723>
  [ 75] pushint16 364 ........................... <364>
  [ 78] pusharglist 2 ........................... <723, 364>
  [ 80] extcall 325 ............................. <point(723, 364)>
  [ 83] setobjprop 1555 ......................... me.iPreviewRegPoint = point(723, 364)
  [ 86] pushint16 560 ........................... <560>
  [ 89] setlocal 0 .............................. iDescX = 560
  [ 91] pushint16 380 ........................... <380>
  [ 94] setlocal 1 .............................. iDescY = 380
  [ 96] pushint16 190 ........................... <190>
  [ 99] setlocal 2 .............................. iDescWidth = 190
  [101] pushint8 55 ............................. <55>
  [103] setlocal 3 .............................. iDescHeight = 55
  [105] getparam 0 .............................. <me>
  [107] getlocal 0 .............................. <iDescX>
  [109] getlocal 1 .............................. <iDescY>
  [111] getlocal 0 .............................. <iDescX>
  [113] getlocal 2 .............................. <iDescWidth>
  [115] add ..................................... <iDescX + iDescWidth>
  [116] getlocal 1 .............................. <iDescY>
  [118] getlocal 3 .............................. <iDescHeight>
  [120] add ..................................... <iDescY + iDescHeight>
  [121] pusharglist 4 ........................... <iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight>
  [123] extcall 506 ............................. <rect(iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight)>
  [126] setobjprop 1556 ......................... me.oDescRect = rect(iDescX, iDescY, iDescX + iDescWidth, iDescY + iDescHeight)
  [129] getparam 0 .............................. <me>
  [131] pushsymb 163 ............................ <#member>
  [133] getparam 0 .............................. <me>
  [135] getobjprop 1553 ......................... <me.oDescMember>
  [138] pushsymb 146 ............................ <#x>
  [140] getparam 0 .............................. <me>
  [142] getchainedprop 1556 ..................... <me.oDescRect>
  [145] getobjprop 699 .......................... <me.oDescRect.left>
  [148] pushsymb 344 ............................ <#y>
  [151] getparam 0 .............................. <me>
  [153] getchainedprop 1556 ..................... <me.oDescRect>
  [156] getobjprop 509 .......................... <me.oDescRect.top>
  [159] pushsymb 491 ............................ <#ink>
  [162] pushint8 8 .............................. <8>
  [164] pusharglist 8 ........................... <[#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]>
  [166] pushproplist ............................ <[#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]>
  [167] setobjprop 1557 ......................... me.aDescriptionTextProps = [#member: me.oDescMember, #x: me.oDescRect.left, #y: me.oDescRect.top, #ink: 8]
  [170] getparam 0 .............................. <me>
  [172] pushcons 3 .............................. <"d1">
  [174] setobjprop 1558 ......................... me.sButtonBase = "d1"
  [177] getparam 0 .............................. <me>
  [179] pusharglist 0 ........................... <[]>
  [181] pushlist ................................ <[]>
  [182] setobjprop 1559 ......................... me.aDynamicMembers = []
  [185] getparam 0 .............................. <me>
  [187] pushcons 4 .............................. <"IsoEngine">
  [189] setobjprop 284 .......................... me.sCastLib = "IsoEngine"
  [192] getparam 0 .............................. <me>
  [194] pushcons 5 .............................. <"active">
  [196] setobjprop 1560 ......................... me.sActive = "active"
  [199] getparam 0 .............................. <me>
  [201] pushcons 6 .............................. <"pressed">
  [203] setobjprop 1561 ......................... me.sPressed = "pressed"
  [206] getparam 0 .............................. <me>
  [208] pushint8 1 .............................. <1>
  [210] setobjprop 1562 ......................... me.bOverwriteImages = 1
  [213] getparam 0 .............................. <me>
  [215] pusharglistnoret 1 ...................... <me>
  [217] extcall 93 .............................. return me
  [219] ret
end

on Init me
  [  0] ret
end

on clearInfoStand me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 360 ............................. me.destroy()
  [  7] ret
end

on display me, _oItem
  [  0] pushcons 7 .............................. <"infostand : received display()">
  [  2] pusharglistnoret 1 ...................... <"infostand : received display()">
  [  4] extcall 274 ............................. put "infostand : received display()"
  [  7] getparam 0 .............................. <me>
  [  9] pusharglistnoret 1 ...................... <me>
  [ 11] objcall 360 ............................. me.destroy()
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 1 .............................. <_oItem>
  [ 18] setobjprop 225 .......................... me.oItem = _oItem
  [ 20] pushcons 8 .............................. <"infostand : oItem = ">
  [ 22] getprop 225 ............................. <oItem>
  [ 24] joinstr ................................. <"infostand : oItem = " & oItem>
  [ 25] pusharglistnoret 1 ...................... <"infostand : oItem = " & oItem>
  [ 27] extcall 274 ............................. put "infostand : oItem = " & oItem
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 225 .......................... <me.oItem>
  [ 34] pusharglist 1 ........................... <me.oItem>
  [ 36] extcall 106 ............................. <voidp(me.oItem)>
  [ 38] jmpifz [ 45] ............................ if voidp(me.oItem) then
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 93 .............................. return 
  [ 45] getprop 225 ............................. <oItem>
  [ 47] pusharglist 1 ........................... <oItem>
  [ 49] objcall 172 ............................. <oItem.isWallItem()>
  [ 51] jmpifz [101] ............................ if oItem.isWallItem() then
  [ 54] getglobal 156 ........................... <oStudioMap>
  [ 56] pusharglist 1 ........................... <oStudioMap>
  [ 58] objcall 157 ............................. <oStudioMap.isPrivate()>
  [ 60] not ..................................... <not oStudioMap.isPrivate()>
  [ 61] jmpifz [ 69] ............................ if not oStudioMap.isPrivate() then
  [ 64] pushzero ................................ <0>
  [ 65] pusharglistnoret 1 ...................... <0>
  [ 67] extcall 93 .............................. return 0
  [ 69] getparam 0 .............................. <me>
  [ 71] pusharglistnoret 1 ...................... <me>
  [ 73] objcall 1539 ............................ me.displayInfoStand()
  [ 76] getparam 0 .............................. <me>
  [ 78] pusharglistnoret 1 ...................... <me>
  [ 80] objcall 1536 ............................ me.displayWallItem()
  [ 83] getparam 0 .............................. <me>
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglist 1 ........................... <me>
  [ 89] objcall 1545 ............................ <me.getWallItemButtonList()>
  [ 92] pusharglistnoret 2 ...................... <me, me.getWallItemButtonList()>
  [ 94] objcall 1546 ............................ me.DisplayButtons(me.getWallItemButtonList())
  [ 97] pusharglistnoret 0 ...................... <>
  [ 99] extcall 93 .............................. return 
  [101] getprop 225 ............................. <oItem>
  [103] pusharglist 1 ........................... <oItem>
  [105] objcall 220 ............................. <oItem.isFurniItem()>
  [107] jmpifz [177] ............................ if oItem.isFurniItem() then
  [110] pushcons 9 .............................. <"it's a furni item">
  [112] pusharglistnoret 1 ...................... <"it's a furni item">
  [114] extcall 274 ............................. put "it's a furni item"
  [117] getglobal 156 ........................... <oStudioMap>
  [119] pusharglist 1 ........................... <oStudioMap>
  [121] objcall 157 ............................. <oStudioMap.isPrivate()>
  [123] not ..................................... <not oStudioMap.isPrivate()>
  [124] jmpifz [132] ............................ if not oStudioMap.isPrivate() then
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 1 ...................... <0>
  [130] extcall 93 .............................. return 0
  [132] getprop 225 ............................. <oItem>
  [134] getobjprop 1273 ......................... <oItem.bHasPreview>
  [137] not ..................................... <not oItem.bHasPreview>
  [138] jmpifz [145] ............................ if not oItem.bHasPreview then
  [141] pusharglistnoret 0 ...................... <>
  [143] extcall 93 .............................. return 
  [145] getparam 0 .............................. <me>
  [147] pusharglistnoret 1 ...................... <me>
  [149] objcall 1539 ............................ me.displayInfoStand()
  [152] getparam 0 .............................. <me>
  [154] pusharglistnoret 1 ...................... <me>
  [156] objcall 1537 ............................ me.displayFurniItem()
  [159] getparam 0 .............................. <me>
  [161] getparam 0 .............................. <me>
  [163] pusharglist 1 ........................... <me>
  [165] objcall 1543 ............................ <me.getFurniItemButtonList()>
  [168] pusharglistnoret 2 ...................... <me, me.getFurniItemButtonList()>
  [170] objcall 1546 ............................ me.DisplayButtons(me.getFurniItemButtonList())
  [173] pusharglistnoret 0 ...................... <>
  [175] extcall 93 .............................. return 
  [177] getprop 225 ............................. <oItem>
  [179] pusharglist 1 ........................... <oItem>
  [181] objcall 154 ............................. <oItem.isAvatar()>
  [183] jmpifz [218] ............................ if oItem.isAvatar() then
  [186] getparam 0 .............................. <me>
  [188] pusharglistnoret 1 ...................... <me>
  [190] objcall 1539 ............................ me.displayInfoStand()
  [193] getparam 0 .............................. <me>
  [195] pusharglistnoret 1 ...................... <me>
  [197] objcall 1538 ............................ me.displayAvatar()
  [200] getparam 0 .............................. <me>
  [202] getparam 0 .............................. <me>
  [204] pusharglist 1 ........................... <me>
  [206] objcall 1544 ............................ <me.getAvatarButtonList()>
  [209] pusharglistnoret 2 ...................... <me, me.getAvatarButtonList()>
  [211] objcall 1546 ............................ me.DisplayButtons(me.getAvatarButtonList())
  [214] pusharglistnoret 0 ...................... <>
  [216] extcall 93 .............................. return 
  [218] ret
end

on displayCd me, foCd
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 1 .............................. <foCd>
  [ 15] pusharglist 1 ........................... <foCd>
  [ 17] extcall 106 ............................. <voidp(foCd)>
  [ 19] jmpifz [ 26] ............................ if voidp(foCd) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 93 .............................. return 
  [ 26] getparam 1 .............................. <foCd>
  [ 28] pusharglist 1 ........................... <foCd>
  [ 30] objcall 1567 ............................ <foCd.getCatId()>
  [ 33] setlocal 0 .............................. iCatId = foCd.getCatId()
  [ 35] getparam 1 .............................. <foCd>
  [ 37] pusharglist 1 ........................... <foCd>
  [ 39] objcall 1568 ............................ <foCd.getAuthorName()>
  [ 42] setlocal 1 .............................. sAuthor = foCd.getAuthorName()
  [ 44] getparam 1 .............................. <foCd>
  [ 46] pusharglist 1 ........................... <foCd>
  [ 48] objcall 1569 ............................ <foCd.getSongName()>
  [ 51] setlocal 2 .............................. sSongName = foCd.getSongName()
  [ 53] getglobal 158 ........................... <gCatalog>
  [ 55] getlocal 0 .............................. <iCatId>
  [ 57] pusharglist 1 ........................... <iCatId>
  [ 59] extcall 108 ............................. <integer(iCatId)>
  [ 61] pusharglist 2 ........................... <gCatalog, integer(iCatId)>
  [ 63] objcall 160 ............................. <gCatalog.getItemByProdId(integer(iCatId))>
  [ 65] setlocal 3 .............................. aCatItem = gCatalog.getItemByProdId(integer(iCatId))
  [ 67] getlocal 3 .............................. <aCatItem>
  [ 69] pusharglist 1 ........................... <aCatItem>
  [ 71] extcall 106 ............................. <voidp(aCatItem)>
  [ 73] jmpifz [ 80] ............................ if voidp(aCatItem) then
  [ 76] pusharglistnoret 0 ...................... <>
  [ 78] extcall 93 .............................. return 
  [ 80] getlocal 3 .............................. <aCatItem>
  [ 82] pushsymb 1085 ........................... <#imageBase>
  [ 85] pusharglist 2 ........................... <aCatItem, #imageBase>
  [ 87] objcall 151 ............................. <aCatItem[#imageBase]>
  [ 89] setlocal 4 .............................. sImageBase = aCatItem[#imageBase]
  [ 91] getlocal 4 .............................. <sImageBase>
  [ 93] pushcons 10 ............................. <"_small">
  [ 95] joinstr ................................. <sImageBase & "_small">
  [ 96] pusharglist 1 ........................... <sImageBase & "_small">
  [ 98] extcall 163 ............................. <member(sImageBase & "_small")>
  [100] setlocal 5 .............................. oPreviewImage = member(sImageBase & "_small")
  [102] getlocal 5 .............................. <oPreviewImage>
  [104] getobjprop 639 .......................... <oPreviewImage.memberNum>
  [107] pushint8 1 .............................. <1>
  [109] inv ..................................... <-1>
  [110] eq ...................................... <oPreviewImage.memberNum = -1>
  [111] jmpifz [118] ............................ if oPreviewImage.memberNum = -1 then
  [114] pusharglistnoret 0 ...................... <>
  [116] extcall 93 .............................. return 
  [118] getparam 0 .............................. <me>
  [120] pusharglistnoret 1 ...................... <me>
  [122] objcall 360 ............................. me.destroy()
  [125] getparam 0 .............................. <me>
  [127] pusharglistnoret 1 ...................... <me>
  [129] objcall 1539 ............................ me.displayInfoStand()
  [132] getparam 0 .............................. <me>
  [134] getlocal 5 .............................. <oPreviewImage>
  [136] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [138] objcall 1540 ............................ me.displayPreviewImage(oPreviewImage)
  [141] pushcons 11 ............................. <"NOW PLAYING">
  [143] pushcons 12 ............................. <RETURN>
  [145] joinstr ................................. <"NOW PLAYING" & RETURN>
  [146] getlocal 2 .............................. <sSongName>
  [148] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName>
  [149] pushcons 12 ............................. <RETURN>
  [151] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN>
  [152] pushcons 13 ............................. <"by: ">
  [154] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: ">
  [155] getlocal 1 .............................. <sAuthor>
  [157] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor>
  [158] pushcons 12 ............................. <RETURN>
  [160] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN>
  [161] setlocal 6 .............................. sText = "NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN
  [163] getglobal 228 ........................... <oStudio>
  [165] pusharglist 1 ........................... <oStudio>
  [167] objcall 229 ............................. <oStudio.getcdplayer()>
  [169] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [171] objcall 1570 ............................ <oStudio.getcdplayer().getThumbsUpVotes()>
  [174] pusharglist 1 ........................... <oStudio.getcdplayer().getThumbsUpVotes()>
  [176] extcall 108 ............................. <integer(oStudio.getcdplayer().getThumbsUpVotes())>
  [178] setlocal 7 .............................. iThumbsUp = integer(oStudio.getcdplayer().getThumbsUpVotes())
  [180] getglobal 228 ........................... <oStudio>
  [182] pusharglist 1 ........................... <oStudio>
  [184] objcall 229 ............................. <oStudio.getcdplayer()>
  [186] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [188] objcall 1571 ............................ <oStudio.getcdplayer().getThumbsDownVotes()>
  [191] pusharglist 1 ........................... <oStudio.getcdplayer().getThumbsDownVotes()>
  [193] extcall 108 ............................. <integer(oStudio.getcdplayer().getThumbsDownVotes())>
  [195] setlocal 8 .............................. iThumbsDown = integer(oStudio.getcdplayer().getThumbsDownVotes())
  [197] getparam 1 .............................. <foCd>
  [199] pusharglist 1 ........................... <foCd>
  [201] objcall 1551 ............................ <foCd.hasVoted()>
  [204] setlocal 9 .............................. bHasVoted = foCd.hasVoted()
  [206] getglobal 228 ........................... <oStudio>
  [208] pusharglist 1 ........................... <oStudio>
  [210] objcall 229 ............................. <oStudio.getcdplayer()>
  [212] getglobal 198 ........................... <oDenizenManager>
  [214] pusharglist 1 ........................... <oDenizenManager>
  [216] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [218] pusharglist 2 ........................... <oStudio.getcdplayer(), oDenizenManager.getScreenName()>
  [220] objcall 1572 ............................ <oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())>
  [223] setlocal 10 ............................. bEligibleVoter = oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())
  [225] getglobal 228 ........................... <oStudio>
  [227] pusharglist 1 ........................... <oStudio>
  [229] objcall 229 ............................. <oStudio.getcdplayer()>
  [231] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [233] objcall 206 ............................. <oStudio.getcdplayer().getAvatar()>
  [235] getglobal 198 ........................... <oDenizenManager>
  [237] pusharglist 1 ........................... <oDenizenManager>
  [239] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [241] eq ...................................... <oStudio.getcdplayer().getAvatar() = oDenizenManager.getScreenName()>
  [242] setlocal 11 ............................. bIsPlayer = oStudio.getcdplayer().getAvatar() = oDenizenManager.getScreenName()
  [244] getparam 1 .............................. <foCd>
  [246] pusharglist 1 ........................... <foCd>
  [248] objcall 1568 ............................ <foCd.getAuthorName()>
  [251] getglobal 198 ........................... <oDenizenManager>
  [253] pusharglist 1 ........................... <oDenizenManager>
  [255] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [257] eq ...................................... <foCd.getAuthorName() = oDenizenManager.getScreenName()>
  [258] setlocal 12 ............................. bIsAuthor = foCd.getAuthorName() = oDenizenManager.getScreenName()
  [260] getparam 1 .............................. <foCd>
  [262] pusharglist 1 ........................... <foCd>
  [264] objcall 1573 ............................ <foCd.getVote()>
  [267] pusharglist 1 ........................... <foCd.getVote()>
  [269] extcall 108 ............................. <integer(foCd.getVote())>
  [271] setlocal 13 ............................. iVote = integer(foCd.getVote())
  [273] getlocal 9 .............................. <bHasVoted>
  [275] jmpifz [312] ............................ if bHasVoted then / else
  [278] getlocal 6 .............................. <sText>
  [280] pushcons 14 ............................. <"Your vote: ">
  [282] joinstr ................................. <sText & "Your vote: ">
  [283] setlocal 6 .............................. sText = sText & "Your vote: "
  [285] getlocal 13 ............................. <iVote>
  [287] pushzero ................................ <0>
  [288] gteq .................................... <iVote >= 0>
  [289] jmpifz [302] ............................ if iVote >= 0 then / else
  [292] getlocal 6 .............................. <sText>
  [294] pushcons 15 ............................. <"Thumbs Up">
  [296] joinstr ................................. <sText & "Thumbs Up">
  [297] setlocal 6 .............................. sText = sText & "Thumbs Up"
  [299] jmp [309]
  [302] getlocal 6 .............................. <sText>
  [304] pushcons 16 ............................. <"Thumbs Down">
  [306] joinstr ................................. <sText & "Thumbs Down">
  [307] setlocal 6 .............................. sText = sText & "Thumbs Down"
  [309] jmp [349]
  [312] getlocal 10 ............................. <bEligibleVoter>
  [314] not ..................................... <not bEligibleVoter>
  [315] getlocal 11 ............................. <bIsPlayer>
  [317] not ..................................... <not bIsPlayer>
  [318] and ..................................... <not bEligibleVoter and not bIsPlayer>
  [319] jmpifz [332] ............................ if not bEligibleVoter and not bIsPlayer then / else
  [322] getlocal 6 .............................. <sText>
  [324] pushcons 17 ............................. <"Your vote: Thumbs Up">
  [326] joinstr ................................. <sText & "Your vote: Thumbs Up">
  [327] setlocal 6 .............................. sText = sText & "Your vote: Thumbs Up"
  [329] jmp [349]
  [332] getlocal 7 .............................. <iThumbsUp>
  [334] pushzero ................................ <0>
  [335] gt ...................................... <iThumbsUp > 0>
  [336] jmpifz [349] ............................ if iThumbsUp > 0 then
  [339] getlocal 6 .............................. <sText>
  [341] pushcons 18 ............................. <"Positive Votes: ">
  [343] joinstr ................................. <sText & "Positive Votes: ">
  [344] getlocal 7 .............................. <iThumbsUp>
  [346] joinstr ................................. <sText & "Positive Votes: " & iThumbsUp>
  [347] setlocal 6 .............................. sText = sText & "Positive Votes: " & iThumbsUp
  [349] getparam 0 .............................. <me>
  [351] getlocal 6 .............................. <sText>
  [353] pusharglistnoret 2 ...................... <me, sText>
  [355] objcall 1541 ............................ me.displayDescription(sText)
  [358] getparam 0 .............................. <me>
  [360] getparam 0 .............................. <me>
  [362] pusharglist 1 ........................... <me>
  [364] objcall 1542 ............................ <me.getBurnedCdButtonList()>
  [367] pusharglistnoret 2 ...................... <me, me.getBurnedCdButtonList()>
  [369] objcall 1546 ............................ me.DisplayButtons(me.getBurnedCdButtonList())
  [372] ret
end

on displayWallItem me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 225 ...................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 733 ............................. <me.oItem.getPreviewImage()>
  [  9] setlocal 0 .............................. oPreviewImage = me.oItem.getPreviewImage()
  [ 11] getparam 0 .............................. <me>
  [ 13] getlocal 0 .............................. <oPreviewImage>
  [ 15] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 17] objcall 1540 ............................ me.displayPreviewImage(oPreviewImage)
  [ 20] getparam 0 .............................. <me>
  [ 22] getchainedprop 225 ...................... <me.oItem>
  [ 24] pusharglist 1 ........................... <me.oItem>
  [ 26] objcall 159 ............................. <me.oItem.getProdId()>
  [ 28] setlocal 1 .............................. iProdId = me.oItem.getProdId()
  [ 30] getglobal 158 ........................... <gCatalog>
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 225 ...................... <me.oItem>
  [ 36] pusharglist 1 ........................... <me.oItem>
  [ 38] objcall 159 ............................. <me.oItem.getProdId()>
  [ 40] pusharglist 2 ........................... <gCatalog, me.oItem.getProdId()>
  [ 42] objcall 160 ............................. <gCatalog.getItemByProdId(me.oItem.getProdId())>
  [ 44] setlocal 2 .............................. aCatalogItem = gCatalog.getItemByProdId(me.oItem.getProdId())
  [ 46] getlocal 1 .............................. <iProdId>
  [ 48] pushint8 109 ............................ <109>
  [ 50] eq ...................................... <iProdId = 109>
  [ 51] jmpifz [ 78] ............................ if iProdId = 109 then / else
  [ 54] getlocal 2 .............................. <aCatalogItem>
  [ 56] pushsymb 161 ............................ <#name>
  [ 58] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 60] objcall 151 ............................. <aCatalogItem[#name]>
  [ 62] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 64] getlocal 2 .............................. <aCatalogItem>
  [ 66] pushsymb 1585 ........................... <#roomDesc>
  [ 69] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 71] objcall 151 ............................. <aCatalogItem[#roomDesc]>
  [ 73] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 75] jmp [ 99]
  [ 78] getlocal 2 .............................. <aCatalogItem>
  [ 80] pushsymb 161 ............................ <#name>
  [ 82] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 84] objcall 151 ............................. <aCatalogItem[#name]>
  [ 86] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 88] getlocal 2 .............................. <aCatalogItem>
  [ 90] pushsymb 1585 ........................... <#roomDesc>
  [ 93] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 95] objcall 151 ............................. <aCatalogItem[#roomDesc]>
  [ 97] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 99] getlocal 3 .............................. <sName>
  [101] pushcons 12 ............................. <RETURN>
  [103] joinstr ................................. <sName & RETURN>
  [104] getlocal 4 .............................. <sRoomDesc>
  [106] joinstr ................................. <sName & RETURN & sRoomDesc>
  [107] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [109] getparam 0 .............................. <me>
  [111] getchainedprop 225 ...................... <me.oItem>
  [113] getobjprop 288 .......................... <me.oItem.sAction>
  [116] pushcons 19 ............................. <"TOP_40_CHART">
  [118] eq ...................................... <me.oItem.sAction = "TOP_40_CHART">
  [119] jmpifz [261] ............................ if me.oItem.sAction = "TOP_40_CHART" then
  [122] getparam 0 .............................. <me>
  [124] getchainedprop 225 ...................... <me.oItem>
  [126] pushsymb 289 ............................ <#aAttributes>
  [129] pushsymb 1478 ........................... <#author>
  [132] pusharglist 3 ........................... <me.oItem, #aAttributes, #author>
  [134] objcall 611 ............................. <me.oItem.aAttributes[#author]>
  [137] setlocal 6 .............................. sAuthor = me.oItem.aAttributes[#author]
  [139] getparam 0 .............................. <me>
  [141] getchainedprop 225 ...................... <me.oItem>
  [143] pushsymb 289 ............................ <#aAttributes>
  [146] pushsymb 1479 ........................... <#title>
  [149] pusharglist 3 ........................... <me.oItem, #aAttributes, #title>
  [151] objcall 611 ............................. <me.oItem.aAttributes[#title]>
  [154] setlocal 7 .............................. sTitle = me.oItem.aAttributes[#title]
  [156] getparam 0 .............................. <me>
  [158] getchainedprop 225 ...................... <me.oItem>
  [160] pushsymb 289 ............................ <#aAttributes>
  [163] pushsymb 1586 ........................... <#desc>
  [166] pusharglist 3 ........................... <me.oItem, #aAttributes, #desc>
  [168] objcall 611 ............................. <me.oItem.aAttributes[#desc]>
  [171] setlocal 8 .............................. sDesc = me.oItem.aAttributes[#desc]
  [173] getlocal 8 .............................. <sDesc>
  [175] pusharglist 1 ........................... <sDesc>
  [177] extcall 106 ............................. <voidp(sDesc)>
  [179] getlocal 6 .............................. <sAuthor>
  [181] pusharglist 1 ........................... <sAuthor>
  [183] extcall 106 ............................. <voidp(sAuthor)>
  [185] or ...................................... <voidp(sDesc) or voidp(sAuthor)>
  [186] getlocal 7 .............................. <sTitle>
  [188] pusharglist 1 ........................... <sTitle>
  [190] extcall 106 ............................. <voidp(sTitle)>
  [192] or ...................................... <voidp(sDesc) or voidp(sAuthor) or voidp(sTitle)>
  [193] not ..................................... <not (voidp(sDesc) or voidp(sAuthor) or voidp(sTitle))>
  [194] jmpifz [261] ............................ if not (voidp(sDesc) or voidp(sAuthor) or voidp(sTitle)) then
  [197] getlocal 3 .............................. <sName>
  [199] pushcons 12 ............................. <RETURN>
  [201] joinstr ................................. <sName & RETURN>
  [202] setlocal 5 .............................. sText = sName & RETURN
  [204] getlocal 8 .............................. <sDesc>
  [206] pusharglist 1 ........................... <sDesc>
  [208] extcall 106 ............................. <voidp(sDesc)>
  [210] not ..................................... <not voidp(sDesc)>
  [211] jmpifz [224] ............................ if not voidp(sDesc) then
  [214] getlocal 5 .............................. <sText>
  [216] getlocal 8 .............................. <sDesc>
  [218] joinstr ................................. <sText & sDesc>
  [219] pushcons 12 ............................. <RETURN>
  [221] joinstr ................................. <sText & sDesc & RETURN>
  [222] setlocal 5 .............................. sText = sText & sDesc & RETURN
  [224] getlocal 6 .............................. <sAuthor>
  [226] pusharglist 1 ........................... <sAuthor>
  [228] extcall 106 ............................. <voidp(sAuthor)>
  [230] not ..................................... <not voidp(sAuthor)>
  [231] jmpifz [244] ............................ if not voidp(sAuthor) then
  [234] getlocal 5 .............................. <sText>
  [236] getlocal 6 .............................. <sAuthor>
  [238] joinstr ................................. <sText & sAuthor>
  [239] pushcons 12 ............................. <RETURN>
  [241] joinstr ................................. <sText & sAuthor & RETURN>
  [242] setlocal 5 .............................. sText = sText & sAuthor & RETURN
  [244] getlocal 7 .............................. <sTitle>
  [246] pusharglist 1 ........................... <sTitle>
  [248] extcall 106 ............................. <voidp(sTitle)>
  [250] not ..................................... <not voidp(sTitle)>
  [251] jmpifz [261] ............................ if not voidp(sTitle) then
  [254] getlocal 5 .............................. <sText>
  [256] getlocal 7 .............................. <sTitle>
  [258] joinstr ................................. <sText & sTitle>
  [259] setlocal 5 .............................. sText = sText & sTitle
  [261] getparam 0 .............................. <me>
  [263] getlocal 5 .............................. <sText>
  [265] pusharglistnoret 2 ...................... <me, sText>
  [267] objcall 1541 ............................ me.displayDescription(sText)
  [270] ret
end

on displayFurniItem me
  [  0] pushcons 20 ............................. <"infostand: received displayFurniItem()">
  [  2] pusharglistnoret 1 ...................... <"infostand: received displayFurniItem()">
  [  4] extcall 274 ............................. put "infostand: received displayFurniItem()"
  [  7] getparam 0 .............................. <me>
  [  9] getchainedprop 225 ...................... <me.oItem>
  [ 11] pusharglist 1 ........................... <me.oItem>
  [ 13] objcall 733 ............................. <me.oItem.getPreviewImage()>
  [ 16] setlocal 0 .............................. oPreviewImage = me.oItem.getPreviewImage()
  [ 18] getparam 0 .............................. <me>
  [ 20] getlocal 0 .............................. <oPreviewImage>
  [ 22] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 24] objcall 1540 ............................ me.displayPreviewImage(oPreviewImage)
  [ 27] getparam 0 .............................. <me>
  [ 29] getchainedprop 225 ...................... <me.oItem>
  [ 31] pusharglist 1 ........................... <me.oItem>
  [ 33] objcall 159 ............................. <me.oItem.getProdId()>
  [ 35] setlocal 1 .............................. iProdId = me.oItem.getProdId()
  [ 37] getglobal 158 ........................... <gCatalog>
  [ 39] getparam 0 .............................. <me>
  [ 41] getchainedprop 225 ...................... <me.oItem>
  [ 43] pusharglist 1 ........................... <me.oItem>
  [ 45] objcall 159 ............................. <me.oItem.getProdId()>
  [ 47] pusharglist 2 ........................... <gCatalog, me.oItem.getProdId()>
  [ 49] objcall 160 ............................. <gCatalog.getItemByProdId(me.oItem.getProdId())>
  [ 51] setlocal 2 .............................. aCatalogItem = gCatalog.getItemByProdId(me.oItem.getProdId())
  [ 53] getlocal 2 .............................. <aCatalogItem>
  [ 55] pushsymb 161 ............................ <#name>
  [ 57] pusharglist 2 ........................... <aCatalogItem, #name>
  [ 59] objcall 151 ............................. <aCatalogItem[#name]>
  [ 61] setlocal 3 .............................. sName = aCatalogItem[#name]
  [ 63] getlocal 2 .............................. <aCatalogItem>
  [ 65] pushsymb 1585 ........................... <#roomDesc>
  [ 68] pusharglist 2 ........................... <aCatalogItem, #roomDesc>
  [ 70] objcall 151 ............................. <aCatalogItem[#roomDesc]>
  [ 72] setlocal 4 .............................. sRoomDesc = aCatalogItem[#roomDesc]
  [ 74] getlocal 3 .............................. <sName>
  [ 76] pushcons 12 ............................. <RETURN>
  [ 78] joinstr ................................. <sName & RETURN>
  [ 79] getlocal 4 .............................. <sRoomDesc>
  [ 81] joinstr ................................. <sName & RETURN & sRoomDesc>
  [ 82] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [ 84] getparam 0 .............................. <me>
  [ 86] getchainedprop 225 ...................... <me.oItem>
  [ 88] pusharglist 1 ........................... <me.oItem>
  [ 90] objcall 1181 ............................ <me.oItem.getAttributes()>
  [ 93] setlocal 6 .............................. aAttributes = me.oItem.getAttributes()
  [ 95] getparam 0 .............................. <me>
  [ 97] getchainedprop 225 ...................... <me.oItem>
  [ 99] pusharglist 1 ........................... <me.oItem>
  [101] objcall 755 ............................. <me.oItem.isBurnedCd()>
  [104] jmpifz [141] ............................ if me.oItem.isBurnedCd() then
  [107] getlocal 6 .............................. <aAttributes>
  [109] pushsymb 1590 ........................... <#ownerName>
  [112] pusharglist 2 ........................... <aAttributes, #ownerName>
  [114] objcall 151 ............................. <aAttributes[#ownerName]>
  [116] pushcons 21 ............................. <": ">
  [118] joinstr ................................. <aAttributes[#ownerName] & ": ">
  [119] getlocal 6 .............................. <aAttributes>
  [121] pushsymb 1591 ........................... <#songName>
  [124] pusharglist 2 ........................... <aAttributes, #songName>
  [126] objcall 151 ............................. <aAttributes[#songName]>
  [128] joinstr ................................. <aAttributes[#ownerName] & ": " & aAttributes[#songName]>
  [129] setlocal 4 .............................. sRoomDesc = aAttributes[#ownerName] & ": " & aAttributes[#songName]
  [131] getlocal 3 .............................. <sName>
  [133] pushcons 12 ............................. <RETURN>
  [135] joinstr ................................. <sName & RETURN>
  [136] getlocal 4 .............................. <sRoomDesc>
  [138] joinstr ................................. <sName & RETURN & sRoomDesc>
  [139] setlocal 5 .............................. sText = sName & RETURN & sRoomDesc
  [141] getparam 0 .............................. <me>
  [143] getlocal 5 .............................. <sText>
  [145] pusharglistnoret 2 ...................... <me, sText>
  [147] objcall 1541 ............................ me.displayDescription(sText)
  [150] ret
end

on displayAvatar me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 225 ...................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] objcall 733 ............................. <me.oItem.getPreviewImage()>
  [  9] setlocal 0 .............................. oPreviewImageObject = me.oItem.getPreviewImage()
  [ 11] pushcons 22 ............................. <"_PREVIEW_">
  [ 13] pushcons 23 ............................. <"AvatarEngine">
  [ 15] pusharglist 2 ........................... <"_PREVIEW_", "AvatarEngine">
  [ 17] extcall 163 ............................. <member("_PREVIEW_", "AvatarEngine")>
  [ 19] setlocal 1 .............................. oPreviewMember = member("_PREVIEW_", "AvatarEngine")
  [ 21] getlocal 1 .............................. <oPreviewMember>
  [ 23] getchainedprop 505 ...................... <oPreviewMember.image>
  [ 26] getlocal 0 .............................. <oPreviewImageObject>
  [ 28] getlocal 0 .............................. <oPreviewImageObject>
  [ 30] getobjprop 506 .......................... <oPreviewImageObject.rect>
  [ 33] getlocal 0 .............................. <oPreviewImageObject>
  [ 35] getobjprop 506 .......................... <oPreviewImageObject.rect>
  [ 38] pusharglistnoret 4 ...................... <oPreviewMember.image, oPreviewImageObject, oPreviewImageObject.rect, oPreviewImageObject.rect>
  [ 40] objcall 526 ............................. oPreviewMember.image.copyPixels(oPreviewImageObject, oPreviewImageObject.rect, oPreviewImageObject.rect)
  [ 43] getparam 0 .............................. <me>
  [ 45] getlocal 1 .............................. <oPreviewMember>
  [ 47] pusharglist 2 ........................... <me, oPreviewMember>
  [ 49] objcall 1540 ............................ <me.displayPreviewImage(oPreviewMember)>
  [ 52] setlocal 2 .............................. iSprite = me.displayPreviewImage(oPreviewMember)
  [ 54] getlocal 2 .............................. <iSprite>
  [ 56] pusharglist 1 ........................... <iSprite>
  [ 58] extcall 481 ............................. <sprite(iSprite)>
  [ 61] pushint8 36 ............................. <36>
  [ 63] setobjprop 491 .......................... sprite(iSprite).ink = 36
  [ 66] getglobal 156 ........................... <oStudioMap>
  [ 68] pusharglist 1 ........................... <oStudioMap>
  [ 70] objcall 157 ............................. <oStudioMap.isPrivate()>
  [ 72] jmpifz [102] ............................ if oStudioMap.isPrivate() then / else
  [ 75] getlocal 2 .............................. <iSprite>
  [ 77] pusharglist 1 ........................... <iSprite>
  [ 79] extcall 481 ............................. <sprite(iSprite)>
  [ 82] pushint16 255 ........................... <255>
  [ 85] pushint16 255 ........................... <255>
  [ 88] pushint16 255 ........................... <255>
  [ 91] pusharglist 3 ........................... <255, 255, 255>
  [ 93] extcall 507 ............................. <rgb(255, 255, 255)>
  [ 96] setobjprop 1039 ......................... sprite(iSprite).bgColor = rgb(255, 255, 255)
  [ 99] jmp [123]
  [102] getlocal 2 .............................. <iSprite>
  [104] pusharglist 1 ........................... <iSprite>
  [106] extcall 481 ............................. <sprite(iSprite)>
  [109] pushint8 100 ............................ <100>
  [111] pushint8 100 ............................ <100>
  [113] pushint8 100 ............................ <100>
  [115] pusharglist 3 ........................... <100, 100, 100>
  [117] extcall 507 ............................. <rgb(100, 100, 100)>
  [120] setobjprop 1039 ......................... sprite(iSprite).bgColor = rgb(100, 100, 100)
  [123] getlocal 2 .............................. <iSprite>
  [125] pusharglist 1 ........................... <iSprite>
  [127] extcall 481 ............................. <sprite(iSprite)>
  [130] getlocal 2 .............................. <iSprite>
  [132] pusharglist 1 ........................... <iSprite>
  [134] extcall 481 ............................. <sprite(iSprite)>
  [137] getobjprop 329 .......................... <sprite(iSprite).locV>
  [140] pushint8 10 ............................. <10>
  [142] add ..................................... <sprite(iSprite).locV + 10>
  [143] setobjprop 329 .......................... sprite(iSprite).locV = sprite(iSprite).locV + 10
  [146] getparam 0 .............................. <me>
  [148] getchainedprop 225 ...................... <me.oItem>
  [150] pusharglist 1 ........................... <me.oItem>
  [152] objcall 155 ............................. <me.oItem.getScreenName()>
  [154] pushcons 12 ............................. <RETURN>
  [156] joinstr ................................. <me.oItem.getScreenName() & RETURN>
  [157] getparam 0 .............................. <me>
  [159] getchainedprop 225 ...................... <me.oItem>
  [161] pusharglist 1 ........................... <me.oItem>
  [163] objcall 732 ............................. <me.oItem.getMission()>
  [166] joinstr ................................. <me.oItem.getScreenName() & RETURN & me.oItem.getMission()>
  [167] setlocal 3 .............................. sBaseText = me.oItem.getScreenName() & RETURN & me.oItem.getMission()
  [169] getparam 0 .............................. <me>
  [171] getchainedprop 225 ...................... <me.oItem>
  [173] pusharglist 1 ........................... <me.oItem>
  [175] objcall 752 ............................. <me.oItem.isDrinking()>
  [178] setlocal 4 .............................. bDrinking = me.oItem.isDrinking()
  [180] getparam 0 .............................. <me>
  [182] getchainedprop 225 ...................... <me.oItem>
  [184] pusharglist 1 ........................... <me.oItem>
  [186] objcall 766 ............................. <me.oItem.isTrading()>
  [189] setlocal 5 .............................. bTrading = me.oItem.isTrading()
  [191] getlocal 3 .............................. <sBaseText>
  [193] setlocal 6 .............................. sFinalText = sBaseText
  [195] getlocal 4 .............................. <bDrinking>
  [197] jmpifz [210] ............................ if bDrinking then
  [200] getlocal 3 .............................. <sBaseText>
  [202] pushcons 12 ............................. <RETURN>
  [204] joinstr ................................. <sBaseText & RETURN>
  [205] pushcons 24 ............................. <"Carrying: Coke Bottle">
  [207] joinstr ................................. <sBaseText & RETURN & "Carrying: Coke Bottle">
  [208] setlocal 6 .............................. sFinalText = sBaseText & RETURN & "Carrying: Coke Bottle"
  [210] getlocal 5 .............................. <bTrading>
  [212] jmpifz [225] ............................ if bTrading then
  [215] getlocal 3 .............................. <sBaseText>
  [217] pushcons 12 ............................. <RETURN>
  [219] joinstr ................................. <sBaseText & RETURN>
  [220] pushcons 25 ............................. <"Trading.">
  [222] joinstr ................................. <sBaseText & RETURN & "Trading.">
  [223] setlocal 6 .............................. sFinalText = sBaseText & RETURN & "Trading."
  [225] getparam 0 .............................. <me>
  [227] getlocal 6 .............................. <sFinalText>
  [229] pusharglistnoret 2 ...................... <me, sFinalText>
  [231] objcall 1541 ............................ me.displayDescription(sFinalText)
  [234] ret
end

on displayInfoStand me
  [  0] pushcons 26 ............................. <"infostand : received displayinfostand()">
  [  2] pusharglistnoret 1 ...................... <"infostand : received displayinfostand()">
  [  4] extcall 274 ............................. put "infostand : received displayinfostand()"
  [  7] getglobal 88 ............................ <oIsoScene>
  [  9] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 11] getparam 0 .............................. <me>
  [ 13] getobjprop 1554 ......................... <me.aInfoStandProps>
  [ 16] pusharglist 2 ........................... <oIsoScene.oSpriteManager, me.aInfoStandProps>
  [ 18] objcall 622 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aInfoStandProps)>
  [ 21] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aInfoStandProps)
  [ 23] getlocal 0 .............................. <iSprite>
  [ 25] pusharglist 1 ........................... <iSprite>
  [ 27] extcall 481 ............................. <sprite(iSprite)>
  [ 30] getglobal 88 ............................ <oIsoScene>
  [ 32] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 34] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 36] objcall 451 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 39] setobjprop 511 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 42] getparam 0 .............................. <me>
  [ 44] getchainedprop 627 ...................... <me.aSprites>
  [ 47] getlocal 0 .............................. <iSprite>
  [ 49] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [ 51] objcall 135 ............................. me.aSprites.add(iSprite)
  [ 53] ret
end

on displayPreviewImage me, oPreviewImage
  [  0] getparam 1 .............................. <oPreviewImage>
  [  2] getobjprop 485 .......................... <oPreviewImage.width>
  [  5] setlocal 0 .............................. iWidth = oPreviewImage.width
  [  7] getparam 1 .............................. <oPreviewImage>
  [  9] getobjprop 486 .......................... <oPreviewImage.height>
  [ 12] setlocal 1 .............................. iHeight = oPreviewImage.height
  [ 14] getparam 0 .............................. <me>
  [ 16] getchainedprop 1555 ..................... <me.iPreviewRegPoint>
  [ 19] getobjprop 328 .......................... <me.iPreviewRegPoint.locH>
  [ 22] getlocal 0 .............................. <iWidth>
  [ 24] pushint8 2 .............................. <2>
  [ 26] div ..................................... <iWidth / 2>
  [ 27] sub ..................................... <me.iPreviewRegPoint.locH - (iWidth / 2)>
  [ 28] setlocal 2 .............................. iLeft = me.iPreviewRegPoint.locH - (iWidth / 2)
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 1555 ..................... <me.iPreviewRegPoint>
  [ 35] getobjprop 329 .......................... <me.iPreviewRegPoint.locV>
  [ 38] getlocal 1 .............................. <iHeight>
  [ 40] sub ..................................... <me.iPreviewRegPoint.locV - iHeight>
  [ 41] setlocal 3 .............................. iTop = me.iPreviewRegPoint.locV - iHeight
  [ 43] getlocal 2 .............................. <iLeft>
  [ 45] getlocal 0 .............................. <iWidth>
  [ 47] add ..................................... <iLeft + iWidth>
  [ 48] setlocal 4 .............................. iRight = iLeft + iWidth
  [ 50] getlocal 3 .............................. <iTop>
  [ 52] getlocal 1 .............................. <iHeight>
  [ 54] add ..................................... <iTop + iHeight>
  [ 55] setlocal 5 .............................. iBottom = iTop + iHeight
  [ 57] getlocal 2 .............................. <iLeft>
  [ 59] getlocal 3 .............................. <iTop>
  [ 61] getlocal 4 .............................. <iRight>
  [ 63] getlocal 5 .............................. <iBottom>
  [ 65] pusharglist 4 ........................... <iLeft, iTop, iRight, iBottom>
  [ 67] extcall 506 ............................. <rect(iLeft, iTop, iRight, iBottom)>
  [ 70] setlocal 6 .............................. oRect = rect(iLeft, iTop, iRight, iBottom)
  [ 72] pushsymb 163 ............................ <#member>
  [ 74] getparam 1 .............................. <oPreviewImage>
  [ 76] getobjprop 161 .......................... <oPreviewImage.name>
  [ 78] pushsymb 146 ............................ <#x>
  [ 80] getlocal 2 .............................. <iLeft>
  [ 82] pushsymb 344 ............................ <#y>
  [ 85] getlocal 3 .............................. <iTop>
  [ 87] pushsymb 491 ............................ <#ink>
  [ 90] pushint8 36 ............................. <36>
  [ 92] pusharglist 8 ........................... <[#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]>
  [ 94] pushproplist ............................ <[#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]>
  [ 95] setlocal 7 .............................. aProps = [#member: oPreviewImage.name, #x: iLeft, #y: iTop, #ink: 36]
  [ 97] getglobal 88 ............................ <oIsoScene>
  [ 99] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [101] getlocal 7 .............................. <aProps>
  [103] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aProps>
  [105] objcall 622 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)>
  [108] setlocal 8 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aProps)
  [110] getlocal 8 .............................. <iSprite>
  [112] pusharglist 1 ........................... <iSprite>
  [114] extcall 481 ............................. <sprite(iSprite)>
  [117] pushint16 255 ........................... <255>
  [120] pushint16 255 ........................... <255>
  [123] pushint16 255 ........................... <255>
  [126] pusharglist 3 ........................... <255, 255, 255>
  [128] extcall 507 ............................. <rgb(255, 255, 255)>
  [131] setobjprop 1039 ......................... sprite(iSprite).bgColor = rgb(255, 255, 255)
  [134] getlocal 8 .............................. <iSprite>
  [136] pusharglist 1 ........................... <iSprite>
  [138] extcall 481 ............................. <sprite(iSprite)>
  [141] getlocal 6 .............................. <oRect>
  [143] setobjprop 506 .......................... sprite(iSprite).rect = oRect
  [146] getlocal 8 .............................. <iSprite>
  [148] pusharglist 1 ........................... <iSprite>
  [150] extcall 481 ............................. <sprite(iSprite)>
  [153] getglobal 88 ............................ <oIsoScene>
  [155] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [157] pusharglist 1 ........................... <oIsoScene.oGrid>
  [159] objcall 451 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [162] setobjprop 511 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [165] getparam 0 .............................. <me>
  [167] getchainedprop 627 ...................... <me.aSprites>
  [170] getlocal 8 .............................. <iSprite>
  [172] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [174] objcall 135 ............................. me.aSprites.add(iSprite)
  [176] getlocal 8 .............................. <iSprite>
  [178] pusharglistnoret 1 ...................... <iSprite>
  [180] extcall 93 .............................. return iSprite
  [182] ret
end

on displayDescription me, sText
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 1553 ..................... <me.oDescMember>
  [  5] getparam 1 .............................. <sText>
  [  7] setobjprop 164 .......................... me.oDescMember.text = sText
  [  9] getglobal 88 ............................ <oIsoScene>
  [ 11] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 1557 ......................... <me.aDescriptionTextProps>
  [ 18] pusharglist 2 ........................... <oIsoScene.oSpriteManager, me.aDescriptionTextProps>
  [ 20] objcall 622 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aDescriptionTextProps)>
  [ 23] setlocal 0 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(me.aDescriptionTextProps)
  [ 25] getlocal 0 .............................. <iSprite>
  [ 27] pusharglist 1 ........................... <iSprite>
  [ 29] extcall 481 ............................. <sprite(iSprite)>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 1556 ......................... <me.oDescRect>
  [ 37] setobjprop 506 .......................... sprite(iSprite).rect = me.oDescRect
  [ 40] getlocal 0 .............................. <iSprite>
  [ 42] pusharglist 1 ........................... <iSprite>
  [ 44] extcall 481 ............................. <sprite(iSprite)>
  [ 47] getchainedprop 163 ...................... <sprite(iSprite).member>
  [ 49] getparam 0 .............................. <me>
  [ 51] getobjprop 1556 ......................... <me.oDescRect>
  [ 54] setobjprop 506 .......................... sprite(iSprite).member.rect = me.oDescRect
  [ 57] getlocal 0 .............................. <iSprite>
  [ 59] pusharglist 1 ........................... <iSprite>
  [ 61] extcall 481 ............................. <sprite(iSprite)>
  [ 64] getglobal 88 ............................ <oIsoScene>
  [ 66] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 68] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 70] objcall 451 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 73] setobjprop 511 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 76] getparam 0 .............................. <me>
  [ 78] getchainedprop 1553 ..................... <me.oDescMember>
  [ 81] pushint8 1 .............................. <1>
  [ 83] setobjprop 1597 ......................... me.oDescMember.hilite = 1
  [ 86] getparam 0 .............................. <me>
  [ 88] getchainedprop 1553 ..................... <me.oDescMember>
  [ 91] pushcons 1 .............................. <"plain">
  [ 93] setobjprop 1364 ......................... me.oDescMember.fontStyle = "plain"
  [ 96] pushzero ................................ <0>
  [ 97] pushzero ................................ <0>
  [ 98] pushzero ................................ <0>
  [ 99] pushzero ................................ <0>
  [100] pushzero ................................ <0>
  [101] pushzero ................................ <0>
  [102] pushint8 1 .............................. <1>
  [104] pushzero ................................ <0>
  [105] pushcons 0 .............................. <"InfoStandDescription">
  [107] pushzero ................................ <0>
  [108] pushcons 27 ............................. <"bold">
  [110] pushint8 3 .............................. <3>
  [112] set 10 .................................. set the textStyle of line 1 of member "InfoStandDescription" to "bold"
  [114] getparam 0 .............................. <me>
  [116] getchainedprop 627 ...................... <me.aSprites>
  [119] getlocal 0 .............................. <iSprite>
  [121] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [123] objcall 135 ............................. me.aSprites.add(iSprite)
  [125] ret
end

on destroy me
  [  0] getglobal 88 ............................ <oIsoScene>
  [  2] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 627 .......................... <me.aSprites>
  [  9] pusharglistnoret 2 ...................... <oIsoScene.oSpriteManager, me.aSprites>
  [ 11] objcall 620 ............................. oIsoScene.oSpriteManager.returnPooledSprites(me.aSprites)
  [ 14] pushint8 1 .............................. <1>
  [ 16] setlocal 0
  [ 18] getlocal 0
  [ 20] pushcons 4 .............................. <"IsoEngine">
  [ 22] pushint8 2 .............................. <2>
  [ 24] get 8 ................................... <the number of castMembers of castLib "IsoEngine">
  [ 26] lteq
  [ 27] jmpifz [ 70] ............................ repeat with i = 1 to the number of castMembers of castLib "IsoEngine"
  [ 30] getlocal 0 .............................. <i>
  [ 32] pushcons 4 .............................. <"IsoEngine">
  [ 34] pusharglist 2 ........................... <i, "IsoEngine">
  [ 36] extcall 163 ............................. <member(i, "IsoEngine")>
  [ 38] setlocal 1 .............................. oMember = member(i, "IsoEngine")
  [ 40] getlocal 1 .............................. <oMember>
  [ 42] getobjprop 161 .......................... <oMember.name>
  [ 44] setlocal 2 .............................. sName = oMember.name
  [ 46] getlocal 2 .............................. <sName>
  [ 48] pushcons 28 ............................. <"_DYNAMIC_INFOSTAND_">
  [ 50] containsstr ............................. <sName contains "_DYNAMIC_INFOSTAND_">
  [ 51] jmpifz [ 61] ............................ if sName contains "_DYNAMIC_INFOSTAND_" then
  [ 54] getlocal 1 .............................. <oMember>
  [ 56] pusharglistnoret 1 ...................... <oMember>
  [ 58] objcall 976 ............................. oMember.erase()
  [ 61] pushint8 1
  [ 63] getlocal 0
  [ 65] add
  [ 66] setlocal 0
  [ 68] endrepeat [ 18]
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglist 0 ........................... <[]>
  [ 74] pushlist ................................ <[]>
  [ 75] setobjprop 627 .......................... me.aSprites = []
  [ 78] ret
end

on getBurnedCdButtonList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aButtonList = []
  [  5] getglobal 228 ........................... <oStudio>
  [  7] pusharglist 1 ........................... <oStudio>
  [  9] objcall 229 ............................. <oStudio.getcdplayer()>
  [ 11] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 13] objcall 231 ............................. <oStudio.getcdplayer().getCd()>
  [ 15] setlocal 1 .............................. foCd = oStudio.getcdplayer().getCd()
  [ 17] getlocal 1 .............................. <foCd>
  [ 19] pusharglist 1 ........................... <foCd>
  [ 21] objcall 1568 ............................ <foCd.getAuthorName()>
  [ 24] setlocal 2 .............................. sAuthor = foCd.getAuthorName()
  [ 26] getglobal 228 ........................... <oStudio>
  [ 28] pusharglist 1 ........................... <oStudio>
  [ 30] objcall 229 ............................. <oStudio.getcdplayer()>
  [ 32] getglobal 198 ........................... <oDenizenManager>
  [ 34] pusharglist 1 ........................... <oDenizenManager>
  [ 36] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 38] pusharglist 2 ........................... <oStudio.getcdplayer(), oDenizenManager.getScreenName()>
  [ 40] objcall 1572 ............................ <oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())>
  [ 43] setlocal 3 .............................. bEligibleVoter = oStudio.getcdplayer().isEligibleVoter(oDenizenManager.getScreenName())
  [ 45] getlocal 3 .............................. <bEligibleVoter>
  [ 47] not ..................................... <not bEligibleVoter>
  [ 48] jmpifz [ 57] ............................ if not bEligibleVoter then
  [ 51] getlocal 0 .............................. <aButtonList>
  [ 53] pusharglistnoret 1 ...................... <aButtonList>
  [ 55] extcall 93 .............................. return aButtonList
  [ 57] getlocal 1 .............................. <foCd>
  [ 59] pusharglist 1 ........................... <foCd>
  [ 61] objcall 1551 ............................ <foCd.hasVoted()>
  [ 64] setlocal 4 .............................. bHasVoted = foCd.hasVoted()
  [ 66] getlocal 4 .............................. <bHasVoted>
  [ 68] pushzero ................................ <0>
  [ 69] eq ...................................... <bHasVoted = 0>
  [ 70] getlocal 4 .............................. <bHasVoted>
  [ 72] not ..................................... <not bHasVoted>
  [ 73] or ...................................... <(bHasVoted = 0) or not bHasVoted>
  [ 74] jmpifz [ 93] ............................ if (bHasVoted = 0) or not bHasVoted then
  [ 77] getlocal 0 .............................. <aButtonList>
  [ 79] pushcons 15 ............................. <"Thumbs Up">
  [ 81] pusharglistnoret 2 ...................... <aButtonList, "Thumbs Up">
  [ 83] objcall 135 ............................. aButtonList.add("Thumbs Up")
  [ 85] getlocal 0 .............................. <aButtonList>
  [ 87] pushcons 16 ............................. <"Thumbs Down">
  [ 89] pusharglistnoret 2 ...................... <aButtonList, "Thumbs Down">
  [ 91] objcall 135 ............................. aButtonList.add("Thumbs Down")
  [ 93] getlocal 0 .............................. <aButtonList>
  [ 95] pusharglistnoret 1 ...................... <aButtonList>
  [ 97] extcall 93 .............................. return aButtonList
  [ 99] ret
end

on getFurniItemButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 267 ............................. <me.isOwner()>
  [  7] setlocal 0 .............................. bIsOwner = me.isOwner()
  [  9] pusharglist 0 ........................... <[]>
  [ 11] pushlist ................................ <[]>
  [ 12] setlocal 1 .............................. aButtonList = []
  [ 14] getglobal 158 ........................... <gCatalog>
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 225 ...................... <me.oItem>
  [ 20] getobjprop 279 .......................... <me.oItem.sProdID>
  [ 23] pusharglist 1 ........................... <me.oItem.sProdID>
  [ 25] extcall 108 ............................. <integer(me.oItem.sProdID)>
  [ 27] pusharglist 2 ........................... <gCatalog, integer(me.oItem.sProdID)>
  [ 29] objcall 160 ............................. <gCatalog.getItemByProdId(integer(me.oItem.sProdID))>
  [ 31] setlocal 2 .............................. aCatItem = gCatalog.getItemByProdId(integer(me.oItem.sProdID))
  [ 33] getlocal 2 .............................. <aCatItem>
  [ 35] pusharglist 1 ........................... <aCatItem>
  [ 37] extcall 106 ............................. <voidp(aCatItem)>
  [ 39] jmpifz [ 49] ............................ if voidp(aCatItem) then / else
  [ 42] pushint8 1 .............................. <1>
  [ 44] setlocal 3 .............................. bModifiable = 1
  [ 46] jmp [ 56]
  [ 49] getlocal 2 .............................. <aCatItem>
  [ 51] getobjprop 1599 ......................... <aCatItem.modifiable>
  [ 54] setlocal 3 .............................. bModifiable = aCatItem.modifiable
  [ 56] getlocal 0 .............................. <bIsOwner>
  [ 58] jmpifz [158] ............................ if bIsOwner then
  [ 61] getlocal 1 .............................. <aButtonList>
  [ 63] pushcons 29 ............................. <"Move">
  [ 65] pusharglistnoret 2 ...................... <aButtonList, "Move">
  [ 67] objcall 135 ............................. aButtonList.add("Move")
  [ 69] getparam 0 .............................. <me>
  [ 71] getchainedprop 225 ...................... <me.oItem>
  [ 73] pusharglist 1 ........................... <me.oItem>
  [ 75] objcall 159 ............................. <me.oItem.getProdId()>
  [ 77] pushint16 192 ........................... <192>
  [ 80] nteq .................................... <me.oItem.getProdId() <> 192>
  [ 81] jmpifz [ 92] ............................ if me.oItem.getProdId() <> 192 then
  [ 84] getlocal 1 .............................. <aButtonList>
  [ 86] pushcons 30 ............................. <"Rotate">
  [ 88] pusharglistnoret 2 ...................... <aButtonList, "Rotate">
  [ 90] objcall 135 ............................. aButtonList.add("Rotate")
  [ 92] getparam 0 .............................. <me>
  [ 94] getchainedprop 225 ...................... <me.oItem>
  [ 96] pusharglist 1 ........................... <me.oItem>
  [ 98] objcall 1190 ............................ <me.oItem.canPickup()>
  [101] getlocal 3 .............................. <bModifiable>
  [103] and ..................................... <me.oItem.canPickup() and bModifiable>
  [104] jmpifz [115] ............................ if me.oItem.canPickup() and bModifiable then
  [107] getlocal 1 .............................. <aButtonList>
  [109] pushcons 31 ............................. <"Pick up">
  [111] pusharglistnoret 2 ...................... <aButtonList, "Pick up">
  [113] objcall 135 ............................. aButtonList.add("Pick up")
  [115] getparam 0 .............................. <me>
  [117] getchainedprop 225 ...................... <me.oItem>
  [119] pusharglist 1 ........................... <me.oItem>
  [121] objcall 1188 ............................ <me.oItem.canDelete()>
  [124] getlocal 3 .............................. <bModifiable>
  [126] and ..................................... <me.oItem.canDelete() and bModifiable>
  [127] jmpifz [138] ............................ if me.oItem.canDelete() and bModifiable then
  [130] getlocal 1 .............................. <aButtonList>
  [132] pushcons 32 ............................. <"Delete">
  [134] pusharglistnoret 2 ...................... <aButtonList, "Delete">
  [136] objcall 135 ............................. aButtonList.add("Delete")
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 225 ...................... <me.oItem>
  [142] pusharglist 1 ........................... <me.oItem>
  [144] objcall 1189 ............................ <me.oItem.canUse()>
  [147] jmpifz [158] ............................ if me.oItem.canUse() then
  [150] getlocal 1 .............................. <aButtonList>
  [152] pushcons 33 ............................. <"Use">
  [154] pusharglistnoret 2 ...................... <aButtonList, "Use">
  [156] objcall 135 ............................. aButtonList.add("Use")
  [158] getparam 0 .............................. <me>
  [160] getchainedprop 225 ...................... <me.oItem>
  [162] getobjprop 289 .......................... <me.oItem.aAttributes>
  [165] pushsymb 1600 ........................... <#urlLink>
  [168] pusharglist 2 ........................... <me.oItem.aAttributes, #urlLink>
  [170] extcall 1334 ............................ <getaProp(me.oItem.aAttributes, #urlLink)>
  [173] pusharglist 1 ........................... <getaProp(me.oItem.aAttributes, #urlLink)>
  [175] extcall 106 ............................. <voidp(getaProp(me.oItem.aAttributes, #urlLink))>
  [177] pushzero ................................ <0>
  [178] eq ...................................... <voidp(getaProp(me.oItem.aAttributes, #urlLink)) = 0>
  [179] jmpifz [203] ............................ if voidp(getaProp(me.oItem.aAttributes, #urlLink)) = 0 then
  [182] getlocal 1 .............................. <aButtonList>
  [184] getparam 0 .............................. <me>
  [186] getchainedprop 225 ...................... <me.oItem>
  [188] pushsymb 289 ............................ <#aAttributes>
  [191] pushsymb 1601 ........................... <#urlTitle>
  [194] pusharglist 3 ........................... <me.oItem, #aAttributes, #urlTitle>
  [196] objcall 611 ............................. <me.oItem.aAttributes[#urlTitle]>
  [199] pusharglistnoret 2 ...................... <aButtonList, me.oItem.aAttributes[#urlTitle]>
  [201] objcall 135 ............................. aButtonList.add(me.oItem.aAttributes[#urlTitle])
  [203] getlocal 1 .............................. <aButtonList>
  [205] pusharglistnoret 1 ...................... <aButtonList>
  [207] extcall 93 .............................. return aButtonList
  [209] ret
end

on getAvatarButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 268 ............................. <me.isMod()>
  [  7] setlocal 0 .............................. bIsMod = me.isMod()
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 1552 ............................ <me.isMe()>
  [ 16] setlocal 1 .............................. bIsMe = me.isMe()
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 267 ............................. <me.isOwner()>
  [ 25] setlocal 2 .............................. bIsOwner = me.isOwner()
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglist 1 ........................... <me>
  [ 31] objcall 768 ............................. <me.isBot()>
  [ 34] setlocal 3 .............................. bIsBot = me.isBot()
  [ 36] pusharglist 0 ........................... <[]>
  [ 38] pushlist ................................ <[]>
  [ 39] setlocal 4 .............................. aButtonList = []
  [ 41] getlocal 1 .............................. <bIsMe>
  [ 43] jmpifz [172] ............................ if bIsMe then / else
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 225 ...................... <me.oItem>
  [ 50] pusharglist 1 ........................... <me.oItem>
  [ 52] objcall 746 ............................. <me.oItem.isSitting()>
  [ 55] setlocal 5 .............................. bIsSitting = me.oItem.isSitting()
  [ 57] getparam 0 .............................. <me>
  [ 59] getchainedprop 225 ...................... <me.oItem>
  [ 61] pusharglist 1 ........................... <me.oItem>
  [ 63] objcall 749 ............................. <me.oItem.isDancing()>
  [ 66] setlocal 6 .............................. bIsDancing = me.oItem.isDancing()
  [ 68] getlocal 6 .............................. <bIsDancing>
  [ 70] jmpifz [ 84] ............................ if bIsDancing then / else
  [ 73] getlocal 4 .............................. <aButtonList>
  [ 75] pushcons 34 ............................. <"Stop Dancing">
  [ 77] pusharglistnoret 2 ...................... <aButtonList, "Stop Dancing">
  [ 79] objcall 135 ............................. aButtonList.add("Stop Dancing")
  [ 81] jmp [ 98]
  [ 84] getlocal 5 .............................. <bIsSitting>
  [ 86] not ..................................... <not bIsSitting>
  [ 87] jmpifz [ 98] ............................ if not bIsSitting then
  [ 90] getlocal 4 .............................. <aButtonList>
  [ 92] pushcons 35 ............................. <"Dance">
  [ 94] pusharglistnoret 2 ...................... <aButtonList, "Dance">
  [ 96] objcall 135 ............................. aButtonList.add("Dance")
  [ 98] getglobal 228 ........................... <oStudio>
  [100] pusharglist 1 ........................... <oStudio>
  [102] extcall 106 ............................. <voidp(oStudio)>
  [104] jmpifz [113] ............................ if voidp(oStudio) then / else
  [107] pushzero ................................ <0>
  [108] setlocal 7 .............................. bIsPlaying = 0
  [110] jmp [128]
  [113] getglobal 228 ........................... <oStudio>
  [115] pusharglist 1 ........................... <oStudio>
  [117] objcall 229 ............................. <oStudio.getcdplayer()>
  [119] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [121] objcall 230 ............................. <oStudio.getcdplayer().isPlaying()>
  [123] pushint8 1 .............................. <1>
  [125] eq ...................................... <oStudio.getcdplayer().isPlaying() = 1>
  [126] setlocal 7 .............................. bIsPlaying = oStudio.getcdplayer().isPlaying() = 1
  [128] getlocal 7 .............................. <bIsPlaying>
  [130] jmpifz [169] ............................ if bIsPlaying then
  [133] getglobal 228 ........................... <oStudio>
  [135] pusharglist 1 ........................... <oStudio>
  [137] objcall 229 ............................. <oStudio.getcdplayer()>
  [139] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [141] objcall 206 ............................. <oStudio.getcdplayer().getAvatar()>
  [143] setlocal 8 .............................. sCdPlayerAvatar = oStudio.getcdplayer().getAvatar()
  [145] getlocal 8 .............................. <sCdPlayerAvatar>
  [147] getglobal 198 ........................... <oDenizenManager>
  [149] pusharglist 1 ........................... <oDenizenManager>
  [151] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [153] eq ...................................... <sCdPlayerAvatar = oDenizenManager.getScreenName()>
  [154] setlocal 9 .............................. bIsPerforming = sCdPlayerAvatar = oDenizenManager.getScreenName()
  [156] getlocal 9 .............................. <bIsPerforming>
  [158] jmpifz [169] ............................ if bIsPerforming then
  [161] getlocal 4 .............................. <aButtonList>
  [163] pushcons 36 ............................. <"Stop Performing">
  [165] pusharglistnoret 2 ...................... <aButtonList, "Stop Performing">
  [167] objcall 135 ............................. aButtonList.add("Stop Performing")
  [169] jmp [286]
  [172] getlocal 2 .............................. <bIsOwner>
  [174] getlocal 0 .............................. <bIsMod>
  [176] or ...................................... <bIsOwner or bIsMod>
  [177] getlocal 3 .............................. <bIsBot>
  [179] not ..................................... <not bIsBot>
  [180] and ..................................... <(bIsOwner or bIsMod) and not bIsBot>
  [181] jmpifz [192] ............................ if (bIsOwner or bIsMod) and not bIsBot then
  [184] getlocal 4 .............................. <aButtonList>
  [186] pushcons 37 ............................. <"Kick Out">
  [188] pusharglistnoret 2 ...................... <aButtonList, "Kick Out">
  [190] objcall 135 ............................. aButtonList.add("Kick Out")
  [192] getparam 0 .............................. <me>
  [194] getchainedprop 225 ...................... <me.oItem>
  [196] pusharglist 1 ........................... <me.oItem>
  [198] objcall 766 ............................. <me.oItem.isTrading()>
  [201] setlocal 10 ............................. bIsTrading = me.oItem.isTrading()
  [203] getlocal 10 ............................. <bIsTrading>
  [205] not ..................................... <not bIsTrading>
  [206] getlocal 3 .............................. <bIsBot>
  [208] not ..................................... <not bIsBot>
  [209] and ..................................... <not bIsTrading and not bIsBot>
  [210] jmpifz [221] ............................ if not bIsTrading and not bIsBot then
  [213] getlocal 4 .............................. <aButtonList>
  [215] pushcons 38 ............................. <"Trade">
  [217] pusharglistnoret 2 ...................... <aButtonList, "Trade">
  [219] objcall 135 ............................. aButtonList.add("Trade")
  [221] getglobal 174 ........................... <ElementMgr>
  [223] pusharglist 1 ........................... <ElementMgr>
  [225] objcall 1603 ............................ <ElementMgr.getMessengerObject()>
  [228] setlocal 11 ............................. oMessenger = ElementMgr.getMessengerObject()
  [230] getlocal 11 ............................. <oMessenger>
  [232] getparam 0 .............................. <me>
  [234] getchainedprop 225 ...................... <me.oItem>
  [236] pusharglist 1 ........................... <me.oItem>
  [238] objcall 155 ............................. <me.oItem.getScreenName()>
  [240] pusharglist 2 ........................... <oMessenger, me.oItem.getScreenName()>
  [242] objcall 1604 ............................ <oMessenger.isFriend(me.oItem.getScreenName())>
  [245] setlocal 12 ............................. bIsFriend = oMessenger.isFriend(me.oItem.getScreenName())
  [247] getlocal 11 ............................. <oMessenger>
  [249] getparam 0 .............................. <me>
  [251] getchainedprop 225 ...................... <me.oItem>
  [253] pusharglist 1 ........................... <me.oItem>
  [255] objcall 155 ............................. <me.oItem.getScreenName()>
  [257] pusharglist 2 ........................... <oMessenger, me.oItem.getScreenName()>
  [259] objcall 1605 ............................ <oMessenger.haveInvited(me.oItem.getScreenName())>
  [262] setlocal 13 ............................. bHaveInvited = oMessenger.haveInvited(me.oItem.getScreenName())
  [264] getlocal 12 ............................. <bIsFriend>
  [266] not ..................................... <not bIsFriend>
  [267] getlocal 13 ............................. <bHaveInvited>
  [269] not ..................................... <not bHaveInvited>
  [270] and ..................................... <not bIsFriend and not bHaveInvited>
  [271] getlocal 3 .............................. <bIsBot>
  [273] not ..................................... <not bIsBot>
  [274] and ..................................... <not bIsFriend and not bHaveInvited and not bIsBot>
  [275] jmpifz [286] ............................ if not bIsFriend and not bHaveInvited and not bIsBot then
  [278] getlocal 4 .............................. <aButtonList>
  [280] pushcons 39 ............................. <"Ask to become a friend">
  [282] pusharglistnoret 2 ...................... <aButtonList, "Ask to become a friend">
  [284] objcall 135 ............................. aButtonList.add("Ask to become a friend")
  [286] getlocal 4 .............................. <aButtonList>
  [288] pusharglistnoret 1 ...................... <aButtonList>
  [290] extcall 93 .............................. return aButtonList
  [292] ret
end

on getWallItemButtonList me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 267 ............................. <me.isOwner()>
  [  7] setlocal 0 .............................. bIsOwner = me.isOwner()
  [  9] pusharglist 0 ........................... <[]>
  [ 11] pushlist ................................ <[]>
  [ 12] setlocal 1 .............................. aButtonList = []
  [ 14] getlocal 0 .............................. <bIsOwner>
  [ 16] jmpifz [ 78] ............................ if bIsOwner then
  [ 19] getlocal 1 .............................. <aButtonList>
  [ 21] pushcons 29 ............................. <"Move">
  [ 23] pusharglistnoret 2 ...................... <aButtonList, "Move">
  [ 25] objcall 135 ............................. aButtonList.add("Move")
  [ 27] getlocal 1 .............................. <aButtonList>
  [ 29] pushcons 31 ............................. <"Pick up">
  [ 31] pusharglistnoret 2 ...................... <aButtonList, "Pick up">
  [ 33] objcall 135 ............................. aButtonList.add("Pick up")
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 225 ...................... <me.oItem>
  [ 39] pusharglist 1 ........................... <me.oItem>
  [ 41] objcall 1188 ............................ <me.oItem.canDelete()>
  [ 44] jmpifz [ 55] ............................ if me.oItem.canDelete() then
  [ 47] getlocal 1 .............................. <aButtonList>
  [ 49] pushcons 32 ............................. <"Delete">
  [ 51] pusharglistnoret 2 ...................... <aButtonList, "Delete">
  [ 53] objcall 135 ............................. aButtonList.add("Delete")
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 225 ...................... <me.oItem>
  [ 59] pusharglist 1 ........................... <me.oItem>
  [ 61] objcall 159 ............................. <me.oItem.getProdId()>
  [ 63] pushint16 184 ........................... <184>
  [ 66] eq ...................................... <me.oItem.getProdId() = 184>
  [ 67] jmpifz [ 78] ............................ if me.oItem.getProdId() = 184 then
  [ 70] getlocal 1 .............................. <aButtonList>
  [ 72] pushcons 40 ............................. <"Edit URL">
  [ 74] pusharglistnoret 2 ...................... <aButtonList, "Edit URL">
  [ 76] objcall 135 ............................. aButtonList.add("Edit URL")
  [ 78] getlocal 1 .............................. <aButtonList>
  [ 80] pusharglistnoret 1 ...................... <aButtonList>
  [ 82] extcall 93 .............................. return aButtonList
  [ 84] ret
end

on DisplayButtons me, aButtons
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 1556 ..................... <me.oDescRect>
  [  5] getobjprop 1228 ......................... <me.oDescRect.bottom>
  [  8] setlocal 0 .............................. iTop = me.oDescRect.bottom
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1556 ..................... <me.oDescRect>
  [ 15] getobjprop 695 .......................... <me.oDescRect.right>
  [ 18] setlocal 1 .............................. iRight = me.oDescRect.right
  [ 20] pushint8 3 .............................. <3>
  [ 22] setlocal 2 .............................. iXOffset = 3
  [ 24] getparam 1 .............................. <aButtons>
  [ 26] peek 0
  [ 28] pusharglist 1
  [ 30] extcall 150
  [ 32] pushint8 1
  [ 34] peek 0
  [ 36] peek 2
  [ 38] lteq
  [ 39] jmpifz [118] ............................ repeat with sButton in aButtons
  [ 42] peek 2
  [ 44] peek 1
  [ 46] pusharglist 2
  [ 48] extcall 151
  [ 50] setlocal 3
  [ 52] getparam 0 .............................. <me>
  [ 54] getlocal 3 .............................. <sButton>
  [ 56] pusharglist 2 ........................... <me, sButton>
  [ 58] objcall 1547 ............................ <me.createButtonSprite(sButton)>
  [ 61] setlocal 4 .............................. iSprite = me.createButtonSprite(sButton)
  [ 63] getlocal 4 .............................. <iSprite>
  [ 65] pusharglist 1 ........................... <iSprite>
  [ 67] extcall 481 ............................. <sprite(iSprite)>
  [ 70] getlocal 0 .............................. <iTop>
  [ 72] setobjprop 329 .......................... sprite(iSprite).locV = iTop
  [ 75] getlocal 4 .............................. <iSprite>
  [ 77] pusharglist 1 ........................... <iSprite>
  [ 79] extcall 481 ............................. <sprite(iSprite)>
  [ 82] getlocal 1 .............................. <iRight>
  [ 84] getlocal 4 .............................. <iSprite>
  [ 86] pusharglist 1 ........................... <iSprite>
  [ 88] extcall 481 ............................. <sprite(iSprite)>
  [ 91] getobjprop 485 .......................... <sprite(iSprite).width>
  [ 94] sub ..................................... <iRight - sprite(iSprite).width>
  [ 95] getlocal 2 .............................. <iXOffset>
  [ 97] sub ..................................... <iRight - sprite(iSprite).width - iXOffset>
  [ 98] setobjprop 328 .......................... sprite(iSprite).locH = iRight - sprite(iSprite).width - iXOffset
  [101] getlocal 4 .............................. <iSprite>
  [103] pusharglist 1 ........................... <iSprite>
  [105] extcall 481 ............................. <sprite(iSprite)>
  [108] getobjprop 328 .......................... <sprite(iSprite).locH>
  [111] setlocal 1 .............................. iRight = sprite(iSprite).locH
  [113] pushint8 1
  [115] add
  [116] endrepeat [ 34]
  [118] pop 3
  [120] ret
end

on createButtonSprite me, sID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <sID>
  [  4] getparam 0 .............................. <me>
  [  6] getobjprop 1560 ......................... <me.sActive>
  [  9] pusharglist 3 ........................... <me, sID, me.sActive>
  [ 11] objcall 1549 ............................ <me.createButtonMember(sID, me.sActive)>
  [ 14] setlocal 0 .............................. oActiveMember = me.createButtonMember(sID, me.sActive)
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <sID>
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 1561 ......................... <me.sPressed>
  [ 25] pusharglist 3 ........................... <me, sID, me.sPressed>
  [ 27] objcall 1549 ............................ <me.createButtonMember(sID, me.sPressed)>
  [ 30] setlocal 1 .............................. oPressedMember = me.createButtonMember(sID, me.sPressed)
  [ 32] pushsymb 163 ............................ <#member>
  [ 34] getlocal 0 .............................. <oActiveMember>
  [ 36] getobjprop 161 .......................... <oActiveMember.name>
  [ 38] pushsymb 146 ............................ <#x>
  [ 40] pushzero ................................ <0>
  [ 41] pushsymb 344 ............................ <#y>
  [ 44] pushzero ................................ <0>
  [ 45] pushsymb 491 ............................ <#ink>
  [ 48] pushint8 8 .............................. <8>
  [ 50] pusharglist 8 ........................... <[#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]>
  [ 52] pushproplist ............................ <[#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]>
  [ 53] setlocal 2 .............................. aSpriteProps = [#member: oActiveMember.name, #x: 0, #y: 0, #ink: 8]
  [ 55] getglobal 88 ............................ <oIsoScene>
  [ 57] getchainedprop 114 ...................... <oIsoScene.oSpriteManager>
  [ 59] getlocal 2 .............................. <aSpriteProps>
  [ 61] pusharglist 2 ........................... <oIsoScene.oSpriteManager, aSpriteProps>
  [ 63] objcall 622 ............................. <oIsoScene.oSpriteManager.drawStaticSceneSprite(aSpriteProps)>
  [ 66] setlocal 3 .............................. iSprite = oIsoScene.oSpriteManager.drawStaticSceneSprite(aSpriteProps)
  [ 68] getlocal 3 .............................. <iSprite>
  [ 70] pusharglist 1 ........................... <iSprite>
  [ 72] extcall 481 ............................. <sprite(iSprite)>
  [ 75] getglobal 88 ............................ <oIsoScene>
  [ 77] getchainedprop 115 ...................... <oIsoScene.oGrid>
  [ 79] pusharglist 1 ........................... <oIsoScene.oGrid>
  [ 81] objcall 451 ............................. <oIsoScene.oGrid.getHighestDepth()>
  [ 84] setobjprop 511 .......................... sprite(iSprite).locZ = oIsoScene.oGrid.getHighestDepth()
  [ 87] pushzero ................................ <0>
  [ 88] setlocal 4 .............................. mytest = 0
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 225 .......................... <me.oItem>
  [ 94] pusharglist 1 ........................... <me.oItem>
  [ 96] extcall 106 ............................. <voidp(me.oItem)>
  [ 98] pushzero ................................ <0>
  [ 99] eq ...................................... <voidp(me.oItem) = 0>
  [100] jmpifz [152] ............................ if voidp(me.oItem) = 0 then
  [103] getparam 0 .............................. <me>
  [105] pushsymb 225 ............................ <#oItem>
  [107] pushsymb 289 ............................ <#aAttributes>
  [110] pusharglist 3 ........................... <me, #oItem, #aAttributes>
  [112] objcall 611 ............................. <me.oItem[#aAttributes]>
  [115] pusharglist 1 ........................... <me.oItem[#aAttributes]>
  [117] extcall 106 ............................. <voidp(me.oItem[#aAttributes])>
  [119] pushzero ................................ <0>
  [120] eq ...................................... <voidp(me.oItem[#aAttributes]) = 0>
  [121] jmpifz [152] ............................ if voidp(me.oItem[#aAttributes]) = 0 then
  [124] getparam 0 .............................. <me>
  [126] getchainedprop 225 ...................... <me.oItem>
  [128] getobjprop 289 .......................... <me.oItem.aAttributes>
  [131] pushsymb 1600 ........................... <#urlLink>
  [134] pusharglist 2 ........................... <me.oItem.aAttributes, #urlLink>
  [136] extcall 1334 ............................ <getaProp(me.oItem.aAttributes, #urlLink)>
  [139] pusharglist 1 ........................... <getaProp(me.oItem.aAttributes, #urlLink)>
  [141] extcall 106 ............................. <voidp(getaProp(me.oItem.aAttributes, #urlLink))>
  [143] pushzero ................................ <0>
  [144] eq ...................................... <voidp(getaProp(me.oItem.aAttributes, #urlLink)) = 0>
  [145] jmpifz [152] ............................ if voidp(getaProp(me.oItem.aAttributes, #urlLink)) = 0 then
  [148] pushint8 1 .............................. <1>
  [150] setlocal 4 .............................. mytest = 1
  [152] getlocal 4 .............................. <mytest>
  [154] jmpifz [261] ............................ if mytest then / else
  [157] getparam 1 .............................. <sID>
  [159] getparam 0 .............................. <me>
  [161] getchainedprop 225 ...................... <me.oItem>
  [163] pushsymb 289 ............................ <#aAttributes>
  [166] pushsymb 1601 ........................... <#urlTitle>
  [169] pusharglist 3 ........................... <me.oItem, #aAttributes, #urlTitle>
  [171] objcall 611 ............................. <me.oItem.aAttributes[#urlTitle]>
  [174] eq ...................................... <sID = me.oItem.aAttributes[#urlTitle]>
  [175] jmpifz [226] ............................ if sID = me.oItem.aAttributes[#urlTitle] then / else
  [178] getlocal 3 .............................. <iSprite>
  [180] pusharglist 1 ........................... <iSprite>
  [182] extcall 481 ............................. <sprite(iSprite)>
  [185] getchainedprop 635 ...................... <sprite(iSprite).scriptInstanceList>
  [188] pushcons 41 ............................. <"URLbutton">
  [190] pusharglist 1 ........................... <"URLbutton">
  [192] extcall 57 .............................. <script("URLbutton")>
  [194] getparam 0 .............................. <me>
  [196] getchainedprop 225 ...................... <me.oItem>
  [198] pushsymb 289 ............................ <#aAttributes>
  [201] pushsymb 1600 ........................... <#urlLink>
  [204] pusharglist 3 ........................... <me.oItem, #aAttributes, #urlLink>
  [206] objcall 611 ............................. <me.oItem.aAttributes[#urlLink]>
  [209] getparam 0 .............................. <me>
  [211] getlocal 0 .............................. <oActiveMember>
  [213] getlocal 1 .............................. <oPressedMember>
  [215] pusharglist 5 ........................... <script("URLbutton"), me.oItem.aAttributes[#urlLink], me, oActiveMember, oPressedMember>
  [217] objcall 0 ............................... <script("URLbutton").new(me.oItem.aAttributes[#urlLink], me, oActiveMember, oPressedMember)>
  [219] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("URLbutton").new(me.oItem.aAttributes[#urlLink], me, oActiveMember, oPressedMember)>
  [221] objcall 135 ............................. sprite(iSprite).scriptInstanceList.add(script("URLbutton").new(me.oItem.aAttributes[#urlLink], me, oActiveMember, oPressedMember))
  [223] jmp [258]
  [226] getlocal 3 .............................. <iSprite>
  [228] pusharglist 1 ........................... <iSprite>
  [230] extcall 481 ............................. <sprite(iSprite)>
  [233] getchainedprop 635 ...................... <sprite(iSprite).scriptInstanceList>
  [236] pushcons 42 ............................. <"InfoStandSpriteScript">
  [238] pusharglist 1 ........................... <"InfoStandSpriteScript">
  [240] extcall 57 .............................. <script("InfoStandSpriteScript")>
  [242] getparam 1 .............................. <sID>
  [244] getparam 0 .............................. <me>
  [246] getlocal 0 .............................. <oActiveMember>
  [248] getlocal 1 .............................. <oPressedMember>
  [250] pusharglist 5 ........................... <script("InfoStandSpriteScript"), sID, me, oActiveMember, oPressedMember>
  [252] objcall 0 ............................... <script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [254] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [256] objcall 135 ............................. sprite(iSprite).scriptInstanceList.add(script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember))
  [258] jmp [293]
  [261] getlocal 3 .............................. <iSprite>
  [263] pusharglist 1 ........................... <iSprite>
  [265] extcall 481 ............................. <sprite(iSprite)>
  [268] getchainedprop 635 ...................... <sprite(iSprite).scriptInstanceList>
  [271] pushcons 42 ............................. <"InfoStandSpriteScript">
  [273] pusharglist 1 ........................... <"InfoStandSpriteScript">
  [275] extcall 57 .............................. <script("InfoStandSpriteScript")>
  [277] getparam 1 .............................. <sID>
  [279] getparam 0 .............................. <me>
  [281] getlocal 0 .............................. <oActiveMember>
  [283] getlocal 1 .............................. <oPressedMember>
  [285] pusharglist 5 ........................... <script("InfoStandSpriteScript"), sID, me, oActiveMember, oPressedMember>
  [287] objcall 0 ............................... <script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [289] pusharglistnoret 2 ...................... <sprite(iSprite).scriptInstanceList, script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember)>
  [291] objcall 135 ............................. sprite(iSprite).scriptInstanceList.add(script("InfoStandSpriteScript").new(sID, me, oActiveMember, oPressedMember))
  [293] getparam 0 .............................. <me>
  [295] getchainedprop 627 ...................... <me.aSprites>
  [298] getlocal 3 .............................. <iSprite>
  [300] pusharglistnoret 2 ...................... <me.aSprites, iSprite>
  [302] objcall 135 ............................. me.aSprites.add(iSprite)
  [304] getlocal 3 .............................. <iSprite>
  [306] pusharglistnoret 1 ...................... <iSprite>
  [308] extcall 93 .............................. return iSprite
  [310] ret
end

on createTextMember me, sText
  [  0] pushcons 28 ............................. <"_DYNAMIC_INFOSTAND_">
  [  2] getparam 1 .............................. <sText>
  [  4] joinstr ................................. <"_DYNAMIC_INFOSTAND_" & sText>
  [  5] setlocal 0 .............................. sDynamicTextName = "_DYNAMIC_INFOSTAND_" & sText
  [  7] getlocal 0 .............................. <sDynamicTextName>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 284 .......................... <me.sCastLib>
  [ 14] pusharglist 2 ........................... <sDynamicTextName, me.sCastLib>
  [ 16] extcall 163 ............................. <member(sDynamicTextName, me.sCastLib)>
  [ 18] setlocal 1 .............................. oTextMember = member(sDynamicTextName, me.sCastLib)
  [ 20] getlocal 1 .............................. <oTextMember>
  [ 22] getobjprop 639 .......................... <oTextMember.memberNum>
  [ 25] pushint8 1 .............................. <1>
  [ 27] inv ..................................... <-1>
  [ 28] nteq .................................... <oTextMember.memberNum <> -1>
  [ 29] getparam 0 .............................. <me>
  [ 31] getobjprop 1562 ......................... <me.bOverwriteImages>
  [ 34] and ..................................... <(oTextMember.memberNum <> -1) and me.bOverwriteImages>
  [ 35] jmpifz [ 45] ............................ if (oTextMember.memberNum <> -1) and me.bOverwriteImages then
  [ 38] getlocal 1 .............................. <oTextMember>
  [ 40] pusharglistnoret 1 ...................... <oTextMember>
  [ 42] objcall 976 ............................. oTextMember.erase()
  [ 45] getlocal 0 .............................. <sDynamicTextName>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 284 .......................... <me.sCastLib>
  [ 52] pusharglist 2 ........................... <sDynamicTextName, me.sCastLib>
  [ 54] extcall 163 ............................. <member(sDynamicTextName, me.sCastLib)>
  [ 56] setlocal 1 .............................. oTextMember = member(sDynamicTextName, me.sCastLib)
  [ 58] getlocal 1 .............................. <oTextMember>
  [ 60] getobjprop 639 .......................... <oTextMember.memberNum>
  [ 63] pushint8 1 .............................. <1>
  [ 65] inv ..................................... <-1>
  [ 66] eq ...................................... <oTextMember.memberNum = -1>
  [ 67] jmpifz [156] ............................ if oTextMember.memberNum = -1 then
  [ 70] pushsymb 164 ............................ <#text>
  [ 72] getparam 0 .............................. <me>
  [ 74] getobjprop 284 .......................... <me.sCastLib>
  [ 77] pusharglist 1 ........................... <me.sCastLib>
  [ 79] extcall 1078 ............................ <castLib(me.sCastLib)>
  [ 82] pusharglist 2 ........................... <#text, castLib(me.sCastLib)>
  [ 84] extcall 0 ............................... <new(#text, castLib(me.sCastLib))>
  [ 86] setlocal 1 .............................. oTextMember = new(#text, castLib(me.sCastLib))
  [ 88] getlocal 1 .............................. <oTextMember>
  [ 90] getlocal 0 .............................. <sDynamicTextName>
  [ 92] setobjprop 161 .......................... oTextMember.name = sDynamicTextName
  [ 94] getlocal 1 .............................. <oTextMember>
  [ 96] getparam 1 .............................. <sText>
  [ 98] setobjprop 164 .......................... oTextMember.text = sText
  [100] getlocal 1 .............................. <oTextMember>
  [102] pushsymb 1360 ........................... <#fixed>
  [105] setobjprop 1361 ......................... oTextMember.boxType = #fixed
  [108] getlocal 1 .............................. <oTextMember>
  [110] pushcons 43 ............................. <"#EEDBC6">
  [112] pusharglist 1 ........................... <"#EEDBC6">
  [114] extcall 507 ............................. <rgb("#EEDBC6")>
  [117] setobjprop 523 .......................... oTextMember.color = rgb("#EEDBC6")
  [120] getlocal 1 .............................. <oTextMember>
  [122] pushint8 10 ............................. <10>
  [124] setobjprop 1362 ......................... oTextMember.fontSize = 10
  [127] getlocal 1 .............................. <oTextMember>
  [129] pushsymb 1363 ........................... <#bold>
  [132] pusharglist 1 ........................... <[#bold]>
  [134] pushlist ................................ <[#bold]>
  [135] setobjprop 1364 ......................... oTextMember.fontStyle = [#bold]
  [138] getlocal 1 .............................. <oTextMember>
  [140] pushcons 44 ............................. <"verdana">
  [142] setobjprop 1359 ......................... oTextMember.font = "verdana"
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 1559 ..................... <me.aDynamicMembers>
  [150] getlocal 0 .............................. <sDynamicTextName>
  [152] pusharglistnoret 2 ...................... <me.aDynamicMembers, sDynamicTextName>
  [154] objcall 135 ............................. me.aDynamicMembers.add(sDynamicTextName)
  [156] getlocal 1 .............................. <oTextMember>
  [158] pusharglistnoret 1 ...................... <oTextMember>
  [160] extcall 93 .............................. return oTextMember
  [162] ret
end

on createButtonMember me, sText, sState
  [  0] pushcons 28 ............................. <"_DYNAMIC_INFOSTAND_">
  [  2] getparam 1 .............................. <sText>
  [  4] joinstr ................................. <"_DYNAMIC_INFOSTAND_" & sText>
  [  5] pushcons 45 ............................. <"_">
  [  7] joinstr ................................. <"_DYNAMIC_INFOSTAND_" & sText & "_">
  [  8] getparam 2 .............................. <sState>
  [ 10] joinstr ................................. <"_DYNAMIC_INFOSTAND_" & sText & "_" & sState>
  [ 11] setlocal 0 .............................. sDynamicButtonName = "_DYNAMIC_INFOSTAND_" & sText & "_" & sState
  [ 13] getlocal 0 .............................. <sDynamicButtonName>
  [ 15] getparam 0 .............................. <me>
  [ 17] getobjprop 284 .......................... <me.sCastLib>
  [ 20] pusharglist 2 ........................... <sDynamicButtonName, me.sCastLib>
  [ 22] extcall 163 ............................. <member(sDynamicButtonName, me.sCastLib)>
  [ 24] setlocal 1 .............................. oButtonMember = member(sDynamicButtonName, me.sCastLib)
  [ 26] getlocal 1 .............................. <oButtonMember>
  [ 28] getobjprop 639 .......................... <oButtonMember.memberNum>
  [ 31] pushint8 1 .............................. <1>
  [ 33] inv ..................................... <-1>
  [ 34] nteq .................................... <oButtonMember.memberNum <> -1>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 1562 ......................... <me.bOverwriteImages>
  [ 40] and ..................................... <(oButtonMember.memberNum <> -1) and me.bOverwriteImages>
  [ 41] jmpifz [ 51] ............................ if (oButtonMember.memberNum <> -1) and me.bOverwriteImages then
  [ 44] getlocal 1 .............................. <oButtonMember>
  [ 46] pusharglistnoret 1 ...................... <oButtonMember>
  [ 48] objcall 976 ............................. oButtonMember.erase()
  [ 51] getlocal 0 .............................. <sDynamicButtonName>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 284 .......................... <me.sCastLib>
  [ 58] pusharglist 2 ........................... <sDynamicButtonName, me.sCastLib>
  [ 60] extcall 163 ............................. <member(sDynamicButtonName, me.sCastLib)>
  [ 62] setlocal 1 .............................. oButtonMember = member(sDynamicButtonName, me.sCastLib)
  [ 64] getlocal 1 .............................. <oButtonMember>
  [ 66] getobjprop 639 .......................... <oButtonMember.memberNum>
  [ 69] pushint8 1 .............................. <1>
  [ 71] inv ..................................... <-1>
  [ 72] eq ...................................... <oButtonMember.memberNum = -1>
  [ 73] jmpifz [508] ............................ if oButtonMember.memberNum = -1 then
  [ 76] pushsymb 1333 ........................... <#bitmap>
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 284 .......................... <me.sCastLib>
  [ 84] pusharglist 1 ........................... <me.sCastLib>
  [ 86] extcall 1078 ............................ <castLib(me.sCastLib)>
  [ 89] pusharglist 2 ........................... <#bitmap, castLib(me.sCastLib)>
  [ 91] extcall 0 ............................... <new(#bitmap, castLib(me.sCastLib))>
  [ 93] setlocal 1 .............................. oButtonMember = new(#bitmap, castLib(me.sCastLib))
  [ 95] getlocal 1 .............................. <oButtonMember>
  [ 97] getlocal 0 .............................. <sDynamicButtonName>
  [ 99] setobjprop 161 .......................... oButtonMember.name = sDynamicButtonName
  [101] pushcons 46 ............................. <"button.">
  [103] getparam 0 .............................. <me>
  [105] getobjprop 1558 ......................... <me.sButtonBase>
  [108] joinstr ................................. <"button." & me.sButtonBase>
  [109] pushcons 47 ............................. <".left.">
  [111] joinstr ................................. <"button." & me.sButtonBase & ".left.">
  [112] getparam 2 .............................. <sState>
  [114] joinstr ................................. <"button." & me.sButtonBase & ".left." & sState>
  [115] setlocal 2 .............................. sLeftMember = "button." & me.sButtonBase & ".left." & sState
  [117] pushcons 46 ............................. <"button.">
  [119] getparam 0 .............................. <me>
  [121] getobjprop 1558 ......................... <me.sButtonBase>
  [124] joinstr ................................. <"button." & me.sButtonBase>
  [125] pushcons 48 ............................. <".middle.">
  [127] joinstr ................................. <"button." & me.sButtonBase & ".middle.">
  [128] getparam 2 .............................. <sState>
  [130] joinstr ................................. <"button." & me.sButtonBase & ".middle." & sState>
  [131] setlocal 3 .............................. sMiddleMember = "button." & me.sButtonBase & ".middle." & sState
  [133] pushcons 46 ............................. <"button.">
  [135] getparam 0 .............................. <me>
  [137] getobjprop 1558 ......................... <me.sButtonBase>
  [140] joinstr ................................. <"button." & me.sButtonBase>
  [141] pushcons 49 ............................. <".right.">
  [143] joinstr ................................. <"button." & me.sButtonBase & ".right.">
  [144] getparam 2 .............................. <sState>
  [146] joinstr ................................. <"button." & me.sButtonBase & ".right." & sState>
  [147] setlocal 4 .............................. sRightMember = "button." & me.sButtonBase & ".right." & sState
  [149] getlocal 2 .............................. <sLeftMember>
  [151] pusharglist 1 ........................... <sLeftMember>
  [153] extcall 163 ............................. <member(sLeftMember)>
  [155] setlocal 5 .............................. oLeftMember = member(sLeftMember)
  [157] getlocal 3 .............................. <sMiddleMember>
  [159] pusharglist 1 ........................... <sMiddleMember>
  [161] extcall 163 ............................. <member(sMiddleMember)>
  [163] setlocal 6 .............................. oMiddleMember = member(sMiddleMember)
  [165] getlocal 4 .............................. <sRightMember>
  [167] pusharglist 1 ........................... <sRightMember>
  [169] extcall 163 ............................. <member(sRightMember)>
  [171] setlocal 7 .............................. oRightMember = member(sRightMember)
  [173] getlocal 5 .............................. <oLeftMember>
  [175] getobjprop 505 .......................... <oLeftMember.image>
  [178] setlocal 8 .............................. imLeft = oLeftMember.image
  [180] getlocal 6 .............................. <oMiddleMember>
  [182] getobjprop 505 .......................... <oMiddleMember.image>
  [185] setlocal 9 .............................. imMiddle = oMiddleMember.image
  [187] getlocal 7 .............................. <oRightMember>
  [189] getobjprop 505 .......................... <oRightMember.image>
  [192] setlocal 10 ............................. imRight = oRightMember.image
  [194] getparam 0 .............................. <me>
  [196] getparam 1 .............................. <sText>
  [198] pusharglist 2 ........................... <me, sText>
  [200] objcall 1548 ............................ <me.createTextMember(sText)>
  [203] setlocal 11 ............................. oTextMember = me.createTextMember(sText)
  [205] getlocal 11 ............................. <oTextMember>
  [207] getobjprop 505 .......................... <oTextMember.image>
  [210] setlocal 12 ............................. imText = oTextMember.image
  [212] getlocal 11 ............................. <oTextMember>
  [214] getlocal 11 ............................. <oTextMember>
  [216] getchainedprop 164 ...................... <oTextMember.text>
  [218] getobjprop 349 .......................... <oTextMember.text.length>
  [221] pushint8 1 .............................. <1>
  [223] add ..................................... <oTextMember.text.length + 1>
  [224] pusharglist 2 ........................... <oTextMember, oTextMember.text.length + 1>
  [226] objcall 1624 ............................ <oTextMember.charPosToLoc(oTextMember.text.length + 1)>
  [229] setlocal 13 ............................. oLoc = oTextMember.charPosToLoc(oTextMember.text.length + 1)
  [231] getlocal 13 ............................. <oLoc>
  [233] getobjprop 328 .......................... <oLoc.locH>
  [236] setlocal 14 ............................. iTextWidth = oLoc.locH
  [238] getlocal 13 ............................. <oLoc>
  [240] getobjprop 329 .......................... <oLoc.locV>
  [243] setlocal 15 ............................. iTextHeight = oLoc.locV
  [245] getlocal 8 .............................. <imLeft>
  [247] getobjprop 485 .......................... <imLeft.width>
  [250] getlocal 14 ............................. <iTextWidth>
  [252] add ..................................... <imLeft.width + iTextWidth>
  [253] getlocal 10 ............................. <imRight>
  [255] getobjprop 485 .......................... <imRight.width>
  [258] add ..................................... <imLeft.width + iTextWidth + imRight.width>
  [259] setlocal 16 ............................. iTotalWidth = imLeft.width + iTextWidth + imRight.width
  [261] getlocal 9 .............................. <imMiddle>
  [263] getobjprop 486 .......................... <imMiddle.height>
  [266] setlocal 17 ............................. iTotalHeight = imMiddle.height
  [268] getlocal 16 ............................. <iTotalWidth>
  [270] getlocal 17 ............................. <iTotalHeight>
  [272] pushint8 16 ............................. <16>
  [274] pusharglist 3 ........................... <iTotalWidth, iTotalHeight, 16>
  [276] extcall 505 ............................. <image(iTotalWidth, iTotalHeight, 16)>
  [279] setlocal 18 ............................. oButtonImage = image(iTotalWidth, iTotalHeight, 16)
  [281] getlocal 8 .............................. <imLeft>
  [283] getobjprop 506 .......................... <imLeft.rect>
  [286] setlocal 19 ............................. oSourceRect = imLeft.rect
  [288] pushzero ................................ <0>
  [289] pushzero ................................ <0>
  [290] getlocal 8 .............................. <imLeft>
  [292] getobjprop 485 .......................... <imLeft.width>
  [295] getlocal 8 .............................. <imLeft>
  [297] getobjprop 486 .......................... <imLeft.height>
  [300] pusharglist 4 ........................... <0, 0, imLeft.width, imLeft.height>
  [302] extcall 506 ............................. <rect(0, 0, imLeft.width, imLeft.height)>
  [305] setlocal 20 ............................. oDestRect = rect(0, 0, imLeft.width, imLeft.height)
  [307] getlocal 18 ............................. <oButtonImage>
  [309] getlocal 8 .............................. <imLeft>
  [311] getlocal 20 ............................. <oDestRect>
  [313] getlocal 19 ............................. <oSourceRect>
  [315] pusharglistnoret 4 ...................... <oButtonImage, imLeft, oDestRect, oSourceRect>
  [317] objcall 526 ............................. oButtonImage.copyPixels(imLeft, oDestRect, oSourceRect)
  [320] getlocal 9 .............................. <imMiddle>
  [322] getobjprop 506 .......................... <imMiddle.rect>
  [325] setlocal 19 ............................. oSourceRect = imMiddle.rect
  [327] getlocal 8 .............................. <imLeft>
  [329] getobjprop 485 .......................... <imLeft.width>
  [332] pushzero ................................ <0>
  [333] getlocal 8 .............................. <imLeft>
  [335] getobjprop 485 .......................... <imLeft.width>
  [338] getlocal 14 ............................. <iTextWidth>
  [340] add ..................................... <imLeft.width + iTextWidth>
  [341] getlocal 17 ............................. <iTotalHeight>
  [343] pusharglist 4 ........................... <imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight>
  [345] extcall 506 ............................. <rect(imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight)>
  [348] setlocal 20 ............................. oDestRect = rect(imLeft.width, 0, imLeft.width + iTextWidth, iTotalHeight)
  [350] getlocal 18 ............................. <oButtonImage>
  [352] getlocal 9 .............................. <imMiddle>
  [354] getlocal 20 ............................. <oDestRect>
  [356] getlocal 19 ............................. <oSourceRect>
  [358] pusharglistnoret 4 ...................... <oButtonImage, imMiddle, oDestRect, oSourceRect>
  [360] objcall 526 ............................. oButtonImage.copyPixels(imMiddle, oDestRect, oSourceRect)
  [363] pushint8 4 .............................. <4>
  [365] setlocal 21 ............................. iVOffset = 4
  [367] pushzero ................................ <0>
  [368] pushzero ................................ <0>
  [369] getlocal 14 ............................. <iTextWidth>
  [371] getlocal 11 ............................. <oTextMember>
  [373] getobjprop 486 .......................... <oTextMember.height>
  [376] pusharglist 4 ........................... <0, 0, iTextWidth, oTextMember.height>
  [378] extcall 506 ............................. <rect(0, 0, iTextWidth, oTextMember.height)>
  [381] setlocal 19 ............................. oSourceRect = rect(0, 0, iTextWidth, oTextMember.height)
  [383] getlocal 8 .............................. <imLeft>
  [385] getobjprop 485 .......................... <imLeft.width>
  [388] getlocal 21 ............................. <iVOffset>
  [390] getlocal 8 .............................. <imLeft>
  [392] getobjprop 485 .......................... <imLeft.width>
  [395] getlocal 14 ............................. <iTextWidth>
  [397] add ..................................... <imLeft.width + iTextWidth>
  [398] getlocal 21 ............................. <iVOffset>
  [400] getlocal 11 ............................. <oTextMember>
  [402] getobjprop 486 .......................... <oTextMember.height>
  [405] add ..................................... <iVOffset + oTextMember.height>
  [406] pusharglist 4 ........................... <imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height>
  [408] extcall 506 ............................. <rect(imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height)>
  [411] setlocal 20 ............................. oDestRect = rect(imLeft.width, iVOffset, imLeft.width + iTextWidth, iVOffset + oTextMember.height)
  [413] getlocal 18 ............................. <oButtonImage>
  [415] getlocal 12 ............................. <imText>
  [417] getlocal 20 ............................. <oDestRect>
  [419] getlocal 19 ............................. <oSourceRect>
  [421] pusharglistnoret 4 ...................... <oButtonImage, imText, oDestRect, oSourceRect>
  [423] objcall 526 ............................. oButtonImage.copyPixels(imText, oDestRect, oSourceRect)
  [426] getlocal 10 ............................. <imRight>
  [428] getobjprop 506 .......................... <imRight.rect>
  [431] setlocal 19 ............................. oSourceRect = imRight.rect
  [433] getlocal 8 .............................. <imLeft>
  [435] getobjprop 485 .......................... <imLeft.width>
  [438] getlocal 14 ............................. <iTextWidth>
  [440] add ..................................... <imLeft.width + iTextWidth>
  [441] pushzero ................................ <0>
  [442] getlocal 8 .............................. <imLeft>
  [444] getobjprop 485 .......................... <imLeft.width>
  [447] getlocal 14 ............................. <iTextWidth>
  [449] add ..................................... <imLeft.width + iTextWidth>
  [450] getlocal 10 ............................. <imRight>
  [452] getobjprop 485 .......................... <imRight.width>
  [455] add ..................................... <imLeft.width + iTextWidth + imRight.width>
  [456] getlocal 17 ............................. <iTotalHeight>
  [458] pusharglist 4 ........................... <imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight>
  [460] extcall 506 ............................. <rect(imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight)>
  [463] setlocal 20 ............................. oDestRect = rect(imLeft.width + iTextWidth, 0, imLeft.width + iTextWidth + imRight.width, iTotalHeight)
  [465] getlocal 18 ............................. <oButtonImage>
  [467] getlocal 10 ............................. <imRight>
  [469] getlocal 20 ............................. <oDestRect>
  [471] getlocal 19 ............................. <oSourceRect>
  [473] pusharglistnoret 4 ...................... <oButtonImage, imRight, oDestRect, oSourceRect>
  [475] objcall 526 ............................. oButtonImage.copyPixels(imRight, oDestRect, oSourceRect)
  [478] getlocal 1 .............................. <oButtonMember>
  [480] getlocal 18 ............................. <oButtonImage>
  [482] setobjprop 505 .......................... oButtonMember.image = oButtonImage
  [485] getlocal 1 .............................. <oButtonMember>
  [487] pushzero ................................ <0>
  [488] pushzero ................................ <0>
  [489] pusharglist 2 ........................... <0, 0>
  [491] extcall 325 ............................. <point(0, 0)>
  [494] setobjprop 484 .......................... oButtonMember.regPoint = point(0, 0)
  [497] getparam 0 .............................. <me>
  [499] getchainedprop 1559 ..................... <me.aDynamicMembers>
  [502] getlocal 0 .............................. <sDynamicButtonName>
  [504] pusharglistnoret 2 ...................... <me.aDynamicMembers, sDynamicButtonName>
  [506] objcall 135 ............................. me.aDynamicMembers.add(sDynamicButtonName)
  [508] getlocal 1 .............................. <oButtonMember>
  [510] pusharglistnoret 1 ...................... <oButtonMember>
  [512] extcall 93 .............................. return oButtonMember
  [514] ret
end

on mouseUpEvent me, sID
  [  0] getparam 1 .............................. <sID>
  [  2] peek 0 .................................. case sID of
  [  4] pushcons 35 ............................. <"Dance">
  [  6] eq
  [  7] jmpifz [123] ............................ (case) "Dance":
  [ 10] getglobal 194 ........................... <gFeatureSet>
  [ 12] pushsymb 1644 ........................... <#DANCING>
  [ 15] pusharglist 2 ........................... <gFeatureSet, #DANCING>
  [ 17] objcall 196 ............................. <gFeatureSet.isEnabled(#DANCING)>
  [ 19] not ..................................... <not gFeatureSet.isEnabled(#DANCING)>
  [ 20] jmpifz [ 37] ............................ if not gFeatureSet.isEnabled(#DANCING) then
  [ 23] getglobal 174 ........................... <ElementMgr>
  [ 25] pushcons 50 ............................. <"FEATURE_DISABLED">
  [ 27] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 29] objcall 197 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 31] pop 1
  [ 33] pusharglistnoret 0 ...................... <>
  [ 35] extcall 93 .............................. return 
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglist 1 ........................... <me>
  [ 41] objcall 154 ............................. <me.isAvatar()>
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglist 1 ........................... <me>
  [ 47] objcall 1552 ............................ <me.isMe()>
  [ 50] and ..................................... <me.isAvatar() and me.isMe()>
  [ 51] getparam 0 .............................. <me>
  [ 53] getchainedprop 225 ...................... <me.oItem>
  [ 55] pusharglist 1 ........................... <me.oItem>
  [ 57] objcall 749 ............................. <me.oItem.isDancing()>
  [ 60] not ..................................... <not me.oItem.isDancing()>
  [ 61] and ..................................... <me.isAvatar() and me.isMe() and not me.oItem.isDancing()>
  [ 62] jmpifz [120] ............................ if me.isAvatar() and me.isMe() and not me.oItem.isDancing() then
  [ 65] getparam 0 .............................. <me>
  [ 67] getchainedprop 225 ...................... <me.oItem>
  [ 69] pusharglistnoret 1 ...................... <me.oItem>
  [ 71] objcall 747 ............................. me.oItem.dance()
  [ 74] getglobal 228 ........................... <oStudio>
  [ 76] pusharglist 1 ........................... <oStudio>
  [ 78] extcall 106 ............................. <voidp(oStudio)>
  [ 80] not ..................................... <not voidp(oStudio)>
  [ 81] jmpifz [109] ............................ if not voidp(oStudio) then
  [ 84] getglobal 228 ........................... <oStudio>
  [ 86] pusharglist 0 ........................... <>
  [ 88] extcall 132 ............................. <VOID>
  [ 90] pusharglist 0 ........................... <>
  [ 92] extcall 132 ............................. <VOID>
  [ 94] pusharglist 0 ........................... <>
  [ 96] extcall 132 ............................. <VOID>
  [ 98] pusharglist 0 ........................... <>
  [100] extcall 132 ............................. <VOID>
  [102] pushcons 51 ............................. <"dnc">
  [104] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, VOID, "dnc">
  [106] objcall 798 ............................. oStudio.sendUpdateAvatar(VOID, VOID, VOID, VOID, "dnc")
  [109] getparam 0 .............................. <me>
  [111] getglobal 88 ............................ <oIsoScene>
  [113] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [115] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [117] objcall 265 ............................. me.display(oIsoScene.oSelectedItem)
  [120] jmp [1664]
  [123] peek 0
  [125] pushcons 34 ............................. <"Stop Dancing">
  [127] eq
  [128] jmpifz [216] ............................ (case) "Stop Dancing":
  [131] getparam 0 .............................. <me>
  [133] pusharglist 1 ........................... <me>
  [135] objcall 154 ............................. <me.isAvatar()>
  [137] getparam 0 .............................. <me>
  [139] pusharglist 1 ........................... <me>
  [141] objcall 1552 ............................ <me.isMe()>
  [144] and ..................................... <me.isAvatar() and me.isMe()>
  [145] getparam 0 .............................. <me>
  [147] getchainedprop 225 ...................... <me.oItem>
  [149] pusharglist 1 ........................... <me.oItem>
  [151] objcall 749 ............................. <me.oItem.isDancing()>
  [154] and ..................................... <me.isAvatar() and me.isMe() and me.oItem.isDancing()>
  [155] jmpifz [213] ............................ if me.isAvatar() and me.isMe() and me.oItem.isDancing() then
  [158] getparam 0 .............................. <me>
  [160] getchainedprop 225 ...................... <me.oItem>
  [162] pusharglistnoret 1 ...................... <me.oItem>
  [164] objcall 748 ............................. me.oItem.stopDancing()
  [167] getglobal 228 ........................... <oStudio>
  [169] pusharglist 1 ........................... <oStudio>
  [171] extcall 106 ............................. <voidp(oStudio)>
  [173] not ..................................... <not voidp(oStudio)>
  [174] jmpifz [202] ............................ if not voidp(oStudio) then
  [177] getglobal 228 ........................... <oStudio>
  [179] pusharglist 0 ........................... <>
  [181] extcall 132 ............................. <VOID>
  [183] pusharglist 0 ........................... <>
  [185] extcall 132 ............................. <VOID>
  [187] pusharglist 0 ........................... <>
  [189] extcall 132 ............................. <VOID>
  [191] pusharglist 0 ........................... <>
  [193] extcall 132 ............................. <VOID>
  [195] pushcons 52 ............................. <"std">
  [197] pusharglistnoret 6 ...................... <oStudio, VOID, VOID, VOID, VOID, "std">
  [199] objcall 798 ............................. oStudio.sendUpdateAvatar(VOID, VOID, VOID, VOID, "std")
  [202] getparam 0 .............................. <me>
  [204] getglobal 88 ............................ <oIsoScene>
  [206] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [208] pusharglistnoret 2 ...................... <me, oIsoScene.oSelectedItem>
  [210] objcall 265 ............................. me.display(oIsoScene.oSelectedItem)
  [213] jmp [1664]
  [216] peek 0
  [218] pushcons 37 ............................. <"Kick Out">
  [220] eq
  [221] jmpifz [273] ............................ (case) "Kick Out":
  [224] getparam 0 .............................. <me>
  [226] pusharglist 1 ........................... <me>
  [228] objcall 154 ............................. <me.isAvatar()>
  [230] jmpifz [270] ............................ if me.isAvatar() then
  [233] getparam 0 .............................. <me>
  [235] pusharglist 1 ........................... <me>
  [237] objcall 267 ............................. <me.isOwner()>
  [240] getparam 0 .............................. <me>
  [242] pusharglist 1 ........................... <me>
  [244] objcall 268 ............................. <me.isMod()>
  [247] or ...................................... <me.isOwner() or me.isMod()>
  [248] jmpifz [270] ............................ if me.isOwner() or me.isMod() then
  [251] getparam 0 .............................. <me>
  [253] getchainedprop 225 ...................... <me.oItem>
  [255] pusharglist 1 ........................... <me.oItem>
  [257] objcall 155 ............................. <me.oItem.getScreenName()>
  [259] setlocal 0 .............................. sScreenName = me.oItem.getScreenName()
  [261] getglobal 228 ........................... <oStudio>
  [263] getlocal 0 .............................. <sScreenName>
  [265] pusharglistnoret 2 ...................... <oStudio, sScreenName>
  [267] objcall 1645 ............................ oStudio.sendKickAvatar(sScreenName)
  [270] jmp [1664]
  [273] peek 0
  [275] pushcons 38 ............................. <"Trade">
  [277] eq
  [278] jmpifz [350] ............................ (case) "Trade":
  [281] getglobal 194 ........................... <gFeatureSet>
  [283] pushsymb 1646 ........................... <#TRADING>
  [286] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [288] objcall 196 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [290] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [291] jmpifz [308] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [294] getglobal 174 ........................... <ElementMgr>
  [296] pushcons 50 ............................. <"FEATURE_DISABLED">
  [298] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [300] objcall 197 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [302] pop 1
  [304] pusharglistnoret 0 ...................... <>
  [306] extcall 93 .............................. return 
  [308] getparam 0 .............................. <me>
  [310] pusharglist 1 ........................... <me>
  [312] objcall 154 ............................. <me.isAvatar()>
  [314] jmpifz [347] ............................ if me.isAvatar() then
  [317] getparam 0 .............................. <me>
  [319] getchainedprop 225 ...................... <me.oItem>
  [321] pusharglist 1 ........................... <me.oItem>
  [323] objcall 155 ............................. <me.oItem.getScreenName()>
  [325] setlocal 1 .............................. sTradee = me.oItem.getScreenName()
  [327] getglobal 228 ........................... <oStudio>
  [329] getlocal 1 .............................. <sTradee>
  [331] pusharglistnoret 2 ...................... <oStudio, sTradee>
  [333] objcall 1647 ............................ oStudio.sendStartTrade(sTradee)
  [336] getparam 0 .............................. <me>
  [338] pusharglist 0 ........................... <>
  [340] extcall 132 ............................. <VOID>
  [342] pusharglistnoret 2 ...................... <me, VOID>
  [344] objcall 265 ............................. me.display(VOID)
  [347] jmp [1664]
  [350] peek 0
  [352] pushcons 39 ............................. <"Ask to become a friend">
  [354] eq
  [355] jmpifz [545] ............................ (case) "Ask to become a friend":
  [358] getglobal 194 ........................... <gFeatureSet>
  [360] pushsymb 1648 ........................... <#MESSENGER>
  [363] pusharglist 2 ........................... <gFeatureSet, #MESSENGER>
  [365] objcall 196 ............................. <gFeatureSet.isEnabled(#MESSENGER)>
  [367] not ..................................... <not gFeatureSet.isEnabled(#MESSENGER)>
  [368] jmpifz [385] ............................ if not gFeatureSet.isEnabled(#MESSENGER) then
  [371] getglobal 174 ........................... <ElementMgr>
  [373] pushcons 50 ............................. <"FEATURE_DISABLED">
  [375] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [377] objcall 197 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [379] pop 1
  [381] pusharglistnoret 0 ...................... <>
  [383] extcall 93 .............................. return 
  [385] getparam 0 .............................. <me>
  [387] pusharglist 1 ........................... <me>
  [389] objcall 154 ............................. <me.isAvatar()>
  [391] getparam 0 .............................. <me>
  [393] pusharglist 1 ........................... <me>
  [395] objcall 1552 ............................ <me.isMe()>
  [398] not ..................................... <not me.isMe()>
  [399] and ..................................... <me.isAvatar() and not me.isMe()>
  [400] jmpifz [542] ............................ if me.isAvatar() and not me.isMe() then
  [403] getglobal 174 ........................... <ElementMgr>
  [405] pusharglist 1 ........................... <ElementMgr>
  [407] extcall 106 ............................. <voidp(ElementMgr)>
  [409] not ..................................... <not voidp(ElementMgr)>
  [410] jmpifz [421] ............................ if not voidp(ElementMgr) then
  [413] getglobal 174 ........................... <ElementMgr>
  [415] pushcons 53 ............................. <"MESSENGER_REQUEST_SENT">
  [417] pusharglistnoret 2 ...................... <ElementMgr, "MESSENGER_REQUEST_SENT">
  [419] objcall 197 ............................. ElementMgr.alert("MESSENGER_REQUEST_SENT")
  [421] getglobal 174 ........................... <ElementMgr>
  [423] pusharglist 1 ........................... <ElementMgr>
  [425] objcall 1603 ............................ <ElementMgr.getMessengerObject()>
  [428] getparam 0 .............................. <me>
  [430] getchainedprop 225 ...................... <me.oItem>
  [432] pusharglist 1 ........................... <me.oItem>
  [434] objcall 155 ............................. <me.oItem.getScreenName()>
  [436] pusharglist 2 ........................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [438] objcall 1604 ............................ <ElementMgr.getMessengerObject().isFriend(me.oItem.getScreenName())>
  [441] setlocal 2 .............................. bIsFriend = ElementMgr.getMessengerObject().isFriend(me.oItem.getScreenName())
  [443] getglobal 174 ........................... <ElementMgr>
  [445] pusharglist 1 ........................... <ElementMgr>
  [447] objcall 1603 ............................ <ElementMgr.getMessengerObject()>
  [450] getparam 0 .............................. <me>
  [452] getchainedprop 225 ...................... <me.oItem>
  [454] pusharglist 1 ........................... <me.oItem>
  [456] objcall 155 ............................. <me.oItem.getScreenName()>
  [458] pusharglist 2 ........................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [460] objcall 1605 ............................ <ElementMgr.getMessengerObject().haveInvited(me.oItem.getScreenName())>
  [463] setlocal 3 .............................. bHaveInvited = ElementMgr.getMessengerObject().haveInvited(me.oItem.getScreenName())
  [465] getlocal 2 .............................. <bIsFriend>
  [467] getlocal 3 .............................. <bHaveInvited>
  [469] or ...................................... <bIsFriend or bHaveInvited>
  [470] jmpifz [490] ............................ if bIsFriend or bHaveInvited then
  [473] getparam 0 .............................. <me>
  [475] pusharglist 0 ........................... <>
  [477] extcall 132 ............................. <VOID>
  [479] pusharglistnoret 2 ...................... <me, VOID>
  [481] objcall 265 ............................. me.display(VOID)
  [484] pop 1
  [486] pusharglistnoret 0 ...................... <>
  [488] extcall 93 .............................. return 
  [490] getglobal 198 ........................... <oDenizenManager>
  [492] getglobal 198 ........................... <oDenizenManager>
  [494] pusharglist 1 ........................... <oDenizenManager>
  [496] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [498] getparam 0 .............................. <me>
  [500] getchainedprop 225 ...................... <me.oItem>
  [502] pusharglist 1 ........................... <me.oItem>
  [504] objcall 155 ............................. <me.oItem.getScreenName()>
  [506] pusharglistnoret 3 ...................... <oDenizenManager, oDenizenManager.getScreenName(), me.oItem.getScreenName()>
  [508] objcall 1649 ............................ oDenizenManager.inviteFriend(oDenizenManager.getScreenName(), me.oItem.getScreenName())
  [511] getglobal 174 ........................... <ElementMgr>
  [513] pusharglist 1 ........................... <ElementMgr>
  [515] objcall 1603 ............................ <ElementMgr.getMessengerObject()>
  [518] getparam 0 .............................. <me>
  [520] getchainedprop 225 ...................... <me.oItem>
  [522] pusharglist 1 ........................... <me.oItem>
  [524] objcall 155 ............................. <me.oItem.getScreenName()>
  [526] pusharglistnoret 2 ...................... <ElementMgr.getMessengerObject(), me.oItem.getScreenName()>
  [528] objcall 1650 ............................ ElementMgr.getMessengerObject().addMyInvite(me.oItem.getScreenName())
  [531] getparam 0 .............................. <me>
  [533] pusharglist 0 ........................... <>
  [535] extcall 132 ............................. <VOID>
  [537] pusharglistnoret 2 ...................... <me, VOID>
  [539] objcall 265 ............................. me.display(VOID)
  [542] jmp [1664]
  [545] peek 0
  [547] pushcons 32 ............................. <"Delete">
  [549] eq
  [550] jmpifz [628] ............................ (case) "Delete":
  [553] getglobal 194 ........................... <gFeatureSet>
  [555] pushsymb 1651 ........................... <#FURNITURE_DELETE>
  [558] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_DELETE>
  [560] objcall 196 ............................. <gFeatureSet.isEnabled(#FURNITURE_DELETE)>
  [562] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_DELETE)>
  [563] jmpifz [580] ............................ if not gFeatureSet.isEnabled(#FURNITURE_DELETE) then
  [566] getglobal 174 ........................... <ElementMgr>
  [568] pushcons 50 ............................. <"FEATURE_DISABLED">
  [570] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [572] objcall 197 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [574] pop 1
  [576] pusharglistnoret 0 ...................... <>
  [578] extcall 93 .............................. return 
  [580] getparam 0 .............................. <me>
  [582] pusharglist 1 ........................... <me>
  [584] objcall 220 ............................. <me.isFurniItem()>
  [586] getparam 0 .............................. <me>
  [588] pusharglist 1 ........................... <me>
  [590] objcall 172 ............................. <me.isWallItem()>
  [592] or ...................................... <me.isFurniItem() or me.isWallItem()>
  [593] jmpifz [625] ............................ if me.isFurniItem() or me.isWallItem() then
  [596] getparam 0 .............................. <me>
  [598] getchainedprop 225 ...................... <me.oItem>
  [600] pusharglist 1 ........................... <me.oItem>
  [602] objcall 222 ............................. <me.oItem.getPosId()>
  [604] setlocal 4 .............................. iPosId = me.oItem.getPosId()
  [606] getglobal 174 ........................... <ElementMgr>
  [608] pusharglist 1 ........................... <ElementMgr>
  [610] extcall 106 ............................. <voidp(ElementMgr)>
  [612] not ..................................... <not voidp(ElementMgr)>
  [613] jmpifz [625] ............................ if not voidp(ElementMgr) then
  [616] getglobal 174 ........................... <ElementMgr>
  [618] getlocal 4 .............................. <iPosId>
  [620] pusharglistnoret 2 ...................... <ElementMgr, iPosId>
  [622] objcall 1652 ............................ ElementMgr.displayDeleteConfirm(iPosId)
  [625] jmp [1664]
  [628] peek 0
  [630] pushcons 31 ............................. <"Pick up">
  [632] eq
  [633] jmpifz [1126] ........................... (case) "Pick up":
  [636] getglobal 194 ........................... <gFeatureSet>
  [638] pushsymb 1210 ........................... <#FURNITURE_PICKUP>
  [641] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_PICKUP>
  [643] objcall 196 ............................. <gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [645] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [646] jmpifz [663] ............................ if not gFeatureSet.isEnabled(#FURNITURE_PICKUP) then
  [649] getglobal 174 ........................... <ElementMgr>
  [651] pushcons 50 ............................. <"FEATURE_DISABLED">
  [653] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [655] objcall 197 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [657] pop 1
  [659] pusharglistnoret 0 ...................... <>
  [661] extcall 93 .............................. return 
  [663] getparam 0 .............................. <me>
  [665] pusharglist 1 ........................... <me>
  [667] objcall 220 ............................. <me.isFurniItem()>
  [669] jmpifz [945] ............................ if me.isFurniItem() then / else
  [672] getmovieprop 1501 ....................... <the debugPlaybackEnabled>
  [675] jmpifz [707] ............................ if the debugPlaybackEnabled then
  [678] pushcons 54 ............................. <"me.oItem:">
  [680] getparam 0 .............................. <me>
  [682] getobjprop 225 .......................... <me.oItem>
  [684] pusharglist 1 ........................... <me.oItem>
  [686] extcall 1653 ............................ <ilk(me.oItem)>
  [689] joinpadstr .............................. <"me.oItem:" && ilk(me.oItem)>
  [690] getparam 0 .............................. <me>
  [692] getobjprop 225 .......................... <me.oItem>
  [694] joinpadstr .............................. <"me.oItem:" && ilk(me.oItem) && me.oItem>
  [695] pusharglistnoret 1 ...................... <"me.oItem:" && ilk(me.oItem) && me.oItem>
  [697] extcall 274 ............................. put "me.oItem:" && ilk(me.oItem) && me.oItem
  [700] pushcons 55 ............................. <"section 1">
  [702] pusharglistnoret 1 ...................... <"section 1">
  [704] extcall 274 ............................. put "section 1"
  [707] getglobal 194 ........................... <gFeatureSet>
  [709] pushsymb 1210 ........................... <#FURNITURE_PICKUP>
  [712] pusharglist 2 ........................... <gFeatureSet, #FURNITURE_PICKUP>
  [714] objcall 196 ............................. <gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [716] not ..................................... <not gFeatureSet.isEnabled(#FURNITURE_PICKUP)>
  [717] jmpifz [726] ............................ if not gFeatureSet.isEnabled(#FURNITURE_PICKUP) then
  [720] pop 1
  [722] pusharglistnoret 0 ...................... <>
  [724] extcall 93 .............................. return 
  [726] getglobal 228 ........................... <oStudio>
  [728] pusharglist 1 ........................... <oStudio>
  [730] extcall 106 ............................. <voidp(oStudio)>
  [732] jmpifz [746] ............................ if voidp(oStudio) then / else
  [735] pushint8 1 .............................. <1>
  [737] setlocal 5 .............................. bIsOwner = 1
  [739] pushint8 1 .............................. <1>
  [741] setlocal 6 .............................. bIsMod = 1
  [743] jmp [770]
  [746] getglobal 228 ........................... <oStudio>
  [748] getglobal 198 ........................... <oDenizenManager>
  [750] pusharglist 1 ........................... <oDenizenManager>
  [752] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [754] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [756] objcall 267 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [759] setlocal 5 .............................. bIsOwner = oStudio.isOwner(oDenizenManager.getScreenName())
  [761] getglobal 198 ........................... <oDenizenManager>
  [763] pusharglist 1 ........................... <oDenizenManager>
  [765] objcall 268 ............................. <oDenizenManager.isMod()>
  [768] setlocal 6 .............................. bIsMod = oDenizenManager.isMod()
  [770] getlocal 5 .............................. <bIsOwner>
  [772] getlocal 6 .............................. <bIsMod>
  [774] or ...................................... <bIsOwner or bIsMod>
  [775] jmpifz [942] ............................ if bIsOwner or bIsMod then
  [778] getmovieprop 1501 ....................... <the debugPlaybackEnabled>
  [781] jmpifz [833] ............................ if the debugPlaybackEnabled then
  [784] pushcons 56 ............................. <"section 2">
  [786] pusharglistnoret 1 ...................... <"section 2">
  [788] extcall 274 ............................. put "section 2"
  [791] pushcons 57 ............................. <"oIsoScene.oSelectedItem:">
  [793] getglobal 88 ............................ <oIsoScene>
  [795] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [797] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [799] extcall 1653 ............................ <ilk(oIsoScene.oSelectedItem)>
  [802] joinpadstr .............................. <"oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem)>
  [803] getglobal 88 ............................ <oIsoScene>
  [805] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [807] joinpadstr .............................. <"oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem) && oIsoScene.oSelectedItem>
  [808] pusharglistnoret 1 ...................... <"oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem) && oIsoScene.oSelectedItem>
  [810] extcall 274 ............................. put "oIsoScene.oSelectedItem:" && ilk(oIsoScene.oSelectedItem) && oIsoScene.oSelectedItem
  [813] pushcons 58 ............................. <"oIsoScene.oSelectedItem.ancestor.equals(me.oItem):">
  [815] getglobal 88 ............................ <oIsoScene>
  [817] getchainedprop 133 ...................... <oIsoScene.oSelectedItem>
  [819] getparam 0 .............................. <me>
  [821] getobjprop 225 .......................... <me.oItem>
  [823] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me.oItem>
  [825] objcall 243 ............................. <oIsoScene.oSelectedItem.equals(me.oItem)>
  [827] joinpadstr .............................. <"oIsoScene.oSelectedItem.ancestor.equals(me.oItem):" && oIsoScene.oSelectedItem.equals(me.oItem)>
  [828] pusharglistnoret 1 ...................... <"oIsoScene.oSelectedItem.ancestor.equals(me.oItem):" && oIsoScene.oSelectedItem.equals(me.oItem)>
  [830] extcall 274 ............................. put "oIsoScene.oSelectedItem.ancestor.equals(me.oItem):" && oIsoScene.oSelectedItem.equals(me.oItem)
  [833] getglobal 88 ............................ <oIsoScene>
  [835] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [837] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [839] extcall 106 ............................. <voidp(oIsoScene.oSelectedItem)>
  [841] not ..................................... <not voidp(oIsoScene.oSelectedItem)>
  [842] jmpifz [942] ............................ if not voidp(oIsoScene.oSelectedItem) then
  [845] getglobal 88 ............................ <oIsoScene>
  [847] getchainedprop 133 ...................... <oIsoScene.oSelectedItem>
  [849] getparam 0 .............................. <me>
  [851] getobjprop 225 .......................... <me.oItem>
  [853] pusharglist 2 ........................... <oIsoScene.oSelectedItem, me.oItem>
  [855] objcall 243 ............................. <oIsoScene.oSelectedItem.equals(me.oItem)>
  [857] jmpifz [942] ............................ if oIsoScene.oSelectedItem.equals(me.oItem) then
  [860] getmovieprop 1501 ....................... <the debugPlaybackEnabled>
  [863] jmpifz [873] ............................ if the debugPlaybackEnabled then
  [866] pushcons 59 ............................. <"section 3">
  [868] pusharglistnoret 1 ...................... <"section 3">
  [870] extcall 274 ............................. put "section 3"
  [873] getparam 0 .............................. <me>
  [875] getchainedprop 225 ...................... <me.oItem>
  [877] pusharglist 1 ........................... <me.oItem>
  [879] objcall 171 ............................. <me.oItem.getDrag()>
  [881] not ..................................... <not me.oItem.getDrag()>
  [882] jmpifz [942] ............................ if not me.oItem.getDrag() then
  [885] getmovieprop 1501 ....................... <the debugPlaybackEnabled>
  [888] jmpifz [898] ............................ if the debugPlaybackEnabled then
  [891] pushcons 60 ............................. <"section 4...">
  [893] pusharglistnoret 1 ...................... <"section 4...">
  [895] extcall 274 ............................. put "section 4..."
  [898] getglobal 241 ........................... <oSession>
  [900] pusharglist 1 ........................... <oSession>
  [902] extcall 106 ............................. <voidp(oSession)>
  [904] jmpifz [923] ............................ if voidp(oSession) then / else
  [907] pushcons 61 ............................. <"section 4.1">
  [909] pusharglistnoret 1 ...................... <"section 4.1">
  [911] extcall 274 ............................. put "section 4.1"
  [914] getglobal 88 ............................ <oIsoScene>
  [916] pusharglistnoret 1 ...................... <oIsoScene>
  [918] objcall 27 .............................. oIsoScene.deleteSelectedItem()
  [920] jmp [942]
  [923] pushcons 62 ............................. <"section 4.2">
  [925] pusharglistnoret 1 ...................... <"section 4.2">
  [927] extcall 274 ............................. put "section 4.2"
  [930] getglobal 296 ........................... <oPossessionStudio>
  [933] getparam 0 .............................. <me>
  [935] getobjprop 225 .......................... <me.oItem>
  [937] pusharglistnoret 2 ...................... <oPossessionStudio, me.oItem>
  [939] objcall 1404 ............................ oPossessionStudio.sendPutInBackpack(me.oItem)
  [942] jmp [1123]
  [945] getparam 0 .............................. <me>
  [947] pusharglist 1 ........................... <me>
  [949] objcall 172 ............................. <me.isWallItem()>
  [951] jmpifz [1123] ........................... if me.isWallItem() then
  [954] getglobal 241 ........................... <oSession>
  [956] pusharglist 1 ........................... <oSession>
  [958] extcall 106 ............................. <voidp(oSession)>
  [960] not ..................................... <not voidp(oSession)>
  [961] jmpifz [1123] ........................... if not voidp(oSession) then
  [964] getmovieprop 1501 ....................... <the debugPlaybackEnabled>
  [967] jmpifz [977] ............................ if the debugPlaybackEnabled then
  [970] pushcons 63 ............................. <"section 5">
  [972] pusharglistnoret 1 ...................... <"section 5">
  [974] extcall 274 ............................. put "section 5"
  [977] getglobal 241 ........................... <oSession>
  [979] getobjprop 295 .......................... <oSession.bTestMode>
  [982] not ..................................... <not oSession.bTestMode>
  [983] getglobal 296 ........................... <oPossessionStudio>
  [986] pusharglist 1 ........................... <oPossessionStudio>
  [988] extcall 106 ............................. <voidp(oPossessionStudio)>
  [990] not ..................................... <not voidp(oPossessionStudio)>
  [991] and ..................................... <not oSession.bTestMode and not voidp(oPossessionStudio)>
  [992] jmpifz [1123] ........................... if not oSession.bTestMode and not voidp(oPossessionStudio) then
  [995] getmovieprop 1501 ....................... <the debugPlaybackEnabled>
  [998] jmpifz [1008] ........................... if the debugPlaybackEnabled then
  [1001] pushcons 64 ............................ <"section 6">
  [1003] pusharglistnoret 1 ..................... <"section 6">
  [1005] extcall 274 ............................ put "section 6"
  [1008] getglobal 296 .......................... <oPossessionStudio>
  [1011] getparam 0 ............................. <me>
  [1013] getobjprop 225 ......................... <me.oItem>
  [1015] pusharglistnoret 2 ..................... <oPossessionStudio, me.oItem>
  [1017] objcall 1404 ........................... oPossessionStudio.sendPutInBackpack(me.oItem)
  [1020] getmovieprop 1501 ...................... <the debugPlaybackEnabled>
  [1023] jmpifz [1033] .......................... if the debugPlaybackEnabled then
  [1026] pushcons 65 ............................ <"section 7">
  [1028] pusharglistnoret 1 ..................... <"section 7">
  [1030] extcall 274 ............................ put "section 7"
  [1033] getparam 0 ............................. <me>
  [1035] getchainedprop 225 ..................... <me.oItem>
  [1037] getobjprop 1121 ........................ <me.oItem.aDirtyItems>
  [1040] peek 0
  [1042] pusharglist 1
  [1044] extcall 150
  [1046] pushint8 1
  [1048] peek 0
  [1050] peek 2
  [1052] lteq
  [1053] jmpifz [1121] .......................... repeat with oDirtyItem in me.oItem.aDirtyItems
  [1056] peek 2
  [1058] peek 1
  [1060] pusharglist 2
  [1062] extcall 151
  [1064] setlocal 7
  [1066] getlocal 7 ............................. <oDirtyItem>
  [1068] getparam 0 ............................. <me>
  [1070] getobjprop 225 ......................... <me.oItem>
  [1072] pusharglist 2 .......................... <oDirtyItem, me.oItem>
  [1074] objcall 243 ............................ <oDirtyItem.equals(me.oItem)>
  [1076] not .................................... <not oDirtyItem.equals(me.oItem)>
  [1077] jmpifz [1116] .......................... if not oDirtyItem.equals(me.oItem) then
  [1080] getmovieprop 1501 ...................... <the debugPlaybackEnabled>
  [1083] jmpifz [1093] .......................... if the debugPlaybackEnabled then
  [1086] pushcons 66 ............................ <"section 8">
  [1088] pusharglistnoret 1 ..................... <"section 8">
  [1090] extcall 274 ............................ put "section 8"
  [1093] getglobal 296 .......................... <oPossessionStudio>
  [1096] getlocal 7 ............................. <oDirtyItem>
  [1098] pusharglistnoret 2 ..................... <oPossessionStudio, oDirtyItem>
  [1100] objcall 307 ............................ oPossessionStudio.sendPutInStudio(oDirtyItem)
  [1103] getmovieprop 1501 ...................... <the debugPlaybackEnabled>
  [1106] jmpifz [1116] .......................... if the debugPlaybackEnabled then
  [1109] pushcons 67 ............................ <"section 9">
  [1111] pusharglistnoret 1 ..................... <"section 9">
  [1113] extcall 274 ............................ put "section 9"
  [1116] pushint8 1
  [1118] add
  [1119] endrepeat [1048]
  [1121] pop 3
  [1123] jmp [1664]
  [1126] peek 0
  [1128] pushcons 30 ............................ <"Rotate">
  [1130] eq
  [1131] jmpifz [1193] .......................... (case) "Rotate":
  [1134] getglobal 194 .......................... <gFeatureSet>
  [1136] pushsymb 1293 .......................... <#FURNITURE_ROTATE>
  [1139] pusharglist 2 .......................... <gFeatureSet, #FURNITURE_ROTATE>
  [1141] objcall 196 ............................ <gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [1143] not .................................... <not gFeatureSet.isEnabled(#FURNITURE_ROTATE)>
  [1144] jmpifz [1161] .......................... if not gFeatureSet.isEnabled(#FURNITURE_ROTATE) then
  [1147] getglobal 174 .......................... <ElementMgr>
  [1149] pushcons 50 ............................ <"FEATURE_DISABLED">
  [1151] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1153] objcall 197 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1155] pop 1
  [1157] pusharglistnoret 0 ..................... <>
  [1159] extcall 93 ............................. return 
  [1161] getparam 0 ............................. <me>
  [1163] pusharglist 1 .......................... <me>
  [1165] objcall 220 ............................ <me.isFurniItem()>
  [1167] jmpifz [1190] .......................... if me.isFurniItem() then
  [1170] getparam 0 ............................. <me>
  [1172] getchainedprop 225 ..................... <me.oItem>
  [1174] pusharglistnoret 1 ..................... <me.oItem>
  [1176] objcall 1235 ........................... me.oItem.rotateItem()
  [1179] getparam 0 ............................. <me>
  [1181] getglobal 88 ........................... <oIsoScene>
  [1183] getobjprop 133 ......................... <oIsoScene.oSelectedItem>
  [1185] pusharglistnoret 2 ..................... <me, oIsoScene.oSelectedItem>
  [1187] objcall 265 ............................ me.display(oIsoScene.oSelectedItem)
  [1190] jmp [1664]
  [1193] peek 0
  [1195] pushcons 29 ............................ <"Move">
  [1197] eq
  [1198] jmpifz [1253] .......................... (case) "Move":
  [1201] getglobal 194 .......................... <gFeatureSet>
  [1203] pushsymb 301 ........................... <#FURNITURE_MOVE>
  [1206] pusharglist 2 .......................... <gFeatureSet, #FURNITURE_MOVE>
  [1208] objcall 196 ............................ <gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [1210] not .................................... <not gFeatureSet.isEnabled(#FURNITURE_MOVE)>
  [1211] jmpifz [1228] .......................... if not gFeatureSet.isEnabled(#FURNITURE_MOVE) then
  [1214] getglobal 174 .......................... <ElementMgr>
  [1216] pushcons 50 ............................ <"FEATURE_DISABLED">
  [1218] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1220] objcall 197 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1222] pop 1
  [1224] pusharglistnoret 0 ..................... <>
  [1226] extcall 93 ............................. return 
  [1228] getparam 0 ............................. <me>
  [1230] pusharglist 1 .......................... <me>
  [1232] objcall 220 ............................ <me.isFurniItem()>
  [1234] getparam 0 ............................. <me>
  [1236] pusharglist 1 .......................... <me>
  [1238] objcall 172 ............................ <me.isWallItem()>
  [1240] or ..................................... <me.isFurniItem() or me.isWallItem()>
  [1241] jmpifz [1250] .......................... if me.isFurniItem() or me.isWallItem() then
  [1244] getglobal 88 ........................... <oIsoScene>
  [1246] pusharglistnoret 1 ..................... <oIsoScene>
  [1248] objcall 32 ............................. oIsoScene.moveSelectedItem()
  [1250] jmp [1664]
  [1253] peek 0
  [1255] pushcons 33 ............................ <"Use">
  [1257] eq
  [1258] jmpifz [1319] .......................... (case) "Use":
  [1261] getglobal 194 .......................... <gFeatureSet>
  [1263] pushsymb 1444 .......................... <#FURNITURE_USE>
  [1266] pusharglist 2 .......................... <gFeatureSet, #FURNITURE_USE>
  [1268] objcall 196 ............................ <gFeatureSet.isEnabled(#FURNITURE_USE)>
  [1270] not .................................... <not gFeatureSet.isEnabled(#FURNITURE_USE)>
  [1271] jmpifz [1288] .......................... if not gFeatureSet.isEnabled(#FURNITURE_USE) then
  [1274] getglobal 174 .......................... <ElementMgr>
  [1276] pushcons 50 ............................ <"FEATURE_DISABLED">
  [1278] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1280] objcall 197 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1282] pop 1
  [1284] pusharglistnoret 0 ..................... <>
  [1286] extcall 93 ............................. return 
  [1288] getparam 0 ............................. <me>
  [1290] pusharglist 1 .......................... <me>
  [1292] objcall 220 ............................ <me.isFurniItem()>
  [1294] getparam 0 ............................. <me>
  [1296] pusharglist 1 .......................... <me>
  [1298] objcall 172 ............................ <me.isWallItem()>
  [1300] or ..................................... <me.isFurniItem() or me.isWallItem()>
  [1301] jmpifz [1316] .......................... if me.isFurniItem() or me.isWallItem() then
  [1304] getparam 0 ............................. <me>
  [1306] getchainedprop 225 ..................... <me.oItem>
  [1308] getchainedprop 821 ..................... <me.oItem.oAction>
  [1311] pusharglistnoret 1 ..................... <me.oItem.oAction>
  [1313] objcall 1443 ........................... me.oItem.oAction.use()
  [1316] jmp [1664]
  [1319] peek 0
  [1321] pushcons 15 ............................ <"Thumbs Up">
  [1323] eq
  [1324] jmpifz [1426] .......................... (case) "Thumbs Up":
  [1327] getglobal 194 .......................... <gFeatureSet>
  [1329] pushsymb 1654 .......................... <#VOTING>
  [1332] pusharglist 2 .......................... <gFeatureSet, #VOTING>
  [1334] objcall 196 ............................ <gFeatureSet.isEnabled(#VOTING)>
  [1336] not .................................... <not gFeatureSet.isEnabled(#VOTING)>
  [1337] jmpifz [1354] .......................... if not gFeatureSet.isEnabled(#VOTING) then
  [1340] getglobal 174 .......................... <ElementMgr>
  [1342] pushcons 50 ............................ <"FEATURE_DISABLED">
  [1344] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1346] objcall 197 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1348] pop 1
  [1350] pusharglistnoret 0 ..................... <>
  [1352] extcall 93 ............................. return 
  [1354] getparam 0 ............................. <me>
  [1356] pusharglist 1 .......................... <me>
  [1358] objcall 1551 ........................... <me.hasVoted()>
  [1361] setlocal 8 ............................. bHasVoted = me.hasVoted()
  [1363] getlocal 8 ............................. <bHasVoted>
  [1365] pushzero ............................... <0>
  [1366] eq ..................................... <bHasVoted = 0>
  [1367] getlocal 8 ............................. <bHasVoted>
  [1369] not .................................... <not bHasVoted>
  [1370] or ..................................... <(bHasVoted = 0) or not bHasVoted>
  [1371] jmpifz [1396] .......................... if (bHasVoted = 0) or not bHasVoted then
  [1374] getglobal 228 .......................... <oStudio>
  [1376] pusharglist 1 .......................... <oStudio>
  [1378] objcall 229 ............................ <oStudio.getcdplayer()>
  [1380] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1382] objcall 231 ............................ <oStudio.getcdplayer().getCd()>
  [1384] pusharglistnoret 1 ..................... <oStudio.getcdplayer().getCd()>
  [1386] objcall 1655 ........................... oStudio.getcdplayer().getCd().votePositive()
  [1389] getglobal 228 .......................... <oStudio>
  [1391] pusharglistnoret 1 ..................... <oStudio>
  [1393] objcall 1656 ........................... oStudio.sendThumbsUp()
  [1396] getparam 0 ............................. <me>
  [1398] getglobal 228 .......................... <oStudio>
  [1400] pusharglist 1 .......................... <oStudio>
  [1402] objcall 229 ............................ <oStudio.getcdplayer()>
  [1404] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1406] objcall 231 ............................ <oStudio.getcdplayer().getCd()>
  [1408] pusharglistnoret 2 ..................... <me, oStudio.getcdplayer().getCd()>
  [1410] objcall 232 ............................ me.displayCd(oStudio.getcdplayer().getCd())
  [1412] getparam 0 ............................. <me>
  [1414] pusharglist 0 .......................... <>
  [1416] extcall 132 ............................ <VOID>
  [1418] pusharglistnoret 2 ..................... <me, VOID>
  [1420] objcall 265 ............................ me.display(VOID)
  [1423] jmp [1664]
  [1426] peek 0
  [1428] pushcons 16 ............................ <"Thumbs Down">
  [1430] eq
  [1431] jmpifz [1533] .......................... (case) "Thumbs Down":
  [1434] getglobal 194 .......................... <gFeatureSet>
  [1436] pushsymb 1654 .......................... <#VOTING>
  [1439] pusharglist 2 .......................... <gFeatureSet, #VOTING>
  [1441] objcall 196 ............................ <gFeatureSet.isEnabled(#VOTING)>
  [1443] not .................................... <not gFeatureSet.isEnabled(#VOTING)>
  [1444] jmpifz [1461] .......................... if not gFeatureSet.isEnabled(#VOTING) then
  [1447] getglobal 174 .......................... <ElementMgr>
  [1449] pushcons 50 ............................ <"FEATURE_DISABLED">
  [1451] pusharglistnoret 2 ..................... <ElementMgr, "FEATURE_DISABLED">
  [1453] objcall 197 ............................ ElementMgr.alert("FEATURE_DISABLED")
  [1455] pop 1
  [1457] pusharglistnoret 0 ..................... <>
  [1459] extcall 93 ............................. return 
  [1461] getparam 0 ............................. <me>
  [1463] pusharglist 1 .......................... <me>
  [1465] objcall 1551 ........................... <me.hasVoted()>
  [1468] setlocal 8 ............................. bHasVoted = me.hasVoted()
  [1470] getlocal 8 ............................. <bHasVoted>
  [1472] pushzero ............................... <0>
  [1473] eq ..................................... <bHasVoted = 0>
  [1474] getlocal 8 ............................. <bHasVoted>
  [1476] not .................................... <not bHasVoted>
  [1477] or ..................................... <(bHasVoted = 0) or not bHasVoted>
  [1478] jmpifz [1503] .......................... if (bHasVoted = 0) or not bHasVoted then
  [1481] getglobal 228 .......................... <oStudio>
  [1483] pusharglist 1 .......................... <oStudio>
  [1485] objcall 229 ............................ <oStudio.getcdplayer()>
  [1487] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1489] objcall 231 ............................ <oStudio.getcdplayer().getCd()>
  [1491] pusharglistnoret 1 ..................... <oStudio.getcdplayer().getCd()>
  [1493] objcall 1657 ........................... oStudio.getcdplayer().getCd().voteNegative()
  [1496] getglobal 228 .......................... <oStudio>
  [1498] pusharglistnoret 1 ..................... <oStudio>
  [1500] objcall 1658 ........................... oStudio.sendThumbsDown()
  [1503] getparam 0 ............................. <me>
  [1505] getglobal 228 .......................... <oStudio>
  [1507] pusharglist 1 .......................... <oStudio>
  [1509] objcall 229 ............................ <oStudio.getcdplayer()>
  [1511] pusharglist 1 .......................... <oStudio.getcdplayer()>
  [1513] objcall 231 ............................ <oStudio.getcdplayer().getCd()>
  [1515] pusharglistnoret 2 ..................... <me, oStudio.getcdplayer().getCd()>
  [1517] objcall 232 ............................ me.displayCd(oStudio.getcdplayer().getCd())
  [1519] getparam 0 ............................. <me>
  [1521] pusharglist 0 .......................... <>
  [1523] extcall 132 ............................ <VOID>
  [1525] pusharglistnoret 2 ..................... <me, VOID>
  [1527] objcall 265 ............................ me.display(VOID)
  [1530] jmp [1664]
  [1533] peek 0
  [1535] pushcons 36 ............................ <"Stop Performing">
  [1537] eq
  [1538] jmpifz [1562] .......................... (case) "Stop Performing":
  [1541] getglobal 228 .......................... <oStudio>
  [1543] pusharglistnoret 1 ..................... <oStudio>
  [1545] objcall 1659 ........................... oStudio.sendCdEnd()
  [1548] getparam 0 ............................. <me>
  [1550] pusharglist 0 .......................... <>
  [1552] extcall 132 ............................ <VOID>
  [1554] pusharglistnoret 2 ..................... <me, VOID>
  [1556] objcall 265 ............................ me.display(VOID)
  [1559] jmp [1664]
  [1562] peek 0
  [1564] pushcons 68 ............................ <"Stop song">
  [1566] eq
  [1567] jmpifz [1591] .......................... (case) "Stop song":
  [1570] getglobal 228 .......................... <oStudio>
  [1572] pusharglistnoret 1 ..................... <oStudio>
  [1574] objcall 1660 ........................... oStudio.sendJukeboxStop()
  [1577] getparam 0 ............................. <me>
  [1579] pusharglist 0 .......................... <>
  [1581] extcall 132 ............................ <VOID>
  [1583] pusharglistnoret 2 ..................... <me, VOID>
  [1585] objcall 265 ............................ me.display(VOID)
  [1588] jmp [1664]
  [1591] peek 0
  [1593] pushcons 40 ............................ <"Edit URL">
  [1595] eq
  [1596] jmpifz [1664] .......................... (case) "Edit URL":
  [1599] getglobal 174 .......................... <ElementMgr>
  [1601] pushcons 69 ............................ <"cc.editurl.window">
  [1603] pusharglistnoret 2 ..................... <ElementMgr, "cc.editurl.window">
  [1605] objcall 1661 ........................... ElementMgr.newwindow("cc.editurl.window")
  [1608] getparam 0 ............................. <me>
  [1610] getchainedprop 225 ..................... <me.oItem>
  [1612] pushsymb 289 ........................... <#aAttributes>
  [1615] pushsymb 1600 .......................... <#urlLink>
  [1618] pusharglist 3 .......................... <me.oItem, #aAttributes, #urlLink>
  [1620] objcall 611 ............................ <me.oItem.aAttributes[#urlLink]>
  [1623] pusharglist 1 .......................... <me.oItem.aAttributes[#urlLink]>
  [1625] extcall 106 ............................ <voidp(me.oItem.aAttributes[#urlLink])>
  [1627] jmpifz [1637] .......................... if voidp(me.oItem.aAttributes[#urlLink]) then / else
  [1630] pushcons 70 ............................ <"http://">
  [1632] setlocal 9 ............................. myURL = "http://"
  [1634] jmp [1654]
  [1637] getparam 0 ............................. <me>
  [1639] getchainedprop 225 ..................... <me.oItem>
  [1641] pushsymb 289 ........................... <#aAttributes>
  [1644] pushsymb 1600 .......................... <#urlLink>
  [1647] pusharglist 3 .......................... <me.oItem, #aAttributes, #urlLink>
  [1649] objcall 611 ............................ <me.oItem.aAttributes[#urlLink]>
  [1652] setlocal 9 ............................. myURL = me.oItem.aAttributes[#urlLink]
  [1654] pushcons 71 ............................ <"enter_url">
  [1656] pusharglist 1 .......................... <"enter_url">
  [1658] extcall 163 ............................ <member("enter_url")>
  [1660] getlocal 9 ............................. <myURL>
  [1662] setobjprop 164 ......................... member("enter_url").text = myURL
  [1664] pop 1 .................................. end case
  [1666] ret
end

on hasVoted me
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 14] ............................ if voidp(oStudio) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 93 .............................. return 0
  [ 14] getglobal 228 ........................... <oStudio>
  [ 16] pusharglist 1 ........................... <oStudio>
  [ 18] objcall 229 ............................. <oStudio.getcdplayer()>
  [ 20] pusharglist 1 ........................... <oStudio.getcdplayer()>
  [ 22] objcall 231 ............................. <oStudio.getcdplayer().getCd()>
  [ 24] pusharglist 1 ........................... <oStudio.getcdplayer().getCd()>
  [ 26] objcall 1551 ............................ <oStudio.getcdplayer().getCd().hasVoted()>
  [ 29] pusharglistnoret 1 ...................... <oStudio.getcdplayer().getCd().hasVoted()>
  [ 31] extcall 93 .............................. return oStudio.getcdplayer().getCd().hasVoted()
  [ 33] ret
end

on isOwner me
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 15] ............................ if voidp(oStudio) then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 93 .............................. return 1
  [ 15] getglobal 228 ........................... <oStudio>
  [ 17] getglobal 198 ........................... <oDenizenManager>
  [ 19] pusharglist 1 ........................... <oDenizenManager>
  [ 21] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 23] pusharglist 2 ........................... <oStudio, oDenizenManager.getScreenName()>
  [ 25] objcall 267 ............................. <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 28] pusharglistnoret 1 ...................... <oStudio.isOwner(oDenizenManager.getScreenName())>
  [ 30] extcall 93 .............................. return oStudio.isOwner(oDenizenManager.getScreenName())
  [ 32] ret
end

on isMod me
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 15] ............................ if voidp(oStudio) then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 93 .............................. return 1
  [ 15] getglobal 198 ........................... <oDenizenManager>
  [ 17] pusharglist 1 ........................... <oDenizenManager>
  [ 19] objcall 268 ............................. <oDenizenManager.isMod()>
  [ 22] pusharglistnoret 1 ...................... <oDenizenManager.isMod()>
  [ 24] extcall 93 .............................. return oDenizenManager.isMod()
  [ 26] ret
end

on isBot me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 154 ............................. <me.isAvatar()>
  [  6] not ..................................... <not me.isAvatar()>
  [  7] jmpifz [ 15] ............................ if not me.isAvatar() then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 93 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getchainedprop 225 ...................... <me.oItem>
  [ 19] pusharglist 1 ........................... <me.oItem>
  [ 21] objcall 768 ............................. <me.oItem.isBot()>
  [ 24] pusharglistnoret 1 ...................... <me.oItem.isBot()>
  [ 26] extcall 93 .............................. return me.oItem.isBot()
  [ 28] ret
end

on isAvatar me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 225 .......................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 106 ............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 93 .............................. return 0
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 106 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 93 .............................. return 
  [ 31] getglobal 88 ............................ <oIsoScene>
  [ 33] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 225 .......................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 93 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 225 ...................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 154 ............................. <me.oItem.isAvatar()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isAvatar()>
  [ 57] extcall 93 .............................. return me.oItem.isAvatar()
  [ 59] ret
end

on isFurniItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 225 .......................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 106 ............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 93 .............................. return 0
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 106 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 93 .............................. return 
  [ 31] getglobal 88 ............................ <oIsoScene>
  [ 33] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 225 .......................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 93 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 225 ...................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 220 ............................. <me.oItem.isFurniItem()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isFurniItem()>
  [ 57] extcall 93 .............................. return me.oItem.isFurniItem()
  [ 59] ret
end

on isWallItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 225 .......................... <me.oItem>
  [  4] pusharglist 1 ........................... <me.oItem>
  [  6] extcall 106 ............................. <voidp(me.oItem)>
  [  8] jmpifz [ 16] ............................ if voidp(me.oItem) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 93 .............................. return 0
  [ 16] getglobal 88 ............................ <oIsoScene>
  [ 18] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [ 20] pusharglist 1 ........................... <oIsoScene.oSelectedItem>
  [ 22] extcall 106 ............................. <voidp(oIsoScene.oSelectedItem)>
  [ 24] jmpifz [ 31] ............................ if voidp(oIsoScene.oSelectedItem) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 93 .............................. return 
  [ 31] getglobal 88 ............................ <oIsoScene>
  [ 33] getobjprop 133 .......................... <oIsoScene.oSelectedItem>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 225 .......................... <me.oItem>
  [ 39] nteq .................................... <oIsoScene.oSelectedItem <> me.oItem>
  [ 40] jmpifz [ 47] ............................ if oIsoScene.oSelectedItem <> me.oItem then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 93 .............................. return 
  [ 47] getparam 0 .............................. <me>
  [ 49] getchainedprop 225 ...................... <me.oItem>
  [ 51] pusharglist 1 ........................... <me.oItem>
  [ 53] objcall 172 ............................. <me.oItem.isWallItem()>
  [ 55] pusharglistnoret 1 ...................... <me.oItem.isWallItem()>
  [ 57] extcall 93 .............................. return me.oItem.isWallItem()
  [ 59] ret
end

on isMe me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 154 ............................. <me.isAvatar()>
  [  6] not ..................................... <not me.isAvatar()>
  [  7] jmpifz [ 15] ............................ if not me.isAvatar() then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 93 .............................. return 0
  [ 15] getglobal 228 ........................... <oStudio>
  [ 17] pusharglist 1 ........................... <oStudio>
  [ 19] extcall 106 ............................. <voidp(oStudio)>
  [ 21] jmpifz [ 30] ............................ if voidp(oStudio) then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 93 .............................. return 1
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 225 ...................... <me.oItem>
  [ 34] pusharglist 1 ........................... <me.oItem>
  [ 36] objcall 155 ............................. <me.oItem.getScreenName()>
  [ 38] getglobal 198 ........................... <oDenizenManager>
  [ 40] pusharglist 1 ........................... <oDenizenManager>
  [ 42] objcall 155 ............................. <oDenizenManager.getScreenName()>
  [ 44] eq ...................................... <me.oItem.getScreenName() = oDenizenManager.getScreenName()>
  [ 45] pusharglistnoret 1 ...................... <me.oItem.getScreenName() = oDenizenManager.getScreenName()>
  [ 47] extcall 93 .............................. return me.oItem.getScreenName() = oDenizenManager.getScreenName()
  [ 49] ret
end

on displaySong me, foSong, sAvatar
  [  0] getglobal 228 ........................... <oStudio>
  [  2] pusharglist 1 ........................... <oStudio>
  [  4] extcall 106 ............................. <voidp(oStudio)>
  [  6] jmpifz [ 13] ............................ if voidp(oStudio) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 93 .............................. return 
  [ 13] getparam 1 .............................. <foSong>
  [ 15] pusharglist 1 ........................... <foSong>
  [ 17] extcall 106 ............................. <voidp(foSong)>
  [ 19] jmpifz [ 26] ............................ if voidp(foSong) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 93 .............................. return 
  [ 26] getparam 1 .............................. <foSong>
  [ 28] pusharglist 1 ........................... <foSong>
  [ 30] objcall 1664 ............................ <foSong.getartistName()>
  [ 33] setlocal 0 .............................. sAuthor = foSong.getartistName()
  [ 35] getparam 1 .............................. <foSong>
  [ 37] pusharglist 1 ........................... <foSong>
  [ 39] objcall 1569 ............................ <foSong.getSongName()>
  [ 42] setlocal 1 .............................. sSongName = foSong.getSongName()
  [ 44] getparam 1 .............................. <foSong>
  [ 46] pusharglist 1 ........................... <foSong>
  [ 48] objcall 1665 ............................ <foSong.getGenreName()>
  [ 51] setlocal 2 .............................. sGenre = foSong.getGenreName()
  [ 53] pushcons 72 ............................. <"IJplayer_small">
  [ 55] pusharglist 1 ........................... <"IJplayer_small">
  [ 57] extcall 163 ............................. <member("IJplayer_small")>
  [ 59] setlocal 3 .............................. oPreviewImage = member("IJplayer_small")
  [ 61] getlocal 3 .............................. <oPreviewImage>
  [ 63] getobjprop 639 .......................... <oPreviewImage.memberNum>
  [ 66] pushint8 1 .............................. <1>
  [ 68] inv ..................................... <-1>
  [ 69] eq ...................................... <oPreviewImage.memberNum = -1>
  [ 70] jmpifz [ 77] ............................ if oPreviewImage.memberNum = -1 then
  [ 73] pusharglistnoret 0 ...................... <>
  [ 75] extcall 93 .............................. return 
  [ 77] getparam 0 .............................. <me>
  [ 79] pusharglistnoret 1 ...................... <me>
  [ 81] objcall 360 ............................. me.destroy()
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 1 ...................... <me>
  [ 88] objcall 1539 ............................ me.displayInfoStand()
  [ 91] getparam 0 .............................. <me>
  [ 93] getlocal 3 .............................. <oPreviewImage>
  [ 95] pusharglistnoret 2 ...................... <me, oPreviewImage>
  [ 97] objcall 1540 ............................ me.displayPreviewImage(oPreviewImage)
  [100] pushcons 11 ............................. <"NOW PLAYING">
  [102] pushcons 12 ............................. <RETURN>
  [104] joinstr ................................. <"NOW PLAYING" & RETURN>
  [105] getlocal 1 .............................. <sSongName>
  [107] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName>
  [108] pushcons 12 ............................. <RETURN>
  [110] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN>
  [111] pushcons 13 ............................. <"by: ">
  [113] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: ">
  [114] getlocal 0 .............................. <sAuthor>
  [116] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor>
  [117] pushcons 12 ............................. <RETURN>
  [119] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN>
  [120] pushcons 73 ............................. <"genre: ">
  [122] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN & "genre: ">
  [123] getlocal 2 .............................. <sGenre>
  [125] joinstr ................................. <"NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN & "genre: " & sGenre>
  [126] setlocal 4 .............................. sText = "NOW PLAYING" & RETURN & sSongName & RETURN & "by: " & sAuthor & RETURN & "genre: " & sGenre
  [128] getparam 0 .............................. <me>
  [130] getlocal 4 .............................. <sText>
  [132] pusharglistnoret 2 ...................... <me, sText>
  [134] objcall 1541 ............................ me.displayDescription(sText)
  [137] getparam 2 .............................. <sAvatar>
  [139] getglobal 198 ........................... <oDenizenManager>
  [141] pusharglist 1 ........................... <oDenizenManager>
  [143] objcall 1666 ............................ <oDenizenManager.getDenizen()>
  [146] pusharglist 1 ........................... <oDenizenManager.getDenizen()>
  [148] objcall 155 ............................. <oDenizenManager.getDenizen().getScreenName()>
  [150] eq ...................................... <sAvatar = oDenizenManager.getDenizen().getScreenName()>
  [151] jmpifz [166] ............................ if sAvatar = oDenizenManager.getDenizen().getScreenName() then
  [154] getparam 0 .............................. <me>
  [156] pushcons 68 ............................. <"Stop song">
  [158] pusharglist 1 ........................... <["Stop song"]>
  [160] pushlist ................................ <["Stop song"]>
  [161] pusharglistnoret 2 ...................... <me, ["Stop song"]>
  [163] objcall 1546 ............................ me.DisplayButtons(["Stop song"])
  [166] ret
end
