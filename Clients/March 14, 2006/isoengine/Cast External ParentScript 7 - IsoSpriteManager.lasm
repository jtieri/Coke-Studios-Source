property bDebug, aSprites, aSpritePool, iSpriteCounter
global oIsoScene

on new me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 338 .......................... me.bDebug = 0
  [  6] getparam 0 .............................. <me>
  [  8] getglobal 133 ........................... <oIsoScene>
  [ 10] getchainedprop 339 ...................... <oIsoScene.oIsoConstants>
  [ 13] getobjprop 598 .......................... <oIsoScene.oIsoConstants.DEFAULT_SPRITE_COUNTER>
  [ 16] setobjprop 815 .......................... me.iSpriteCounter = oIsoScene.oIsoConstants.DEFAULT_SPRITE_COUNTER
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 0 ........................... <[]>
  [ 23] pushlist ................................ <[]>
  [ 24] setobjprop 816 .......................... me.aSpritePool = []
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] setobjprop 139 .......................... me.aSprites = []
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglistnoret 1 ...................... <me>
  [ 38] extcall 52 .............................. return me
  [ 40] ret
end

on addSprite me, oSprite
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"addSprite()">
  [  4] pusharglistnoret 2 ...................... <me, "addSprite()">
  [  6] objcall 332 ............................. me.debug("addSprite()")
  [  9] getparam 0 .............................. <me>
  [ 11] getchainedprop 139 ...................... <me.aSprites>
  [ 13] getparam 1 .............................. <oSprite>
  [ 15] pusharglistnoret 2 ...................... <me.aSprites, oSprite>
  [ 17] objcall 140 ............................. me.aSprites.add(oSprite)
  [ 19] ret
end

on getSprite me, sID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 1 .............................. <"getSprite()">
  [  4] pusharglistnoret 2 ...................... <me, "getSprite()">
  [  6] objcall 332 ............................. me.debug("getSprite()")
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 0
  [ 13] getlocal 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pushsymb 139 ............................ <#aSprites>
  [ 19] pusharglist 2 ........................... <me, #aSprites>
  [ 21] objcall 155 ............................. <me.aSprites.count>
  [ 23] lteq
  [ 24] jmpifz [ 67] ............................ repeat with i = 1 to me.aSprites.count
  [ 27] getparam 0 .............................. <me>
  [ 29] pushsymb 139 ............................ <#aSprites>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 3 ........................... <me, #aSprites, i>
  [ 35] objcall 104 ............................. <me.aSprites[i]>
  [ 37] setlocal 1 .............................. oSprite = me.aSprites[i]
  [ 39] getlocal 1 .............................. <oSprite>
  [ 41] pusharglist 1 ........................... <oSprite>
  [ 43] objcall 817 ............................. <oSprite.getId()>
  [ 46] getparam 1 .............................. <sID>
  [ 48] eq ...................................... <oSprite.getId() = sID>
  [ 49] jmpifz [ 58] ............................ if oSprite.getId() = sID then
  [ 52] getlocal 1 .............................. <oSprite>
  [ 54] pusharglistnoret 1 ...................... <oSprite>
  [ 56] extcall 52 .............................. return oSprite
  [ 58] pushint8 1
  [ 60] getlocal 0
  [ 62] add
  [ 63] setlocal 0
  [ 65] endrepeat [ 13]
  [ 67] ret
end

on getSpritesAtSquare me, oSquare
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aSpritesAtSquare = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 139 ............................ <#aSprites>
  [ 15] pusharglist 2 ........................... <me, #aSprites>
  [ 17] objcall 155 ............................. <me.aSprites.count>
  [ 19] lteq
  [ 20] jmpifz [ 64] ............................ repeat with i = 1 to me.aSprites.count
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 139 ............................ <#aSprites>
  [ 27] getlocal 1 .............................. <i>
  [ 29] pusharglist 3 ........................... <me, #aSprites, i>
  [ 31] objcall 104 ............................. <me.aSprites[i]>
  [ 33] setlocal 2 .............................. oSprite = me.aSprites[i]
  [ 35] getlocal 2 .............................. <oSprite>
  [ 37] getparam 1 .............................. <oSquare>
  [ 39] pusharglist 2 ........................... <oSprite, oSquare>
  [ 41] objcall 818 ............................. <oSprite.existsAtSquare(oSquare)>
  [ 44] jmpifz [ 55] ............................ if oSprite.existsAtSquare(oSquare) then
  [ 47] getlocal 0 .............................. <aSpritesAtSquare>
  [ 49] getlocal 2 .............................. <oSprite>
  [ 51] pusharglistnoret 2 ...................... <aSpritesAtSquare, oSprite>
  [ 53] objcall 140 ............................. aSpritesAtSquare.add(oSprite)
  [ 55] pushint8 1
  [ 57] getlocal 1
  [ 59] add
  [ 60] setlocal 1
  [ 62] endrepeat [  9]
  [ 64] getlocal 0 .............................. <aSpritesAtSquare>
  [ 66] pusharglistnoret 1 ...................... <aSpritesAtSquare>
  [ 68] extcall 52 .............................. return aSpritesAtSquare
  [ 70] ret
end

on removeSprite me, _oSprite
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 2 .............................. <"removeSprite()">
  [  4] pusharglistnoret 2 ...................... <me, "removeSprite()">
  [  6] objcall 332 ............................. me.debug("removeSprite()")
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 0
  [ 13] getlocal 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pushsymb 139 ............................ <#aSprites>
  [ 19] pusharglist 2 ........................... <me, #aSprites>
  [ 21] objcall 155 ............................. <me.aSprites.count>
  [ 23] lteq
  [ 24] jmpifz [ 87] ............................ repeat with i = 1 to me.aSprites.count
  [ 27] getparam 0 .............................. <me>
  [ 29] pushsymb 139 ............................ <#aSprites>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 3 ........................... <me, #aSprites, i>
  [ 35] objcall 104 ............................. <me.aSprites[i]>
  [ 37] setlocal 1 .............................. oSprite = me.aSprites[i]
  [ 39] getlocal 1 .............................. <oSprite>
  [ 41] pusharglist 1 ........................... <oSprite>
  [ 43] objcall 817 ............................. <oSprite.getId()>
  [ 46] getparam 1 .............................. <_oSprite>
  [ 48] pusharglist 1 ........................... <_oSprite>
  [ 50] objcall 817 ............................. <_oSprite.getId()>
  [ 53] eq ...................................... <oSprite.getId() = _oSprite.getId()>
  [ 54] jmpifz [ 78] ............................ if oSprite.getId() = _oSprite.getId() then
  [ 57] getlocal 1 .............................. <oSprite>
  [ 59] pusharglistnoret 1 ...................... <oSprite>
  [ 61] objcall 11 .............................. oSprite.destroy()
  [ 63] getparam 0 .............................. <me>
  [ 65] getchainedprop 139 ...................... <me.aSprites>
  [ 67] getlocal 0 .............................. <i>
  [ 69] pusharglistnoret 2 ...................... <me.aSprites, i>
  [ 71] objcall 820 ............................. me.aSprites.deleteAt(i)
  [ 74] pusharglistnoret 0 ...................... <>
  [ 76] extcall 52 .............................. return 
  [ 78] pushint8 1
  [ 80] getlocal 0
  [ 82] add
  [ 83] setlocal 0
  [ 85] endrepeat [ 13]
  [ 87] ret
end

on toggleBackground me
  [  0] ret
end

on getPooledSprite me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 238 ............................. <VOID>
  [  4] setlocal 0 .............................. iSprite = VOID
  [  6] getglobal 133 ........................... <oIsoScene>
  [  8] getchainedprop 339 ...................... <oIsoScene.oIsoConstants>
  [ 11] getobjprop 598 .......................... <oIsoScene.oIsoConstants.DEFAULT_SPRITE_COUNTER>
  [ 14] setlocal 1
  [ 16] getlocal 1
  [ 18] getglobal 133 ........................... <oIsoScene>
  [ 20] getchainedprop 339 ...................... <oIsoScene.oIsoConstants>
  [ 23] getobjprop 599 .......................... <oIsoScene.oIsoConstants.DEFAULT_SPRITE_COUNTER_MAX>
  [ 26] lteq
  [ 27] jmpifz [ 94] ............................ repeat with i = oIsoScene.oIsoConstants.DEFAULT_SPRITE_COUNTER to oIsoScene.oIsoConstants.DEFAULT_SPRITE_COUNTER_MAX
  [ 30] getparam 0 .............................. <me>
  [ 32] getchainedprop 816 ...................... <me.aSpritePool>
  [ 35] getlocal 1 .............................. <i>
  [ 37] pusharglist 2 ........................... <me.aSpritePool, i>
  [ 39] objcall 822 ............................. <me.aSpritePool.getOne(i)>
  [ 42] pushzero ................................ <0>
  [ 43] eq ...................................... <me.aSpritePool.getOne(i) = 0>
  [ 44] jmpifz [ 85] ............................ if me.aSpritePool.getOne(i) = 0 then
  [ 47] getlocal 1 .............................. <i>
  [ 49] setlocal 0 .............................. iSprite = i
  [ 51] getparam 0 .............................. <me>
  [ 53] getchainedprop 816 ...................... <me.aSpritePool>
  [ 56] getlocal 1 .............................. <i>
  [ 58] pusharglistnoret 2 ...................... <me.aSpritePool, i>
  [ 60] objcall 140 ............................. me.aSpritePool.add(i)
  [ 62] getlocal 0 .............................. <iSprite>
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglistnoret 2 ...................... <iSprite, 1>
  [ 68] extcall 823 ............................. puppetSprite(iSprite, 1)
  [ 71] getlocal 0 .............................. <iSprite>
  [ 73] pusharglist 1 ........................... <iSprite>
  [ 75] extcall 119 ............................. <sprite(iSprite)>
  [ 77] pusharglist 0 ........................... <[]>
  [ 79] pushlist ................................ <[]>
  [ 80] setobjprop 193 .......................... sprite(iSprite).scriptInstanceList = []
  [ 82] jmp [ 94] ............................... exit repeat
  [ 85] pushint8 1
  [ 87] getlocal 1
  [ 89] add
  [ 90] setlocal 1
  [ 92] endrepeat [ 16]
  [ 94] getlocal 0 .............................. <iSprite>
  [ 96] pusharglist 1 ........................... <iSprite>
  [ 98] extcall 59 .............................. <voidp(iSprite)>
  [100] jmpifz [115] ............................ if voidp(iSprite) then
  [103] pushcons 3 .............................. <"**** OUT OF SPRITES *****">
  [105] pusharglistnoret 1 ...................... <"**** OUT OF SPRITES *****">
  [107] extcall 168 ............................. put "**** OUT OF SPRITES *****"
  [109] pushcons 4 .............................. <"I'm all out of sprites. :(">
  [111] pusharglistnoret 1 ...................... <"I'm all out of sprites. :(">
  [113] extcall 236 ............................. alert("I'm all out of sprites. :(")
  [115] getlocal 0 .............................. <iSprite>
  [117] pusharglistnoret 1 ...................... <iSprite>
  [119] extcall 52 .............................. return iSprite
  [121] ret
end

on getPooledSprites me, iNum
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. _aSprites = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] getparam 1 .............................. <iNum>
  [ 13] lteq
  [ 14] jmpifz [ 39] ............................ repeat with i = 1 to iNum
  [ 17] getlocal 0 .............................. <_aSprites>
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 688 ............................. <me.getPooledSprite()>
  [ 26] pusharglistnoret 2 ...................... <_aSprites, me.getPooledSprite()>
  [ 28] objcall 140 ............................. _aSprites.add(me.getPooledSprite())
  [ 30] pushint8 1
  [ 32] getlocal 1
  [ 34] add
  [ 35] setlocal 1
  [ 37] endrepeat [  9]
  [ 39] getlocal 0 .............................. <_aSprites>
  [ 41] pusharglistnoret 1 ...................... <_aSprites>
  [ 43] extcall 52 .............................. return _aSprites
  [ 45] ret
end

on returnPooledSprites me, _aSprites
  [  0] getparam 1 .............................. <_aSprites>
  [  2] pusharglist 1 ........................... <_aSprites>
  [  4] extcall 59 .............................. <voidp(_aSprites)>
  [  6] jmpifz [ 13] ............................ if voidp(_aSprites) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 0
  [ 17] getlocal 0
  [ 19] getparam 1 .............................. <_aSprites>
  [ 21] getobjprop 155 .......................... <_aSprites.count>
  [ 23] lteq
  [ 24] jmpifz [ 51] ............................ repeat with i = 1 to _aSprites.count
  [ 27] getparam 0 .............................. <me>
  [ 29] getparam 1 .............................. <_aSprites>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 2 ........................... <_aSprites, i>
  [ 35] objcall 72 .............................. <_aSprites[i]>
  [ 37] pusharglistnoret 2 ...................... <me, _aSprites[i]>
  [ 39] objcall 728 ............................. me.returnPooledSprite(_aSprites[i])
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [ 17]
  [ 51] ret
end

on returnPooledSprite me, iSprite
  [  0] getparam 1 .............................. <iSprite>
  [  2] pusharglist 1 ........................... <iSprite>
  [  4] extcall 59 .............................. <voidp(iSprite)>
  [  6] jmpifz [ 13] ............................ if voidp(iSprite) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 52 .............................. return 
  [ 13] getparam 0 .............................. <me>
  [ 15] getchainedprop 816 ...................... <me.aSpritePool>
  [ 18] getparam 1 .............................. <iSprite>
  [ 20] pusharglistnoret 2 ...................... <me.aSpritePool, iSprite>
  [ 22] objcall 571 ............................. me.aSpritePool.deleteOne(iSprite)
  [ 25] getparam 1 .............................. <iSprite>
  [ 27] pusharglist 1 ........................... <iSprite>
  [ 29] extcall 119 ............................. <sprite(iSprite)>
  [ 31] pusharglist 0 ........................... <[]>
  [ 33] pushlist ................................ <[]>
  [ 34] setobjprop 193 .......................... sprite(iSprite).scriptInstanceList = []
  [ 36] getparam 1 .............................. <iSprite>
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 2 ...................... <iSprite, 0>
  [ 41] extcall 823 ............................. puppetSprite(iSprite, 0)
  [ 44] getparam 1 .............................. <iSprite>
  [ 46] pusharglist 1 ........................... <iSprite>
  [ 48] extcall 119 ............................. <sprite(iSprite)>
  [ 50] pushzero ................................ <0>
  [ 51] setobjprop 695 .......................... sprite(iSprite).visible = 0
  [ 54] ret
end

on clearSpritePool me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 816 .......................... <me.aSpritePool>
  [  7] pusharglistnoret 2 ...................... <me, me.aSpritePool>
  [  9] objcall 154 ............................. me.returnPooledSprites(me.aSpritePool)
  [ 11] ret
end

on drawStaticSceneSprite me, aProps
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 688 ............................. <me.getPooledSprite()>
  [  7] setlocal 0 .............................. iSprite = me.getPooledSprite()
  [  9] getparam 1 .............................. <aProps>
  [ 11] pushsymb 30 ............................. <#member>
  [ 13] pusharglist 2 ........................... <aProps, #member>
  [ 15] objcall 72 .............................. <aProps[#member]>
  [ 17] pusharglist 1 ........................... <aProps[#member]>
  [ 19] extcall 59 .............................. <voidp(aProps[#member])>
  [ 21] jmpifz [ 40] ............................ if voidp(aProps[#member]) then / else
  [ 24] getparam 0 .............................. <me>
  [ 26] getlocal 0 .............................. <iSprite>
  [ 28] pusharglistnoret 2 ...................... <me, iSprite>
  [ 30] objcall 728 ............................. me.returnPooledSprite(iSprite)
  [ 33] pusharglistnoret 0 ...................... <>
  [ 35] extcall 52 .............................. return 
  [ 37] jmp [ 89]
  [ 40] getparam 1 .............................. <aProps>
  [ 42] getobjprop 30 ........................... <aProps.member>
  [ 44] pusharglist 1 ........................... <aProps.member>
  [ 46] extcall 30 .............................. <member(aProps.member)>
  [ 48] setlocal 1 .............................. oMember = member(aProps.member)
  [ 50] getlocal 1 .............................. <oMember>
  [ 52] getobjprop 73 ........................... <oMember.memberNum>
  [ 54] pushint8 1 .............................. <1>
  [ 56] inv ..................................... <-1>
  [ 57] eq ...................................... <oMember.memberNum = -1>
  [ 58] jmpifz [ 77] ............................ if oMember.memberNum = -1 then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getlocal 0 .............................. <iSprite>
  [ 65] pusharglistnoret 2 ...................... <me, iSprite>
  [ 67] objcall 728 ............................. me.returnPooledSprite(iSprite)
  [ 70] pusharglistnoret 0 ...................... <>
  [ 72] extcall 52 .............................. return 
  [ 74] jmp [ 89]
  [ 77] getlocal 0 .............................. <iSprite>
  [ 79] pusharglist 1 ........................... <iSprite>
  [ 81] extcall 119 ............................. <sprite(iSprite)>
  [ 83] getparam 1 .............................. <aProps>
  [ 85] getobjprop 30 ........................... <aProps.member>
  [ 87] setobjprop 30 ........................... sprite(iSprite).member = aProps.member
  [ 89] getparam 1 .............................. <aProps>
  [ 91] pushsymb 35 ............................. <#x>
  [ 93] pusharglist 2 ........................... <aProps, #x>
  [ 95] objcall 72 .............................. <aProps[#x]>
  [ 97] pusharglist 1 ........................... <aProps[#x]>
  [ 99] extcall 59 .............................. <voidp(aProps[#x])>
  [101] jmpifz [116] ............................ if voidp(aProps[#x]) then / else
  [104] getlocal 0 .............................. <iSprite>
  [106] pusharglist 1 ........................... <iSprite>
  [108] extcall 119 ............................. <sprite(iSprite)>
  [110] pushzero ................................ <0>
  [111] setobjprop 143 .......................... sprite(iSprite).locH = 0
  [113] jmp [128]
  [116] getlocal 0 .............................. <iSprite>
  [118] pusharglist 1 ........................... <iSprite>
  [120] extcall 119 ............................. <sprite(iSprite)>
  [122] getparam 1 .............................. <aProps>
  [124] getobjprop 35 ........................... <aProps.x>
  [126] setobjprop 143 .......................... sprite(iSprite).locH = aProps.x
  [128] getparam 1 .............................. <aProps>
  [130] pushsymb 36 ............................. <#y>
  [132] pusharglist 2 ........................... <aProps, #y>
  [134] objcall 72 .............................. <aProps[#y]>
  [136] pusharglist 1 ........................... <aProps[#y]>
  [138] extcall 59 .............................. <voidp(aProps[#y])>
  [140] jmpifz [155] ............................ if voidp(aProps[#y]) then / else
  [143] getlocal 0 .............................. <iSprite>
  [145] pusharglist 1 ........................... <iSprite>
  [147] extcall 119 ............................. <sprite(iSprite)>
  [149] pushzero ................................ <0>
  [150] setobjprop 122 .......................... sprite(iSprite).locV = 0
  [152] jmp [167]
  [155] getlocal 0 .............................. <iSprite>
  [157] pusharglist 1 ........................... <iSprite>
  [159] extcall 119 ............................. <sprite(iSprite)>
  [161] getparam 1 .............................. <aProps>
  [163] getobjprop 36 ........................... <aProps.y>
  [165] setobjprop 122 .......................... sprite(iSprite).locV = aProps.y
  [167] getparam 1 .............................. <aProps>
  [169] pushsymb 37 ............................. <#ink>
  [171] pusharglist 2 ........................... <aProps, #ink>
  [173] objcall 72 .............................. <aProps[#ink]>
  [175] pusharglist 1 ........................... <aProps[#ink]>
  [177] extcall 59 .............................. <voidp(aProps[#ink])>
  [179] jmpifz [194] ............................ if voidp(aProps[#ink]) then / else
  [182] getlocal 0 .............................. <iSprite>
  [184] pusharglist 1 ........................... <iSprite>
  [186] extcall 119 ............................. <sprite(iSprite)>
  [188] pushzero ................................ <0>
  [189] setobjprop 37 ........................... sprite(iSprite).ink = 0
  [191] jmp [206]
  [194] getlocal 0 .............................. <iSprite>
  [196] pusharglist 1 ........................... <iSprite>
  [198] extcall 119 ............................. <sprite(iSprite)>
  [200] getparam 1 .............................. <aProps>
  [202] getobjprop 37 ........................... <aProps.ink>
  [204] setobjprop 37 ........................... sprite(iSprite).ink = aProps.ink
  [206] getparam 1 .............................. <aProps>
  [208] pushsymb 694 ............................ <#blend>
  [211] pusharglist 2 ........................... <aProps, #blend>
  [213] objcall 72 .............................. <aProps[#blend]>
  [215] pusharglist 1 ........................... <aProps[#blend]>
  [217] extcall 59 .............................. <voidp(aProps[#blend])>
  [219] jmpifz [236] ............................ if voidp(aProps[#blend]) then / else
  [222] getlocal 0 .............................. <iSprite>
  [224] pusharglist 1 ........................... <iSprite>
  [226] extcall 119 ............................. <sprite(iSprite)>
  [228] pushint8 100 ............................ <100>
  [230] setobjprop 694 .......................... sprite(iSprite).blend = 100
  [233] jmp [250]
  [236] getlocal 0 .............................. <iSprite>
  [238] pusharglist 1 ........................... <iSprite>
  [240] extcall 119 ............................. <sprite(iSprite)>
  [242] getparam 1 .............................. <aProps>
  [244] getobjprop 694 .......................... <aProps.blend>
  [247] setobjprop 694 .......................... sprite(iSprite).blend = aProps.blend
  [250] getparam 1 .............................. <aProps>
  [252] pushsymb 141 ............................ <#width>
  [254] pusharglist 2 ........................... <aProps, #width>
  [256] objcall 72 .............................. <aProps[#width]>
  [258] pusharglist 1 ........................... <aProps[#width]>
  [260] extcall 59 .............................. <voidp(aProps[#width])>
  [262] jmpifz [280] ............................ if voidp(aProps[#width]) then / else
  [265] getlocal 0 .............................. <iSprite>
  [267] pusharglist 1 ........................... <iSprite>
  [269] extcall 119 ............................. <sprite(iSprite)>
  [271] getlocal 1 .............................. <oMember>
  [273] getobjprop 141 .......................... <oMember.width>
  [275] setobjprop 141 .......................... sprite(iSprite).width = oMember.width
  [277] jmp [292]
  [280] getlocal 0 .............................. <iSprite>
  [282] pusharglist 1 ........................... <iSprite>
  [284] extcall 119 ............................. <sprite(iSprite)>
  [286] getparam 1 .............................. <aProps>
  [288] getobjprop 141 .......................... <aProps.width>
  [290] setobjprop 141 .......................... sprite(iSprite).width = aProps.width
  [292] getparam 1 .............................. <aProps>
  [294] pushsymb 142 ............................ <#height>
  [296] pusharglist 2 ........................... <aProps, #height>
  [298] objcall 72 .............................. <aProps[#height]>
  [300] pusharglist 1 ........................... <aProps[#height]>
  [302] extcall 59 .............................. <voidp(aProps[#height])>
  [304] jmpifz [322] ............................ if voidp(aProps[#height]) then / else
  [307] getlocal 0 .............................. <iSprite>
  [309] pusharglist 1 ........................... <iSprite>
  [311] extcall 119 ............................. <sprite(iSprite)>
  [313] getlocal 1 .............................. <oMember>
  [315] getobjprop 142 .......................... <oMember.height>
  [317] setobjprop 142 .......................... sprite(iSprite).height = oMember.height
  [319] jmp [334]
  [322] getlocal 0 .............................. <iSprite>
  [324] pusharglist 1 ........................... <iSprite>
  [326] extcall 119 ............................. <sprite(iSprite)>
  [328] getparam 1 .............................. <aProps>
  [330] getobjprop 142 .......................... <aProps.height>
  [332] setobjprop 142 .......................... sprite(iSprite).height = aProps.height
  [334] getparam 1 .............................. <aProps>
  [336] pushsymb 826 ............................ <#palette>
  [339] pusharglist 2 ........................... <aProps, #palette>
  [341] objcall 72 .............................. <aProps[#palette]>
  [343] pusharglist 1 ........................... <aProps[#palette]>
  [345] extcall 59 .............................. <voidp(aProps[#palette])>
  [347] jmpifz [353] ............................ if voidp(aProps[#palette]) then / else
  [350] jmp [382]
  [353] getparam 1 .............................. <aProps>
  [355] getobjprop 826 .......................... <aProps.palette>
  [358] pusharglist 1 ........................... <aProps.palette>
  [360] extcall 30 .............................. <member(aProps.palette)>
  [362] setlocal 2 .............................. oPaletteMember = member(aProps.palette)
  [364] getlocal 2 .............................. <oPaletteMember>
  [366] getobjprop 73 ........................... <oPaletteMember.memberNum>
  [368] pushint8 1 .............................. <1>
  [370] inv ..................................... <-1>
  [371] nteq .................................... <oPaletteMember.memberNum <> -1>
  [372] jmpifz [382] ............................ if oPaletteMember.memberNum <> -1 then
  [375] getlocal 1 .............................. <oMember>
  [377] getlocal 2 .............................. <oPaletteMember>
  [379] setobjprop 826 .......................... oMember.palette = oPaletteMember
  [382] getparam 1 .............................. <aProps>
  [384] pushsymb 827 ............................ <#skew>
  [387] pusharglist 2 ........................... <aProps, #skew>
  [389] objcall 72 .............................. <aProps[#skew]>
  [391] pusharglist 1 ........................... <aProps[#skew]>
  [393] extcall 59 .............................. <voidp(aProps[#skew])>
  [395] jmpifz [411] ............................ if voidp(aProps[#skew]) then / else
  [398] getlocal 0 .............................. <iSprite>
  [400] pusharglist 1 ........................... <iSprite>
  [402] extcall 119 ............................. <sprite(iSprite)>
  [404] pushzero ................................ <0>
  [405] setobjprop 827 .......................... sprite(iSprite).skew = 0
  [408] jmp [425]
  [411] getlocal 0 .............................. <iSprite>
  [413] pusharglist 1 ........................... <iSprite>
  [415] extcall 119 ............................. <sprite(iSprite)>
  [417] getparam 1 .............................. <aProps>
  [419] getobjprop 827 .......................... <aProps.skew>
  [422] setobjprop 827 .......................... sprite(iSprite).skew = aProps.skew
  [425] getparam 1 .............................. <aProps>
  [427] pushsymb 828 ............................ <#flipH>
  [430] pusharglist 2 ........................... <aProps, #flipH>
  [432] objcall 72 .............................. <aProps[#flipH]>
  [434] pusharglist 1 ........................... <aProps[#flipH]>
  [436] extcall 59 .............................. <voidp(aProps[#flipH])>
  [438] jmpifz [454] ............................ if voidp(aProps[#flipH]) then / else
  [441] getlocal 0 .............................. <iSprite>
  [443] pusharglist 1 ........................... <iSprite>
  [445] extcall 119 ............................. <sprite(iSprite)>
  [447] pushzero ................................ <0>
  [448] setobjprop 828 .......................... sprite(iSprite).flipH = 0
  [451] jmp [468]
  [454] getlocal 0 .............................. <iSprite>
  [456] pusharglist 1 ........................... <iSprite>
  [458] extcall 119 ............................. <sprite(iSprite)>
  [460] getparam 1 .............................. <aProps>
  [462] getobjprop 828 .......................... <aProps.flipH>
  [465] setobjprop 828 .......................... sprite(iSprite).flipH = aProps.flipH
  [468] getparam 1 .............................. <aProps>
  [470] pushsymb 829 ............................ <#flipV>
  [473] pusharglist 2 ........................... <aProps, #flipV>
  [475] objcall 72 .............................. <aProps[#flipV]>
  [477] pusharglist 1 ........................... <aProps[#flipV]>
  [479] extcall 59 .............................. <voidp(aProps[#flipV])>
  [481] jmpifz [497] ............................ if voidp(aProps[#flipV]) then / else
  [484] getlocal 0 .............................. <iSprite>
  [486] pusharglist 1 ........................... <iSprite>
  [488] extcall 119 ............................. <sprite(iSprite)>
  [490] pushzero ................................ <0>
  [491] setobjprop 829 .......................... sprite(iSprite).flipV = 0
  [494] jmp [511]
  [497] getlocal 0 .............................. <iSprite>
  [499] pusharglist 1 ........................... <iSprite>
  [501] extcall 119 ............................. <sprite(iSprite)>
  [503] getparam 1 .............................. <aProps>
  [505] getobjprop 829 .......................... <aProps.flipV>
  [508] setobjprop 829 .......................... sprite(iSprite).flipV = aProps.flipV
  [511] getparam 1 .............................. <aProps>
  [513] pushsymb 830 ............................ <#rotation>
  [516] pusharglist 2 ........................... <aProps, #rotation>
  [518] objcall 72 .............................. <aProps[#rotation]>
  [520] pusharglist 1 ........................... <aProps[#rotation]>
  [522] extcall 59 .............................. <voidp(aProps[#rotation])>
  [524] jmpifz [540] ............................ if voidp(aProps[#rotation]) then / else
  [527] getlocal 0 .............................. <iSprite>
  [529] pusharglist 1 ........................... <iSprite>
  [531] extcall 119 ............................. <sprite(iSprite)>
  [533] pushzero ................................ <0>
  [534] setobjprop 830 .......................... sprite(iSprite).rotation = 0
  [537] jmp [554]
  [540] getlocal 0 .............................. <iSprite>
  [542] pusharglist 1 ........................... <iSprite>
  [544] extcall 119 ............................. <sprite(iSprite)>
  [546] getparam 1 .............................. <aProps>
  [548] getobjprop 830 .......................... <aProps.rotation>
  [551] setobjprop 830 .......................... sprite(iSprite).rotation = aProps.rotation
  [554] pusharglist 0 ........................... <>
  [556] extcall 238 ............................. <VOID>
  [558] setlocal 3 .............................. iRow = VOID
  [560] getparam 1 .............................. <aProps>
  [562] pushsymb 831 ............................ <#row>
  [565] pusharglist 2 ........................... <aProps, #row>
  [567] objcall 72 .............................. <aProps[#row]>
  [569] pusharglist 1 ........................... <aProps[#row]>
  [571] extcall 59 .............................. <voidp(aProps[#row])>
  [573] not ..................................... <not voidp(aProps[#row])>
  [574] jmpifz [588] ............................ if not voidp(aProps[#row]) then
  [577] getparam 1 .............................. <aProps>
  [579] getobjprop 831 .......................... <aProps.row>
  [582] pusharglist 1 ........................... <aProps.row>
  [584] extcall 69 .............................. <integer(aProps.row)>
  [586] setlocal 3 .............................. iRow = integer(aProps.row)
  [588] pusharglist 0 ........................... <>
  [590] extcall 238 ............................. <VOID>
  [592] setlocal 4 .............................. iCol = VOID
  [594] getparam 1 .............................. <aProps>
  [596] pushsymb 832 ............................ <#col>
  [599] pusharglist 2 ........................... <aProps, #col>
  [601] objcall 72 .............................. <aProps[#col]>
  [603] pusharglist 1 ........................... <aProps[#col]>
  [605] extcall 59 .............................. <voidp(aProps[#col])>
  [607] not ..................................... <not voidp(aProps[#col])>
  [608] jmpifz [622] ............................ if not voidp(aProps[#col]) then
  [611] getparam 1 .............................. <aProps>
  [613] getobjprop 832 .......................... <aProps.col>
  [616] pusharglist 1 ........................... <aProps.col>
  [618] extcall 69 .............................. <integer(aProps.col)>
  [620] setlocal 4 .............................. iCol = integer(aProps.col)
  [622] pusharglist 0 ........................... <>
  [624] extcall 238 ............................. <VOID>
  [626] setlocal 5 .............................. iLayer = VOID
  [628] getparam 1 .............................. <aProps>
  [630] pushsymb 833 ............................ <#layer>
  [633] pusharglist 2 ........................... <aProps, #layer>
  [635] objcall 72 .............................. <aProps[#layer]>
  [637] pusharglist 1 ........................... <aProps[#layer]>
  [639] extcall 59 .............................. <voidp(aProps[#layer])>
  [641] not ..................................... <not voidp(aProps[#layer])>
  [642] jmpifz [652] ............................ if not voidp(aProps[#layer]) then
  [645] getparam 1 .............................. <aProps>
  [647] getobjprop 833 .......................... <aProps.layer>
  [650] setlocal 5 .............................. iLayer = aProps.layer
  [652] pusharglist 0 ........................... <>
  [654] extcall 238 ............................. <VOID>
  [656] setlocal 6 .............................. iDepth = VOID
  [658] pusharglist 0 ........................... <>
  [660] extcall 238 ............................. <VOID>
  [662] setlocal 7 .............................. oSquare = VOID
  [664] getlocal 3 .............................. <iRow>
  [666] pusharglist 1 ........................... <iRow>
  [668] extcall 59 .............................. <voidp(iRow)>
  [670] not ..................................... <not voidp(iRow)>
  [671] getlocal 4 .............................. <iCol>
  [673] pusharglist 1 ........................... <iCol>
  [675] extcall 59 .............................. <voidp(iCol)>
  [677] not ..................................... <not voidp(iCol)>
  [678] and ..................................... <not voidp(iRow) and not voidp(iCol)>
  [679] getlocal 5 .............................. <iLayer>
  [681] pusharglist 1 ........................... <iLayer>
  [683] extcall 59 .............................. <voidp(iLayer)>
  [685] not ..................................... <not voidp(iLayer)>
  [686] and ..................................... <not voidp(iRow) and not voidp(iCol) and not voidp(iLayer)>
  [687] jmpifz [748] ............................ if not voidp(iRow) and not voidp(iCol) and not voidp(iLayer) then
  [690] getglobal 133 ........................... <oIsoScene>
  [692] getchainedprop 136 ...................... <oIsoScene.oGrid>
  [694] getlocal 3 .............................. <iRow>
  [696] getlocal 4 .............................. <iCol>
  [698] pusharglist 3 ........................... <oIsoScene.oGrid, iRow, iCol>
  [700] objcall 532 ............................. <oIsoScene.oGrid.getSquareByRowCol(iRow, iCol)>
  [703] setlocal 7 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(iRow, iCol)
  [705] getlocal 7 .............................. <oSquare>
  [707] pusharglist 1 ........................... <oSquare>
  [709] extcall 59 .............................. <voidp(oSquare)>
  [711] not ..................................... <not voidp(oSquare)>
  [712] jmpifz [748] ............................ if not voidp(oSquare) then
  [715] getlocal 7 .............................. <oSquare>
  [717] getlocal 5 .............................. <iLayer>
  [719] pushzero ................................ <0>
  [720] pusharglist 3 ........................... <oSquare, iLayer, 0>
  [722] objcall 777 ............................. <oSquare.getHeightLayer(iLayer, 0)>
  [725] setlocal 8 .............................. iHeightLayer = oSquare.getHeightLayer(iLayer, 0)
  [727] getlocal 7 .............................. <oSquare>
  [729] getlocal 8 .............................. <iHeightLayer>
  [731] pusharglist 2 ........................... <oSquare, iHeightLayer>
  [733] objcall 779 ............................. <oSquare.getDepthByLayer(iHeightLayer)>
  [736] setlocal 6 .............................. iDepth = oSquare.getDepthByLayer(iHeightLayer)
  [738] getlocal 0 .............................. <iSprite>
  [740] pusharglist 1 ........................... <iSprite>
  [742] extcall 119 ............................. <sprite(iSprite)>
  [744] getlocal 6 .............................. <iDepth>
  [746] setobjprop 138 .......................... sprite(iSprite).locZ = iDepth
  [748] getlocal 0 .............................. <iSprite>
  [750] pusharglist 1 ........................... <iSprite>
  [752] extcall 119 ............................. <sprite(iSprite)>
  [754] pushint8 1 .............................. <1>
  [756] setobjprop 695 .......................... sprite(iSprite).visible = 1
  [759] getlocal 0 .............................. <iSprite>
  [761] pusharglistnoret 1 ...................... <iSprite>
  [763] extcall 52 .............................. return iSprite
  [765] ret
end

on buildSpriteProps me, oXml
  [  0] getmovieprop 835 ........................ <the itemDelimiter>
  [  3] setlocal 0 .............................. iOldDelimiter = the itemDelimiter
  [  5] pushcons 5 .............................. <">">
  [  7] setmovieprop 835 ........................ the itemDelimiter = ">"
  [ 10] getparam 1 .............................. <oXml>
  [ 12] pusharglist 1 ........................... <oXml>
  [ 14] objcall 498 ............................. <oXml.toString()>
  [ 17] setlocal 1 .............................. sXmlString = oXml.toString()
  [ 19] getlocal 1 .............................. <sXmlString>
  [ 21] pushsymb 836 ............................ <#item>
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglist 3 ........................... <sXmlString, #item, 1>
  [ 28] objcall 104 ............................. <sXmlString.item[1]>
  [ 30] setlocal 1 .............................. sXmlString = sXmlString.item[1]
  [ 32] getlocal 0 .............................. <iOldDelimiter>
  [ 34] setmovieprop 835 ........................ the itemDelimiter = iOldDelimiter
  [ 37] pusharglist 0 ........................... <[:]>
  [ 39] pushproplist ............................ <[:]>
  [ 40] setlocal 2 .............................. aProps = [:]
  [ 42] getlocal 1 .............................. <sXmlString>
  [ 44] pushcons 6 .............................. <"member=">
  [ 46] containsstr ............................. <sXmlString contains "member=">
  [ 47] jmpifz [ 66] ............................ if sXmlString contains "member=" then
  [ 50] getlocal 2 .............................. <aProps>
  [ 52] pushsymb 30 ............................. <#member>
  [ 54] getparam 1 .............................. <oXml>
  [ 56] getchainedprop 385 ...................... <oXml.attributes>
  [ 59] getobjprop 30 ........................... <oXml.attributes.member>
  [ 61] pusharglistnoret 3 ...................... <aProps, #member, oXml.attributes.member>
  [ 63] objcall 595 ............................. aProps.addProp(#member, oXml.attributes.member)
  [ 66] getlocal 1 .............................. <sXmlString>
  [ 68] pushcons 7 .............................. <"media=">
  [ 70] containsstr ............................. <sXmlString contains "media=">
  [ 71] jmpifz [ 96] ............................ if sXmlString contains "media=" then
  [ 74] getlocal 2 .............................. <aProps>
  [ 76] pushsymb 30 ............................. <#member>
  [ 78] getparam 1 .............................. <oXml>
  [ 80] getchainedprop 385 ...................... <oXml.attributes>
  [ 83] getobjprop 838 .......................... <oXml.attributes.media>
  [ 86] pusharglist 1 ........................... <oXml.attributes.media>
  [ 88] extcall 837 ............................. <symbol(oXml.attributes.media)>
  [ 91] pusharglistnoret 3 ...................... <aProps, #member, symbol(oXml.attributes.media)>
  [ 93] objcall 595 ............................. aProps.addProp(#member, symbol(oXml.attributes.media))
  [ 96] getlocal 1 .............................. <sXmlString>
  [ 98] pushcons 8 .............................. <"x=">
  [100] containsstr ............................. <sXmlString contains "x=">
  [101] jmpifz [124] ............................ if sXmlString contains "x=" then
  [104] getlocal 2 .............................. <aProps>
  [106] pushsymb 35 ............................. <#x>
  [108] getparam 1 .............................. <oXml>
  [110] getchainedprop 385 ...................... <oXml.attributes>
  [113] getobjprop 35 ........................... <oXml.attributes.x>
  [115] pusharglist 1 ........................... <oXml.attributes.x>
  [117] extcall 69 .............................. <integer(oXml.attributes.x)>
  [119] pusharglistnoret 3 ...................... <aProps, #x, integer(oXml.attributes.x)>
  [121] objcall 595 ............................. aProps.addProp(#x, integer(oXml.attributes.x))
  [124] getlocal 1 .............................. <sXmlString>
  [126] pushcons 9 .............................. <"y=">
  [128] containsstr ............................. <sXmlString contains "y=">
  [129] jmpifz [152] ............................ if sXmlString contains "y=" then
  [132] getlocal 2 .............................. <aProps>
  [134] pushsymb 36 ............................. <#y>
  [136] getparam 1 .............................. <oXml>
  [138] getchainedprop 385 ...................... <oXml.attributes>
  [141] getobjprop 36 ........................... <oXml.attributes.y>
  [143] pusharglist 1 ........................... <oXml.attributes.y>
  [145] extcall 69 .............................. <integer(oXml.attributes.y)>
  [147] pusharglistnoret 3 ...................... <aProps, #y, integer(oXml.attributes.y)>
  [149] objcall 595 ............................. aProps.addProp(#y, integer(oXml.attributes.y))
  [152] getlocal 1 .............................. <sXmlString>
  [154] pushcons 10 ............................. <"ink=">
  [156] containsstr ............................. <sXmlString contains "ink=">
  [157] jmpifz [180] ............................ if sXmlString contains "ink=" then
  [160] getlocal 2 .............................. <aProps>
  [162] pushsymb 37 ............................. <#ink>
  [164] getparam 1 .............................. <oXml>
  [166] getchainedprop 385 ...................... <oXml.attributes>
  [169] getobjprop 37 ........................... <oXml.attributes.ink>
  [171] pusharglist 1 ........................... <oXml.attributes.ink>
  [173] extcall 69 .............................. <integer(oXml.attributes.ink)>
  [175] pusharglistnoret 3 ...................... <aProps, #ink, integer(oXml.attributes.ink)>
  [177] objcall 595 ............................. aProps.addProp(#ink, integer(oXml.attributes.ink))
  [180] getlocal 1 .............................. <sXmlString>
  [182] pushcons 11 ............................. <"blend=">
  [184] containsstr ............................. <sXmlString contains "blend=">
  [185] jmpifz [210] ............................ if sXmlString contains "blend=" then
  [188] getlocal 2 .............................. <aProps>
  [190] pushsymb 694 ............................ <#blend>
  [193] getparam 1 .............................. <oXml>
  [195] getchainedprop 385 ...................... <oXml.attributes>
  [198] getobjprop 694 .......................... <oXml.attributes.blend>
  [201] pusharglist 1 ........................... <oXml.attributes.blend>
  [203] extcall 69 .............................. <integer(oXml.attributes.blend)>
  [205] pusharglistnoret 3 ...................... <aProps, #blend, integer(oXml.attributes.blend)>
  [207] objcall 595 ............................. aProps.addProp(#blend, integer(oXml.attributes.blend))
  [210] getlocal 1 .............................. <sXmlString>
  [212] pushcons 12 ............................. <"width=">
  [214] containsstr ............................. <sXmlString contains "width=">
  [215] jmpifz [238] ............................ if sXmlString contains "width=" then
  [218] getlocal 2 .............................. <aProps>
  [220] pushsymb 141 ............................ <#width>
  [222] getparam 1 .............................. <oXml>
  [224] getchainedprop 385 ...................... <oXml.attributes>
  [227] getobjprop 141 .......................... <oXml.attributes.width>
  [229] pusharglist 1 ........................... <oXml.attributes.width>
  [231] extcall 69 .............................. <integer(oXml.attributes.width)>
  [233] pusharglistnoret 3 ...................... <aProps, #width, integer(oXml.attributes.width)>
  [235] objcall 595 ............................. aProps.addProp(#width, integer(oXml.attributes.width))
  [238] getlocal 1 .............................. <sXmlString>
  [240] pushcons 13 ............................. <"height=">
  [242] containsstr ............................. <sXmlString contains "height=">
  [243] jmpifz [266] ............................ if sXmlString contains "height=" then
  [246] getlocal 2 .............................. <aProps>
  [248] pushsymb 142 ............................ <#height>
  [250] getparam 1 .............................. <oXml>
  [252] getchainedprop 385 ...................... <oXml.attributes>
  [255] getobjprop 142 .......................... <oXml.attributes.height>
  [257] pusharglist 1 ........................... <oXml.attributes.height>
  [259] extcall 69 .............................. <integer(oXml.attributes.height)>
  [261] pusharglistnoret 3 ...................... <aProps, #height, integer(oXml.attributes.height)>
  [263] objcall 595 ............................. aProps.addProp(#height, integer(oXml.attributes.height))
  [266] getlocal 1 .............................. <sXmlString>
  [268] pushcons 14 ............................. <"palette=">
  [270] containsstr ............................. <sXmlString contains "palette=">
  [271] jmpifz [292] ............................ if sXmlString contains "palette=" then
  [274] getlocal 2 .............................. <aProps>
  [276] pushsymb 826 ............................ <#palette>
  [279] getparam 1 .............................. <oXml>
  [281] getchainedprop 385 ...................... <oXml.attributes>
  [284] getobjprop 826 .......................... <oXml.attributes.palette>
  [287] pusharglistnoret 3 ...................... <aProps, #palette, oXml.attributes.palette>
  [289] objcall 595 ............................. aProps.addProp(#palette, oXml.attributes.palette)
  [292] getlocal 1 .............................. <sXmlString>
  [294] pushcons 15 ............................. <"skew=">
  [296] containsstr ............................. <sXmlString contains "skew=">
  [297] jmpifz [322] ............................ if sXmlString contains "skew=" then
  [300] getlocal 2 .............................. <aProps>
  [302] pushsymb 827 ............................ <#skew>
  [305] getparam 1 .............................. <oXml>
  [307] getchainedprop 385 ...................... <oXml.attributes>
  [310] getobjprop 827 .......................... <oXml.attributes.skew>
  [313] pusharglist 1 ........................... <oXml.attributes.skew>
  [315] extcall 69 .............................. <integer(oXml.attributes.skew)>
  [317] pusharglistnoret 3 ...................... <aProps, #skew, integer(oXml.attributes.skew)>
  [319] objcall 595 ............................. aProps.addProp(#skew, integer(oXml.attributes.skew))
  [322] getlocal 1 .............................. <sXmlString>
  [324] pushcons 16 ............................. <"flipH=">
  [326] containsstr ............................. <sXmlString contains "flipH=">
  [327] jmpifz [352] ............................ if sXmlString contains "flipH=" then
  [330] getlocal 2 .............................. <aProps>
  [332] pushsymb 828 ............................ <#flipH>
  [335] getparam 1 .............................. <oXml>
  [337] getchainedprop 385 ...................... <oXml.attributes>
  [340] getobjprop 828 .......................... <oXml.attributes.flipH>
  [343] pusharglist 1 ........................... <oXml.attributes.flipH>
  [345] extcall 69 .............................. <integer(oXml.attributes.flipH)>
  [347] pusharglistnoret 3 ...................... <aProps, #flipH, integer(oXml.attributes.flipH)>
  [349] objcall 595 ............................. aProps.addProp(#flipH, integer(oXml.attributes.flipH))
  [352] getlocal 1 .............................. <sXmlString>
  [354] pushcons 17 ............................. <"flipV=">
  [356] containsstr ............................. <sXmlString contains "flipV=">
  [357] jmpifz [382] ............................ if sXmlString contains "flipV=" then
  [360] getlocal 2 .............................. <aProps>
  [362] pushsymb 829 ............................ <#flipV>
  [365] getparam 1 .............................. <oXml>
  [367] getchainedprop 385 ...................... <oXml.attributes>
  [370] getobjprop 829 .......................... <oXml.attributes.flipV>
  [373] pusharglist 1 ........................... <oXml.attributes.flipV>
  [375] extcall 69 .............................. <integer(oXml.attributes.flipV)>
  [377] pusharglistnoret 3 ...................... <aProps, #flipV, integer(oXml.attributes.flipV)>
  [379] objcall 595 ............................. aProps.addProp(#flipV, integer(oXml.attributes.flipV))
  [382] getlocal 1 .............................. <sXmlString>
  [384] pushcons 18 ............................. <"rotation=">
  [386] containsstr ............................. <sXmlString contains "rotation=">
  [387] jmpifz [412] ............................ if sXmlString contains "rotation=" then
  [390] getlocal 2 .............................. <aProps>
  [392] pushsymb 830 ............................ <#rotation>
  [395] getparam 1 .............................. <oXml>
  [397] getchainedprop 385 ...................... <oXml.attributes>
  [400] getobjprop 830 .......................... <oXml.attributes.rotation>
  [403] pusharglist 1 ........................... <oXml.attributes.rotation>
  [405] extcall 69 .............................. <integer(oXml.attributes.rotation)>
  [407] pusharglistnoret 3 ...................... <aProps, #rotation, integer(oXml.attributes.rotation)>
  [409] objcall 595 ............................. aProps.addProp(#rotation, integer(oXml.attributes.rotation))
  [412] getlocal 1 .............................. <sXmlString>
  [414] pushcons 19 ............................. <"row=">
  [416] containsstr ............................. <sXmlString contains "row=">
  [417] jmpifz [442] ............................ if sXmlString contains "row=" then
  [420] getlocal 2 .............................. <aProps>
  [422] pushsymb 831 ............................ <#row>
  [425] getparam 1 .............................. <oXml>
  [427] getchainedprop 385 ...................... <oXml.attributes>
  [430] getobjprop 831 .......................... <oXml.attributes.row>
  [433] pusharglist 1 ........................... <oXml.attributes.row>
  [435] extcall 69 .............................. <integer(oXml.attributes.row)>
  [437] pusharglistnoret 3 ...................... <aProps, #row, integer(oXml.attributes.row)>
  [439] objcall 595 ............................. aProps.addProp(#row, integer(oXml.attributes.row))
  [442] getlocal 1 .............................. <sXmlString>
  [444] pushcons 20 ............................. <"col=">
  [446] containsstr ............................. <sXmlString contains "col=">
  [447] jmpifz [472] ............................ if sXmlString contains "col=" then
  [450] getlocal 2 .............................. <aProps>
  [452] pushsymb 832 ............................ <#col>
  [455] getparam 1 .............................. <oXml>
  [457] getchainedprop 385 ...................... <oXml.attributes>
  [460] getobjprop 832 .......................... <oXml.attributes.col>
  [463] pusharglist 1 ........................... <oXml.attributes.col>
  [465] extcall 69 .............................. <integer(oXml.attributes.col)>
  [467] pusharglistnoret 3 ...................... <aProps, #col, integer(oXml.attributes.col)>
  [469] objcall 595 ............................. aProps.addProp(#col, integer(oXml.attributes.col))
  [472] getlocal 1 .............................. <sXmlString>
  [474] pushcons 21 ............................. <"layer=">
  [476] containsstr ............................. <sXmlString contains "layer=">
  [477] jmpifz [502] ............................ if sXmlString contains "layer=" then
  [480] getlocal 2 .............................. <aProps>
  [482] pushsymb 833 ............................ <#layer>
  [485] getparam 1 .............................. <oXml>
  [487] getchainedprop 385 ...................... <oXml.attributes>
  [490] getobjprop 833 .......................... <oXml.attributes.layer>
  [493] pusharglist 1 ........................... <oXml.attributes.layer>
  [495] extcall 69 .............................. <integer(oXml.attributes.layer)>
  [497] pusharglistnoret 3 ...................... <aProps, #layer, integer(oXml.attributes.layer)>
  [499] objcall 595 ............................. aProps.addProp(#layer, integer(oXml.attributes.layer))
  [502] getlocal 1 .............................. <sXmlString>
  [504] pushcons 22 ............................. <"Action=">
  [506] containsstr ............................. <sXmlString contains "Action=">
  [507] jmpifz [528] ............................ if sXmlString contains "Action=" then
  [510] getlocal 2 .............................. <aProps>
  [512] pushsymb 839 ............................ <#Action>
  [515] getparam 1 .............................. <oXml>
  [517] getchainedprop 385 ...................... <oXml.attributes>
  [520] getobjprop 839 .......................... <oXml.attributes.Action>
  [523] pusharglistnoret 3 ...................... <aProps, #Action, oXml.attributes.Action>
  [525] objcall 595 ............................. aProps.addProp(#Action, oXml.attributes.Action)
  [528] getlocal 1 .............................. <sXmlString>
  [530] pushcons 23 ............................. <"backcolor=">
  [532] containsstr ............................. <sXmlString contains "backcolor=">
  [533] jmpifz [556] ............................ if sXmlString contains "backcolor=" then
  [536] getlocal 2 .............................. <aProps>
  [538] pushsymb 32 ............................. <#backColor>
  [540] getparam 1 .............................. <oXml>
  [542] getchainedprop 385 ...................... <oXml.attributes>
  [545] getobjprop 32 ........................... <oXml.attributes.backColor>
  [547] pusharglist 1 ........................... <oXml.attributes.backColor>
  [549] extcall 69 .............................. <integer(oXml.attributes.backColor)>
  [551] pusharglistnoret 3 ...................... <aProps, #backColor, integer(oXml.attributes.backColor)>
  [553] objcall 595 ............................. aProps.addProp(#backColor, integer(oXml.attributes.backColor))
  [556] getlocal 2 .............................. <aProps>
  [558] pusharglistnoret 1 ...................... <aProps>
  [560] extcall 52 .............................. return aProps
  [562] ret
end

on destroy me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 812 ............................. me.clearSpritePool()
  [  7] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 338 .......................... <me.bDebug>
  [  5] getparam 2 .............................. <bForce>
  [  7] or ...................................... <me.bDebug or bForce>
  [  8] jmpifz [ 20] ............................ if me.bDebug or bForce then
  [ 11] pushcons 24 ............................. <"IsoSpriteManager.">
  [ 13] getparam 1 .............................. <sMessage>
  [ 15] joinstr ................................. <"IsoSpriteManager." & sMessage>
  [ 16] pusharglistnoret 1 ...................... <"IsoSpriteManager." & sMessage>
  [ 18] extcall 168 ............................. put "IsoSpriteManager." & sMessage
  [ 20] ret
end

on printSpritePool me
  [  0] pushcons 25 ............................. <"********** BEGIN SPRITE POOL ******************">
  [  2] pushcons 26 ............................. <RETURN>
  [  4] joinstr ................................. <"********** BEGIN SPRITE POOL ******************" & RETURN>
  [  5] pusharglistnoret 1 ...................... <"********** BEGIN SPRITE POOL ******************" & RETURN>
  [  7] extcall 168 ............................. put "********** BEGIN SPRITE POOL ******************" & RETURN
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 816 .......................... <me.aSpritePool>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 155
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 89] ............................ repeat with i in me.aSpritePool
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 72
  [ 38] setlocal 0
  [ 40] getlocal 0 .............................. <i>
  [ 42] pusharglist 1 ........................... <i>
  [ 44] extcall 119 ............................. <sprite(i)>
  [ 46] getobjprop 30 ........................... <sprite(i).member>
  [ 48] setlocal 1 .............................. oMember = sprite(i).member
  [ 50] pushcons 27 ............................. <EMPTY>
  [ 52] setlocal 2 .............................. sName = EMPTY
  [ 54] getlocal 1 .............................. <oMember>
  [ 56] getobjprop 73 ........................... <oMember.memberNum>
  [ 58] pushzero ................................ <0>
  [ 59] gt ...................................... <oMember.memberNum > 0>
  [ 60] jmpifz [ 69] ............................ if oMember.memberNum > 0 then
  [ 63] getlocal 1 .............................. <oMember>
  [ 65] getobjprop 99 ........................... <oMember.name>
  [ 67] setlocal 2 .............................. sName = oMember.name
  [ 69] pushcons 28 ............................. <"SPRITE: ">
  [ 71] getlocal 0 .............................. <i>
  [ 73] joinstr ................................. <"SPRITE: " & i>
  [ 74] pushcons 29 ............................. <": MEMBER: ">
  [ 76] joinstr ................................. <"SPRITE: " & i & ": MEMBER: ">
  [ 77] getlocal 2 .............................. <sName>
  [ 79] joinstr ................................. <"SPRITE: " & i & ": MEMBER: " & sName>
  [ 80] pusharglistnoret 1 ...................... <"SPRITE: " & i & ": MEMBER: " & sName>
  [ 82] extcall 168 ............................. put "SPRITE: " & i & ": MEMBER: " & sName
  [ 84] pushint8 1
  [ 86] add
  [ 87] endrepeat [ 22]
  [ 89] pop 3
  [ 91] pushcons 30 ............................. <"******** END SPRITE POOL ******************">
  [ 93] pusharglistnoret 1 ...................... <"******** END SPRITE POOL ******************">
  [ 95] extcall 168 ............................. put "******** END SPRITE POOL ******************"
  [ 97] ret
end
