property bDebug, foRoom, sOwner, sStudioName, sStudioID, fo_level0, foSongPlaying, sIJsongplayer
global oDenizenManager, oSession, oStudio, ElementMgr, oIsoScene, oStudioMap, ochat, oPossessionManager, gFeatureSet, gSoundLevel

on beginSprite me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 28 ........................... me.bDebug = 0
  [  5] getparam 0 .............................. <me>
  [  7] setglobal 76 ............................ oStudio = me
  [  9] ret
end

on setRoomObject me, _foRoom
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"setRoomObject() ">
  [  4] getparam 1 .............................. <_foRoom>
  [  6] joinstr ................................. <"setRoomObject() " & _foRoom>
  [  7] pusharglistnoret 2 ...................... <me, "setRoomObject() " & _foRoom>
  [  9] objcall 20 .............................. me.debug("setRoomObject() " & _foRoom)
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 1 .............................. <_foRoom>
  [ 15] setobjprop 722 .......................... me.foRoom = _foRoom
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 89 .............................. me.setCallbacks()
  [ 24] ret
end

on setCallbacks me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 3 ............................ <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 2 ............................... <sprite(me.spriteNum)>
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 722 .......................... <me.foRoom>
  [ 13] pushcons 1 .............................. <"receiveStudioEntered">
  [ 15] pushsymb 781 ............................ <#receiveStudioEntered>
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveStudioEntered", #receiveStudioEntered, me>
  [ 22] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveStudioEntered", #receiveStudioEntered, me)
  [ 24] getparam 0 .............................. <me>
  [ 26] getobjprop 3 ............................ <me.spriteNum>
  [ 28] pusharglist 1 ........................... <me.spriteNum>
  [ 30] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 722 .......................... <me.foRoom>
  [ 37] pushcons 2 .............................. <"receiveDisplayStudio">
  [ 39] pushsymb 782 ............................ <#receiveDisplayStudio>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveDisplayStudio", #receiveDisplayStudio, me>
  [ 46] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveDisplayStudio", #receiveDisplayStudio, me)
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 3 ............................ <me.spriteNum>
  [ 52] pusharglist 1 ........................... <me.spriteNum>
  [ 54] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 56] getparam 0 .............................. <me>
  [ 58] getobjprop 722 .......................... <me.foRoom>
  [ 61] pushcons 3 .............................. <"receiveAvatarEnter">
  [ 63] pushsymb 783 ............................ <#receiveAvatarEnter>
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveAvatarEnter", #receiveAvatarEnter, me>
  [ 70] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveAvatarEnter", #receiveAvatarEnter, me)
  [ 72] getparam 0 .............................. <me>
  [ 74] getobjprop 3 ............................ <me.spriteNum>
  [ 76] pusharglist 1 ........................... <me.spriteNum>
  [ 78] extcall 2 ............................... <sprite(me.spriteNum)>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 722 .......................... <me.foRoom>
  [ 85] pushcons 4 .............................. <"receiveAvatarExit">
  [ 87] pushsymb 784 ............................ <#receiveAvatarExit>
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveAvatarExit", #receiveAvatarExit, me>
  [ 94] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveAvatarExit", #receiveAvatarExit, me)
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 3 ............................ <me.spriteNum>
  [100] pusharglist 1 ........................... <me.spriteNum>
  [102] extcall 2 ............................... <sprite(me.spriteNum)>
  [104] getparam 0 .............................. <me>
  [106] getobjprop 722 .......................... <me.foRoom>
  [109] pushcons 5 .............................. <"receiveAvatarUpdate">
  [111] pushsymb 785 ............................ <#receiveAvatarUpdate>
  [114] getparam 0 .............................. <me>
  [116] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveAvatarUpdate", #receiveAvatarUpdate, me>
  [118] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveAvatarUpdate", #receiveAvatarUpdate, me)
  [120] getparam 0 .............................. <me>
  [122] getobjprop 3 ............................ <me.spriteNum>
  [124] pusharglist 1 ........................... <me.spriteNum>
  [126] extcall 2 ............................... <sprite(me.spriteNum)>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 722 .......................... <me.foRoom>
  [133] pushcons 6 .............................. <"receiveMoveAvatar">
  [135] pushsymb 786 ............................ <#receiveMoveAvatar>
  [138] getparam 0 .............................. <me>
  [140] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveMoveAvatar", #receiveMoveAvatar, me>
  [142] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveMoveAvatar", #receiveMoveAvatar, me)
  [144] getparam 0 .............................. <me>
  [146] getobjprop 3 ............................ <me.spriteNum>
  [148] pusharglist 1 ........................... <me.spriteNum>
  [150] extcall 2 ............................... <sprite(me.spriteNum)>
  [152] getparam 0 .............................. <me>
  [154] getobjprop 722 .......................... <me.foRoom>
  [157] pushcons 7 .............................. <"receiveRemoveAvatar">
  [159] pushsymb 787 ............................ <#receiveRemoveAvatar>
  [162] getparam 0 .............................. <me>
  [164] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveRemoveAvatar", #receiveRemoveAvatar, me>
  [166] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveRemoveAvatar", #receiveRemoveAvatar, me)
  [168] getparam 0 .............................. <me>
  [170] getobjprop 3 ............................ <me.spriteNum>
  [172] pusharglist 1 ........................... <me.spriteNum>
  [174] extcall 2 ............................... <sprite(me.spriteNum)>
  [176] getparam 0 .............................. <me>
  [178] getobjprop 722 .......................... <me.foRoom>
  [181] pushcons 8 .............................. <"receiveStudioChat">
  [183] pushsymb 788 ............................ <#receiveStudioChat>
  [186] getparam 0 .............................. <me>
  [188] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveStudioChat", #receiveStudioChat, me>
  [190] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveStudioChat", #receiveStudioChat, me)
  [192] getparam 0 .............................. <me>
  [194] getobjprop 3 ............................ <me.spriteNum>
  [196] pusharglist 1 ........................... <me.spriteNum>
  [198] extcall 2 ............................... <sprite(me.spriteNum)>
  [200] getparam 0 .............................. <me>
  [202] getobjprop 722 .......................... <me.foRoom>
  [205] pushcons 9 .............................. <"receiveFindPath">
  [207] pushsymb 789 ............................ <#receiveFindPath>
  [210] getparam 0 .............................. <me>
  [212] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveFindPath", #receiveFindPath, me>
  [214] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveFindPath", #receiveFindPath, me)
  [216] getparam 0 .............................. <me>
  [218] getobjprop 3 ............................ <me.spriteNum>
  [220] pusharglist 1 ........................... <me.spriteNum>
  [222] extcall 2 ............................... <sprite(me.spriteNum)>
  [224] getparam 0 .............................. <me>
  [226] getobjprop 722 .......................... <me.foRoom>
  [229] pushcons 10 ............................. <"receiveCdRequestAccepted">
  [231] pushsymb 791 ............................ <#receiveCdRequestAccepted>
  [234] getparam 0 .............................. <me>
  [236] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveCdRequestAccepted", #receiveCdRequestAccepted, me>
  [238] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveCdRequestAccepted", #receiveCdRequestAccepted, me)
  [240] getparam 0 .............................. <me>
  [242] getobjprop 3 ............................ <me.spriteNum>
  [244] pusharglist 1 ........................... <me.spriteNum>
  [246] extcall 2 ............................... <sprite(me.spriteNum)>
  [248] getparam 0 .............................. <me>
  [250] getobjprop 722 .......................... <me.foRoom>
  [253] pushcons 11 ............................. <"receiveNoCds">
  [255] pushsymb 790 ............................ <#receiveNoCds>
  [258] getparam 0 .............................. <me>
  [260] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveNoCds", #receiveNoCds, me>
  [262] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveNoCds", #receiveNoCds, me)
  [264] getparam 0 .............................. <me>
  [266] getobjprop 3 ............................ <me.spriteNum>
  [268] pusharglist 1 ........................... <me.spriteNum>
  [270] extcall 2 ............................... <sprite(me.spriteNum)>
  [272] getparam 0 .............................. <me>
  [274] getobjprop 722 .......................... <me.foRoom>
  [277] pushcons 12 ............................. <"receiveCdWaitTurn">
  [279] pushsymb 792 ............................ <#receiveCdWaitTurn>
  [282] getparam 0 .............................. <me>
  [284] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveCdWaitTurn", #receiveCdWaitTurn, me>
  [286] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveCdWaitTurn", #receiveCdWaitTurn, me)
  [288] getparam 0 .............................. <me>
  [290] getobjprop 3 ............................ <me.spriteNum>
  [292] pusharglist 1 ........................... <me.spriteNum>
  [294] extcall 2 ............................... <sprite(me.spriteNum)>
  [296] getparam 0 .............................. <me>
  [298] getobjprop 722 .......................... <me.foRoom>
  [301] pushcons 13 ............................. <"receiveCdPlay">
  [303] pushsymb 793 ............................ <#receiveCdPlay>
  [306] getparam 0 .............................. <me>
  [308] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveCdPlay", #receiveCdPlay, me>
  [310] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveCdPlay", #receiveCdPlay, me)
  [312] getparam 0 .............................. <me>
  [314] getobjprop 3 ............................ <me.spriteNum>
  [316] pusharglist 1 ........................... <me.spriteNum>
  [318] extcall 2 ............................... <sprite(me.spriteNum)>
  [320] getparam 0 .............................. <me>
  [322] getobjprop 722 .......................... <me.foRoom>
  [325] pushcons 14 ............................. <"receiveEligibleVoters">
  [327] pushsymb 794 ............................ <#receiveEligibleVoters>
  [330] getparam 0 .............................. <me>
  [332] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveEligibleVoters", #receiveEligibleVoters, me>
  [334] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveEligibleVoters", #receiveEligibleVoters, me)
  [336] getparam 0 .............................. <me>
  [338] getobjprop 3 ............................ <me.spriteNum>
  [340] pusharglist 1 ........................... <me.spriteNum>
  [342] extcall 2 ............................... <sprite(me.spriteNum)>
  [344] getparam 0 .............................. <me>
  [346] getobjprop 722 .......................... <me.foRoom>
  [349] pushcons 15 ............................. <"receiveCdStop">
  [351] pushsymb 795 ............................ <#receiveCdStop>
  [354] getparam 0 .............................. <me>
  [356] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveCdStop", #receiveCdStop, me>
  [358] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveCdStop", #receiveCdStop, me)
  [360] getparam 0 .............................. <me>
  [362] getobjprop 3 ............................ <me.spriteNum>
  [364] pusharglist 1 ........................... <me.spriteNum>
  [366] extcall 2 ............................... <sprite(me.spriteNum)>
  [368] getparam 0 .............................. <me>
  [370] getobjprop 722 .......................... <me.foRoom>
  [373] pushcons 16 ............................. <"receiveCdLock">
  [375] pushsymb 796 ............................ <#receiveCdLock>
  [378] getparam 0 .............................. <me>
  [380] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveCdLock", #receiveCdLock, me>
  [382] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveCdLock", #receiveCdLock, me)
  [384] getparam 0 .............................. <me>
  [386] getobjprop 3 ............................ <me.spriteNum>
  [388] pusharglist 1 ........................... <me.spriteNum>
  [390] extcall 2 ............................... <sprite(me.spriteNum)>
  [392] getparam 0 .............................. <me>
  [394] getobjprop 722 .......................... <me.foRoom>
  [397] pushcons 17 ............................. <"receiveThumbsUp">
  [399] pushsymb 797 ............................ <#receiveThumbsUp>
  [402] getparam 0 .............................. <me>
  [404] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveThumbsUp", #receiveThumbsUp, me>
  [406] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveThumbsUp", #receiveThumbsUp, me)
  [408] getparam 0 .............................. <me>
  [410] getobjprop 3 ............................ <me.spriteNum>
  [412] pusharglist 1 ........................... <me.spriteNum>
  [414] extcall 2 ............................... <sprite(me.spriteNum)>
  [416] getparam 0 .............................. <me>
  [418] getobjprop 722 .......................... <me.foRoom>
  [421] pushcons 18 ............................. <"receiveThumbsDown">
  [423] pushsymb 798 ............................ <#receiveThumbsDown>
  [426] getparam 0 .............................. <me>
  [428] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveThumbsDown", #receiveThumbsDown, me>
  [430] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveThumbsDown", #receiveThumbsDown, me)
  [432] getparam 0 .............................. <me>
  [434] getobjprop 3 ............................ <me.spriteNum>
  [436] pusharglist 1 ........................... <me.spriteNum>
  [438] extcall 2 ............................... <sprite(me.spriteNum)>
  [440] getparam 0 .............................. <me>
  [442] getobjprop 722 .......................... <me.foRoom>
  [445] pushcons 19 ............................. <"receiveVotesResults">
  [447] pushsymb 799 ............................ <#receiveVotesResults>
  [450] getparam 0 .............................. <me>
  [452] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveVotesResults", #receiveVotesResults, me>
  [454] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveVotesResults", #receiveVotesResults, me)
  [456] getparam 0 .............................. <me>
  [458] getobjprop 3 ............................ <me.spriteNum>
  [460] pusharglist 1 ........................... <me.spriteNum>
  [462] extcall 2 ............................... <sprite(me.spriteNum)>
  [464] getparam 0 .............................. <me>
  [466] getobjprop 722 .......................... <me.foRoom>
  [469] pushcons 20 ............................. <"receivePlayVotesResultsSound">
  [471] pushsymb 800 ............................ <#receivePlayVotesResultsSound>
  [474] getparam 0 .............................. <me>
  [476] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receivePlayVotesResultsSound", #receivePlayVotesResultsSound, me>
  [478] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receivePlayVotesResultsSound", #receivePlayVotesResultsSound, me)
  [480] getparam 0 .............................. <me>
  [482] getobjprop 3 ............................ <me.spriteNum>
  [484] pusharglist 1 ........................... <me.spriteNum>
  [486] extcall 2 ............................... <sprite(me.spriteNum)>
  [488] getparam 0 .............................. <me>
  [490] getobjprop 722 .......................... <me.foRoom>
  [493] pushcons 21 ............................. <"receiveDisplayTrade">
  [495] pushsymb 776 ............................ <#receiveDisplayTrade>
  [498] getparam 0 .............................. <me>
  [500] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveDisplayTrade", #receiveDisplayTrade, me>
  [502] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveDisplayTrade", #receiveDisplayTrade, me)
  [504] getparam 0 .............................. <me>
  [506] getobjprop 3 ............................ <me.spriteNum>
  [508] pusharglist 1 ........................... <me.spriteNum>
  [510] extcall 2 ............................... <sprite(me.spriteNum)>
  [512] getparam 0 .............................. <me>
  [514] getobjprop 722 .......................... <me.foRoom>
  [517] pushcons 22 ............................. <"receiveCancelTrade">
  [519] pushsymb 777 ............................ <#receiveCancelTrade>
  [522] getparam 0 .............................. <me>
  [524] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveCancelTrade", #receiveCancelTrade, me>
  [526] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveCancelTrade", #receiveCancelTrade, me)
  [528] getparam 0 .............................. <me>
  [530] getobjprop 3 ............................ <me.spriteNum>
  [532] pusharglist 1 ........................... <me.spriteNum>
  [534] extcall 2 ............................... <sprite(me.spriteNum)>
  [536] getparam 0 .............................. <me>
  [538] getobjprop 722 .......................... <me.foRoom>
  [541] pushcons 23 ............................. <"receiveTradeStatus">
  [543] pushsymb 779 ............................ <#receiveTradeStatus>
  [546] getparam 0 .............................. <me>
  [548] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveTradeStatus", #receiveTradeStatus, me>
  [550] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveTradeStatus", #receiveTradeStatus, me)
  [552] getparam 0 .............................. <me>
  [554] getobjprop 3 ............................ <me.spriteNum>
  [556] pusharglist 1 ........................... <me.spriteNum>
  [558] extcall 2 ............................... <sprite(me.spriteNum)>
  [560] getparam 0 .............................. <me>
  [562] getobjprop 722 .......................... <me.foRoom>
  [565] pushcons 24 ............................. <"receiveTradeComplete">
  [567] pushsymb 778 ............................ <#receiveTradeComplete>
  [570] getparam 0 .............................. <me>
  [572] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveTradeComplete", #receiveTradeComplete, me>
  [574] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveTradeComplete", #receiveTradeComplete, me)
  [576] getparam 0 .............................. <me>
  [578] getobjprop 3 ............................ <me.spriteNum>
  [580] pusharglist 1 ........................... <me.spriteNum>
  [582] extcall 2 ............................... <sprite(me.spriteNum)>
  [584] getparam 0 .............................. <me>
  [586] getobjprop 722 .......................... <me.foRoom>
  [589] pushcons 25 ............................. <"receiveUpdateBackpack">
  [591] pushsymb 801 ............................ <#receiveUpdateBackpack>
  [594] getparam 0 .............................. <me>
  [596] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveUpdateBackpack", #receiveUpdateBackpack, me>
  [598] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveUpdateBackpack", #receiveUpdateBackpack, me)
  [600] getparam 0 .............................. <me>
  [602] getobjprop 3 ............................ <me.spriteNum>
  [604] pusharglist 1 ........................... <me.spriteNum>
  [606] extcall 2 ............................... <sprite(me.spriteNum)>
  [608] getparam 0 .............................. <me>
  [610] getobjprop 722 .......................... <me.foRoom>
  [613] pushcons 26 ............................. <"receiveDrinkCoke">
  [615] pushsymb 802 ............................ <#receiveDrinkCoke>
  [618] getparam 0 .............................. <me>
  [620] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveDrinkCoke", #receiveDrinkCoke, me>
  [622] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveDrinkCoke", #receiveDrinkCoke, me)
  [624] getparam 0 .............................. <me>
  [626] getobjprop 3 ............................ <me.spriteNum>
  [628] pusharglist 1 ........................... <me.spriteNum>
  [630] extcall 2 ............................... <sprite(me.spriteNum)>
  [632] getparam 0 .............................. <me>
  [634] getobjprop 722 .......................... <me.foRoom>
  [637] pushcons 27 ............................. <"receiveModMessage">
  [639] pushsymb 803 ............................ <#receiveModMessage>
  [642] getparam 0 .............................. <me>
  [644] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveModMessage", #receiveModMessage, me>
  [646] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveModMessage", #receiveModMessage, me)
  [648] getparam 0 .............................. <me>
  [650] getobjprop 3 ............................ <me.spriteNum>
  [652] pusharglist 1 ........................... <me.spriteNum>
  [654] extcall 2 ............................... <sprite(me.spriteNum)>
  [656] getparam 0 .............................. <me>
  [658] getobjprop 722 .......................... <me.foRoom>
  [661] pushcons 28 ............................. <"receiveDisplayBackpack">
  [663] pushsymb 808 ............................ <#receiveDisplayBackpack>
  [666] getparam 0 .............................. <me>
  [668] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveDisplayBackpack", #receiveDisplayBackpack, me>
  [670] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveDisplayBackpack", #receiveDisplayBackpack, me)
  [672] getparam 0 .............................. <me>
  [674] getobjprop 3 ............................ <me.spriteNum>
  [676] pusharglist 1 ........................... <me.spriteNum>
  [678] extcall 2 ............................... <sprite(me.spriteNum)>
  [680] getparam 0 .............................. <me>
  [682] getobjprop 722 .......................... <me.foRoom>
  [685] pushcons 29 ............................. <"receiveTrivia">
  [687] pushsymb 807 ............................ <#receiveTrivia>
  [690] getparam 0 .............................. <me>
  [692] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveTrivia", #receiveTrivia, me>
  [694] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveTrivia", #receiveTrivia, me)
  [696] getparam 0 .............................. <me>
  [698] getobjprop 3 ............................ <me.spriteNum>
  [700] pusharglist 1 ........................... <me.spriteNum>
  [702] extcall 2 ............................... <sprite(me.spriteNum)>
  [704] getparam 0 .............................. <me>
  [706] getobjprop 722 .......................... <me.foRoom>
  [709] pushcons 30 ............................. <"receiveJukeboxRequestAccepted">
  [711] pushsymb 814 ............................ <#receiveJukeboxRequestAccepted>
  [714] getparam 0 .............................. <me>
  [716] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveJukeboxRequestAccepted", #receiveJukeboxRequestAccepted, me>
  [718] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveJukeboxRequestAccepted", #receiveJukeboxRequestAccepted, me)
  [720] getparam 0 .............................. <me>
  [722] getobjprop 3 ............................ <me.spriteNum>
  [724] pusharglist 1 ........................... <me.spriteNum>
  [726] extcall 2 ............................... <sprite(me.spriteNum)>
  [728] getparam 0 .............................. <me>
  [730] getobjprop 722 .......................... <me.foRoom>
  [733] pushcons 31 ............................. <"receivePlaylistEmpty">
  [735] pushsymb 815 ............................ <#receivePlaylistEmpty>
  [738] getparam 0 .............................. <me>
  [740] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receivePlaylistEmpty", #receivePlaylistEmpty, me>
  [742] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receivePlaylistEmpty", #receivePlaylistEmpty, me)
  [744] getparam 0 .............................. <me>
  [746] getobjprop 3 ............................ <me.spriteNum>
  [748] pusharglist 1 ........................... <me.spriteNum>
  [750] extcall 2 ............................... <sprite(me.spriteNum)>
  [752] getparam 0 .............................. <me>
  [754] getobjprop 722 .......................... <me.foRoom>
  [757] pushcons 32 ............................. <"receiveJukeboxWaitTurn">
  [759] pushsymb 816 ............................ <#receiveJukeboxWaitTurn>
  [762] getparam 0 .............................. <me>
  [764] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveJukeboxWaitTurn", #receiveJukeboxWaitTurn, me>
  [766] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveJukeboxWaitTurn", #receiveJukeboxWaitTurn, me)
  [768] getparam 0 .............................. <me>
  [770] getobjprop 3 ............................ <me.spriteNum>
  [772] pusharglist 1 ........................... <me.spriteNum>
  [774] extcall 2 ............................... <sprite(me.spriteNum)>
  [776] getparam 0 .............................. <me>
  [778] getobjprop 722 .......................... <me.foRoom>
  [781] pushcons 33 ............................. <"receiveJukeboxPlay">
  [783] pushsymb 817 ............................ <#receiveJukeboxPlay>
  [786] getparam 0 .............................. <me>
  [788] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveJukeboxPlay", #receiveJukeboxPlay, me>
  [790] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveJukeboxPlay", #receiveJukeboxPlay, me)
  [792] getparam 0 .............................. <me>
  [794] getobjprop 3 ............................ <me.spriteNum>
  [796] pusharglist 1 ........................... <me.spriteNum>
  [798] extcall 2 ............................... <sprite(me.spriteNum)>
  [800] getparam 0 .............................. <me>
  [802] getobjprop 722 .......................... <me.foRoom>
  [805] pushcons 34 ............................. <"receiveJukeboxStop">
  [807] pushsymb 818 ............................ <#receiveJukeboxStop>
  [810] getparam 0 .............................. <me>
  [812] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveJukeboxStop", #receiveJukeboxStop, me>
  [814] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveJukeboxStop", #receiveJukeboxStop, me)
  [816] getparam 0 .............................. <me>
  [818] getobjprop 3 ............................ <me.spriteNum>
  [820] pusharglist 1 ........................... <me.spriteNum>
  [822] extcall 2 ............................... <sprite(me.spriteNum)>
  [824] getparam 0 .............................. <me>
  [826] getobjprop 722 .......................... <me.foRoom>
  [829] pushcons 35 ............................. <"receiveJukeboxLock">
  [831] pushsymb 819 ............................ <#receiveJukeboxLock>
  [834] getparam 0 .............................. <me>
  [836] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveJukeboxLock", #receiveJukeboxLock, me>
  [838] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveJukeboxLock", #receiveJukeboxLock, me)
  [840] getparam 0 .............................. <me>
  [842] getobjprop 3 ............................ <me.spriteNum>
  [844] pusharglist 1 ........................... <me.spriteNum>
  [846] extcall 2 ............................... <sprite(me.spriteNum)>
  [848] getparam 0 .............................. <me>
  [850] getobjprop 722 .......................... <me.foRoom>
  [853] pushcons 36 ............................. <"receiveNotEnoughTokens">
  [855] pushsymb 820 ............................ <#receiveNotEnoughTokens>
  [858] getparam 0 .............................. <me>
  [860] pusharglistnoret 5 ...................... <sprite(me.spriteNum), me.foRoom, "receiveNotEnoughTokens", #receiveNotEnoughTokens, me>
  [862] objcall 159 ............................. sprite(me.spriteNum).setCallback(me.foRoom, "receiveNotEnoughTokens", #receiveNotEnoughTokens, me)
  [864] ret
end

on debug me, sMessage, bForce
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 28 ........................... <me.bDebug>
  [  4] getparam 2 .............................. <bForce>
  [  6] or ...................................... <me.bDebug or bForce>
  [  7] jmpifz [ 19] ............................ if me.bDebug or bForce then
  [ 10] pushcons 37 ............................. <"SF_Gateway::Studio: ">
  [ 12] getparam 1 .............................. <sMessage>
  [ 14] joinstr ................................. <"SF_Gateway::Studio: " & sMessage>
  [ 15] pusharglistnoret 1 ...................... <"SF_Gateway::Studio: " & sMessage>
  [ 17] extcall 33 .............................. put "SF_Gateway::Studio: " & sMessage
  [ 19] ret
end

on isOwner me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 754 ............................. <me.getOwner()>
  [  7] getparam 1 .............................. <sScreenName>
  [  9] eq ...................................... <me.getOwner() = sScreenName>
  [ 10] pusharglistnoret 1 ...................... <me.getOwner() = sScreenName>
  [ 12] extcall 71 .............................. return me.getOwner() = sScreenName
  [ 14] ret
end

on getOwner me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 57 ........................... <me.sOwner>
  [  4] pusharglistnoret 1 ...................... <me.sOwner>
  [  6] extcall 71 .............................. return me.sOwner
  [  8] ret
end

on getStudioName me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 196 .......................... <me.sStudioName>
  [  4] pusharglistnoret 1 ...................... <me.sStudioName>
  [  6] extcall 71 .............................. return me.sStudioName
  [  8] ret
end

on getStudioID me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 62 ........................... <me.sStudioID>
  [  4] pusharglistnoret 1 ...................... <me.sStudioID>
  [  6] extcall 71 .............................. return me.sStudioID
  [  8] ret
end

on sendEnterStudio me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 38 ............................. <"sendEnterStudio()">
  [  4] pusharglistnoret 2 ...................... <me, "sendEnterStudio()">
  [  6] objcall 20 .............................. me.debug("sendEnterStudio()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 744 ............................. <me.getcdplayer()>
  [ 26] pusharglistnoret 1 ...................... <me.getcdplayer()>
  [ 28] objcall 745 ............................. me.getcdplayer().reset()
  [ 31] pushcons 39 ............................. <EMPTY>
  [ 33] setlocal 0 .............................. sAction = EMPTY
  [ 35] getglobal 821 ........................... <gDrinking>
  [ 38] jmpifz [ 45] ............................ if gDrinking then
  [ 41] pushcons 40 ............................. <"drk">
  [ 43] setlocal 0 .............................. sAction = "drk"
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 722 ...................... <me.foRoom>
  [ 50] getlocal 0 .............................. <sAction>
  [ 52] pusharglistnoret 2 ...................... <me.foRoom, sAction>
  [ 54] objcall 755 ............................. me.foRoom.sendEnterStudio(sAction)
  [ 57] ret
end

on sendExitStudio me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 41 ............................. <"sendExitStudio()">
  [  4] pusharglistnoret 2 ...................... <me, "sendExitStudio()">
  [  6] objcall 20 .............................. me.debug("sendExitStudio()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getglobal 153 ........................... <ElementMgr>
  [ 21] pusharglist 1 ........................... <ElementMgr>
  [ 23] objcall 742 ............................. <ElementMgr.getSequencer()>
  [ 26] setlocal 0 .............................. oSequencer = ElementMgr.getSequencer()
  [ 28] getlocal 0 .............................. <oSequencer>
  [ 30] pusharglist 1 ........................... <oSequencer>
  [ 32] extcall 15 .............................. <voidp(oSequencer)>
  [ 34] not ..................................... <not voidp(oSequencer)>
  [ 35] jmpifz [ 45] ............................ if not voidp(oSequencer) then
  [ 38] getlocal 0 .............................. <oSequencer>
  [ 40] pusharglistnoret 1 ...................... <oSequencer>
  [ 42] objcall 743 ............................. oSequencer.stop()
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 744 ............................. <me.getcdplayer()>
  [ 52] pusharglistnoret 1 ...................... <me.getcdplayer()>
  [ 54] objcall 745 ............................. me.getcdplayer().reset()
  [ 57] getparam 0 .............................. <me>
  [ 59] getchainedprop 722 ...................... <me.foRoom>
  [ 62] pusharglistnoret 1 ...................... <me.foRoom>
  [ 64] objcall 756 ............................. me.foRoom.sendExitStudio()
  [ 67] ret
end

on sendExitStudioViaDoor me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 42 ............................. <"sendExitStudioViaDoor()">
  [  4] pusharglistnoret 2 ...................... <me, "sendExitStudioViaDoor()">
  [  6] objcall 20 .............................. me.debug("sendExitStudioViaDoor()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] pusharglistnoret 1 ...................... <me.foRoom>
  [ 26] objcall 757 ............................. me.foRoom.sendExitStudioViaDoor()
  [ 29] ret
end

on sendMoveAvatar me, iXPos, iYPos, iZPos
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 43 ............................. <"sendMoveAvatar()">
  [  4] pusharglistnoret 2 ...................... <me, "sendMoveAvatar()">
  [  6] objcall 20 .............................. me.debug("sendMoveAvatar()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] getparam 1 .............................. <iXPos>
  [ 26] getparam 2 .............................. <iYPos>
  [ 28] getparam 3 .............................. <iZPos>
  [ 30] pusharglistnoret 4 ...................... <me.foRoom, iXPos, iYPos, iZPos>
  [ 32] objcall 758 ............................. me.foRoom.sendMoveAvatar(iXPos, iYPos, iZPos)
  [ 35] ret
end

on sendUpdateAvatar me, iXPos, iYPos, iZPos, iDirection, sAction
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 44 ............................. <"sendUpdateAvatar() iXPos: ">
  [  4] getparam 1 .............................. <iXPos>
  [  6] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos>
  [  7] pushcons 45 ............................. <", iYPos: ">
  [  9] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: ">
  [ 10] getparam 2 .............................. <iYPos>
  [ 12] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos>
  [ 13] pushcons 46 ............................. <", iZPos: ">
  [ 15] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: ">
  [ 16] getparam 3 .............................. <iZPos>
  [ 18] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos>
  [ 19] pushcons 47 ............................. <", iDirection: ">
  [ 21] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos & ", iDirection: ">
  [ 22] getparam 4 .............................. <iDirection>
  [ 24] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos & ", iDirection: " & iDirection>
  [ 25] pushcons 48 ............................. <", sAction: ">
  [ 27] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos & ", iDirection: " & iDirection & ", sAction: ">
  [ 28] getparam 5 .............................. <sAction>
  [ 30] joinstr ................................. <"sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos & ", iDirection: " & iDirection & ", sAction: " & sAction>
  [ 31] pusharglistnoret 2 ...................... <me, "sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos & ", iDirection: " & iDirection & ", sAction: " & sAction>
  [ 33] objcall 20 .............................. me.debug("sendUpdateAvatar() iXPos: " & iXPos & ", iYPos: " & iYPos & ", iZPos: " & iZPos & ", iDirection: " & iDirection & ", sAction: " & sAction)
  [ 35] getglobal 180 ........................... <oSession>
  [ 37] getobjprop 162 .......................... <oSession.bTestMode>
  [ 39] jmpifz [ 46] ............................ if oSession.bTestMode then
  [ 42] pusharglistnoret 0 ...................... <>
  [ 44] extcall 71 .............................. return 
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 722 ...................... <me.foRoom>
  [ 51] getparam 1 .............................. <iXPos>
  [ 53] getparam 2 .............................. <iYPos>
  [ 55] getparam 3 .............................. <iZPos>
  [ 57] getparam 4 .............................. <iDirection>
  [ 59] getparam 5 .............................. <sAction>
  [ 61] pusharglistnoret 6 ...................... <me.foRoom, iXPos, iYPos, iZPos, iDirection, sAction>
  [ 63] objcall 759 ............................. me.foRoom.sendUpdateAvatar(iXPos, iYPos, iZPos, iDirection, sAction)
  [ 66] ret
end

on sendStudioChat me, sMessage, sSpeechMode
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 49 ............................. <"sendStudioChat()">
  [  4] pusharglistnoret 2 ...................... <me, "sendStudioChat()">
  [  6] objcall 20 .............................. me.debug("sendStudioChat()")
  [  8] getparam 2 .............................. <sSpeechMode>
  [ 10] pushcons 50 ............................. <"sing">
  [ 12] nteq .................................... <sSpeechMode <> "sing">
  [ 13] jmpifz [ 29] ............................ if sSpeechMode <> "sing" then
  [ 16] pusharglist 0 ........................... <>
  [ 18] thebuiltin 827 .......................... <the shiftDown>
  [ 21] jmpifz [ 29] ............................ if the shiftDown then
  [ 24] pushsymb 828 ............................ <#shout>
  [ 27] setparam 2 .............................. sSpeechMode = #shout
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 722 ...................... <me.foRoom>
  [ 34] getparam 1 .............................. <sMessage>
  [ 36] getparam 2 .............................. <sSpeechMode>
  [ 38] pusharglist 1 ........................... <sSpeechMode>
  [ 40] extcall 560 ............................. <string(sSpeechMode)>
  [ 43] pusharglistnoret 3 ...................... <me.foRoom, sMessage, string(sSpeechMode)>
  [ 45] objcall 760 ............................. me.foRoom.sendStudioChat(sMessage, string(sSpeechMode))
  [ 48] ret
end

on sendFindPath me, iXPos, iYPos, iZPos
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 51 ............................. <"sendFindPath() ">
  [  4] getparam 1 .............................. <iXPos>
  [  6] joinstr ................................. <"sendFindPath() " & iXPos>
  [  7] getparam 2 .............................. <iYPos>
  [  9] joinpadstr .............................. <"sendFindPath() " & iXPos && iYPos>
  [ 10] getparam 3 .............................. <iZPos>
  [ 12] joinpadstr .............................. <"sendFindPath() " & iXPos && iYPos && iZPos>
  [ 13] pusharglistnoret 2 ...................... <me, "sendFindPath() " & iXPos && iYPos && iZPos>
  [ 15] objcall 20 .............................. me.debug("sendFindPath() " & iXPos && iYPos && iZPos)
  [ 17] getglobal 180 ........................... <oSession>
  [ 19] getobjprop 162 .......................... <oSession.bTestMode>
  [ 21] jmpifz [ 28] ............................ if oSession.bTestMode then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 71 .............................. return 
  [ 28] getparam 0 .............................. <me>
  [ 30] getchainedprop 722 ...................... <me.foRoom>
  [ 33] getparam 1 .............................. <iXPos>
  [ 35] getparam 2 .............................. <iYPos>
  [ 37] getparam 3 .............................. <iZPos>
  [ 39] pusharglistnoret 4 ...................... <me.foRoom, iXPos, iYPos, iZPos>
  [ 41] objcall 761 ............................. me.foRoom.sendFindPath(iXPos, iYPos, iZPos)
  [ 44] getparam 0 .............................. <me>
  [ 46] pushcons 52 ............................. <"sendFindPath() call complete">
  [ 48] pusharglistnoret 2 ...................... <me, "sendFindPath() call complete">
  [ 50] objcall 20 .............................. me.debug("sendFindPath() call complete")
  [ 52] ret
end

on sendCdRequest me, iCdPlayerPosId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 53 ............................. <"sendCdRequest() ">
  [  4] getparam 1 .............................. <iCdPlayerPosId>
  [  6] joinstr ................................. <"sendCdRequest() " & iCdPlayerPosId>
  [  7] pusharglistnoret 2 ...................... <me, "sendCdRequest() " & iCdPlayerPosId>
  [  9] objcall 20 .............................. me.debug("sendCdRequest() " & iCdPlayerPosId)
  [ 11] getglobal 180 ........................... <oSession>
  [ 13] getobjprop 162 .......................... <oSession.bTestMode>
  [ 15] jmpifz [ 22] ............................ if oSession.bTestMode then
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 71 .............................. return 
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 722 ...................... <me.foRoom>
  [ 27] getparam 1 .............................. <iCdPlayerPosId>
  [ 29] pusharglistnoret 2 ...................... <me.foRoom, iCdPlayerPosId>
  [ 31] objcall 762 ............................. me.foRoom.sendCdRequest(iCdPlayerPosId)
  [ 34] ret
end

on sendCdPlay me, iPosId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 54 ............................. <"sendCdPlay() ">
  [  4] getparam 1 .............................. <iPosId>
  [  6] joinstr ................................. <"sendCdPlay() " & iPosId>
  [  7] pusharglistnoret 2 ...................... <me, "sendCdPlay() " & iPosId>
  [  9] objcall 20 .............................. me.debug("sendCdPlay() " & iPosId)
  [ 11] getglobal 180 ........................... <oSession>
  [ 13] getobjprop 162 .......................... <oSession.bTestMode>
  [ 15] jmpifz [ 22] ............................ if oSession.bTestMode then
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 71 .............................. return 
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 722 ...................... <me.foRoom>
  [ 27] getparam 1 .............................. <iPosId>
  [ 29] pusharglistnoret 2 ...................... <me.foRoom, iPosId>
  [ 31] objcall 763 ............................. me.foRoom.sendCdPlay(iPosId)
  [ 34] ret
end

on sendCdStop me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 55 ............................. <"sendCdStop()">
  [  4] pusharglistnoret 2 ...................... <me, "sendCdStop()">
  [  6] objcall 20 .............................. me.debug("sendCdStop()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] pusharglistnoret 1 ...................... <me.foRoom>
  [ 26] objcall 764 ............................. me.foRoom.sendCdStop()
  [ 29] ret
end

on sendCdEnd me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 56 ............................. <"sendCdEnd()">
  [  4] pusharglistnoret 2 ...................... <me, "sendCdEnd()">
  [  6] objcall 20 .............................. me.debug("sendCdEnd()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] pusharglistnoret 1 ...................... <me.foRoom>
  [ 26] objcall 765 ............................. me.foRoom.sendCdEnd()
  [ 29] ret
end

on sendThumbsUp me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 57 ............................. <"sendThumbsUp()">
  [  4] pusharglistnoret 2 ...................... <me, "sendThumbsUp()">
  [  6] objcall 20 .............................. me.debug("sendThumbsUp()")
  [  8] getglobal 250 ........................... <gFeatureSet>
  [ 10] pushsymb 831 ............................ <#VOTING>
  [ 13] pusharglist 2 ........................... <gFeatureSet, #VOTING>
  [ 15] objcall 374 ............................. <gFeatureSet.isEnabled(#VOTING)>
  [ 18] not ..................................... <not gFeatureSet.isEnabled(#VOTING)>
  [ 19] jmpifz [ 34] ............................ if not gFeatureSet.isEnabled(#VOTING) then
  [ 22] getglobal 153 ........................... <ElementMgr>
  [ 24] pushcons 58 ............................. <"FEATURE_DISABLED">
  [ 26] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 28] objcall 206 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 30] pusharglistnoret 0 ...................... <>
  [ 32] extcall 71 .............................. return 
  [ 34] getglobal 180 ........................... <oSession>
  [ 36] getobjprop 162 .......................... <oSession.bTestMode>
  [ 38] jmpifz [ 45] ............................ if oSession.bTestMode then
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 71 .............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 722 ...................... <me.foRoom>
  [ 50] pusharglistnoret 1 ...................... <me.foRoom>
  [ 52] objcall 766 ............................. me.foRoom.sendThumbsUp()
  [ 55] ret
end

on sendThumbsDown me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 59 ............................. <"sendThumbsDown()">
  [  4] pusharglistnoret 2 ...................... <me, "sendThumbsDown()">
  [  6] objcall 20 .............................. me.debug("sendThumbsDown()")
  [  8] getglobal 250 ........................... <gFeatureSet>
  [ 10] pushsymb 831 ............................ <#VOTING>
  [ 13] pusharglist 2 ........................... <gFeatureSet, #VOTING>
  [ 15] objcall 374 ............................. <gFeatureSet.isEnabled(#VOTING)>
  [ 18] not ..................................... <not gFeatureSet.isEnabled(#VOTING)>
  [ 19] jmpifz [ 34] ............................ if not gFeatureSet.isEnabled(#VOTING) then
  [ 22] getglobal 153 ........................... <ElementMgr>
  [ 24] pushcons 58 ............................. <"FEATURE_DISABLED">
  [ 26] pusharglistnoret 2 ...................... <ElementMgr, "FEATURE_DISABLED">
  [ 28] objcall 206 ............................. ElementMgr.alert("FEATURE_DISABLED")
  [ 30] pusharglistnoret 0 ...................... <>
  [ 32] extcall 71 .............................. return 
  [ 34] getglobal 180 ........................... <oSession>
  [ 36] getobjprop 162 .......................... <oSession.bTestMode>
  [ 38] jmpifz [ 45] ............................ if oSession.bTestMode then
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 71 .............................. return 
  [ 45] getparam 0 .............................. <me>
  [ 47] getchainedprop 722 ...................... <me.foRoom>
  [ 50] pusharglistnoret 1 ...................... <me.foRoom>
  [ 52] objcall 767 ............................. me.foRoom.sendThumbsDown()
  [ 55] ret
end

on sendDrinkCoke me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 60 ............................. <"sendDrinkCoke()">
  [  4] pusharglistnoret 2 ...................... <me, "sendDrinkCoke()">
  [  6] objcall 20 .............................. me.debug("sendDrinkCoke()")
  [  8] getglobal 180 ........................... <oSession>
  [ 10] getobjprop 162 .......................... <oSession.bTestMode>
  [ 12] jmpifz [ 19] ............................ if oSession.bTestMode then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 71 .............................. return 
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] pusharglistnoret 1 ...................... <me.foRoom>
  [ 26] objcall 768 ............................. me.foRoom.sendDrinkCoke()
  [ 29] ret
end

on sendKickAvatar me, sScreenName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 61 ............................. <"sendKickAvatar() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"sendKickAvatar() " & sScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "sendKickAvatar() " & sScreenName>
  [  9] objcall 20 .............................. me.debug("sendKickAvatar() " & sScreenName)
  [ 11] getglobal 180 ........................... <oSession>
  [ 13] getobjprop 162 .......................... <oSession.bTestMode>
  [ 15] jmpifz [ 22] ............................ if oSession.bTestMode then
  [ 18] pusharglistnoret 0 ...................... <>
  [ 20] extcall 71 .............................. return 
  [ 22] getparam 0 .............................. <me>
  [ 24] getchainedprop 722 ...................... <me.foRoom>
  [ 27] getparam 1 .............................. <sScreenName>
  [ 29] pusharglistnoret 2 ...................... <me.foRoom, sScreenName>
  [ 31] objcall 769 ............................. me.foRoom.sendKickAvatar(sScreenName)
  [ 34] ret
end

on sendCallForHelp me, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 62 ............................. <"sendCallForHelp() ">
  [  4] getparam 1 .............................. <sMessage>
  [  6] joinstr ................................. <"sendCallForHelp() " & sMessage>
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 3 ...................... <me, "sendCallForHelp() " & sMessage, 1>
  [ 11] objcall 20 .............................. me.debug("sendCallForHelp() " & sMessage, 1)
  [ 13] getglobal 180 ........................... <oSession>
  [ 15] getobjprop 162 .......................... <oSession.bTestMode>
  [ 17] jmpifz [ 24] ............................ if oSession.bTestMode then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 71 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 722 ...................... <me.foRoom>
  [ 29] getparam 1 .............................. <sMessage>
  [ 31] pusharglistnoret 2 ...................... <me.foRoom, sMessage>
  [ 33] objcall 770 ............................. me.foRoom.sendCallForHelp(sMessage)
  [ 36] ret
end

on sendStartTrade me, sTradeeScreenName, bTest
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 63 ............................. <"sendStartTrade() ">
  [  4] getparam 1 .............................. <sTradeeScreenName>
  [  6] joinstr ................................. <"sendStartTrade() " & sTradeeScreenName>
  [  7] pusharglistnoret 2 ...................... <me, "sendStartTrade() " & sTradeeScreenName>
  [  9] objcall 20 .............................. me.debug("sendStartTrade() " & sTradeeScreenName)
  [ 11] getglobal 250 ........................... <gFeatureSet>
  [ 13] pushsymb 832 ............................ <#TRADING>
  [ 16] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [ 18] objcall 374 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [ 21] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [ 22] jmpifz [ 29] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [ 25] pusharglistnoret 0 ...................... <>
  [ 27] extcall 71 .............................. return 
  [ 29] getparam 2 .............................. <bTest>
  [ 31] jmpifz [ 58] ............................ if bTest then
  [ 34] getparam 0 .............................. <me>
  [ 36] getparam 1 .............................. <sTradeeScreenName>
  [ 38] pusharglist 2 ........................... <me, sTradeeScreenName>
  [ 40] objcall 780 ............................. <me.getTestTrade(sTradeeScreenName)>
  [ 43] setlocal 0 .............................. aTestTrade = me.getTestTrade(sTradeeScreenName)
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] getlocal 0 .............................. <aTestTrade>
  [ 49] pusharglistnoret 2 ...................... <ElementMgr, aTestTrade>
  [ 51] objcall 833 ............................. ElementMgr.displayTrade(aTestTrade)
  [ 54] pusharglistnoret 0 ...................... <>
  [ 56] extcall 71 .............................. return 
  [ 58] getparam 0 .............................. <me>
  [ 60] getchainedprop 722 ...................... <me.foRoom>
  [ 63] getparam 1 .............................. <sTradeeScreenName>
  [ 65] pusharglistnoret 2 ...................... <me.foRoom, sTradeeScreenName>
  [ 67] objcall 771 ............................. me.foRoom.sendStartTrade(sTradeeScreenName)
  [ 70] ret
end

on sendAddToTrade me, iPosId, bTest
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 64 ............................. <"sendAddToTrade() ">
  [  4] getparam 1 .............................. <iPosId>
  [  6] joinstr ................................. <"sendAddToTrade() " & iPosId>
  [  7] pusharglistnoret 2 ...................... <me, "sendAddToTrade() " & iPosId>
  [  9] objcall 20 .............................. me.debug("sendAddToTrade() " & iPosId)
  [ 11] getglobal 250 ........................... <gFeatureSet>
  [ 13] pushsymb 832 ............................ <#TRADING>
  [ 16] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [ 18] objcall 374 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [ 21] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [ 22] jmpifz [ 29] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [ 25] pusharglistnoret 0 ...................... <>
  [ 27] extcall 71 .............................. return 
  [ 29] getparam 2 .............................. <bTest>
  [ 31] jmpifz [ 58] ............................ if bTest then
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 65 ............................. <"Somebody">
  [ 38] pusharglist 2 ........................... <me, "Somebody">
  [ 40] objcall 780 ............................. <me.getTestTrade("Somebody")>
  [ 43] setlocal 0 .............................. aTestTrade = me.getTestTrade("Somebody")
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] getlocal 0 .............................. <aTestTrade>
  [ 49] pusharglistnoret 2 ...................... <ElementMgr, aTestTrade>
  [ 51] objcall 833 ............................. ElementMgr.displayTrade(aTestTrade)
  [ 54] pusharglistnoret 0 ...................... <>
  [ 56] extcall 71 .............................. return 
  [ 58] getparam 0 .............................. <me>
  [ 60] getchainedprop 722 ...................... <me.foRoom>
  [ 63] getparam 1 .............................. <iPosId>
  [ 65] pusharglistnoret 2 ...................... <me.foRoom, iPosId>
  [ 67] objcall 772 ............................. me.foRoom.sendAddToTrade(iPosId)
  [ 70] getglobal 193 ........................... <oDenizenManager>
  [ 72] pusharglist 1 ........................... <oDenizenManager>
  [ 74] objcall 214 ............................. <oDenizenManager.getBackpack()>
  [ 76] setlocal 1 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 78] getlocal 1 .............................. <oBackPack>
  [ 80] pusharglist 1 ........................... <oBackPack>
  [ 82] extcall 15 .............................. <voidp(oBackPack)>
  [ 84] jmpifz [ 93] ............................ if voidp(oBackPack) then
  [ 87] pushcons 66 ............................. <">>> SEND ADD TO TRADE: oBACKPACK is VOID">
  [ 89] pusharglistnoret 1 ...................... <">>> SEND ADD TO TRADE: oBACKPACK is VOID">
  [ 91] extcall 33 .............................. put ">>> SEND ADD TO TRADE: oBACKPACK is VOID"
  [ 93] getlocal 1 .............................. <oBackPack>
  [ 95] pusharglist 1 ........................... <oBackPack>
  [ 97] extcall 15 .............................. <voidp(oBackPack)>
  [ 99] not ..................................... <not voidp(oBackPack)>
  [100] jmpifz [140] ............................ if not voidp(oBackPack) then
  [103] getlocal 1 .............................. <oBackPack>
  [105] getparam 1 .............................. <iPosId>
  [107] pusharglist 1 ........................... <iPosId>
  [109] extcall 48 .............................. <integer(iPosId)>
  [111] pusharglist 2 ........................... <oBackPack, integer(iPosId)>
  [113] objcall 837 ............................. <oBackPack.getPossessionById(integer(iPosId))>
  [116] setlocal 2 .............................. oPos = oBackPack.getPossessionById(integer(iPosId))
  [118] getlocal 1 .............................. <oBackPack>
  [120] getlocal 2 .............................. <oPos>
  [122] pusharglistnoret 2 ...................... <oBackPack, oPos>
  [124] objcall 838 ............................. oBackPack.addPossessionToTrade(oPos)
  [127] getparam 0 .............................. <me>
  [129] getparam 1 .............................. <iPosId>
  [131] pusharglist 1 ........................... <iPosId>
  [133] extcall 48 .............................. <integer(iPosId)>
  [135] pusharglistnoret 2 ...................... <me, integer(iPosId)>
  [137] objcall 809 ............................. me.removePossessionFromBackpack(integer(iPosId))
  [140] ret
end

on sendAgreeTrade me, bTest
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 67 ............................. <"sendAgreeTrade()">
  [  4] pusharglistnoret 2 ...................... <me, "sendAgreeTrade()">
  [  6] objcall 20 .............................. me.debug("sendAgreeTrade()")
  [  8] getglobal 250 ........................... <gFeatureSet>
  [ 10] pushsymb 832 ............................ <#TRADING>
  [ 13] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [ 15] objcall 374 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [ 18] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [ 19] jmpifz [ 26] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 71 .............................. return 
  [ 26] getparam 1 .............................. <bTest>
  [ 28] jmpifz [ 55] ............................ if bTest then
  [ 31] getparam 0 .............................. <me>
  [ 33] pushcons 65 ............................. <"Somebody">
  [ 35] pusharglist 2 ........................... <me, "Somebody">
  [ 37] objcall 780 ............................. <me.getTestTrade("Somebody")>
  [ 40] setlocal 0 .............................. aTestTrade = me.getTestTrade("Somebody")
  [ 42] getglobal 153 ........................... <ElementMgr>
  [ 44] getlocal 0 .............................. <aTestTrade>
  [ 46] pusharglistnoret 2 ...................... <ElementMgr, aTestTrade>
  [ 48] objcall 833 ............................. ElementMgr.displayTrade(aTestTrade)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 71 .............................. return 
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 722 ...................... <me.foRoom>
  [ 60] pusharglistnoret 1 ...................... <me.foRoom>
  [ 62] objcall 773 ............................. me.foRoom.sendAgreeTrade()
  [ 65] ret
end

on sendDisagreeTrade me, bTest
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 68 ............................. <"sendDisagreeTrade()">
  [  4] pusharglistnoret 2 ...................... <me, "sendDisagreeTrade()">
  [  6] objcall 20 .............................. me.debug("sendDisagreeTrade()")
  [  8] getglobal 250 ........................... <gFeatureSet>
  [ 10] pushsymb 832 ............................ <#TRADING>
  [ 13] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [ 15] objcall 374 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [ 18] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [ 19] jmpifz [ 26] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 71 .............................. return 
  [ 26] getparam 1 .............................. <bTest>
  [ 28] jmpifz [ 55] ............................ if bTest then
  [ 31] getparam 0 .............................. <me>
  [ 33] pushcons 65 ............................. <"Somebody">
  [ 35] pusharglist 2 ........................... <me, "Somebody">
  [ 37] objcall 780 ............................. <me.getTestTrade("Somebody")>
  [ 40] setlocal 0 .............................. aTestTrade = me.getTestTrade("Somebody")
  [ 42] getglobal 153 ........................... <ElementMgr>
  [ 44] getlocal 0 .............................. <aTestTrade>
  [ 46] pusharglistnoret 2 ...................... <ElementMgr, aTestTrade>
  [ 48] objcall 833 ............................. ElementMgr.displayTrade(aTestTrade)
  [ 51] pusharglistnoret 0 ...................... <>
  [ 53] extcall 71 .............................. return 
  [ 55] getparam 0 .............................. <me>
  [ 57] getchainedprop 722 ...................... <me.foRoom>
  [ 60] pusharglistnoret 1 ...................... <me.foRoom>
  [ 62] objcall 774 ............................. me.foRoom.sendDisagreeTrade()
  [ 65] ret
end

on sendCancelTrade me, bTest
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 69 ............................. <"sendCancelTrade()">
  [  4] pusharglistnoret 2 ...................... <me, "sendCancelTrade()">
  [  6] objcall 20 .............................. me.debug("sendCancelTrade()")
  [  8] getparam 1 .............................. <bTest>
  [ 10] jmpifz [ 24] ............................ if bTest then
  [ 13] getglobal 153 ........................... <ElementMgr>
  [ 15] pusharglistnoret 1 ...................... <ElementMgr>
  [ 17] objcall 840 ............................. ElementMgr.cancelTrade()
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 71 .............................. return 
  [ 24] getparam 0 .............................. <me>
  [ 26] getchainedprop 722 ...................... <me.foRoom>
  [ 29] pusharglistnoret 1 ...................... <me.foRoom>
  [ 31] objcall 775 ............................. me.foRoom.sendCancelTrade()
  [ 34] ret
end

on receiveDisplayTrade me, oCaller, oTrade
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 70 ............................. <"receiveDisplayTrade() ">
  [  4] getparam 2 .............................. <oTrade>
  [  6] pusharglist 1 ........................... <oTrade>
  [  8] objcall 208 ............................. <oTrade.toString()>
  [ 10] joinstr ................................. <"receiveDisplayTrade() " & oTrade.toString()>
  [ 11] pusharglistnoret 2 ...................... <me, "receiveDisplayTrade() " & oTrade.toString()>
  [ 13] objcall 20 .............................. me.debug("receiveDisplayTrade() " & oTrade.toString())
  [ 15] getglobal 250 ........................... <gFeatureSet>
  [ 17] pushsymb 832 ............................ <#TRADING>
  [ 20] pusharglist 2 ........................... <gFeatureSet, #TRADING>
  [ 22] objcall 374 ............................. <gFeatureSet.isEnabled(#TRADING)>
  [ 25] not ..................................... <not gFeatureSet.isEnabled(#TRADING)>
  [ 26] jmpifz [ 33] ............................ if not gFeatureSet.isEnabled(#TRADING) then
  [ 29] pusharglistnoret 0 ...................... <>
  [ 31] extcall 71 .............................. return 
  [ 33] pusharglist 0 ........................... <[:]>
  [ 35] pushproplist ............................ <[:]>
  [ 36] setlocal 0 .............................. aTrade = [:]
  [ 38] getlocal 0 .............................. <aTrade>
  [ 40] pushsymb 841 ............................ <#trader>
  [ 43] getparam 2 .............................. <oTrade>
  [ 45] pusharglist 1 ........................... <oTrade>
  [ 47] objcall 842 ............................. <oTrade.getTrader()>
  [ 50] pusharglistnoret 3 ...................... <aTrade, #trader, oTrade.getTrader()>
  [ 52] objcall 73 .............................. aTrade[#trader] = oTrade.getTrader()
  [ 54] getlocal 0 .............................. <aTrade>
  [ 56] pushsymb 843 ............................ <#tradee>
  [ 59] getparam 2 .............................. <oTrade>
  [ 61] pusharglist 1 ........................... <oTrade>
  [ 63] objcall 844 ............................. <oTrade.getTradee()>
  [ 66] pusharglistnoret 3 ...................... <aTrade, #tradee, oTrade.getTradee()>
  [ 68] objcall 73 .............................. aTrade[#tradee] = oTrade.getTradee()
  [ 70] getlocal 0 .............................. <aTrade>
  [ 72] pushsymb 845 ............................ <#traderAgrees>
  [ 75] getparam 2 .............................. <oTrade>
  [ 77] pusharglist 1 ........................... <oTrade>
  [ 79] objcall 846 ............................. <oTrade.getTraderAgrees()>
  [ 82] pusharglistnoret 3 ...................... <aTrade, #traderAgrees, oTrade.getTraderAgrees()>
  [ 84] objcall 73 .............................. aTrade[#traderAgrees] = oTrade.getTraderAgrees()
  [ 86] getlocal 0 .............................. <aTrade>
  [ 88] pushsymb 847 ............................ <#tradeeAgrees>
  [ 91] getparam 2 .............................. <oTrade>
  [ 93] pusharglist 1 ........................... <oTrade>
  [ 95] objcall 848 ............................. <oTrade.getTradeeAgrees()>
  [ 98] pusharglistnoret 3 ...................... <aTrade, #tradeeAgrees, oTrade.getTradeeAgrees()>
  [100] objcall 73 .............................. aTrade[#tradeeAgrees] = oTrade.getTradeeAgrees()
  [102] getlocal 0 .............................. <aTrade>
  [104] pushsymb 849 ............................ <#traderItems>
  [107] getparam 0 .............................. <me>
  [109] getparam 2 .............................. <oTrade>
  [111] pusharglist 1 ........................... <oTrade>
  [113] objcall 850 ............................. <oTrade.getTraderItems()>
  [116] pusharglist 2 ........................... <me, oTrade.getTraderItems()>
  [118] objcall 498 ............................. <me.convertFlashArrayToDirectorList(oTrade.getTraderItems())>
  [121] pusharglistnoret 3 ...................... <aTrade, #traderItems, me.convertFlashArrayToDirectorList(oTrade.getTraderItems())>
  [123] objcall 73 .............................. aTrade[#traderItems] = me.convertFlashArrayToDirectorList(oTrade.getTraderItems())
  [125] getlocal 0 .............................. <aTrade>
  [127] pushsymb 851 ............................ <#tradeeItems>
  [130] getparam 0 .............................. <me>
  [132] getparam 2 .............................. <oTrade>
  [134] pusharglist 1 ........................... <oTrade>
  [136] objcall 852 ............................. <oTrade.getTradeeItems()>
  [139] pusharglist 2 ........................... <me, oTrade.getTradeeItems()>
  [141] objcall 498 ............................. <me.convertFlashArrayToDirectorList(oTrade.getTradeeItems())>
  [144] pusharglistnoret 3 ...................... <aTrade, #tradeeItems, me.convertFlashArrayToDirectorList(oTrade.getTradeeItems())>
  [146] objcall 73 .............................. aTrade[#tradeeItems] = me.convertFlashArrayToDirectorList(oTrade.getTradeeItems())
  [148] getglobal 153 ........................... <ElementMgr>
  [150] getlocal 0 .............................. <aTrade>
  [152] pusharglistnoret 2 ...................... <ElementMgr, aTrade>
  [154] objcall 833 ............................. ElementMgr.displayTrade(aTrade)
  [157] ret
end

on receiveCancelTrade me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 71 ............................. <"receiveCancelTrade()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveCancelTrade()">
  [  6] objcall 20 .............................. me.debug("receiveCancelTrade()")
  [  8] getglobal 153 ........................... <ElementMgr>
  [ 10] pusharglistnoret 1 ...................... <ElementMgr>
  [ 12] objcall 840 ............................. ElementMgr.cancelTrade()
  [ 15] getglobal 193 ........................... <oDenizenManager>
  [ 17] pusharglist 1 ........................... <oDenizenManager>
  [ 19] objcall 214 ............................. <oDenizenManager.getBackpack()>
  [ 21] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 23] getlocal 0 .............................. <oBackPack>
  [ 25] pusharglist 1 ........................... <oBackPack>
  [ 27] extcall 15 .............................. <voidp(oBackPack)>
  [ 29] not ..................................... <not voidp(oBackPack)>
  [ 30] jmpifz [ 95] ............................ if not voidp(oBackPack) then
  [ 33] getlocal 0 .............................. <oBackPack>
  [ 35] pusharglist 1 ........................... <oBackPack>
  [ 37] objcall 855 ............................. <oBackPack.getTradePossessionList()>
  [ 40] setlocal 1 .............................. aTradePossessionList = oBackPack.getTradePossessionList()
  [ 42] pushzero ................................ <0>
  [ 43] setlocal 2
  [ 45] getlocal 2
  [ 47] getlocal 1 .............................. <aTradePossessionList>
  [ 49] getobjprop 77 ........................... <aTradePossessionList.length>
  [ 51] pushint8 1 .............................. <1>
  [ 53] sub ..................................... <aTradePossessionList.length - 1>
  [ 54] lteq
  [ 55] jmpifz [ 88] ............................ repeat with i = 0 to aTradePossessionList.length - 1
  [ 58] getlocal 1 .............................. <aTradePossessionList>
  [ 60] getlocal 2 .............................. <i>
  [ 62] pusharglist 2 ........................... <aTradePossessionList, i>
  [ 64] objcall 43 .............................. <aTradePossessionList[i]>
  [ 66] setlocal 3 .............................. oPos = aTradePossessionList[i]
  [ 68] getlocal 0 .............................. <oBackPack>
  [ 70] getlocal 3 .............................. <oPos>
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 3 ...................... <oBackPack, oPos, 1>
  [ 76] objcall 856 ............................. oBackPack.addPossession(oPos, 1)
  [ 79] pushint8 1
  [ 81] getlocal 2
  [ 83] add
  [ 84] setlocal 2
  [ 86] endrepeat [ 45]
  [ 88] getlocal 0 .............................. <oBackPack>
  [ 90] pusharglistnoret 1 ...................... <oBackPack>
  [ 92] objcall 857 ............................. oBackPack.clearTradePossessionList()
  [ 95] getglobal 213 ........................... <oPossessionManager>
  [ 97] getglobal 193 ........................... <oDenizenManager>
  [ 99] pusharglist 1 ........................... <oDenizenManager>
  [101] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [103] pushint8 1 .............................. <1>
  [105] pushint8 25 ............................. <25>
  [107] pusharglistnoret 4 ...................... <oPossessionManager, oDenizenManager.getScreenName(), 1, 25>
  [109] objcall 528 ............................. oPossessionManager.getPossessionsInBackpack(oDenizenManager.getScreenName(), 1, 25)
  [112] ret
end

on receiveTradeComplete me, oCaller, aPossessions
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 72 ............................. <"receiveTradeComplete() ">
  [  4] getparam 2 .............................. <aPossessions>
  [  6] joinstr ................................. <"receiveTradeComplete() " & aPossessions>
  [  7] pusharglistnoret 2 ...................... <me, "receiveTradeComplete() " & aPossessions>
  [  9] objcall 20 .............................. me.debug("receiveTradeComplete() " & aPossessions)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] pusharglistnoret 1 ...................... <ElementMgr>
  [ 15] objcall 840 ............................. ElementMgr.cancelTrade()
  [ 18] getparam 2 .............................. <aPossessions>
  [ 20] pusharglist 1 ........................... <aPossessions>
  [ 22] extcall 15 .............................. <voidp(aPossessions)>
  [ 24] jmpifz [ 31] ............................ if voidp(aPossessions) then
  [ 27] pusharglistnoret 0 ...................... <>
  [ 29] extcall 71 .............................. return 
  [ 31] getglobal 193 ........................... <oDenizenManager>
  [ 33] pusharglist 1 ........................... <oDenizenManager>
  [ 35] objcall 214 ............................. <oDenizenManager.getBackpack()>
  [ 37] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [ 39] getlocal 0 .............................. <oBackPack>
  [ 41] pusharglist 1 ........................... <oBackPack>
  [ 43] extcall 15 .............................. <voidp(oBackPack)>
  [ 45] jmpifz [ 52] ............................ if voidp(oBackPack) then
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 71 .............................. return 
  [ 52] getlocal 0 .............................. <oBackPack>
  [ 54] pusharglistnoret 1 ...................... <oBackPack>
  [ 56] objcall 857 ............................. oBackPack.clearTradePossessionList()
  [ 59] getparam 2 .............................. <aPossessions>
  [ 61] getobjprop 77 ........................... <aPossessions.length>
  [ 63] setlocal 1 .............................. iLength = aPossessions.length
  [ 65] getlocal 1 .............................. <iLength>
  [ 67] pushzero ................................ <0>
  [ 68] lteq .................................... <iLength <= 0>
  [ 69] jmpifz [ 76] ............................ if iLength <= 0 then
  [ 72] pusharglistnoret 0 ...................... <>
  [ 74] extcall 71 .............................. return 
  [ 76] pushzero ................................ <0>
  [ 77] setlocal 2
  [ 79] getlocal 2
  [ 81] getlocal 1 .............................. <iLength>
  [ 83] pushint8 1 .............................. <1>
  [ 85] sub ..................................... <iLength - 1>
  [ 86] lteq
  [ 87] jmpifz [151] ............................ repeat with i = 0 to iLength - 1
  [ 90] getparam 2 .............................. <aPossessions>
  [ 92] getlocal 2 .............................. <i>
  [ 94] pusharglist 2 ........................... <aPossessions, i>
  [ 96] objcall 43 .............................. <aPossessions[i]>
  [ 98] setlocal 3 .............................. oPos = aPossessions[i]
  [100] getlocal 3 .............................. <oPos>
  [102] pusharglist 1 ........................... <oPos>
  [104] objcall 520 ............................. <oPos.getId()>
  [107] setlocal 4 .............................. iID = oPos.getId()
  [109] getlocal 3 .............................. <oPos>
  [111] pusharglist 1 ........................... <oPos>
  [113] objcall 574 ............................. <oPos.getCatalogItem()>
  [116] setlocal 5 .............................. iCatId = oPos.getCatalogItem()
  [118] getlocal 3 .............................. <oPos>
  [120] pusharglist 1 ........................... <oPos>
  [122] objcall 859 ............................. <oPos.getPropertiesString()>
  [125] setlocal 6 .............................. sProperties = oPos.getPropertiesString()
  [127] getlocal 0 .............................. <oBackPack>
  [129] getlocal 4 .............................. <iID>
  [131] getlocal 5 .............................. <iCatId>
  [133] getlocal 6 .............................. <sProperties>
  [135] pushint8 1 .............................. <1>
  [137] pusharglistnoret 5 ...................... <oBackPack, iID, iCatId, sProperties, 1>
  [139] objcall 860 ............................. oBackPack.addPossessionByItem(iID, iCatId, sProperties, 1)
  [142] pushint8 1
  [144] getlocal 2
  [146] add
  [147] setlocal 2
  [149] endrepeat [ 79]
  [151] getglobal 213 ........................... <oPossessionManager>
  [153] getglobal 193 ........................... <oDenizenManager>
  [155] pusharglist 1 ........................... <oDenizenManager>
  [157] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [159] pushint8 1 .............................. <1>
  [161] pushint8 25 ............................. <25>
  [163] pusharglistnoret 4 ...................... <oPossessionManager, oDenizenManager.getScreenName(), 1, 25>
  [165] objcall 528 ............................. oPossessionManager.getPossessionsInBackpack(oDenizenManager.getScreenName(), 1, 25)
  [168] ret
end

on receiveTradeStatus me, oCaller, sTrader, sTradee, bStatus
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 73 ............................. <"receiveTradeStatus() ">
  [  4] getparam 2 .............................. <sTrader>
  [  6] joinstr ................................. <"receiveTradeStatus() " & sTrader>
  [  7] getparam 3 .............................. <sTradee>
  [  9] joinpadstr .............................. <"receiveTradeStatus() " & sTrader && sTradee>
  [ 10] getparam 4 .............................. <bStatus>
  [ 12] joinpadstr .............................. <"receiveTradeStatus() " & sTrader && sTradee && bStatus>
  [ 13] pusharglistnoret 2 ...................... <me, "receiveTradeStatus() " & sTrader && sTradee && bStatus>
  [ 15] objcall 20 .............................. me.debug("receiveTradeStatus() " & sTrader && sTradee && bStatus)
  [ 17] getglobal 16 ............................ <oIsoScene>
  [ 19] pusharglist 1 ........................... <oIsoScene>
  [ 21] extcall 15 .............................. <voidp(oIsoScene)>
  [ 23] jmpifz [ 30] ............................ if voidp(oIsoScene) then
  [ 26] pusharglistnoret 0 ...................... <>
  [ 28] extcall 71 .............................. return 
  [ 30] getglobal 16 ............................ <oIsoScene>
  [ 32] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 35] getparam 2 .............................. <sTrader>
  [ 37] pusharglist 2 ........................... <oIsoScene.oAvatars, sTrader>
  [ 39] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sTrader)>
  [ 42] setlocal 0 .............................. oTraderAvatar = oIsoScene.oAvatars.getAvatar(sTrader)
  [ 44] getlocal 0 .............................. <oTraderAvatar>
  [ 46] pusharglist 1 ........................... <oTraderAvatar>
  [ 48] extcall 15 .............................. <voidp(oTraderAvatar)>
  [ 50] not ..................................... <not voidp(oTraderAvatar)>
  [ 51] jmpifz [ 63] ............................ if not voidp(oTraderAvatar) then
  [ 54] getlocal 0 .............................. <oTraderAvatar>
  [ 56] getparam 4 .............................. <bStatus>
  [ 58] pusharglistnoret 2 ...................... <oTraderAvatar, bStatus>
  [ 60] objcall 864 ............................. oTraderAvatar.setTrading(bStatus)
  [ 63] getglobal 16 ............................ <oIsoScene>
  [ 65] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 68] getparam 3 .............................. <sTradee>
  [ 70] pusharglist 2 ........................... <oIsoScene.oAvatars, sTradee>
  [ 72] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sTradee)>
  [ 75] setlocal 1 .............................. oTradeeAvatar = oIsoScene.oAvatars.getAvatar(sTradee)
  [ 77] getlocal 1 .............................. <oTradeeAvatar>
  [ 79] pusharglist 1 ........................... <oTradeeAvatar>
  [ 81] extcall 15 .............................. <voidp(oTradeeAvatar)>
  [ 83] not ..................................... <not voidp(oTradeeAvatar)>
  [ 84] jmpifz [ 96] ............................ if not voidp(oTradeeAvatar) then
  [ 87] getlocal 1 .............................. <oTradeeAvatar>
  [ 89] getparam 4 .............................. <bStatus>
  [ 91] pusharglistnoret 2 ...................... <oTradeeAvatar, bStatus>
  [ 93] objcall 864 ............................. oTradeeAvatar.setTrading(bStatus)
  [ 96] ret
end

on convertFlashArrayToDirectorList me, foArray
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. aList = []
  [  5] getparam 1 .............................. <foArray>
  [  7] getobjprop 77 ........................... <foArray.length>
  [  9] setlocal 1 .............................. iLength = foArray.length
  [ 11] getlocal 1 .............................. <iLength>
  [ 13] pushzero ................................ <0>
  [ 14] eq ...................................... <iLength = 0>
  [ 15] jmpifz [ 24] ............................ if iLength = 0 then
  [ 18] getlocal 0 .............................. <aList>
  [ 20] pusharglistnoret 1 ...................... <aList>
  [ 22] extcall 71 .............................. return aList
  [ 24] pushzero ................................ <0>
  [ 25] setlocal 2
  [ 27] getlocal 2
  [ 29] getlocal 1 .............................. <iLength>
  [ 31] pushint8 1 .............................. <1>
  [ 33] sub ..................................... <iLength - 1>
  [ 34] lteq
  [ 35] jmpifz [ 61] ............................ repeat with i = 0 to iLength - 1
  [ 38] getlocal 0 .............................. <aList>
  [ 40] getparam 1 .............................. <foArray>
  [ 42] getlocal 2 .............................. <i>
  [ 44] pusharglist 2 ........................... <foArray, i>
  [ 46] objcall 43 .............................. <foArray[i]>
  [ 48] pusharglistnoret 2 ...................... <aList, foArray[i]>
  [ 50] objcall 55 .............................. aList.add(foArray[i])
  [ 52] pushint8 1
  [ 54] getlocal 2
  [ 56] add
  [ 57] setlocal 2
  [ 59] endrepeat [ 27]
  [ 61] getlocal 0 .............................. <aList>
  [ 63] pusharglistnoret 1 ...................... <aList>
  [ 65] extcall 71 .............................. return aList
  [ 67] ret
end

on getTestTrade me, sTradeeScreenName
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. aTrade = [:]
  [  5] getlocal 0 .............................. <aTrade>
  [  7] pushsymb 841 ............................ <#trader>
  [ 10] getglobal 193 ........................... <oDenizenManager>
  [ 12] pusharglist 1 ........................... <oDenizenManager>
  [ 14] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 16] pusharglistnoret 3 ...................... <aTrade, #trader, oDenizenManager.getScreenName()>
  [ 18] objcall 73 .............................. aTrade[#trader] = oDenizenManager.getScreenName()
  [ 20] getlocal 0 .............................. <aTrade>
  [ 22] pushsymb 843 ............................ <#tradee>
  [ 25] getparam 1 .............................. <sTradeeScreenName>
  [ 27] pusharglistnoret 3 ...................... <aTrade, #tradee, sTradeeScreenName>
  [ 29] objcall 73 .............................. aTrade[#tradee] = sTradeeScreenName
  [ 31] getlocal 0 .............................. <aTrade>
  [ 33] pushsymb 845 ............................ <#traderAgrees>
  [ 36] pushint8 1 .............................. <1>
  [ 38] pushzero ................................ <0>
  [ 39] pusharglist 2 ........................... <[1, 0]>
  [ 41] pushlist ................................ <[1, 0]>
  [ 42] pushint8 2 .............................. <2>
  [ 44] pusharglist 1 ........................... <2>
  [ 46] extcall 246 ............................. <random(2)>
  [ 48] pusharglist 2 ........................... <[1, 0], random(2)>
  [ 50] objcall 43 .............................. <[1, 0][random(2)]>
  [ 52] pusharglistnoret 3 ...................... <aTrade, #traderAgrees, [1, 0][random(2)]>
  [ 54] objcall 73 .............................. aTrade[#traderAgrees] = [1, 0][random(2)]
  [ 56] getlocal 0 .............................. <aTrade>
  [ 58] pushsymb 847 ............................ <#tradeeAgrees>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pushzero ................................ <0>
  [ 64] pusharglist 2 ........................... <[1, 0]>
  [ 66] pushlist ................................ <[1, 0]>
  [ 67] pushint8 2 .............................. <2>
  [ 69] pusharglist 1 ........................... <2>
  [ 71] extcall 246 ............................. <random(2)>
  [ 73] pusharglist 2 ........................... <[1, 0], random(2)>
  [ 75] objcall 43 .............................. <[1, 0][random(2)]>
  [ 77] pusharglistnoret 3 ...................... <aTrade, #tradeeAgrees, [1, 0][random(2)]>
  [ 79] objcall 73 .............................. aTrade[#tradeeAgrees] = [1, 0][random(2)]
  [ 81] getlocal 0 .............................. <aTrade>
  [ 83] pushsymb 849 ............................ <#traderItems>
  [ 86] pushint8 3 .............................. <3>
  [ 88] pushint8 4 .............................. <4>
  [ 90] pushint8 5 .............................. <5>
  [ 92] pushint8 6 .............................. <6>
  [ 94] pushint8 7 .............................. <7>
  [ 96] pusharglist 5 ........................... <[3, 4, 5, 6, 7]>
  [ 98] pushlist ................................ <[3, 4, 5, 6, 7]>
  [ 99] pusharglistnoret 3 ...................... <aTrade, #traderItems, [3, 4, 5, 6, 7]>
  [101] objcall 73 .............................. aTrade[#traderItems] = [3, 4, 5, 6, 7]
  [103] getlocal 0 .............................. <aTrade>
  [105] pushsymb 851 ............................ <#tradeeItems>
  [108] pushint8 11 ............................. <11>
  [110] pushint8 12 ............................. <12>
  [112] pushint8 13 ............................. <13>
  [114] pushint8 14 ............................. <14>
  [116] pushint8 15 ............................. <15>
  [118] pusharglist 5 ........................... <[11, 12, 13, 14, 15]>
  [120] pushlist ................................ <[11, 12, 13, 14, 15]>
  [121] pusharglistnoret 3 ...................... <aTrade, #tradeeItems, [11, 12, 13, 14, 15]>
  [123] objcall 73 .............................. aTrade[#tradeeItems] = [11, 12, 13, 14, 15]
  [125] getlocal 0 .............................. <aTrade>
  [127] pusharglistnoret 1 ...................... <aTrade>
  [129] extcall 71 .............................. return aTrade
  [131] ret
end

on sendMessage me, sFromScreenName, aToScreenNameList, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 74 ............................. <"sendMessage() ">
  [  4] getparam 1 .............................. <sFromScreenName>
  [  6] joinstr ................................. <"sendMessage() " & sFromScreenName>
  [  7] getparam 2 .............................. <aToScreenNameList>
  [  9] joinpadstr .............................. <"sendMessage() " & sFromScreenName && aToScreenNameList>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "sendMessage() " & sFromScreenName && aToScreenNameList, 1>
  [ 14] objcall 20 .............................. me.debug("sendMessage() " & sFromScreenName && aToScreenNameList, 1)
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 722 ...................... <me.foRoom>
  [ 21] pusharglist 1 ........................... <me.foRoom>
  [ 23] objcall 872 ............................. <me.foRoom.getArray()>
  [ 26] setlocal 0 .............................. faToScreenNameList = me.foRoom.getArray()
  [ 28] getparam 2 .............................. <aToScreenNameList>
  [ 30] peek 0
  [ 32] pusharglist 1
  [ 34] extcall 42
  [ 36] pushint8 1
  [ 38] peek 0
  [ 40] peek 2
  [ 42] lteq
  [ 43] jmpifz [ 70] ............................ repeat with _sScreenName in aToScreenNameList
  [ 46] peek 2
  [ 48] peek 1
  [ 50] pusharglist 2
  [ 52] extcall 43
  [ 54] setlocal 1
  [ 56] getlocal 0 .............................. <faToScreenNameList>
  [ 58] getlocal 1 .............................. <_sScreenName>
  [ 60] pusharglistnoret 2 ...................... <faToScreenNameList, _sScreenName>
  [ 62] objcall 369 ............................. faToScreenNameList.push(_sScreenName)
  [ 65] pushint8 1
  [ 67] add
  [ 68] endrepeat [ 38]
  [ 70] pop 3
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 722 ...................... <me.foRoom>
  [ 77] getparam 3 .............................. <sMessage>
  [ 79] getlocal 0 .............................. <faToScreenNameList>
  [ 81] pusharglistnoret 3 ...................... <me.foRoom, sMessage, faToScreenNameList>
  [ 83] objcall 873 ............................. me.foRoom.sendSendMessage(sMessage, faToScreenNameList)
  [ 86] ret
end

on removeMessage me, sSender, sRecipient, sMessageHash
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 75 ............................. <"removeMessage() ">
  [  4] getparam 1 .............................. <sSender>
  [  6] joinstr ................................. <"removeMessage() " & sSender>
  [  7] getparam 2 .............................. <sRecipient>
  [  9] joinpadstr .............................. <"removeMessage() " & sSender && sRecipient>
  [ 10] getparam 3 .............................. <sMessageHash>
  [ 12] joinpadstr .............................. <"removeMessage() " & sSender && sRecipient && sMessageHash>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 3 ...................... <me, "removeMessage() " & sSender && sRecipient && sMessageHash, 1>
  [ 17] objcall 20 .............................. me.debug("removeMessage() " & sSender && sRecipient && sMessageHash, 1)
  [ 19] getparam 0 .............................. <me>
  [ 21] getchainedprop 722 ...................... <me.foRoom>
  [ 24] getparam 1 .............................. <sSender>
  [ 26] getparam 3 .............................. <sMessageHash>
  [ 28] pusharglistnoret 3 ...................... <me.foRoom, sSender, sMessageHash>
  [ 30] objcall 874 ............................. me.foRoom.sendRemoveMessage(sSender, sMessageHash)
  [ 33] ret
end

on rejectInvitation me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 76 ............................. <"rejectInvitation() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"rejectInvitation() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"rejectInvitation() " & sInviter && sInvitee>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "rejectInvitation() " & sInviter && sInvitee, 1>
  [ 14] objcall 20 .............................. me.debug("rejectInvitation() " & sInviter && sInvitee, 1)
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 722 ...................... <me.foRoom>
  [ 21] getparam 1 .............................. <sInviter>
  [ 23] pusharglistnoret 2 ...................... <me.foRoom, sInviter>
  [ 25] objcall 875 ............................. me.foRoom.sendRejectInvitation(sInviter)
  [ 28] ret
end

on acceptInvitation me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 77 ............................. <"acceptInvitation() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"acceptInvitation() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"acceptInvitation() " & sInviter && sInvitee>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "acceptInvitation() " & sInviter && sInvitee, 1>
  [ 14] objcall 20 .............................. me.debug("acceptInvitation() " & sInviter && sInvitee, 1)
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 722 ...................... <me.foRoom>
  [ 21] getparam 2 .............................. <sInvitee>
  [ 23] pusharglistnoret 2 ...................... <me.foRoom, sInvitee>
  [ 25] objcall 876 ............................. me.foRoom.sendAcceptInvitation(sInvitee)
  [ 28] ret
end

on inviteFriend me, sInviter, sInvitee
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 78 ............................. <"inviteFriend() ">
  [  4] getparam 1 .............................. <sInviter>
  [  6] joinstr ................................. <"inviteFriend() " & sInviter>
  [  7] getparam 2 .............................. <sInvitee>
  [  9] joinpadstr .............................. <"inviteFriend() " & sInviter && sInvitee>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "inviteFriend() " & sInviter && sInvitee, 1>
  [ 14] objcall 20 .............................. me.debug("inviteFriend() " & sInviter && sInvitee, 1)
  [ 16] getparam 1 .............................. <sInviter>
  [ 18] getparam 2 .............................. <sInvitee>
  [ 20] eq ...................................... <sInviter = sInvitee>
  [ 21] jmpifz [ 28] ............................ if sInviter = sInvitee then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 71 .............................. return 
  [ 28] getparam 2 .............................. <sInvitee>
  [ 30] getglobal 193 ........................... <oDenizenManager>
  [ 32] pusharglist 1 ........................... <oDenizenManager>
  [ 34] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 36] eq ...................................... <sInvitee = oDenizenManager.getScreenName()>
  [ 37] jmpifz [ 50] ............................ if sInvitee = oDenizenManager.getScreenName() then
  [ 40] pushcons 79 ............................. <"CAN'T INVITE INVITEE">
  [ 42] pusharglistnoret 1 ...................... <"CAN'T INVITE INVITEE">
  [ 44] extcall 206 ............................. alert("CAN'T INVITE INVITEE")
  [ 46] pusharglistnoret 0 ...................... <>
  [ 48] extcall 71 .............................. return 
  [ 50] getparam 0 .............................. <me>
  [ 52] getchainedprop 722 ...................... <me.foRoom>
  [ 55] getparam 2 .............................. <sInvitee>
  [ 57] pusharglistnoret 2 ...................... <me.foRoom, sInvitee>
  [ 59] objcall 877 ............................. me.foRoom.sendInviteFriend(sInvitee)
  [ 62] ret
end

on removeFriends me, sScreenName, aRemoveList
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 80 ............................. <"removeFriends() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"removeFriends() " & sScreenName>
  [  7] getparam 2 .............................. <aRemoveList>
  [  9] joinpadstr .............................. <"removeFriends() " & sScreenName && aRemoveList>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 3 ...................... <me, "removeFriends() " & sScreenName && aRemoveList, 1>
  [ 14] objcall 20 .............................. me.debug("removeFriends() " & sScreenName && aRemoveList, 1)
  [ 16] getparam 0 .............................. <me>
  [ 18] getchainedprop 722 ...................... <me.foRoom>
  [ 21] pusharglist 1 ........................... <me.foRoom>
  [ 23] objcall 872 ............................. <me.foRoom.getArray()>
  [ 26] setlocal 0 .............................. faRemoveList = me.foRoom.getArray()
  [ 28] getparam 2 .............................. <aRemoveList>
  [ 30] peek 0
  [ 32] pusharglist 1
  [ 34] extcall 42
  [ 36] pushint8 1
  [ 38] peek 0
  [ 40] peek 2
  [ 42] lteq
  [ 43] jmpifz [ 70] ............................ repeat with sFriendScreenName in aRemoveList
  [ 46] peek 2
  [ 48] peek 1
  [ 50] pusharglist 2
  [ 52] extcall 43
  [ 54] setlocal 1
  [ 56] getlocal 0 .............................. <faRemoveList>
  [ 58] getlocal 1 .............................. <sFriendScreenName>
  [ 60] pusharglistnoret 2 ...................... <faRemoveList, sFriendScreenName>
  [ 62] objcall 369 ............................. faRemoveList.push(sFriendScreenName)
  [ 65] pushint8 1
  [ 67] add
  [ 68] endrepeat [ 38]
  [ 70] pop 3
  [ 72] getparam 0 .............................. <me>
  [ 74] getchainedprop 722 ...................... <me.foRoom>
  [ 77] getlocal 0 .............................. <faRemoveList>
  [ 79] pusharglistnoret 2 ...................... <me.foRoom, faRemoveList>
  [ 81] objcall 878 ............................. me.foRoom.sendRemoveFriends(faRemoveList)
  [ 84] ret
end

on receiveStudioEntered me, oCaller, _sStudioId, _sStudioName, _sOwner, iLocation, iLayout, iSequenceRate
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 81 ............................. <"receiveStudioEntered() ">
  [  4] getparam 2 .............................. <_sStudioId>
  [  6] joinstr ................................. <"receiveStudioEntered() " & _sStudioId>
  [  7] getparam 3 .............................. <_sStudioName>
  [  9] joinpadstr .............................. <"receiveStudioEntered() " & _sStudioId && _sStudioName>
  [ 10] getparam 4 .............................. <_sOwner>
  [ 12] joinpadstr .............................. <"receiveStudioEntered() " & _sStudioId && _sStudioName && _sOwner>
  [ 13] getparam 5 .............................. <iLocation>
  [ 15] joinpadstr .............................. <"receiveStudioEntered() " & _sStudioId && _sStudioName && _sOwner && iLocation>
  [ 16] getparam 6 .............................. <iLayout>
  [ 18] joinpadstr .............................. <"receiveStudioEntered() " & _sStudioId && _sStudioName && _sOwner && iLocation && iLayout>
  [ 19] getparam 7 .............................. <iSequenceRate>
  [ 21] joinpadstr .............................. <"receiveStudioEntered() " & _sStudioId && _sStudioName && _sOwner && iLocation && iLayout && iSequenceRate>
  [ 22] pusharglistnoret 2 ...................... <me, "receiveStudioEntered() " & _sStudioId && _sStudioName && _sOwner && iLocation && iLayout && iSequenceRate>
  [ 24] objcall 20 .............................. me.debug("receiveStudioEntered() " & _sStudioId && _sStudioName && _sOwner && iLocation && iLayout && iSequenceRate)
  [ 26] getparam 0 .............................. <me>
  [ 28] getparam 2 .............................. <_sStudioId>
  [ 30] setobjprop 62 ........................... me.sStudioID = _sStudioId
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 3 .............................. <_sStudioName>
  [ 36] setobjprop 196 .......................... me.sStudioName = _sStudioName
  [ 38] getparam 0 .............................. <me>
  [ 40] getparam 4 .............................. <_sOwner>
  [ 42] setobjprop 57 ........................... me.sOwner = _sOwner
  [ 44] pushsymb 881 ............................ <#initStudioEntered>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 62 ........................... <me.sStudioID>
  [ 51] getparam 0 .............................. <me>
  [ 53] getobjprop 196 .......................... <me.sStudioName>
  [ 55] getparam 5 .............................. <iLocation>
  [ 57] getparam 6 .............................. <iLayout>
  [ 59] getparam 0 .............................. <me>
  [ 61] getobjprop 57 ........................... <me.sOwner>
  [ 63] getparam 7 .............................. <iSequenceRate>
  [ 65] pusharglistnoret 7 ...................... <#initStudioEntered, me.sStudioID, me.sStudioName, iLocation, iLayout, me.sOwner, iSequenceRate>
  [ 67] extcall 177 ............................. sendAllSprites(#initStudioEntered, me.sStudioID, me.sStudioName, iLocation, iLayout, me.sOwner, iSequenceRate)
  [ 69] pusharglistnoret 0 ...................... <>
  [ 71] extcall 882 ............................. clearOldAvatarCastMembers()
  [ 74] ret
end

on receiveDisplayStudio me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 82 ............................. <"receiveDisplayStudio()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveDisplayStudio()">
  [  6] objcall 20 .............................. me.debug("receiveDisplayStudio()")
  [  8] getglobal 16 ............................ <oIsoScene>
  [ 10] pusharglist 1 ........................... <oIsoScene>
  [ 12] extcall 15 .............................. <voidp(oIsoScene)>
  [ 14] not ..................................... <not voidp(oIsoScene)>
  [ 15] jmpifz [ 45] ............................ if not voidp(oIsoScene) then
  [ 18] pusharglist 0 ........................... <>
  [ 20] extcall 885 ............................. <getLoader()>
  [ 23] pusharglistnoret 1 ...................... <getLoader()>
  [ 25] objcall 886 ............................. getLoader().closeWindow()
  [ 28] getglobal 153 ........................... <ElementMgr>
  [ 30] pushcons 83 ............................. <"cc.controlbar.window">
  [ 32] pusharglistnoret 2 ...................... <ElementMgr, "cc.controlbar.window">
  [ 34] objcall 887 ............................. ElementMgr.newwindow("cc.controlbar.window")
  [ 37] getglobal 16 ............................ <oIsoScene>
  [ 39] pushzero ................................ <0>
  [ 40] pusharglistnoret 2 ...................... <oIsoScene, 0>
  [ 42] objcall 888 ............................. oIsoScene.lockDisplay(0)
  [ 45] ret
end

on receiveAvatarEnter me, oCaller, sAvatarName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 84 ............................. <"receiveAvatarEnter() ">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinstr ................................. <"receiveAvatarEnter() " & sAvatarName>
  [  7] pusharglistnoret 2 ...................... <me, "receiveAvatarEnter() " & sAvatarName>
  [  9] objcall 20 .............................. me.debug("receiveAvatarEnter() " & sAvatarName)
  [ 11] ret
end

on receiveAvatarExit me, oCaller, sAvatarName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 85 ............................. <"receiveAvatarExit() ">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinstr ................................. <"receiveAvatarExit() " & sAvatarName>
  [  7] pusharglistnoret 2 ...................... <me, "receiveAvatarExit() " & sAvatarName>
  [  9] objcall 20 .............................. me.debug("receiveAvatarExit() " & sAvatarName)
  [ 11] ret
end

on receiveAvatarUpdate me, oCaller, sAvatarName, iXPos, iYPos, iZPos, iDirection, sAction, iGender, sMission, sDefinition, bBot
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 86 ............................. <"receiveAvatarUpdate()">
  [  4] pushcons 87 ............................. <"sAvatarName: ">
  [  6] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: ">
  [  7] getparam 2 .............................. <sAvatarName>
  [  9] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName>
  [ 10] pushcons 88 ............................. <"iXPos: ">
  [ 12] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: ">
  [ 13] getparam 3 .............................. <iXPos>
  [ 15] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos>
  [ 16] pushcons 89 ............................. <"iYPos: ">
  [ 18] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: ">
  [ 19] getparam 4 .............................. <iYPos>
  [ 21] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos>
  [ 22] pushcons 90 ............................. <"iZPos: ">
  [ 24] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: ">
  [ 25] getparam 5 .............................. <iZPos>
  [ 27] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos>
  [ 28] pushcons 91 ............................. <"iDirection: ">
  [ 30] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: ">
  [ 31] getparam 6 .............................. <iDirection>
  [ 33] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection>
  [ 34] pushcons 92 ............................. <"sAction: ">
  [ 36] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: ">
  [ 37] getparam 7 .............................. <sAction>
  [ 39] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction>
  [ 40] pushcons 93 ............................. <"iGender: ">
  [ 42] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: ">
  [ 43] getparam 8 .............................. <iGender>
  [ 45] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender>
  [ 46] pushcons 94 ............................. <"sMission: ">
  [ 48] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: ">
  [ 49] getparam 9 .............................. <sMission>
  [ 51] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission>
  [ 52] pushcons 95 ............................. <"sDefinition: ">
  [ 54] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission && "sDefinition: ">
  [ 55] getparam 10 ............................. <sDefinition>
  [ 57] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission && "sDefinition: " & sDefinition>
  [ 58] pushcons 96 ............................. <"bBot: ">
  [ 60] joinpadstr .............................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission && "sDefinition: " & sDefinition && "bBot: ">
  [ 61] getparam 11 ............................. <bBot>
  [ 63] joinstr ................................. <"receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission && "sDefinition: " & sDefinition && "bBot: " & bBot>
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglistnoret 3 ...................... <me, "receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission && "sDefinition: " & sDefinition && "bBot: " & bBot, 1>
  [ 68] objcall 20 .............................. me.debug("receiveAvatarUpdate()" && "sAvatarName: " & sAvatarName && "iXPos: " & iXPos && "iYPos: " & iYPos && "iZPos: " & iZPos && "iDirection: " & iDirection && "sAction: " & sAction && "iGender: " & iGender && "sMission: " & sMission && "sDefinition: " & sDefinition && "bBot: " & bBot, 1)
  [ 70] getglobal 16 ............................ <oIsoScene>
  [ 72] pusharglist 1 ........................... <oIsoScene>
  [ 74] extcall 15 .............................. <voidp(oIsoScene)>
  [ 76] jmpifz [ 83] ............................ if voidp(oIsoScene) then
  [ 79] pusharglistnoret 0 ...................... <>
  [ 81] extcall 71 .............................. return 
  [ 83] getglobal 16 ............................ <oIsoScene>
  [ 85] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 88] getparam 2 .............................. <sAvatarName>
  [ 90] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 92] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 95] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 97] getlocal 0 .............................. <oAvatar>
  [ 99] pusharglist 1 ........................... <oAvatar>
  [101] extcall 15 .............................. <voidp(oAvatar)>
  [103] jmpifz [143] ............................ if voidp(oAvatar) then
  [106] pushcons 97 ............................. <"IsoAvatar">
  [108] pusharglist 1 ........................... <"IsoAvatar">
  [110] extcall 148 ............................. <script("IsoAvatar")>
  [112] getparam 2 .............................. <sAvatarName>
  [114] getglobal 890 ........................... <oStudioMap>
  [117] pusharglist 1 ........................... <oStudioMap>
  [119] objcall 630 ............................. <oStudioMap.getAvatarScale()>
  [122] getparam 10 ............................. <sDefinition>
  [124] getparam 2 .............................. <sAvatarName>
  [126] getparam 9 .............................. <sMission>
  [128] getparam 11 ............................. <bBot>
  [130] pusharglist 7 ........................... <script("IsoAvatar"), sAvatarName, oStudioMap.getAvatarScale(), sDefinition, sAvatarName, sMission, bBot>
  [132] extcall 149 ............................. <new(script("IsoAvatar"), sAvatarName, oStudioMap.getAvatarScale(), sDefinition, sAvatarName, sMission, bBot)>
  [134] setlocal 0 .............................. oAvatar = new(script("IsoAvatar"), sAvatarName, oStudioMap.getAvatarScale(), sDefinition, sAvatarName, sMission, bBot)
  [136] getlocal 0 .............................. <oAvatar>
  [138] pushint8 3 .............................. <3>
  [140] setobjprop 891 .......................... oAvatar.iLayer = 3
  [143] getparam 7 .............................. <sAction>
  [145] pushcons 98 ............................. <"dnc">
  [147] eq ...................................... <sAction = "dnc">
  [148] getparam 7 .............................. <sAction>
  [150] pushcons 99 ............................. <"std">
  [152] eq ...................................... <sAction = "std">
  [153] or ...................................... <(sAction = "dnc") or (sAction = "std")>
  [154] not ..................................... <not ((sAction = "dnc") or (sAction = "std"))>
  [155] jmpifz [177] ............................ if not ((sAction = "dnc") or (sAction = "std")) then
  [158] getparam 6 .............................. <iDirection>
  [160] pusharglist 1 ........................... <iDirection>
  [162] extcall 15 .............................. <voidp(iDirection)>
  [164] not ..................................... <not voidp(iDirection)>
  [165] jmpifz [177] ............................ if not voidp(iDirection) then
  [168] getlocal 0 .............................. <oAvatar>
  [170] getparam 6 .............................. <iDirection>
  [172] pusharglistnoret 2 ...................... <oAvatar, iDirection>
  [174] objcall 892 ............................. oAvatar.faceDirection(iDirection)
  [177] getparam 3 .............................. <iXPos>
  [179] pusharglist 1 ........................... <iXPos>
  [181] extcall 15 .............................. <voidp(iXPos)>
  [183] not ..................................... <not voidp(iXPos)>
  [184] getparam 5 .............................. <iZPos>
  [186] pusharglist 1 ........................... <iZPos>
  [188] extcall 15 .............................. <voidp(iZPos)>
  [190] not ..................................... <not voidp(iZPos)>
  [191] and ..................................... <not voidp(iXPos) and not voidp(iZPos)>
  [192] jmpifz [220] ............................ if not voidp(iXPos) and not voidp(iZPos) then
  [195] getglobal 16 ............................ <oIsoScene>
  [197] getchainedprop 893 ...................... <oIsoScene.oGrid>
  [200] getparam 5 .............................. <iZPos>
  [202] getparam 3 .............................. <iXPos>
  [204] pusharglist 3 ........................... <oIsoScene.oGrid, iZPos, iXPos>
  [206] objcall 894 ............................. <oIsoScene.oGrid.getSquareByRowCol(iZPos, iXPos)>
  [209] setlocal 1 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(iZPos, iXPos)
  [211] getlocal 0 .............................. <oAvatar>
  [213] getlocal 1 .............................. <oSquare>
  [215] pusharglistnoret 2 ...................... <oAvatar, oSquare>
  [217] objcall 895 ............................. oAvatar.moveToSquare(oSquare)
  [220] getparam 7 .............................. <sAction>
  [222] peek 0 .................................. case sAction of
  [224] pushcons 98 ............................. <"dnc">
  [226] eq
  [227] jmpifz [251] ............................ (case) "dnc":
  [230] getlocal 0 .............................. <oAvatar>
  [232] pusharglist 1 ........................... <oAvatar>
  [234] objcall 896 ............................. <oAvatar.isDancing()>
  [237] not ..................................... <not oAvatar.isDancing()>
  [238] jmpifz [248] ............................ if not oAvatar.isDancing() then
  [241] getlocal 0 .............................. <oAvatar>
  [243] pusharglistnoret 1 ...................... <oAvatar>
  [245] objcall 897 ............................. oAvatar.dance()
  [248] jmp [286]
  [251] peek 0
  [253] pushcons 40 ............................. <"drk">
  [255] eq
  [256] jmpifz [269] ............................ (case) "drk":
  [259] getlocal 0 .............................. <oAvatar>
  [261] pusharglistnoret 1 ...................... <oAvatar>
  [263] objcall 898 ............................. oAvatar.drinkCoke()
  [266] jmp [286] ............................... (case) otherwise:
  [269] getlocal 0 .............................. <oAvatar>
  [271] pusharglist 1 ........................... <oAvatar>
  [273] objcall 896 ............................. <oAvatar.isDancing()>
  [276] jmpifz [286] ............................ if oAvatar.isDancing() then
  [279] getlocal 0 .............................. <oAvatar>
  [281] pusharglistnoret 1 ...................... <oAvatar>
  [283] objcall 899 ............................. oAvatar.stopDancing()
  [286] pop 1 ................................... end case
  [288] ret
end

on receiveMoveAvatar me, oCaller, sAvatarName, iXPos, iYPos, iZPos, bStop, bForce
  [  0] getglobal 16 ............................ <oIsoScene>
  [  2] pusharglist 1 ........................... <oIsoScene>
  [  4] extcall 15 .............................. <voidp(oIsoScene)>
  [  6] jmpifz [ 13] ............................ if voidp(oIsoScene) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 71 .............................. return 
  [ 13] getglobal 16 ............................ <oIsoScene>
  [ 15] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 18] getparam 2 .............................. <sAvatarName>
  [ 20] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 22] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 25] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 27] getlocal 0 .............................. <oAvatar>
  [ 29] pusharglist 1 ........................... <oAvatar>
  [ 31] extcall 15 .............................. <voidp(oAvatar)>
  [ 33] not ..................................... <not voidp(oAvatar)>
  [ 34] jmpifz [ 91] ............................ if not voidp(oAvatar) then
  [ 37] getglobal 16 ............................ <oIsoScene>
  [ 39] getchainedprop 893 ...................... <oIsoScene.oGrid>
  [ 42] getparam 5 .............................. <iZPos>
  [ 44] getparam 3 .............................. <iXPos>
  [ 46] pusharglist 3 ........................... <oIsoScene.oGrid, iZPos, iXPos>
  [ 48] objcall 894 ............................. <oIsoScene.oGrid.getSquareByRowCol(iZPos, iXPos)>
  [ 51] setlocal 1 .............................. oSquare = oIsoScene.oGrid.getSquareByRowCol(iZPos, iXPos)
  [ 53] getlocal 1 .............................. <oSquare>
  [ 55] pusharglist 1 ........................... <oSquare>
  [ 57] extcall 15 .............................. <voidp(oSquare)>
  [ 59] not ..................................... <not voidp(oSquare)>
  [ 60] jmpifz [ 91] ............................ if not voidp(oSquare) then
  [ 63] getparam 7 .............................. <bForce>
  [ 65] jmpifz [ 80] ............................ if bForce then / else
  [ 68] getlocal 0 .............................. <oAvatar>
  [ 70] getlocal 1 .............................. <oSquare>
  [ 72] pusharglistnoret 2 ...................... <oAvatar, oSquare>
  [ 74] objcall 895 ............................. oAvatar.moveToSquare(oSquare)
  [ 77] jmp [ 91]
  [ 80] getlocal 0 .............................. <oAvatar>
  [ 82] getlocal 1 .............................. <oSquare>
  [ 84] getparam 6 .............................. <bStop>
  [ 86] pusharglistnoret 3 ...................... <oAvatar, oSquare, bStop>
  [ 88] objcall 903 ............................. oAvatar.addToPath(oSquare, bStop)
  [ 91] ret
end

on receiveRemoveAvatar me, oCaller, sAvatarName
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 100 ............................ <"receiveRemoveAvatar()">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinpadstr .............................. <"receiveRemoveAvatar()" && sAvatarName>
  [  7] pusharglistnoret 2 ...................... <me, "receiveRemoveAvatar()" && sAvatarName>
  [  9] objcall 20 .............................. me.debug("receiveRemoveAvatar()" && sAvatarName)
  [ 11] getglobal 16 ............................ <oIsoScene>
  [ 13] pusharglist 1 ........................... <oIsoScene>
  [ 15] extcall 15 .............................. <voidp(oIsoScene)>
  [ 17] jmpifz [ 24] ............................ if voidp(oIsoScene) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 71 .............................. return 
  [ 24] getglobal 16 ............................ <oIsoScene>
  [ 26] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 29] getparam 2 .............................. <sAvatarName>
  [ 31] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 33] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 36] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 38] getlocal 0 .............................. <oAvatar>
  [ 40] pusharglist 1 ........................... <oAvatar>
  [ 42] extcall 15 .............................. <voidp(oAvatar)>
  [ 44] not ..................................... <not voidp(oAvatar)>
  [ 45] jmpifz [ 60] ............................ if not voidp(oAvatar) then
  [ 48] getglobal 16 ............................ <oIsoScene>
  [ 50] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 53] getlocal 0 .............................. <oAvatar>
  [ 55] pusharglistnoret 2 ...................... <oIsoScene.oAvatars, oAvatar>
  [ 57] objcall 905 ............................. oIsoScene.oAvatars.removeItem(oAvatar)
  [ 60] ret
end

on receiveStudioChat me, oCaller, sAvatarName, sMessage, iSpeechMode
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 101 ............................ <"receiveStudioChat()">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinpadstr .............................. <"receiveStudioChat()" && sAvatarName>
  [  7] getparam 3 .............................. <sMessage>
  [  9] joinpadstr .............................. <"receiveStudioChat()" && sAvatarName && sMessage>
  [ 10] getparam 4 .............................. <iSpeechMode>
  [ 12] joinpadstr .............................. <"receiveStudioChat()" && sAvatarName && sMessage && iSpeechMode>
  [ 13] pusharglistnoret 2 ...................... <me, "receiveStudioChat()" && sAvatarName && sMessage && iSpeechMode>
  [ 15] objcall 20 .............................. me.debug("receiveStudioChat()" && sAvatarName && sMessage && iSpeechMode)
  [ 17] getglobal 16 ............................ <oIsoScene>
  [ 19] pusharglist 1 ........................... <oIsoScene>
  [ 21] extcall 15 .............................. <voidp(oIsoScene)>
  [ 23] jmpifz [ 30] ............................ if voidp(oIsoScene) then
  [ 26] pusharglistnoret 0 ...................... <>
  [ 28] extcall 71 .............................. return 
  [ 30] getglobal 16 ............................ <oIsoScene>
  [ 32] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 35] getparam 2 .............................. <sAvatarName>
  [ 37] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 39] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 42] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 44] getglobal 16 ............................ <oIsoScene>
  [ 46] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 49] getglobal 193 ........................... <oDenizenManager>
  [ 51] pusharglist 1 ........................... <oDenizenManager>
  [ 53] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 55] pusharglist 2 ........................... <oIsoScene.oAvatars, oDenizenManager.getScreenName()>
  [ 57] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(oDenizenManager.getScreenName())>
  [ 60] setlocal 1 .............................. oMyAvatar = oIsoScene.oAvatars.getAvatar(oDenizenManager.getScreenName())
  [ 62] getlocal 0 .............................. <oAvatar>
  [ 64] pusharglist 1 ........................... <oAvatar>
  [ 66] extcall 15 .............................. <voidp(oAvatar)>
  [ 68] not ..................................... <not voidp(oAvatar)>
  [ 69] getlocal 1 .............................. <oMyAvatar>
  [ 71] pusharglist 1 ........................... <oMyAvatar>
  [ 73] extcall 15 .............................. <voidp(oMyAvatar)>
  [ 75] not ..................................... <not voidp(oMyAvatar)>
  [ 76] and ..................................... <not voidp(oAvatar) and not voidp(oMyAvatar)>
  [ 77] jmpifz [238] ............................ if not voidp(oAvatar) and not voidp(oMyAvatar) then / else
  [ 80] getlocal 0 .............................. <oAvatar>
  [ 82] pusharglist 1 ........................... <oAvatar>
  [ 84] objcall 906 ............................. <oAvatar.getSquare()>
  [ 87] setlocal 2 .............................. oSquare1 = oAvatar.getSquare()
  [ 89] getlocal 1 .............................. <oMyAvatar>
  [ 91] pusharglist 1 ........................... <oMyAvatar>
  [ 93] objcall 906 ............................. <oMyAvatar.getSquare()>
  [ 96] setlocal 3 .............................. oSquare2 = oMyAvatar.getSquare()
  [ 98] getglobal 16 ............................ <oIsoScene>
  [100] getchainedprop 893 ...................... <oIsoScene.oGrid>
  [103] getlocal 2 .............................. <oSquare1>
  [105] getlocal 3 .............................. <oSquare2>
  [107] pusharglist 3 ........................... <oIsoScene.oGrid, oSquare1, oSquare2>
  [109] objcall 907 ............................. <oIsoScene.oGrid.getDistanceBetweenSquares(oSquare1, oSquare2)>
  [112] pusharglist 1 ........................... <oIsoScene.oGrid.getDistanceBetweenSquares(oSquare1, oSquare2)>
  [114] extcall 48 .............................. <integer(oIsoScene.oGrid.getDistanceBetweenSquares(oSquare1, oSquare2))>
  [116] setlocal 4 .............................. iDistance = integer(oIsoScene.oGrid.getDistanceBetweenSquares(oSquare1, oSquare2))
  [118] getlocal 4 .............................. <iDistance>
  [120] pushint8 1 .............................. <1>
  [122] lt ...................................... <iDistance < 1>
  [123] jmpifz [130] ............................ if iDistance < 1 then
  [126] pushint8 1 .............................. <1>
  [128] setlocal 4 .............................. iDistance = 1
  [130] getlocal 0 .............................. <oAvatar>
  [132] pusharglist 1 ........................... <oAvatar>
  [134] objcall 908 ............................. <oAvatar.getEngine()>
  [137] pushsymb 909 ............................ <#ch>
  [140] pusharglist 2 ........................... <oAvatar.getEngine(), #ch>
  [142] objcall 910 ............................. <oAvatar.getEngine().getPartColor(#ch)>
  [145] setlocal 5 .............................. oColor = oAvatar.getEngine().getPartColor(#ch)
  [147] getparam 0 .............................. <me>
  [149] pushcons 102 ............................ <"oColor: ">
  [151] getlocal 5 .............................. <oColor>
  [153] joinstr ................................. <"oColor: " & oColor>
  [154] pusharglistnoret 2 ...................... <me, "oColor: " & oColor>
  [156] objcall 20 .............................. me.debug("oColor: " & oColor)
  [158] getlocal 0 .............................. <oAvatar>
  [160] getchainedprop 902 ...................... <oAvatar.oSquare>
  [163] pusharglist 1 ........................... <oAvatar.oSquare>
  [165] objcall 911 ............................. <oAvatar.oSquare.calcViewCenter()>
  [168] setlocal 6 .............................. oPoint = oAvatar.oSquare.calcViewCenter()
  [170] getparam 0 .............................. <me>
  [172] pushcons 103 ............................ <"oPoint: ">
  [174] getlocal 6 .............................. <oPoint>
  [176] joinstr ................................. <"oPoint: " & oPoint>
  [177] pusharglistnoret 2 ...................... <me, "oPoint: " & oPoint>
  [179] objcall 20 .............................. me.debug("oPoint: " & oPoint)
  [181] getparam 4 .............................. <iSpeechMode>
  [183] pusharglist 1 ........................... <iSpeechMode>
  [185] extcall 15 .............................. <voidp(iSpeechMode)>
  [187] jmpifz [194] ............................ if voidp(iSpeechMode) then
  [190] pushint8 1 .............................. <1>
  [192] setparam 4 .............................. iSpeechMode = 1
  [194] getglobal 912 ........................... <ochat>
  [197] getparam 2 .............................. <sAvatarName>
  [199] getparam 3 .............................. <sMessage>
  [201] getlocal 5 .............................. <oColor>
  [203] getlocal 6 .............................. <oPoint>
  [205] getparam 4 .............................. <iSpeechMode>
  [207] getlocal 4 .............................. <iDistance>
  [209] pusharglist 7 ........................... <ochat, sAvatarName, sMessage, oColor, oPoint, iSpeechMode, iDistance>
  [211] objcall 913 ............................. <ochat.displaychat(sAvatarName, sMessage, oColor, oPoint, iSpeechMode, iDistance)>
  [214] setlocal 7 .............................. iError = ochat.displaychat(sAvatarName, sMessage, oColor, oPoint, iSpeechMode, iDistance)
  [216] getlocal 7 .............................. <iError>
  [218] pushzero ................................ <0>
  [219] lt ...................................... <iError < 0>
  [220] jmpifz [226] ............................ if iError < 0 then / else
  [223] jmp [235]
  [226] getlocal 0 .............................. <oAvatar>
  [228] getparam 3 .............................. <sMessage>
  [230] pusharglistnoret 2 ...................... <oAvatar, sMessage>
  [232] objcall 914 ............................. oAvatar.chat(sMessage)
  [235] jmp [246]
  [238] getparam 0 .............................. <me>
  [240] pushcons 104 ............................ <"oAvatar was null">
  [242] pusharglistnoret 2 ...................... <me, "oAvatar was null">
  [244] objcall 20 .............................. me.debug("oAvatar was null")
  [246] getglobal 16 ............................ <oIsoScene>
  [248] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [251] getlocal 0 .............................. <oAvatar>
  [253] pusharglistnoret 2 ...................... <oIsoScene.oAvatars, oAvatar>
  [255] objcall 915 ............................. oIsoScene.oAvatars.hearChat(oAvatar)
  [258] ret
end

on receiveFindPath me, oCaller, sAvatarName, aPath, iNowTime
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 105 ............................ <"receiveFindPath()">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinpadstr .............................. <"receiveFindPath()" && sAvatarName>
  [  7] getparam 3 .............................. <aPath>
  [  9] joinpadstr .............................. <"receiveFindPath()" && sAvatarName && aPath>
  [ 10] getparam 4 .............................. <iNowTime>
  [ 12] joinpadstr .............................. <"receiveFindPath()" && sAvatarName && aPath && iNowTime>
  [ 13] pusharglistnoret 2 ...................... <me, "receiveFindPath()" && sAvatarName && aPath && iNowTime>
  [ 15] objcall 20 .............................. me.debug("receiveFindPath()" && sAvatarName && aPath && iNowTime)
  [ 17] ret
end

on receiveNoCds me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 106 ............................ <"receiveNoCds()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveNoCds()">
  [  6] objcall 20 .............................. me.debug("receiveNoCds()")
  [  8] getglobal 153 ........................... <ElementMgr>
  [ 10] pushcons 107 ............................ <"NOCD_TITLE">
  [ 12] pushcons 108 ............................ <"NOCD_DESC">
  [ 14] pusharglistnoret 3 ...................... <ElementMgr, "NOCD_TITLE", "NOCD_DESC">
  [ 16] objcall 206 ............................. ElementMgr.alert("NOCD_TITLE", "NOCD_DESC")
  [ 18] ret
end

on receiveCdRequestAccepted me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 109 ............................ <"receiveCdRequestAccepted()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveCdRequestAccepted()">
  [  6] objcall 20 .............................. me.debug("receiveCdRequestAccepted()")
  [  8] getglobal 153 ........................... <ElementMgr>
  [ 10] pusharglistnoret 1 ...................... <ElementMgr>
  [ 12] objcall 925 ............................. ElementMgr.opencdplayer()
  [ 15] ret
end

on receiveCdWaitTurn me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 110 ............................ <"receiveCdWaitTurn()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveCdWaitTurn()">
  [  6] objcall 20 .............................. me.debug("receiveCdWaitTurn()")
  [  8] getglobal 153 ........................... <ElementMgr>
  [ 10] pushcons 111 ............................ <"CHOOSE_SONG_WAIT_TURN">
  [ 12] pusharglistnoret 2 ...................... <ElementMgr, "CHOOSE_SONG_WAIT_TURN">
  [ 14] objcall 206 ............................. ElementMgr.alert("CHOOSE_SONG_WAIT_TURN")
  [ 16] ret
end

on receiveCdPlay me, oCaller, sAvatar, foCd, iCdPlayerPosId
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 112 ............................ <"receiveCdPlay() ">
  [  4] getparam 3 .............................. <foCd>
  [  6] pusharglist 1 ........................... <foCd>
  [  8] objcall 208 ............................. <foCd.toString()>
  [ 10] joinstr ................................. <"receiveCdPlay() " & foCd.toString()>
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 3 ...................... <me, "receiveCdPlay() " & foCd.toString(), 1>
  [ 15] objcall 20 .............................. me.debug("receiveCdPlay() " & foCd.toString(), 1)
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 744 ............................. <me.getcdplayer()>
  [ 24] getparam 2 .............................. <sAvatar>
  [ 26] pusharglistnoret 2 ...................... <me.getcdplayer(), sAvatar>
  [ 28] objcall 926 ............................. me.getcdplayer().setAvatar(sAvatar)
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 744 ............................. <me.getcdplayer()>
  [ 38] getparam 3 .............................. <foCd>
  [ 40] pusharglistnoret 2 ...................... <me.getcdplayer(), foCd>
  [ 42] objcall 927 ............................. me.getcdplayer().setCd(foCd)
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 744 ............................. <me.getcdplayer()>
  [ 52] pushint8 1 .............................. <1>
  [ 54] pusharglistnoret 2 ...................... <me.getcdplayer(), 1>
  [ 56] objcall 928 ............................. me.getcdplayer().setPlaying(1)
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <me>
  [ 63] objcall 744 ............................. <me.getcdplayer()>
  [ 66] getparam 4 .............................. <iCdPlayerPosId>
  [ 68] pusharglistnoret 2 ...................... <me.getcdplayer(), iCdPlayerPosId>
  [ 70] objcall 929 ............................. me.getcdplayer().setCdPlayerPosId(iCdPlayerPosId)
  [ 73] getparam 2 .............................. <sAvatar>
  [ 75] getglobal 193 ........................... <oDenizenManager>
  [ 77] pusharglist 1 ........................... <oDenizenManager>
  [ 79] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 81] eq ...................................... <sAvatar = oDenizenManager.getScreenName()>
  [ 82] jmpifz [ 98] ............................ if sAvatar = oDenizenManager.getScreenName() then / else
  [ 85] pushsymb 930 ............................ <#setSpeechMode>
  [ 88] pushsymb 931 ............................ <#sing>
  [ 91] pusharglistnoret 2 ...................... <#setSpeechMode, #sing>
  [ 93] extcall 177 ............................. sendAllSprites(#setSpeechMode, #sing)
  [ 95] jmp [108]
  [ 98] pushsymb 930 ............................ <#setSpeechMode>
  [101] pushsymb 932 ............................ <#speak>
  [104] pusharglistnoret 2 ...................... <#setSpeechMode, #speak>
  [106] extcall 177 ............................. sendAllSprites(#setSpeechMode, #speak)
  [108] getparam 3 .............................. <foCd>
  [110] pusharglist 1 ........................... <foCd>
  [112] objcall 234 ............................. <foCd.getSong()>
  [114] setlocal 0 .............................. sSong = foCd.getSong()
  [116] getglobal 153 ........................... <ElementMgr>
  [118] pusharglist 1 ........................... <ElementMgr>
  [120] objcall 742 ............................. <ElementMgr.getSequencer()>
  [123] getlocal 0 .............................. <sSong>
  [125] pusharglistnoret 2 ...................... <ElementMgr.getSequencer(), sSong>
  [127] objcall 933 ............................. ElementMgr.getSequencer().loadOddCastSequence(sSong)
  [130] getglobal 16 ............................ <oIsoScene>
  [132] getparam 0 .............................. <me>
  [134] pusharglist 1 ........................... <me>
  [136] objcall 744 ............................. <me.getcdplayer()>
  [139] pusharglist 1 ........................... <me.getcdplayer()>
  [141] objcall 934 ............................. <me.getcdplayer().getCdPlayerPosId()>
  [144] pusharglist 2 ........................... <oIsoScene, me.getcdplayer().getCdPlayerPosId()>
  [146] objcall 935 ............................. <oIsoScene.getItemByPossessionId(me.getcdplayer().getCdPlayerPosId())>
  [149] setlocal 1 .............................. oPossession = oIsoScene.getItemByPossessionId(me.getcdplayer().getCdPlayerPosId())
  [151] getlocal 1 .............................. <oPossession>
  [153] pusharglist 1 ........................... <oPossession>
  [155] extcall 15 .............................. <voidp(oPossession)>
  [157] not ..................................... <not voidp(oPossession)>
  [158] jmpifz [173] ............................ if not voidp(oPossession) then
  [161] getlocal 1 .............................. <oPossession>
  [163] pusharglist 1 ........................... <oPossession>
  [165] objcall 936 ............................. <oPossession.getAction()>
  [168] pusharglistnoret 1 ...................... <oPossession.getAction()>
  [170] objcall 937 ............................. oPossession.getAction().setOn()
  [173] getglobal 16 ............................ <oIsoScene>
  [175] pusharglistnoret 1 ...................... <oIsoScene>
  [177] objcall 938 ............................. oIsoScene.displayCdPlaying()
  [180] pushsymb 939 ............................ <#startPerformance>
  [183] pusharglistnoret 1 ...................... <#startPerformance>
  [185] extcall 177 ............................. sendAllSprites(#startPerformance)
  [187] pusharglistnoret 0 ...................... <>
  [189] extcall 940 ............................. updateStage()
  [192] getglobal 153 ........................... <ElementMgr>
  [194] pusharglist 1 ........................... <ElementMgr>
  [196] objcall 742 ............................. <ElementMgr.getSequencer()>
  [199] pusharglistnoret 1 ...................... <ElementMgr.getSequencer()>
  [201] objcall 941 ............................. ElementMgr.getSequencer().play()
  [204] ret
end

on receiveEligibleVoters me, oCaller, aEligibleVoterNames
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 113 ............................ <"receiveEligibleVoters()">
  [  4] getparam 2 .............................. <aEligibleVoterNames>
  [  6] pusharglist 1 ........................... <aEligibleVoterNames>
  [  8] objcall 208 ............................. <aEligibleVoterNames.toString()>
  [ 10] joinstr ................................. <"receiveEligibleVoters()" & aEligibleVoterNames.toString()>
  [ 11] pusharglistnoret 2 ...................... <me, "receiveEligibleVoters()" & aEligibleVoterNames.toString()>
  [ 13] objcall 20 .............................. me.debug("receiveEligibleVoters()" & aEligibleVoterNames.toString())
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 744 ............................. <me.getcdplayer()>
  [ 22] getparam 2 .............................. <aEligibleVoterNames>
  [ 24] pusharglistnoret 2 ...................... <me.getcdplayer(), aEligibleVoterNames>
  [ 26] objcall 944 ............................. me.getcdplayer().setEligibleVoters(aEligibleVoterNames)
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 114 ............................ <"cd: ">
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglist 1 ........................... <me>
  [ 37] objcall 744 ............................. <me.getcdplayer()>
  [ 40] pusharglist 1 ........................... <me.getcdplayer()>
  [ 42] objcall 208 ............................. <me.getcdplayer().toString()>
  [ 44] joinstr ................................. <"cd: " & me.getcdplayer().toString()>
  [ 45] pusharglistnoret 2 ...................... <me, "cd: " & me.getcdplayer().toString()>
  [ 47] objcall 20 .............................. me.debug("cd: " & me.getcdplayer().toString())
  [ 49] ret
end

on receiveCdStop me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 115 ............................ <"receiveCdStop()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveCdStop()">
  [  6] objcall 20 .............................. me.debug("receiveCdStop()")
  [  8] getglobal 153 ........................... <ElementMgr>
  [ 10] pusharglistnoret 1 ...................... <ElementMgr>
  [ 12] objcall 946 ............................. ElementMgr.closeCdPlayer()
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 744 ............................. <me.getcdplayer()>
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 2 ...................... <me.getcdplayer(), 0>
  [ 25] objcall 928 ............................. me.getcdplayer().setPlaying(0)
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 744 ............................. <me.getcdplayer()>
  [ 35] pusharglistnoret 1 ...................... <me.getcdplayer()>
  [ 37] objcall 947 ............................. me.getcdplayer().clearEligibleVoters()
  [ 40] getglobal 153 ........................... <ElementMgr>
  [ 42] pusharglist 1 ........................... <ElementMgr>
  [ 44] objcall 742 ............................. <ElementMgr.getSequencer()>
  [ 47] pusharglistnoret 1 ...................... <ElementMgr.getSequencer()>
  [ 49] objcall 743 ............................. ElementMgr.getSequencer().stop()
  [ 52] getglobal 16 ............................ <oIsoScene>
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglist 1 ........................... <me>
  [ 58] objcall 744 ............................. <me.getcdplayer()>
  [ 61] pusharglist 1 ........................... <me.getcdplayer()>
  [ 63] objcall 934 ............................. <me.getcdplayer().getCdPlayerPosId()>
  [ 66] pusharglist 2 ........................... <oIsoScene, me.getcdplayer().getCdPlayerPosId()>
  [ 68] objcall 935 ............................. <oIsoScene.getItemByPossessionId(me.getcdplayer().getCdPlayerPosId())>
  [ 71] setlocal 0 .............................. oPossession = oIsoScene.getItemByPossessionId(me.getcdplayer().getCdPlayerPosId())
  [ 73] getlocal 0 .............................. <oPossession>
  [ 75] pusharglist 1 ........................... <oPossession>
  [ 77] extcall 15 .............................. <voidp(oPossession)>
  [ 79] not ..................................... <not voidp(oPossession)>
  [ 80] jmpifz [ 95] ............................ if not voidp(oPossession) then
  [ 83] getlocal 0 .............................. <oPossession>
  [ 85] pusharglist 1 ........................... <oPossession>
  [ 87] objcall 936 ............................. <oPossession.getAction()>
  [ 90] pusharglistnoret 1 ...................... <oPossession.getAction()>
  [ 92] objcall 948 ............................. oPossession.getAction().setOff()
  [ 95] pushsymb 930 ............................ <#setSpeechMode>
  [ 98] pushsymb 932 ............................ <#speak>
  [101] pusharglistnoret 2 ...................... <#setSpeechMode, #speak>
  [103] extcall 177 ............................. sendAllSprites(#setSpeechMode, #speak)
  [105] getglobal 16 ............................ <oIsoScene>
  [107] getchainedprop 949 ...................... <oIsoScene.oInfoStand>
  [110] getglobal 16 ............................ <oIsoScene>
  [112] getobjprop 950 .......................... <oIsoScene.oSelectedItem>
  [115] pusharglistnoret 2 ...................... <oIsoScene.oInfoStand, oIsoScene.oSelectedItem>
  [117] objcall 951 ............................. oIsoScene.oInfoStand.display(oIsoScene.oSelectedItem)
  [120] pushsymb 952 ............................ <#stopPerformance>
  [123] pusharglistnoret 1 ...................... <#stopPerformance>
  [125] extcall 177 ............................. sendAllSprites(#stopPerformance)
  [127] ret
end

on receiveCdLock me, oCaller, bLocked
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 116 ............................ <"receiveCdLock() ">
  [  4] getparam 2 .............................. <bLocked>
  [  6] joinstr ................................. <"receiveCdLock() " & bLocked>
  [  7] pusharglistnoret 2 ...................... <me, "receiveCdLock() " & bLocked>
  [  9] objcall 20 .............................. me.debug("receiveCdLock() " & bLocked)
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglist 1 ........................... <me>
  [ 15] objcall 744 ............................. <me.getcdplayer()>
  [ 18] getparam 2 .............................. <bLocked>
  [ 20] pusharglistnoret 2 ...................... <me.getcdplayer(), bLocked>
  [ 22] objcall 953 ............................. me.getcdplayer().setLocked(bLocked)
  [ 25] ret
end

on receiveThumbsUp me, oCaller, sAvatarName, iThumbsUp
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 117 ............................ <"receiveThumbsUp() ">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinstr ................................. <"receiveThumbsUp() " & sAvatarName>
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 3 ...................... <me, "receiveThumbsUp() " & sAvatarName, 1>
  [ 11] objcall 20 .............................. me.debug("receiveThumbsUp() " & sAvatarName, 1)
  [ 13] getglobal 16 ............................ <oIsoScene>
  [ 15] pusharglist 1 ........................... <oIsoScene>
  [ 17] extcall 15 .............................. <voidp(oIsoScene)>
  [ 19] jmpifz [ 26] ............................ if voidp(oIsoScene) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 71 .............................. return 
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 744 ............................. <me.getcdplayer()>
  [ 33] getparam 3 .............................. <iThumbsUp>
  [ 35] pusharglist 1 ........................... <iThumbsUp>
  [ 37] extcall 48 .............................. <integer(iThumbsUp)>
  [ 39] pusharglistnoret 2 ...................... <me.getcdplayer(), integer(iThumbsUp)>
  [ 41] objcall 955 ............................. me.getcdplayer().setThumbsUpVotes(integer(iThumbsUp))
  [ 44] getglobal 16 ............................ <oIsoScene>
  [ 46] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 49] getparam 2 .............................. <sAvatarName>
  [ 51] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 53] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 56] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 58] getlocal 0 .............................. <oAvatar>
  [ 60] pusharglist 1 ........................... <oAvatar>
  [ 62] extcall 15 .............................. <voidp(oAvatar)>
  [ 64] not ..................................... <not voidp(oAvatar)>
  [ 65] jmpifz [ 75] ............................ if not voidp(oAvatar) then
  [ 68] getlocal 0 .............................. <oAvatar>
  [ 70] pusharglistnoret 1 ...................... <oAvatar>
  [ 72] objcall 956 ............................. oAvatar.displayThumbsUp()
  [ 75] ret
end

on receiveThumbsDown me, oCaller, sAvatarName, iThumbsDown
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 118 ............................ <"receiveThumbsDown() ">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinstr ................................. <"receiveThumbsDown() " & sAvatarName>
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 3 ...................... <me, "receiveThumbsDown() " & sAvatarName, 1>
  [ 11] objcall 20 .............................. me.debug("receiveThumbsDown() " & sAvatarName, 1)
  [ 13] getglobal 16 ............................ <oIsoScene>
  [ 15] pusharglist 1 ........................... <oIsoScene>
  [ 17] extcall 15 .............................. <voidp(oIsoScene)>
  [ 19] jmpifz [ 26] ............................ if voidp(oIsoScene) then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 71 .............................. return 
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 744 ............................. <me.getcdplayer()>
  [ 33] getparam 3 .............................. <iThumbsDown>
  [ 35] pusharglist 1 ........................... <iThumbsDown>
  [ 37] extcall 48 .............................. <integer(iThumbsDown)>
  [ 39] pusharglistnoret 2 ...................... <me.getcdplayer(), integer(iThumbsDown)>
  [ 41] objcall 958 ............................. me.getcdplayer().setThumbsDownVotes(integer(iThumbsDown))
  [ 44] getglobal 16 ............................ <oIsoScene>
  [ 46] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 49] getparam 2 .............................. <sAvatarName>
  [ 51] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 53] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 56] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 58] getlocal 0 .............................. <oAvatar>
  [ 60] pusharglist 1 ........................... <oAvatar>
  [ 62] extcall 15 .............................. <voidp(oAvatar)>
  [ 64] not ..................................... <not voidp(oAvatar)>
  [ 65] jmpifz [ 75] ............................ if not voidp(oAvatar) then
  [ 68] getlocal 0 .............................. <oAvatar>
  [ 70] pusharglistnoret 1 ...................... <oAvatar>
  [ 72] objcall 959 ............................. oAvatar.displayThumbsDown()
  [ 75] ret
end

on receiveVotesResults me, oCaller, sAuthor, iThumbsUp, iThumbsDown, iPointsAwarded
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 119 ............................ <"receiveVotesResults() ">
  [  4] getparam 2 .............................. <sAuthor>
  [  6] joinstr ................................. <"receiveVotesResults() " & sAuthor>
  [  7] getparam 3 .............................. <iThumbsUp>
  [  9] joinpadstr .............................. <"receiveVotesResults() " & sAuthor && iThumbsUp>
  [ 10] getparam 4 .............................. <iThumbsDown>
  [ 12] joinpadstr .............................. <"receiveVotesResults() " & sAuthor && iThumbsUp && iThumbsDown>
  [ 13] getparam 5 .............................. <iPointsAwarded>
  [ 15] joinpadstr .............................. <"receiveVotesResults() " & sAuthor && iThumbsUp && iThumbsDown && iPointsAwarded>
  [ 16] pusharglistnoret 2 ...................... <me, "receiveVotesResults() " & sAuthor && iThumbsUp && iThumbsDown && iPointsAwarded>
  [ 18] objcall 20 .............................. me.debug("receiveVotesResults() " & sAuthor && iThumbsUp && iThumbsDown && iPointsAwarded)
  [ 20] getglobal 153 ........................... <ElementMgr>
  [ 22] getparam 2 .............................. <sAuthor>
  [ 24] getparam 3 .............................. <iThumbsUp>
  [ 26] pusharglist 1 ........................... <iThumbsUp>
  [ 28] extcall 48 .............................. <integer(iThumbsUp)>
  [ 30] getparam 4 .............................. <iThumbsDown>
  [ 32] pusharglist 1 ........................... <iThumbsDown>
  [ 34] extcall 48 .............................. <integer(iThumbsDown)>
  [ 36] getparam 5 .............................. <iPointsAwarded>
  [ 38] pusharglist 1 ........................... <iPointsAwarded>
  [ 40] extcall 48 .............................. <integer(iPointsAwarded)>
  [ 42] pusharglistnoret 5 ...................... <ElementMgr, sAuthor, integer(iThumbsUp), integer(iThumbsDown), integer(iPointsAwarded)>
  [ 44] objcall 961 ............................. ElementMgr.displayVoteResults(sAuthor, integer(iThumbsUp), integer(iThumbsDown), integer(iPointsAwarded))
  [ 47] ret
end

on receivePlayVotesResultsSound me, oCaller, iThumbsUp, iThumbsDown
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 120 ............................ <"receivePlayVotesResultsSound() ">
  [  4] getparam 2 .............................. <iThumbsUp>
  [  6] joinstr ................................. <"receivePlayVotesResultsSound() " & iThumbsUp>
  [  7] getparam 3 .............................. <iThumbsDown>
  [  9] joinpadstr .............................. <"receivePlayVotesResultsSound() " & iThumbsUp && iThumbsDown>
  [ 10] pusharglistnoret 2 ...................... <me, "receivePlayVotesResultsSound() " & iThumbsUp && iThumbsDown>
  [ 12] objcall 20 .............................. me.debug("receivePlayVotesResultsSound() " & iThumbsUp && iThumbsDown)
  [ 14] getglobal 153 ........................... <ElementMgr>
  [ 16] pusharglist 1 ........................... <ElementMgr>
  [ 18] objcall 742 ............................. <ElementMgr.getSequencer()>
  [ 21] pusharglistnoret 1 ...................... <ElementMgr.getSequencer()>
  [ 23] objcall 743 ............................. ElementMgr.getSequencer().stop()
  [ 26] getparam 2 .............................. <iThumbsUp>
  [ 28] pushzero ................................ <0>
  [ 29] gteq .................................... <iThumbsUp >= 0>
  [ 30] getparam 3 .............................. <iThumbsDown>
  [ 32] pushzero ................................ <0>
  [ 33] eq ...................................... <iThumbsDown = 0>
  [ 34] and ..................................... <(iThumbsUp >= 0) and (iThumbsDown = 0)>
  [ 35] jmpifz [ 50] ............................ if (iThumbsUp >= 0) and (iThumbsDown = 0) then / else
  [ 38] getparam 0 .............................. <me>
  [ 40] getparam 2 .............................. <iThumbsUp>
  [ 42] pusharglistnoret 2 ...................... <me, iThumbsUp>
  [ 44] objcall 804 ............................. me.playThumbsUpSound(iThumbsUp)
  [ 47] jmp [ 59]
  [ 50] getparam 0 .............................. <me>
  [ 52] getparam 3 .............................. <iThumbsDown>
  [ 54] pusharglistnoret 2 ...................... <me, iThumbsDown>
  [ 56] objcall 805 ............................. me.playThumbsDownSound(iThumbsDown)
  [ 59] ret
end

on receiveUpdateBackpack me, oCaller
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 121 ............................ <"receiveUpdateBackpack()">
  [  4] pusharglistnoret 2 ...................... <me, "receiveUpdateBackpack()">
  [  6] objcall 20 .............................. me.debug("receiveUpdateBackpack()")
  [  8] pusharglistnoret 0 ...................... <>
  [ 10] extcall 71 .............................. return 
  [ 12] ret
end

on receiveDrinkCoke me, oCaller, sAvatarName, iPoints
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 122 ............................ <"receiveDrinkCoke() ">
  [  4] getparam 2 .............................. <sAvatarName>
  [  6] joinstr ................................. <"receiveDrinkCoke() " & sAvatarName>
  [  7] getparam 3 .............................. <iPoints>
  [  9] joinpadstr .............................. <"receiveDrinkCoke() " & sAvatarName && iPoints>
  [ 10] pusharglistnoret 2 ...................... <me, "receiveDrinkCoke() " & sAvatarName && iPoints>
  [ 12] objcall 20 .............................. me.debug("receiveDrinkCoke() " & sAvatarName && iPoints)
  [ 14] getparam 3 .............................. <iPoints>
  [ 16] pushzero ................................ <0>
  [ 17] lt ...................................... <iPoints < 0>
  [ 18] jmpifz [ 33] ............................ if iPoints < 0 then
  [ 21] getglobal 153 ........................... <ElementMgr>
  [ 23] pushcons 123 ............................ <"ALERT_COKE_LIMIT">
  [ 25] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_COKE_LIMIT">
  [ 27] objcall 206 ............................. ElementMgr.alert("ALERT_COKE_LIMIT")
  [ 29] pusharglistnoret 0 ...................... <>
  [ 31] extcall 71 .............................. return 
  [ 33] getparam 2 .............................. <sAvatarName>
  [ 35] getglobal 193 ........................... <oDenizenManager>
  [ 37] pusharglist 1 ........................... <oDenizenManager>
  [ 39] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 41] eq ...................................... <sAvatarName = oDenizenManager.getScreenName()>
  [ 42] jmpifz [ 58] ............................ if sAvatarName = oDenizenManager.getScreenName() then
  [ 45] getglobal 153 ........................... <ElementMgr>
  [ 47] getparam 3 .............................. <iPoints>
  [ 49] pusharglist 1 ........................... <iPoints>
  [ 51] extcall 48 .............................. <integer(iPoints)>
  [ 53] pusharglistnoret 2 ...................... <ElementMgr, integer(iPoints)>
  [ 55] objcall 963 ............................. ElementMgr.displayDrinkCoke(integer(iPoints))
  [ 58] getglobal 16 ............................ <oIsoScene>
  [ 60] pusharglist 1 ........................... <oIsoScene>
  [ 62] extcall 15 .............................. <voidp(oIsoScene)>
  [ 64] jmpifz [ 71] ............................ if voidp(oIsoScene) then
  [ 67] pusharglistnoret 0 ...................... <>
  [ 69] extcall 71 .............................. return 
  [ 71] getglobal 16 ............................ <oIsoScene>
  [ 73] getchainedprop 862 ...................... <oIsoScene.oAvatars>
  [ 76] getparam 2 .............................. <sAvatarName>
  [ 78] pusharglist 2 ........................... <oIsoScene.oAvatars, sAvatarName>
  [ 80] objcall 863 ............................. <oIsoScene.oAvatars.getAvatar(sAvatarName)>
  [ 83] setlocal 0 .............................. oAvatar = oIsoScene.oAvatars.getAvatar(sAvatarName)
  [ 85] getlocal 0 .............................. <oAvatar>
  [ 87] pusharglist 1 ........................... <oAvatar>
  [ 89] extcall 15 .............................. <voidp(oAvatar)>
  [ 91] not ..................................... <not voidp(oAvatar)>
  [ 92] jmpifz [102] ............................ if not voidp(oAvatar) then
  [ 95] getlocal 0 .............................. <oAvatar>
  [ 97] pusharglistnoret 1 ...................... <oAvatar>
  [ 99] objcall 898 ............................. oAvatar.drinkCoke()
  [102] getglobal 193 ........................... <oDenizenManager>
  [104] pusharglist 1 ........................... <oDenizenManager>
  [106] objcall 305 ............................. <oDenizenManager.getCokesDrank()>
  [109] setlocal 1 .............................. iCokesDrank = oDenizenManager.getCokesDrank()
  [111] getglobal 193 ........................... <oDenizenManager>
  [113] getlocal 1 .............................. <iCokesDrank>
  [115] pushint8 1 .............................. <1>
  [117] add ..................................... <iCokesDrank + 1>
  [118] pusharglistnoret 2 ...................... <oDenizenManager, iCokesDrank + 1>
  [120] objcall 306 ............................. oDenizenManager.setCokesDrank(iCokesDrank + 1)
  [123] ret
end

on receiveModMessage me, oCaller, sMessage
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 124 ............................ <"receiveModMessage() ">
  [  4] getparam 2 .............................. <sMessage>
  [  6] add ..................................... <"receiveModMessage() " + sMessage>
  [  7] pusharglistnoret 2 ...................... <me, "receiveModMessage() " + sMessage>
  [  9] objcall 20 .............................. me.debug("receiveModMessage() " + sMessage)
  [ 11] getglobal 153 ........................... <ElementMgr>
  [ 13] pusharglist 1 ........................... <ElementMgr>
  [ 15] extcall 15 .............................. <voidp(ElementMgr)>
  [ 17] jmpifz [ 24] ............................ if voidp(ElementMgr) then
  [ 20] pusharglistnoret 0 ...................... <>
  [ 22] extcall 71 .............................. return 
  [ 24] getglobal 153 ........................... <ElementMgr>
  [ 26] pushcons 125 ............................ <"ALERT_MOD_MESSAGE">
  [ 28] getparam 2 .............................. <sMessage>
  [ 30] pusharglistnoret 3 ...................... <ElementMgr, "ALERT_MOD_MESSAGE", sMessage>
  [ 32] objcall 206 ............................. ElementMgr.alert("ALERT_MOD_MESSAGE", sMessage)
  [ 34] ret
end

on playThumbsUpSound me, iThumbsUp
  [  0] getparam 1 .............................. <iThumbsUp>
  [  2] pushint8 3 .............................. <3>
  [  4] lt ...................................... <iThumbsUp < 3>
  [  5] jmpifz [ 30] ............................ if iThumbsUp < 3 then
  [  8] pushint8 8 .............................. <8>
  [ 10] pusharglist 1 ........................... <8>
  [ 12] extcall 965 ............................. <sound(8)>
  [ 15] pushcons 126 ............................ <"plus_1">
  [ 17] pusharglist 1 ........................... <"plus_1">
  [ 19] extcall 4 ............................... <member("plus_1")>
  [ 21] pusharglistnoret 2 ...................... <sound(8), member("plus_1")>
  [ 23] objcall 941 ............................. sound(8).play(member("plus_1"))
  [ 26] pusharglistnoret 0 ...................... <>
  [ 28] extcall 71 .............................. return 
  [ 30] getparam 1 .............................. <iThumbsUp>
  [ 32] pushint8 5 .............................. <5>
  [ 34] lteq .................................... <iThumbsUp <= 5>
  [ 35] jmpifz [ 60] ............................ if iThumbsUp <= 5 then
  [ 38] pushint8 8 .............................. <8>
  [ 40] pusharglist 1 ........................... <8>
  [ 42] extcall 965 ............................. <sound(8)>
  [ 45] pushcons 127 ............................ <"plus_3">
  [ 47] pusharglist 1 ........................... <"plus_3">
  [ 49] extcall 4 ............................... <member("plus_3")>
  [ 51] pusharglistnoret 2 ...................... <sound(8), member("plus_3")>
  [ 53] objcall 941 ............................. sound(8).play(member("plus_3"))
  [ 56] pusharglistnoret 0 ...................... <>
  [ 58] extcall 71 .............................. return 
  [ 60] getparam 1 .............................. <iThumbsUp>
  [ 62] pushint8 10 ............................. <10>
  [ 64] lteq .................................... <iThumbsUp <= 10>
  [ 65] jmpifz [ 90] ............................ if iThumbsUp <= 10 then
  [ 68] pushint8 8 .............................. <8>
  [ 70] pusharglist 1 ........................... <8>
  [ 72] extcall 965 ............................. <sound(8)>
  [ 75] pushcons 128 ............................ <"plus_5">
  [ 77] pusharglist 1 ........................... <"plus_5">
  [ 79] extcall 4 ............................... <member("plus_5")>
  [ 81] pusharglistnoret 2 ...................... <sound(8), member("plus_5")>
  [ 83] objcall 941 ............................. sound(8).play(member("plus_5"))
  [ 86] pusharglistnoret 0 ...................... <>
  [ 88] extcall 71 .............................. return 
  [ 90] getparam 1 .............................. <iThumbsUp>
  [ 92] pushint8 16 ............................. <16>
  [ 94] lteq .................................... <iThumbsUp <= 16>
  [ 95] jmpifz [120] ............................ if iThumbsUp <= 16 then
  [ 98] pushint8 8 .............................. <8>
  [100] pusharglist 1 ........................... <8>
  [102] extcall 965 ............................. <sound(8)>
  [105] pushcons 129 ............................ <"plus_10">
  [107] pusharglist 1 ........................... <"plus_10">
  [109] extcall 4 ............................... <member("plus_10")>
  [111] pusharglistnoret 2 ...................... <sound(8), member("plus_10")>
  [113] objcall 941 ............................. sound(8).play(member("plus_10"))
  [116] pusharglistnoret 0 ...................... <>
  [118] extcall 71 .............................. return 
  [120] getparam 1 .............................. <iThumbsUp>
  [122] pushint8 16 ............................. <16>
  [124] gt ...................................... <iThumbsUp > 16>
  [125] jmpifz [150] ............................ if iThumbsUp > 16 then
  [128] pushint8 8 .............................. <8>
  [130] pusharglist 1 ........................... <8>
  [132] extcall 965 ............................. <sound(8)>
  [135] pushcons 130 ............................ <"plus_16">
  [137] pusharglist 1 ........................... <"plus_16">
  [139] extcall 4 ............................... <member("plus_16")>
  [141] pusharglistnoret 2 ...................... <sound(8), member("plus_16")>
  [143] objcall 941 ............................. sound(8).play(member("plus_16"))
  [146] pusharglistnoret 0 ...................... <>
  [148] extcall 71 .............................. return 
  [150] ret
end

on playThumbsDownSound me, iThumbsDown
  [  0] getparam 1 .............................. <iThumbsDown>
  [  2] pushint8 5 .............................. <5>
  [  4] lt ...................................... <iThumbsDown < 5>
  [  5] jmpifz [ 57] ............................ if iThumbsDown < 5 then
  [  8] pushcons 131 ............................ <"minus_1t1">
  [ 10] pushcons 132 ............................ <"minus_1t2">
  [ 12] pushcons 133 ............................ <"minus_1t3">
  [ 14] pusharglist 3 ........................... <["minus_1t1", "minus_1t2", "minus_1t3"]>
  [ 16] pushlist ................................ <["minus_1t1", "minus_1t2", "minus_1t3"]>
  [ 17] setlocal 0 .............................. aRandom = ["minus_1t1", "minus_1t2", "minus_1t3"]
  [ 19] getlocal 0 .............................. <aRandom>
  [ 21] getlocal 0 .............................. <aRandom>
  [ 23] getobjprop 42 ........................... <aRandom.count>
  [ 25] pusharglist 1 ........................... <aRandom.count>
  [ 27] extcall 246 ............................. <random(aRandom.count)>
  [ 29] pusharglist 2 ........................... <aRandom, random(aRandom.count)>
  [ 31] objcall 43 .............................. <aRandom[random(aRandom.count)]>
  [ 33] setlocal 1 .............................. sMember = aRandom[random(aRandom.count)]
  [ 35] pushint8 8 .............................. <8>
  [ 37] pusharglist 1 ........................... <8>
  [ 39] extcall 965 ............................. <sound(8)>
  [ 42] getlocal 1 .............................. <sMember>
  [ 44] pusharglist 1 ........................... <sMember>
  [ 46] extcall 4 ............................... <member(sMember)>
  [ 48] pusharglistnoret 2 ...................... <sound(8), member(sMember)>
  [ 50] objcall 941 ............................. sound(8).play(member(sMember))
  [ 53] pusharglistnoret 0 ...................... <>
  [ 55] extcall 71 .............................. return 
  [ 57] getparam 1 .............................. <iThumbsDown>
  [ 59] pushint8 10 ............................. <10>
  [ 61] lteq .................................... <iThumbsDown <= 10>
  [ 62] jmpifz [ 87] ............................ if iThumbsDown <= 10 then
  [ 65] pushint8 8 .............................. <8>
  [ 67] pusharglist 1 ........................... <8>
  [ 69] extcall 965 ............................. <sound(8)>
  [ 72] pushcons 134 ............................ <"minus_10">
  [ 74] pusharglist 1 ........................... <"minus_10">
  [ 76] extcall 4 ............................... <member("minus_10")>
  [ 78] pusharglistnoret 2 ...................... <sound(8), member("minus_10")>
  [ 80] objcall 941 ............................. sound(8).play(member("minus_10"))
  [ 83] pusharglistnoret 0 ...................... <>
  [ 85] extcall 71 .............................. return 
  [ 87] getparam 1 .............................. <iThumbsDown>
  [ 89] pushint8 10 ............................. <10>
  [ 91] gt ...................................... <iThumbsDown > 10>
  [ 92] jmpifz [117] ............................ if iThumbsDown > 10 then
  [ 95] pushint8 8 .............................. <8>
  [ 97] pusharglist 1 ........................... <8>
  [ 99] extcall 965 ............................. <sound(8)>
  [102] pushcons 135 ............................ <"minus_16">
  [104] pusharglist 1 ........................... <"minus_16">
  [106] extcall 4 ............................... <member("minus_16")>
  [108] pusharglistnoret 2 ...................... <sound(8), member("minus_16")>
  [110] objcall 941 ............................. sound(8).play(member("minus_16"))
  [113] pusharglistnoret 0 ...................... <>
  [115] extcall 71 .............................. return 
  [117] ret
end

on getcdplayer me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 722 ...................... <me.foRoom>
  [  5] pusharglist 1 ........................... <me.foRoom>
  [  7] objcall 744 ............................. <me.foRoom.getcdplayer()>
  [ 10] pusharglistnoret 1 ...................... <me.foRoom.getcdplayer()>
  [ 12] extcall 71 .............................. return me.foRoom.getcdplayer()
  [ 14] ret
end

on getGatewaySprite me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 3 ............................ <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 2 ............................... <sprite(me.spriteNum)>
  [  8] pusharglistnoret 1 ...................... <sprite(me.spriteNum)>
  [ 10] extcall 71 .............................. return sprite(me.spriteNum)
  [ 12] ret
end

on getMixerServer me
  [  0] getglobal 180 ........................... <oSession>
  [  2] getchainedprop 161 ...................... <oSession.fo_level0>
  [  4] pusharglist 1 ........................... <oSession.fo_level0>
  [  6] objcall 968 ............................. <oSession.fo_level0.getDefaultMixerServer()>
  [  9] pusharglistnoret 1 ...................... <oSession.fo_level0.getDefaultMixerServer()>
  [ 11] extcall 71 .............................. return oSession.fo_level0.getDefaultMixerServer()
  [ 13] ret
end

on receiveTrivia me, oCaller, sQuestion, sAnswer, iDisplayTime
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 136 ............................ <"recieveTrivia() sQuestion: ">
  [  4] getparam 2 .............................. <sQuestion>
  [  6] joinstr ................................. <"recieveTrivia() sQuestion: " & sQuestion>
  [  7] pushcons 137 ............................ <", sAnswer: ">
  [  9] joinstr ................................. <"recieveTrivia() sQuestion: " & sQuestion & ", sAnswer: ">
  [ 10] getparam 3 .............................. <sAnswer>
  [ 12] joinstr ................................. <"recieveTrivia() sQuestion: " & sQuestion & ", sAnswer: " & sAnswer>
  [ 13] pushcons 138 ............................ <", iSequenceRate: ">
  [ 15] joinstr ................................. <"recieveTrivia() sQuestion: " & sQuestion & ", sAnswer: " & sAnswer & ", iSequenceRate: ">
  [ 16] getparam 4 .............................. <iDisplayTime>
  [ 18] joinstr ................................. <"recieveTrivia() sQuestion: " & sQuestion & ", sAnswer: " & sAnswer & ", iSequenceRate: " & iDisplayTime>
  [ 19] pusharglistnoret 2 ...................... <me, "recieveTrivia() sQuestion: " & sQuestion & ", sAnswer: " & sAnswer & ", iSequenceRate: " & iDisplayTime>
  [ 21] objcall 20 .............................. me.debug("recieveTrivia() sQuestion: " & sQuestion & ", sAnswer: " & sAnswer & ", iSequenceRate: " & iDisplayTime)
  [ 23] getglobal 16 ............................ <oIsoScene>
  [ 25] pusharglist 1 ........................... <oIsoScene>
  [ 27] extcall 15 .............................. <voidp(oIsoScene)>
  [ 29] not ..................................... <not voidp(oIsoScene)>
  [ 30] jmpifz [ 49] ............................ if not voidp(oIsoScene) then
  [ 33] getglobal 16 ............................ <oIsoScene>
  [ 35] getchainedprop 969 ...................... <oIsoScene.oTrivia>
  [ 38] getparam 2 .............................. <sQuestion>
  [ 40] getparam 3 .............................. <sAnswer>
  [ 42] getparam 4 .............................. <iDisplayTime>
  [ 44] pusharglistnoret 4 ...................... <oIsoScene.oTrivia, sQuestion, sAnswer, iDisplayTime>
  [ 46] objcall 970 ............................. oIsoScene.oTrivia.displayTrivia(sQuestion, sAnswer, iDisplayTime)
  [ 49] ret
end

on getPossessionsInBackpack me, sScreenName, iPage, iPageSize
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 139 ............................ <"getPossessionsInBackpack() ">
  [  4] getparam 1 .............................. <sScreenName>
  [  6] joinstr ................................. <"getPossessionsInBackpack() " & sScreenName>
  [  7] getparam 2 .............................. <iPage>
  [  9] joinpadstr .............................. <"getPossessionsInBackpack() " & sScreenName && iPage>
  [ 10] getparam 3 .............................. <iPageSize>
  [ 12] joinpadstr .............................. <"getPossessionsInBackpack() " & sScreenName && iPage && iPageSize>
  [ 13] pusharglistnoret 2 ...................... <me, "getPossessionsInBackpack() " & sScreenName && iPage && iPageSize>
  [ 15] objcall 20 .............................. me.debug("getPossessionsInBackpack() " & sScreenName && iPage && iPageSize)
  [ 17] getparam 0 .............................. <me>
  [ 19] getchainedprop 722 ...................... <me.foRoom>
  [ 22] getparam 1 .............................. <sScreenName>
  [ 24] getparam 2 .............................. <iPage>
  [ 26] getparam 3 .............................. <iPageSize>
  [ 28] pusharglistnoret 4 ...................... <me.foRoom, sScreenName, iPage, iPageSize>
  [ 30] objcall 974 ............................. me.foRoom.sendGetPossessionsInBackpack(sScreenName, iPage, iPageSize)
  [ 33] ret
end

on receiveDisplayBackpack me, oCaller, oResult
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 140 ............................ <"receiveDisplayBackpack() ">
  [  4] pusharglistnoret 2 ...................... <me, "receiveDisplayBackpack() ">
  [  6] objcall 20 .............................. me.debug("receiveDisplayBackpack() ")
  [  8] getparam 2 .............................. <oResult>
  [ 10] pusharglist 1 ........................... <oResult>
  [ 12] objcall 201 ............................. <oResult.getTypeOf()>
  [ 14] pushcons 141 ............................ <"Backpack">
  [ 16] nteq .................................... <oResult.getTypeOf() <> "Backpack">
  [ 17] jmpifz [ 32] ............................ if oResult.getTypeOf() <> "Backpack" then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 142 ............................ <"receiveDisplayBackpack() ERROR">
  [ 24] pusharglistnoret 2 ...................... <me, "receiveDisplayBackpack() ERROR">
  [ 26] objcall 20 .............................. me.debug("receiveDisplayBackpack() ERROR")
  [ 28] pusharglistnoret 0 ...................... <>
  [ 30] extcall 71 .............................. return 
  [ 32] pushzero ................................ <0>
  [ 33] setlocal 0 .............................. iError = 0
  [ 35] getparam 0 .............................. <me>
  [ 37] pushcons 143 ............................ <"iError: ">
  [ 39] getlocal 0 .............................. <iError>
  [ 41] joinstr ................................. <"iError: " & iError>
  [ 42] pusharglistnoret 2 ...................... <me, "iError: " & iError>
  [ 44] objcall 20 .............................. me.debug("iError: " & iError)
  [ 46] getparam 2 .............................. <oResult>
  [ 48] pusharglist 1 ........................... <oResult>
  [ 50] objcall 569 ............................. <oResult.getCurrentPage()>
  [ 53] pusharglist 1 ........................... <oResult.getCurrentPage()>
  [ 55] extcall 48 .............................. <integer(oResult.getCurrentPage())>
  [ 57] setlocal 1 .............................. iCurrentPage = integer(oResult.getCurrentPage())
  [ 59] getparam 0 .............................. <me>
  [ 61] pushcons 144 ............................ <"iCurrentPage: ">
  [ 63] getlocal 1 .............................. <iCurrentPage>
  [ 65] joinstr ................................. <"iCurrentPage: " & iCurrentPage>
  [ 66] pusharglistnoret 2 ...................... <me, "iCurrentPage: " & iCurrentPage>
  [ 68] objcall 20 .............................. me.debug("iCurrentPage: " & iCurrentPage)
  [ 70] getparam 2 .............................. <oResult>
  [ 72] pusharglist 1 ........................... <oResult>
  [ 74] objcall 570 ............................. <oResult.getTotalPages()>
  [ 77] pusharglist 1 ........................... <oResult.getTotalPages()>
  [ 79] extcall 48 .............................. <integer(oResult.getTotalPages())>
  [ 81] setlocal 2 .............................. iTotalPages = integer(oResult.getTotalPages())
  [ 83] getparam 0 .............................. <me>
  [ 85] pushcons 145 ............................ <"iTotalPages: ">
  [ 87] getlocal 2 .............................. <iTotalPages>
  [ 89] joinstr ................................. <"iTotalPages: " & iTotalPages>
  [ 90] pusharglistnoret 2 ...................... <me, "iTotalPages: " & iTotalPages>
  [ 92] objcall 20 .............................. me.debug("iTotalPages: " & iTotalPages)
  [ 94] getparam 2 .............................. <oResult>
  [ 96] pusharglist 1 ........................... <oResult>
  [ 98] objcall 571 ............................. <oResult.getTotalItems()>
  [101] pusharglist 1 ........................... <oResult.getTotalItems()>
  [103] extcall 48 .............................. <integer(oResult.getTotalItems())>
  [105] setlocal 3 .............................. iTotalItems = integer(oResult.getTotalItems())
  [107] getparam 2 .............................. <oResult>
  [109] pusharglist 1 ........................... <oResult>
  [111] objcall 572 ............................. <oResult.getNumberOfBlankCds()>
  [114] pusharglist 1 ........................... <oResult.getNumberOfBlankCds()>
  [116] extcall 48 .............................. <integer(oResult.getNumberOfBlankCds())>
  [118] setlocal 4 .............................. iCds = integer(oResult.getNumberOfBlankCds())
  [120] getparam 0 .............................. <me>
  [122] pushcons 146 ............................ <"iCds: ">
  [124] getlocal 4 .............................. <iCds>
  [126] joinstr ................................. <"iCds: " & iCds>
  [127] pushint8 1 .............................. <1>
  [129] pusharglistnoret 3 ...................... <me, "iCds: " & iCds, 1>
  [131] objcall 20 .............................. me.debug("iCds: " & iCds, 1)
  [133] getparam 0 .............................. <me>
  [135] pushcons 147 ............................ <"iTotalItems: ">
  [137] getlocal 3 .............................. <iTotalItems>
  [139] joinstr ................................. <"iTotalItems: " & iTotalItems>
  [140] pusharglistnoret 2 ...................... <me, "iTotalItems: " & iTotalItems>
  [142] objcall 20 .............................. me.debug("iTotalItems: " & iTotalItems)
  [144] getparam 2 .............................. <oResult>
  [146] pusharglist 1 ........................... <oResult>
  [148] objcall 975 ............................. <oResult.getPossessions()>
  [151] setlocal 5 .............................. aPossessions = oResult.getPossessions()
  [153] getparam 0 .............................. <me>
  [155] pushcons 148 ............................ <"aPossessions: ">
  [157] getlocal 5 .............................. <aPossessions>
  [159] joinstr ................................. <"aPossessions: " & aPossessions>
  [160] pusharglistnoret 2 ...................... <me, "aPossessions: " & aPossessions>
  [162] objcall 20 .............................. me.debug("aPossessions: " & aPossessions)
  [164] pusharglist 0 ........................... <[]>
  [166] pushlist ................................ <[]>
  [167] setlocal 6 .............................. aProdList = []
  [169] getlocal 5 .............................. <aPossessions>
  [171] getobjprop 77 ........................... <aPossessions.length>
  [173] setlocal 7 .............................. iLength = aPossessions.length
  [175] pushzero ................................ <0>
  [176] setlocal 8
  [178] getlocal 8
  [180] getlocal 7 .............................. <iLength>
  [182] pushint8 1 .............................. <1>
  [184] sub ..................................... <iLength - 1>
  [185] lteq
  [186] jmpifz [380] ............................ repeat with i = 0 to iLength - 1
  [189] getlocal 5 .............................. <aPossessions>
  [191] getlocal 8 .............................. <i>
  [193] pusharglist 2 ........................... <aPossessions, i>
  [195] objcall 43 .............................. <aPossessions[i]>
  [197] setlocal 9 .............................. oItem = aPossessions[i]
  [199] getparam 0 .............................. <me>
  [201] pushcons 149 ............................ <"oItem: ">
  [203] getlocal 9 .............................. <oItem>
  [205] pusharglist 1 ........................... <oItem>
  [207] objcall 208 ............................. <oItem.toString()>
  [209] joinstr ................................. <"oItem: " & oItem.toString()>
  [210] pusharglistnoret 2 ...................... <me, "oItem: " & oItem.toString()>
  [212] objcall 20 .............................. me.debug("oItem: " & oItem.toString())
  [214] pusharglist 0 ........................... <[:]>
  [216] pushproplist ............................ <[:]>
  [217] setlocal 10 ............................. aItem = [:]
  [219] getlocal 10 ............................. <aItem>
  [221] pushsymb 519 ............................ <#prodID>
  [224] getlocal 9 .............................. <oItem>
  [226] pusharglist 1 ........................... <oItem>
  [228] objcall 574 ............................. <oItem.getCatalogItem()>
  [231] pusharglist 1 ........................... <oItem.getCatalogItem()>
  [233] extcall 48 .............................. <integer(oItem.getCatalogItem())>
  [235] pusharglistnoret 3 ...................... <aItem, #prodID, integer(oItem.getCatalogItem())>
  [237] objcall 73 .............................. aItem[#prodID] = integer(oItem.getCatalogItem())
  [239] getparam 0 .............................. <me>
  [241] pushcons 150 ............................ <"aItem: prodId: ">
  [243] getlocal 10 ............................. <aItem>
  [245] joinstr ................................. <"aItem: prodId: " & aItem>
  [246] pusharglistnoret 2 ...................... <me, "aItem: prodId: " & aItem>
  [248] objcall 20 .............................. me.debug("aItem: prodId: " & aItem)
  [250] getlocal 10 ............................. <aItem>
  [252] pushsymb 575 ............................ <#posId>
  [255] getlocal 9 .............................. <oItem>
  [257] pusharglist 1 ........................... <oItem>
  [259] objcall 520 ............................. <oItem.getId()>
  [262] pusharglist 1 ........................... <oItem.getId()>
  [264] extcall 48 .............................. <integer(oItem.getId())>
  [266] pusharglistnoret 3 ...................... <aItem, #posId, integer(oItem.getId())>
  [268] objcall 73 .............................. aItem[#posId] = integer(oItem.getId())
  [270] getparam 0 .............................. <me>
  [272] pushcons 151 ............................ <"aItem: posId: ">
  [274] getlocal 10 ............................. <aItem>
  [276] joinstr ................................. <"aItem: posId: " & aItem>
  [277] pusharglistnoret 2 ...................... <me, "aItem: posId: " & aItem>
  [279] objcall 20 .............................. me.debug("aItem: posId: " & aItem)
  [281] getlocal 9 .............................. <oItem>
  [283] pusharglist 1 ........................... <oItem>
  [285] objcall 576 ............................. <oItem.getProperties()>
  [288] setlocal 11 ............................. oProperties = oItem.getProperties()
  [290] getparam 0 .............................. <me>
  [292] pushcons 152 ............................ <"oProperties: ">
  [294] getlocal 11 ............................. <oProperties>
  [296] joinstr ................................. <"oProperties: " & oProperties>
  [297] pusharglistnoret 2 ...................... <me, "oProperties: " & oProperties>
  [299] objcall 20 .............................. me.debug("oProperties: " & oProperties)
  [301] getlocal 11 ............................. <oProperties>
  [303] pusharglist 1 ........................... <oProperties>
  [305] extcall 15 .............................. <voidp(oProperties)>
  [307] getlocal 11 ............................. <oProperties>
  [309] pusharglist 0 ........................... <>
  [311] extcall 190 ............................. <VOID>
  [313] eq ...................................... <oProperties = VOID>
  [314] or ...................................... <voidp(oProperties) or (oProperties = VOID)>
  [315] jmpifz [332] ............................ if voidp(oProperties) or (oProperties = VOID) then / else
  [318] getlocal 10 ............................. <aItem>
  [320] pushsymb 44 ............................. <#attributes>
  [322] pusharglist 0 ........................... <[:]>
  [324] pushproplist ............................ <[:]>
  [325] pusharglistnoret 3 ...................... <aItem, #attributes, [:]>
  [327] objcall 73 .............................. aItem[#attributes] = [:]
  [329] jmp [352]
  [332] getlocal 10 ............................. <aItem>
  [334] pushsymb 44 ............................. <#attributes>
  [336] getlocal 9 .............................. <oItem>
  [338] pusharglist 1 ........................... <oItem>
  [340] objcall 576 ............................. <oItem.getProperties()>
  [343] pusharglist 1 ........................... <oItem.getProperties()>
  [345] extcall 577 ............................. <value(oItem.getProperties())>
  [348] pusharglistnoret 3 ...................... <aItem, #attributes, value(oItem.getProperties())>
  [350] objcall 73 .............................. aItem[#attributes] = value(oItem.getProperties())
  [352] getparam 0 .............................. <me>
  [354] pushcons 153 ............................ <"aItem: attributes: ">
  [356] getlocal 10 ............................. <aItem>
  [358] joinstr ................................. <"aItem: attributes: " & aItem>
  [359] pusharglistnoret 2 ...................... <me, "aItem: attributes: " & aItem>
  [361] objcall 20 .............................. me.debug("aItem: attributes: " & aItem)
  [363] getlocal 6 .............................. <aProdList>
  [365] getlocal 10 ............................. <aItem>
  [367] pusharglistnoret 2 ...................... <aProdList, aItem>
  [369] objcall 55 .............................. aProdList.add(aItem)
  [371] pushint8 1
  [373] getlocal 8
  [375] add
  [376] setlocal 8
  [378] endrepeat [178]
  [380] getparam 0 .............................. <me>
  [382] pushcons 154 ............................ <"getPossessionsInBackpack_Result() iCurrentPage: ">
  [384] getlocal 1 .............................. <iCurrentPage>
  [386] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage>
  [387] pushcons 155 ............................ <", iTotalPages: ">
  [389] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: ">
  [390] getlocal 2 .............................. <iTotalPages>
  [392] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages>
  [393] pushcons 156 ............................ <", iTotalItems: ">
  [395] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: ">
  [396] getlocal 3 .............................. <iTotalItems>
  [398] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems>
  [399] pushcons 157 ............................ <", iCds: ">
  [401] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems & ", iCds: ">
  [402] getlocal 4 .............................. <iCds>
  [404] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems & ", iCds: " & iCds>
  [405] pushcons 158 ............................ <",  aProdList: ">
  [407] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems & ", iCds: " & iCds & ",  aProdList: ">
  [408] getlocal 6 .............................. <aProdList>
  [410] joinstr ................................. <"getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems & ", iCds: " & iCds & ",  aProdList: " & aProdList>
  [411] pusharglistnoret 2 ...................... <me, "getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems & ", iCds: " & iCds & ",  aProdList: " & aProdList>
  [413] objcall 20 .............................. me.debug("getPossessionsInBackpack_Result() iCurrentPage: " & iCurrentPage & ", iTotalPages: " & iTotalPages & ", iTotalItems: " & iTotalItems & ", iCds: " & iCds & ",  aProdList: " & aProdList)
  [415] getglobal 153 ........................... <ElementMgr>
  [417] pusharglist 1 ........................... <ElementMgr>
  [419] extcall 15 .............................. <voidp(ElementMgr)>
  [421] not ..................................... <not voidp(ElementMgr)>
  [422] jmpifz [444] ............................ if not voidp(ElementMgr) then
  [425] getglobal 153 ........................... <ElementMgr>
  [427] getlocal 0 .............................. <iError>
  [429] getlocal 6 .............................. <aProdList>
  [431] getlocal 1 .............................. <iCurrentPage>
  [433] getlocal 2 .............................. <iTotalPages>
  [435] getlocal 3 .............................. <iTotalItems>
  [437] getlocal 4 .............................. <iCds>
  [439] pusharglistnoret 7 ...................... <ElementMgr, iError, aProdList, iCurrentPage, iTotalPages, iTotalItems, iCds>
  [441] objcall 535 ............................. ElementMgr.getPossessionsInBackpack_Result(iError, aProdList, iCurrentPage, iTotalPages, iTotalItems, iCds)
  [444] ret
end

on removePossessionFromBackpack me, iPosId, bTrade
  [  0] getglobal 193 ........................... <oDenizenManager>
  [  2] pusharglist 1 ........................... <oDenizenManager>
  [  4] objcall 214 ............................. <oDenizenManager.getBackpack()>
  [  6] setlocal 0 .............................. oBackPack = oDenizenManager.getBackpack()
  [  8] getlocal 0 .............................. <oBackPack>
  [ 10] pusharglist 1 ........................... <oBackPack>
  [ 12] extcall 15 .............................. <voidp(oBackPack)>
  [ 14] not ..................................... <not voidp(oBackPack)>
  [ 15] jmpifz [ 95] ............................ if not voidp(oBackPack) then
  [ 18] getlocal 0 .............................. <oBackPack>
  [ 20] getparam 1 .............................. <iPosId>
  [ 22] pusharglist 1 ........................... <iPosId>
  [ 24] extcall 48 .............................. <integer(iPosId)>
  [ 26] pusharglist 2 ........................... <oBackPack, integer(iPosId)>
  [ 28] objcall 837 ............................. <oBackPack.getPossessionById(integer(iPosId))>
  [ 31] setlocal 1 .............................. oPos = oBackPack.getPossessionById(integer(iPosId))
  [ 33] getlocal 1 .............................. <oPos>
  [ 35] pusharglist 1 ........................... <oPos>
  [ 37] extcall 15 .............................. <voidp(oPos)>
  [ 39] not ..................................... <not voidp(oPos)>
  [ 40] jmpifz [ 95] ............................ if not voidp(oPos) then
  [ 43] getlocal 0 .............................. <oBackPack>
  [ 45] getparam 1 .............................. <iPosId>
  [ 47] pusharglist 1 ........................... <iPosId>
  [ 49] extcall 48 .............................. <integer(iPosId)>
  [ 51] pusharglistnoret 2 ...................... <oBackPack, integer(iPosId)>
  [ 53] objcall 977 ............................. oBackPack.removePossessionById(integer(iPosId))
  [ 56] pushsymb 978 ............................ <#getBackpackCurrentPage>
  [ 59] pusharglist 1 ........................... <#getBackpackCurrentPage>
  [ 61] extcall 177 ............................. <sendAllSprites(#getBackpackCurrentPage)>
  [ 63] setlocal 2 .............................. iCurrentPage = sendAllSprites(#getBackpackCurrentPage)
  [ 65] getlocal 2 .............................. <iCurrentPage>
  [ 67] pusharglist 1 ........................... <iCurrentPage>
  [ 69] extcall 15 .............................. <voidp(iCurrentPage)>
  [ 71] jmpifz [ 78] ............................ if voidp(iCurrentPage) then
  [ 74] pushint8 1 .............................. <1>
  [ 76] setlocal 2 .............................. iCurrentPage = 1
  [ 78] getglobal 213 ........................... <oPossessionManager>
  [ 80] getglobal 193 ........................... <oDenizenManager>
  [ 82] pusharglist 1 ........................... <oDenizenManager>
  [ 84] objcall 198 ............................. <oDenizenManager.getScreenName()>
  [ 86] getlocal 2 .............................. <iCurrentPage>
  [ 88] pushint8 25 ............................. <25>
  [ 90] pusharglistnoret 4 ...................... <oPossessionManager, oDenizenManager.getScreenName(), iCurrentPage, 25>
  [ 92] objcall 528 ............................. oPossessionManager.getPossessionsInBackpack(oDenizenManager.getScreenName(), iCurrentPage, 25)
  [ 95] ret
end

on sendJukeboxRequest me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 722 ...................... <me.foRoom>
  [  5] pusharglistnoret 1 ...................... <me.foRoom>
  [  7] objcall 810 ............................. me.foRoom.sendJukeboxRequest()
  [ 10] ret
end

on sendJukeboxPlay me, iSongId
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 722 ...................... <me.foRoom>
  [  5] getparam 1 .............................. <iSongId>
  [  7] pusharglistnoret 2 ...................... <me.foRoom, iSongId>
  [  9] objcall 811 ............................. me.foRoom.sendJukeboxPlay(iSongId)
  [ 12] ret
end

on sendJukeboxStop me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 722 ...................... <me.foRoom>
  [  5] pusharglistnoret 1 ...................... <me.foRoom>
  [  7] objcall 812 ............................. me.foRoom.sendJukeboxStop()
  [ 10] ret
end

on sendJukeboxEnd me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 722 ...................... <me.foRoom>
  [  5] pusharglistnoret 1 ...................... <me.foRoom>
  [  7] objcall 813 ............................. me.foRoom.sendJukeboxEnd()
  [ 10] ret
end

on receiveJukeboxRequestAccepted me
  [  0] getglobal 153 ........................... <ElementMgr>
  [  2] pusharglistnoret 1 ...................... <ElementMgr>
  [  4] objcall 981 ............................. ElementMgr.openjukeboxplayer()
  [  7] getglobal 193 ........................... <oDenizenManager>
  [  9] pusharglistnoret 1 ...................... <oDenizenManager>
  [ 11] objcall 316 ............................. oDenizenManager.getAvailableTokens()
  [ 14] ret
end

on receivePlaylistEmpty me
  [  0] getglobal 153 ........................... <ElementMgr>
  [  2] pushcons 159 ............................ <"ALERT_IJ_PLAYLIST">
  [  4] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_PLAYLIST">
  [  6] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_PLAYLIST")
  [  8] ret
end

on receiveJukeboxWaitTurn
  [  0] getglobal 153 ........................... <ElementMgr>
  [  2] pushcons 111 ............................ <"CHOOSE_SONG_WAIT_TURN">
  [  4] pusharglistnoret 2 ...................... <ElementMgr, "CHOOSE_SONG_WAIT_TURN">
  [  6] objcall 206 ............................. ElementMgr.alert("CHOOSE_SONG_WAIT_TURN")
  [  8] ret
end

on receiveJukeboxPlay me, oCaller, sAvatar, oSongData
  [  0] getparam 3 .............................. <oSongData>
  [  2] setprop 982 ............................. foSongPlaying = oSongData
  [  5] getparam 2 .............................. <sAvatar>
  [  7] setprop 983 ............................. sIJsongplayer = sAvatar
  [ 10] pushint8 1 .............................. <1>
  [ 12] setlocal 0
  [ 14] getlocal 0
  [ 16] getglobal 153 ........................... <ElementMgr>
  [ 18] getobjprop 984 .......................... <ElementMgr.pOpenWindows>
  [ 21] pusharglist 1 ........................... <ElementMgr.pOpenWindows>
  [ 23] extcall 42 .............................. <count(ElementMgr.pOpenWindows)>
  [ 25] lteq
  [ 26] jmpifz [ 74] ............................ repeat with n = 1 to count(ElementMgr.pOpenWindows)
  [ 29] getglobal 153 ........................... <ElementMgr>
  [ 31] pushsymb 984 ............................ <#pOpenWindows>
  [ 34] getlocal 0 .............................. <n>
  [ 36] pusharglist 3 ........................... <ElementMgr, #pOpenWindows, n>
  [ 38] objcall 72 .............................. <ElementMgr.pOpenWindows[n]>
  [ 40] getobjprop 985 .......................... <ElementMgr.pOpenWindows[n].pname>
  [ 43] pushcons 160 ............................ <"cc_jukebox.playback">
  [ 45] eq ...................................... <ElementMgr.pOpenWindows[n].pname = "cc_jukebox.playback">
  [ 46] jmpifz [ 65] ............................ if ElementMgr.pOpenWindows[n].pname = "cc_jukebox.playback" then
  [ 49] getglobal 153 ........................... <ElementMgr>
  [ 51] pushsymb 984 ............................ <#pOpenWindows>
  [ 54] getlocal 0 .............................. <n>
  [ 56] pusharglist 3 ........................... <ElementMgr, #pOpenWindows, n>
  [ 58] objcall 72 .............................. <ElementMgr.pOpenWindows[n]>
  [ 60] pusharglistnoret 1 ...................... <ElementMgr.pOpenWindows[n]>
  [ 62] objcall 886 ............................. ElementMgr.pOpenWindows[n].closeWindow()
  [ 65] pushint8 1
  [ 67] getlocal 0
  [ 69] add
  [ 70] setlocal 0
  [ 72] endrepeat [ 14]
  [ 74] getglobal 16 ............................ <oIsoScene>
  [ 76] getchainedprop 949 ...................... <oIsoScene.oInfoStand>
  [ 79] getparam 3 .............................. <oSongData>
  [ 81] getparam 2 .............................. <sAvatar>
  [ 83] pusharglistnoret 3 ...................... <oIsoScene.oInfoStand, oSongData, sAvatar>
  [ 85] objcall 986 ............................. oIsoScene.oInfoStand.displaySong(oSongData, sAvatar)
  [ 88] pushsymb 750 ............................ <#getheadlessplayer>
  [ 91] pusharglist 1 ........................... <#getheadlessplayer>
  [ 93] extcall 177 ............................. <sendAllSprites(#getheadlessplayer)>
  [ 95] setlocal 1 .............................. myheadlessplayer = sendAllSprites(#getheadlessplayer)
  [ 97] getlocal 1 .............................. <myheadlessplayer>
  [ 99] pusharglist 1 ........................... <myheadlessplayer>
  [101] extcall 15 .............................. <voidp(myheadlessplayer)>
  [103] jmpifz [210] ............................ if voidp(myheadlessplayer) then
  [106] getglobal 153 ........................... <ElementMgr>
  [108] pusharglist 1 ........................... <ElementMgr>
  [110] objcall 987 ............................. <ElementMgr.LastUsedSprite()>
  [113] setlocal 1 .............................. myheadlessplayer = ElementMgr.LastUsedSprite()
  [115] getlocal 1 .............................. <myheadlessplayer>
  [117] pushint8 1 .............................. <1>
  [119] pusharglistnoret 2 ...................... <myheadlessplayer, 1>
  [121] extcall 988 ............................. puppetSprite(myheadlessplayer, 1)
  [124] getlocal 1 .............................. <myheadlessplayer>
  [126] pusharglist 1 ........................... <myheadlessplayer>
  [128] extcall 2 ............................... <sprite(myheadlessplayer)>
  [130] pushzero ................................ <0>
  [131] pushzero ................................ <0>
  [132] pushint8 1 .............................. <1>
  [134] pushint8 1 .............................. <1>
  [136] pusharglist 4 ........................... <0, 0, 1, 1>
  [138] extcall 989 ............................. <rect(0, 0, 1, 1)>
  [141] setobjprop 989 .......................... sprite(myheadlessplayer).rect = rect(0, 0, 1, 1)
  [144] getlocal 1 .............................. <myheadlessplayer>
  [146] pusharglist 1 ........................... <myheadlessplayer>
  [148] extcall 2 ............................... <sprite(myheadlessplayer)>
  [150] pushcons 161 ............................ <"ftm_coke_player">
  [152] pusharglist 1 ........................... <"ftm_coke_player">
  [154] extcall 4 ............................... <member("ftm_coke_player")>
  [156] setobjprop 4 ............................ sprite(myheadlessplayer).member = member("ftm_coke_player")
  [158] getlocal 1 .............................. <myheadlessplayer>
  [160] pusharglist 1 ........................... <myheadlessplayer>
  [162] extcall 2 ............................... <sprite(myheadlessplayer)>
  [164] pushcons 162 ............................ <"headless player script">
  [166] pusharglist 1 ........................... <"headless player script">
  [168] extcall 148 ............................. <script("headless player script")>
  [170] pusharglist 1 ........................... <script("headless player script")>
  [172] extcall 149 ............................. <new(script("headless player script"))>
  [174] pusharglist 1 ........................... <[new(script("headless player script"))]>
  [176] pushlist ................................ <[new(script("headless player script"))]>
  [177] setobjprop 990 .......................... sprite(myheadlessplayer).scriptInstanceList = [new(script("headless player script"))]
  [180] pusharglistnoret 0 ...................... <>
  [182] extcall 940 ............................. updateStage()
  [185] getlocal 1 .............................. <myheadlessplayer>
  [187] pusharglist 1 ........................... <myheadlessplayer>
  [189] extcall 2 ............................... <sprite(myheadlessplayer)>
  [191] pushzero ................................ <0>
  [192] pushzero ................................ <0>
  [193] pushint8 1 .............................. <1>
  [195] pushint8 1 .............................. <1>
  [197] pusharglist 4 ........................... <0, 0, 1, 1>
  [199] extcall 989 ............................. <rect(0, 0, 1, 1)>
  [202] setobjprop 989 .......................... sprite(myheadlessplayer).rect = rect(0, 0, 1, 1)
  [205] pusharglistnoret 0 ...................... <>
  [207] extcall 940 ............................. updateStage()
  [210] getlocal 1 .............................. <myheadlessplayer>
  [212] pusharglist 1 ........................... <myheadlessplayer>
  [214] extcall 2 ............................... <sprite(myheadlessplayer)>
  [216] pusharglistnoret 1 ...................... <sprite(myheadlessplayer)>
  [218] objcall 751 ............................. sprite(myheadlessplayer).stopSong()
  [221] getparam 0 .............................. <me>
  [223] getlocal 1 .............................. <myheadlessplayer>
  [225] pusharglist 1 ........................... <myheadlessplayer>
  [227] extcall 2 ............................... <sprite(myheadlessplayer)>
  [229] pushcons 163 ............................ <"_root">
  [231] pushzero ................................ <0>
  [232] pusharglist 3 ........................... <sprite(myheadlessplayer), "_root", 0>
  [234] objcall 160 ............................. <sprite(myheadlessplayer).getVariable("_root", 0)>
  [236] setobjprop 161 .......................... me.fo_level0 = sprite(myheadlessplayer).getVariable("_root", 0)
  [238] getparam 0 .............................. <me>
  [240] getchainedprop 161 ...................... <me.fo_level0>
  [242] getparam 3 .............................. <oSongData>
  [244] pusharglist 1 ........................... <oSongData>
  [246] objcall 991 ............................. <oSongData.getsongpath()>
  [249] pusharglistnoret 2 ...................... <me.fo_level0, oSongData.getsongpath()>
  [251] objcall 992 ............................. me.fo_level0.playsong(oSongData.getsongpath())
  [254] getparam 0 .............................. <me>
  [256] getchainedprop 161 ...................... <me.fo_level0>
  [258] getglobal 993 ........................... <gSoundLevel>
  [261] pusharglistnoret 2 ...................... <me.fo_level0, gSoundLevel>
  [263] objcall 994 ............................. me.fo_level0.setVolume(gSoundLevel)
  [266] getlocal 1 .............................. <myheadlessplayer>
  [268] pusharglist 1 ........................... <myheadlessplayer>
  [270] extcall 2 ............................... <sprite(myheadlessplayer)>
  [272] pushsymb 995 ............................ <#room>
  [275] setobjprop 996 .......................... sprite(myheadlessplayer).pmode = #room
  [278] ret
end

on receiveJukeboxStop me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 190 ............................. <VOID>
  [  4] setprop 982 ............................. foSongPlaying = VOID
  [  7] pusharglist 0 ........................... <>
  [  9] extcall 190 ............................. <VOID>
  [ 11] setprop 983 ............................. sIJsongplayer = VOID
  [ 14] getglobal 153 ........................... <ElementMgr>
  [ 16] getobjprop 497 .......................... <ElementMgr.oJukebox>
  [ 19] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 21] extcall 15 .............................. <voidp(ElementMgr.oJukebox)>
  [ 23] pushzero ................................ <0>
  [ 24] eq ...................................... <voidp(ElementMgr.oJukebox) = 0>
  [ 25] jmpifz [ 72] ............................ if voidp(ElementMgr.oJukebox) = 0 then
  [ 28] getglobal 153 ........................... <ElementMgr>
  [ 30] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 33] pusharglist 1 ........................... <ElementMgr.oJukebox>
  [ 35] objcall 500 ............................. <ElementMgr.oJukebox.getOpenWindow()>
  [ 38] setlocal 0 .............................. mywindow = ElementMgr.oJukebox.getOpenWindow()
  [ 40] getlocal 0 .............................. <mywindow>
  [ 42] pusharglist 1 ........................... <mywindow>
  [ 44] extcall 15 .............................. <voidp(mywindow)>
  [ 46] pushzero ................................ <0>
  [ 47] eq ...................................... <voidp(mywindow) = 0>
  [ 48] jmpifz [ 72] ............................ if voidp(mywindow) = 0 then
  [ 51] getlocal 0 .............................. <mywindow>
  [ 53] getobjprop 985 .......................... <mywindow.pname>
  [ 56] pushcons 160 ............................ <"cc_jukebox.playback">
  [ 58] eq ...................................... <mywindow.pname = "cc_jukebox.playback">
  [ 59] jmpifz [ 72] ............................ if mywindow.pname = "cc_jukebox.playback" then
  [ 62] getglobal 153 ........................... <ElementMgr>
  [ 64] getchainedprop 497 ...................... <ElementMgr.oJukebox>
  [ 67] pusharglistnoret 1 ...................... <ElementMgr.oJukebox>
  [ 69] objcall 886 ............................. ElementMgr.oJukebox.closeWindow()
  [ 72] pushsymb 750 ............................ <#getheadlessplayer>
  [ 75] pusharglist 1 ........................... <#getheadlessplayer>
  [ 77] extcall 177 ............................. <sendAllSprites(#getheadlessplayer)>
  [ 79] setlocal 1 .............................. myheadlessplayer = sendAllSprites(#getheadlessplayer)
  [ 81] getlocal 1 .............................. <myheadlessplayer>
  [ 83] pusharglist 1 ........................... <myheadlessplayer>
  [ 85] extcall 2 ............................... <sprite(myheadlessplayer)>
  [ 87] pusharglistnoret 1 ...................... <sprite(myheadlessplayer)>
  [ 89] objcall 751 ............................. sprite(myheadlessplayer).stopSong()
  [ 92] getlocal 1 .............................. <myheadlessplayer>
  [ 94] pusharglist 1 ........................... <myheadlessplayer>
  [ 96] extcall 2 ............................... <sprite(myheadlessplayer)>
  [ 98] pushsymb 999 ............................ <#idle>
  [101] setobjprop 996 .......................... sprite(myheadlessplayer).pmode = #idle
  [104] getglobal 16 ............................ <oIsoScene>
  [106] getchainedprop 949 ...................... <oIsoScene.oInfoStand>
  [109] getglobal 16 ............................ <oIsoScene>
  [111] getobjprop 950 .......................... <oIsoScene.oSelectedItem>
  [114] pusharglistnoret 2 ...................... <oIsoScene.oInfoStand, oIsoScene.oSelectedItem>
  [116] objcall 951 ............................. oIsoScene.oInfoStand.display(oIsoScene.oSelectedItem)
  [119] ret
end

on receiveJukeboxLock me, oCaller, bLocked
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getglobal 16 ............................ <oIsoScene>
  [  8] getchainedprop 1001 ..................... <oIsoScene.oFurniture>
  [ 11] getobjprop 1002 ......................... <oIsoScene.oFurniture.aItems>
  [ 14] pusharglist 1 ........................... <oIsoScene.oFurniture.aItems>
  [ 16] extcall 42 .............................. <count(oIsoScene.oFurniture.aItems)>
  [ 18] lteq
  [ 19] jmpifz [ 75] ............................ repeat with n = 1 to count(oIsoScene.oFurniture.aItems)
  [ 22] getglobal 16 ............................ <oIsoScene>
  [ 24] getchainedprop 1001 ..................... <oIsoScene.oFurniture>
  [ 27] pushsymb 1002 ........................... <#aItems>
  [ 30] getlocal 0 .............................. <n>
  [ 32] pusharglist 3 ........................... <oIsoScene.oFurniture, #aItems, n>
  [ 34] objcall 75 .............................. <oIsoScene.oFurniture.aItems[n]>
  [ 36] pusharglist 1 ........................... <oIsoScene.oFurniture.aItems[n]>
  [ 38] extcall 560 ............................. <string(oIsoScene.oFurniture.aItems[n])>
  [ 41] pushcons 164 ............................ <"infinite_jukebox">
  [ 43] containsstr ............................. <string(oIsoScene.oFurniture.aItems[n]) contains "infinite_jukebox">
  [ 44] jmpifz [ 66] ............................ if string(oIsoScene.oFurniture.aItems[n]) contains "infinite_jukebox" then
  [ 47] getglobal 16 ............................ <oIsoScene>
  [ 49] getchainedprop 1001 ..................... <oIsoScene.oFurniture>
  [ 52] pushsymb 1002 ........................... <#aItems>
  [ 55] getlocal 0 .............................. <n>
  [ 57] pusharglist 3 ........................... <oIsoScene.oFurniture, #aItems, n>
  [ 59] objcall 75 .............................. <oIsoScene.oFurniture.aItems[n]>
  [ 61] setlocal 1 .............................. myitem = oIsoScene.oFurniture.aItems[n]
  [ 63] jmp [ 75] ............................... exit repeat
  [ 66] pushint8 1
  [ 68] getlocal 0
  [ 70] add
  [ 71] setlocal 0
  [ 73] endrepeat [  4]
  [ 75] getlocal 1 .............................. <myitem>
  [ 77] getparam 2 .............................. <bLocked>
  [ 79] pusharglistnoret 2 ...................... <myitem, bLocked>
  [ 81] objcall 1003 ............................ myitem.setState(bLocked)
  [ 84] ret
end

on receiveNotEnoughTokens me
  [  0] getglobal 153 ........................... <ElementMgr>
  [  2] pushcons 165 ............................ <"ALERT_IJ_TOKENS">
  [  4] pusharglistnoret 2 ...................... <ElementMgr, "ALERT_IJ_TOKENS">
  [  6] objcall 206 ............................. ElementMgr.alert("ALERT_IJ_TOKENS")
  [  8] ret
end
